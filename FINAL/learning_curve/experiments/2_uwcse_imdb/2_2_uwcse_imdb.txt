Starting experiment #2 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.44905802600860323;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.14386322081379804;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( hasposition(B, H), ta(I, A, J) )
%   | | | then return 0.6522665821583351;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | | else return 0.48037115732173363;  // std dev = 3,252, 45,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   else return -0.1418510649004881;  // std dev = 0,000, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then if ( publication(E, F), professor(F) )
%   | | | then return 0.021552096095384568;  // std dev = 2,001, 23,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.5442835867510752;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.6400170919955652;  // std dev = 1,880, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.45811004975943614;  // std dev = 3,278, 48,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   else return -0.12544463852839138;  // std dev = 2,11e-08, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.22203310341295115;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.44425532563517345;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), professor(J) )
%   | | | then return 0.08183603144972487;  // std dev = 2,577, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.47539531635915083;  // std dev = 1,276, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.3207013084540661;  // std dev = 3,305, 49,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=32 */
%   | | | else return 0.48505299720569495;  // std dev = 2,057, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   else return -0.11231637819360625;  // std dev = 9,42e-08, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(H, A), publication(H, B) )
%   | | | then return 0.36858548130830293;  // std dev = 0,917, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.006543485684003331;  // std dev = 1,459, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.3386874965293697;  // std dev = 3,239, 68,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=52 */
%   | | | else return 0.44930547330893067;  // std dev = 1,783, 39,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then return 0.3612586037244647;  // std dev = 0,724, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(L, B), ta(M, A, N) )
%   | | | then return 0.25566558966244446;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.05917668064609651;  // std dev = 1,473, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( ta(P, A, Q) )
%   | then return -0.11376036359493875;  // std dev = 0,060, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.0968058691891077;  // std dev = 0,057, 145,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3419454279865277;  // std dev = 0,177, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( ta(F, E, G) )
%   | | | then return -0.2346954359804804;  // std dev = 0,884, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.3726961442825983;  // std dev = 1,151, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.532719799603016;  // std dev = 0,079, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24275684890157967;  // std dev = 3,987, 82,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=59 */
%   else return -0.09274127321303331;  // std dev = 0,009, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B) )
%   | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.2794397715254574;  // std dev = 0,123, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return -0.09123617097536663;  // std dev = 1,417, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.15612360749287302;  // std dev = 4,056, 90,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=66 */
%   | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | then if ( ta(K, A, L), ta(K, M, J) )
%   | | | then return -0.5221194117600528;  // std dev = 0,184, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.033833952212718045;  // std dev = 1,166, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( projectmember(N, B) )
%   | | | then return 0.3094284131789724;  // std dev = 0,798, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.053353146538263195;  // std dev = 1,701, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( ta(P, A, Q) )
%   | then return -0.10053886730807218;  // std dev = 0,079, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07991516008219152;  // std dev = 0,060, 114,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, A), tempadvisedby(E, B) )
%   | | then return 0.22688323831379226;  // std dev = 0,108, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(C, F), ta(G, F, H) )
%   | | | then return 0.13141711876473391;  // std dev = 1,911, 24,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return -0.08651362341015521;  // std dev = 1,569, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( ta(I, A, J) )
%   | | then if ( ta(I, K, J), tempadvisedby(K, L) )
%   | | | then return -0.050223043236696775;  // std dev = 1,123, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.24268687786653662;  // std dev = 1,706, 30,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | else if ( publication(M, A), tempadvisedby(N, B) )
%   | | | then return 0.0015679500317616751;  // std dev = 0,893, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.30916577726174693;  // std dev = 2,068, 35,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   else return -0.07888709437665456;  // std dev = 0,016, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(C, F), publication(E, F) )
%   | | | then return -0.20765472749776911;  // std dev = 1,333, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.05010898787111184;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.18663565052515318;  // std dev = 0,037, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.12590097178353152;  // std dev = 0,970, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( tempadvisedby(H, B) )
%   | | then if ( ta(I, H, J), publication(K, B) )
%   | | | then return 0.0780175049825673;  // std dev = 2,108, 30,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return -0.10520587243800227;  // std dev = 3,168, 49,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | else if ( ta(L, A, M), publication(N, B) )
%   | | | then return 0.11688762278133083;  // std dev = 1,810, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return -7.300460574211613E-5;  // std dev = 2,652, 31,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   else return -0.07337127350692452;  // std dev = 0,015, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.16852616796336406;  // std dev = 0,000581, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.04684169894230672;  // std dev = 0,734, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(E, I), professor(I) )
%   | | | then return 0.1503821910528612;  // std dev = 1,337, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.3966201212549425;  // std dev = 0,158, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | then if ( publication(M, B) )
%   | | | then return 0.14236257524441245;  // std dev = 1,858, 36,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | | | else return -0.1544293446801429;  // std dev = 0,949, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( ta(N, A, P), tempadvisedby(Q, B) )
%   | | | then return -0.17656850221376838;  // std dev = 1,806, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.05461512995721217;  // std dev = 3,536, 77,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=53 */
%   else return -0.06851191499706893;  // std dev = 0,014, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( student(A) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, E, G), ta(F, A, H) )
%   | | | then return 0.021188597666644514;  // std dev = 1,755, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.15465891043180915;  // std dev = 2,939, 96,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=82 */
%   | | else return -0.2659897208912604;  // std dev = 1,177, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.06477637810650994;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( tempadvisedby(I, B), student(A) )
%   | then if ( projectmember(J, B) )
%   | | then if ( inphase(A, K), inphase(I, K) )
%   | | | then return 0.34121920578219617;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.053474065984564036;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(L, A) )
%   | | | then return -0.24913905333728756;  // std dev = 0,966, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07491700568833233;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.06756512869783339;  // std dev = 0,137, 167,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=5 */


Starting fold 1

Target train facts examples: 537
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 159
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8,69e-08, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8,69e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.051975528918719316;  // std dev = 0,153, 136,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34261055384603056;  // std dev = 0,353, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then return -0.09390792761372527;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09694955617488608;  // std dev = 2,98e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25103254822684434;  // std dev = 4,71e-08, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08508998763720067;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04694732439874831;  // std dev = 0,129, 136,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23740286974678956;  // std dev = 0,493, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.08089636710915388;  // std dev = 0,009, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08506133146833877;  // std dev = 1,49e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.1978654272474887;  // std dev = 0,440, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07478883795163511;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0786707659353681;  // std dev = 2,58e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16882031491803354;  // std dev = 0,394, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06956940180635506;  // std dev = 0,009, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07315427309692348;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11600895356350248;  // std dev = 0,085, 76,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=65 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06834648395322293;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06834648395322306;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06834648395322294;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067398
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.334 seconds
Total inference time: 1.554 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069304
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.84 seconds
Parameter learned model CLL: -0.069304


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 18, 0], 'true,true': [0.0, 0, 65], 'false': [0.0, 129, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 8, 0], 'true,true': [1.19e-07, 0, 65], 'false': [8.69e-08, 136, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [7.45e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.69e-07, 0, 65], 'true,false,true,false': [0.0, 0, 0], 'false': [8.69e-08, 124, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 11, 0], 'false': [0.153, 123, 13], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 52]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.353, 0, 65], 'true,false,true': [0.002, 7, 0], 'false': [2.98e-08, 119, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [4.71e-08, 0, 52], 'true,true,false,true': [3.73e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false': [0.129, 123, 13], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.493, 0, 65], 'true,true,false,true': [0.009, 9, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 131, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.44, 0, 65], 'true,false,true': [0.007, 7, 0], 'false': [2.58e-08, 123, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.394, 0, 65], 'true,true,false,true': [0.009, 12, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 118, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [0.0, 101, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.085, 11, 65], 'false,false': [0.0, 14, 0], 'true,false': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.16983597038757356, -1.0327656043024712e-17], 'true': [-8.745141363201234e-16, -3.0839528461809902e-18], 'true,false,true': [-3.0839528461809902e-18, nan], 'true,false': [-3.0839528461809902e-18, nan]}, {'': [0.06966053414935142, 5.551115123125783e-17], 'true': [2.1862853408003084e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.055184772173948994, 6.088319812460535e-17], 'true': [4.372570681600617e-16, 5.046468293750712e-18], 'true,true': [4.372570681600617e-16, nan], 'true,true,true': [4.372570681600617e-16, nan], 'true,false,true': [5.046468293750712e-18, nan], 'true,false': [5.046468293750712e-18, nan]}, {'': [0.03883591801434747, 0.023296425649366976], 'true': [0.03883591801434747, nan], 'true,true,true': [-3.75767792950053e-16, -6.308085367188389e-18], 'true,true': [0.03883591801434747, nan]}, {'': [0.018456523711076683, 7.463684199160716e-18], 'true': [0.001918213418056698, 3.7006017216292027e-06], 'true,false': [3.7006017216292027e-06, nan]}, {'': [0.016282091563156197, 0.016566102296960566], 'true': [0.016282091563156197, nan], 'true,true,false': [1.261617073437678e-18, nan], 'true,true': [4.2700885562506023e-17, 1.261617073437678e-18]}, {'': [0.014108838131034135, 1.6949969841605443e-18], 'true': [0.014108838131034135, nan], 'true,true,false': [9.688717467397973e-06, nan], 'true,true': [0.0037390059194615482, 9.688717467397973e-06]}, {'': [0.009214791357952236, 5.415722071342227e-18], 'true': [0.0029787834456026932, 7.764649750169725e-06], 'true,true,true': [0.0029787834456026932, nan], 'true,false': [7.764649750169725e-06, nan], 'true,true': [0.0029787834456026932, nan]}, {'': [0.009494995585160966, 0.0], 'true': [0.009494995585160966, nan], 'true,true,false': [6.279317049649504e-06, nan], 'true,true': [0.0023901886602031366, 6.279317049649504e-06]}, {'': [0.008222899342410194, -2.413528314402514e-17], 'true': [0.007256844663892381, 0.0], 'false,true': [-1.5389230044309102e-17, nan], 'false': [-1.5389230044309102e-17, -1.982541115402065e-18], 'true,true': [0.007256844663892381, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048774;  // std dev = 4,71e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360624;  // std dev = 7,88e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.37032177382684206;  // std dev = 0,149, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.2877361057467734;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.10159632948783631;  // std dev = 1,49e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3236408046530588;  // std dev = 0,055, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10708662414852033;  // std dev = 0,071, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.09269127618926105;  // std dev = 2,36e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.21043958469124532;  // std dev = 0,114, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0.24435276634350636;  // std dev = 0,058, 33,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.26744721068847094;  // std dev = 0,025, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.1222966337605449;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839685;  // std dev = 4,59e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2142900469915565;  // std dev = 0,034, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.104544051034052;  // std dev = 0,008, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109162;  // std dev = 5,77e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18041679673777908;  // std dev = 0,030, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09656152467646337;  // std dev = 0,015, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07324622576333714;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1552600597389701;  // std dev = 0,026, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.08841058961956533;  // std dev = 0,013, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5,27e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13596975638224884;  // std dev = 0,024, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.08286540852465764;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return -0.06419184008202622;  // std dev = 3,73e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063903
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.634 seconds
Total inference time: 1.447 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065561
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.218 seconds
Refined model CLL: -0.065561


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063903
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.026 seconds
Total inference time: 1.447 seconds
AUC ROC: 1.0
Total revision time: 7.026
Best scored revision CLL: -0.065561


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:34:21
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067398, 'Learning time': 2.334, 'Inference time': 1.554}, 'CLL': -0.063903, 'Learning time': 7.026, 'Inference time': 1.447}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048766;  // std dev = 8,16e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839138;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360624;  // std dev = 6,99e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783637;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926107;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839679;  // std dev = 4,08e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07877675473109164;  // std dev = 5,27e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07324622576333704;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,94e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420268;  // std dev = 3,49e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06419184008202626;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.072 seconds
Total inference time: 1.256 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:34:24
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 2.072, 'Inference time': 1.256}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048774;  // std dev = 4,71e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.783 seconds
Total inference time: 0.885 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:34:26
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 0.783, 'Inference time': 0.885}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839172;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936067;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583096;  // std dev = 2,86e-07, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05531908912403251;  // std dev = 0,148, 258,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3402288203239987;  // std dev = 0,480, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then return -0.09396037839226352;  // std dev = 0,002, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09665722057364348;  // std dev = 7,60e-08, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2514806158309743;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08508590444965036;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04957865145500125;  // std dev = 0,125, 259,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23447729260411249;  // std dev = 0,672, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.08139231880453028;  // std dev = 0,015, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08462012328001829;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.195709050210233;  // std dev = 0,601, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07548124265031596;  // std dev = 0,014, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07829170253861621;  // std dev = 5,96e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16718119576823415;  // std dev = 0,539, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06996314806493507;  // std dev = 0,014, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07282528070931032;  // std dev = 1,49e-08, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.10806668796420472;  // std dev = 0,089, 158,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=130 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06805839000065479;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06805839000065465;  // std dev = 5,67e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06805839000065482;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067149
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.725 seconds
Total inference time: 2.002 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069015
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.878 seconds
Parameter learned model CLL: -0.069015


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [1.83e-08, 25, 0], 'true,true': [7.63e-07, 0, 130], 'false': [0.0, 234, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 27, 0], 'true,true': [0.0, 0, 130], 'false': [0.0, 222, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [1.67e-08, 19, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [4.77e-07, 0, 130], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 227, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 16, 0], 'false': [0.148, 235, 23], 'true,false': [0.0, 0, 0], 'true,true,true,true': [2.86e-07, 0, 107]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.48, 0, 130], 'true,false,true': [0.002, 25, 0], 'false': [7.6e-08, 235, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 107], 'true,true,false,true': [0.0, 16, 0], 'true,false': [0.0, 0, 0], 'false': [0.125, 236, 23], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.672, 0, 130], 'true,true,false,true': [0.015, 25, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 236, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.601, 0, 130], 'true,false,true': [0.014, 23, 0], 'false': [5.96e-08, 220, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.539, 0, 130], 'true,true,false,true': [0.014, 28, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 214, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [5.67e-08, 172, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.089, 28, 130], 'false,false': [0.0, 28, 0], 'true,false': [0.0, 9, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.1352757544224812, -2.0875988497225166e-16], 'true': [4.481884948640632e-15, 1.3322676295501878e-17], 'true,false,true': [1.3322676295501878e-17, nan], 'true,false': [1.3322676295501878e-17, nan]}, {'': [0.10165692964228645, -6.00120553851436e-17], 'true': [-1.7490282726402467e-15, -4.11193712824132e-18], 'true,false,true': [-4.11193712824132e-18, nan], 'true,false': [-4.11193712824132e-18, nan]}, {'': [0.0495980741036084, -6.064654407644027e-17], 'true': [1.7490282726402467e-15, 1.460819769243627e-17], 'true,true': [1.7490282726402467e-15, nan], 'true,true,true': [1.7490282726402467e-15, nan], 'true,false,true': [1.460819769243627e-17, nan], 'true,false': [1.460819769243627e-17, nan]}, {'': [0.030493844628664155, 0.021881391273347], 'true': [0.030493844628664155, nan], 'true,true,true': [7.636674262842198e-16, -6.938893903907228e-18], 'true,true': [0.030493844628664155, nan]}, {'': [0.0269890247128699, 2.456663714064176e-17], 'true': [0.001772069992965182, 3.422568353538269e-06], 'true,false': [3.422568353538269e-06, nan]}, {'': [0.012818445544738861, 0.015580609321873839], 'true': [0.012818445544738861, nan], 'true,true,false': [-2.6020852139652106e-18, nan], 'true,true': [-2.9052565130377926e-16, -2.6020852139652106e-18]}, {'': [0.01641298761818139, -9.40866970021319e-18], 'true': [0.01641298761818139, nan], 'true,true,false': [9.28126648173655e-06, nan], 'true,true': [0.0034750285623816467, 9.28126648173655e-06]}, {'': [0.01175679147405126, 1.6148698540002276e-17], 'true': [0.0027797510684474166, 8.070414519663881e-06], 'true,true,true': [0.0027797510684474166, nan], 'true,false': [8.070414519663881e-06, nan], 'true,true': [0.0027797510684474166, nan]}, {'': [0.01004315797516236, 1.0375916117992116e-18], 'true': [0.01004315797516236, nan], 'true,true,false': [6.6284090572707855e-06, nan], 'true,true': [0.0022387434612642816, 6.6284090572707855e-06]}, {'': [0.00915804112522003, 1.9984014443252817e-17], 'true': [0.00800796284658318, -7.709882115452476e-19], 'false,true': [1.871887657798229e-17, nan], 'false': [1.871887657798229e-17, -3.96508223080413e-18], 'true,true': [0.00800796284658318, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048824;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.1254446385283918;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.11231637819360671;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583096;  // std dev = 2,86e-07, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10159632948783648;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 1,69e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926097;  // std dev = 7,45e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.09269127618926067;  // std dev = 8,02e-08, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.2551722425694897;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694897;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 9,19e-08, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.25517224256948967;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.19844607690984184;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.08518475138839683;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2101253192617727;  // std dev = 0,021, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07886667630681984;  // std dev = 0,023, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17736665783388667;  // std dev = 0,018, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07333546119920549;  // std dev = 0,022, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1529491605777863;  // std dev = 0,016, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06865512151958456;  // std dev = 0,035, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13390922308006;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06419184008202619;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.13437565671708449;  // std dev = 0,014, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | | else return -0.06419184008202618;  // std dev = 6,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.07059639960123618;  // std dev = 0,027, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then return -0.06416737736414245;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else return -0.06416737736414241;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063413
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.419 seconds
Total inference time: 1.655 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064359
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.794 seconds
Refined model CLL: -0.064359


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063413
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.816 seconds
Total inference time: 1.655 seconds
AUC ROC: 1.0
Total revision time: 10.816
Best scored revision CLL: -0.064359


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:34:42
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067149, 'Learning time': 3.725, 'Inference time': 2.002}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063413, 'Learning time': 10.816, 'Inference time': 1.655}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.14185106490048846;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839172;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.11231637819360678;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 3,86e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.10159632948783649;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2,53e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.09269127618926055;  // std dev = 6,32e-08, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5,96e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839678;  // std dev = 7,45e-08, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2,11e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109144;  // std dev = 6,66e-08, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.07324622576333671;  // std dev = 1,15e-07, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420261;  // std dev = 6,32e-08, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06419184008202623;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.869 seconds
Total inference time: 1.473 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:34:46
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 2.869, 'Inference time': 1.473}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1418510649004883;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.041 seconds
Total inference time: 0.901 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:34:49
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 1.041, 'Inference time': 0.901}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 1,86e-07, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 6,19e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360647;  // std dev = 0,000, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583091;  // std dev = 4,42e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05855455272823134;  // std dev = 0,143, 398,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=33 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3395145661920954;  // std dev = 0,582, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then return -0.09403084331611224;  // std dev = 0,002, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09637508578810142;  // std dev = 1,26e-07, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2516150895470633;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08508041917689463;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05168629710531867;  // std dev = 0,121, 396,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=33 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23360496305343417;  // std dev = 0,816, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.08054319091670904;  // std dev = 0,016, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08422892565570349;  // std dev = 0,000, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.1950684855461838;  // std dev = 0,730, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07492146992901283;  // std dev = 0,016, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07795538449641534;  // std dev = 0,000, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16669591314300825;  // std dev = 0,656, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.0697058708529725;  // std dev = 0,014, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07253321905279805;  // std dev = 0,000, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11635446774663445;  // std dev = 0,082, 226,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=195 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06780250557693195;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06780250557693182;  // std dev = 7,88e-08, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06780250557693192;  // std dev = 1,49e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066932
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.612 seconds
Total inference time: 1.605 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068803
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.506 seconds
Parameter learned model CLL: -0.068803


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [2.98e-08, 32, 0], 'true,true': [1.08e-06, 0, 195], 'false': [1.86e-07, 344, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 29, 0], 'true,true': [0.0, 0, 195], 'false': [0.0, 324, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 35, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [6.19e-07, 0, 195], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 359, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 31, 0], 'false': [0.143, 365, 33], 'true,false': [0.0, 0, 0], 'true,true,true,true': [4.42e-07, 0, 162]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.582, 0, 195], 'true,false,true': [0.002, 33, 0], 'false': [1.26e-07, 348, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 162], 'true,true,false,true': [1.49e-08, 22, 0], 'true,false': [0.0, 0, 0], 'false': [0.121, 363, 33], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.816, 0, 195], 'true,true,false,true': [0.016, 37, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 342, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.73, 0, 195], 'true,false,true': [0.016, 37, 0], 'false': [0.0, 353, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.656, 0, 195], 'true,true,false,true': [0.014, 35, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 351, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [7.88e-08, 306, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.082, 31, 195], 'false,false': [1.49e-08, 43, 0], 'true,false': [2.63e-09, 9, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.12109685807992183, 1.0069464641949094e-16], 'true': [5.975846598187509e-15, 2.7755575615628914e-17], 'true,false,true': [2.7755575615628914e-17, nan], 'true,false': [2.7755575615628914e-17, nan]}, {'': [0.08045735467136492, -1.1239294817192943e-16], 'true': [-3.643808901333847e-15, -5.742532885992189e-18], 'true,false,true': [-5.742532885992189e-18, nan], 'true,false': [-5.742532885992189e-18, nan]}, {'': [0.057515828541086354, -2.9688415143179675e-17], 'true': [1.9676568067202775e-15, -1.2688263138573217e-17], 'true,true': [1.9676568067202775e-15, nan], 'true,true,true': [1.9676568067202775e-15, nan], 'true,false,true': [-1.2688263138573217e-17, nan], 'true,false': [-1.2688263138573217e-17, nan]}, {'': [0.03633128310779816, 0.020490818470231757], 'true': [0.03633128310779816, nan], 'true,true,true': [1.2061682242841207e-15, -1.7906822977825105e-18], 'true,true': [0.03633128310779816, nan]}, {'': [0.024752234395088807, 4.594026308793751e-17], 'true': [0.0017355710110636142, 3.140270152841977e-06], 'true,false': [3.140270152841977e-06, nan]}, {'': [0.011933743412694061, 0.014753118667803483], 'true': [0.011933743412694061, nan], 'true,true,false': [1.0092936587501423e-17, nan], 'true,true': [-1.0965165675310187e-17, 1.0092936587501423e-17]}, {'': [0.01609797619678699, -5.58357778466453e-17], 'true': [0.01609797619678699, nan], 'true,true,false': [7.176778963180624e-06, nan], 'true,true': [0.0034118982841973523, 7.176778963180624e-06]}, {'': [0.012070017772555059, -1.2580430873939451e-17], 'true': [0.002733561767619714, 6.516305689393423e-06], 'true,true,true': [0.002733561767619714, nan], 'true,false': [6.516305689393423e-06, nan], 'true,true': [0.002733561767619714, nan]}, {'': [0.009080151084589268, -2.846725704167068e-17], 'true': [0.009080151084589268, nan], 'true,true,false': [5.422040612202655e-06, nan], 'true,true': [0.0022045872067079195, 5.422040612202655e-06]}, {'': [0.007748298495292457, 2.8630393185175955e-17], 'true': [0.00675803302329366, 7.709882115452476e-19], 'false,true': [2.031780698660417e-17, nan], 'false': [2.031780698660417e-17, 5.163828021512356e-18], 'true,true': [0.00675803302329366, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048766;  // std dev = 1,91e-07, 343,000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839124;  // std dev = 4,34e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.12544463852839213;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.11231637819360653;  // std dev = 0,000, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583091;  // std dev = 4,42e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 8,43e-08, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */
%   | else if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783626;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 4,13e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.09269127618926054;  // std dev = 1,88e-07, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694906;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.08518475138839678;  // std dev = 1,01e-07, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.209757715632535;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.07877675473109179;  // std dev = 5,27e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109148;  // std dev = 4,71e-08, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527786;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333703;  // std dev = 9,06e-08, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420326;  // std dev = 0,000, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.10291701117035822;  // std dev = 0,072, 102,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=86 */
%   | | else return 0.10199028945500506;  // std dev = 0,073, 130,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=109 */
%   | else return -0.06419184008202615;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A) )
%   | then return -0.06419184008202593;  // std dev = 1,21e-07, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
%   | else return -0.06419184008202618;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.488 seconds
Total inference time: 1.503 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065263
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.698 seconds
Refined model CLL: -0.065263


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.304 seconds
Total inference time: 1.503 seconds
AUC ROC: 1.0
Total revision time: 12.304
Best scored revision CLL: -0.065263


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:35:05
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066932, 'Learning time': 4.612, 'Inference time': 1.605}, 'CLL': -0.063837, 'Learning time': 12.304, 'Inference time': 1.503}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048796;  // std dev = 0,000, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1254446385283913;  // std dev = 2,58e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.1254446385283921;  // std dev = 0,000, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1123163781936068;  // std dev = 0,000, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.10159632948783656;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 4,00e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.09269127618926049;  // std dev = 1,60e-07, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.08518475138839678;  // std dev = 9,66e-08, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.07877675473109143;  // std dev = 2,98e-08, 334,000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07324622576333704;  // std dev = 8,30e-08, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.06842697784420317;  // std dev = 0,000, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.06419184008202601;  // std dev = 1,03e-07, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.217 seconds
Total inference time: 1.441 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:35:10
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 3.217, 'Inference time': 1.441}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048796;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.097 seconds
Total inference time: 0.852 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:35:12
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 1.097, 'Inference time': 0.852}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048718;  // std dev = 2,98e-07, 462,000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0,000, 445,000 (wgt'ed) examples reached here.  /* #neg=445 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462832;  // std dev = 3,95e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360599;  // std dev = 0,000, 475,000 (wgt'ed) examples reached here.  /* #neg=475 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583103;  // std dev = 1,88e-07, 213,000 (wgt'ed) examples reached here.  /* #pos=213 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0530910294055922;  // std dev = 0,151, 503,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=47 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3405543425707279;  // std dev = 0,681, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then return -0.09413846277664835;  // std dev = 0,002, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09685193762799989;  // std dev = 0,000, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2514193450938916;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #pos=213 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08507204226473862;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05281333953662192;  // std dev = 0,120, 574,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=47 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23506431306376466;  // std dev = 0,960, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.08054376818212547;  // std dev = 0,020, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08452711401912719;  // std dev = 0,000, 456,000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.19614512429061878;  // std dev = 0,858, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07447870607898657;  // std dev = 0,018, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07821176003378537;  // std dev = 8,43e-08, 476,000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1675150502573929;  // std dev = 0,770, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06963348130636596;  // std dev = 0,016, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07275587225830231;  // std dev = 8,94e-08, 512,000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11642679446061842;  // std dev = 0,083, 302,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=260 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06799759016753913;  // std dev = 3,73e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06799759016753956;  // std dev = 0,000, 398,000 (wgt'ed) examples reached here.  /* #neg=398 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06799759016753902;  // std dev = 3,16e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0671
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.95 seconds
Total inference time: 1.381 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068994
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.407 seconds
Parameter learned model CLL: -0.068994


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [4.94e-08, 47, 0], 'true,true': [1.07e-06, 0, 260], 'false': [2.98e-07, 462, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 40, 0], 'true,true': [0.0, 0, 260], 'false': [0.0, 445, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [3.95e-07, 0, 260], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 475, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 27, 0], 'false': [0.151, 456, 47], 'true,false': [0.0, 0, 0], 'true,true,true,true': [1.88e-07, 0, 213]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.681, 0, 260], 'true,false,true': [0.002, 46, 0], 'false': [0.0, 500, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 213], 'true,true,false,true': [0.0, 37, 0], 'true,false': [0.0, 0, 0], 'false': [0.12, 527, 47], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.96, 0, 260], 'true,true,false,true': [0.02, 52, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 456, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.858, 0, 260], 'true,false,true': [0.018, 51, 0], 'false': [8.43e-08, 476, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.77, 0, 260], 'true,true,false,true': [0.016, 43, 0], 'true,false': [0.0, 0, 0], 'false': [8.94e-08, 512, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [0.0, 398, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.083, 42, 260], 'false,false': [3.16e-08, 64, 0], 'true,false': [3.73e-09, 17, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.12965654808008992, 1.922464111905033e-16], 'true': [4.372570681600617e-15, 5.196788625904988e-17], 'true,false,true': [5.196788625904988e-17, nan], 'true,false': [5.196788625904988e-17, nan]}, {'': [0.08249355255152949, -1.2374620678968036e-16], 'true': [-4.481884948640632e-15, -2.4980018054066023e-17], 'true,false,true': [-2.4980018054066023e-17, nan], 'true,false': [-2.4980018054066023e-17, nan]}, {'': [0.04959807410360649, -7.47939721852737e-18], 'true': [6.012284687200848e-16, -8.764918615461762e-18], 'true,true': [6.012284687200848e-16, nan], 'true,true,true': [6.012284687200848e-16, nan], 'true,false,true': [-8.764918615461762e-18, nan], 'true,false': [-8.764918615461762e-18, nan]}, {'': [0.026905404759813754, 0.02282681800100581], 'true': [0.026905404759813754, nan], 'true,true,true': [1.6679406942725356e-16, -1.2335811384723961e-17], 'true,true': [0.026905404759813754, nan]}, {'': [0.0256520141541967, -1.0658141036401503e-17], 'true': [0.0017843264880276603, 3.926904410068082e-06], 'true,false': [3.926904410068082e-06, nan]}, {'': [0.014277402914144666, 0.01444780004289379], 'true': [0.014277402914144666, nan], 'true,true,false': [-1.050210969240013e-17, nan], 'true,true': [-6.421571672949262e-16, -1.050210969240013e-17]}, {'': [0.01678845070468302, -4.7720112461958483e-17], 'true': [0.01678845070468302, nan], 'true,true,false': [7.815966704213165e-06, nan], 'true,true': [0.0035431674943266532, 7.815966704213165e-06]}, {'': [0.012409640219070268, 1.4927368398321432e-17], 'true': [0.0028326771290829483, 6.084337274968185e-06], 'true,true,true': [0.0028326771290829483, nan], 'true,false': [6.084337274968185e-06, nan], 'true,true': [0.0028326771290829483, nan]}, {'': [0.008805875140719557, 1.5612511283791264e-17], 'true': [0.008805875140719557, nan], 'true,true,false': [5.6757902296138625e-06, nan], 'true,true': [0.0022801200556993597, 5.6757902296138625e-06]}, {'': [0.008273827817723156, -7.689856447620132e-17], 'true': [0.006927002521782307, 8.163404592832033e-19], 'false,true': [-5.802170580955592e-17, nan], 'false': [-5.802170580955592e-17, 1.5612511283791264e-17], 'true,true': [0.006927002521782307, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.14185106490048763;  // std dev = 7,30e-08, 504,000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.12544463852839227;  // std dev = 0,000, 460,000 (wgt'ed) examples reached here.  /* #neg=460 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3,95e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.112316378193606;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583103;  // std dev = 1,88e-07, 213,000 (wgt'ed) examples reached here.  /* #pos=213 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.10159632948783603;  // std dev = 2,04e-07, 461,000 (wgt'ed) examples reached here.  /* #neg=461 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601503;  // std dev = 1,46e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.09269127618926092;  // std dev = 1,40e-07, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694883;  // std dev = 2,60e-07, 213,000 (wgt'ed) examples reached here.  /* #pos=213 */
%   | | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.08518475138839678;  // std dev = 1,21e-07, 445,000 (wgt'ed) examples reached here.  /* #neg=445 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1552791792701723;  // std dev = 0,113, 143,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=116 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20975771563253523;  // std dev = 2,35e-07, 144,000 (wgt'ed) examples reached here.  /* #pos=144 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109146;  // std dev = 1,15e-07, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18070118377985694;  // std dev = 0,065, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0808675037098803;  // std dev = 0,063, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333703;  // std dev = 1,19e-07, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11204024311656832;  // std dev = 0,096, 144,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=116 */
%   | | else return 0.11430886095995813;  // std dev = 0,083, 174,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=144 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420339;  // std dev = 0,000, 438,000 (wgt'ed) examples reached here.  /* #neg=438 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.14117674560851934;  // std dev = 0,055, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.08252105599643923;  // std dev = 0,056, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(A) )
%   | then return -0.06419184008202558;  // std dev = 2,01e-07, 408,000 (wgt'ed) examples reached here.  /* #neg=408 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064138
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.035 seconds
Total inference time: 1.398 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065983
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.958 seconds
Refined model CLL: -0.065983


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064138
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.35 seconds
Total inference time: 1.398 seconds
AUC ROC: 1.0
Total revision time: 15.35
Best scored revision CLL: -0.065983


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:35:31
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.0671, 'Learning time': 5.95, 'Inference time': 1.381}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064138, 'Learning time': 15.35, 'Inference time': 1.398}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1418510649004875;  // std dev = 2,73e-07, 457,000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839127;  // std dev = 3,65e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.1254446385283923;  // std dev = 0,000, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,95e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360596;  // std dev = 0,000, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783626;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1015963294878359;  // std dev = 2,48e-07, 498,000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,33e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.09269127618926096;  // std dev = 1,40e-07, 435,000 (wgt'ed) examples reached here.  /* #neg=435 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.08518475138839678;  // std dev = 1,30e-07, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109162;  // std dev = 7,88e-08, 454,000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333761;  // std dev = 0,000, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.06842697784420343;  // std dev = 0,000, 456,000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080112;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06419184008202578;  // std dev = 1,71e-07, 432,000 (wgt'ed) examples reached here.  /* #neg=432 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.418 seconds
Total inference time: 1.355 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:35:36
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 3.418, 'Inference time': 1.355}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1418510649004875;  // std dev = 2,76e-07, 470,000 (wgt'ed) examples reached here.  /* #neg=470 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.328 seconds
Total inference time: 0.853 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:35:38
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 1.328, 'Inference time': 0.853}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0,000, 585,000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0,000, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360571;  // std dev = 0,000, 595,000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583111;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | | else return -0.10159632948783631;  // std dev = 1,83e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05935152272214974;  // std dev = 0,142, 725,000 (wgt'ed) examples reached here.  /* #neg=666 #pos=59 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34085555555640823;  // std dev = 0,774, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then return -0.09402010937034841;  // std dev = 0,002, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09630570244181827;  // std dev = 0,000, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25136265874815505;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08508125472964691;  // std dev = 1,18e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.049909270054716355;  // std dev = 0,124, 676,000 (wgt'ed) examples reached here.  /* #neg=617 #pos=59 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23519200134810822;  // std dev = 1,080, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.08043841311379823;  // std dev = 0,019, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08430990895370405;  // std dev = 0,000, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.19624453793680968;  // std dev = 0,966, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07485669609974463;  // std dev = 0,019, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07802502404640367;  // std dev = 0,000, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16759425007813858;  // std dev = 0,867, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06939209189354409;  // std dev = 0,018, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07259370767979044;  // std dev = 0,000, 563,000 (wgt'ed) examples reached here.  /* #neg=563 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11262561259116506;  // std dev = 0,086, 387,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=326 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06785551163220863;  // std dev = 6,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06785551163220933;  // std dev = 0,000, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06785551163220863;  // std dev = 1,05e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06697
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.256 seconds
Total inference time: 1.607 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068857
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.869 seconds
Parameter learned model CLL: -0.068857


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [6.32e-08, 63, 0], 'true,true': [1.05e-06, 0, 326], 'false': [0.0, 585, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 56, 0], 'true,true': [0.0, 0, 326], 'false': [0.0, 597, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [3.65e-08, 54, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 326], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 595, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [1.83e-08, 43, 0], 'false': [0.142, 666, 59], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 267]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.774, 0, 326], 'true,false,true': [0.002, 68, 0], 'false': [0.0, 592, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 267], 'true,true,false,true': [1.18e-08, 33, 0], 'true,false': [0.0, 0, 0], 'false': [0.124, 617, 59], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.08, 0, 326], 'true,true,false,true': [0.019, 53, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 607, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.966, 0, 326], 'true,false,true': [0.019, 57, 0], 'false': [0.0, 604, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.867, 0, 326], 'true,true,false,true': [0.018, 65, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 563, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [0.0, 485, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.086, 61, 326], 'false,false': [1.05e-08, 79, 0], 'true,false': [6.45e-09, 19, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.13572471765320385, -2.641761453467039e-16], 'true': [3.400143152717044e-15, 6.344131569286608e-17], 'true,false,true': [6.344131569286608e-17, nan], 'true,false': [6.344131569286608e-17, nan]}, {'': [0.08931164285219659, -2.320868232382237e-16], 'true': [-5.056623150194578e-15, -3.766828119263924e-17], 'true,false,true': [-3.766828119263924e-17, nan], 'true,false': [-3.766828119263924e-17, nan]}, {'': [0.054348124718891715, -1.6420105238153576e-17], 'true': [-4.795073676908651e-16, 2.4671622769447922e-17], 'true,true': [-4.795073676908651e-16, nan], 'true,true,true': [-4.795073676908651e-16, nan], 'true,false,true': [2.4671622769447922e-17, nan], 'true,false': [2.4671622769447922e-17, nan]}, {'': [0.03219400261372673, 0.02014507429346358], 'true': [0.03219400261372673, nan], 'true,true,true': [-4.790175746697304e-16, 7.745742032268534e-18], 'true,true': [0.03219400261372673, nan]}, {'': [0.028526129769762085, -4.50090415388577e-18], 'true': [0.001836276606499993, 3.0371719118408235e-06], 'true,false': [3.0371719118408235e-06, nan]}, {'': [0.011081742227100863, 0.015372160580588738], 'true': [0.011081742227100863, nan], 'true,true,false': [4.20539024479226e-18, nan], 'true,true': [-6.386900995596406e-16, 4.20539024479226e-18]}, {'': [0.015064154122226166, -1.3169037524384064e-17], 'true': [0.015064154122226166, nan], 'true,true,false': [7.086373139351666e-06, nan], 'true,true': [0.003580695501185234, 7.086373139351666e-06]}, {'': [0.011748202457573348, -9.631736173900365e-17], 'true': [0.0028631661852655025, 6.524729722278659e-06], 'true,true,true': [0.0028631661852655025, nan], 'true,false': [6.524729722278659e-06, nan], 'true,true': [0.0028631661852655025, nan]}, {'': [0.009706904387093438, -2.997404968792607e-17], 'true': [0.009706904387093438, nan], 'true,true,false': [4.794715082044278e-06, nan], 'true,true': [0.002304892755891854, 4.794715082044278e-06]}, {'': [0.008576555569764806, -8.267618268485208e-17], 'true': [0.007473254143355432, 2.1912296538654404e-18], 'false,true': [-8.973348982537348e-17, nan], 'false': [-8.973348982537348e-17, 1.4053456007913374e-18], 'true,true': [0.007473254143355432, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.1418510649004883;  // std dev = 0,000, 581,000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.12544463852839227;  // std dev = 0,000, 590,000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360567;  // std dev = 0,000, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583111;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else return -0.10159632948783626;  // std dev = 2,58e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( actor(B) )
%   | then return -0.10159632948783506;  // std dev = 4,38e-07, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.10159632948783626;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.09269127618926135;  // std dev = 0,000, 598,000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948784;  // std dev = 3,15e-07, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | else return -0.0851847513883968;  // std dev = 2,04e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 1,58e-07, 596,000 (wgt'ed) examples reached here.  /* #neg=596 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.2551722425694894;  // std dev = 2,11e-08, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839678;  // std dev = 1,29e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20975771563253515;  // std dev = 1,95e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.209757715632535;  // std dev = 2,63e-07, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109189;  // std dev = 0,000, 569,000 (wgt'ed) examples reached here.  /* #neg=569 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1770964977452765;  // std dev = 2,76e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333656;  // std dev = 2,48e-07, 612,000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.116528750454721;  // std dev = 0,082, 171,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=143 */
%   | | else return 0.11388952205053114;  // std dev = 0,084, 222,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=183 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420364;  // std dev = 0,000, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13844243430333977;  // std dev = 0,003, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07614438373361948;  // std dev = 0,000650, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.06419184008202607;  // std dev = 1,29e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(A) )
%   | then return -0.06419184008202536;  // std dev = 2,46e-07, 508,000 (wgt'ed) examples reached here.  /* #neg=508 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063852
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.609 seconds
Total inference time: 1.447 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065289
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.351 seconds
Refined model CLL: -0.065289


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063852
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 18.085 seconds
Total inference time: 1.447 seconds
AUC ROC: 1.0
Total revision time: 18.085
Best scored revision CLL: -0.065289


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:36:00
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06697, 'Learning time': 7.256, 'Inference time': 1.607}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063852, 'Learning time': 18.085, 'Inference time': 1.447}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.14185106490048796;  // std dev = 0,000, 537,000 (wgt'ed) examples reached here.  /* #neg=537 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.12544463852839235;  // std dev = 0,000, 652,000 (wgt'ed) examples reached here.  /* #neg=652 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360586;  // std dev = 0,000, 605,000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783627;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.1015963294878356;  // std dev = 3,28e-07, 564,000 (wgt'ed) examples reached here.  /* #neg=564 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926178;  // std dev = 0,000, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839678;  // std dev = 1,49e-07, 613,000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0787767547310917;  // std dev = 3,07e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.0787767547310924;  // std dev = 0,000, 600,000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452765;  // std dev = 2,76e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07324622576333695;  // std dev = 1,44e-07, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420357;  // std dev = 0,000, 556,000 (wgt'ed) examples reached here.  /* #neg=556 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0641918400820255;  // std dev = 2,39e-07, 610,000 (wgt'ed) examples reached here.  /* #neg=610 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.104 seconds
Total inference time: 1.234 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:36:05
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 4.104, 'Inference time': 1.234}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048838;  // std dev = 0,000, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.408 seconds
Total inference time: 0.958 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:36:08
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 1.408, 'Inference time': 0.958}


Starting fold 2

Target train facts examples: 546
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 150
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8,69e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 8,69e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.048805490811956995;  // std dev = 0,157, 118,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34109621690026876;  // std dev = 0,339, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then return -0.0935160348666393;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09722744891484165;  // std dev = 2,98e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2513173739333507;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08512050132394057;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05097970339575072;  // std dev = 0,123, 138,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23575862430412475;  // std dev = 0,478, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.07944825577156295;  // std dev = 0,006, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08497263373321655;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.19665104449354057;  // std dev = 0,427, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07481733638220432;  // std dev = 0,009, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07859458261026409;  // std dev = 4,21e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1678956009412953;  // std dev = 0,383, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06995745482510754;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07308816906043815;  // std dev = 4,94e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.10379074570295684;  // std dev = 0,093, 80,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=64 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06828861005109356;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06828861005109373;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06828861005109356;  // std dev = 3,73e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067451
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.385 seconds
Total inference time: 1.757 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069285
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.985 seconds
Parameter learned model CLL: -0.069285


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 12, 0], 'true,true': [0.0, 0, 64], 'false': [8.69e-08, 107, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [7.45e-09, 14, 0], 'true,true': [8.43e-08, 0, 64], 'false': [0.0, 117, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [1.39e-08, 16, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.69e-07, 0, 64], 'true,false,true,false': [0.0, 0, 0], 'false': [8.69e-08, 109, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [3.73e-09, 10, 0], 'false': [0.157, 106, 12], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 52]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.339, 0, 64], 'true,false,true': [0.002, 11, 0], 'false': [2.98e-08, 110, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 52], 'true,true,false,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false': [0.123, 126, 12], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.478, 0, 64], 'true,true,false,true': [0.006, 9, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 107, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.427, 0, 64], 'true,false,true': [0.009, 11, 0], 'false': [4.21e-08, 114, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.383, 0, 64], 'true,true,false,true': [0.008, 10, 0], 'true,false': [0.0, 0, 0], 'false': [4.94e-08, 126, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [0.0, 96, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.093, 16, 64], 'false,false': [3.73e-09, 23, 0], 'true,false': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.13296398891966668, 7.055622960234639e-17], 'true': [-8.881784197001252e-16, -1.1564823173178714e-17], 'true,false,true': [-1.1564823173178714e-17, nan], 'true,false': [-1.1564823173178714e-17, nan]}, {'': [0.10513516028415527, -5.693451408334136e-18], 'true': [1.1102230246251565e-16, 3.96508223080413e-18], 'true,false,true': [3.96508223080413e-18, nan], 'true,false': [3.96508223080413e-18, nan]}, {'': [0.07132805461856861, 6.926161988487215e-17], 'true': [4.440892098500626e-16, 1.214306433183765e-17], 'true,true': [4.440892098500626e-16, nan], 'true,true,true': [4.440892098500626e-16, nan], 'true,false,true': [1.214306433183765e-17, nan], 'true,false': [1.214306433183765e-17, nan]}, {'': [0.03645344778141733, 0.024617375058240736], 'true': [0.03645344778141733, nan], 'true,true,true': [-3.75767792950053e-16, 1.3877787807814458e-18], 'true,true': [0.03645344778141733, nan]}, {'': [0.02517731764760004, 8.074349270001138e-18], 'true': [0.0018005976287079756, 3.061020941598113e-06], 'true,false': [3.061020941598113e-06, nan]}, {'': [0.0104980435491034, 0.015204697064772286], 'true': [0.0104980435491034, nan], 'true,true,false': [-1.1564823173178713e-18, nan], 'true,true': [0.0, -1.1564823173178713e-18]}, {'': [0.013874937009510417, -1.9714240624185022e-17], 'true': [0.013874937009510417, nan], 'true,true,false': [4.224443340851116e-06, nan], 'true,true': [0.003576212878875419, 4.224443340851116e-06]}, {'': [0.01166066052276293, 1.5582077538598687e-17], 'true': [0.002854948970342809, 7.421557485662311e-06], 'true,true,true': [0.002854948970342809, nan], 'true,false': [7.421557485662311e-06, nan], 'true,true': [0.002854948970342809, nan]}, {'': [0.008597979715552144, 1.938484646170908e-17], 'true': [0.008597979715552144, nan], 'true,true,false': [6.916281137020474e-06, nan], 'true,true': [0.0022951879532044396, 6.916281137020474e-06]}, {'': [0.00936013072463095, -3.2653618371328135e-17], 'true': [0.008640847505958987, -1.1564823173178713e-18], 'false,true': [-2.1973164029039556e-17, nan], 'false': [-2.1973164029039556e-17, 6.033820786006285e-19], 'true,true': [0.008640847505958987, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048793;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.12544463852839105;  // std dev = 8,43e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360618;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.10159632948783631;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.09313255845472676;  // std dev = 0,054, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.13780776189435628;  // std dev = 0,162, 29,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | else return 0.19560976862685947;  // std dev = 0,129, 40,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A), director(B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08094512976750959;  // std dev = 0,484, 138,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.17563742290358678;  // std dev = 0,114, 34,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | | else return 0.18329608737845512;  // std dev = 0,105, 40,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07947262835646189;  // std dev = 0,047, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1932511808736707;  // std dev = 0,079, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10967542663830286;  // std dev = 0,030, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07476737796953994;  // std dev = 0,075, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.16490734120480288;  // std dev = 0,070, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.1041775254026468;  // std dev = 0,025, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06893877740791683;  // std dev = 0,041, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1434434528882606;  // std dev = 0,063, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.09609543423735897;  // std dev = 0,023, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.06425611707366229;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.0642561170736622;  // std dev = 1,29e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return -0.06425611707366229;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.66 seconds
Total inference time: 1.427 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067418
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.298 seconds
Refined model CLL: -0.067418


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.328 seconds
Total inference time: 1.427 seconds
AUC ROC: 1.0
Total revision time: 7.328
Best scored revision CLL: -0.067418


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:36:19
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067451, 'Learning time': 2.385, 'Inference time': 1.757}, 'CLL': -0.065116, 'Learning time': 7.328, 'Inference time': 1.427}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.12544463852839133;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.11231637819360624;  // std dev = 8,02e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.10159632948783624;  // std dev = 4,71e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.09269127618926098;  // std dev = 4,21e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839683;  // std dev = 5,48e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07877675473109166;  // std dev = 4,47e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07324622576333704;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06842697784420267;  // std dev = 4,34e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06419184008202626;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.956 seconds
Total inference time: 1.34 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:36:23
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 1.956, 'Inference time': 1.34}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048768;  // std dev = 6,66e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.783 seconds
Total inference time: 0.883 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:36:25
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 0.783, 'Inference time': 0.883}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360674;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05215729009296521;  // std dev = 0,152, 273,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=26 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34278929142990844;  // std dev = 0,499, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then return -0.09420640758169518;  // std dev = 0,002, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09693364408807659;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2509989443382992;  // std dev = 1,37e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08506675394420507;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04014324951081912;  // std dev = 0,138, 234,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=26 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23730546198015734;  // std dev = 0,689, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.08023240285444237;  // std dev = 0,017, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08557938242115759;  // std dev = 6,50e-08, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.19778448803407356;  // std dev = 0,615, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07558727223839098;  // std dev = 0,015, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07911551190649624;  // std dev = 3,65e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1687525016971635;  // std dev = 0,551, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.07032442387314654;  // std dev = 0,016, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07354001608223608;  // std dev = 2,58e-08, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.10892105231498468;  // std dev = 0,090, 157,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06868407602358535;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06868407602358508;  // std dev = 7,45e-08, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06868407602358538;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06779
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.732 seconds
Total inference time: 1.796 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069617
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.92 seconds
Parameter learned model CLL: -0.069617


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [3.33e-08, 34, 0], 'true,true': [7.54e-07, 0, 129], 'false': [0.0, 225, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 19, 0], 'true,true': [0.0, 0, 129], 'false': [0.0, 270, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 26, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [4.77e-07, 0, 129], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 231, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 14, 0], 'false': [0.152, 247, 26], 'true,false': [0.0, 0, 0], 'true,true,true,true': [2.6e-07, 0, 103]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.499, 0, 129], 'true,false,true': [0.002, 28, 0], 'false': [0.0, 257, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.37e-07, 0, 103], 'true,true,false,true': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.138, 208, 26], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.689, 0, 129], 'true,true,false,true': [0.017, 32, 0], 'true,false': [0.0, 0, 0], 'false': [6.5e-08, 234, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.615, 0, 129], 'true,false,true': [0.015, 21, 0], 'false': [3.65e-08, 251, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.551, 0, 129], 'true,true,false,true': [0.016, 28, 0], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 257, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [7.45e-08, 211, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.09, 28, 129], 'false,false': [0.0, 33, 0], 'true,false': [0.0, 11, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.16507960404983696, -2.289526593004767e-16], 'true': [4.40646657835721e-15, 3.2653618371328135e-17], 'true,false,true': [3.2653618371328135e-17, nan], 'true,false': [3.2653618371328135e-17, nan]}, {'': [0.07988202346841242, -7.894919286223336e-17], 'true': [-1.7625866313428842e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.06223576878009619, -7.113117214048621e-17], 'true': [1.7625866313428842e-15, -2.135044278125301e-18], 'true,true': [1.7625866313428842e-15, nan], 'true,true,true': [1.7625866313428842e-15, nan], 'true,false,true': [-2.135044278125301e-18, nan], 'true,false': [-2.135044278125301e-18, nan]}, {'': [0.02838652185891719, 0.02322007685473249], 'true': [0.02838652185891719, nan], 'true,true,true': [6.553549504583448e-16, -7.93016446160826e-18], 'true,true': [0.02838652185891719, nan]}, {'': [0.02957082578913705, -5.183920737549369e-18], 'true': [0.001930907507111277, 4.132121645412934e-06], 'true,false': [4.132121645412934e-06, nan]}, {'': [0.006729739728783578, 0.018925013980116243], 'true': [0.006729739728783578, nan], 'true,true,false': [9.912705577010326e-19, nan], 'true,true': [1.8108492052138475e-16, 9.912705577010326e-19]}, {'': [0.019012034896142522, 1.8029262793058098e-17], 'true': [0.019012034896142522, nan], 'true,true,false': [8.657808037911344e-06, nan], 'true,true': [0.0036852468228492567, 8.657808037911344e-06]}, {'': [0.011522554150911165, 5.307839161554533e-18], 'true': [0.0029341228379911252, 1.0438176979481514e-05], 'true,true,true': [0.0029341228379911252, nan], 'true,false': [1.0438176979481514e-05, nan], 'true,true': [0.0029341228379911252, nan]}, {'': [0.010310945837233671, 2.5919603687746846e-18], 'true': [0.010310945837233671, nan], 'true,true,false': [8.933438861972215e-06, nan], 'true,true': [0.002353298000499095, 8.933438861972215e-06]}, {'': [0.009551099818944414, 1.6380339707584277e-17], 'true': [0.008154931598638402, -6.30808536718839e-19], 'false,true': [2.6308602479269113e-17, nan], 'false': [2.6308602479269113e-17, -6.7286243916676156e-18], 'true,true': [0.008154931598638402, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1418510649004883;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.1254446385283918;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360661;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.10159632948783653;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 1,69e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.0926912761892606;  // std dev = 5,16e-08, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08518475138839678;  // std dev = 7,74e-08, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253534;  // std dev = 2,00e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310915;  // std dev = 7,88e-08, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07324622576333664;  // std dev = 1,29e-07, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936714;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 3,33e-08, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13400703000801098;  // std dev = 4,21e-08, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.13400703000801092;  // std dev = 4,94e-08, 69,000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | | else return -0.06419184008202618;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 200,000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.168 seconds
Total inference time: 1.419 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.491 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.311 seconds
Total inference time: 1.419 seconds
AUC ROC: 1.0
Total revision time: 10.311
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:36:39
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06779, 'Learning time': 3.732, 'Inference time': 1.796}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 10.311, 'Inference time': 1.419}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.1418510649004883;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1254446385283918;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11231637819360672;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783649;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.09269127618926054;  // std dev = 6,99e-08, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 7,15e-08, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109144;  // std dev = 6,66e-08, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.07324622576333675;  // std dev = 1,21e-07, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.06842697784420261;  // std dev = 6,50e-08, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 2,11e-08, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13248242331501078;  // std dev = 0,197, 130,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=129 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06344
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.862 seconds
Total inference time: 1.432 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:36:43
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06344, 'Learning time': 2.862, 'Inference time': 1.432}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1418510649004883;  // std dev = 0,000, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.971 seconds
Total inference time: 0.923 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:36:45
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 0.971, 'Inference time': 0.923}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 2,40e-07, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0,000, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936066;  // std dev = 0,000, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583089;  // std dev = 4,58e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.054054084921233925;  // std dev = 0,150, 404,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3416918238317317;  // std dev = 0,602, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then return -0.0943897987283882;  // std dev = 0,002, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09676773028316568;  // std dev = 1,63e-07, 330,000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2512053229488181;  // std dev = 1,52e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08505248162375331;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04747895852171079;  // std dev = 0,128, 394,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=37 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23623864708463957;  // std dev = 0,840, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.07910414736335052;  // std dev = 0,009, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0848725321641762;  // std dev = 0,000, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.19700889393832768;  // std dev = 0,751, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07520459272325407;  // std dev = 0,019, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07850859160912445;  // std dev = 0,000, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16817036154066733;  // std dev = 0,673, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06993511857135169;  // std dev = 0,015, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.073013545189851;  // std dev = 0,000, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1178455662607969;  // std dev = 0,083, 224,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=194 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06822326952893765;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06822326952893798;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06822326952893758;  // std dev = 2,24e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067408
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.556 seconds
Total inference time: 1.603 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069196
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.408 seconds
Parameter learned model CLL: -0.069196


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [3.49e-08, 35, 0], 'true,true': [1.09e-06, 0, 194], 'false': [2.4e-07, 376, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 29, 0], 'true,true': [0.0, 0, 194], 'false': [0.0, 354, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 34, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [6.19e-07, 0, 194], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 346, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 20, 0], 'false': [0.15, 367, 37], 'true,false': [0.0, 0, 0], 'true,true,true,true': [4.58e-07, 0, 157]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.602, 0, 194], 'true,false,true': [0.002, 36, 0], 'false': [1.63e-07, 330, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.52e-07, 0, 157], 'true,true,false,true': [0.0, 28, 0], 'true,false': [0.0, 0, 0], 'false': [0.128, 357, 37], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.84, 0, 194], 'true,true,false,true': [0.009, 29, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 351, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.751, 0, 194], 'true,false,true': [0.019, 43, 0], 'false': [0.0, 357, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.673, 0, 194], 'true,true,false,true': [0.015, 32, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 358, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [0.0, 311, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.083, 30, 194], 'false,false': [2.24e-08, 39, 0], 'true,false': [0.0, 7, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.1294788428901107, 1.5354148212901102e-16], 'true': [6.15315358802561e-15, 3.489272363107635e-17], 'true,false,true': [3.489272363107635e-17, nan], 'true,false': [3.489272363107635e-17, nan]}, {'': [0.08076425263184292, -1.154130149892818e-16], 'true': [-3.516087764586063e-15, -5.742532885992189e-18], 'true,false,true': [-5.742532885992189e-18, nan], 'true,false': [-5.742532885992189e-18, nan]}, {'': [0.056565463443571856, -3.593785513237501e-17], 'true': [1.9777993675796604e-15, -1.1428766429964846e-17], 'true,true': [1.9777993675796604e-15, nan], 'true,true,true': [1.9777993675796604e-15, nan], 'true,false,true': [-1.1428766429964846e-17, nan], 'true,false': [-1.1428766429964846e-17, nan]}, {'': [0.0270085806019839, 0.02241938545308249], 'true': [0.0270085806019839, nan], 'true,true,true': [1.3350962232435004e-15, -1.3877787807814458e-18], 'true,true': [0.0270085806019839, nan]}, {'': [0.02668238125185446, 8.074349270001139e-17], 'true': [0.0018677034897033992, 4.038970342281252e-06], 'true,false': [4.038970342281252e-06, nan]}, {'': [0.01452308814473965, 0.016344532981108464], 'true': [0.01452308814473965, nan], 'true,true,false': [-4.956352788505163e-18, nan], 'true,true': [1.4708687205225003e-16, -4.956352788505163e-18]}, {'': [0.014416690006688587, -4.175197699445033e-17], 'true': [0.014416690006688587, nan], 'true,true,false': [2.625281134942307e-06, nan], 'true,true': [0.0036395704027493915, 2.625281134942307e-06]}, {'': [0.013383923463964716, -9.578394722256253e-17], 'true': [0.0029043245610301336, 8.128884619428109e-06], 'true,true,true': [0.0029043245610301336, nan], 'true,false': [8.128884619428109e-06, nan], 'true,true': [0.0029043245610301336, nan]}, {'': [0.00889526534648321, -7.194741388632299e-17], 'true': [0.00889526534648321, nan], 'true,true,false': [6.76276714135348e-06, nan], 'true,true': [0.0023339099730775113, 6.76276714135348e-06]}, {'': [0.007680148964797146, -5.329070518200751e-17], 'true': [0.006871013872912279, 0.0], 'false,true': [-3.284261037476347e-17, nan], 'false': [-3.284261037476347e-17, 1.2810265668751807e-17], 'true,true': [0.006871013872912279, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048752;  // std dev = 2,42e-07, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1254446385283913;  // std dev = 2,58e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.12544463852839213;  // std dev = 0,000, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360646;  // std dev = 0,000, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583089;  // std dev = 4,58e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.10159632948783652;  // std dev = 0,000, 387,000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4,17e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.09269127618926051;  // std dev = 1,75e-07, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.1951092436357451;  // std dev = 0,130, 68,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=56 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.25517224256948984;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 1,23e-07, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839683;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2126817092190287;  // std dev = 0,064, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.08841658374835926;  // std dev = 0,070, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 4,71e-08, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.179241855928114;  // std dev = 0,056, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08014586134563403;  // std dev = 0,057, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07324622576333707;  // std dev = 8,16e-08, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15717948860653336;  // std dev = 0,035, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | | else return -0.07962400947913169;  // std dev = 0,035, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.15208897144272135;  // std dev = 1,07e-07, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return -0.06738017015850957;  // std dev = 5,27e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420315;  // std dev = 0,000, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13527446851551864;  // std dev = 0,042, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.0721256719289097;  // std dev = 0,048, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.06419184008202615;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then return -0.06419184008202596;  // std dev = 1,17e-07, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
%   | else return -0.06419184008202618;  // std dev = 5,27e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.455 seconds
Total inference time: 1.401 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064608
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.899 seconds
Refined model CLL: -0.064608


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.318000000000001 seconds
Total inference time: 1.401 seconds
AUC ROC: 1.0
Total revision time: 12.318000000000001
Best scored revision CLL: -0.064608


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:37:01
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067408, 'Learning time': 4.556, 'Inference time': 1.603}, 'CLL': -0.063632, 'Learning time': 12.318000000000001, 'Inference time': 1.401}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1418510649004878;  // std dev = 1,26e-07, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.12544463852839202;  // std dev = 0,000, 338,000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.1123163781936067;  // std dev = 0,000, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1015963294878365;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926093;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.09269127618926058;  // std dev = 1,35e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.07877675473109143;  // std dev = 2,11e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333716;  // std dev = 5,16e-08, 383,000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420321;  // std dev = 0,000, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.06419184008202591;  // std dev = 1,36e-07, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.892 seconds
Total inference time: 1.311 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:37:06
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 2.892, 'Inference time': 1.311}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048793;  // std dev = 0,000, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.218 seconds
Total inference time: 0.914 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:37:08
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 1.218, 'Inference time': 0.914}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 2,86e-07, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0,000, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360597;  // std dev = 0,000, 479,000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.41751358415831025;  // std dev = 2,23e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.054575503976410214;  // std dev = 0,149, 552,000 (wgt'ed) examples reached here.  /* #neg=502 #pos=50 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34197265358454965;  // std dev = 0,700, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then return -0.09441880034691802;  // std dev = 0,002, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09672216589046133;  // std dev = 0,000, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25115250222375857;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08505022478680811;  // std dev = 7,45e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04732819485375344;  // std dev = 0,128, 531,000 (wgt'ed) examples reached here.  /* #neg=481 #pos=50 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2365700192432584;  // std dev = 0,976, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.08092436732597519;  // std dev = 0,020, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08484728601873141;  // std dev = 0,000, 455,000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.19725444067686052;  // std dev = 0,872, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07497461313024849;  // std dev = 0,019, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07848690207705028;  // std dev = 1,60e-07, 444,000 (wgt'ed) examples reached here.  /* #neg=444 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1683578942001015;  // std dev = 0,781, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06949884677067207;  // std dev = 0,018, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07299472115968174;  // std dev = 1,75e-07, 450,000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1145768029617469;  // std dev = 0,086, 305,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=259 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06820678598177045;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06820678598177099;  // std dev = 0,000, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06820678598177041;  // std dev = 1,67e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067383
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.62 seconds
Total inference time: 1.591 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069162
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.291 seconds
Parameter learned model CLL: -0.069162


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [5.37e-08, 52, 0], 'true,true': [1.08e-06, 0, 259], 'false': [2.86e-07, 471, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 41, 0], 'true,true': [0.0, 0, 259], 'false': [0.0, 500, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [2.36e-08, 47, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [4.13e-07, 0, 259], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 479, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 32, 0], 'false': [0.149, 502, 50], 'true,false': [0.0, 0, 0], 'true,true,true,true': [2.23e-07, 0, 209]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.7, 0, 259], 'true,false,true': [0.002, 42, 0], 'false': [0.0, 493, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 209], 'true,true,false,true': [7.45e-09, 31, 0], 'true,false': [0.0, 0, 0], 'false': [0.128, 481, 50], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.976, 0, 259], 'true,true,false,true': [0.02, 45, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 455, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.872, 0, 259], 'true,false,true': [0.019, 48, 0], 'false': [1.6e-07, 444, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.781, 0, 259], 'true,true,false,true': [0.018, 55, 0], 'true,false': [0.0, 0, 0], 'false': [1.75e-07, 450, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [0.0, 371, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.086, 46, 259], 'false,false': [1.67e-08, 60, 0], 'true,false': [0.0, 17, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.13924587214772796, 1.7348707985650006e-16], 'true': [4.499189523731908e-15, 5.551115123125783e-17], 'true,false,true': [5.551115123125783e-17, nan], 'true,false': [5.551115123125783e-17, nan]}, {'': [0.08423067639852808, -1.3322676295501878e-16], 'true': [-4.499189523731908e-15, -2.4370749321040022e-17], 'true,false,true': [-2.4370749321040022e-17, nan], 'true,false': [-2.4370749321040022e-17, nan]}, {'': [0.05795556789535044, -9.271173483299846e-18], 'true': [6.584179790827183e-16, 1.1810883240693155e-17], 'true,true': [6.584179790827183e-16, nan], 'true,true,true': [6.584179790827183e-16, nan], 'true,false,true': [1.1810883240693155e-17, nan], 'true,false': [1.1810883240693155e-17, nan]}, {'': [0.03102993208031719, 0.022198018639031147], 'true': [0.03102993208031719, nan], 'true,true,true': [2.3798082058950725e-16, -1.734723475976807e-18], 'true,true': [0.03102993208031719, nan]}, {'': [0.024491221841403506, -7.566631567425002e-17], 'true': [0.001889451499429697, 3.979119620374967e-06], 'true,false': [3.979119620374967e-06, nan]}, {'': [0.012714168419688702, 0.016385278190139855], 'true': [0.012714168419688702, nan], 'true,true,false': [1.7906822977825105e-18, nan], 'true,true': [-1.954842454842381e-16, 1.7906822977825105e-18]}, {'': [0.015846072379506713, -2.7328566760003855e-17], 'true': [0.015846072379506713, nan], 'true,true,false': [9.283270933677399e-06, nan], 'true,true': [0.003676187898051017, 9.283270933677399e-06]}, {'': [0.012250605797244176, 5.801165353897214e-17], 'true': [0.0029325110229968757, 7.855851661715587e-06], 'true,true,true': [0.0029325110229968757, nan], 'true,false': [7.855851661715587e-06, nan], 'true,true': [0.0029325110229968757, nan]}, {'': [0.010118155133246242, 6.809367884367626e-17], 'true': [0.010118155133246242, nan], 'true,true,false': [5.902401421938168e-06, nan], 'true,true': [0.0023557657050817123, 5.902401421938168e-06]}, {'': [0.008620080526232357, -5.563994740580831e-17], 'true': [0.00733667047016499, -8.163404592832033e-19], 'false,true': [-3.650868167230973e-17, nan], 'false': [-3.650868167230973e-17, 4.625929269271485e-18], 'true,true': [0.00733667047016499, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048746;  // std dev = 1,98e-07, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.12544463852839227;  // std dev = 0,000, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.11231637819360588;  // std dev = 0,000, 508,000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.41751358415831025;  // std dev = 2,23e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.101596329487836;  // std dev = 2,11e-07, 462,000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601503;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926101;  // std dev = 1,33e-07, 503,000 (wgt'ed) examples reached here.  /* #neg=503 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948834;  // std dev = 2,53e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   | | else return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 1,40e-07, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2097577156325348;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 1,10e-07, 448,000 (wgt'ed) examples reached here.  /* #neg=448 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07324622576333749;  // std dev = 0,000, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367164;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.0684269778442027;  // std dev = 1,18e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420348;  // std dev = 0,000, 486,000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801115;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.06419184008202615;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then return -0.06419184008202573;  // std dev = 1,65e-07, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
%   | else return -0.06419184008202619;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.89 seconds
Total inference time: 1.402 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.53 seconds
Refined model CLL: -0.064223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.331000000000001 seconds
Total inference time: 1.402 seconds
AUC ROC: 1.0
Total revision time: 15.331000000000001
Best scored revision CLL: -0.064223


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:37:27
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067383, 'Learning time': 5.62, 'Inference time': 1.591}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 15.331000000000001, 'Inference time': 1.402}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.1418510649004873;  // std dev = 2,63e-07, 482,000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.12544463852839227;  // std dev = 0,000, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.11231637819360615;  // std dev = 0,000, 478,000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783626;  // std dev = 2,58e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783595;  // std dev = 2,29e-07, 470,000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.09269127618926122;  // std dev = 5,96e-08, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.08518475138839678;  // std dev = 1,30e-07, 486,000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.078776754731092;  // std dev = 0,000, 504,000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.07324622576333717;  // std dev = 0,000, 466,000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06842697784420347;  // std dev = 0,000, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.0641918400820257;  // std dev = 1,83e-07, 454,000 (wgt'ed) examples reached here.  /* #neg=454 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.686 seconds
Total inference time: 1.338 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:37:32
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 3.686, 'Inference time': 1.338}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.1418510649004875;  // std dev = 1,79e-07, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.3 seconds
Total inference time: 0.863 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:37:35
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 1.3, 'Inference time': 0.863}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0,000, 585,000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0,000, 611,000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360571;  // std dev = 0,000, 589,000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583111;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05130489286201939;  // std dev = 0,154, 609,000 (wgt'ed) examples reached here.  /* #neg=550 #pos=59 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3406205502147275;  // std dev = 0,759, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then return -0.09390306854654687;  // std dev = 0,002, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09700828646209197;  // std dev = 0,000, 600,000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2514068845133512;  // std dev = 2,53e-07, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08509036591479625;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05138281409197312;  // std dev = 0,123, 690,000 (wgt'ed) examples reached here.  /* #neg=631 #pos=59 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2351247768943123;  // std dev = 1,069, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.08030181697884635;  // std dev = 0,020, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08476422933325471;  // std dev = 1,91e-07, 595,000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.1961857380570846;  // std dev = 0,956, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07485406008861759;  // std dev = 0,022, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07841554010465973;  // std dev = 0,000, 553,000 (wgt'ed) examples reached here.  /* #neg=553 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16754319300674375;  // std dev = 0,857, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.0701517982979392;  // std dev = 0,021, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07293278249704542;  // std dev = 0,000, 572,000 (wgt'ed) examples reached here.  /* #neg=572 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11652915951313106;  // std dev = 0,083, 376,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=324 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06815254486561637;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06815254486561612;  // std dev = 1,21e-07, 497,000 (wgt'ed) examples reached here.  /* #neg=497 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06815254486561625;  // std dev = 4,15e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067348
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.352 seconds
Total inference time: 1.76 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.965 seconds
Parameter learned model CLL: -0.069103


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [4.94e-08, 46, 0], 'true,true': [1.04e-06, 0, 324], 'false': [0.0, 585, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 59, 0], 'true,true': [0.0, 0, 324], 'false': [0.0, 611, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [2.36e-08, 46, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 324], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 589, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 41, 0], 'false': [0.154, 550, 59], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 265]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.759, 0, 324], 'true,false,true': [0.002, 57, 0], 'false': [0.0, 600, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.53e-07, 0, 265], 'true,true,false,true': [7.45e-09, 42, 0], 'true,false': [0.0, 0, 0], 'false': [0.123, 631, 59], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.069, 0, 324], 'true,true,false,true': [0.02, 55, 0], 'true,false': [0.0, 0, 0], 'false': [1.91e-07, 595, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.956, 0, 324], 'true,false,true': [0.022, 66, 0], 'false': [0.0, 553, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.857, 0, 324], 'true,true,false,true': [0.021, 61, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 572, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [1.21e-07, 497, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.083, 52, 324], 'false,false': [4.15e-08, 80, 0], 'true,false': [0.0, 20, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.10886778670562777, -2.3988408600447825e-16], 'true': [3.333410365294297e-15, 5.3097622916855314e-17], 'true,false,true': [5.3097622916855314e-17, nan], 'true,false': [5.3097622916855314e-17, nan]}, {'': [0.0930312059683003, -2.558419015830148e-16], 'true': [-5.000115547941446e-15, -3.95164127408954e-17], 'true,false,true': [-3.95164127408954e-17, nan], 'true,false': [-3.95164127408954e-17, nan]}, {'': [0.0485332964771339, -1.658737286366957e-17], 'true': [-4.386066270124075e-16, 1.206764157201257e-17], 'true,true': [-4.386066270124075e-16, nan], 'true,true,true': [-4.386066270124075e-16, nan], 'true,false,true': [1.206764157201257e-17, nan], 'true,false': [1.206764157201257e-17, nan]}, {'': [0.03126839023530035, 0.02357755472608012], 'true': [0.03126839023530035, nan], 'true,true,true': [-4.558198682234605e-16, -6.769652589177784e-18], 'true,true': [0.03126839023530035, nan]}, {'': [0.025535782287983755, -7.84557604068444e-17], 'true': [0.0017802451048901122, 3.7628793377446664e-06], 'true,false': [3.7628793377446664e-06, nan]}, {'': [0.013371540779675867, 0.015008318785313505], 'true': [0.013371540779675867, nan], 'true,true,false': [1.32169407693471e-18, nan], 'true,true': [2.4131640082418496e-16, 1.32169407693471e-18]}, {'': [0.01536113224206057, 6.120221043311788e-17], 'true': [0.01536113224206057, nan], 'true,true,false': [7.554562408671674e-06, nan], 'true,true': [0.003529015438832366, 7.554562408671674e-06]}, {'': [0.012672412287017433, -2.7303857386803125e-17], 'true': [0.0028202058423649565, 7.344799584629184e-06], 'true,true,true': [0.0028202058423649565, nan], 'true,false': [7.344799584629184e-06, nan], 'true,true': [0.0028202058423649565, nan]}, {'': [0.009444349923864153, -8.695453060001226e-17], 'true': [0.009444349923864153, nan], 'true,true,false': [7.057326759049439e-06, nan], 'true,true': [0.0022693489724028596, 7.057326759049439e-06]}, {'': [0.008211127196265725, 3.0786080405550266e-18], 'true': [0.006925296759343205, -3.469446951953614e-18], 'false,true': [2.948680870231804e-17, nan], 'false': [2.948680870231804e-17, 2.151057110211241e-17], 'true,true': [0.006925296759343205, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1418510649004886;  // std dev = 0,000, 626,000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1254446385283923;  // std dev = 0,000, 598,000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360626;  // std dev = 4,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.11231637819360595;  // std dev = 0,000, 617,000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583111;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else return -0.10159632948783631;  // std dev = 1,83e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.10159632948783552;  // std dev = 3,50e-07, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.09269127618926139;  // std dev = 0,000, 598,000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948784;  // std dev = 3,15e-07, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | else return -0.0851847513883968;  // std dev = 2,24e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.08518475138839678;  // std dev = 1,40e-07, 564,000 (wgt'ed) examples reached here.  /* #neg=564 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2097577156325347;  // std dev = 2,49e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109175;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109216;  // std dev = 0,000, 650,000 (wgt'ed) examples reached here.  /* #neg=650 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527653;  // std dev = 2,70e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07324622576333654;  // std dev = 2,48e-07, 608,000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936716;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420362;  // std dev = 0,000, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801178;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.06419184008202608;  // std dev = 9,86e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A) )
%   | then return -0.06419184008202536;  // std dev = 2,43e-07, 516,000 (wgt'ed) examples reached here.  /* #neg=516 */
%   | else return -0.06419184008202618;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.156 seconds
Total inference time: 1.542 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.829 seconds
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 18.302 seconds
Total inference time: 1.542 seconds
AUC ROC: 1.0
Total revision time: 18.302
Best scored revision CLL: -0.064225


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:37:57
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067348, 'Learning time': 7.352, 'Inference time': 1.76}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 18.302, 'Inference time': 1.542}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.1418510649004878;  // std dev = 0,000, 533,000 (wgt'ed) examples reached here.  /* #neg=533 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.12544463852839233;  // std dev = 0,000, 642,000 (wgt'ed) examples reached here.  /* #neg=642 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360633;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.11231637819360571;  // std dev = 0,000, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.10159632948783558;  // std dev = 3,40e-07, 578,000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926191;  // std dev = 0,000, 656,000 (wgt'ed) examples reached here.  /* #neg=656 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0851847513883968;  // std dev = 1,29e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.08518475138839678;  // std dev = 1,46e-07, 580,000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109252;  // std dev = 0,000, 630,000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527653;  // std dev = 2,73e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333704;  // std dev = 1,05e-07, 575,000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.0684269778442036;  // std dev = 0,000, 573,000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06419184008202553;  // std dev = 2,37e-07, 577,000 (wgt'ed) examples reached here.  /* #neg=577 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.861 seconds
Total inference time: 1.482 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:38:03
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 3.861, 'Inference time': 1.482}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048827;  // std dev = 0,000, 579,000 (wgt'ed) examples reached here.  /* #neg=579 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.458 seconds
Total inference time: 0.867 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:38:05
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 1.458, 'Inference time': 0.867}


Starting fold 3

Target train facts examples: 533
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 163
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283916;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583102;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08793554228662182;  // std dev = 0,083, 76,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=2 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32662832665383;  // std dev = 0,163, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then return -0.09384655315367191;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09384655315367194;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25404938995718973;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.0850947657410491;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07675354817050785;  // std dev = 0,064, 95,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.21745268777916665;  // std dev = 0,234, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.07869948018110193;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08030961484189177;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.18297328492107107;  // std dev = 0,212, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07317918625557089;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07457433892010613;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.15736345892468678;  // std dev = 0,192, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06836829372991254;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0695882383365068;  // std dev = 3,49e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11937734864155138;  // std dev = 0,064, 44,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06521543497553849;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06521543497553849;  // std dev = 7,45e-09, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06521543497553849;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070086
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.671 seconds
Total inference time: 2.255 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064958
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.744 seconds
Parameter learned model CLL: -0.064958


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,true': [2.46e-07, 0, 40], 'false': [6.66e-08, 66, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 40], 'false': [0.0, 65, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.4e-07, 0, 40], 'true,false,true,false': [0.0, 0, 0], 'false': [7.15e-08, 87, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 5, 0], 'false': [0.083, 74, 2], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 38]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.163, 0, 40], 'true,false,true': [0.0, 1, 0], 'false': [0.0, 57, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 38], 'true,true,false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.064, 93, 2], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.234, 0, 40], 'true,true,false,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 74, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.212, 0, 40], 'true,false,true': [0.0, 1, 0], 'false': [0.0, 88, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.192, 0, 40], 'true,true,false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [3.49e-08, 84, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [7.45e-09, 68, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.064, 4, 40], 'false,false': [0.0, 8, 0], 'true,false': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.023795359904820054, 6.728624391667616e-17], 'true': [1.5099033134902129e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.07050730987310337, -3.75767792950053e-17], 'true': [-8.881784197001252e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.03684300341868297, 5.870144727903127e-17], 'true': [4.884981308350689e-16, 0.0], 'true,true': [4.884981308350689e-16, nan], 'true,true,true': [4.884981308350689e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.02769078932649235, 0.006904832957403929], 'true': [0.02769078932649235, nan], 'true,true,true': [-3.505967446184705e-16, 0.0], 'true,true': [0.02769078932649235, nan]}, {'': [0.00485586695792664, 0.0], 'true': [0.0006650898623837386, 0.0], 'true,false': [0.0, nan]}, {'': [0.002873578446470939, 0.004118191498435393], 'true': [0.002873578446470939, nan], 'true,true,false': [0.0, nan], 'true,true': [0.0, 0.0]}, {'': [0.00528143324253101, -1.050210969240013e-17], 'true': [0.00528143324253101, nan], 'true,true,false': [0.0, nan], 'true,true': [0.0013690236385829225, 0.0]}, {'': [0.0026573379624147326, -9.462128050782583e-18], 'true': [0.0011234277897702206, 0.0], 'true,true,true': [0.0011234277897702206, nan], 'true,false': [0.0, nan], 'true,true': [0.0011234277897702206, nan]}, {'': [0.0021159078212261463, 1.4538634846281813e-17], 'true': [0.0021159078212261463, nan], 'true,true,false': [0.0, nan], 'true,true': [0.0009260049275734483, 0.0]}, {'': [0.00471807733447845, 2.921639538487254e-18], 'true': [0.004068095347840712, 0.0], 'false,true': [8.163404592832033e-19, nan], 'false': [8.163404592832033e-19, 0.0], 'true,true': [0.004068095347840712, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283915;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360624;  // std dev = 6,05e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0.07144030839421243;  // std dev = 0,599, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3246886882770438;  // std dev = 0,110, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09313738548562224;  // std dev = 0,022, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2544171428467311;  // std dev = 3,33e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.2374370481349747;  // std dev = 0,074, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), actor(B) )
%   | then return -0.08514999327773767;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0.04204079285560022;  // std dev = 0,491, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.21457439881212298;  // std dev = 0,104, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.10721759228987875;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2172564562943616;  // std dev = 0,102, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08080702377200752;  // std dev = 0,058, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1816953816166031;  // std dev = 0,130, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11266420664262111;  // std dev = 0,022, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07456324333725632;  // std dev = 0,050, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1562892633974164;  // std dev = 0,117, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06999861094732614;  // std dev = 0,051, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1360431530924033;  // std dev = 0,076, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.13758681868693423;  // std dev = 0,074, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.11181954103289633;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then return -0.06387238689629746;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.08435171020735323;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080207
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.463 seconds
Total inference time: 1.463 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.203 seconds
Refined model CLL: -0.066273


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070086
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.081 seconds
Total inference time: 2.255 seconds
AUC ROC: 1.0
Total revision time: 6.081
Best scored revision CLL: -0.064958


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:38:16
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070086, 'Learning time': 1.671, 'Inference time': 2.255}, 'CLL': -0.070086, 'Learning time': 6.081, 'Inference time': 2.255}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7,60e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( female(A) )
%   | then return 0.4946679990244764;  // std dev = 0,192, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.40357409454236237;  // std dev = 0,129, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.38902945863118793;  // std dev = 0,127, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else return -0.10259704749319581;  // std dev = 0,079, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09260715049853815;  // std dev = 2,36e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( female(A) )
%   | then return 0.3098415581927232;  // std dev = 0,122, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3269487070526826;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26559229061685585;  // std dev = 0,039, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.3008510684829081;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08713103863808261;  // std dev = 0,130, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07856924314455245;  // std dev = 3,94e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2171001989477798;  // std dev = 0,034, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.24741861720514996;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07306618028683355;  // std dev = 2,69e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18246858879719846;  // std dev = 0,030, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.20681680860550203;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06826935755170986;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15681042691895547;  // std dev = 0,026, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.17195519579765858;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13717611374292138;  // std dev = 0,024, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14750935744247284;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06474095066444949;  // std dev = 0,055, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.115918
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.852 seconds
Total inference time: 1.208 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:38:19
{'Precision': [0.626761, 0.5], 'F1': 0.770563, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.115918, 'Learning time': 1.852, 'Inference time': 1.208}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,88e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( female(A) )
%   | then return 0.7672398441904211;  // std dev = 0,287, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.236241
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.786 seconds
Total inference time: 0.832 seconds
AUC ROC: 0.848575


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:38:21
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 0.136922, 'AUC ROC': 0.848575, 'Recall': 0.0, 'CLL': -0.236241, 'Learning time': 0.786, 'Inference time': 0.832}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048796;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 2,98e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 9,19e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583105;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0930863309034734;  // std dev = 0,066, 183,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3251414228119875;  // std dev = 0,203, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09340944868900876;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2543312736069833;  // std dev = 1,26e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0778381495351501;  // std dev = 0,059, 169,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.21551121420863217;  // std dev = 0,291, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07988239441736286;  // std dev = 3,33e-08, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.1814973304243675;  // std dev = 0,264, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07360745099750737;  // std dev = 0,000885, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07420451150847109;  // std dev = 3,80e-08, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1562083131621961;  // std dev = 0,240, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06840395522979086;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0692651258276092;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.12079381224821276;  // std dev = 0,059, 88,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=81 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06493082473133238;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06493082473133248;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06493082473133238;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069917
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.525 seconds
Total inference time: 2.012 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064756
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.252 seconds
Parameter learned model CLL: -0.064756


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 6, 0], 'true,true': [0.0, 0, 81], 'false': [0.0, 139, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 6, 0], 'true,true': [2.53e-07, 0, 81], 'false': [2.98e-08, 159, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [3.42e-07, 0, 81], 'true,false,true,false': [0.0, 0, 0], 'false': [9.19e-08, 152, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 4, 0], 'false': [0.066, 180, 3], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 78]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.203, 0, 81], 'true,false,true': [0.0, 2, 0], 'false': [0.0, 166, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.26e-07, 0, 78], 'true,true,false,true': [3.73e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false': [0.059, 166, 3], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.291, 0, 81], 'true,true,false,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false': [3.33e-08, 170, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.264, 0, 81], 'true,false,true': [0.000885, 3, 0], 'false': [3.8e-08, 161, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.24, 0, 81], 'true,true,false,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 166, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [0.0, 138, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.059, 7, 81], 'false,false': [2.63e-09, 9, 0], 'true,false': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.06420927467300822, -7.348238724137727e-17], 'true': [-7.894919286223335e-16, -6.938893903907228e-18], 'true,false,true': [-6.938893903907228e-18, nan], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.045838135164233344, 5.586027796856134e-18], 'true': [7.894919286223335e-16, -2.3129646346357427e-18], 'true,false,true': [-2.3129646346357427e-18, nan], 'true,false': [-2.3129646346357427e-18, nan]}, {'': [0.02441172772488658, 5.551115123125783e-17], 'true': [1.4474018691409447e-15, 0.0], 'true,true': [1.4474018691409447e-15, nan], 'true,true,true': [1.4474018691409447e-15, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.012503901243762732, 0.0043452045543516254], 'true': [0.012503901243762732, nan], 'true,true,true': [0.0, 0.0], 'true,true': [0.012503901243762732, nan]}, {'': [0.004603334407717906, -2.6752362039160398e-17], 'true': [0.00051014965183883, 0.0], 'true,false': [0.0, nan]}, {'': [0.009725417237248167, 0.0035022846485049607], 'true': [0.009725417237248167, nan], 'true,true,false': [1.734723475976807e-18, nan], 'true,true': [2.049642507000289e-16, 1.734723475976807e-18]}, {'': [0.0073053718833558275, 6.530723674265627e-18], 'true': [0.0073053718833558275, nan], 'true,true,false': [-9.912705577010326e-19, nan], 'true,true': [0.0010476337195531474, -9.912705577010326e-19]}, {'': [0.003072516933276851, 8.964533739209338e-18], 'true': [0.0008620738518351527, 2.6096733960155144e-07], 'true,true,true': [0.0008620738518351527, nan], 'true,false': [2.6096733960155144e-07, nan], 'true,true': [0.0008620738518351527, nan]}, {'': [0.004349626868441064, -1.538260817251723e-17], 'true': [0.004349626868441064, nan], 'true,true,false': [-9.912705577010326e-19, nan], 'true,true': [0.000712398982687091, -9.912705577010326e-19]}, {'': [0.0038558236881637226, -2.5678627780445798e-17], 'true': [0.0035120708688969175, 0.0], 'false,true': [-2.4939792582159313e-17, nan], 'false': [-2.4939792582159313e-17, 7.709882115452476e-19], 'true,true': [0.0035120708688969175, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048818;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839133;  // std dev = 4,21e-08, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360629;  // std dev = 8,43e-08, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583105;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.10159632948783645;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else return 0.2877361057467737;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3217823937288592;  // std dev = 0,049, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0926912761892607;  // std dev = 7,88e-08, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.24624694183435075;  // std dev = 0,054, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return 0.24667239972038765;  // std dev = 0,052, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 7,15e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else return 0.11990337374256874;  // std dev = 0,440, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20426982461061943;  // std dev = 0,050, 40,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else return 0.20574170846259995;  // std dev = 0,049, 43,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109151;  // std dev = 8,56e-08, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18041572715814647;  // std dev = 0,069, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12763565505326593;  // std dev = 0,000252, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07359305328185592;  // std dev = 0,052, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14752162317340053;  // std dev = 0,047, 40,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else return 0.14926141472051804;  // std dev = 0,041, 43,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06871318209786975;  // std dev = 0,049, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13678489862710055;  // std dev = 0,056, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.1299872939156079;  // std dev = 0,000475, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11048988813113259;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then return -0.06415382356288875;  // std dev = 4,71e-08, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else return -0.06415382356288878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081746
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.968 seconds
Total inference time: 1.602 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066122
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.777 seconds
Refined model CLL: -0.066122


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069917
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.521999999999998 seconds
Total inference time: 2.012 seconds
AUC ROC: 1.0
Total revision time: 9.521999999999998
Best scored revision CLL: -0.064756


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:38:35
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069917, 'Learning time': 2.525, 'Inference time': 2.012}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069917, 'Learning time': 9.521999999999998, 'Inference time': 2.012}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048816;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1254446385283914;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360633;  // std dev = 7,60e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783645;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 8,43e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09504540086394583;  // std dev = 0,383, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else return 0.2397014701168584;  // std dev = 0,071, 44,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   else return -0.08730006766533;  // std dev = 0,367, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21109338900985847;  // std dev = 0,012, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10636939698910812;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07845301305719635;  // std dev = 3,65e-08, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07296530805440211;  // std dev = 6,32e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17807582122055068;  // std dev = 0,010, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09706827394656942;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06818102893298138;  // std dev = 3,16e-08, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15348655877051276;  // std dev = 0,009, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08855366783467375;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13458670972374034;  // std dev = 0,008, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08166196526864547;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06395905867834352;  // std dev = 0,003, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08455
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.208 seconds
Total inference time: 1.403 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:38:39
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.08455, 'Learning time': 2.208, 'Inference time': 1.403}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1418510649004881;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.903 seconds
Total inference time: 0.97 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:38:41
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.188432, 'Learning time': 0.903, 'Inference time': 0.97}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360663;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.41751358415830936;  // std dev = 3,37e-07, 118,000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0935481137723924;  // std dev = 0,064, 258,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3246368421171585;  // std dev = 0,235, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09337035035313089;  // std dev = 1,10e-07, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.254426977621299;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07775425107559039;  // std dev = 0,059, 224,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.21485503229675706;  // std dev = 0,337, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07985749677919116;  // std dev = 1,13e-07, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.18099700485385478;  // std dev = 0,306, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07335199371933801;  // std dev = 0,001, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07418295081915513;  // std dev = 0,000, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.15581564748640844;  // std dev = 0,278, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06842023600251838;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06924628257074525;  // std dev = 5,16e-08, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.12269961360528166;  // std dev = 0,055, 131,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=122 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06491422214734642;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06491422214734617;  // std dev = 5,87e-08, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06491422214734642;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.93 seconds
Total inference time: 2.342 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064772
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.881 seconds
Parameter learned model CLL: -0.064772


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 9, 0], 'true,true': [6.85e-07, 0, 122], 'false': [0.0, 206, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [5.27e-09, 12, 0], 'true,true': [0.0, 0, 122], 'false': [0.0, 237, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [1.49e-08, 17, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [4.69e-07, 0, 122], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 204, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 5, 0], 'false': [0.064, 254, 4], 'true,false': [0.0, 0, 0], 'true,true,true,true': [3.37e-07, 0, 118]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.235, 0, 122], 'true,false,true': [0.0, 10, 0], 'false': [1.1e-07, 243, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 118], 'true,true,false,true': [3.73e-09, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.059, 220, 4], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.337, 0, 122], 'true,true,false,true': [0.0, 14, 0], 'true,false': [0.0, 0, 0], 'false': [1.13e-07, 223, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.306, 0, 122], 'true,false,true': [0.001, 10, 0], 'false': [0.0, 246, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.278, 0, 122], 'true,true,false,true': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 230, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [5.87e-08, 223, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.055, 9, 122], 'false,false': [0.0, 16, 0], 'true,false': [1.32e-09, 3, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.0639822854146069, -2.3713501496848003e-16], 'true': [3.843919718046444e-15, -9.25185853854297e-18], 'true,false,true': [-9.25185853854297e-18, nan], 'true,false': [-9.25185853854297e-18, nan]}, {'': [0.05820504868840508, -7.307797124114954e-17], 'true': [-1.3395477805313363e-15, 2.3129646346357427e-18], 'true,false,true': [2.3129646346357427e-18, nan], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.04785414357399958, -4.7891973611281265e-17], 'true': [1.8054774433248448e-15, 1.3061447348531253e-17], 'true,true': [1.8054774433248448e-15, nan], 'true,true,true': [1.8054774433248448e-15, nan], 'true,false,true': [1.3061447348531253e-17, nan], 'true,false': [1.3061447348531253e-17, nan]}, {'': [0.010508976828804324, 0.0041131347888474275], 'true': [0.010508976828804324, nan], 'true,true,true': [9.634477773018308e-16, 0.0], 'true,true': [0.010508976828804324, nan]}, {'': [0.012614627284915598, 4.9343245538895844e-17], 'true': [0.00045446476967041986, 0.0], 'true,false': [0.0, nan]}, {'': [0.008306679031220773, 0.003525742805116246], 'true': [0.008306679031220773, nan], 'true,true,false': [1.3877787807814458e-18, nan], 'true,true': [-3.838737237686982e-16, 1.3877787807814458e-18]}, {'': [0.008798876218334202, 5.675579587769859e-17], 'true': [0.008798876218334202, nan], 'true,true,false': [-9.912705577010326e-19, nan], 'true,true': [0.0009330335537065708, -9.912705577010326e-19]}, {'': [0.005239882334918738, -2.166288828536891e-17], 'true': [0.000768356492299662, 1.0068174464972213e-07], 'true,true,true': [0.000768356492299662, nan], 'true,false': [1.0068174464972213e-07, nan], 'true,true': [0.000768356492299662, nan]}, {'': [0.003500157944311473, 1.1584935909132068e-17], 'true': [0.003500157944311473, nan], 'true,true,false': [0.0, nan], 'true,true': [0.0006354161014793448, 0.0]}, {'': [0.003771859388958335, 1.7652081563077803e-17], 'true': [0.003070201623639673, 5.782411586589357e-19], 'false,true': [1.5433593615865406e-17, nan], 'false': [1.5433593615865406e-17, -1.734723475976807e-18], 'true,true': [0.003070201623639673, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048846;  // std dev = 0,000, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839194;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360679;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.41751358415830936;  // std dev = 3,37e-07, 118,000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B), actor(A) )
%   | then return -0.10159632948783656;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | else if ( actor(A) )
%   | | then return 0.4175135841583104;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.10159632948783617;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2,19e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926054;  // std dev = 6,50e-08, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694898;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07978845005382346;  // std dev = 0,677, 243,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.21189360470874016;  // std dev = 0,085, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return -0.08668807983522471;  // std dev = 0,043, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.18339666542140054;  // std dev = 0,087, 72,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07916926082715035;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18080416095044613;  // std dev = 0,110, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09828272555616657;  // std dev = 0,068, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07358661562398994;  // std dev = 0,000, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1462268838922722;  // std dev = 0,041, 59,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15721411115211037;  // std dev = 0,069, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.10773771117881148;  // std dev = 0,076, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06872484429097304;  // std dev = 1,08e-07, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.136621931237613;  // std dev = 0,087, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.0808161545602969;  // std dev = 0,043, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then return -0.06445458291352192;  // std dev = 1,21e-07, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
%   | else return -0.06445458291352227;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071692
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.15 seconds
Total inference time: 1.586 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06444
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.243 seconds
Refined model CLL: -0.06444


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071692
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.204 seconds
Total inference time: 1.586 seconds
AUC ROC: 1.0
Total revision time: 10.204
Best scored revision CLL: -0.06444


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:38:55
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069929, 'Learning time': 2.93, 'Inference time': 2.342}, 'CLL': -0.071692, 'Learning time': 10.204, 'Inference time': 1.586}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048852;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839177;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360679;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783655;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583093;  // std dev = 3,53e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2,19e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926051;  // std dev = 6,99e-08, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08538769370228434;  // std dev = 0,050, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1,93e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07898626909514465;  // std dev = 0,047, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07321823263009565;  // std dev = 1,49e-08, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452781;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06866455380854393;  // std dev = 0,068, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080111;  // std dev = 5,16e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0641544702872918;  // std dev = 2,37e-06, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067334
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.668 seconds
Total inference time: 1.532 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:39:00
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067334, 'Learning time': 2.668, 'Inference time': 1.532}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.1418510649004885;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.979 seconds
Total inference time: 0.942 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:39:02
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.188432, 'Learning time': 0.979, 'Inference time': 0.942}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 1,33e-07, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283921;  // std dev = 0,000, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360697;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.41751358415830897;  // std dev = 4,54e-07, 158,000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | | | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09343422392736257;  // std dev = 0,065, 318,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3243831440357495;  // std dev = 0,263, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then return -0.09274047016432434;  // std dev = 0,000177, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09337999184014824;  // std dev = 0,000, 330,000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25447510559560205;  // std dev = 0,000, 158,000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08518091786331093;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07913572662414309;  // std dev = 0,054, 338,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.21453673222623112;  // std dev = 0,378, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.07877346294178687;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07976369611927553;  // std dev = 0,000, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.1807543807222928;  // std dev = 0,343, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07331267301853674;  // std dev = 0,000935, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07410171422012601;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.15562527796479805;  // std dev = 0,312, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06858572025998635;  // std dev = 0,001, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06917527878636298;  // std dev = 0,000, 321,000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.12584138455459853;  // std dev = 0,050, 172,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=163 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06485165684663169;  // std dev = 1,44e-07, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0648516568466321;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070254
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.639 seconds
Total inference time: 1.815 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064743
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.604 seconds
Parameter learned model CLL: -0.064743


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 8, 0], 'true,true': [1.02e-06, 0, 163], 'false': [1.33e-07, 313, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [7.45e-09, 14, 0], 'true,true': [0.0, 0, 163], 'false': [0.0, 354, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [1.05e-08, 13, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [5.53e-07, 0, 163], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 287, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [3.73e-09, 8, 0], 'false': [0.065, 313, 5], 'true,false': [0.0, 0, 0], 'true,true,true,true': [4.54e-07, 0, 158]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.263, 0, 163], 'true,false,true': [0.000177, 14, 0], 'false': [0.0, 330, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 158], 'true,true,false,true': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.054, 333, 5], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.378, 0, 163], 'true,true,false,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 300, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.343, 0, 163], 'true,false,true': [0.000935, 14, 0], 'false': [0.0, 313, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.312, 0, 163], 'true,true,false,true': [0.001, 11, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 321, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [1.44e-07, 287, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.05, 9, 163], 'false,false': [0.0, 19, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.04459491809446275, 5.675261467732429e-17], 'true': [6.3643705166242106e-15, -6.938893903907228e-18], 'true,false,true': [-6.938893903907228e-18, nan], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.05199939421767196, -9.534118629549367e-17], 'true': [-2.7898610483832155e-15, 3.96508223080413e-18], 'true,false,true': [3.96508223080413e-18, nan], 'true,false': [3.96508223080413e-18, nan]}, {'': [0.03049622040788808, -1.1605118724304773e-16], 'true': [1.8744378918824727e-15, 8.540177112501205e-18], 'true,true': [1.8744378918824727e-15, nan], 'true,true,true': [1.8744378918824727e-15, nan], 'true,false,true': [8.540177112501205e-18, nan], 'true,false': [8.540177112501205e-18, nan]}, {'': [0.01236088436244036, 0.004170409945488073], 'true': [0.01236088436244036, nan], 'true,true,true': [1.3041607175343611e-15, 1.734723475976807e-18], 'true,true': [0.01236088436244036, nan]}, {'': [0.013065793190641283, -5.5174720011674444e-17], 'true': [0.0004259180956623777, 3.14606133743662e-08], 'true,false': [3.14606133743662e-08, nan]}, {'': [0.0064582843873876505, 0.002930375403499088], 'true': [0.0064582843873876505, nan], 'true,true,false': [-1.3877787807814458e-18, nan], 'true,true': [-3.147974145772596e-16, -1.3877787807814458e-18]}, {'': [0.005098267842709656, -6.88338275267597e-17], 'true': [0.005098267842709656, nan], 'true,true,false': [-2.3129646346357427e-18, nan], 'true,true': [0.0008781519726039066, -2.3129646346357427e-18]}, {'': [0.005368102580737876, -7.590662213092125e-17], 'true': [0.0007235061633900488, 6.243755168543791e-08], 'true,true,true': [0.0007235061633900488, nan], 'true,false': [6.243755168543791e-08, nan], 'true,true': [0.0007235061633900488, nan]}, {'': [0.0035378691779903767, -8.093214572033851e-17], 'true': [0.0035378691779903767, nan], 'true,true,false': [1.2349367938358957e-07, nan], 'true,true': [0.0005985881024995011, 1.2349367938358957e-07]}, {'': [0.002467040520020594, 7.691741216357293e-17], 'true': [0.002467040520020594, nan], 'false,true': [7.27254106723099e-17, nan], 'false': [7.27254106723099e-17, -2.921639538487254e-18], 'true,true': [0.002467040520020594, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048768;  // std dev = 1,69e-07, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839216;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.1123163781936069;  // std dev = 0,000, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.41751358415830897;  // std dev = 4,54e-07, 158,000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.10159632948783655;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.330995265217286;  // std dev = 0,474, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.10159632948783626;  // std dev = 2,63e-09, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3212987604012366;  // std dev = 0,042, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926046;  // std dev = 1,44e-07, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2361581845927471;  // std dev = 0,078, 72,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=68 */
%   | | else return 0.22412930463623407;  // std dev = 0,098, 99,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07988132167523507;  // std dev = 0,794, 329,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.18618398602837224;  // std dev = 0,092, 77,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=70 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.21720849056508162;  // std dev = 0,125, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | | else return -0.10435268194041994;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07916249061227308;  // std dev = 1,22e-07, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18371983452371798;  // std dev = 0,147, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09787057031215474;  // std dev = 0,047, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07381650614300023;  // std dev = 0,050, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1577704940559524;  // std dev = 0,131, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.09510216581187204;  // std dev = 0,057, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06870462301380435;  // std dev = 0,000, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13793341988088176;  // std dev = 0,119, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08695822216276045;  // std dev = 0,057, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(A) )
%   | then return -0.06443675018470073;  // std dev = 2,58e-08, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | else return -0.06443675018470063;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070722
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.5 seconds
Total inference time: 2.189 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064775
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.12 seconds
Refined model CLL: -0.064775


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070254
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.863 seconds
Total inference time: 1.815 seconds
AUC ROC: 1.0
Total revision time: 11.863
Best scored revision CLL: -0.064743


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:39:19
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070254, 'Learning time': 3.639, 'Inference time': 1.815}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070254, 'Learning time': 11.863, 'Inference time': 1.815}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 1,69e-07, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.12592775986565272;  // std dev = 0,155, 321,000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.11226821933638334;  // std dev = 1,71e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10155663537753086;  // std dev = 1,85e-07, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.09306003745288392;  // std dev = 0,124, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.08585945818299075;  // std dev = 0,165, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07867240747742697;  // std dev = 5,96e-08, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07315569736867199;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06867088163659436;  // std dev = 0,098, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06440499401362529;  // std dev = 0,093, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068164
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.476 seconds
Total inference time: 1.404 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:39:24
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.068164, 'Learning time': 3.476, 'Inference time': 1.404}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048785;  // std dev = 8,94e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.122 seconds
Total inference time: 0.903 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:39:26
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.188432, 'Learning time': 1.122, 'Inference time': 0.903}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 2,35e-07, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0,000, 410,000 (wgt'ed) examples reached here.  /* #neg=410 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360628;  // std dev = 0,000, 387,000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0888730472906268;  // std dev = 0,080, 408,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32652363615943236;  // std dev = 0,366, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then return -0.09274788579313138;  // std dev = 0,000240, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0937668586627998;  // std dev = 1,12e-07, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2540692301853801;  // std dev = 1,98e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08518034000125638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07488996493207314;  // std dev = 0,070, 399,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2172901128972394;  // std dev = 0,523, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.07896033595109075;  // std dev = 0,002, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08038393256009682;  // std dev = 1,63e-07, 421,000 (wgt'ed) examples reached here.  /* #neg=421 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.1828493989075964;  // std dev = 0,474, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07332880379186155;  // std dev = 0,002, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07463864690927925;  // std dev = 2,44e-07, 399,000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.157266295941764;  // std dev = 0,430, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06840668702265432;  // std dev = 8,33e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06964440334952145;  // std dev = 1,84e-07, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11879536848903036;  // std dev = 0,064, 225,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=204 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0652648918062197;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06526489180621932;  // std dev = 1,13e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06526489180621972;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070132
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.434 seconds
Total inference time: 2.344 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065147
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.914 seconds
Parameter learned model CLL: -0.065147


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 15, 0], 'true,true': [1.08e-06, 0, 204], 'false': [2.35e-07, 358, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 19, 0], 'true,true': [0.0, 0, 204], 'false': [0.0, 410, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [1.39e-08, 16, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [6.36e-07, 0, 204], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 387, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 20, 0], 'false': [0.08, 398, 10], 'true,false': [0.0, 0, 0], 'true,true,true,true': [3.04e-07, 0, 194]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.366, 0, 204], 'true,false,true': [0.00024, 19, 0], 'false': [1.12e-07, 374, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.98e-07, 0, 194], 'true,true,false,true': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.07, 389, 10], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.523, 0, 204], 'true,true,false,true': [0.002, 18, 0], 'true,false': [0.0, 0, 0], 'false': [1.63e-07, 421, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.474, 0, 204], 'true,false,true': [0.002, 16, 0], 'false': [2.44e-07, 399, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.43, 0, 204], 'true,true,false,true': [8.33e-09, 17, 0], 'true,false': [0.0, 0, 0], 'false': [1.84e-07, 360, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [1.13e-07, 379, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.064, 21, 204], 'false,false': [0.0, 13, 0], 'true,false': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.06380183899418836, 1.5381860899834572e-16], 'true': [5.712206307091002e-15, -1.4802973661668754e-17], 'true,false,true': [-1.4802973661668754e-17, nan], 'true,false': [-1.4802973661668754e-17, nan]}, {'': [0.055642062424638476, -1.2997732971221344e-16], 'true': [-3.692035783851501e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.030063890789647083, -2.2950346762277136e-17], 'true': [1.9853399969767506e-15, 1.214306433183765e-17], 'true,true': [1.9853399969767506e-15, nan], 'true,true,true': [1.9853399969767506e-15, nan], 'true,false,true': [1.214306433183765e-17, nan], 'true,false': [1.214306433183765e-17, nan]}, {'': [0.022830889105803193, 0.006442900012819257], 'true': [0.022830889105803193, nan], 'true,true,true': [4.76136884787696e-16, -9.714451465470119e-18], 'true,true': [0.022830889105803193, nan]}, {'': [0.014300840821192524, 3.3247320523534097e-17], 'true': [0.0006552716926211879, 5.7683650514067945e-08], 'true,false': [5.7683650514067945e-08, nan]}, {'': [0.005365127006231631, 0.004886322034624059], 'true': [0.005365127006231631, nan], 'true,true,false': [-2.7755575615628915e-18, nan], 'true,true': [2.0144252817940985e-16, -2.7755575615628915e-18]}, {'': [0.007770688787757426, 6.329062373160037e-17], 'true': [0.007770688787757426, nan], 'true,true,false': [2.808577738364071e-07, nan], 'true,true': [0.001340286386373345, 2.808577738364071e-07]}, {'': [0.005445727735791675, 1.4914274215515887e-16], 'true': [0.0010999397278352906, 1.457744251559534e-07], 'true,true,true': [0.0010999397278352906, nan], 'true,false': [1.457744251559534e-07, nan], 'true,true': [0.0010999397278352906, nan]}, {'': [0.004453196215072263, 9.43689570931383e-17], 'true': [0.004453196215072263, nan], 'true,true,false': [4.081702296416017e-18, nan], 'true,true': [0.0009067347273494133, 4.081702296416017e-18]}, {'': [0.004397079756364207, 3.341997880249196e-17], 'true': [0.004137678747463759, 0.0], 'false,true': [3.398044085923962e-17, nan], 'false': [3.398044085923962e-17, -1.6012832085939759e-18], 'true,true': [0.004137678747463759, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.14185106490048732;  // std dev = 3,01e-07, 401,000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839222;  // std dev = 0,000, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360613;  // std dev = 0,000, 418,000 (wgt'ed) examples reached here.  /* #neg=418 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(B) )
%   | then return -0.10159632948783598;  // std dev = 2,06e-07, 392,000 (wgt'ed) examples reached here.  /* #neg=392 */
%   | else if ( female(A) )
%   | | then return 0.41751358415831047;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.31369160142908104;  // std dev = 0,464, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3211633402411215;  // std dev = 0,046, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0948661807603447;  // std dev = 0,040, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.09294171974593075;  // std dev = 0,058, 330,000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2550864415650574;  // std dev = 3,35e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.08501541758872894;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.26317606572890767;  // std dev = 0,031, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08526376241287507;  // std dev = 0,038, 390,000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2099774901701468;  // std dev = 0,033, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07863133140083416;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07910475526487044;  // std dev = 0,071, 408,000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1772585774174219;  // std dev = 0,029, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07892114914318622;  // std dev = 0,107, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.0732872525044052;  // std dev = 0,034, 393,000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1528674011426622;  // std dev = 0,026, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07215569196183816;  // std dev = 0,065, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06870087020515564;  // std dev = 0,063, 398,000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1341038866475616;  // std dev = 0,023, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.0635185227983144;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.09404477886103178;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then return -0.06413345309670827;  // std dev = 0,000, 347,000 (wgt'ed) examples reached here.  /* #neg=347 */
%   | else return -0.06413345309670777;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072618
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.351 seconds
Total inference time: 1.953 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063824
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.074 seconds
Refined model CLL: -0.063824


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072618
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.772999999999998 seconds
Total inference time: 1.953 seconds
AUC ROC: 1.0
Total revision time: 13.772999999999998
Best scored revision CLL: -0.063824


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:39:45
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070132, 'Learning time': 4.434, 'Inference time': 2.344}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072618, 'Learning time': 13.772999999999998, 'Inference time': 1.953}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1418510649004874;  // std dev = 2,92e-07, 416,000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.12544463852839224;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11231637819360644;  // std dev = 0,000, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.10159632948783626;  // std dev = 1,23e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.0926912761892606;  // std dev = 1,87e-07, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839678;  // std dev = 1,21e-07, 405,000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07877675473109144;  // std dev = 9,66e-08, 401,000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.0732462257633372;  // std dev = 3,65e-08, 396,000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420335;  // std dev = 0,000, 397,000 (wgt'ed) examples reached here.  /* #neg=397 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06422870971761555;  // std dev = 0,015, 397,000 (wgt'ed) examples reached here.  /* #neg=397 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065856
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.493 seconds
Total inference time: 1.355 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:39:50
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065856, 'Learning time': 3.493, 'Inference time': 1.355}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048763;  // std dev = 1,98e-07, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.189 seconds
Total inference time: 0.979 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:39:52
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.188432, 'Learning time': 1.189, 'Inference time': 0.979}


Starting fold 4

Target train facts examples: 590
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 106
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 9,31e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.03295369627842851;  // std dev = 0,176, 121,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=16 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34574756263514633;  // std dev = 0,366, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then return -0.09360457826951832;  // std dev = 0,002, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09862773971093405;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25044320363613387;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08511360625959524;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.043897319454511446;  // std dev = 0,134, 150,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=16 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.24163563683371495;  // std dev = 0,515, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.0814972379597598;  // std dev = 0,012, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08666197533473761;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.20094443202906398;  // std dev = 0,458, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.0741179581654167;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08004374572694611;  // std dev = 2,79e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1711325900890529;  // std dev = 0,409, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.07058348311017637;  // std dev = 0,012, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07434421656472771;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.10921597386613799;  // std dev = 0,093, 82,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0693872068917391;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06938720689173915;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06938720689173912;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068807
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.464 seconds
Total inference time: 1.343 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06995
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.137 seconds
Parameter learned model CLL: -0.06995


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 11, 0], 'true,true': [0.0, 0, 67], 'false': [7.6e-08, 119, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [5.27e-09, 12, 0], 'true,true': [1.46e-07, 0, 67], 'false': [0.0, 125, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.88e-07, 0, 67], 'true,false,true,false': [0.0, 0, 0], 'false': [9.31e-08, 123, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 3, 0], 'false': [0.176, 105, 16], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 51]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.366, 0, 67], 'true,false,true': [0.002, 13, 0], 'false': [0.0, 125, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 51], 'true,true,false,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false': [0.134, 134, 16], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.515, 0, 67], 'true,true,false,true': [0.012, 9, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 114, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.458, 0, 67], 'true,false,true': [0.007, 7, 0], 'false': [2.79e-08, 120, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.409, 0, 67], 'true,true,false,true': [0.012, 12, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 111, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [0.0, 111, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.093, 15, 67], 'false,false': [0.0, 10, 0], 'true,false': [0.0, 7, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.12113740959894706, 4.8513947294544656e-17], 'true': [-9.544603913195376e-16, -1.0092936587501423e-17], 'true,false,true': [-1.0092936587501423e-17, nan], 'true,false': [-1.0092936587501423e-17, nan]}, {'': [0.09196679314565047, -1.7763568394002505e-18], 'true': [3.1815346377317917e-16, 2.3129646346357427e-18], 'true,false,true': [2.3129646346357427e-18, nan], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.05037716793983092, 7.040438692744895e-17], 'true': [5.302557729552986e-16, 0.0], 'true,true': [5.302557729552986e-16, nan], 'true,true,true': [5.302557729552986e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.014139125745607894, 0.03092126030385858], 'true': [0.014139125745607894, nan], 'true,true,true': [-3.483052626275001e-16, -1.1564823173178713e-18], 'true,true': [0.014139125745607894, nan]}, {'': [0.02794419100724297, -4.796163466380676e-17], 'true': [0.001997883719786725, 4.5876637939154745e-06], 'true,false': [4.5876637939154745e-06, nan]}, {'': [0.014356292515093242, 0.017960384559060568], 'true': [0.014356292515093242, nan], 'true,true,false': [0.0, nan], 'true,true': [-4.353815782843751e-17, 0.0]}, {'': [0.014388996828317483, -3.895519384649672e-18], 'true': [0.014388996828317483, nan], 'true,true,false': [1.5474349068359756e-05, nan], 'true,true': [0.003954851492125833, 1.5474349068359756e-05]}, {'': [0.009312589493166363, 6.47630097698008e-18], 'true': [0.0031278072208464403, 7.435303776877741e-06], 'true,true,true': [0.0031278072208464403, nan], 'true,false': [7.435303776877741e-06, nan], 'true,true': [0.0031278072208464403, nan]}, {'': [0.009643628097128484, -1.50030138462859e-17], 'true': [0.009643628097128484, nan], 'true,true,false': [1.1893859362042264e-05, nan], 'true,true': [0.0024937791235685428, 1.1893859362042264e-05]}, {'': [0.010203085656926956, 1.8350793795457133e-18], 'true': [0.008565163097152313, 0.0], 'false,true': [-1.0002009230857266e-18, nan], 'false': [-1.0002009230857266e-18, -2.0816681711721684e-18], 'true,true': [0.008565163097152313, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1418510649004877;  // std dev = 5,58e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.12544463852839105;  // std dev = 8,43e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360624;  // std dev = 7,30e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783663;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926101;  // std dev = 3,16e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.25517224256948956;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839679;  // std dev = 4,08e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5,16e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.0901820101870226;  // std dev = 0,031, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.20975771563253554;  // std dev = 3,65e-08, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109161;  // std dev = 5,96e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08369551657978423;  // std dev = 0,053, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07324622576333717;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367105;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.08061748100443258;  // std dev = 0,043, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 5,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07140621540952972;  // std dev = 0,039, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064033
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.886 seconds
Total inference time: 1.116 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064428
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.192 seconds
Refined model CLL: -0.064428


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064033
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.679 seconds
Total inference time: 1.116 seconds
AUC ROC: 1.0
Total revision time: 7.679
Best scored revision CLL: -0.064428


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:40:04
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.068807, 'Learning time': 2.464, 'Inference time': 1.343}, 'CLL': -0.064033, 'Learning time': 7.679, 'Inference time': 1.116}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.1418510649004877;  // std dev = 5,58e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.12544463852839108;  // std dev = 8,02e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360625;  // std dev = 8,16e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783665;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926094;  // std dev = 5,58e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839679;  // std dev = 4,47e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109161;  // std dev = 6,05e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07324622576333711;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420267;  // std dev = 4,47e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06419184008202625;  // std dev = 0,000, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.223 seconds
Total inference time: 1.158 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:40:07
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 2.223, 'Inference time': 1.158}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.799 seconds
Total inference time: 0.734 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:40:09
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 0.799, 'Inference time': 0.734}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048816;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360685;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583096;  // std dev = 2,92e-07, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.057198771083889606;  // std dev = 0,145, 304,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=26 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3422053804870316;  // std dev = 0,507, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then return -0.09407380167544228;  // std dev = 0,002, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09649322127625937;  // std dev = 9,88e-08, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2511087346644593;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.0850770752829976;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.047383809572963224;  // std dev = 0,128, 278,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=26 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2368049831821657;  // std dev = 0,706, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.08073783035836313;  // std dev = 0,015, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0846572461293502;  // std dev = 1,23e-07, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.19743195336965277;  // std dev = 0,631, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07435507548196556;  // std dev = 0,009, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0783236067633679;  // std dev = 2,11e-08, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16849578525392486;  // std dev = 0,565, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06985634845078627;  // std dev = 0,011, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07285297840547254;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1200722257678263;  // std dev = 0,081, 153,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06808265046570623;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06808265046570648;  // std dev = 0,000, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06808265046570622;  // std dev = 3,73e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067736
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.797 seconds
Total inference time: 1.271 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068778
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.202 seconds
Parameter learned model CLL: -0.068778


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [1.05e-08, 22, 0], 'true,true': [8e-07, 0, 134], 'false': [0.0, 269, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 29, 0], 'true,true': [0.0, 0, 134], 'false': [0.0, 257, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [1.49e-08, 20, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [4.92e-07, 0, 134], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 259, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 12, 0], 'false': [0.145, 278, 26], 'true,false': [0.0, 0, 0], 'true,true,true,true': [2.92e-07, 0, 108]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.507, 0, 134], 'true,false,true': [0.002, 22, 0], 'false': [9.88e-08, 255, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 108], 'true,true,false,true': [3.73e-09, 13, 0], 'true,false': [0.0, 0, 0], 'false': [0.128, 252, 26], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.706, 0, 134], 'true,true,false,true': [0.015, 27, 0], 'true,false': [0.0, 0, 0], 'false': [1.23e-07, 247, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.631, 0, 134], 'true,false,true': [0.009, 13, 0], 'false': [2.11e-08, 235, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.565, 0, 134], 'true,true,false,true': [0.011, 19, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 280, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [0.0, 191, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.081, 19, 134], 'false,false': [3.73e-09, 25, 0], 'true,false': [0.0, 8, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.12113740959895289, -9.244979833309854e-17], 'true': [4.772301956597688e-15, 5.046468293750712e-18], 'true,false,true': [5.046468293750712e-18, nan], 'true,false': [5.046468293750712e-18, nan]}, {'': [0.10441352657004846, -6.220704885059243e-17], 'true': [-1.908920782639075e-15, -5.742532885992189e-18], 'true,false,true': [-5.742532885992189e-18, nan], 'true,false': [-5.742532885992189e-18, nan]}, {'': [0.050377167939833274, -9.259002830850726e-17], 'true': [1.8028696280480155e-15, 1.1102230246251566e-17], 'true,true': [1.8028696280480155e-15, nan], 'true,true,true': [1.8028696280480155e-15, nan], 'true,false,true': [1.1102230246251566e-17, nan], 'true,false': [1.1102230246251566e-17, nan]}, {'': [0.024252759220114318, 0.02107606951694081], 'true': [0.024252759220114318, nan], 'true,true,true': [7.894919286223335e-16, -8.0953762212251e-18], 'true,true': [0.024252759220114318, nan]}, {'': [0.02470604656997492, 3.831357888902501e-17], 'true': [0.001918960511014682, 3.344909259896995e-06], 'true,false': [3.344909259896995e-06, nan]}, {'': [0.010838149165307922, 0.016312185411431007], 'true': [0.010838149165307922, nan], 'true,true,false': [1.0675221390626506e-18, nan], 'true,true': [-3.20731096002823e-16, 1.0675221390626506e-18]}, {'': [0.017170862192672248, 6.112968880527177e-17], 'true': [0.017170862192672248, nan], 'true,true,false': [8.434077919427662e-06, nan], 'true,true': [0.003719007866660442, 8.434077919427662e-06]}, {'': [0.008659678635096398, 1.8897413185109048e-18], 'true': [0.0029666652856261324, 5.8804296007468445e-06], 'true,true,true': [0.0029666652856261324, nan], 'true,false': [5.8804296007468445e-06, nan], 'true,true': [0.0029666652856261324, nan]}, {'': [0.0082668586986468, -2.9341608507950566e-17], 'true': [0.0082668586986468, nan], 'true,true,false': [6.304527599420398e-06, nan], 'true,true': [0.002383078669759444, 6.304527599420398e-06]}, {'': [0.00797693411444864, -2.5699607051508253e-17], 'true': [0.006634910326036843, 0.0], 'false,true': [-2.3250743971207467e-17, nan], 'false': [-2.3250743971207467e-17, 5.551115123125783e-19], 'true,true': [0.006634910326036843, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.1418510649004884;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.1254446385283919;  // std dev = 0,000, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11231637819360685;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583096;  // std dev = 2,92e-07, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.10159632948783649;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 1,88e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926057;  // std dev = 5,96e-08, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.08518475138839678;  // std dev = 7,88e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253529;  // std dev = 2,13e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109148;  // std dev = 6,99e-08, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527808;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07324622576333675;  // std dev = 1,23e-07, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367141;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420279;  // std dev = 0,000, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13400703000801092;  // std dev = 4,94e-08, 69,000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.1031188944095636;  // std dev = 0,072, 77,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=65 */
%   | else return -0.06419184008202615;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06419184008202625;  // std dev = 1,83e-08, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else return -0.06419184008202612;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.954 seconds
Total inference time: 1.211 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064516
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.974 seconds
Refined model CLL: -0.064516


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.927000000000001 seconds
Total inference time: 1.211 seconds
AUC ROC: 1.0
Total revision time: 11.927000000000001
Best scored revision CLL: -0.064516


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:40:24
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067736, 'Learning time': 3.797, 'Inference time': 1.271}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064421, 'Learning time': 11.927000000000001, 'Inference time': 1.211}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048835;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839183;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11231637819360689;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.10159632948783649;  // std dev = 0,000, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926054;  // std dev = 6,99e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 7,88e-08, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109144;  // std dev = 7,45e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07324622576333671;  // std dev = 1,18e-07, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06842697784420261;  // std dev = 6,32e-08, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06419184008202623;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.558 seconds
Total inference time: 1.122 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:40:28
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 2.558, 'Inference time': 1.122}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048846;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.02 seconds
Total inference time: 0.773 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:40:30
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.02, 'Inference time': 0.773}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048754;  // std dev = 2,35e-07, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0,000, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.053621716615325284;  // std dev = 0,150, 422,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=39 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34192960555338786;  // std dev = 0,617, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then return -0.09299603554397298;  // std dev = 0,001, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09680552747787284;  // std dev = 1,55e-07, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2511605985656267;  // std dev = 2,31e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08516100500924723;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0487425732513359;  // std dev = 0,126, 428,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=39 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23660000322513813;  // std dev = 0,862, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.0813818104830043;  // std dev = 0,017, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08480505860048468;  // std dev = 2,11e-08, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.1972771224164523;  // std dev = 0,770, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07461882305586592;  // std dev = 0,015, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07845062161795291;  // std dev = 0,000, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16837554256938483;  // std dev = 0,690, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06922507989605696;  // std dev = 0,011, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07296323240541043;  // std dev = 1,41e-07, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11898875435657744;  // std dev = 0,082, 232,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0681792112408083;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06817921124080818;  // std dev = 1,49e-08, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06817921124080831;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067822
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.338 seconds
Total inference time: 1.645 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068859
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.036 seconds
Parameter learned model CLL: -0.068859


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [2.98e-08, 32, 0], 'true,true': [1.08e-06, 0, 202], 'false': [2.35e-07, 366, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 24, 0], 'true,true': [0.0, 0, 202], 'false': [0.0, 377, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [6.36e-07, 0, 202], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 376, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 24, 0], 'false': [0.15, 383, 39], 'true,false': [0.0, 0, 0], 'true,true,true,true': [4.38e-07, 0, 163]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.617, 0, 202], 'true,false,true': [0.001, 27, 0], 'false': [1.55e-07, 366, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.31e-07, 0, 163], 'true,true,false,true': [0.0, 18, 0], 'true,false': [0.0, 0, 0], 'false': [0.126, 389, 39], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.862, 0, 202], 'true,true,false,true': [0.017, 29, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 353, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.77, 0, 202], 'true,false,true': [0.015, 34, 0], 'false': [0.0, 363, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.69, 0, 202], 'true,true,false,true': [0.011, 26, 0], 'true,false': [0.0, 0, 0], 'false': [1.41e-07, 394, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [1.49e-08, 293, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.082, 30, 202], 'false,false': [0.0, 36, 0], 'true,false': [6.97e-09, 13, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.11805098984586705, 1.5045645361040372e-16], 'true': [5.768762805181012e-15, 2.7755575615628914e-17], 'true,false,true': [2.7755575615628914e-17, nan], 'true,false': [2.7755575615628914e-17, nan]}, {'': [0.06776023597053416, -1.201514573069135e-16], 'true': [-3.728590593592605e-15, -4.625929269271485e-18], 'true,false,true': [-4.625929269271485e-18, nan], 'true,false': [-4.625929269271485e-18, nan]}, {'': [0.05940908715843743, -2.598394312952494e-17], 'true': [2.0049968286299855e-15, -8.764918615461762e-18], 'true,true': [2.0049968286299855e-15, nan], 'true,true,true': [2.0049968286299855e-15, nan], 'true,false,true': [-8.764918615461762e-18, nan], 'true,false': [-8.764918615461762e-18, nan]}, {'': [0.030146318189471777, 0.022602533665189384], 'true': [0.030146318189471777, nan], 'true,true,true': [1.176972629786669e-15, -2.3129646346357427e-18], 'true,true': [0.030146318189471777, nan]}, {'': [0.021333031713657784, 6.55213588303371e-17], 'true': [0.0018815770054138113, 1.1609783035554994e-06], 'true,false': [1.1609783035554994e-06, nan]}, {'': [0.010130071014482905, 0.01589941590473618], 'true': [0.010130071014482905, nan], 'true,true,false': [-4.625929269271485e-18, nan], 'true,true': [3.2693684160740805e-16, -4.625929269271485e-18]}, {'': [0.014320943897027691, 1.2580430873939451e-18], 'true': [0.014320943897027691, nan], 'true,true,false': [9.7650415460527e-06, nan], 'true,true': [0.003681750327629093, 9.7650415460527e-06]}, {'': [0.011631029574960086, -4.893545012121902e-17], 'true': [0.0029370193393561455, 6.83182862288562e-06], 'true,true,true': [0.0029370193393561455, nan], 'true,false': [6.83182862288562e-06, nan], 'true,true': [0.0029370193393561455, nan]}, {'': [0.007794521184167275, 5.072084884074319e-17], 'true': [0.007794521184167275, nan], 'true,true,false': [4.800234871031061e-06, nan], 'true,true': [0.0023594153292737343, 4.800234871031061e-06]}, {'': [0.008145743224228306, 1.8897413185109047e-17], 'true': [0.006743353016171327, 3.736327486719277e-18], 'false,true': [7.578314161263867e-19, nan], 'false': [7.578314161263867e-19, -1.5419764230904951e-18], 'true,true': [0.006743353016171327, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048757;  // std dev = 2,19e-07, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.1254446385283922;  // std dev = 0,000, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.11231637819360646;  // std dev = 0,000, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583105;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.10159632948783653;  // std dev = 0,000, 369,000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.09269127618926054;  // std dev = 1,58e-07, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08518475138839678;  // std dev = 1,10e-07, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.16888199899768844;  // std dev = 0,101, 120,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=103 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 3,65e-08, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18017414773040222;  // std dev = 0,043, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08139376871705699;  // std dev = 0,058, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07324622576333709;  // std dev = 8,16e-08, 349,000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15507594973814373;  // std dev = 0,038, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07642406766177805;  // std dev = 0,056, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420326;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13582597865860002;  // std dev = 0,034, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07203515029301784;  // std dev = 0,051, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.06419184008202615;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A) )
%   | then return -0.06419184008202573;  // std dev = 1,65e-07, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
%   | else return -0.06419184008202612;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064594
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.744 seconds
Total inference time: 1.255 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064613
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.807 seconds
Refined model CLL: -0.064613


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064594
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.924999999999999 seconds
Total inference time: 1.255 seconds
AUC ROC: 1.0
Total revision time: 13.924999999999999
Best scored revision CLL: -0.064613


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:40:48
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067822, 'Learning time': 5.338, 'Inference time': 1.645}, 'CLL': -0.064594, 'Learning time': 13.924999999999999, 'Inference time': 1.255}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.1418510649004877;  // std dev = 1,71e-07, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1254446385283921;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1123163781936067;  // std dev = 0,000, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.10159632948783658;  // std dev = 0,000, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.09269127618926087;  // std dev = 1,48e-07, 414,000 (wgt'ed) examples reached here.  /* #neg=414 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07877675473109146;  // std dev = 5,16e-08, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.0732462257633372;  // std dev = 2,98e-08, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.06842697784420321;  // std dev = 0,000, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202622;  // std dev = 3,73e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.0641918400820258;  // std dev = 1,55e-07, 399,000 (wgt'ed) examples reached here.  /* #neg=399 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.11 seconds
Total inference time: 1.104 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:40:52
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 3.11, 'Inference time': 1.104}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.1418510649004878;  // std dev = 1,19e-07, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.129 seconds
Total inference time: 0.766 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:40:54
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.129, 'Inference time': 0.766}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004876;  // std dev = 1,03e-07, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0,000, 470,000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.112316378193606;  // std dev = 0,000, 457,000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583104;  // std dev = 1,46e-07, 218,000 (wgt'ed) examples reached here.  /* #pos=218 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0534606829497393;  // std dev = 0,151, 550,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=51 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34153987271702846;  // std dev = 0,706, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then return -0.09460254102969155;  // std dev = 0,002, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09681960824459143;  // std dev = 0,000, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25123390621767777;  // std dev = 5,96e-08, 218,000 (wgt'ed) examples reached here.  /* #pos=218 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08503592778623807;  // std dev = 1,29e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.049677601778255955;  // std dev = 0,125, 573,000 (wgt'ed) examples reached here.  /* #neg=522 #pos=51 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23615827032380637;  // std dev = 0,990, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.07929172555342395;  // std dev = 0,012, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08474391357029669;  // std dev = 0,000, 513,000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.1969514827285071;  // std dev = 0,884, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07543666781266749;  // std dev = 0,018, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0783980834570236;  // std dev = 0,000, 505,000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16812799457306077;  // std dev = 0,793, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.0693206135668586;  // std dev = 0,015, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0729176299061342;  // std dev = 8,16e-08, 534,000 (wgt'ed) examples reached here.  /* #neg=534 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.12312707383477166;  // std dev = 0,078, 302,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06813927455412294;  // std dev = 3,73e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06813927455412357;  // std dev = 0,000, 414,000 (wgt'ed) examples reached here.  /* #neg=414 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06813927455412294;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067797
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.463 seconds
Total inference time: 1.369 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068858
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 5.149 seconds
Parameter learned model CLL: -0.068858


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [4.47e-08, 42, 0], 'true,true': [1.07e-06, 0, 269], 'false': [1.03e-07, 507, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 40, 0], 'true,true': [0.0, 0, 269], 'false': [0.0, 470, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 39, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [3.58e-07, 0, 269], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 457, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 17, 0], 'false': [0.151, 499, 51], 'true,false': [0.0, 0, 0], 'true,true,true,true': [1.46e-07, 0, 218]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.706, 0, 269], 'true,false,true': [0.002, 54, 0], 'false': [0.0, 507, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [5.96e-08, 0, 218], 'true,true,false,true': [1.29e-08, 28, 0], 'true,false': [0.0, 0, 0], 'false': [0.125, 522, 51], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.99, 0, 269], 'true,true,false,true': [0.012, 39, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 513, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.884, 0, 269], 'true,false,true': [0.018, 40, 0], 'false': [0.0, 505, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.793, 0, 269], 'true,true,false,true': [0.015, 42, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 534, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [0.0, 414, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.078, 33, 269], 'false,false': [1.58e-08, 53, 0], 'true,false': [3.73e-09, 19, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.11681020667694077, 2.1021974430772194e-17], 'true': [4.226276495227362e-15, 4.7580986769649563e-17], 'true,false,true': [4.7580986769649563e-17, nan], 'true,false': [4.7580986769649563e-17, nan]}, {'': [0.08044971118992354, -1.285024096587415e-16], 'true': [-4.5432472323694135e-15, -2.4980018054066023e-17], 'true,false,true': [-2.4980018054066023e-17, nan], 'true,false': [-2.4980018054066023e-17, nan]}, {'': [0.049301013885892614, -1.5547981088842454e-17], 'true': [4.754561057130781e-16, -5.693451408334136e-18], 'true,true': [4.754561057130781e-16, nan], 'true,true,true': [4.754561057130781e-16, nan], 'true,false,true': [-5.693451408334136e-18, nan], 'true,false': [-5.693451408334136e-18, nan]}, {'': [0.01808374340722131, 0.02267065085005256], 'true': [0.01808374340722131, nan], 'true,true,true': [9.778111042570187e-17, -8.163404592832034e-18], 'true,true': [0.01808374340722131, nan]}, {'': [0.028029868087404652, -8.934339133078183e-17], 'true': [0.001854310772438014, 4.237402616695683e-06], 'true,false': [4.237402616695683e-06, nan]}, {'': [0.011405652344789262, 0.015570981920129477], 'true': [0.011405652344789262, nan], 'true,true,false': [5.9476233462061954e-18, nan], 'true,true': [1.6296851737616978e-17, 5.9476233462061954e-18]}, {'': [0.014185286794887378, -6.232831015439475e-17], 'true': [0.014185286794887378, nan], 'true,true,false': [3.615181028483774e-06, nan], 'true,true': [0.0036412379944460974, 3.615181028483774e-06]}, {'': [0.010892547578373633, -1.178375329107097e-16], 'true': [0.002906460658064943, 8.247731170851757e-06], 'true,true,true': [0.002906460658064943, nan], 'true,false': [8.247731170851757e-06, nan], 'true,true': [0.002906460658064943, nan]}, {'': [0.008607323243749757, 1.247441600702423e-17], 'true': [0.008607323243749757, nan], 'true,true,false': [5.0872183167438314e-06, nan], 'true,true': [0.0023361553073833587, 5.0872183167438314e-06]}, {'': [0.007727675513527846, -6.561489396071589e-17], 'true': [0.00604851575408094, 7.304098846218135e-19], 'false,true': [-6.275173617446536e-17, nan], 'false': [-6.275173617446536e-17, 4.7132109535973624e-18], 'true,true': [0.00604851575408094, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.1418510649004878;  // std dev = 0,000, 520,000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.12544463852839224;  // std dev = 0,000, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.11231637819360578;  // std dev = 0,000, 548,000 (wgt'ed) examples reached here.  /* #neg=548 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583104;  // std dev = 1,46e-07, 218,000 (wgt'ed) examples reached here.  /* #pos=218 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.10159632948783588;  // std dev = 2,46e-07, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926089;  // std dev = 1,56e-07, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948823;  // std dev = 2,67e-07, 218,000 (wgt'ed) examples reached here.  /* #pos=218 */
%   | | else return -0.0851847513883968;  // std dev = 2,04e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08518475138839678;  // std dev = 1,25e-07, 458,000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253479;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109146;  // std dev = 1,30e-07, 486,000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1770964977452771;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.07324622576333746;  // std dev = 0,000, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367164;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.06842697784420271;  // std dev = 1,05e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420346;  // std dev = 0,000, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.06419184008202612;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(A) )
%   | then return -0.06419184008202551;  // std dev = 2,16e-07, 433,000 (wgt'ed) examples reached here.  /* #neg=433 */
%   | else return -0.06419184008202616;  // std dev = 7,45e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.822 seconds
Total inference time: 1.225 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064058
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.932 seconds
Refined model CLL: -0.064058


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.366 seconds
Total inference time: 1.225 seconds
AUC ROC: 1.0
Total revision time: 16.366
Best scored revision CLL: -0.064058


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:41:14
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067797, 'Learning time': 6.463, 'Inference time': 1.369}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 16.366, 'Inference time': 1.225}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.1418510649004876;  // std dev = 1,03e-07, 499,000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.1254446385283923;  // std dev = 0,000, 501,000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360601;  // std dev = 0,000, 522,000 (wgt'ed) examples reached here.  /* #neg=522 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10159632948783559;  // std dev = 3,26e-07, 551,000 (wgt'ed) examples reached here.  /* #neg=551 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.09269127618926132;  // std dev = 0,000, 480,000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.08518475138839678;  // std dev = 1,28e-07, 480,000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109198;  // std dev = 0,000, 504,000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07324622576333722;  // std dev = 0,000, 506,000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.06842697784420347;  // std dev = 0,000, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.06419184008202551;  // std dev = 2,33e-07, 526,000 (wgt'ed) examples reached here.  /* #neg=526 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.618 seconds
Total inference time: 1.069 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:41:19
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 3.618, 'Inference time': 1.069}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048754;  // std dev = 1,58e-07, 501,000 (wgt'ed) examples reached here.  /* #neg=501 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.294 seconds
Total inference time: 0.716 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:41:21
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.294, 'Inference time': 0.716}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004887;  // std dev = 0,000, 638,000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0,000, 614,000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.112316378193606;  // std dev = 0,000, 629,000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.41751358415831125;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05336406979472997;  // std dev = 0,151, 635,000 (wgt'ed) examples reached here.  /* #neg=576 #pos=59 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3399409341582725;  // std dev = 0,766, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then return -0.09345734670351964;  // std dev = 0,002, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09682805696625774;  // std dev = 0,000, 611,000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2515348108573696;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08512507177601857;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05113711867308552;  // std dev = 0,123, 689,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=59 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23421895084697683;  // std dev = 1,077, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.07971769395803815;  // std dev = 0,017, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0846376087591444;  // std dev = 0,000, 598,000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.19551682060720102;  // std dev = 0,964, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07501688980360165;  // std dev = 0,018, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07830673019200927;  // std dev = 0,000, 605,000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1670338224835541;  // std dev = 0,865, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06960680021675014;  // std dev = 0,019, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07283832716450435;  // std dev = 1,90e-07, 642,000 (wgt'ed) examples reached here.  /* #neg=642 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11715567791378238;  // std dev = 0,082, 389,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06806981755290753;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06806981755290725;  // std dev = 1,38e-07, 531,000 (wgt'ed) examples reached here.  /* #neg=531 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06806981755290753;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067745
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.409 seconds
Total inference time: 1.336 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068766
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 6.041 seconds
Parameter learned model CLL: -0.068766


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [5.58e-08, 53, 0], 'true,true': [1.04e-06, 0, 337], 'false': [0.0, 638, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 52, 0], 'true,true': [0.0, 0, 337], 'false': [0.0, 614, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [3.33e-08, 52, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 337], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 629, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 34, 0], 'false': [0.151, 576, 59], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 278]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.766, 0, 337], 'true,false,true': [0.002, 54, 0], 'false': [0.0, 611, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 278], 'true,true,false,true': [0.0, 37, 0], 'true,false': [0.0, 0, 0], 'false': [0.123, 630, 59], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.077, 0, 337], 'true,true,false,true': [0.017, 56, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 598, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.964, 0, 337], 'true,false,true': [0.018, 46, 0], 'false': [0.0, 605, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.865, 0, 337], 'true,true,false,true': [0.019, 62, 0], 'true,false': [0.0, 0, 0], 'false': [1.9e-07, 642, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [1.38e-07, 531, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.082, 52, 337], 'false,false': [0.0, 66, 0], 'true,false': [0.0, 20, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.1174293228139413, -4.0650172186902283e-16], 'true': [3.204821834882351e-15, 5.86532918669894e-17], 'true,false,true': [5.86532918669894e-17, nan], 'true,false': [5.86532918669894e-17, nan]}, {'': [0.08267290887873702, -2.574849490335868e-16], 'true': [-5.144582419153248e-15, -3.416070845000482e-17], 'true,false,true': [-3.416070845000482e-17, nan], 'true,false': [-3.416070845000482e-17, nan]}, {'': [0.05162670866633623, -9.3195191892223e-17], 'true': [-5.90361916952012e-16, 2.1350442781253012e-17], 'true,true': [-5.90361916952012e-16, nan], 'true,true,true': [-5.90361916952012e-16, nan], 'true,false,true': [2.1350442781253012e-17, nan], 'true,false': [2.1350442781253012e-17, nan]}, {'': [0.02616574897596961, 0.02271149328914388], 'true': [0.02616574897596961, nan], 'true,true,true': [-5.878590979310181e-16, 0.0], 'true,true': [0.02616574897596961, nan]}, {'': [0.02386058299665936, -6.105318105958307e-17], 'true': [0.0017422485546634168, 2.5822017443711533e-06], 'true,false': [2.5822017443711533e-06, nan]}, {'': [0.011749195973268494, 0.015060447389658694], 'true': [0.011749195973268494, nan], 'true,true,false': [-6.00120553851436e-18, nan], 'true,true': [-7.028750083957825e-16, -6.00120553851436e-18]}, {'': [0.014996152598345577, -3.8616453030440226e-17], 'true': [0.014996152598345577, nan], 'true,true,false': [5.140943266018573e-06, nan], 'true,true': [0.0034436066208730905, 5.140943266018573e-06]}, {'': [0.010159830229616668, -3.670158759091427e-18], 'true': [0.002755370060011528, 7.323152212264432e-06], 'true,true,true': [0.002755370060011528, nan], 'true,false': [7.323152212264432e-06, nan], 'true,true': [0.002755370060011528, nan]}, {'': [0.009225091169795847, 5.602994703715743e-17], 'true': [0.009225091169795847, nan], 'true,true,false': [5.613931479650771e-06, nan], 'true,true': [0.00221969063958908, 5.613931479650771e-06]}, {'': [0.007998760322571173, -2.752311685837909e-17], 'true': [0.006732331152353336, -6.938893903907229e-19], 'false,true': [3.596202640970375e-17, nan], 'false': [3.596202640970375e-17, -3.3643121958338078e-18], 'true,true': [0.006732331152353336, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1418510649004885;  // std dev = 0,000, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.12544463852839233;  // std dev = 0,000, 669,000 (wgt'ed) examples reached here.  /* #neg=669 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.11231637819360608;  // std dev = 0,000, 634,000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.41751358415831125;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.10159632948783534;  // std dev = 3,99e-07, 647,000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.0926912761892616;  // std dev = 0,000, 646,000 (wgt'ed) examples reached here.  /* #neg=646 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.20996857930945775;  // std dev = 0,116, 128,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=111 */
%   | | else return 0.22040459264905957;  // std dev = 0,103, 186,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=167 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.08518475138839678;  // std dev = 1,49e-07, 616,000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21514279363156438;  // std dev = 0,048, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09739187110626268;  // std dev = 0,074, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109222;  // std dev = 0,000, 623,000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18103743666442607;  // std dev = 0,042, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08761221604123672;  // std dev = 0,078, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333656;  // std dev = 2,43e-07, 598,000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1557277182153731;  // std dev = 0,037, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08183882939367643;  // std dev = 0,063, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420362;  // std dev = 0,000, 598,000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.136332737085285;  // std dev = 0,033, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07480233581405885;  // std dev = 0,063, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.06419184008202607;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A) )
%   | then return -0.0641918400820253;  // std dev = 2,45e-07, 543,000 (wgt'ed) examples reached here.  /* #neg=543 */
%   | else return -0.06419184008202616;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.658 seconds
Total inference time: 1.182 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064911
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.635 seconds
Refined model CLL: -0.064911


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 20.743000000000002 seconds
Total inference time: 1.182 seconds
AUC ROC: 1.0
Total revision time: 20.743000000000002
Best scored revision CLL: -0.064911


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:41:45
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067745, 'Learning time': 8.409, 'Inference time': 1.336}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064905, 'Learning time': 20.743000000000002, 'Inference time': 1.182}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048863;  // std dev = 0,000, 634,000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.12544463852839235;  // std dev = 0,000, 669,000 (wgt'ed) examples reached here.  /* #neg=669 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.11231637819360592;  // std dev = 0,000, 624,000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1015963294878362;  // std dev = 3,94e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783537;  // std dev = 3,87e-07, 621,000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.09269127618926185;  // std dev = 0,000, 636,000 (wgt'ed) examples reached here.  /* #neg=636 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839678;  // std dev = 1,43e-07, 577,000 (wgt'ed) examples reached here.  /* #neg=577 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109169;  // std dev = 3,33e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.07877675473109233;  // std dev = 0,000, 574,000 (wgt'ed) examples reached here.  /* #neg=574 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07324622576333671;  // std dev = 2,15e-07, 645,000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2,11e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420368;  // std dev = 0,000, 648,000 (wgt'ed) examples reached here.  /* #neg=648 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06419184008202537;  // std dev = 2,48e-07, 625,000 (wgt'ed) examples reached here.  /* #neg=625 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.32 seconds
Total inference time: 1.266 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:41:51
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 4.32, 'Inference time': 1.266}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1418510649004884;  // std dev = 0,000, 596,000 (wgt'ed) examples reached here.  /* #neg=596 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.292 seconds
Total inference time: 0.75 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:41:53
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.292, 'Inference time': 0.75}


Starting fold 5

Target train facts examples: 578
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 118
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 9,42e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06537935876833766;  // std dev = 0,132, 129,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3358616981918162;  // std dev = 0,315, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then return -0.09320645839526936;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09578236942531143;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25230356652453034;  // std dev = 8,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08514461268873427;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06078318502236035;  // std dev = 0,106, 147,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.22919939195536948;  // std dev = 0,446, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.0797440960784254;  // std dev = 0,006, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0830540448826128;  // std dev = 4,71e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.19180355340952635;  // std dev = 0,401, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.0748342840441448;  // std dev = 0,007, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07694406961231273;  // std dev = 4,94e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16420136391015247;  // std dev = 0,361, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06922247191422291;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07165402788098008;  // std dev = 6,91e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.12097025762743366;  // std dev = 0,074, 75,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06703147766420414;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06703147766420418;  // std dev = 1,05e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06703147766420414;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067287
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.67 seconds
Total inference time: 1.256 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067779
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.183 seconds
Parameter learned model CLL: -0.067779


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 67], 'false': [8.16e-08, 112, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [5.27e-09, 10, 0], 'true,true': [1.46e-07, 0, 67], 'false': [0.0, 107, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.88e-07, 0, 67], 'true,false,true,false': [0.0, 0, 0], 'false': [9.42e-08, 129, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 4, 0], 'false': [0.132, 120, 9], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.315, 0, 67], 'true,false,true': [0.001, 6, 0], 'false': [0.0, 129, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [8.94e-08, 0, 58], 'true,true,false,true': [0.0, 15, 0], 'true,false': [0.0, 0, 0], 'false': [0.106, 138, 9], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.446, 0, 67], 'true,true,false,true': [0.006, 9, 0], 'true,false': [0.0, 0, 0], 'false': [4.71e-08, 131, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.401, 0, 67], 'true,false,true': [0.007, 10, 0], 'false': [4.94e-08, 91, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.361, 0, 67], 'true,true,false,true': [0.005, 8, 0], 'true,false': [0.0, 0, 0], 'false': [6.91e-08, 120, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [1.05e-08, 127, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.074, 8, 67], 'false,false': [3.73e-09, 14, 0], 'true,false': [0.0, 8, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.06462191358024594, 5.947623346206196e-17], 'true': [-9.544603913195376e-16, -2.7755575615628915e-18], 'true,false,true': [-2.7755575615628915e-18, nan], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.08067194524399914, -1.0375916117992117e-17], 'true': [3.1815346377317917e-16, 2.7755575615628915e-18], 'true,false,true': [2.7755575615628915e-18, nan], 'true,false': [2.7755575615628915e-18, nan]}, {'': [0.04654044422502281, 6.885104028683141e-17], 'true': [5.302557729552986e-16, -1.5419764230904951e-18], 'true,true': [5.302557729552986e-16, nan], 'true,true,true': [5.302557729552986e-16, nan], 'true,false,true': [-1.5419764230904951e-18, nan], 'true,false': [-1.5419764230904951e-18, nan]}, {'': [0.01626384593324757, 0.017488919574626952], 'true': [0.01626384593324757, nan], 'true,true,true': [-3.3689526264487507e-16, 0.0], 'true,true': [0.01626384593324757, nan]}, {'': [0.015245436168555986, -2.7540416114732565e-17], 'true': [0.0014791159115927466, 1.3270635269383806e-06], 'true,false': [1.3270635269383806e-06, nan]}, {'': [0.01859035617926123, 0.0111959975077405], 'true': [0.01859035617926123, nan], 'true,true,false': [-3.7007434154171884e-18, nan], 'true,true': [1.3782078926381254e-16, -3.7007434154171884e-18]}, {'': [0.012583633939963663, 1.6949969841605444e-17], 'true': [0.012583633939963663, nan], 'true,true,false': [3.5126732015395354e-06, nan], 'true,true': [0.0029706758549238174, 3.5126732015395354e-06]}, {'': [0.010119682004228919, 2.68405566392895e-17], 'true': [0.002396233455530448, 4.263433080152479e-06], 'true,true,true': [0.002396233455530448, nan], 'true,false': [4.263433080152479e-06, nan], 'true,true': [0.002396233455530448, nan]}, {'': [0.006929236187161081, 3.9782991715734776e-17], 'true': [0.006929236187161081, nan], 'true,true,false': [2.930900799505247e-06, nan], 'true,true': [0.0019443444199212488, 2.930900799505247e-06]}, {'': [0.00809344048459871, 1.2598275456739365e-17], 'true': [0.005550027311614528, 0.0], 'false,true': [8.741913579725642e-19, nan], 'false': [8.741913579725642e-19, 9.912705577010326e-19], 'true,true': [0.005550027311614528, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 6,66e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.1254446385283913;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360618;  // std dev = 9,42e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( actor(A) )
%   | | then return 0.32312996349537415;  // std dev = 0,200, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3235193329617722;  // std dev = 0,058, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1085996539561214;  // std dev = 0,058, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926097;  // std dev = 4,71e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.25463902044972114;  // std dev = 2,58e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.25463902044972114;  // std dev = 4,21e-08, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.08395319148516359;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6,05e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.27296360229811606;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.03419803317377405;  // std dev = 0,292, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09776254584982248;  // std dev = 0,044, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21176608435699934;  // std dev = 0,065, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.09108829949708376;  // std dev = 0,049, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07876892748589896;  // std dev = 0,000904, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17857912621606803;  // std dev = 0,057, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08280662919724122;  // std dev = 0,047, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07337076422469802;  // std dev = 0,012, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15387501139713858;  // std dev = 0,051, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.08076861797589008;  // std dev = 0,058, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06860733325330835;  // std dev = 0,014, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13489460848692186;  // std dev = 0,046, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07643091454146549;  // std dev = 0,045, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06619105876158597;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06417399722932073;  // std dev = 2,58e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return -0.06417399722932081;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064371
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.931 seconds
Total inference time: 1.258 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06498
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.442 seconds
Refined model CLL: -0.06498


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064371
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.225999999999999 seconds
Total inference time: 1.258 seconds
AUC ROC: 1.0
Total revision time: 8.225999999999999
Best scored revision CLL: -0.06498


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:42:04
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067287, 'Learning time': 2.67, 'Inference time': 1.256}, 'CLL': -0.064371, 'Learning time': 8.225999999999999, 'Inference time': 1.258}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1418510649004879;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839108;  // std dev = 7,60e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1123163781936062;  // std dev = 9,42e-08, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783635;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.09269127618926089;  // std dev = 6,66e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.08518475138839683;  // std dev = 5,48e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109161;  // std dev = 6,41e-08, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07324622576333717;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420265;  // std dev = 4,83e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06419184008202626;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.015 seconds
Total inference time: 1.129 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:42:08
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 2.015, 'Inference time': 1.129}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048785;  // std dev = 0,000, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.803 seconds
Total inference time: 0.734 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:42:09
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 0.803, 'Inference time': 0.734}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283917;  // std dev = 0,000, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360676;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.41751358415830936;  // std dev = 3,42e-07, 119,000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07328124328895567;  // std dev = 0,118, 275,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3335540585802108;  // std dev = 0,419, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then return -0.09301976370898248;  // std dev = 0,000827, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09510018466721915;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2527391433869565;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08515915639913195;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06270377764357314;  // std dev = 0,101, 271,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.22621094604932154;  // std dev = 0,593, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.07964023437251073;  // std dev = 0,007, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08236060366909824;  // std dev = 0,000, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.18957377685515647;  // std dev = 0,533, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07433989761970636;  // std dev = 0,009, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07634628289921597;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16248684729274257;  // std dev = 0,481, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06871370895083131;  // std dev = 0,005, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07113366244695978;  // std dev = 9,54e-08, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11273950471915259;  // std dev = 0,080, 156,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06657460533364369;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06657460533364377;  // std dev = 4,21e-08, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06657460533364373;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066912
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.394 seconds
Total inference time: 1.257 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067319
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.453 seconds
Parameter learned model CLL: -0.067319


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 18, 0], 'true,true': [8e-07, 0, 134], 'false': [0.0, 253, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 21, 0], 'true,true': [0.0, 0, 134], 'false': [0.0, 217, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [1.49e-08, 20, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [4.92e-07, 0, 134], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 244, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 14, 0], 'false': [0.118, 260, 15], 'true,false': [0.0, 0, 0], 'true,true,true,true': [3.42e-07, 0, 119]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.419, 0, 134], 'true,false,true': [0.000827, 22, 0], 'false': [0.0, 257, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 119], 'true,true,false,true': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false': [0.101, 256, 15], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.593, 0, 134], 'true,true,false,true': [0.007, 17, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 214, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.533, 0, 134], 'true,false,true': [0.009, 30, 0], 'false': [0.0, 238, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.481, 0, 134], 'true,true,false,true': [0.005, 23, 0], 'true,false': [0.0, 0, 0], 'false': [9.54e-08, 267, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [4.21e-08, 190, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.08, 22, 134], 'false,false': [0.0, 26, 0], 'true,false': [2.63e-09, 6, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.1043975069252125, -1.3691287892610626e-16], 'true': [4.772301956597688e-15, -3.0839528461809902e-18], 'true,false,true': [-3.0839528461809902e-18, nan], 'true,false': [-3.0839528461809902e-18, nan]}, {'': [0.08361609348915536, -4.092988109217167e-17], 'true': [-1.908920782639075e-15, -2.64338815386942e-18], 'true,false,true': [-2.64338815386942e-18, nan], 'true,false': [-2.64338815386942e-18, nan]}, {'': [0.050377167939833274, -7.644158530205996e-17], 'true': [1.8028696280480155e-15, 1.1102230246251566e-17], 'true,true': [1.8028696280480155e-15, nan], 'true,true,true': [1.8028696280480155e-15, nan], 'true,false,true': [1.1102230246251566e-17, nan], 'true,false': [1.1102230246251566e-17, nan]}, {'': [0.025379926546133885, 0.013896897845134232], 'true': [0.025379926546133885, nan], 'true,true,true': [9.852063142892146e-16, -7.93016446160826e-18], 'true,true': [0.025379926546133885, nan]}, {'': [0.02316676106246322, -6.911894316732492e-18], 'true': [0.0013083843269837145, 6.833923205561522e-07], 'true,false': [6.833923205561522e-07, nan]}, {'': [0.009500744286790297, 0.01026668675382705], 'true': [0.009500744286790297, nan], 'true,true,false': [2.3129646346357427e-18, nan], 'true,true': [-4.105026309538394e-16, 2.3129646346357427e-18]}, {'': [0.011671348944186512, -7.263141282594481e-18], 'true': [0.011671348944186512, nan], 'true,true,false': [2.548116831037584e-06, nan], 'true,true': [0.002620169147990868, 2.548116831037584e-06]}, {'': [0.012145313735265145, -2.239105259748215e-17], 'true': [0.0021228660666842564, 2.7509535459528205e-06], 'true,true,true': [0.0021228660666842564, nan], 'true,false': [2.7509535459528205e-06, nan], 'true,true': [0.0021228660666842564, nan]}, {'': [0.008159892334257405, 3.409673708586623e-17], 'true': [0.008159892334257405, nan], 'true,true,false': [1.236433776405969e-06, nan], 'true,true': [0.0017294622393635042, 1.236433776405969e-06]}, {'': [0.007281079193002323, 1.3363795666784291e-17], 'true': [0.006370248475831934, 1.1564823173178713e-18], 'false,true': [9.349246523159213e-18, nan], 'false': [9.349246523159213e-18, -5.337610695313253e-18], 'true,true': [0.006370248475831934, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048824;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.12544463852839177;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.11231637819360682;  // std dev = 0,000, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.41751358415830936;  // std dev = 3,42e-07, 119,000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( director(B), female(A) )
%   | then return 0.38043430461215727;  // std dev = 0,134, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return -0.09758775872609024;  // std dev = 0,731, 259,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=2 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32330229536881233;  // std dev = 0,171, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09637767707619546;  // std dev = 0,067, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.0930289462714669;  // std dev = 2,98e-08, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.20940313177034114;  // std dev = 0,115, 45,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=39 */
%   | | else return 0.21038741620885923;  // std dev = 0,114, 92,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.27539102222505235;  // std dev = 0,134, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.107911098819796;  // std dev = 0,045, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08547125442226304;  // std dev = 1,01e-07, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.15185137818585176;  // std dev = 0,128, 65,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=52 */
%   | | else return 0.1848034302153423;  // std dev = 0,099, 92,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07902271417878784;  // std dev = 1,06e-07, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18985418519773312;  // std dev = 0,111, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11443198658345413;  // std dev = 0,060, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07345955230685024;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1635445461841876;  // std dev = 0,012, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.10852417841199426;  // std dev = 0,015, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.11875567256153785;  // std dev = 0,098, 98,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06861367383850626;  // std dev = 8,43e-08, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.14470922289044788;  // std dev = 0,094, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10979769428419821;  // std dev = 0,053, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.06435653657739883;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A) )
%   | then return -0.06435653657739905;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else return -0.06435653657739883;  // std dev = 9,13e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065708
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.381 seconds
Total inference time: 1.133 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06739
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.924 seconds
Refined model CLL: -0.06739


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066912
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.152 seconds
Total inference time: 1.257 seconds
AUC ROC: 1.0
Total revision time: 12.152
Best scored revision CLL: -0.067319


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:42:25
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066912, 'Learning time': 4.394, 'Inference time': 1.257}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066912, 'Learning time': 12.152, 'Inference time': 1.257}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048835;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1254446385283918;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.11231637819360675;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.10159632948783652;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.09269127618926057;  // std dev = 6,66e-08, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0851847513883968;  // std dev = 1,90e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.08518475138839678;  // std dev = 7,15e-08, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109144;  // std dev = 6,14e-08, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333671;  // std dev = 1,19e-07, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06842697784420262;  // std dev = 5,77e-08, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06419184008202626;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.732 seconds
Total inference time: 1.167 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:42:29
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 2.732, 'Inference time': 1.167}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.1418510649004884;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.033 seconds
Total inference time: 0.79 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:42:31
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 1.033, 'Inference time': 0.79}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048743;  // std dev = 2,70e-07, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0,000, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583094;  // std dev = 4,04e-07, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06351980770450054;  // std dev = 0,135, 409,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=30 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3373938696424509;  // std dev = 0,568, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then return -0.09387391856577731;  // std dev = 0,002, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09594354272468052;  // std dev = 1,58e-07, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2520146374874132;  // std dev = 2,06e-07, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.085092635268116;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05488787433946332;  // std dev = 0,116, 400,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=30 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23097247880228336;  // std dev = 0,798, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.0796240660794548;  // std dev = 0,011, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08363418438081374;  // std dev = 4,21e-08, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.1931193840056194;  // std dev = 0,716, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.0753835431369281;  // std dev = 0,011, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07744367801874599;  // std dev = 1,67e-07, 402,000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1652080265500227;  // std dev = 0,644, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06896539154378592;  // std dev = 0,009, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07208854429524057;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.12094971589834541;  // std dev = 0,076, 227,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06741267648006964;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06741267648006982;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06741267648006964;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067608
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.475 seconds
Total inference time: 1.271 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068156
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.148 seconds
Parameter learned model CLL: -0.068156


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [1.49e-08, 24, 0], 'true,true': [1.08e-06, 0, 202], 'false': [2.7e-07, 385, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 19, 0], 'true,true': [0.0, 0, 202], 'false': [0.0, 345, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 40, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [6.36e-07, 0, 202], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 396, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 26, 0], 'false': [0.135, 379, 30], 'true,false': [0.0, 0, 0], 'true,true,true,true': [4.04e-07, 0, 172]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.568, 0, 202], 'true,false,true': [0.002, 33, 0], 'false': [1.58e-07, 376, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.06e-07, 0, 172], 'true,true,false,true': [5.27e-09, 30, 0], 'true,false': [0.0, 0, 0], 'false': [0.116, 370, 30], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.798, 0, 202], 'true,true,false,true': [0.011, 33, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 362, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.716, 0, 202], 'true,false,true': [0.011, 21, 0], 'false': [1.67e-07, 402, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.644, 0, 202], 'true,true,false,true': [0.009, 28, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 396, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [0.0, 315, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.076, 25, 202], 'false,false': [0.0, 38, 0], 'true,false': [0.0, 13, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.09491737802490961, 1.8917046861145523e-16], 'true': [5.768762805181012e-15, 9.25185853854297e-18], 'true,false,true': [9.25185853854297e-18, nan], 'true,false': [9.25185853854297e-18, nan]}, {'': [0.05609828698923399, -1.1327492888929133e-16], 'true': [-3.728590593592605e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.06150650157499292, -2.0185873175002847e-17], 'true': [2.0049968286299855e-15, -5.551115123125783e-18], 'true,true': [2.0049968286299855e-15, nan], 'true,true,true': [2.0049968286299855e-15, nan], 'true,false,true': [-5.551115123125783e-18, nan], 'true,false': [-5.551115123125783e-18, nan]}, {'': [0.0307390230113568, 0.01831607842377638], 'true': [0.0307390230113568, nan], 'true,true,true': [9.501443559582734e-16, -2.135044278125301e-18], 'true,true': [0.0307390230113568, nan]}, {'': [0.023822195821190932, 6.614094614788166e-17], 'true': [0.001595528611507196, 2.4476252337802715e-06], 'true,false': [2.4476252337802715e-06, nan]}, {'': [0.014370874837234345, 0.013474796243209831], 'true': [0.014370874837234345, nan], 'true,true,false': [9.251858538542971e-19, nan], 'true,true': [2.478637450325931e-16, 9.251858538542971e-19]}, {'': [0.014354622807966943, 4.907063092265885e-18], 'true': [0.014354622807966943, nan], 'true,true,false': [3.862106055558375e-06, nan], 'true,true': [0.0031521729400356513, 3.862106055558375e-06]}, {'': [0.008446909173665848, 6.959607020038295e-17], 'true': [0.002535360274466135, 5.661956269159155e-06], 'true,true,true': [0.002535360274466135, nan], 'true,false': [5.661956269159155e-06, nan], 'true,true': [0.002535360274466135, nan]}, {'': [0.007665643491017426, -8.298636749723393e-17], 'true': [0.007665643491017426, nan], 'true,true,false': [2.9272938937206583e-06, nan], 'true,true': [0.002051970377160448, 2.9272938937206583e-06]}, {'': [0.0072761123014232565, -3.333814181593955e-17], 'true': [0.0057709514523987026, -1.0675221390626506e-18], 'false,true': [-1.4802973661668754e-17, nan], 'false': [-1.4802973661668754e-17, -4.382459307730881e-18], 'true,true': [0.0057709514523987026, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.14185106490048766;  // std dev = 1,88e-07, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1254446385283922;  // std dev = 0,000, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.1123163781936065;  // std dev = 0,000, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583094;  // std dev = 4,04e-07, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.10159632948783658;  // std dev = 0,000, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926051;  // std dev = 1,72e-07, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.25517224256948984;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.22085052889306428;  // std dev = 0,102, 119,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.08518475138839678;  // std dev = 1,15e-07, 409,000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.2097577156325358;  // std dev = 1,21e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.16414574762959605;  // std dev = 0,115, 134,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=112 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 2,11e-08, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18359399913782587;  // std dev = 0,084, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09601160997470967;  // std dev = 0,125, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07324622576333711;  // std dev = 6,50e-08, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15766050877803497;  // std dev = 0,074, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.08812543586847663;  // std dev = 0,111, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420325;  // std dev = 0,000, 390,000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13783740552626148;  // std dev = 0,066, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07851083019948528;  // std dev = 0,102, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.06419184008202615;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then return -0.0641918400820259;  // std dev = 1,27e-07, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | else return -0.06419184008202614;  // std dev = 9,13e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064279
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.357 seconds
Total inference time: 1.23 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065373
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.84 seconds
Refined model CLL: -0.065373


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064279
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.82 seconds
Total inference time: 1.23 seconds
AUC ROC: 1.0
Total revision time: 13.82
Best scored revision CLL: -0.065373


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:42:48
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067608, 'Learning time': 5.475, 'Inference time': 1.271}, 'CLL': -0.064279, 'Learning time': 13.82, 'Inference time': 1.23}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.14185106490048777;  // std dev = 1,43e-07, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839124;  // std dev = 4,34e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.12544463852839208;  // std dev = 0,000, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360665;  // std dev = 0,000, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783652;  // std dev = 0,000, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.09269127618926062;  // std dev = 1,84e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 390,000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109147;  // std dev = 2,98e-08, 386,000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.0732462257633372;  // std dev = 2,98e-08, 401,000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420315;  // std dev = 0,000, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.06419184008202586;  // std dev = 1,42e-07, 398,000 (wgt'ed) examples reached here.  /* #neg=398 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.969 seconds
Total inference time: 1.064 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:42:52
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 2.969, 'Inference time': 1.064}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.14185106490048782;  // std dev = 1,12e-07, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.162 seconds
Total inference time: 0.798 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:42:54
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 1.162, 'Inference time': 0.798}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048735;  // std dev = 2,42e-07, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0,000, 482,000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936059;  // std dev = 0,000, 499,000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06410505794672583;  // std dev = 0,134, 540,000 (wgt'ed) examples reached here.  /* #neg=501 #pos=39 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33701780689021466;  // std dev = 0,649, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then return -0.0937157609511192;  // std dev = 0,001, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09589279107006826;  // std dev = 0,000, 519,000 (wgt'ed) examples reached here.  /* #neg=519 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2520855331529224;  // std dev = 4,02e-07, 230,000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.0851049489435535;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05799408171189126;  // std dev = 0,111, 575,000 (wgt'ed) examples reached here.  /* #neg=536 #pos=39 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.23059434912011606;  // std dev = 0,917, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.08004540655277102;  // std dev = 0,016, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08335558509555618;  // std dev = 0,000, 459,000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.19284120073736857;  // std dev = 0,823, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07413447478993662;  // std dev = 0,012, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07720380942728787;  // std dev = 0,000, 498,000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1649969108273211;  // std dev = 0,740, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06917979059861921;  // std dev = 0,011, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07187997104523383;  // std dev = 0,000, 495,000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11851324747023871;  // std dev = 0,078, 306,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0672297303120797;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06722973031207936;  // std dev = 1,16e-07, 430,000 (wgt'ed) examples reached here.  /* #neg=430 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0672297303120798;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067451
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.198 seconds
Total inference time: 1.424 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06802
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 5.328 seconds
Parameter learned model CLL: -0.06802


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [4.47e-08, 42, 0], 'true,true': [1.07e-06, 0, 269], 'false': [2.42e-07, 484, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 57, 0], 'true,true': [0.0, 0, 269], 'false': [0.0, 482, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 33, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [3.58e-07, 0, 269], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 499, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 23, 0], 'false': [0.134, 501, 39], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 230]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.649, 0, 269], 'true,false,true': [0.001, 50, 0], 'false': [0.0, 519, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [4.02e-07, 0, 230], 'true,true,false,true': [1.83e-08, 36, 0], 'true,false': [0.0, 0, 0], 'false': [0.111, 536, 39], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.917, 0, 269], 'true,true,false,true': [0.016, 54, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 459, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.823, 0, 269], 'true,false,true': [0.012, 39, 0], 'false': [0.0, 498, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.74, 0, 269], 'true,true,false,true': [0.011, 40, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 495, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [1.16e-07, 430, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.078, 37, 269], 'false,false': [0.0, 58, 0], 'true,false': [6.45e-09, 18, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.11681020667694077, 1.2111523905001707e-16], 'true': [4.226276495227362e-15, 4.7580986769649563e-17], 'true,false,true': [4.7580986769649563e-17, nan], 'true,false': [4.7580986769649563e-17, nan]}, {'': [0.1029961787762844, -1.3083126099317198e-16], 'true': [-4.5432472323694135e-15, -3.895519384649672e-17], 'true,false,true': [-3.895519384649672e-17, nan], 'true,false': [-3.895519384649672e-17, nan]}, {'': [0.043390307774949594, -5.339750018237226e-18], 'true': [4.754561057130781e-16, -1.1775092685418327e-17], 'true,true': [4.754561057130781e-16, nan], 'true,true,true': [4.754561057130781e-16, nan], 'true,false,true': [-1.1775092685418327e-17, nan], 'true,false': [-1.1775092685418327e-17, nan]}, {'': [0.022270669623612138, 0.01805649529042097], 'true': [0.022270669623612138, nan], 'true,true,true': [-9.267948727305654e-17, -1.206764157201257e-17], 'true,true': [0.022270669623612138, nan]}, {'': [0.02584475099967171, -1.0781356539712502e-16], 'true': [0.0015680357493652226, 2.2303341829565947e-06], 'true,false': [2.2303341829565947e-06, nan]}, {'': [0.013305085754879748, 0.012290221950020998], 'true': [0.013305085754879748, nan], 'true,true,false': [9.25185853854297e-18, nan], 'true,true': [7.028194451540121e-16, 9.25185853854297e-18]}, {'': [0.016038886286227266, -3.773307011797918e-17], 'true': [0.016038886286227266, nan], 'true,true,false': [4.6489383325876564e-06, nan], 'true,true': [0.0031250200709552808, 4.6489383325876564e-06]}, {'': [0.010079936569199394, -1.703233716493212e-16], 'true': [0.0025156097362687693, 3.593909329535912e-06], 'true,true,true': [0.0025156097362687693, nan], 'true,false': [3.593909329535912e-06, nan], 'true,true': [0.0025156097362687693, nan]}, {'': [0.0079540127340637, -8.433209237556745e-17], 'true': [0.0079540127340637, nan], 'true,true,false': [3.110298987496485e-06, nan], 'true,true': [0.002037438658887146, 3.110298987496485e-06]}, {'': [0.007582881165088013, 6.370132108504996e-17], 'true': [0.0061122411208039094, 2.3129646346357427e-18], 'false,true': [3.149935093122537e-17, nan], 'false': [3.149935093122537e-17, -9.570888143320316e-18], 'true,true': [0.0061122411208039094, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.14185106490048774;  // std dev = 0,000, 511,000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839144;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1254446385283922;  // std dev = 0,000, 450,000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.11231637819360592;  // std dev = 0,000, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583106;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783542;  // std dev = 3,42e-07, 492,000 (wgt'ed) examples reached here.  /* #neg=492 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1343627221695031;  // std dev = 0,857, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32191131650331534;  // std dev = 0,143, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.09301727636419306;  // std dev = 0,057, 469,000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.25494433913698117;  // std dev = 1,23e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | | | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25494433913698117;  // std dev = 1,84e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08515935018108732;  // std dev = 5,58e-08, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.262301087655943;  // std dev = 0,120, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.10543276292754022;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08517400472376603;  // std dev = 6,40e-05, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21035988036681058;  // std dev = 0,110, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07877702469629952;  // std dev = 2,68e-06, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0789727915100502;  // std dev = 0,042, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1775458920363871;  // std dev = 0,097, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324632091552577;  // std dev = 1,77e-06, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07337830452693982;  // std dev = 0,036, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.12322230642122073;  // std dev = 0,075, 137,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=119 */
%   | | else return 0.12424414881368638;  // std dev = 0,076, 173,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=150 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0685626586015698;  // std dev = 0,037, 515,000 (wgt'ed) examples reached here.  /* #neg=515 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13772243533820028;  // std dev = 0,080, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07675169708694074;  // std dev = 0,000234, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.07173514080885177;  // std dev = 0,027, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A) )
%   | then return -0.06414593719837944;  // std dev = 1,72e-07, 447,000 (wgt'ed) examples reached here.  /* #neg=447 */
%   | else return -0.06414593719837974;  // std dev = 2,79e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064295
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.997 seconds
Total inference time: 1.147 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065174
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.39 seconds
Refined model CLL: -0.065174


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064295
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 17.913 seconds
Total inference time: 1.147 seconds
AUC ROC: 1.0
Total revision time: 17.913
Best scored revision CLL: -0.065174


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:43:15
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067451, 'Learning time': 7.198, 'Inference time': 1.424}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064295, 'Learning time': 17.913, 'Inference time': 1.147}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048735;  // std dev = 2,38e-07, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839124;  // std dev = 4,08e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.1254446385283923;  // std dev = 0,000, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.11231637819360593;  // std dev = 0,000, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783627;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.10159632948783585;  // std dev = 2,53e-07, 478,000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.09269127618926136;  // std dev = 0,000, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.08518475138839678;  // std dev = 1,38e-07, 536,000 (wgt'ed) examples reached here.  /* #neg=536 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07877675473109216;  // std dev = 0,000, 529,000 (wgt'ed) examples reached here.  /* #neg=529 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.07324622576333721;  // std dev = 0,000, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.06842697784420346;  // std dev = 0,000, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.0641918400820256;  // std dev = 2,16e-07, 513,000 (wgt'ed) examples reached here.  /* #neg=513 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.667 seconds
Total inference time: 1.198 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:43:21
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 3.667, 'Inference time': 1.198}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.14185106490048718;  // std dev = 2,95e-07, 461,000 (wgt'ed) examples reached here.  /* #neg=461 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.319 seconds
Total inference time: 0.759 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:43:23
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 1.319, 'Inference time': 0.759}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true,false;publication(D, A).;true;true
0;true,false,false;hasposition(B, H), ta(I, A, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(E, F), professor(F).;false;false
1;true,false;publication(D, B), publication(E, A).;true;true
1;true,false,false;ta(G, A, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(F, A, G), tempadvisedby(H, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,false;tempadvisedby(K, B).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true,false;tempadvisedby(I, B).;false;false
3;true,true;tempadvisedby(F, B), publication(G, F).;true;true
3;true,true,true;publication(H, A), publication(H, B).;false;false
3;true,false;publication(J, A), publication(K, B).;false;true
3;false;ta(P, A, Q).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,true;ta(F, E, G).;false;false
4;true,false;publication(D, A), tempadvisedby(E, B).;true;true
4;true,false,false;projectmember(H, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;publication(D, B).;true;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(D, A), tempadvisedby(E, B).;false;true
5;true,false,false;projectmember(N, B).;false;false
5;true,false,true;ta(K, A, L), ta(K, M, J).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,true;publication(C, A), tempadvisedby(E, B).;false;true
6;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
6;true,false,true;ta(I, K, J), tempadvisedby(K, L).;false;false
6;true,false;ta(I, A, J).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,true;tempadvisedby(D, B), publication(E, D).;true;true
7;true,true,true;publication(C, F), publication(E, F).;false;false
7;true,false,true;ta(I, H, J), publication(K, B).;false;false
7;true,false;tempadvisedby(H, B).;true;true
7;true,false,false;ta(L, A, M), publication(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;ta(C, A, D), publication(E, A).;true;true
8;true,true,false;publication(E, I), professor(I).;false;false
8;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,true,true;publication(E, B).;false;false
8;true,false,true;publication(M, B).;false;false
8;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
8;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true;student(A).;true;false
9;false,true;projectmember(J, B).;true;true
9;false,true,true;inphase(A, K), inphase(I, K).;false;false
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
9;false,true,false;publication(L, A).;false;false
9;false;tempadvisedby(I, B), student(A).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048852;  // std dev = 0,000, 612,000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0,000, 605,000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360571;  // std dev = 0,000, 599,000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.4175135841583113;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06282135118195019;  // std dev = 0,136, 656,000 (wgt'ed) examples reached here.  /* #neg=607 #pos=49 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33701912623038544;  // std dev = 0,726, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then return -0.0933859095132421;  // std dev = 0,001, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09600414281132437;  // std dev = 5,96e-08, 649,000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2520852844066975;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.08513063538312825;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0560968975619036;  // std dev = 0,114, 677,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=49 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2305533908603661;  // std dev = 1,023, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, E) )
%   | | | then return -0.07983448503527385;  // std dev = 0,016, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08359042084833078;  // std dev = 0,000, 606,000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.19280733883175188;  // std dev = 0,917, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.07476551731969934;  // std dev = 0,017, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07740600548072453;  // std dev = 0,000, 585,000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1649685888929627;  // std dev = 0,826, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.06927131207759282;  // std dev = 0,014, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07205579219717811;  // std dev = 3,65e-08, 591,000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, D) )
%   | | then return 0.11225704777307019;  // std dev = 0,084, 397,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06738395273217954;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06738395273217905;  // std dev = 2,01e-07, 551,000 (wgt'ed) examples reached here.  /* #neg=551 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06738395273217955;  // std dev = 1,49e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067588
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.55 seconds
Total inference time: 1.268 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068152
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 6.459 seconds
Parameter learned model CLL: -0.068152


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [5.77e-08, 55, 0], 'true,true': [1.04e-06, 0, 337], 'false': [0.0, 612, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,true': [0.0, 60, 0], 'true,true': [0.0, 0, 337], 'false': [0.0, 605, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [4.47e-08, 60, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 337], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 599, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 43, 0], 'false': [0.136, 607, 49], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 288]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.726, 0, 337], 'true,false,true': [0.001, 62, 0], 'false': [5.96e-08, 649, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 288], 'true,true,false,true': [0.0, 37, 0], 'true,false': [0.0, 0, 0], 'false': [0.114, 628, 49], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(D, A)', 'true,true,false': 'movie(C, E)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.023, 0, 337], 'true,true,false,true': [0.016, 55, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 606, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.917, 0, 337], 'true,false,true': [0.017, 55, 0], 'false': [0.0, 585, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D), director(D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.826, 0, 337], 'true,true,false,true': [0.014, 55, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 591, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'false,true': 'movie(E, A)', 'false': 'actor(A)', 'true,true': 'movie(C, D)'}, {'false,true,true': [2.01e-07, 551, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.084, 60, 337], 'false,false': [1.49e-08, 85, 0], 'true,false': [0.0, 21, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.12062031445231457, -3.366950872065834e-16], 'true': [3.204821834882351e-15, 6.055761952500853e-17], 'true,false,true': [6.055761952500853e-17, nan], 'true,false': [6.055761952500853e-17, nan]}, {'': [0.09158604700268083, -2.4663466861094386e-16], 'true': [-5.144582419153248e-15, -4.070817756958907e-17], 'true,false,true': [-4.070817756958907e-17, nan], 'true,false': [-4.070817756958907e-17, nan]}, {'': [0.057192691422580814, -1.3344917825210563e-17], 'true': [-5.90361916952012e-16, 3.3306690738754695e-17], 'true,true': [-5.90361916952012e-16, nan], 'true,true,true': [-5.90361916952012e-16, nan], 'true,false,true': [3.3306690738754695e-17, nan], 'true,false': [3.3306690738754695e-17, nan]}, {'': [0.03045955831625845, 0.018624976697377883], 'true': [0.03045955831625845, nan], 'true,true,true': [-6.661338147750939e-16, -1.290957005378089e-18], 'true,true': [0.03045955831625845, nan]}, {'': [0.025632960357019566, 5.474135098305857e-18], 'true': [0.001563001571310667, 1.8187120987914285e-06], 'true,false': [1.8187120987914285e-06, nan]}, {'': [0.011472118606580865, 0.013039300660542796], 'true': [0.011472118606580865, nan], 'true,true,false': [-1.200241107702872e-17, nan], 'true,true': [-2.4671622769447924e-16, -1.200241107702872e-17]}, {'': [0.014289273893350649, -4.543486965462687e-17], 'true': [0.014289273893350649, nan], 'true,true,false': [4.3690123427177834e-06, nan], 'true,true': [0.0031034574703527875, 4.3690123427177834e-06]}, {'': [0.010783665672668322, -1.25255930983351e-16], 'true': [0.0024975354088266686, 5.061880923115406e-06], 'true,true,true': [0.0024975354088266686, nan], 'true,false': [5.061880923115406e-06, nan], 'true,true': [0.0024975354088266686, nan]}, {'': [0.008357357849281027, 2.254259948477475e-18], 'true': [0.008357357849281027, nan], 'true,true,false': [3.5561639310561173e-06, nan], 'true,true': [0.002022375149438831, 3.5561639310561173e-06]}, {'': [0.008171363058799471, 9.845373991958936e-17], 'true': [0.006982336645483434, -4.625929269271485e-18], 'false,true': [7.334322703512831e-17, nan], 'false': [7.334322703512831e-17, 2.6122894697062506e-18], 'true,true': [0.006982336645483434, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(G, A), movie(G, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.1418510649004889;  // std dev = 0,000, 672,000 (wgt'ed) examples reached here.  /* #neg=672 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.12544463852839233;  // std dev = 0,000, 618,000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360626;  // std dev = 4,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.11231637819360611;  // std dev = 0,000, 639,000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4175135841583113;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else return -0.10159632948783626;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.10159632948783533;  // std dev = 3,90e-07, 613,000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.0926912761892614;  // std dev = 0,000, 624,000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948773;  // std dev = 3,42e-07, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | else return -0.08518475138839679;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.25517224256948934;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.08518475138839678;  // std dev = 1,52e-07, 626,000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109212;  // std dev = 0,000, 621,000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333638;  // std dev = 2,85e-07, 653,000 (wgt'ed) examples reached here.  /* #neg=653 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.12282074499619414;  // std dev = 0,076, 170,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=147 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367153;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420365;  // std dev = 0,000, 626,000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13751776814452413;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.07668341813336887;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.10392327294077343;  // std dev = 0,071, 224,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=190 */
%   | else return -0.06419184008202607;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(A) )
%   | then return -0.0641918400820253;  // std dev = 2,45e-07, 549,000 (wgt'ed) examples reached here.  /* #neg=549 */
%   | else return -0.06419184008202618;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064243
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.611 seconds
Total inference time: 1.291 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06507
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.582 seconds
Refined model CLL: -0.06507


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064243
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 21.202 seconds
Total inference time: 1.291 seconds
AUC ROC: 1.0
Total revision time: 21.202
Best scored revision CLL: -0.06507


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:43:47
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067588, 'Learning time': 8.55, 'Inference time': 1.268}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064243, 'Learning time': 21.202, 'Inference time': 1.291}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004886;  // std dev = 0,000, 600,000 (wgt'ed) examples reached here.  /* #neg=600 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else if ( actor(A) )
%   | | | then return 0.8581489350995093;  // std dev = 1,08e-06, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.12544463852839227;  // std dev = 0,000, 574,000 (wgt'ed) examples reached here.  /* #neg=574 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360628;  // std dev = 4,59e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.11231637819360601;  // std dev = 0,000, 628,000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783537;  // std dev = 3,90e-07, 632,000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015116;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.0926912761892618;  // std dev = 0,000, 619,000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694874;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.08518475138839678;  // std dev = 1,46e-07, 584,000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253465;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.0787767547310926;  // std dev = 0,000, 633,000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,80e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07324622576333689;  // std dev = 1,23e-07, 594,000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420368;  // std dev = 0,000, 642,000 (wgt'ed) examples reached here.  /* #neg=642 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06419184008202544;  // std dev = 2,16e-07, 620,000 (wgt'ed) examples reached here.  /* #neg=620 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.641 seconds
Total inference time: 1.206 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:43:53
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 4.641, 'Inference time': 1.206}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1418510649004885;  // std dev = 0,000, 600,000 (wgt'ed) examples reached here.  /* #neg=600 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.49 seconds
Total inference time: 0.83 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:43:56
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 1.49, 'Inference time': 0.83}


