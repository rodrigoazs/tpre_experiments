Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, G), professor(G) )
%   | | | then return 0.16117923812981538;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5160436719416182;  // std dev = 4,136, 76,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=50 */
%   else return -0.1418510649004882;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, E) )
%   | | | then return 0.4694734122109544;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7417903431046244;  // std dev = 0,109, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7254245937825999;  // std dev = 0,122, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( ta(J, A, K) )
%   | | | then return 0.44635537800898306;  // std dev = 1,530, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.005501259848944781;  // std dev = 1,761, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.5520764221177975;  // std dev = 3,288, 61,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=47 */
%   | | | else return 0.46398463207660384;  // std dev = 2,146, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.12544463852839144;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( publication(D, E), ta(F, E, G) )
%   | | then return 0.5838021970860285;  // std dev = 0,191, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( publication(D, H), tempadvisedby(I, H) )
%   | | | then return 0.5074713102461811;  // std dev = 0,986, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.4110392614692961;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(J, B), publication(K, A) )
%   | | then if ( publication(K, L), ta(M, L, N) )
%   | | | then return 0.3075049285764698;  // std dev = 1,897, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.011573804331647118;  // std dev = 1,292, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( hasposition(P, C), tempadvisedby(Q, P) )
%   | | | then return 0.4010411051247514;  // std dev = 3,878, 75,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=54 */
%   | | | else return 0.29170277306481857;  // std dev = 1,569, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( student(B) )
%   | then return -0.11231637819360621;  // std dev = 9,77e-08, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else return -0.09543955562118389;  // std dev = 0,155, 29,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( publication(E, C), publication(E, B) )
%   | | | then return 0.5358052442167865;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4261876288206329;  // std dev = 0,098, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( ta(F, C, G) )
%   | | | then return 0.34753171700263363;  // std dev = 2,234, 29,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   | | | else return 0.14033262639736177;  // std dev = 2,894, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.4315539777016712;  // std dev = 1,121, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.14843110805960386;  // std dev = 1,276, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.5859141231680496;  // std dev = 0,042, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.3551788737840865;  // std dev = 1,242, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.10175227729836996;  // std dev = 0,006, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( publication(F, E), publication(F, B) )
%   | | | then return 0.3749802464450049;  // std dev = 0,100, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.32785190000602993;  // std dev = 0,113, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.22457737564459088;  // std dev = 0,331, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return 0.2112215129418349;  // std dev = 1,821, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.23221314068693444;  // std dev = 0,189, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( publication(L, B), tempadvisedby(M, B) )
%   | | | then return 0.3285781603369516;  // std dev = 2,191, 33,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.14764959917316245;  // std dev = 3,655, 59,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   else return -0.09284627279669047;  // std dev = 0,006, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), publication(D, A) )
%   | then return 0.604019349499727;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( ta(F, E, G), publication(H, B) )
%   | | | then return 0.21412480376881426;  // std dev = 2,094, 43,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return 0.013557894850130457;  // std dev = 3,302, 54,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=29 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.3076325215781116;  // std dev = 1,398, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.17027887441046227;  // std dev = 2,577, 38,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=27 */
%   else return -0.08528089420509997;  // std dev = 0,005, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.30386690439217995;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2343280663891242;  // std dev = 0,052, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.2685942291247202;  // std dev = 0,273, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09938359467803008;  // std dev = 1,455, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), tempadvisedby(I, H) )
%   | | | then return 0.09815671913300492;  // std dev = 2,469, 49,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=34 */
%   | | | else return 0.29214945437459955;  // std dev = 1,395, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.1766889050534258;  // std dev = 2,246, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.2972357867451424;  // std dev = 1,668, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   else return -0.07885308799273347;  // std dev = 0,005, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A) )
%   then if ( professor(A) )
%   | then return -0.07436684452560273;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.4304696668091779;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(C, E), professor(E) )
%   | | | then return 0.10355204310777427;  // std dev = 2,505, 64,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=48 */
%   | | | else return 0.28778474664384296;  // std dev = 0,998, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( student(B) )
%   | then return -0.07321341736118632;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( tempadvisedby(F, B), student(A) )
%   | | then if ( publication(G, F) )
%   | | | then return -0.11304015204442165;  // std dev = 1,483, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.05490210208405984;  // std dev = 2,862, 40,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | | else if ( publication(H, B) )
%   | | | then return -0.040308887273109106;  // std dev = 2,586, 33,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | | else return -0.15465858649736153;  // std dev = 1,355, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, D, G) )
%   | | | then return 0.038044895132612125;  // std dev = 0,895, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.21993707183597086;  // std dev = 0,042, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(C, H), ta(I, H, J) )
%   | | | then return 0.18778214223736556;  // std dev = 0,070, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.20378288076854156;  // std dev = 0,081, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( publication(K, B), ta(L, A, M) )
%   | | then if ( publication(K, N), inphase(N, P) )
%   | | | then return 0.19425470708142634;  // std dev = 1,919, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | | else return 0.0029635120131239665;  // std dev = 1,681, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( tempadvisedby(Q, B), publication(R, Q) )
%   | | | then return -0.19188129433718837;  // std dev = 1,163, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.011131736959755133;  // std dev = 3,576, 62,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=37 */
%   else return -0.06857604620488651;  // std dev = 0,010, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.3051978581544307;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3443413960101056;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.1386417351358192;  // std dev = 0,967, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return -0.10088852509641902;  // std dev = 1,570, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.2399344267347301;  // std dev = 1,002, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.11119396609648426;  // std dev = 3,323, 70,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=54 */
%   else return -0.06428912242320468;  // std dev = 0,008, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */


Starting fold 1

Target train facts examples: 537
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 159
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 4,71e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1,49e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 1,86e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7,60e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 8,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else return 0.2586185189952219;  // std dev = 1,408, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.42881007504693214;  // std dev = 0,214, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10943667878429168;  // std dev = 0,050, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10226644481231971;  // std dev = 0,055, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.3286454487351627;  // std dev = 0,196, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10004246034746243;  // std dev = 0,045, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09351883616765234;  // std dev = 0,062, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.23066910776004676;  // std dev = 0,853, 71,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08623914125736688;  // std dev = 0,066, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21887077399800522;  // std dev = 0,156, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11239888203907673;  // std dev = 0,050, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08009952952619451;  // std dev = 0,075, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10240337201185325;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.14711978830566094;  // std dev = 0,861, 74,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=65 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07298363146905819;  // std dev = 5,16e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1628022819001508;  // std dev = 0,016, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12141593611522582;  // std dev = 0,073, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06923713787791885;  // std dev = 0,055, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14184492969630538;  // std dev = 0,113, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.10198599312308476;  // std dev = 0,048, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0648763615752753;  // std dev = 0,052, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064149
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.932 seconds
Total inference time: 1.383 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068394
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.532 seconds
Parameter learned model CLL: -0.068394


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 65], 'true,false,true,false': [0.0, 0, 0], 'false': [4.71e-08, 121, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 65], 'true,false,true': [1.86e-09, 12, 0], 'false': [7.6e-08, 110, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [8.16e-08, 111, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.03e-07, 0, 55], 'false,false': [1.408, 8, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.05, 10, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.214, 0, 65], 'false': [0.055, 117, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.045, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.196, 0, 65], 'true,false,true,false': [0.0, 0, 0], 'false': [0.062, 123, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.853, 6, 65], 'true,false': [0.0, 0, 0], 'false': [0.066, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.156, 0, 65], 'true,true,false,true': [0.05, 9, 0], 'true,false': [0.0, 0, 0], 'false': [0.075, 125, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 3, 0], 'true,false,true': [0.861, 9, 65], 'false,true': [5.16e-08, 101, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.073, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.016, 0, 65], 'false': [0.055, 121, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.113, 0, 65], 'true,false': [0.0, 0, 0], 'true,true,false': [0.048, 12, 0], 'false': [0.052, 125, 0]}]]
[{'': [0.1237880886426584, 1.8350793795457133e-17], 'true': [-8.745141363201234e-16, -1.0092936587501423e-17], 'true,true': [-8.745141363201234e-16, nan], 'true,true,true': [-8.745141363201234e-16, nan], 'true,false,true': [-1.0092936587501423e-17, nan], 'true,false': [-1.0092936587501423e-17, nan]}, {'': [0.09391659297062578, 5.24832702550074e-17], 'true': [2.1862853408003084e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.058033180532859475, 0.031879238400673346], 'true': [1.9378438248002731e-16, 0.0], 'true,true': [1.9378438248002731e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'false': [6.00120553851436e-17, 0.11007415836198914]}, {'': [0.034118612356077306, 2.582063651616622e-05], 'true': [0.0007018588851816677, 0.00024588430836171846], 'true,false,true': [0.00024588430836171846, nan], 'true,false': [0.00024588430836171846, nan], 'true,true': [0.0007018588851816677, nan]}, {'': [0.020181254611579776, 3.125124133486084e-05], 'true': [0.0005936916156511775, 0.00022447356824743957], 'true,true': [0.0005936916156511775, nan], 'true,true,true': [0.0005936916156511775, nan], 'true,false,true': [0.00022447356824743957, nan], 'true,false': [0.00022447356824743957, nan]}, {'': [0.010244320757997732, 3.8053802276507275e-05], 'true': [0.010244320757997732, nan]}, {'': [0.01208464656257872, 4.508921088827478e-05], 'true': [0.01208464656257872, nan], 'true,true,true': [0.0003732251145923357, nan], 'true,true,false': [0.00027425607222204677, nan], 'true,true': [0.0003732251145923357, 0.00027425607222204677]}, {'': [0.011960841583453776, 2.63815372188156e-17], 'true': [-2.3129646346357427e-18, 0.010019955857417164], 'true,false': [0.010019955857417164, nan], 'false': [2.63815372188156e-17, nan]}, {'': [0.012046370107282022, 2.5096159720715466e-05], 'true': [0.0002428732625193258, 0.00038376652381519327], 'true,false,true': [0.00038376652381519327, nan], 'true,false': [0.00038376652381519327, nan], 'true,true': [0.0002428732625193258, nan]}, {'': [0.008016584138791813, 2.1644930218055692e-05], 'true': [0.008016584138791813, nan], 'true,true': [0.00019543607944923108, 0.0001931006724546734]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048763;  // std dev = 9,19e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839136;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9,54e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.459983177469157;  // std dev = 0,618, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4218298737583061;  // std dev = 0,597, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42168788592879836;  // std dev = 0,080, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12207506644378684;  // std dev = 0,100, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10159632948783635;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3235792495903441;  // std dev = 0,073, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10469959866057617;  // std dev = 0,048, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926082;  // std dev = 7,45e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25714948664987364;  // std dev = 0,064, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10139535621054392;  // std dev = 0,094, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.08518475138839682;  // std dev = 5,77e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21116662184611462;  // std dev = 0,056, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08767655642826332;  // std dev = 0,074, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109155;  // std dev = 6,91e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333707;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17964956977612628;  // std dev = 0,029, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.08296311206813958;  // std dev = 0,057, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.13860320671624712;  // std dev = 0,091, 52,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=44 */
%   else return -0.07324622576333722;  // std dev = 1,83e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1569880130782549;  // std dev = 0,046, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09796990475032565;  // std dev = 0,074, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06842697784420265;  // std dev = 5,37e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13525458298156978;  // std dev = 0,023, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.07899847745338875;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.11215260005154228;  // std dev = 0,071, 50,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063716
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.558 seconds
Total inference time: 1.225 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06639
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.234 seconds
Refined model CLL: -0.06639


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063716
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.256 seconds
Total inference time: 1.225 seconds
AUC ROC: 1.0
Total revision time: 6.256
Best scored revision CLL: -0.06639


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:05
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064149, 'Learning time': 1.932, 'Inference time': 1.383}, 'CLL': -0.063716, 'Learning time': 6.256, 'Inference time': 1.225}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1254446385283914;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360622;  // std dev = 7,30e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783633;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926098;  // std dev = 4,47e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839679;  // std dev = 4,21e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.0787767547310916;  // std dev = 6,05e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07324622576333716;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,94e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06842697784420267;  // std dev = 4,59e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06419184008202626;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.303 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:13:09
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 2.303, 'Inference time': 1.328}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048766;  // std dev = 8,43e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.8 seconds
Total inference time: 0.887 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:13:11
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 0.8, 'Inference time': 0.887}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004882;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462834;  // std dev = 4,30e-07, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360675;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | else return 0.26432520972120405;  // std dev = 2,068, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.42969837961099894;  // std dev = 0,308, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11323194057414354;  // std dev = 0,089, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10308612912899977;  // std dev = 0,117, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.32926005671681224;  // std dev = 0,283, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.09903101068390287;  // std dev = 0,073, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09366631311088554;  // std dev = 0,103, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.20033321167459617;  // std dev = 1,693, 157,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08581133281841852;  // std dev = 0,083, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22447535906752872;  // std dev = 0,228, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.1096359161809555;  // std dev = 0,085, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08005500258943189;  // std dev = 0,103, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10288342427010429;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.14814003160603895;  // std dev = 1,234, 151,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=130 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07295016009695834;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1663645156538761;  // std dev = 0,016, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11820457476345168;  // std dev = 0,093, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06938156368700098;  // std dev = 0,083, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14458923757219544;  // std dev = 0,164, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.10009541376549669;  // std dev = 0,058, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06468536806547878;  // std dev = 0,067, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06409
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.226 seconds
Total inference time: 1.579 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06824
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.919 seconds
Parameter learned model CLL: -0.06824


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [1.05e-08, 21, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [7.63e-07, 0, 130], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 255, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 130], 'true,false,true': [0.0, 32, 0], 'false': [0.0, 230, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [1.05e-08, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 226, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [4.3e-07, 0, 108], 'false,false': [2.068, 17, 22]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.089, 24, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.308, 0, 130], 'false': [0.117, 241, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.073, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.283, 0, 130], 'true,false,true,false': [0.0, 0, 0], 'false': [0.103, 268, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.693, 27, 130], 'true,false': [0.0, 0, 0], 'false': [0.083, 251, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.228, 0, 130], 'true,true,false,true': [0.085, 26, 0], 'true,false': [0.0, 0, 0], 'false': [0.103, 234, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [9.13e-09, 12, 0], 'true,false,true': [1.234, 21, 130], 'false,true': [0.0, 249, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.093, 23, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.016, 0, 130], 'false': [0.083, 232, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.164, 0, 130], 'true,false': [0.0, 0, 0], 'true,true,false': [0.058, 17, 0], 'false': [0.067, 243, 0]}]]
[{'': [0.11973159071970987, -1.2190684191962504e-16], 'true': [4.481884948640632e-15, 5.28677630773884e-18], 'true,true': [4.481884948640632e-15, nan], 'true,true,true': [4.481884948640632e-15, nan], 'true,false,true': [5.28677630773884e-18, nan], 'true,false': [5.28677630773884e-18, nan]}, {'': [0.11315988004325096, -4.633974363652827e-17], 'true': [-1.7490282726402467e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.042750063470935296, 0.03393732466988889], 'true': [1.7105658453483892e-15, 8.540177112501205e-18], 'true,true': [1.7105658453483892e-15, nan], 'true,false,true': [8.540177112501205e-18, nan], 'true,false': [8.540177112501205e-18, nan], 'false': [-7.07398741354082e-17, 0.10961822989540078]}, {'': [0.039445926474822306, 5.7213854358586355e-05], 'true': [0.0007288489974638533, 0.00032879808156864354], 'true,false,true': [0.00032879808156864354, nan], 'true,false': [0.00032879808156864354, nan], 'true,true': [0.0007288489974638533, nan]}, {'': [0.025364769319262317, 3.934305408732431e-05], 'true': [0.0006154575349923492, 0.00021395837823043218], 'true,true': [0.0006154575349923492, nan], 'true,true,true': [0.0006154575349923492, nan], 'true,false,true': [0.00021395837823043218, nan], 'true,false': [0.00021395837823043218, nan]}, {'': [0.018254696016877833, 2.7353681635899773e-05], 'true': [0.018254696016877833, nan]}, {'': [0.015882429956551425, 4.575381706919079e-05], 'true': [0.015882429956551425, nan], 'true,true,true': [0.0003983687857289949, nan], 'true,true,false': [0.0002774489371895531, nan], 'true,true': [0.0003983687857289949, 0.0002774489371895531]}, {'': [0.013633585484055733, -9.809199414358813e-18], 'true': [6.938893903907228e-18, 0.010078071901071515], 'true,false': [0.010078071901071515, nan], 'false': [-9.809199414358813e-18, nan]}, {'': [0.010619667951635398, 2.9600160777051948e-05], 'true': [0.0002586487864519051, 0.0003757819626817992], 'true,false,true': [0.0003757819626817992, nan], 'true,false': [0.0003757819626817992, nan], 'true,true': [0.0002586487864519051, nan]}, {'': [0.00632982023148744, 1.856182608082827e-05], 'true': [0.00632982023148744, nan], 'true,true': [0.00020747534694857213, 0.0002009815107949884]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1418510649004885;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839172;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4,30e-07, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(B) )
%   | then return -0.11231637819360678;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.11231637819360629;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360632;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 3,82e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.10159632948783652;  // std dev = 0,000, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601497;  // std dev = 2,38e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.0926912761892605;  // std dev = 6,99e-08, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839678;  // std dev = 8,16e-08, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2,02e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07877675473109147;  // std dev = 6,99e-08, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333702;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527797;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.0732462257633369;  // std dev = 1,06e-07, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06842697784420282;  // std dev = 0,000, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1340070300080113;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.06419184008202619;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.10951054044632122;  // std dev = 0,065, 89,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 1,49e-08, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063643
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.179 seconds
Total inference time: 1.385 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064807
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.746 seconds
Refined model CLL: -0.064807


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063643
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.07 seconds
Total inference time: 1.385 seconds
AUC ROC: 1.0
Total revision time: 9.07
Best scored revision CLL: -0.064807


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:23
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06409, 'Learning time': 3.226, 'Inference time': 1.579}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063643, 'Learning time': 9.07, 'Inference time': 1.385}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.14185106490048846;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.12544463852839172;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11231637819360678;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 3,86e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.10159632948783648;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2,53e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926055;  // std dev = 6,32e-08, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5,96e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08518475138839678;  // std dev = 7,30e-08, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2,11e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07877675473109146;  // std dev = 7,15e-08, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07324622576333678;  // std dev = 9,66e-08, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06842697784420261;  // std dev = 6,32e-08, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06419184008202623;  // std dev = 1,49e-08, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.653 seconds
Total inference time: 1.402 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:13:28
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 2.653, 'Inference time': 1.402}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1418510649004883;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.984 seconds
Total inference time: 0.884 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:13:30
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 0.984, 'Inference time': 0.884}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 1,71e-07, 334,000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0,000, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462833;  // std dev = 5,53e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360678;  // std dev = 0,000, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
%   | else return 0.2790838926332255;  // std dev = 2,504, 58,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.4294246827133361;  // std dev = 0,362, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11256890084802303;  // std dev = 0,113, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10263296468263843;  // std dev = 0,124, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.32905183909259544;  // std dev = 0,332, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.1045217810869837;  // std dev = 0,104, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09407787532970703;  // std dev = 0,136, 340,000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.2126733645984909;  // std dev = 1,848, 226,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08612121257985876;  // std dev = 0,117, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22219260063329754;  // std dev = 0,265, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11212985972711005;  // std dev = 0,113, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07945620967201128;  // std dev = 0,104, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10428450242761557;  // std dev = 6,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.13799680957971594;  // std dev = 1,670, 234,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=195 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07297251549001983;  // std dev = 1,58e-07, 343,000 (wgt'ed) examples reached here.  /* #neg=343 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1662500404074858;  // std dev = 0,015, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1189798466683552;  // std dev = 0,117, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06874609182301994;  // std dev = 0,075, 383,000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14449817727939226;  // std dev = 0,192, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.10456054443606193;  // std dev = 0,121, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06503568447930878;  // std dev = 0,099, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0641
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.757 seconds
Total inference time: 1.715 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068413
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.39 seconds
Parameter learned model CLL: -0.068413


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [2.79e-08, 31, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.08e-06, 0, 195], 'true,false,true,false': [0.0, 0, 0], 'false': [1.71e-07, 334, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 195], 'true,false,true': [0.0, 28, 0], 'false': [0.0, 355, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 306, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.53e-07, 0, 161], 'false,false': [2.504, 24, 34]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.113, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.362, 0, 195], 'false': [0.124, 362, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.104, 33, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.332, 0, 195], 'true,false,true,false': [0.0, 0, 0], 'false': [0.136, 340, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.848, 31, 195], 'true,false': [0.0, 0, 0], 'false': [0.117, 350, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.265, 0, 195], 'true,true,false,true': [0.113, 38, 0], 'true,false': [0.0, 0, 0], 'false': [0.104, 362, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [6.45e-09, 9, 0], 'true,false,true': [1.67, 39, 195], 'false,true': [1.58e-07, 343, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.117, 33, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.015, 0, 195], 'false': [0.075, 383, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.192, 0, 195], 'true,false': [0.0, 0, 0], 'true,true,false': [0.121, 47, 0], 'false': [0.099, 371, 0]}]]
[{'': [0.11835304252487057, 8.775415523983273e-17], 'true': [5.975846598187509e-15, 2.5069552168955147e-17], 'true,true': [5.975846598187509e-15, nan], 'true,true,true': [5.975846598187509e-15, nan], 'true,false,true': [2.5069552168955147e-17, nan], 'true,false': [2.5069552168955147e-17, nan]}, {'': [0.07838123344647388, -1.1758981894621375e-16], 'true': [-3.643808901333847e-15, -5.9476233462061954e-18], 'true,false': [-5.9476233462061954e-18, nan]}, {'': [0.0518657178286062, 0.03775117611193707], 'true': [1.897722834638777e-15, 0.0], 'true,true': [1.897722834638777e-15, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'false': [-7.11123244531146e-17, 0.10813706259057794]}, {'': [0.0407126392536534, 4.214869134083539e-05], 'true': [0.0006718163904356181, 0.00033711250231229753], 'true,false,true': [0.00033711250231229753, nan], 'true,false': [0.00033711250231229753, nan], 'true,true': [0.0006718163904356181, nan]}, {'': [0.02380125411073815, 5.463209809868364e-05], 'true': [0.000565632411249977, 0.00032508312126309764], 'true,true': [0.000565632411249977, nan], 'true,true,true': [0.000565632411249977, nan], 'true,false,true': [0.00032508312126309764, nan], 'true,false': [0.00032508312126309764, nan]}, {'': [0.015108332116007261, 3.90118910176529e-05], 'true': [0.015108332116007261, nan]}, {'': [0.015612070111695735, 2.998312789544945e-05], 'true': [0.015612070111695735, nan], 'true,true,true': [0.0003603360333549323, nan], 'true,true,false': [0.0003348696671241725, nan], 'true,true': [0.0003603360333549323, 0.0003348696671241725]}, {'': [0.013570348386663697, 7.315172115605988e-17], 'true': [4.625929269271485e-18, 0.01191820211685184], 'true,false': [0.01191820211685184, nan], 'false': [7.315172115605988e-17, nan]}, {'': [0.01033338524104424, 1.4634512448453872e-05], 'true': [0.0002365714633281977, 0.00041551059725203175], 'true,false,true': [0.00041551059725203175, nan], 'true,false': [0.00041551059725203175, nan], 'true,true': [0.0002365714633281977, nan]}, {'': [0.009921105021234538, 2.630162135721492e-05], 'true': [0.009921105021234538, nan], 'true,true': [0.00018966371964751168, 0.0003131836678624775]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048768;  // std dev = 1,69e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839127;  // std dev = 3,33e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.12544463852839216;  // std dev = 0,000, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.11231637819360658;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #neg=332 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462844;  // std dev = 7,30e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.11231637819360629;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360636;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.10159632948783626;  // std dev = 1,15e-07, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.320711847160149;  // std dev = 4,00e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.09269127618926046;  // std dev = 2,04e-07, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,86e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07877675473109143;  // std dev = 5,96e-08, 349,000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then return 0.13782705092039702;  // std dev = 0,091, 102,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=86 */
%   | | else return 0.14161485189366313;  // std dev = 0,087, 127,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=109 */
%   else return -0.07324622576333704;  // std dev = 8,82e-08, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1576142706518108;  // std dev = 0,003, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.08337801798196642;  // std dev = 0,000736, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420321;  // std dev = 0,000, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.137797909665506;  // std dev = 0,003, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.07716412581874056;  // std dev = 0,000809, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202576;  // std dev = 1,60e-07, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063874
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.314 seconds
Total inference time: 1.237 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065394
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.901 seconds
Refined model CLL: -0.065394


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063874
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.362 seconds
Total inference time: 1.237 seconds
AUC ROC: 1.0
Total revision time: 10.362
Best scored revision CLL: -0.065394


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:44
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.0641, 'Learning time': 3.757, 'Inference time': 1.715}, 'CLL': -0.063874, 'Learning time': 10.362, 'Inference time': 1.237}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.14185106490048804;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.12544463852839208;  // std dev = 0,000, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1123163781936066;  // std dev = 0,000, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.10159632948783655;  // std dev = 0,000, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 4,00e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.0926912761892605;  // std dev = 1,28e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.07877675473109144;  // std dev = 0,000, 340,000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07324622576333711;  // std dev = 6,83e-08, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.0684269778442032;  // std dev = 0,000, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.06419184008202602;  // std dev = 1,02e-07, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.104 seconds
Total inference time: 1.36 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:13:48
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 3.104, 'Inference time': 1.36}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048782;  // std dev = 9,88e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.092 seconds
Total inference time: 0.888 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:13:50
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 1.092, 'Inference time': 0.888}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 3,01e-07, 447,000 (wgt'ed) examples reached here.  /* #neg=447 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0,000, 458,000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462832;  // std dev = 6,31e-07, 211,000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.112316378193606;  // std dev = 0,000, 448,000 (wgt'ed) examples reached here.  /* #neg=448 */
%   | else return 0.2818578137588584;  // std dev = 2,991, 83,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.430257496256227;  // std dev = 0,426, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11525823531881882;  // std dev = 0,125, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10315021282090141;  // std dev = 0,180, 514,000 (wgt'ed) examples reached here.  /* #neg=514 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.32962903701857976;  // std dev = 0,391, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10495874213688994;  // std dev = 0,149, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09374497238260956;  // std dev = 0,148, 492,000 (wgt'ed) examples reached here.  /* #neg=492 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.20908621663977733;  // std dev = 2,247, 304,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08618723097081517;  // std dev = 0,142, 479,000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22317317314444451;  // std dev = 0,312, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.10913551743127337;  // std dev = 0,105, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07959909472505511;  // std dev = 0,124, 435,000 (wgt'ed) examples reached here.  /* #neg=435 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10450708883412287;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.13729131192329005;  // std dev = 1,954, 314,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=260 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07294591765903144;  // std dev = 1,86e-07, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1670022096338589;  // std dev = 0,016, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11498834463013972;  // std dev = 0,114, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06901898789621493;  // std dev = 0,103, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14507717164052505;  // std dev = 0,227, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.10656297842475684;  // std dev = 0,126, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419127930655495;  // std dev = 0,057, 450,000 (wgt'ed) examples reached here.  /* #neg=450 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064107
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.388 seconds
Total inference time: 1.508 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068367
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.616 seconds
Parameter learned model CLL: -0.068367


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [4.47e-08, 42, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.07e-06, 0, 260], 'true,false,true,false': [0.0, 0, 0], 'false': [3.01e-07, 447, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 260], 'true,false,true': [0.0, 44, 0], 'false': [0.0, 458, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 31, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 448, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [6.31e-07, 0, 211], 'false,false': [2.991, 34, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.125, 40, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.426, 0, 260], 'false': [0.18, 514, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.149, 66, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.391, 0, 260], 'true,false,true,false': [0.0, 0, 0], 'false': [0.148, 492, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [2.247, 44, 260], 'true,false': [0.0, 0, 0], 'false': [0.142, 479, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.312, 0, 260], 'true,true,false,true': [0.105, 39, 0], 'true,false': [0.0, 0, 0], 'false': [0.124, 435, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [5.27e-09, 16, 0], 'true,false,true': [1.954, 54, 260], 'false,true': [1.86e-07, 474, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.114, 36, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.016, 0, 260], 'false': [0.103, 473, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.227, 0, 260], 'true,false': [0.0, 0, 0], 'true,true,false': [0.126, 46, 0], 'false': [0.057, 450, 0]}]]
[{'': [0.1197315907197094, 2.0267158570338428e-16], 'true': [4.372570681600617e-15, 4.7580986769649563e-17], 'true,true': [4.372570681600617e-15, nan], 'true,true,true': [4.372570681600617e-15, nan], 'true,false,true': [4.7580986769649563e-17, nan], 'true,false': [4.7580986769649563e-17, nan]}, {'': [0.08837064688583632, -1.2411226825503933e-16], 'true': [-4.481884948640632e-15, -2.7755575615628914e-17], 'true,false': [-2.7755575615628914e-17, nan]}, {'': [0.0497913399507455, 0.03734173329780806], 'true': [1.88580062571401e-15, -8.953411488912552e-18], 'true,true': [1.88580062571401e-15, nan], 'true,false,true': [-8.953411488912552e-18, nan], 'true,false': [-8.953411488912552e-18, nan], 'false': [-9.912705577010326e-18, 0.10781004045810078]}, {'': [0.035045665536415714, 6.290547049108626e-05], 'true': [0.0006993457012856543, 0.00038765285501810297], 'true,false,true': [0.00038765285501810297, nan], 'true,false': [0.00038765285501810297, nan], 'true,true': [0.0006993457012856543, nan]}, {'': [0.031032754092080186, 4.4601198780505635e-05], 'true': [0.0005881718193786211, 0.0003362029178720537], 'true,true': [0.0005881718193786211, nan], 'true,true,true': [0.0005881718193786211, nan], 'true,false,true': [0.0003362029178720537, nan], 'true,false': [0.0003362029178720537, nan]}, {'': [0.016615504261560332, 4.205035065096214e-05], 'true': [0.016615504261560332, nan]}, {'': [0.012888506377093734, 3.533088272499663e-05], 'true': [0.012888506377093734, nan], 'true,true,true': [0.0003754938795334344, nan], 'true,true,false': [0.00028331505751207965, nan], 'true,true': [0.0003754938795334344, 0.00028331505751207965]}, {'': [0.014270958656299586, 7.307797124114954e-17], 'true': [1.734723475976807e-18, 0.01216340348801576], 'true,false': [0.01216340348801576, nan], 'false': [7.307797124114954e-17, nan]}, {'': [0.008755698352175621, 2.2317487277320707e-05], 'true': [0.0002464756728232423, 0.00036371270897169524], 'true,false,true': [0.00036371270897169524, nan], 'true,false': [0.00036371270897169524, nan], 'true,true': [0.0002464756728232423, nan]}, {'': [0.008307733624206455, 7.109711950012729e-06], 'true': [0.008307733624206455, nan], 'true,true': [0.00019740698532608224, 0.00034505363669512756]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.1418510649004875;  // std dev = 1,84e-07, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.12544463852839224;  // std dev = 0,000, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462832;  // std dev = 6,31e-07, 211,000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(B) )
%   | then return -0.11231637819360601;  // std dev = 0,000, 445,000 (wgt'ed) examples reached here.  /* #neg=445 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462839;  // std dev = 2,02e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.11231637819360633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783628;  // std dev = 1,83e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.10159632948783563;  // std dev = 2,98e-07, 470,000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601502;  // std dev = 1,19e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.09269127618926114;  // std dev = 8,94e-08, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,21e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.08518475138839678;  // std dev = 1,49e-07, 502,000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,80e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.07877675473109179;  // std dev = 1,81e-07, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9,42e-08, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.07324622576333704;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0732462257633371;  // std dev = 9,88e-08, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.06842697784420342;  // std dev = 0,000, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202561;  // std dev = 2,02e-07, 431,000 (wgt'ed) examples reached here.  /* #neg=431 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.131 seconds
Total inference time: 1.199 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.917 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.052 seconds
Total inference time: 1.199 seconds
AUC ROC: 1.0
Total revision time: 12.052
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:14:06
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064107, 'Learning time': 4.388, 'Inference time': 1.508}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 12.052, 'Inference time': 1.199}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.14185106490048754;  // std dev = 1,46e-07, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.1254446385283923;  // std dev = 0,000, 512,000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,95e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.11231637819360629;  // std dev = 0,000, 456,000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783627;  // std dev = 1,97e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.10159632948783587;  // std dev = 2,53e-07, 501,000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,33e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926128;  // std dev = 0,000, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0851847513883968;  // std dev = 2,17e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.08518475138839678;  // std dev = 1,21e-07, 442,000 (wgt'ed) examples reached here.  /* #neg=442 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07877675473109177;  // std dev = 0,000, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07324622576333721;  // std dev = 0,000, 418,000 (wgt'ed) examples reached here.  /* #neg=418 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420268;  // std dev = 2,24e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06842697784420348;  // std dev = 0,000, 495,000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080112;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.06419184008202572;  // std dev = 1,81e-07, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.572 seconds
Total inference time: 1.221 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:14:11
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 3.572, 'Inference time': 1.221}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048727;  // std dev = 2,70e-07, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.3 seconds
Total inference time: 0.856 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:14:13
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 1.3, 'Inference time': 0.856}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.141851064900488;  // std dev = 0,000, 551,000 (wgt'ed) examples reached here.  /* #neg=551 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0,000, 605,000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462832;  // std dev = 3,77e-07, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360563;  // std dev = 0,000, 568,000 (wgt'ed) examples reached here.  /* #neg=568 */
%   | else return 0.26285777496309337;  // std dev = 3,395, 105,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.43061081805797957;  // std dev = 0,503, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11351093973367393;  // std dev = 0,141, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10295877777209335;  // std dev = 0,175, 583,000 (wgt'ed) examples reached here.  /* #neg=583 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.32989923747891015;  // std dev = 0,462, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10249928122813047;  // std dev = 0,133, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09368878393719617;  // std dev = 0,158, 627,000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.21271405098280077;  // std dev = 2,418, 378,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08614531995176312;  // std dev = 0,146, 566,000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22273758470637806;  // std dev = 0,369, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11250803842830705;  // std dev = 0,130, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0798212899329711;  // std dev = 0,153, 594,000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10274848589582235;  // std dev = 1,39e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1493854821415689;  // std dev = 1,909, 374,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=326 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07295047159777118;  // std dev = 2,52e-07, 544,000 (wgt'ed) examples reached here.  /* #neg=544 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16505449706655145;  // std dev = 0,016, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12161079787381507;  // std dev = 0,146, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0690190993312966;  // std dev = 0,109, 569,000 (wgt'ed) examples reached here.  /* #neg=569 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14358387166235162;  // std dev = 0,266, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10536005923232479;  // std dev = 0,131, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06446608513824725;  // std dev = 0,089, 608,000 (wgt'ed) examples reached here.  /* #neg=608 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064097
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.188 seconds
Total inference time: 1.581 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068244
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.919 seconds
Parameter learned model CLL: -0.068244


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [6.66e-08, 67, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.05e-06, 0, 326], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 551, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 326], 'true,false,true': [0.0, 43, 0], 'false': [0.0, 605, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [2.79e-08, 49, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 568, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [3.77e-07, 0, 267], 'false,false': [3.395, 46, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.141, 60, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.503, 0, 326], 'false': [0.175, 583, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.133, 64, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.462, 0, 326], 'true,false,true,false': [0.0, 0, 0], 'false': [0.158, 627, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [2.418, 52, 326], 'true,false': [0.0, 0, 0], 'false': [0.146, 566, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.369, 0, 326], 'true,true,false,true': [0.13, 53, 0], 'true,false': [0.0, 0, 0], 'false': [0.153, 594, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [1.39e-08, 19, 0], 'true,false,true': [1.909, 48, 326], 'false,true': [2.52e-07, 544, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.146, 53, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.016, 0, 326], 'false': [0.109, 569, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.266, 0, 326], 'true,false': [0.0, 0, 0], 'true,true,false': [0.131, 58, 0], 'false': [0.089, 608, 0]}]]
[{'': [0.14141885023535586, -1.2250736823450003e-16], 'true': [3.400143152717044e-15, 6.628197161941232e-17], 'true,true': [3.400143152717044e-15, nan], 'true,true,true': [3.400143152717044e-15, nan], 'true,false,true': [6.628197161941232e-17, nan], 'true,false': [6.628197161941232e-17, nan]}, {'': [0.07349579638616387, -2.202095255454856e-16], 'true': [-5.056623150194578e-15, -2.840105411831796e-17], 'true,false': [-2.840105411831796e-17, nan]}, {'': [0.058408166420566905, 0.03565583825793058], 'true': [5.322417496330339e-16, 1.586032892321652e-17], 'true,true': [5.322417496330339e-16, nan], 'true,false,true': [1.586032892321652e-17, nan], 'true,false': [1.586032892321652e-17, nan], 'false': [0.0, 0.10974168947550823]}, {'': [0.03957458584826685, 5.22538689631711e-05], 'true': [0.0007762800349935425, 0.0003312351870571958], 'true,false,true': [0.0003312351870571958, nan], 'true,false': [0.0003312351870571958, nan], 'true,true': [0.0007762800349935425, nan]}, {'': [0.026240198440004556, 3.957122569113013e-05], 'true': [0.0006553560711907642, 0.0002765170830881219], 'true,true': [0.0006553560711907642, nan], 'true,true,true': [0.0006553560711907642, nan], 'true,false,true': [0.0002765170830881219, nan], 'true,false': [0.0002765170830881219, nan]}, {'': [0.01546525801945555, 3.769732096708729e-05], 'true': [0.01546525801945555, nan]}, {'': [0.013923395206576261, 3.9227100375002624e-05], 'true': [0.013923395206576261, nan], 'true,true,true': [0.00041848315171272467, nan], 'true,true,false': [0.0003184723392108224, nan], 'true,true': [0.00041848315171272467, 0.0003184723392108224]}, {'': [0.012200165111400893, 1.1673668567749808e-16], 'true': [1.0225738384705389e-17, 0.009746526468628374], 'true,false': [0.009746526468628374, nan], 'false': [1.1673668567749808e-16, nan]}, {'': [0.010174182195690891, 2.0966824599100603e-05], 'true': [0.00027100611014626907, 0.0004028356526684452], 'true,false,true': [0.0004028356526684452, nan], 'true,false': [0.0004028356526684452, nan], 'true,true': [0.00027100611014626907, nan]}, {'': [0.00817591497108374, 1.3007654042649539e-05], 'true': [0.00817591497108374, nan], 'true,true': [0.00021752555630389722, 0.00029498869909797096]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.14185106490048843;  // std dev = 0,000, 595,000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.1254446385283923;  // std dev = 0,000, 578,000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462832;  // std dev = 3,77e-07, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( actor(B) )
%   | then return -0.1123163781936059;  // std dev = 0,000, 598,000 (wgt'ed) examples reached here.  /* #neg=598 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462838;  // std dev = 2,53e-07, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.1123163781936062;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360629;  // std dev = 7,45e-09, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783617;  // std dev = 4,83e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.10159632948783515;  // std dev = 4,21e-07, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.09269127618926158;  // std dev = 0,000, 560,000 (wgt'ed) examples reached here.  /* #neg=560 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 1,58e-07, 599,000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109162;  // std dev = 4,71e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return -0.07877675473109237;  // std dev = 0,000, 589,000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333693;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527764;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17709649774527775;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333643;  // std dev = 2,70e-07, 616,000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06842697784420361;  // std dev = 0,000, 594,000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13400703000801084;  // std dev = 8,16e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.06419184008202622;  // std dev = 3,73e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.1340070300080108;  // std dev = 9,88e-08, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202539;  // std dev = 2,43e-07, 546,000 (wgt'ed) examples reached here.  /* #neg=546 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.009 seconds
Total inference time: 1.44 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.983 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.099 seconds
Total inference time: 1.44 seconds
AUC ROC: 1.0
Total revision time: 14.099
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:14:31
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064097, 'Learning time': 5.188, 'Inference time': 1.581}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 14.099, 'Inference time': 1.44}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.14185106490048874;  // std dev = 0,000, 649,000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839227;  // std dev = 0,000, 550,000 (wgt'ed) examples reached here.  /* #neg=550 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360565;  // std dev = 0,000, 572,000 (wgt'ed) examples reached here.  /* #neg=572 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( actor(A) )
%   | | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.11231637819360622;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.11231637819360621;  // std dev = 5,37e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10159632948783544;  // std dev = 3,77e-07, 634,000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.09269127618926176;  // std dev = 0,000, 612,000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.08518475138839678;  // std dev = 1,52e-07, 632,000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07877675473109241;  // std dev = 0,000, 596,000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452765;  // std dev = 2,76e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07324622576333681;  // std dev = 1,86e-07, 618,000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420268;  // std dev = 2,47e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06842697784420358;  // std dev = 0,000, 564,000 (wgt'ed) examples reached here.  /* #neg=564 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06419184008202546;  // std dev = 2,48e-07, 585,000 (wgt'ed) examples reached here.  /* #neg=585 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.007 seconds
Total inference time: 1.286 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:14:37
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 4.007, 'Inference time': 1.286}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.1418510649004883;  // std dev = 0,000, 584,000 (wgt'ed) examples reached here.  /* #neg=584 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.387 seconds
Total inference time: 0.856 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:14:39
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 1.387, 'Inference time': 0.856}


Starting fold 2

Target train facts examples: 546
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 150
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1,05e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360625;  // std dev = 6,32e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0.28829331077032827;  // std dev = 1,635, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.432985490087406;  // std dev = 0,224, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11689276970716943;  // std dev = 0,077, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10528857367870982;  // std dev = 0,129, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.33151817479812484;  // std dev = 0,205, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10120307295560915;  // std dev = 0,068, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09517878794553039;  // std dev = 0,108, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.19471672822404318;  // std dev = 1,263, 79,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08626487302530263;  // std dev = 0,072, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2268578026926103;  // std dev = 0,165, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.10919278767118555;  // std dev = 0,064, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08127097217600104;  // std dev = 0,098, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10461137023178106;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.16878835835340505;  // std dev = 0,637, 69,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=64 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07258685584905342;  // std dev = 3,80e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16507705190023964;  // std dev = 0,016, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12381117284467621;  // std dev = 0,058, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06944554101796156;  // std dev = 0,070, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14360044462129015;  // std dev = 0,117, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.09888309274611458;  // std dev = 0,037, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06382594264683641;  // std dev = 0,026, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.334 seconds
Total inference time: 1.622 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067918
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.451 seconds
Parameter learned model CLL: -0.067918


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 64], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 126, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [1.05e-08, 0, 64], 'true,false,true': [0.0, 7, 0], 'false': [7.88e-08, 125, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [6.32e-08, 86, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 49], 'false,false': [1.635, 10, 15]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.077, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.224, 0, 64], 'false': [0.129, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.068, 16, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.205, 0, 64], 'true,false,true,false': [0.0, 0, 0], 'false': [0.108, 113, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.263, 15, 64], 'true,false': [0.0, 0, 0], 'false': [0.072, 94, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.165, 0, 64], 'true,true,false,true': [0.064, 13, 0], 'true,false': [0.0, 0, 0], 'false': [0.098, 102, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false,true': [0.637, 5, 64], 'false,true': [3.8e-08, 118, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.058, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.016, 0, 64], 'false': [0.07, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.117, 0, 64], 'true,false': [0.0, 0, 0], 'true,true,false': [0.037, 8, 0], 'false': [0.026, 108, 0]}]]
[{'': [0.08887125570323266, -7.04903507698512e-18], 'true': [-8.881784197001252e-16, -7.93016446160826e-18], 'true,true': [-8.881784197001252e-16, nan], 'true,true,true': [-8.881784197001252e-16, nan], 'true,false,true': [-7.93016446160826e-18, nan], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.06344399079238257, 4.9737991503207014e-17], 'true': [1.1102230246251565e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.03745578999817703, 0.052102304323278704], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'false': [4.6474452193611206e-17, 0.10699208192785319]}, {'': [0.0452471326128584, 0.00014450627194942102], 'true': [0.0007819742520573381, 0.00042116595009053515], 'true,false,true': [0.00042116595009053515, nan], 'true,false': [0.00042116595009053515, nan], 'true,true': [0.0007819742520573381, nan]}, {'': [0.03054168684664177, 0.00010272084080978718], 'true': [0.000655686435523134, 0.0002875458850771558], 'true,true': [0.000655686435523134, nan], 'true,true,true': [0.000655686435523134, nan], 'true,false,true': [0.0002875458850771558, nan], 'true,false': [0.0002875458850771558, nan]}, {'': [0.020195830343873435, 5.478876713719248e-05], 'true': [0.020195830343873435, nan]}, {'': [0.016251760631613377, 9.42107656529526e-05], 'true': [0.016251760631613377, nan], 'true,true,true': [0.0004229498162354878, nan], 'true,true,false': [0.00031431836789141753, nan], 'true,true': [0.0004229498162354878, 0.00031431836789141753]}, {'': [0.007756964765756857, 1.2231270610277148e-17], 'true': [0.0, 0.0058762434343126516], 'true,false': [0.0058762434343126516, nan], 'false': [1.2231270610277148e-17, nan]}, {'': [0.007703158771087601, 4.1121063319966385e-05], 'true': [0.00026571600025616926, 0.0004743255419718123], 'true,false,true': [0.0004743255419718123, nan], 'true,false': [0.0004743255419718123, nan], 'true,true': [0.00026571600025616926, nan]}, {'': [0.0060159119724050485, 6.109360384632143e-06], 'true': [0.0060159119724050485, nan], 'true,true': [0.00021281918435128375, 0.00017552903753763338]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839136;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8,82e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.11024456011969049;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4192399959093945;  // std dev = 0,110, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10724323823236584;  // std dev = 0,076, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1019789192553422;  // std dev = 0,031, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32195281133955944;  // std dev = 0,103, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09221746444554645;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09282839492063182;  // std dev = 0,020, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2560635982588714;  // std dev = 0,092, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10751616228378329;  // std dev = 0,096, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08550300397865544;  // std dev = 0,027, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21041566115465524;  // std dev = 0,082, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08726395411348192;  // std dev = 0,057, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07915193004631692;  // std dev = 0,030, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.08146422559992976;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.1369299079289672;  // std dev = 0,097, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | | else return 0.16242517539829254;  // std dev = 0,064, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else return -0.07316391920988767;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15699917332850766;  // std dev = 0,066, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08135276800561511;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06845443375570186;  // std dev = 0,015, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.12329787945150616;  // std dev = 0,061, 38,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | else return 0.10455567999009761;  // std dev = 0,077, 33,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06424275669069412;  // std dev = 0,014, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064622
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.626 seconds
Total inference time: 1.296 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067174
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.218 seconds
Refined model CLL: -0.067174


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064622
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.629 seconds
Total inference time: 1.296 seconds
AUC ROC: 1.0
Total revision time: 6.629
Best scored revision CLL: -0.067174


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:14:49
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064273, 'Learning time': 2.334, 'Inference time': 1.622}, 'CLL': -0.064622, 'Learning time': 6.629, 'Inference time': 1.296}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 8,69e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283914;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.11231637819360622;  // std dev = 7,74e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783635;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.09269127618926103;  // std dev = 2,98e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839679;  // std dev = 4,21e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07877675473109166;  // std dev = 4,71e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333704;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420267;  // std dev = 4,59e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06419184008202625;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.373 seconds
Total inference time: 1.474 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:14:53
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 2.373, 'Inference time': 1.474}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048782;  // std dev = 0,000, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.797 seconds
Total inference time: 0.907 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:14:55
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 0.797, 'Inference time': 0.907}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004885;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 1,86e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462834;  // std dev = 4,09e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360671;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | else return 0.3125726858590517;  // std dev = 2,131, 44,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=28 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.43052662356960136;  // std dev = 0,281, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.12317569310896381;  // std dev = 0,094, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10258888679724988;  // std dev = 0,101, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.32977808984859497;  // std dev = 0,257, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10090948015262709;  // std dev = 0,089, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09462730496251481;  // std dev = 0,137, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.21722152346037255;  // std dev = 1,457, 147,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08762699529909186;  // std dev = 0,152, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22182864463663005;  // std dev = 0,203, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11726448127374932;  // std dev = 0,082, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08038535671504816;  // std dev = 0,129, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10717270533430832;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1582713483134426;  // std dev = 1,057, 142,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07277386228412654;  // std dev = 4,94e-08, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16321419793387432;  // std dev = 0,014, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12456217780376008;  // std dev = 0,101, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.069042390897696;  // std dev = 0,081, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14215716465123274;  // std dev = 0,145, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.11075906425294865;  // std dev = 0,094, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06524265604201523;  // std dev = 0,104, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064313
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.94 seconds
Total inference time: 1.51 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068218
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.957 seconds
Parameter learned model CLL: -0.068218


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [1.05e-08, 21, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [7.54e-07, 0, 129], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 235, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 129], 'true,false,true': [1.86e-09, 16, 0], 'false': [0.0, 252, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [1.67e-08, 18, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 218, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [4.09e-07, 0, 101], 'false,false': [2.131, 16, 28]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.094, 17, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.281, 0, 129], 'false': [0.101, 231, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.089, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.257, 0, 129], 'true,false,true,false': [0.0, 0, 0], 'false': [0.137, 231, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.457, 18, 129], 'true,false': [0.0, 0, 0], 'false': [0.152, 236, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.203, 0, 129], 'true,true,false,true': [0.082, 14, 0], 'true,false': [0.0, 0, 0], 'false': [0.129, 239, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 12, 0], 'true,false,true': [1.057, 13, 129], 'false,true': [4.94e-08, 225, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.101, 19, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.014, 0, 129], 'false': [0.081, 228, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.145, 0, 129], 'true,false': [0.0, 0, 0], 'true,true,false': [0.094, 20, 0], 'false': [0.104, 281, 0]}]]
[{'': [0.12040000000000456, -2.2676895822130855e-16], 'true': [4.40646657835721e-15, 5.28677630773884e-18], 'true,true': [4.40646657835721e-15, nan], 'true,true,true': [4.40646657835721e-15, nan], 'true,false,true': [5.28677630773884e-18, nan], 'true,false': [5.28677630773884e-18, nan]}, {'': [0.07008141553998022, -7.401486830834377e-17], 'true': [-1.7625866313428842e-15, 3.469446951953614e-18], 'true,false': [3.469446951953614e-18, nan]}, {'': [0.057232188447390836, 0.04255118927554386], 'true': [1.6532429990457777e-15, 1.5419764230904953e-17], 'true,true': [1.6532429990457777e-15, nan], 'true,false,true': [1.5419764230904953e-17, nan], 'true,false': [1.5419764230904953e-17, nan], 'false': [-6.315030048326579e-17, 0.1031604095723106]}, {'': [0.03214244263270849, 4.4529684563558536e-05], 'true': [0.0006108306666688444, 0.0005238775510794461], 'true,false,true': [0.0005238775510794461, nan], 'true,false': [0.0005238775510794461, nan], 'true,true': [0.0006108306666688444, nan]}, {'': [0.02570301870493917, 8.15650773903773e-05], 'true': [0.0005103414083079554, 0.0003177530295263864], 'true,true': [0.0005103414083079554, nan], 'true,true,true': [0.0005103414083079554, nan], 'true,false,true': [0.0003177530295263864, nan], 'true,false': [0.0003177530295263864, nan]}, {'': [0.014436959583092195, 9.803607663162387e-05], 'true': [0.014436959583092195, nan]}, {'': [0.010491103745389873, 6.936386626736222e-05], 'true': [0.010491103745389873, nan], 'true,true,true': [0.00032062668897174144, nan], 'true,true,false': [0.0004778264727112775, nan], 'true,true': [0.00032062668897174144, 0.0004778264727112775]}, {'': [0.012320488640113678, 1.0855514018557087e-17], 'true': [-4.625929269271485e-18, 0.007871224568211719], 'true,false': [0.007871224568211719, nan], 'false': [1.0855514018557087e-17, nan]}, {'': [0.009513819468778323, 2.9120465715679883e-05], 'true': [0.0002039431116061009, 0.0005394240948859021], 'true,false,true': [0.0005394240948859021, nan], 'true,false': [0.0005394240948859021, nan], 'true,true': [0.0002039431116061009, nan]}, {'': [0.007634243916552467, 3.870393654796468e-05], 'true': [0.007634243916552467, nan], 'true,true': [0.00016353503614780415, 0.0004398206866962115]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048843;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12544463852839174;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4,09e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.11231637819360675;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.4440859675896361;  // std dev = 0,610, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.11231637819360635;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4185711526794572;  // std dev = 0,060, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.10159632948783655;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32143893046800015;  // std dev = 0,054, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.09294589302022721;  // std dev = 0,058, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.255674327892532;  // std dev = 0,048, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08567225048256738;  // std dev = 0,077, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.210115999954441;  // std dev = 0,042, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07917422961504493;  // std dev = 0,072, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10508437905336869;  // std dev = 0,055, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.13446500675278433;  // std dev = 0,094, 71,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=59 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17790962993433812;  // std dev = 0,036, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07316890656387709;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15547970022982216;  // std dev = 0,041, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07567053223491971;  // std dev = 0,038, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06881446531977849;  // std dev = 0,072, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13614101416444246;  // std dev = 0,037, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.07054842719102464;  // std dev = 0,032, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06469680693946442;  // std dev = 0,079, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063516
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.902 seconds
Total inference time: 1.267 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065092
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.541 seconds
Refined model CLL: -0.065092


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063516
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.34 seconds
Total inference time: 1.267 seconds
AUC ROC: 1.0
Total revision time: 8.34
Best scored revision CLL: -0.065092


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:15:07
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064313, 'Learning time': 2.94, 'Inference time': 1.51}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063516, 'Learning time': 8.34, 'Inference time': 1.267}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1418510649004884;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.12544463852839186;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11231637819360671;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.10159632948783649;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.09269127618926054;  // std dev = 6,99e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.08518475138839678;  // std dev = 8,30e-08, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07877675473109144;  // std dev = 6,32e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07324622576333677;  // std dev = 1,20e-07, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420261;  // std dev = 6,66e-08, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06419184008202626;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.705 seconds
Total inference time: 1.321 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:15:11
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 2.705, 'Inference time': 1.321}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.14185106490048843;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.995 seconds
Total inference time: 0.898 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:15:13
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 0.995, 'Inference time': 0.898}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048754;  // std dev = 2,27e-07, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839133;  // std dev = 2,63e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0,000, 349,000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462833;  // std dev = 5,40e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360665;  // std dev = 0,000, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */
%   | else return 0.3210917648375502;  // std dev = 2,406, 57,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.42854261820400713;  // std dev = 0,316, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11593614423015386;  // std dev = 0,130, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.103672891558325;  // std dev = 0,178, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.328392191007437;  // std dev = 0,289, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10837004949045848;  // std dev = 0,111, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09422532353023803;  // std dev = 0,153, 330,000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.21409683816619066;  // std dev = 1,814, 223,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08664562280325559;  // std dev = 0,153, 347,000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22149227666478544;  // std dev = 0,230, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11619221186351651;  // std dev = 0,108, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07980219089964524;  // std dev = 0,138, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10807564106474873;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1529940579723543;  // std dev = 1,367, 219,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=194 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07283343493467599;  // std dev = 0,000, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16370107736520723;  // std dev = 0,013, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11601734760798031;  // std dev = 0,110, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06893080029132942;  // std dev = 0,094, 347,000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14252831717180395;  // std dev = 0,165, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.10403741664135634;  // std dev = 0,108, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06527237841253936;  // std dev = 0,120, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06442
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.911 seconds
Total inference time: 1.558 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068322
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.359 seconds
Parameter learned model CLL: -0.068322


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [3.49e-08, 35, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.09e-06, 0, 194], 'true,false,true,false': [0.0, 0, 0], 'false': [2.27e-07, 359, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 194], 'true,false,true': [2.63e-09, 36, 0], 'false': [0.0, 349, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [7.45e-09, 24, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 325, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.4e-07, 0, 157], 'false,false': [2.406, 20, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.13, 36, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.316, 0, 194], 'false': [0.178, 339, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.111, 28, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.289, 0, 194], 'true,false,true,false': [0.0, 0, 0], 'false': [0.153, 330, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.814, 29, 194], 'true,false': [0.0, 0, 0], 'false': [0.153, 347, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.23, 0, 194], 'true,true,false,true': [0.108, 24, 0], 'true,false': [0.0, 0, 0], 'false': [0.138, 378, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 21, 0], 'true,false,true': [1.367, 25, 194], 'false,true': [0.0, 329, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.11, 28, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.013, 0, 194], 'false': [0.094, 347, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.165, 0, 194], 'true,false': [0.0, 0, 0], 'true,true,false': [0.108, 34, 0], 'false': [0.12, 371, 0]}]]
[{'': [0.1294788428901107, 1.4349400652536842e-16], 'true': [6.15315358802561e-15, 3.489272363107635e-17], 'true,true': [6.15315358802561e-15, nan], 'true,true,true': [6.15315358802561e-15, nan], 'true,false,true': [3.489272363107635e-17, nan], 'true,false': [3.489272363107635e-17, nan]}, {'': [0.09424921366836715, -1.1197664890202152e-16], 'true': [-3.516087764586063e-15, 9.25185853854297e-18], 'true,false': [9.25185853854297e-18, nan]}, {'': [0.051273638969121176, 0.03899729556164699], 'true': [1.8555574628130005e-15, 2.3129646346357427e-18], 'true,true': [1.8555574628130005e-15, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true,false': [2.3129646346357427e-18, nan], 'false': [-4.099285014000578e-17, 0.10153655051119853]}, {'': [0.039647572489343426, 9.3141576703943e-05], 'true': [0.0005161463767848098, 0.00046734156100905786], 'true,false,true': [0.00046734156100905786, nan], 'true,false': [0.00046734156100905786, nan], 'true,true': [0.0005161463767848098, nan]}, {'': [0.021457548021696905, 7.118116031367643e-05], 'true': [0.00043099666278567764, 0.00044023435708739303], 'true,true': [0.00043099666278567764, nan], 'true,true,true': [0.00043099666278567764, nan], 'true,false,true': [0.00044023435708739303, nan], 'true,false': [0.00044023435708739303, nan]}, {'': [0.01475662554568871, 6.71510608250101e-05], 'true': [0.01475662554568871, nan]}, {'': [0.011466696827519548, 5.042945013424614e-05], 'true': [0.011466696827519548, nan], 'true,true,true': [0.0002717790339431502, nan], 'true,true,false': [0.00048198625937849227, nan], 'true,true': [0.0002717790339431502, 0.00048198625937849227]}, {'': [0.013224525989313774, -2.227195125387852e-17], 'true': [-1.1895246692412391e-17, 0.008528859792574941], 'true,false': [0.008528859792574941, nan], 'false': [-2.227195125387852e-17, nan]}, {'': [0.008830193499431576, 2.5230802281094268e-05], 'true': [0.00017422597415743605, 0.0004296959786282536], 'true,false,true': [0.0004296959786282536, nan], 'true,false': [0.0004296959786282536, nan], 'true,true': [0.00017422597415743605, nan]}, {'': [0.007884404080529239, 3.901904583343047e-05], 'true': [0.007884404080529239, nan], 'true,true': [0.00013970401857926808, 0.000345960915553311]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.14185106490048766;  // std dev = 1,81e-07, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839216;  // std dev = 0,000, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462833;  // std dev = 5,40e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(B) )
%   | then return -0.11231637819360651;  // std dev = 0,000, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462843;  // std dev = 1,12e-07, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.11231637819360633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360632;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.10159632948783609;  // std dev = 1,76e-07, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.09269127618926044;  // std dev = 1,97e-07, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949067;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,86e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07877675473109144;  // std dev = 6,99e-08, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333707;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527791;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333714;  // std dev = 6,14e-08, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06842697784420318;  // std dev = 0,000, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1340070300080109;  // std dev = 5,77e-08, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | | else return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.10351489614800514;  // std dev = 0,072, 130,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=110 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202578;  // std dev = 1,59e-07, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063821
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.566 seconds
Total inference time: 1.331 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06475
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.865 seconds
Refined model CLL: -0.06475


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063821
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.700999999999999 seconds
Total inference time: 1.331 seconds
AUC ROC: 1.0
Total revision time: 10.700999999999999
Best scored revision CLL: -0.06475


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:15:28
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06442, 'Learning time': 3.911, 'Inference time': 1.558}, 'CLL': -0.063821, 'Learning time': 10.700999999999999, 'Inference time': 1.331}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048793;  // std dev = 0,000, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1254446385283913;  // std dev = 2,79e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.12544463852839205;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360685;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.10159632948783656;  // std dev = 0,000, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.09269127618926044;  // std dev = 1,74e-07, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07877675473109141;  // std dev = 3,65e-08, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.07324622576333714;  // std dev = 6,32e-08, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.06842697784420321;  // std dev = 0,000, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06419184008202597;  // std dev = 1,16e-07, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.528 seconds
Total inference time: 1.308 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:15:33
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 3.528, 'Inference time': 1.308}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1418510649004877;  // std dev = 1,76e-07, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.142 seconds
Total inference time: 0.887 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:15:35
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 1.142, 'Inference time': 0.887}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048732;  // std dev = 2,49e-07, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0,000, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462832;  // std dev = 6,31e-07, 211,000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360615;  // std dev = 0,000, 412,000 (wgt'ed) examples reached here.  /* #neg=412 */
%   | else return 0.28334751214114284;  // std dev = 2,953, 81,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=48 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.4299766583184252;  // std dev = 0,421, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11300713146014532;  // std dev = 0,114, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10277667265959492;  // std dev = 0,150, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.3294315709718541;  // std dev = 0,386, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10485003267621604;  // std dev = 0,144, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09455976971311346;  // std dev = 0,186, 476,000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.20354295672330094;  // std dev = 2,338, 309,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08621232035622269;  // std dev = 0,147, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22400714047929757;  // std dev = 0,309, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11210052446497039;  // std dev = 0,128, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07973126482696759;  // std dev = 0,141, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.1045905197944999;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.14345818794110157;  // std dev = 1,852, 305,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=259 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07290545342722511;  // std dev = 1,67e-07, 431,000 (wgt'ed) examples reached here.  /* #neg=431 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16669650059757543;  // std dev = 0,015, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11768656210103624;  // std dev = 0,147, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06931705345887391;  // std dev = 0,124, 501,000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1448415783096934;  // std dev = 0,223, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.103502314960069;  // std dev = 0,125, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06461630058574847;  // std dev = 0,094, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064456
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.607 seconds
Total inference time: 1.492 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068187
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.617 seconds
Parameter learned model CLL: -0.068187


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [4.47e-08, 42, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.08e-06, 0, 259], 'true,false,true,false': [0.0, 0, 0], 'false': [2.49e-07, 477, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 259], 'true,false,true': [0.0, 37, 0], 'false': [0.0, 485, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [7.45e-09, 24, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 412, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [6.31e-07, 0, 211], 'false,false': [2.953, 33, 48]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.114, 37, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.421, 0, 259], 'false': [0.15, 465, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.144, 62, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.386, 0, 259], 'true,false,true,false': [0.0, 0, 0], 'false': [0.186, 476, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [2.338, 50, 259], 'true,false': [0.0, 0, 0], 'false': [0.147, 487, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.309, 0, 259], 'true,true,false,true': [0.128, 46, 0], 'true,false': [0.0, 0, 0], 'false': [0.141, 487, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 18, 0], 'true,false,true': [1.852, 46, 259], 'false,true': [1.67e-07, 431, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.147, 53, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.015, 0, 259], 'false': [0.124, 501, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.223, 0, 259], 'true,false': [0.0, 0, 0], 'true,true,false': [0.125, 51, 0], 'false': [0.094, 471, 0]}]]
[{'': [0.12006489994592086, 1.3034064859330979e-16], 'true': [4.499189523731908e-15, 4.7580986769649563e-17], 'true,true': [4.499189523731908e-15, nan], 'true,true,true': [4.499189523731908e-15, nan], 'true,false,true': [4.7580986769649563e-17, nan], 'true,false': [4.7580986769649563e-17, nan]}, {'': [0.07808133730087652, -1.3368458688269926e-16], 'true': [-4.499189523731908e-15, -2.100421938480026e-17], 'true,false': [-2.100421938480026e-17, nan]}, {'': [0.0408788217053471, 0.03917850018547194], 'true': [1.88580062571401e-15, 2.3129646346357427e-18], 'true,true': [1.88580062571401e-15, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true,false': [2.3129646346357427e-18, nan], 'false': [-1.7246182906798547e-17, 0.10762806595394592]}, {'': [0.03288857593059393, 4.8440840108623303e-05], 'true': [0.0006827969561833754, 0.0003515572844583796], 'true,false,true': [0.0003515572844583796, nan], 'true,false': [0.0003515572844583796, nan], 'true,true': [0.0006827969561833754, nan]}, {'': [0.02991979293115817, 7.292061984035098e-05], 'true': [0.0005741714066045701, 0.0003357620800947312], 'true,true': [0.0005741714066045701, nan], 'true,true,true': [0.0005741714066045701, nan], 'true,false,true': [0.0003357620800947312, nan], 'true,false': [0.0003357620800947312, nan]}, {'': [0.017684485658795955, 4.4231678709097466e-05], 'true': [0.017684485658795955, nan]}, {'': [0.014834618984151109, 4.070082009764717e-05], 'true': [0.014834618984151109, nan], 'true,true,true': [0.0003686767402131835, nan], 'true,true,false': [0.00035365230687113135, nan], 'true,true': [0.0003686767402131835, 0.00035365230687113135]}, {'': [0.013851463903514783, 6.491327197344303e-17], 'true': [7.709882115452476e-18, 0.011240113398494976], 'true,false': [0.011240113398494976, nan], 'false': [6.491327197344303e-17, nan]}, {'': [0.011673459658140798, 3.0751731642459044e-05], 'true': [0.00024013683773066002, 0.0004101740308685698], 'true,false,true': [0.0004101740308685698, nan], 'true,false': [0.0004101740308685698, nan], 'true,true': [0.00024013683773066002, nan]}, {'': [0.008688017672619163, 1.8797851249408876e-05], 'true': [0.008688017672619163, nan], 'true,true': [0.00019237898042358544, 0.0003043275594374971]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.14185106490048735;  // std dev = 2,42e-07, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1254446385283923;  // std dev = 0,000, 497,000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462832;  // std dev = 6,31e-07, 211,000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(B) )
%   | then return -0.11231637819360604;  // std dev = 0,000, 440,000 (wgt'ed) examples reached here.  /* #neg=440 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462843;  // std dev = 1,26e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0.4440859675896362;  // std dev = 0,862, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.11231637819360633;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41856706940331556;  // std dev = 0,085, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783624;  // std dev = 2,98e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10262461897902711;  // std dev = 0,166, 430,000 (wgt'ed) examples reached here.  /* #neg=430 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3214361243304494;  // std dev = 0,077, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09298480998573393;  // std dev = 0,101, 462,000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25567239125881924;  // std dev = 0,067, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.08576439526801641;  // std dev = 0,133, 479,000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2101146187876692;  // std dev = 0,059, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07929490448859892;  // std dev = 0,124, 466,000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.08902343187965026;  // std dev = 0,087, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17671284412483276;  // std dev = 1,26e-07, 114,000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17786980268476954;  // std dev = 0,051, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07308214872662955;  // std dev = 0,000, 415,000 (wgt'ed) examples reached here.  /* #neg=415 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15294551935871933;  // std dev = 0,046, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06909230481981367;  // std dev = 0,129, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13372263756703048;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | | else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.13451370392151077;  // std dev = 0,041, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06452795671342076;  // std dev = 0,100, 467,000 (wgt'ed) examples reached here.  /* #neg=467 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063276
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.076 seconds
Total inference time: 1.354 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064455
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.839 seconds
Refined model CLL: -0.064455


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063276
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.139000000000001 seconds
Total inference time: 1.354 seconds
AUC ROC: 1.0
Total revision time: 12.139000000000001
Best scored revision CLL: -0.064455


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:15:50
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064456, 'Learning time': 4.607, 'Inference time': 1.492}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063276, 'Learning time': 12.139000000000001, 'Inference time': 1.354}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048732;  // std dev = 2,49e-07, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.1254446385283923;  // std dev = 0,000, 495,000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.11231637819360601;  // std dev = 0,000, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.1015963294878359;  // std dev = 2,44e-07, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.09269127618926112;  // std dev = 9,66e-08, 457,000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.08518475138839678;  // std dev = 1,33e-07, 506,000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109172;  // std dev = 4,21e-08, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07324622576333721;  // std dev = 2,11e-08, 464,000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420347;  // std dev = 0,000, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.06419184008202565;  // std dev = 2,04e-07, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.549 seconds
Total inference time: 1.239 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:15:55
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 3.549, 'Inference time': 1.239}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.14185106490048727;  // std dev = 2,76e-07, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.341 seconds
Total inference time: 0.894 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:15:58
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 1.341, 'Inference time': 0.894}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004881;  // std dev = 0,000, 560,000 (wgt'ed) examples reached here.  /* #neg=560 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.1254446385283916;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0,000, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462832;  // std dev = 3,77e-07, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360565;  // std dev = 0,000, 559,000 (wgt'ed) examples reached here.  /* #neg=559 */
%   | else return 0.30676113331121796;  // std dev = 3,129, 94,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.42869500460700716;  // std dev = 0,427, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11520608130751646;  // std dev = 0,164, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10303736203344833;  // std dev = 0,194, 595,000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.3285131801192527;  // std dev = 0,390, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.09906681945191219;  // std dev = 0,106, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0938364433793213;  // std dev = 0,174, 593,000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.20894358781285138;  // std dev = 2,469, 379,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08614979073749171;  // std dev = 0,157, 565,000 (wgt'ed) examples reached here.  /* #neg=565 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22247002098223392;  // std dev = 0,311, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.1192472455242236;  // std dev = 0,166, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0803163052398597;  // std dev = 0,190, 584,000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10679791298679735;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.14931364349545323;  // std dev = 1,901, 371,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=324 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07290140664338902;  // std dev = 1,55e-07, 582,000 (wgt'ed) examples reached here.  /* #neg=582 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16485606129473623;  // std dev = 0,014, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11613547584352714;  // std dev = 0,157, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06933143715289496;  // std dev = 0,141, 599,000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14342027073311994;  // std dev = 0,224, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10954806278355217;  // std dev = 0,144, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06496063312869572;  // std dev = 0,131, 591,000 (wgt'ed) examples reached here.  /* #neg=591 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064445
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.093 seconds
Total inference time: 1.495 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068251
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.911 seconds
Parameter learned model CLL: -0.068251


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [5.37e-08, 50, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.04e-06, 0, 324], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 560, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 324], 'true,false,true': [0.0, 61, 0], 'false': [0.0, 607, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 29, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 559, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [3.77e-07, 0, 265], 'false,false': [3.129, 35, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.164, 63, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.427, 0, 324], 'false': [0.194, 595, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.106, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.39, 0, 324], 'true,false,true,false': [0.0, 0, 0], 'false': [0.174, 593, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [2.469, 55, 324], 'true,false': [0.0, 0, 0], 'false': [0.157, 565, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.311, 0, 324], 'true,true,false,true': [0.166, 57, 0], 'true,false': [0.0, 0, 0], 'false': [0.19, 584, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 23, 0], 'true,false,true': [1.901, 47, 324], 'false,true': [1.55e-07, 582, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.157, 60, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.014, 0, 324], 'false': [0.141, 599, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.224, 0, 324], 'true,false': [0.0, 0, 0], 'true,true,false': [0.144, 50, 0], 'false': [0.131, 591, 0]}]]
[{'': [0.11581686636735712, -1.7763568394002506e-16], 'true': [3.333410365294297e-15, 5.773159728050814e-17], 'true,true': [3.333410365294297e-15, nan], 'true,true,true': [3.333410365294297e-15, nan], 'true,false,true': [5.773159728050814e-17, nan], 'true,false': [5.773159728050814e-17, nan]}, {'': [0.09518807915237948, -2.399691282221096e-16], 'true': [-5.000115547941446e-15, -4.186086814160426e-17], 'true,false': [-4.186086814160426e-17, nan]}, {'': [0.039635980649245374, 0.03663974907545177], 'true': [5.362586684981888e-16, -7.656710514656252e-18], 'true,true': [5.362586684981888e-16, nan], 'true,false,true': [-7.656710514656252e-18, nan], 'true,false': [-7.656710514656252e-18, nan], 'false': [0.0, 0.10418489191046951]}, {'': [0.04085837998099373, 6.295300438817325e-05], 'true': [0.0005615492078193084, 0.000428942903268698], 'true,false,true': [0.000428942903268698, nan], 'true,false': [0.000428942903268698, nan], 'true,true': [0.0005615492078193084, nan]}, {'': [0.019690255085731082, 5.122231311914398e-05], 'true': [0.0004702690702250122, 0.00025405672792679963], 'true,true': [0.0004702690702250122, nan], 'true,true,true': [0.0004702690702250122, nan], 'true,false,true': [0.00025405672792679963, nan], 'true,false': [0.00025405672792679963, nan]}, {'': [0.016088124684136482, 4.385286163860714e-05], 'true': [0.016088124684136482, nan]}, {'': [0.015183156636742785, 6.179227672628611e-05], 'true': [0.015183156636742785, nan], 'true,true,true': [0.00029909478089943606, nan], 'true,true,false': [0.00048623830502658337, nan], 'true,true': [0.00029909478089943606, 0.00048623830502658337]}, {'': [0.012782234438626427, 4.1204153491242925e-17], 'true': [0.0, 0.009745623520281549], 'true,false': [0.009745623520281549, nan], 'false': [4.1204153491242925e-17, nan]}, {'': [0.010636684681076198, 3.341439657027886e-05], 'true': [0.00019299587561403427, 0.00041327340339277207], 'true,false,true': [0.00041327340339277207, nan], 'true,false': [0.00041327340339277207, nan], 'true,true': [0.00019299587561403427, nan]}, {'': [0.0076013104587826065, 2.897146410246902e-05], 'true': [0.0076013104587826065, nan], 'true,true': [0.00015471947984311448, 0.00041745317088386357]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.14185106490048846;  // std dev = 0,000, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.1254446385283923;  // std dev = 0,000, 590,000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462832;  // std dev = 3,77e-07, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( actor(B) )
%   | then return -0.11231637819360572;  // std dev = 0,000, 534,000 (wgt'ed) examples reached here.  /* #neg=534 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462838;  // std dev = 2,53e-07, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.11231637819360621;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11231637819360629;  // std dev = 1,29e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783621;  // std dev = 3,65e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.10159632948783531;  // std dev = 3,72e-07, 539,000 (wgt'ed) examples reached here.  /* #neg=539 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.09269127618926173;  // std dev = 0,000, 588,000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.08518475138839678;  // std dev = 1,60e-07, 619,000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07877675473109232;  // std dev = 0,000, 581,000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333689;  // std dev = 1,29e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527653;  // std dev = 2,73e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07324622576333657;  // std dev = 2,39e-07, 579,000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.0684269778442036;  // std dev = 0,000, 567,000 (wgt'ed) examples reached here.  /* #neg=567 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801178;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820253;  // std dev = 2,47e-07, 587,000 (wgt'ed) examples reached here.  /* #neg=587 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.029 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.124 seconds
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.157 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0
Total revision time: 13.157
Best scored revision CLL: -0.064225


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:16:15
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064445, 'Learning time': 5.093, 'Inference time': 1.495}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 13.157, 'Inference time': 1.431}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048802;  // std dev = 0,000, 546,000 (wgt'ed) examples reached here.  /* #neg=546 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1254446385283923;  // std dev = 0,000, 589,000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.11231637819360565;  // std dev = 0,000, 594,000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783562;  // std dev = 3,22e-07, 554,000 (wgt'ed) examples reached here.  /* #neg=554 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926178;  // std dev = 0,000, 603,000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.08518475138839678;  // std dev = 1,46e-07, 574,000 (wgt'ed) examples reached here.  /* #neg=574 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07877675473109233;  // std dev = 0,000, 574,000 (wgt'ed) examples reached here.  /* #neg=574 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527653;  // std dev = 2,73e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.0732462257633371;  // std dev = 8,16e-08, 566,000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 2,24e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420364;  // std dev = 0,000, 609,000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.06419184008202548;  // std dev = 2,40e-07, 578,000 (wgt'ed) examples reached here.  /* #neg=578 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.287 seconds
Total inference time: 1.354 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:16:21
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 4.287, 'Inference time': 1.354}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.14185106490048827;  // std dev = 0,000, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.337 seconds
Total inference time: 0.9 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:16:23
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 1.337, 'Inference time': 0.9}


Starting fold 3

Target train facts examples: 533
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 163
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462844;  // std dev = 7,30e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 4,83e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.3207118471601494;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.2468708524729558;  // std dev = 0,336, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2,11e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2111370647122699;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.10649738458168975;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109164;  // std dev = 4,47e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1475644713107266;  // std dev = 0,580, 45,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1575214445087631;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1315844619346042;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 3,73e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1377258614131082;  // std dev = 1,83e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.0981858619873336;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081825
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.567 seconds
Total inference time: 1.74 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065611
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.574 seconds
Parameter learned model CLL: -0.065611


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.46e-07, 0, 40], 'true,false,true,false': [0.0, 0, 0], 'false': [7.3e-08, 75, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 40], 'true,false,true': [0.0, 3, 0], 'false': [0.0, 74, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [6.66e-08, 82, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [7.3e-08, 0, 34], 'false,false': [0.0, 0, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 40], 'false': [4.83e-08, 66, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 40], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 82, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.336, 1, 40], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 73, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 40], 'true,true,false,true': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false': [4.47e-08, 81, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,true': [0.58, 5, 40], 'false,true': [0.0, 77, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.073, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 40], 'false': [3.73e-08, 82, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.83e-08, 0, 40], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 7, 0], 'false': [0.0, 64, 0]}]]
[{'': [0.045351473922903854, 7.105427357601002e-17], 'true': [1.5099033134902129e-15, 0.0], 'true,true': [1.5099033134902129e-15, nan], 'true,true,true': [1.5099033134902129e-15, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.04633119604965933, -2.700542492331462e-17], 'true': [-8.881784197001252e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.041986735751928114, 0.02832305887811211], 'true': [1.5673736818237505e-16, 0.0], 'true,true': [1.5673736818237505e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'false': [5.415722071342227e-17, -7.401486830834377e-17]}, {'': [0.022270669623612106, 3.532527805625498e-17], 'true': [-3.3306690738754696e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.3306690738754696e-16, nan]}, {'': [0.004066677986794706, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.002756523101393169, 6.083413833562501e-18], 'true': [0.002756523101393169, nan]}, {'': [0.016142662940524296, 2.4671622769447922e-17], 'true': [0.016142662940524296, nan], 'true,true,true': [-6.106226635438361e-17, nan], 'true,true,false': [-4.163336342344337e-18, nan], 'true,true': [-6.106226635438361e-17, -4.163336342344337e-18]}, {'': [0.007463025314754855, -4.325544251786324e-18], 'true': [nan, 0.007463025314754855], 'true,false': [0.007463025314754855, nan], 'false': [-4.325544251786324e-18, nan]}, {'': [0.0070292234756490594, 1.692413147294446e-17], 'true': [-3.3306690738754695e-17, 0.0013376171953752673], 'true,false,true': [0.0013376171953752673, nan], 'true,false': [0.0013376171953752673, nan], 'true,true': [-3.3306690738754695e-17, nan]}, {'': [0.007054420799716913, -3.469446951953614e-18], 'true': [0.007054420799716913, nan], 'true,true': [8.326672684688674e-18, -1.982541115402065e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462844;  // std dev = 7,30e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3328054984329875;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.420258957869471;  // std dev = 0,076, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783615;  // std dev = 5,67e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32262617980616476;  // std dev = 0,069, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09385552327501284;  // std dev = 0,063, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25651016816810257;  // std dev = 0,061, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08509406738699157;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21072221112022088;  // std dev = 0,054, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07924725172738449;  // std dev = 0,039, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( female(A) )
%   | then return 0.15233841228092043;  // std dev = 0,073, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else return 0.13750647559380375;  // std dev = 0,097, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.0731414821271139;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15767413270171612;  // std dev = 0,046, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09713762710109967;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0683352859831147;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13785130268072748;  // std dev = 0,041, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.07638368370223352;  // std dev = 0,000856, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06411093412059268;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075586
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.231 seconds
Total inference time: 1.311 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.069 seconds
Refined model CLL: -0.064467


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075586
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.441 seconds
Total inference time: 1.311 seconds
AUC ROC: 1.0
Total revision time: 5.441
Best scored revision CLL: -0.064467


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:16:32
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.081825, 'Learning time': 1.567, 'Inference time': 1.74}, 'CLL': -0.075586, 'Learning time': 5.441, 'Inference time': 1.311}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048768;  // std dev = 6,66e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360625;  // std dev = 5,58e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783617;  // std dev = 5,58e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,67e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109165;  // std dev = 4,28e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( female(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.18466776168787238;  // std dev = 0,081, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( female(A) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.1569524668423996;  // std dev = 0,077, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 3,07e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1558656457330645;  // std dev = 0,019, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11035387467200358;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13644063533644918;  // std dev = 0,017, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09728008120984317;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06462721167581331;  // std dev = 0,033, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094391
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.949 seconds
Total inference time: 1.409 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:16:36
{'Precision': [0.626761, 0.5], 'F1': 0.770563, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.094391, 'Learning time': 1.949, 'Inference time': 1.409}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.8126943896449667;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else return -0.14185106490048768;  // std dev = 5,58e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */


Results
   AUC ROC   = 0.91462
   AUC PR    = 0.226342
   CLL	      = -0.21951
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.758 seconds
Total inference time: 0.905 seconds
AUC ROC: 0.91462


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:16:38
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 0.226342, 'AUC ROC': 0.91462, 'Recall': 0.0, 'CLL': -0.21951, 'Learning time': 0.758, 'Inference time': 0.905}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048807;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109537;  // std dev = 2,98e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462836;  // std dev = 3,21e-07, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360615;  // std dev = 1,01e-07, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else return 0.4069924778707532;  // std dev = 0,833, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.42066473794493175;  // std dev = 0,092, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.1182034629826817;  // std dev = 0,069, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783645;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.3228871832795687;  // std dev = 0,084, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10016796956554903;  // std dev = 0,049, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09302581853302733;  // std dev = 0,054, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.23266474975807316;  // std dev = 0,828, 87,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08515868468668927;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21485779112773543;  // std dev = 0,065, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.10290839431714915;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07875437126078907;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.11723915316806231;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.16189788721915277;  // std dev = 0,652, 87,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=81 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0732268078496633;  // std dev = 1,05e-08, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1580861243427907;  // std dev = 0,006, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.10848316982280327;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06910369671405124;  // std dev = 0,064, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1381684577777078;  // std dev = 0,047, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.10975323963590437;  // std dev = 0,051, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06461020581564977;  // std dev = 0,049, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077818
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.623 seconds
Total inference time: 1.882 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06533
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.923 seconds
Parameter learned model CLL: -0.06533


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 81], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 150, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [2.98e-08, 0, 81], 'true,false,true': [0.0, 4, 0], 'false': [0.0, 162, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.01e-07, 139, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [3.21e-07, 0, 74], 'false,false': [0.833, 2, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.069, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.092, 0, 81], 'false': [0.0, 150, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.049, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.084, 0, 81], 'true,false,true,false': [0.0, 0, 0], 'false': [0.054, 161, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.828, 6, 81], 'true,false': [0.0, 0, 0], 'false': [0.0, 156, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.065, 0, 81], 'true,true,false,true': [3.73e-09, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 173, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 1, 0], 'true,false,true': [0.652, 6, 81], 'false,true': [1.05e-08, 160, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.006, 0, 81], 'false': [0.064, 161, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.047, 0, 81], 'true,false': [0.0, 0, 0], 'true,true,false': [0.051, 5, 0], 'false': [0.049, 148, 0]}]]
[{'': [0.08180785254387087, -1.1546319456101628e-16], 'true': [-7.894919286223335e-16, -6.938893903907228e-18], 'true,true': [-7.894919286223335e-16, nan], 'true,true,true': [-7.894919286223335e-16, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.032013734261415, 0.0], 'true': [7.894919286223335e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04309813141962533, 0.0200878806121393], 'true': [1.3922796849353314e-15, -1.5419764230904951e-18], 'true,true': [1.3922796849353314e-15, nan], 'true,false,true': [-1.5419764230904951e-18, nan], 'true,false': [-1.5419764230904951e-18, nan], 'false': [7.348238724137727e-17, 0.0770519108533925]}, {'': [0.021412425674155525, -5.921189464667501e-17], 'true': [0.0001049718562620095, 0.000689492207289045], 'true,false,true': [0.000689492207289045, nan], 'true,false': [0.000689492207289045, nan], 'true,true': [0.0001049718562620095, nan]}, {'': [0.011599578289849184, 1.7906972763702476e-05], 'true': [8.65574515877961e-05, 0.00039284638507559405], 'true,true': [8.65574515877961e-05, nan], 'true,true,true': [8.65574515877961e-05, nan], 'true,false,true': [0.00039284638507559405, nan], 'true,false': [0.00039284638507559405, nan]}, {'': [0.007870902168776157, -5.693451408334136e-17], 'true': [0.007870902168776157, nan]}, {'': [0.009923958720011393, -5.005629822009376e-17], 'true': [0.009923958720011393, nan], 'true,true,true': [5.294665371559079e-05, nan], 'true,true,false': [1.3877787807814458e-18, nan], 'true,true': [5.294665371559079e-05, 1.3877787807814458e-18]}, {'': [0.005700880953946209, 6.938893903907229e-19], 'true': [0.0, 0.004880982329004154], 'true,false': [0.004880982329004154, nan], 'false': [6.938893903907229e-19, nan]}, {'': [0.006425417705394751, 2.534540549413097e-05], 'true': [3.343414679991127e-05, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [3.343414679991127e-05, nan]}, {'': [0.003420952858482274, 1.647154332934086e-05], 'true': [0.003420952858482274, nan], 'true,true': [2.689817670282538e-05, 0.0005130269367493057]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048807;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283915;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462836;  // std dev = 3,21e-07, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 9,77e-08, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 4,21e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1020669052165473;  // std dev = 0,079, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10492601451143689;  // std dev = 0,067, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09265170854170166;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09271546612530003;  // std dev = 0,063, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08559854114598354;  // std dev = 0,068, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07735424612480256;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07871546873819517;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.1334304630359541;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.08686138223955528;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17709649774527747;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.07201078991930578;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07319305780666467;  // std dev = 7,52e-08, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367053;  // std dev = 9,06e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07267558830658195;  // std dev = 0,052, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06961631637866626;  // std dev = 0,099, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080109;  // std dev = 5,77e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.07022074900356012;  // std dev = 0,049, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06466757788793237;  // std dev = 0,067, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072933
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.746 seconds
Total inference time: 1.534 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063757
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.316 seconds
Refined model CLL: -0.063757


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072933
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.608 seconds
Total inference time: 1.534 seconds
AUC ROC: 1.0
Total revision time: 7.608
Best scored revision CLL: -0.063757


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:16:49
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077818, 'Learning time': 2.623, 'Inference time': 1.882}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072933, 'Learning time': 7.608, 'Inference time': 1.534}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048802;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 4,21e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360632;  // std dev = 8,30e-08, 158,000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 8,43e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.10577517192364332;  // std dev = 0,443, 151,000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09234043486748095;  // std dev = 6,99e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08488691503472799;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07852082112122194;  // std dev = 2,15e-05, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07302427729557516;  // std dev = 3,65e-08, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527716;  // std dev = 3,65e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06823266703240628;  // std dev = 5,77e-08, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367116;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080109;  // std dev = 5,58e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06402007477145895;  // std dev = 4,26e-05, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082021
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.107 seconds
Total inference time: 1.209 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:16:53
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.082021, 'Learning time': 2.107, 'Inference time': 1.209}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1418510649004884;  // std dev = 0,000, 201,000 (wgt'ed) examples reached here.  /* #neg=201 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.907 seconds
Total inference time: 0.914 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:16:55
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.188432, 'Learning time': 0.907, 'Inference time': 0.914}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 1,86e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360682;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else return 0.35506159226431744;  // std dev = 0,968, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.42034594539367237;  // std dev = 0,127, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10729386685278955;  // std dev = 0,048, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10181178258146927;  // std dev = 0,051, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.32268090445647346;  // std dev = 0,116, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.09615300084364457;  // std dev = 0,045, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09267315825953762;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.23311600065142896;  // std dev = 0,993, 131,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08534263160758102;  // std dev = 0,044, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21466663530753516;  // std dev = 0,091, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.1138673849576526;  // std dev = 0,067, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07910087802965145;  // std dev = 0,058, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.11193142455024581;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1634158125859178;  // std dev = 0,775, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07320012479435269;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15776309668324695;  // std dev = 0,007, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11585336440606413;  // std dev = 0,051, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06864767360756939;  // std dev = 0,046, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.13791917290896608;  // std dev = 0,065, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.09830088264366871;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06457394059455283;  // std dev = 0,053, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077233
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.267 seconds
Total inference time: 1.718 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065214
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.25 seconds
Parameter learned model CLL: -0.065214


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [6.85e-07, 0, 122], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 240, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 122], 'true,false,true': [1.86e-09, 14, 0], 'false': [0.0, 232, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 241, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [4.62e-07, 0, 115], 'false,false': [0.968, 3, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.048, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.127, 0, 122], 'false': [0.051, 238, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.045, 12, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.116, 0, 122], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 226, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.993, 9, 122], 'true,false': [0.0, 0, 0], 'false': [0.044, 255, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.091, 0, 122], 'true,true,false,true': [0.067, 11, 0], 'true,false': [0.0, 0, 0], 'false': [0.058, 236, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 1, 0], 'true,false,true': [0.775, 8, 122], 'false,true': [0.0, 234, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.051, 8, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.007, 0, 122], 'false': [0.046, 252, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.065, 0, 122], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 8, 0], 'false': [0.053, 215, 0]}]]
[{'': [0.09234429065744354, -1.6653345369377348e-16], 'true': [3.843919718046444e-15, -1.1895246692412391e-17], 'true,true': [3.843919718046444e-15, nan], 'true,true,true': [3.843919718046444e-15, nan], 'true,false,true': [-1.1895246692412391e-17, nan], 'true,false': [-1.1895246692412391e-17, nan]}, {'': [0.06592334360350914, -5.3596973602593766e-17], 'true': [-1.3395477805313363e-15, 3.96508223080413e-18], 'true,false': [3.96508223080413e-18, nan]}, {'': [0.030008022457979584, 0.012085950747658206], 'true': [1.853589745461131e-15, -1.5419764230904951e-18], 'true,true': [1.853589745461131e-15, nan], 'true,false,true': [-1.5419764230904951e-18, nan], 'true,false': [-1.5419764230904951e-18, nan], 'false': [-8.660660938984624e-17, 0.0936180716868719]}, {'': [0.017953491097823963, 1.1001548426669836e-05], 'true': [0.0001317944384685631, 0.00025969545620031635], 'true,false,true': [0.00025969545620031635, nan], 'true,false': [0.00025969545620031635, nan], 'true,true': [0.0001317944384685631, nan]}, {'': [0.014417904594496803, -1.1789979022568034e-17], 'true': [0.00010984651222318004, 0.00017074006329749017], 'true,true': [0.00010984651222318004, nan], 'true,true,true': [0.00010984651222318004, nan], 'true,false,true': [0.00017074006329749017, nan], 'true,false': [0.00017074006329749017, nan]}, {'': [0.0075205422045194655, 7.6245651060982745e-06], 'true': [0.0075205422045194655, nan]}, {'': [0.008284786332865364, 1.4324128537393181e-05], 'true': [0.008284786332865364, nan], 'true,true,true': [6.799736932733371e-05, nan], 'true,true,false': [0.00040876528397315847, nan], 'true,true': [6.799736932733371e-05, 0.00040876528397315847]}, {'': [0.005160718880836191, -3.416070845000482e-17], 'true': [0.0, 0.004621667855796973], 'true,false': [0.004621667855796973, nan], 'false': [-3.416070845000482e-17, nan]}, {'': [0.00438399756388656, 8.518407288777347e-06], 'true': [4.314335088076938e-05, 0.00032319301189610156], 'true,false,true': [0.00032319301189610156, nan], 'true,false': [0.00032319301189610156, nan], 'true,true': [4.314335088076938e-05, nan]}, {'': [0.0032551876581362296, 1.3272382244500483e-05], 'true': [0.0032551876581362296, nan], 'true,true': [3.480168528996554e-05, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048846;  // std dev = 0,000, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839188;  // std dev = 0,000, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.11231637819360667;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else return 0.4719060848787983;  // std dev = 0,221, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4186855670343177;  // std dev = 0,052, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.10159632948783658;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32151462726038615;  // std dev = 0,047, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926047;  // std dev = 9,42e-08, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25572480729479646;  // std dev = 0,042, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09070166090297015;  // std dev = 0,078, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08518475138839678;  // std dev = 8,56e-08, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2101509263807098;  // std dev = 0,036, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.0783773164619904;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07900938734216291;  // std dev = 0,054, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17797016138936597;  // std dev = 0,026, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.07289960333669111;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.15262702897012884;  // std dev = 0,074, 82,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=74 */
%   else return -0.07323043594641013;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15489447603863327;  // std dev = 0,031, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08878750588692366;  // std dev = 0,103, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06866992467344665;  // std dev = 0,056, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1343542523687196;  // std dev = 0,021, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.08046942430656304;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.13654786314306264;  // std dev = 0,014, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | | | else return -0.07733360472376272;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06441277381167251;  // std dev = 0,053, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074533
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.041 seconds
Total inference time: 1.477 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064238
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.658 seconds
Refined model CLL: -0.064238


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074533
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.216 seconds
Total inference time: 1.477 seconds
AUC ROC: 1.0
Total revision time: 9.216
Best scored revision CLL: -0.064238


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:17:08
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077233, 'Learning time': 3.267, 'Inference time': 1.718}, 'CLL': -0.074533, 'Learning time': 9.216, 'Inference time': 1.477}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048827;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12597940387067008;  // std dev = 0,155, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11226307238790885;  // std dev = 1,40e-07, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10155239293053718;  // std dev = 1,88e-07, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583093;  // std dev = 3,53e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2,19e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09265447385396942;  // std dev = 3,69e-06, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08515352909636552;  // std dev = 3,33e-08, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1,93e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0799078411995217;  // std dev = 0,275, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07314442944820587;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452781;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06833781749445425;  // std dev = 1,12e-05, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06411321397146354;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080111;  // std dev = 5,16e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077795
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.683 seconds
Total inference time: 1.402 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:17:12
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077795, 'Learning time': 2.683, 'Inference time': 1.402}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048846;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.193993
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.958 seconds
Total inference time: 0.885 seconds
AUC ROC: 0.985041


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:17:14
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 0.626761, 'AUC ROC': 0.985041, 'Recall': 0.0, 'CLL': -0.193993, 'Learning time': 0.958, 'Inference time': 0.885}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048793;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 1,86e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839208;  // std dev = 0,000, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462833;  // std dev = 5,40e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936067;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | else return 0.40699247787075327;  // std dev = 0,833, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.41907949493571;  // std dev = 0,094, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.1074088262110322;  // std dev = 0,078, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10178085319333491;  // std dev = 0,058, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.32179348144850123;  // std dev = 0,086, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10752459915981458;  // std dev = 0,064, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09285769735253115;  // std dev = 0,054, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.2381570003632163;  // std dev = 0,994, 172,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08582812672791659;  // std dev = 0,100, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21325962636003573;  // std dev = 0,067, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11218247402071199;  // std dev = 0,077, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07885927524238821;  // std dev = 0,047, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.11715734009821542;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1650423119452114;  // std dev = 0,820, 172,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=163 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07317316208883284;  // std dev = 1,35e-07, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15661484452103897;  // std dev = 0,004, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.10875432606457298;  // std dev = 9,13e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06836302006302829;  // std dev = 8,94e-08, 326,000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.13702414915573574;  // std dev = 0,048, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.10301689977851185;  // std dev = 0,055, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06425620984703387;  // std dev = 0,035, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077991
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.19 seconds
Total inference time: 1.606 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065201
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.961 seconds
Parameter learned model CLL: -0.065201


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.02e-06, 0, 163], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 288, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 163], 'true,false,true': [1.86e-09, 17, 0], 'false': [0.0, 341, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 316, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.4e-07, 0, 156], 'false,false': [0.833, 2, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.078, 20, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.094, 0, 163], 'false': [0.058, 315, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.064, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.086, 0, 163], 'true,false,true,false': [0.0, 0, 0], 'false': [0.054, 296, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.994, 9, 163], 'true,false': [0.0, 0, 0], 'false': [0.1, 299, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.067, 0, 163], 'true,true,false,true': [0.077, 14, 0], 'true,false': [0.0, 0, 0], 'false': [0.047, 303, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 3, 0], 'true,false,true': [0.82, 9, 163], 'false,true': [1.35e-07, 314, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [9.13e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.004, 0, 163], 'false': [8.94e-08, 326, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.048, 0, 163], 'true,false': [0.0, 0, 0], 'true,true,false': [0.055, 13, 0], 'false': [0.035, 291, 0]}]]
[{'': [0.08552469135803094, -9.25185853854297e-18], 'true': [6.3643705166242106e-15, -3.2653618371328133e-18], 'true,true': [6.3643705166242106e-15, nan], 'true,true,true': [6.3643705166242106e-15, nan], 'true,false,true': [-3.2653618371328133e-18, nan], 'true,false': [-3.2653618371328133e-18, nan]}, {'': [0.06105492364323805, -9.637126548065875e-17], 'true': [-2.7898610483832155e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.0252376445250075, 0.009395044353901172], 'true': [1.8674520619335967e-15, 0.0], 'true,true': [1.8674520619335967e-15, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'false': [-5.1997787229279483e-17, 0.07705191085339247]}, {'': [0.02706507122099632, 1.069138533766748e-05], 'true': [5.4646277685879795e-05, 0.00030406606341445985], 'true,false,true': [0.00030406606341445985, nan], 'true,false': [0.00030406606341445985, nan], 'true,true': [5.4646277685879795e-05, nan]}, {'': [0.00734430897280448, 9.764963017771327e-06], 'true': [4.510676828764442e-05, 0.0005868322739866641], 'true,true': [4.510676828764442e-05, nan], 'true,true,true': [4.510676828764442e-05, nan], 'true,false,true': [0.0005868322739866641, nan], 'true,false': [0.0005868322739866641, nan]}, {'': [0.005749021486534277, 3.317755722522842e-05], 'true': [0.005749021486534277, nan]}, {'': [0.0077738203792450805, 7.2227345537808185e-06], 'true': [0.0077738203792450805, nan], 'true,true,true': [2.7477917702809128e-05, nan], 'true,true,false': [0.0004280830265505968, nan], 'true,true': [2.7477917702809128e-05, 0.0004280830265505968]}, {'': [0.005183257510619365, 5.798617071290626e-17], 'true': [0.0, 0.00390846356007266], 'true,false': [0.00390846356007266, nan], 'false': [5.798617071290626e-17, nan]}, {'': [0.004833357765219908, 2.4520263120555605e-17], 'true': [1.7304166685802028e-05, 6.4051328343759035e-18], 'true,false,true': [6.4051328343759035e-18, nan], 'true,false': [6.4051328343759035e-18, nan], 'true,true': [1.7304166685802028e-05, nan]}, {'': [0.003971433116045112, 4.232059176261223e-06], 'true': [0.003971433116045112, nan], 'true,true': [1.3945448089023153e-05, 0.00022853580650614372]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048782;  // std dev = 1,12e-07, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839208;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462833;  // std dev = 5,40e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then return -0.11231637819360679;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.15475674778235;  // std dev = 0,731, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41873303450548494;  // std dev = 0,140, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10686677764939721;  // std dev = 0,076, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.10177060313934526;  // std dev = 0,038, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32158325346886774;  // std dev = 0,130, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09224898408063907;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09267662088458475;  // std dev = 0,000, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2557949180711548;  // std dev = 0,117, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08753395298518496;  // std dev = 0,031, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08524658607625277;  // std dev = 0,023, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2102153048828575;  // std dev = 0,104, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07825745906974278;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07883298341954521;  // std dev = 0,022, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1774437071374068;  // std dev = 0,093, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.07279555061029432;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07322737862380063;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1530151150277996;  // std dev = 0,083, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07275580809020711;  // std dev = 0,057, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06863228023698606;  // std dev = 0,043, 340,000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13422432489011957;  // std dev = 0,075, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.06579605698485091;  // std dev = 0,024, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06416396443376618;  // std dev = 7,15e-08, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069832
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.104 seconds
Total inference time: 1.407 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063702
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.887 seconds
Refined model CLL: -0.063702


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069832
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.142 seconds
Total inference time: 1.407 seconds
AUC ROC: 1.0
Total revision time: 10.142
Best scored revision CLL: -0.063702


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:17:28
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077991, 'Learning time': 3.19, 'Inference time': 1.606}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069832, 'Learning time': 10.142, 'Inference time': 1.407}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 1,15e-07, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839202;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11353813255044558;  // std dev = 0,332, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10148486871862515;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09464410405907787;  // std dev = 0,422, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.0849463506168205;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07857200574361392;  // std dev = 1,82e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07306853093701834;  // std dev = 1,38e-05, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0682714595696393;  // std dev = 0,000, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06405453902498529;  // std dev = 2,16e-05, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078269
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.18 seconds
Total inference time: 1.375 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:17:33
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.078269, 'Learning time': 3.18, 'Inference time': 1.375}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.141851064900488;  // std dev = 0,000, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.059 seconds
Total inference time: 0.928 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:17:35
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.188432, 'Learning time': 1.059, 'Inference time': 0.928}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048735;  // std dev = 3,01e-07, 401,000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0,000, 437,000 (wgt'ed) examples reached here.  /* #neg=437 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360628;  // std dev = 0,000, 386,000 (wgt'ed) examples reached here.  /* #neg=386 */
%   | else return 0.36459991819203014;  // std dev = 1,129, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.41981704792642405;  // std dev = 0,145, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10534755651795014;  // std dev = 0,051, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10173637529696036;  // std dev = 0,052, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.32231148177735736;  // std dev = 0,132, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.09237628113604;  // std dev = 6,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09267949906404979;  // std dev = 0,000, 383,000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.22821445872146098;  // std dev = 1,414, 222,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851747561585332;  // std dev = 9,88e-08, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21526110030584217;  // std dev = 0,104, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.10441334785052608;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787681719385027;  // std dev = 0,000, 387,000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.11294013342838684;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.15988768078055635;  // std dev = 1,098, 221,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=204 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07323878017637583;  // std dev = 1,83e-07, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15861874959651032;  // std dev = 0,006, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11321209688477388;  // std dev = 0,054, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842046054747786;  // std dev = 0,000, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.13858150272679282;  // std dev = 0,075, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10556855016733634;  // std dev = 0,068, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06443468074858535;  // std dev = 0,055, 384,000 (wgt'ed) examples reached here.  /* #neg=384 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077497
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.008 seconds
Total inference time: 1.728 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065309
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.594 seconds
Parameter learned model CLL: -0.065309


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.08e-06, 0, 204], 'true,false,true,false': [0.0, 0, 0], 'false': [3.01e-07, 401, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 204], 'true,false,true': [0.0, 27, 0], 'false': [0.0, 437, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [1.39e-08, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 386, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [6.19e-07, 0, 194], 'false,false': [1.129, 4, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.051, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.145, 0, 204], 'false': [0.052, 375, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [6.45e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.132, 0, 204], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 383, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.414, 18, 204], 'true,false': [0.0, 0, 0], 'false': [9.88e-08, 394, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.104, 0, 204], 'true,true,false,true': [1.49e-08, 18, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 387, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 6, 0], 'true,false,true': [1.098, 17, 204], 'false,true': [1.83e-07, 362, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.054, 16, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.006, 0, 204], 'false': [0.0, 372, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.075, 0, 204], 'true,false': [0.0, 0, 0], 'true,true,false': [0.068, 16, 0], 'false': [0.055, 384, 0]}]]
[{'': [0.07100591715976878, 2.259206952853186e-16], 'true': [5.712206307091002e-15, -3.2653618371328133e-18], 'true,true': [5.712206307091002e-15, nan], 'true,true,true': [5.712206307091002e-15, nan], 'true,false,true': [-3.2653618371328133e-18, nan], 'true,false': [-3.2653618371328133e-18, nan]}, {'': [0.07368840371541026, -1.3210891826203235e-16], 'true': [-3.692035783851501e-15, -4.11193712824132e-18], 'true,false': [-4.11193712824132e-18, nan]}, {'': [0.02969893073362155, 0.01086638332079728], 'true': [1.9777993675796604e-15, 1.295260195396016e-17], 'true,true': [1.9777993675796604e-15, nan], 'true,false,true': [1.295260195396016e-17, nan], 'true,false': [1.295260195396016e-17, nan], 'false': [-2.3009803619174227e-17, 0.09097966150327672]}, {'': [0.0166824076791071, 7.335197916399731e-06], 'true': [0.0001029353394219612, 0.00018293215500893103], 'true,false,true': [0.00018293215500893103, nan], 'true,false': [0.00018293215500893103, nan], 'true,true': [0.0001029353394219612, nan]}, {'': [0.009103801523142377, -2.6668542628071646e-17], 'true': [8.565588701348048e-05, 3.469446951953614e-18], 'true,true': [8.565588701348048e-05, nan], 'true,true,true': [8.565588701348048e-05, nan], 'true,false,true': [3.469446951953614e-18, nan], 'true,false': [3.469446951953614e-18, nan]}, {'': [0.009008676075310348, 2.4796859433252228e-17], 'true': [0.009008676075310348, nan]}, {'': [0.007662899031956488, -4.016310683398499e-17], 'true': [0.007662899031956488, nan], 'true,true,true': [5.321938690970884e-05, nan], 'true,true,false': [1.2335811384723961e-17, nan], 'true,true': [5.321938690970884e-05, 1.2335811384723961e-17]}, {'': [0.007225509032253714, 9.262081586651858e-17], 'true': [0.0, 0.005454231336013829], 'true,false': [0.005454231336013829, nan], 'false': [9.262081586651858e-17, nan]}, {'': [0.005027903847354146, -5.968940992608368e-17], 'true': [3.390384436905033e-05, 0.0001833590847715675], 'true,false,true': [0.0001833590847715675, nan], 'true,false': [0.0001833590847715675, nan], 'true,true': [3.390384436905033e-05, nan]}, {'': [0.004066330103956123, 7.848275182489756e-06], 'true': [0.004066330103956123, nan], 'true,true': [2.73242605140511e-05, 0.0002896243398700128]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.14185106490048735;  // std dev = 3,01e-07, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839224;  // std dev = 0,000, 397,000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 0,000, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3328054984329875;  // std dev = 0,771, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4185902012999418;  // std dev = 0,109, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10614899116315545;  // std dev = 0,090, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.10172789960872074;  // std dev = 0,048, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3214630039659148;  // std dev = 0,100, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09510077129060304;  // std dev = 0,043, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.0926802117872147;  // std dev = 1,03e-07, 369,000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2556976976483591;  // std dev = 0,088, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0869478138175466;  // std dev = 0,040, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.08528423104805558;  // std dev = 0,042, 383,000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21013685457102252;  // std dev = 0,078, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08383394746629737;  // std dev = 0,071, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07894946515450567;  // std dev = 0,055, 413,000 (wgt'ed) examples reached here.  /* #neg=413 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10976614752562823;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return 0.1529755591009994;  // std dev = 0,076, 89,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=81 */
%   | | else return 0.1474535204829067;  // std dev = 0,082, 140,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=123 */
%   else return -0.0732195735615522;  // std dev = 1,72e-07, 387,000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15659080119002944;  // std dev = 0,063, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08722798636814054;  // std dev = 0,054, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06847946985620555;  // std dev = 0,031, 410,000 (wgt'ed) examples reached here.  /* #neg=410 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13700579365508928;  // std dev = 0,057, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07665742678904405;  // std dev = 0,000917, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06431999072864006;  // std dev = 0,041, 383,000 (wgt'ed) examples reached here.  /* #neg=383 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073513
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.306 seconds
Total inference time: 1.339 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.972 seconds
Refined model CLL: -0.064372


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073513
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.88 seconds
Total inference time: 1.339 seconds
AUC ROC: 1.0
Total revision time: 10.88
Best scored revision CLL: -0.064372


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:17:50
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077497, 'Learning time': 4.008, 'Inference time': 1.728}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.073513, 'Learning time': 10.88, 'Inference time': 1.339}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048743;  // std dev = 2,80e-07, 415,000 (wgt'ed) examples reached here.  /* #neg=415 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.12544463852839227;  // std dev = 0,000, 405,000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.1123163781936064;  // std dev = 0,000, 390,000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.10159632948783616;  // std dev = 1,58e-07, 404,000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09269127618926079;  // std dev = 1,63e-07, 392,000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839678;  // std dev = 1,10e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109143;  // std dev = 5,96e-08, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333716;  // std dev = 5,58e-08, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420336;  // std dev = 0,000, 405,000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06419184008202622;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.06419184008202578;  // std dev = 1,64e-07, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066005
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.393 seconds
Total inference time: 1.461 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:17:55
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066005, 'Learning time': 3.393, 'Inference time': 1.461}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048754;  // std dev = 2,27e-07, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.158 seconds
Total inference time: 0.981 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:17:57
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.188432, 'Learning time': 1.158, 'Inference time': 0.981}


Starting fold 4

Target train facts examples: 590
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 106
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048793;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1,83e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462837;  // std dev = 1,19e-07, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9,88e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else return 0.30498538114382545;  // std dev = 1,293, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.4267443632401222;  // std dev = 0,180, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11282255319347882;  // std dev = 0,055, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10239110638735084;  // std dev = 0,063, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.3271581186121213;  // std dev = 0,165, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10548394909739373;  // std dev = 0,058, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09360551752616755;  // std dev = 0,071, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.23532998128545582;  // std dev = 0,771, 72,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0862125288308112;  // std dev = 0,076, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21710633365139084;  // std dev = 0,130, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.10770890547972985;  // std dev = 0,043, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08079553829982883;  // std dev = 0,099, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.106660574465868;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1316834861883867;  // std dev = 1,010, 81,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0729240656790015;  // std dev = 0,000, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16370336611656094;  // std dev = 0,013, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1256572200055997;  // std dev = 0,092, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06856800918510461;  // std dev = 0,040, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1425291055088019;  // std dev = 0,095, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10254625797133923;  // std dev = 0,053, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06440697012990361;  // std dev = 0,038, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065496
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.954 seconds
Total inference time: 1.443 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06778
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.493 seconds
Parameter learned model CLL: -0.06778


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 67], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 137, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [1.83e-08, 0, 67], 'true,false,true': [0.0, 8, 0], 'false': [7.88e-08, 117, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [9.88e-08, 131, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 57], 'false,false': [1.293, 6, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.055, 8, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.18, 0, 67], 'false': [0.063, 113, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.058, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.165, 0, 67], 'true,false,true,false': [0.0, 0, 0], 'false': [0.071, 127, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.771, 5, 67], 'true,false': [0.0, 0, 0], 'false': [0.076, 133, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.13, 0, 67], 'true,true,false,true': [0.043, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.099, 130, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [5.27e-09, 6, 0], 'true,false,true': [1.01, 14, 67], 'false,true': [0.0, 132, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.092, 16, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.013, 0, 67], 'false': [0.04, 136, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.095, 0, 67], 'true,false': [0.0, 0, 0], 'true,true,false': [0.053, 10, 0], 'false': [0.038, 111, 0]}]]
[{'': [0.08564645726807785, -5.834748742555567e-17], 'true': [-9.544603913195376e-16, -7.93016446160826e-18], 'true,true': [-9.544603913195376e-16, nan], 'true,true,true': [-9.544603913195376e-16, nan], 'true,false,true': [-7.93016446160826e-18, nan], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.06802545256557097, 5.3138879811118606e-17], 'true': [3.1815346377317917e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.05660641447508415, 0.028263522961335285], 'true': [2.49313240617579e-16, 0.0], 'true,true': [2.49313240617579e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'false': [7.457986730306395e-17, 0.10448445500766934]}, {'': [0.028215892850382243, 3.505770276009946e-05], 'true': [0.0004856815100058011, 0.0003780842960673936], 'true,false,true': [0.0003780842960673936, nan], 'true,false': [0.0003780842960673936, nan], 'true,true': [0.0004856815100058011, nan]}, {'': [0.019944831428238288, 3.9782464043761004e-05], 'true': [0.00040737127535828474, 0.00037716238003754343], 'true,true': [0.00040737127535828474, nan], 'true,true,true': [0.00040737127535828474, nan], 'true,false,true': [0.00037716238003754343, nan], 'true,false': [0.00037716238003754343, nan]}, {'': [0.008255169715590668, 4.346026582292358e-05], 'true': [0.008255169715590668, nan]}, {'': [0.01216646388256635, 7.496637876437993e-05], 'true': [0.01216646388256635, nan], 'true,true,true': [0.0002526265537547912, nan], 'true,true,false': [0.00018617461792744678, nan], 'true,true': [0.0002526265537547912, 0.00018617461792744678]}, {'': [0.015380591393759663, -2.523234146875356e-18], 'true': [4.625929269271485e-18, 0.0126021088565738], 'true,false': [0.0126021088565738, nan], 'false': [-2.523234146875356e-18, nan]}, {'': [0.01326575872936338, 1.1993814354668841e-05], 'true': [0.0001670713900138624, 0.0005275990753671606], 'true,false,true': [0.0005275990753671606, nan], 'true,false': [0.0005275990753671606, nan], 'true,true': [0.0001670713900138624, nan]}, {'': [0.006940804622086925, 1.3052132050736095e-05], 'true': [0.006940804622086925, nan], 'true,true': [0.00013416109879373352, 0.00028363358412705487]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1254446385283913;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1,19e-07, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 8,69e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10227785295700369;  // std dev = 0,079, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0945648013264426;  // std dev = 0,125, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0849858516864188;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07911392592235131;  // std dev = 0,064, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.08810015559979185;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527716;  // std dev = 2,98e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07306360992590459;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06865277502976022;  // std dev = 0,055, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801092;  // std dev = 4,94e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06506964682529348;  // std dev = 0,073, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063753
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.462 seconds
Total inference time: 1.045 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064283
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.207 seconds
Refined model CLL: -0.064283


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063753
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.116 seconds
Total inference time: 1.045 seconds
AUC ROC: 1.0
Total revision time: 6.116
Best scored revision CLL: -0.064283


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:18:06
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065496, 'Learning time': 1.954, 'Inference time': 1.443}, 'CLL': -0.063753, 'Learning time': 6.116, 'Inference time': 1.045}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839133;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.1123163781936062;  // std dev = 9,06e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783637;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926098;  // std dev = 4,08e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.08518475138839682;  // std dev = 5,96e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109165;  // std dev = 5,05e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07324622576333707;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06842697784420268;  // std dev = 4,71e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.076 seconds
Total inference time: 1.103 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:18:10
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 2.076, 'Inference time': 1.103}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048782;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.815 seconds
Total inference time: 0.741 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:18:11
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 0.815, 'Inference time': 0.741}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0,000, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462834;  // std dev = 4,38e-07, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360683;  // std dev = 0,000, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | else return 0.2533194490353817;  // std dev = 2,154, 42,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.4303440798942177;  // std dev = 0,326, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.113773776735371;  // std dev = 0,078, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10344059504923853;  // std dev = 0,125, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.3297248012662098;  // std dev = 0,300, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10815843907396723;  // std dev = 0,068, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0936195943040254;  // std dev = 0,099, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.21722618879968722;  // std dev = 1,480, 153,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08684848756713887;  // std dev = 0,124, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22186002736709898;  // std dev = 0,240, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11330163696947004;  // std dev = 0,078, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07957036516679789;  // std dev = 0,091, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10179335823103884;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.16003985731804626;  // std dev = 1,034, 147,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07289200312893482;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1630234418937664;  // std dev = 0,017, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11655399120830416;  // std dev = 0,076, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06922126757472227;  // std dev = 0,076, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14201980397365244;  // std dev = 0,172, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.1106030528619237;  // std dev = 0,083, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06524821126184749;  // std dev = 0,085, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065311
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.138 seconds
Total inference time: 1.349 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067539
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.217 seconds
Parameter learned model CLL: -0.067539


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [1.49e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [8e-07, 0, 134], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 247, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 134], 'true,false,true': [0.0, 21, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [1.39e-08, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 247, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [4.38e-07, 0, 111], 'false,false': [2.154, 19, 23]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.078, 19, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.326, 0, 134], 'false': [0.125, 230, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.068, 15, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.3, 0, 134], 'true,false,true,false': [0.0, 0, 0], 'false': [0.099, 263, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.48, 19, 134], 'true,false': [0.0, 0, 0], 'false': [0.124, 264, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.24, 0, 134], 'true,true,false,true': [0.078, 19, 0], 'true,false': [0.0, 0, 0], 'false': [0.091, 249, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 9, 0], 'true,false,true': [1.034, 13, 134], 'false,true': [0.0, 236, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.076, 18, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.017, 0, 134], 'false': [0.076, 224, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.172, 0, 134], 'true,false': [0.0, 0, 0], 'true,true,false': [0.083, 21, 0], 'false': [0.085, 234, 0]}]]
[{'': [0.12503549839750572, -1.797932023684464e-16], 'true': [4.772301956597688e-15, 9.654113257610057e-18], 'true,true': [4.772301956597688e-15, nan], 'true,true,true': [4.772301956597688e-15, nan], 'true,false,true': [9.654113257610057e-18, nan], 'true,false': [9.654113257610057e-18, nan]}, {'': [0.08361609348915536, -5.3217302006825687e-17], 'true': [-1.908920782639075e-15, -2.64338815386942e-18], 'true,false': [-2.64338815386942e-18, nan]}, {'': [0.04908806536463133, 0.03265533804046352], 'true': [1.7283471950921357e-15, 1.214306433183765e-17], 'true,true': [1.7283471950921357e-15, nan], 'true,false,true': [1.214306433183765e-17, nan], 'true,false': [1.214306433183765e-17, nan], 'false': [-8.98966011842232e-17, 0.1104392002136996]}, {'': [0.0329361339258981, 6.771709872293417e-05], 'true': [0.0007944782570460401, 0.000321295479844057], 'true,false,true': [0.000321295479844057, nan], 'true,false': [0.000321295479844057, nan], 'true,true': [0.0007944782570460401, nan]}, {'': [0.01799539776515595, 3.740680421929896e-05], 'true': [0.0006721777705068881, 0.00031062315658034374], 'true,true': [0.0006721777705068881, nan], 'true,true,true': [0.0006721777705068881, nan], 'true,false,true': [0.00031062315658034374, nan], 'true,false': [0.00031062315658034374, nan]}, {'': [0.014315110495936695, 5.86429929199476e-05], 'true': [0.014315110495936695, nan]}, {'': [0.012632290320207793, 3.315013834407992e-05], 'true': [0.012632290320207793, nan], 'true,true,true': [0.00042831126880960523, nan], 'true,true,false': [0.000319009175570364, nan], 'true,true': [0.00042831126880960523, 0.000319009175570364]}, {'': [0.010586743835599068, -9.408669700213191e-19], 'true': [0.0, 0.007279721473719865], 'true,false': [0.007279721473719865, nan], 'false': [-9.408669700213191e-19, nan]}, {'': [0.008439248524077689, 2.610332224627286e-05], 'true': [0.0002739756409217312, 0.00031783659098493725], 'true,false,true': [0.00031783659098493725, nan], 'true,false': [0.00031783659098493725, nan], 'true,true': [0.0002739756409217312, nan]}, {'': [0.007709425103241023, 3.0630153749039294e-05], 'true': [0.007709425103241023, nan], 'true,true': [0.00022035344514446508, 0.00032487831410864054]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048832;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839177;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4,38e-07, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(B) )
%   | then return -0.11231637819360689;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.4218298737583064;  // std dev = 0,597, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.1123163781936063;  // std dev = 1,49e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41849233062370517;  // std dev = 0,065, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.10249040187721423;  // std dev = 0,119, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.321386731160184;  // std dev = 0,059, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.09283976323590966;  // std dev = 0,056, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2556394955465479;  // std dev = 0,052, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08613238363100045;  // std dev = 0,115, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21009188964885683;  // std dev = 0,045, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07886102346037027;  // std dev = 0,048, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07310553347100456;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17673899763738254;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17794944382940972;  // std dev = 0,039, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07310553347100432;  // std dev = 2,11e-08, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1529333248307037;  // std dev = 0,035, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06864670351341894;  // std dev = 0,060, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1341561459757518;  // std dev = 0,032, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.06419184008202618;  // std dev = 3,73e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06406259836796312;  // std dev = 7,30e-08, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063812
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.795 seconds
Total inference time: 1.11 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064324
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.527 seconds
Refined model CLL: -0.064324


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063812
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.677 seconds
Total inference time: 1.11 seconds
AUC ROC: 1.0
Total revision time: 8.677
Best scored revision CLL: -0.064324


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:18:23
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065311, 'Learning time': 3.138, 'Inference time': 1.349}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063812, 'Learning time': 8.677, 'Inference time': 1.11}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048835;  // std dev = 0,000, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.12544463852839172;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11231637819360683;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.10159632948783652;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.09269127618926058;  // std dev = 5,37e-08, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839678;  // std dev = 8,43e-08, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109143;  // std dev = 5,96e-08, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333671;  // std dev = 1,13e-07, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06842697784420274;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202622;  // std dev = 3,73e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06419184008202623;  // std dev = 1,49e-08, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.472 seconds
Total inference time: 1.065 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:18:27
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 2.472, 'Inference time': 1.065}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.14185106490048846;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.027 seconds
Total inference time: 0.737 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:18:29
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.027, 'Inference time': 0.737}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 2,48e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0,000, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462833;  // std dev = 5,65e-07, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936063;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
%   | else return 0.28595056405124014;  // std dev = 2,473, 57,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.42872323916438027;  // std dev = 0,354, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11375083994524904;  // std dev = 0,125, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10260024185600036;  // std dev = 0,119, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.3285551585007391;  // std dev = 0,325, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.1060390135770989;  // std dev = 0,116, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09368306170335208;  // std dev = 0,129, 402,000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.22995942912432685;  // std dev = 1,517, 221,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08613670767796257;  // std dev = 0,119, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2189084206228592;  // std dev = 0,257, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11783827645761155;  // std dev = 0,109, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08070078868381468;  // std dev = 0,155, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10484949367828778;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.14799973323217624;  // std dev = 1,458, 231,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0729162163945094;  // std dev = 0,000, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16269489090282388;  // std dev = 0,015, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11433139069460158;  // std dev = 0,111, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06940469890348441;  // std dev = 0,110, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14175772856907098;  // std dev = 0,185, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09892943229279148;  // std dev = 0,066, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06515082743427666;  // std dev = 0,106, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065423
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.679 seconds
Total inference time: 1.254 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067772
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.291 seconds
Parameter learned model CLL: -0.067772


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [2.36e-08, 27, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.08e-06, 0, 202], 'true,false,true,false': [0.0, 0, 0], 'false': [2.48e-07, 378, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 202], 'true,false,true': [0.0, 26, 0], 'false': [0.0, 373, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [1.05e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 382, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.65e-07, 0, 168], 'false,false': [2.473, 23, 34]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.125, 42, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.354, 0, 202], 'false': [0.119, 339, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.116, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.325, 0, 202], 'true,false,true,false': [0.0, 0, 0], 'false': [0.129, 402, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.517, 19, 202], 'true,false': [0.0, 0, 0], 'false': [0.119, 363, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.257, 0, 202], 'true,true,false,true': [0.109, 28, 0], 'true,false': [0.0, 0, 0], 'false': [0.155, 351, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 9, 0], 'true,false,true': [1.458, 29, 202], 'false,true': [0.0, 331, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.111, 39, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.015, 0, 202], 'false': [0.11, 366, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.185, 0, 202], 'true,false': [0.0, 0, 0], 'true,true,false': [0.066, 31, 0], 'false': [0.106, 359, 0]}]]
[{'': [0.10400259339067314, 1.6212780677065777e-16], 'true': [5.768762805181012e-15, 2.05596856412066e-17], 'true,true': [5.768762805181012e-15, nan], 'true,true,true': [5.768762805181012e-15, nan], 'true,false,true': [2.05596856412066e-17, nan], 'true,false': [2.05596856412066e-17, nan]}, {'': [0.0721247299835897, -1.1191524323299165e-16], 'true': [-3.728590593592605e-15, -4.270088556250602e-18], 'true,false': [-4.270088556250602e-18, nan]}, {'': [0.04721834705842848, 0.03185262997084219], 'true': [1.9032394707859826e-15, 4.827056628805028e-18], 'true,true': [1.9032394707859826e-15, nan], 'true,false,true': [4.827056628805028e-18, nan], 'true,false': [4.827056628805028e-18, nan], 'false': [-2.3250743971207467e-17, 0.10729943581048268]}, {'': [0.04251281514077859, 4.169938177714555e-05], 'true': [0.0006208902758722694, 0.000369330311148407], 'true,false,true': [0.000369330311148407, nan], 'true,false': [0.000369330311148407, nan], 'true,true': [0.0006208902758722694, nan]}, {'': [0.02566537750320097, 4.116741592692452e-05], 'true': [0.0005222239411405284, 0.0003537424202426949], 'true,true': [0.0005222239411405284, nan], 'true,true,true': [0.0005222239411405284, nan], 'true,false,true': [0.0003537424202426949, nan], 'true,false': [0.0003537424202426949, nan]}, {'': [0.010419317876281118, 3.923909494943803e-05], 'true': [0.010419317876281118, nan]}, {'': [0.012462451108792526, 6.833759506434995e-05], 'true': [0.012462451108792526, nan], 'true,true,true': [0.00032642186895312866, nan], 'true,true,false': [0.0004219105475265871, nan], 'true,true': [0.00032642186895312866, 0.0004219105475265871]}, {'': [0.011167068437219005, -2.9516503373720175e-17], 'true': [-1.5419764230904951e-18, 0.009204671592586353], 'true,false': [0.009204671592586353, nan], 'false': [-2.9516503373720175e-17, nan]}, {'': [0.010637326657246272, 3.293807298520649e-05], 'true': [0.00021146307576487872, 0.00031347515314877184], 'true,false,true': [0.00031347515314877184, nan], 'true,false': [0.00031347515314877184, nan], 'true,true': [0.00021146307576487872, nan]}, {'': [0.006848156037294742, 3.1513140853912757e-05], 'true': [0.006848156037294742, nan], 'true,true': [0.00016995784325458884, 0.00014131382691800673]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.14185106490048754;  // std dev = 2,31e-07, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.12544463852839213;  // std dev = 0,000, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462833;  // std dev = 5,65e-07, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(B) )
%   | then return -0.11231637819360646;  // std dev = 0,000, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462844;  // std dev = 7,30e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.11231637819360633;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360635;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.10159632948783627;  // std dev = 1,19e-07, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014906;  // std dev = 4,00e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.0926912761892606;  // std dev = 1,87e-07, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,26e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109143;  // std dev = 8,16e-08, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452781;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.13639036384143813;  // std dev = 0,092, 123,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=103 */
%   else return -0.07324622576333711;  // std dev = 7,45e-08, 347,000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1554681028489806;  // std dev = 0,038, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07448227271944881;  // std dev = 0,039, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06842697784420328;  // std dev = 0,000, 404,000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13613117128055027;  // std dev = 0,034, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07206836673285197;  // std dev = 0,030, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202569;  // std dev = 1,79e-07, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064512
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.279 seconds
Total inference time: 1.105 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064621
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.047 seconds
Refined model CLL: -0.064621


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064512
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.296 seconds
Total inference time: 1.105 seconds
AUC ROC: 1.0
Total revision time: 10.296
Best scored revision CLL: -0.064621


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:18:42
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065423, 'Learning time': 3.679, 'Inference time': 1.254}, 'CLL': -0.064512, 'Learning time': 10.296, 'Inference time': 1.105}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048766;  // std dev = 1,95e-07, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1254446385283922;  // std dev = 0,000, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360667;  // std dev = 0,000, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.10159632948783646;  // std dev = 0,000, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.09269127618926053;  // std dev = 1,74e-07, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.07877675473109147;  // std dev = 2,98e-08, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07324622576333716;  // std dev = 5,58e-08, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.06842697784420325;  // std dev = 0,000, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202575;  // std dev = 1,58e-07, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1301585082586899;  // std dev = 0,393, 206,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=202 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063884
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.412 seconds
Total inference time: 1.173 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:18:47
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063884, 'Learning time': 3.412, 'Inference time': 1.173}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048785;  // std dev = 8,94e-08, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.165 seconds
Total inference time: 0.79 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:18:49
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.165, 'Inference time': 0.79}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 0,000, 527,000 (wgt'ed) examples reached here.  /* #neg=527 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0,000, 518,000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462832;  // std dev = 5,84e-07, 224,000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360589;  // std dev = 0,000, 475,000 (wgt'ed) examples reached here.  /* #neg=475 */
%   | else return 0.24537084409561996;  // std dev = 3,052, 84,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.43035085815604623;  // std dev = 0,470, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11363048497023467;  // std dev = 0,088, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1025364978848976;  // std dev = 0,139, 560,000 (wgt'ed) examples reached here.  /* #neg=560 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.32973946132796184;  // std dev = 0,432, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10480903499440195;  // std dev = 0,108, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09354968983453099;  // std dev = 0,128, 519,000 (wgt'ed) examples reached here.  /* #neg=519 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.2091212831798376;  // std dev = 2,263, 316,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08619299991366465;  // std dev = 0,134, 506,000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22327702747250913;  // std dev = 0,347, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11195135018695522;  // std dev = 0,121, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07956069703968036;  // std dev = 0,118, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10121792383318157;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1502648596789551;  // std dev = 1,725, 308,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07300285293364477;  // std dev = 0,000, 490,000 (wgt'ed) examples reached here.  /* #neg=490 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16529633754069512;  // std dev = 0,017, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1126824196682699;  // std dev = 0,090, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06887325609106665;  // std dev = 0,089, 513,000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14377262386051645;  // std dev = 0,250, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.10321258533167771;  // std dev = 0,105, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06449548152360078;  // std dev = 0,078, 515,000 (wgt'ed) examples reached here.  /* #neg=515 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065477
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.798 seconds
Total inference time: 1.427 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067622
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.993 seconds
Parameter learned model CLL: -0.067622


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [4.94e-08, 47, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.07e-06, 0, 269], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 527, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 269], 'true,false,true': [0.0, 45, 0], 'false': [0.0, 518, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 28, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 475, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.84e-07, 0, 224], 'false,false': [3.052, 39, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.088, 25, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.47, 0, 269], 'false': [0.139, 560, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.108, 42, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.432, 0, 269], 'true,false,true,false': [0.0, 0, 0], 'false': [0.128, 519, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [2.263, 47, 269], 'true,false': [0.0, 0, 0], 'false': [0.134, 506, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.347, 0, 269], 'true,true,false,true': [0.121, 50, 0], 'true,false': [0.0, 0, 0], 'false': [0.118, 488, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 18, 0], 'true,false,true': [1.725, 39, 269], 'false,true': [0.0, 490, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.09, 32, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.017, 0, 269], 'false': [0.089, 513, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.25, 0, 269], 'true,false': [0.0, 0, 0], 'true,true,false': [0.105, 47, 0], 'false': [0.078, 515, 0]}]]
[{'': [0.12661232174331435, -3.7077656989379044e-17], 'true': [4.226276495227362e-15, 5.196788625904988e-17], 'true,true': [4.226276495227362e-15, nan], 'true,true,true': [4.226276495227362e-15, nan], 'true,false,true': [5.196788625904988e-17, nan], 'true,false': [5.196788625904988e-17, nan]}, {'': [0.08764651946722757, -1.2345337107800968e-16], 'true': [-4.5432472323694135e-15, -2.960594732333751e-17], 'true,false': [-2.960594732333751e-17, nan]}, {'': [0.04402966334479687, 0.032998364367102906], 'true': [1.522591576628786e-15, -5.9476233462061954e-18], 'true,true': [1.522591576628786e-15, nan], 'true,false,true': [-5.9476233462061954e-18, nan], 'true,false': [-5.9476233462061954e-18, nan], 'false': [-1.3088945132422898e-17, 0.11088146245711947]}, {'': [0.023799927321006, 3.447274797883886e-05], 'true': [0.0008203158939373279, 0.00030774440862088473], 'true,false,true': [0.00030774440862088473, nan], 'true,false': [0.00030774440862088473, nan], 'true,true': [0.0008203158939373279, nan]}, {'': [0.022696670688826606, 3.170010102116035e-05], 'true': [0.0006952017182175818, 0.00027992642993897906], 'true,true': [0.0006952017182175818, nan], 'true,true,true': [0.0006952017182175818, nan], 'true,false,true': [0.00027992642993897906, nan], 'true,false': [0.00027992642993897906, nan]}, {'': [0.01620238090382297, 3.5748795596678704e-05], 'true': [0.01620238090382297, nan]}, {'': [0.01527658333168692, 2.876105444557747e-05], 'true': [0.01527658333168692, nan], 'true,true,true': [0.0004475530104313094, nan], 'true,true,false': [0.00029281807250319147, nan], 'true,true': [0.0004475530104313094, 0.00029281807250319147]}, {'': [0.01242965570348998, -8.609892844031826e-17], 'true': [-7.709882115452476e-18, 0.009664086769478534], 'true,false': [0.009664086769478534, nan], 'false': [-8.609892844031826e-17, nan]}, {'': [0.007627883917177244, 1.5495430844291457e-05], 'true': [0.0002902658972706283, 0.0002525295345938046], 'true,false,true': [0.0002525295345938046, nan], 'true,false': [0.0002525295345938046, nan], 'true,true': [0.0002902658972706283, nan]}, {'': [0.007957225488057051, 1.1825810861348766e-05], 'true': [0.007957225488057051, nan], 'true,true': [0.00023316894140041098, 0.0002364667361425053]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839124;  // std dev = 4,34e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.12544463852839233;  // std dev = 0,000, 512,000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462832;  // std dev = 5,84e-07, 224,000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( actor(B) )
%   | then return -0.11231637819360586;  // std dev = 0,000, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.555366436746284;  // std dev = 1,79e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360629;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360633;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783634;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.10159632948783552;  // std dev = 3,21e-07, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.09269127618926126;  // std dev = 0,000, 466,000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,32e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.08518475138839678;  // std dev = 1,33e-07, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,80e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.07877675473109202;  // std dev = 0,000, 513,000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.073246225763337;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527791;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #pos=128 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.1331767216911349;  // std dev = 0,095, 171,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=141 */
%   else return -0.07324622576333688;  // std dev = 1,65e-07, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15576874526945883;  // std dev = 0,047, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0759813083987938;  // std dev = 0,045, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.06842697784420343;  // std dev = 0,000, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13636520444471725;  // std dev = 0,042, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.071401585144582;  // std dev = 0,044, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202541;  // std dev = 2,44e-07, 501,000 (wgt'ed) examples reached here.  /* #neg=501 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064504
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.668 seconds
Total inference time: 1.088 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064591
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.09 seconds
Refined model CLL: -0.064591


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064504
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.549 seconds
Total inference time: 1.088 seconds
AUC ROC: 1.0
Total revision time: 12.549
Best scored revision CLL: -0.064591


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:19:05
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065477, 'Learning time': 4.798, 'Inference time': 1.427}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064504, 'Learning time': 12.549, 'Inference time': 1.088}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.14185106490048774;  // std dev = 0,000, 516,000 (wgt'ed) examples reached here.  /* #neg=516 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1254446385283913;  // std dev = 2,58e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.12544463852839224;  // std dev = 0,000, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.11231637819360595;  // std dev = 0,000, 480,000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.10159632948783594;  // std dev = 2,33e-07, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926139;  // std dev = 0,000, 502,000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.08518475138839678;  // std dev = 1,25e-07, 449,000 (wgt'ed) examples reached here.  /* #neg=449 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.07877675473109189;  // std dev = 0,000, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07324622576333722;  // std dev = 0,000, 496,000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.06842697784420348;  // std dev = 0,000, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.06419184008202566;  // std dev = 1,95e-07, 482,000 (wgt'ed) examples reached here.  /* #neg=482 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.844 seconds
Total inference time: 1.048 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:19:10
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 3.844, 'Inference time': 1.048}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.14185106490048746;  // std dev = 2,83e-07, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.3 seconds
Total inference time: 0.785 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:19:13
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.3, 'Inference time': 0.785}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048874;  // std dev = 0,000, 646,000 (wgt'ed) examples reached here.  /* #neg=646 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839235;  // std dev = 0,000, 620,000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462832;  // std dev = 2,92e-07, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360593;  // std dev = 0,000, 601,000 (wgt'ed) examples reached here.  /* #neg=601 */
%   | else return 0.31126734311234516;  // std dev = 3,101, 93,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.4280668133147709;  // std dev = 0,421, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11420105452060296;  // std dev = 0,156, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1031093138667682;  // std dev = 0,201, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.3280719535015854;  // std dev = 0,385, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10411110717806642;  // std dev = 0,131, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09383766539815218;  // std dev = 0,176, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.20750448969315585;  // std dev = 2,556, 395,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08624801610448962;  // std dev = 0,173, 618,000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22243680732569204;  // std dev = 0,307, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11507861522272991;  // std dev = 0,145, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07953824745390484;  // std dev = 0,149, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10728662176426033;  // std dev = 1,67e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.15064467018235073;  // std dev = 1,900, 384,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07294241937475252;  // std dev = 0,000, 651,000 (wgt'ed) examples reached here.  /* #neg=651 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16464609444022565;  // std dev = 0,013, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12030677154463355;  // std dev = 0,159, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06905235943853594;  // std dev = 0,126, 624,000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14325689823315155;  // std dev = 0,221, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10364871292153517;  // std dev = 0,143, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06482741761031818;  // std dev = 0,127, 658,000 (wgt'ed) examples reached here.  /* #neg=658 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065402
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.684 seconds
Total inference time: 1.398 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067742
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.413 seconds
Parameter learned model CLL: -0.067742


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [6.99e-08, 71, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.04e-06, 0, 337], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 646, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 337], 'true,false,true': [0.0, 56, 0], 'false': [0.0, 620, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 36, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 601, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.92e-07, 0, 278], 'false,false': [3.101, 34, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.156, 58, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.421, 0, 337], 'false': [0.201, 604, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.131, 47, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.385, 0, 337], 'true,false,true,false': [0.0, 0, 0], 'false': [0.176, 597, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [2.556, 58, 337], 'true,false': [0.0, 0, 0], 'false': [0.173, 618, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.307, 0, 337], 'true,true,false,true': [0.145, 47, 0], 'true,false': [0.0, 0, 0], 'false': [0.149, 604, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [1.67e-08, 22, 0], 'true,false,true': [1.9, 47, 337], 'false,true': [0.0, 651, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.159, 51, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.013, 0, 337], 'false': [0.126, 624, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.221, 0, 337], 'true,false': [0.0, 0, 0], 'true,true,false': [0.143, 61, 0], 'false': [0.127, 658, 0]}]]
[{'': [0.14373678392926093, -4.317152070988225e-16], 'true': [3.204821834882351e-15, 6.880255363874209e-17], 'true,true': [3.204821834882351e-15, nan], 'true,true,true': [3.204821834882351e-15, nan], 'true,false,true': [6.880255363874209e-17, nan], 'true,false': [6.880255363874209e-17, nan]}, {'': [0.0872292230007475, -2.8364407596874966e-16], 'true': [-5.144582419153248e-15, -3.766828119263924e-17], 'true,false': [-3.766828119263924e-17, nan]}, {'': [0.04525102252009717, 0.03467745307509974], 'true': [3.0670909457270513e-16, -1.0793834961633467e-17], 'true,true': [3.0670909457270513e-16, nan], 'true,false,true': [-1.0793834961633467e-17, nan], 'true,false': [-1.0793834961633467e-17, nan], 'false': [-8.275872130317307e-17, 0.103396402448874]}, {'': [0.03734655831624174, 6.68423545424594e-05], 'true': [0.0005247633810975099, 0.0004170576195231362], 'true,false,true': [0.0004170576195231362, nan], 'true,false': [0.0004170576195231362, nan], 'true,true': [0.0005247633810975099, nan]}, {'': [0.020493582835865526, 5.21722496704847e-05], 'true': [0.0004392194851770419, 0.00036679977619599204], 'true,true': [0.0004392194851770419, nan], 'true,true,true': [0.0004392194851770419, nan], 'true,false,true': [0.00036679977619599204, nan], 'true,false': [0.00036679977619599204, nan]}, {'': [0.01654548981803211, 4.8246727850076405e-05], 'true': [0.01654548981803211, nan]}, {'': [0.012536453803332922, 3.671943656890611e-05], 'true': [0.012536453803332922, nan], 'true,true,true': [0.0002796874525426961, nan], 'true,true,false': [0.0004463404904002773, nan], 'true,true': [0.0002796874525426961, 0.0004463404904002773]}, {'': [0.01230290108524364, -5.934832758364892e-17], 'true': [1.2616170734376778e-17, 0.009402759399076407], 'true,false': [0.009402759399076407, nan], 'false': [-5.934832758364892e-17, nan]}, {'': [0.009491591437012649, 2.5300123923943225e-05], 'true': [0.00018017391219238583, 0.0004947928375529441], 'true,false,true': [0.0004947928375529441, nan], 'true,false': [0.0004947928375529441, nan], 'true,true': [0.00018017391219238583, nan]}, {'': [0.008085067069003155, 2.4663641563367862e-05], 'true': [0.008085067069003155, nan], 'true,true': [0.0001444664437084416, 0.00033473083695422797]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.14185106490048882;  // std dev = 0,000, 673,000 (wgt'ed) examples reached here.  /* #neg=673 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.12544463852839233;  // std dev = 0,000, 608,000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462832;  // std dev = 2,92e-07, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(B) )
%   | then return -0.11231637819360596;  // std dev = 0,000, 603,000 (wgt'ed) examples reached here.  /* #neg=603 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462838;  // std dev = 2,53e-07, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.1123163781936062;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360628;  // std dev = 2,11e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783624;  // std dev = 3,16e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.10159632948783504;  // std dev = 4,52e-07, 632,000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.09269127618926196;  // std dev = 0,000, 677,000 (wgt'ed) examples reached here.  /* #neg=677 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839678;  // std dev = 1,58e-07, 605,000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.07877675473109262;  // std dev = 0,000, 657,000 (wgt'ed) examples reached here.  /* #neg=657 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333685;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527772;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | | else return -0.07324622576333704;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0.14306933144313586;  // std dev = 0,086, 206,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=178 */
%   else return -0.07324622576333645;  // std dev = 2,46e-07, 609,000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1550973581316904;  // std dev = 0,041, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0770084239075392;  // std dev = 0,058, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420364;  // std dev = 0,000, 621,000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13584235207773254;  // std dev = 0,037, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07033447336190085;  // std dev = 0,050, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202523;  // std dev = 2,53e-07, 612,000 (wgt'ed) examples reached here.  /* #neg=612 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064519
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.22 seconds
Total inference time: 1.142 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064609
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.369 seconds
Refined model CLL: -0.064609


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064519
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.686 seconds
Total inference time: 1.142 seconds
AUC ROC: 1.0
Total revision time: 14.686
Best scored revision CLL: -0.064609


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:19:31
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065402, 'Learning time': 5.684, 'Inference time': 1.398}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064519, 'Learning time': 14.686, 'Inference time': 1.142}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048835;  // std dev = 0,000, 600,000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.1254446385283923;  // std dev = 0,000, 590,000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.11231637819360582;  // std dev = 0,000, 609,000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783526;  // std dev = 4,15e-07, 647,000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926179;  // std dev = 0,000, 608,000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 1,49e-07, 616,000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07877675473109251;  // std dev = 0,000, 617,000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07324622576333686;  // std dev = 1,70e-07, 616,000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.06842697784420368;  // std dev = 0,000, 641,000 (wgt'ed) examples reached here.  /* #neg=641 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.06419184008202544;  // std dev = 2,40e-07, 637,000 (wgt'ed) examples reached here.  /* #neg=637 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.445 seconds
Total inference time: 1.073 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:19:36
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 4.445, 'Inference time': 1.073}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1418510649004886;  // std dev = 0,000, 626,000 (wgt'ed) examples reached here.  /* #neg=626 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.394 seconds
Total inference time: 0.759 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:19:39
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.394, 'Inference time': 0.759}


Starting fold 5

Target train facts examples: 578
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 118
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1,83e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 1,86e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 9,88e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return 0.2518742481372433;  // std dev = 1,559, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.43096662324892043;  // std dev = 0,236, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10927389749337013;  // std dev = 0,049, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10256409016080281;  // std dev = 0,066, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.33016205909309826;  // std dev = 0,217, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10381137042209261;  // std dev = 0,064, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09377308235704433;  // std dev = 0,070, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.20725934222468242;  // std dev = 1,163, 79,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08552439043509608;  // std dev = 0,046, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2238601051591337;  // std dev = 0,174, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11198536400732663;  // std dev = 0,065, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07978652812241145;  // std dev = 0,067, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10182863334927394;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1577187047752577;  // std dev = 0,761, 75,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07301583332845477;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1646550652751034;  // std dev = 0,017, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11249007028961273;  // std dev = 0,051, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06865791305864019;  // std dev = 0,035, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1432791112373069;  // std dev = 0,125, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10121230072566112;  // std dev = 0,033, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06452088215798418;  // std dev = 0,040, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065542
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.33 seconds
Total inference time: 1.26 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067814
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.881 seconds
Parameter learned model CLL: -0.067814


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 67], 'true,false,true,false': [0.0, 0, 0], 'false': [8.69e-08, 111, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [1.83e-08, 0, 67], 'true,false,true': [1.86e-09, 12, 0], 'false': [0.0, 127, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [9.88e-08, 137, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.03e-07, 0, 55], 'false,false': [1.559, 10, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.049, 10, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.236, 0, 67], 'false': [0.066, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.064, 15, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.217, 0, 67], 'true,false,true,false': [0.0, 0, 0], 'false': [0.07, 122, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.163, 12, 67], 'true,false': [0.0, 0, 0], 'false': [0.046, 132, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.174, 0, 67], 'true,true,false,true': [0.065, 14, 0], 'true,false': [0.0, 0, 0], 'false': [0.067, 130, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 3, 0], 'true,false,true': [0.761, 8, 67], 'false,true': [0.0, 126, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.051, 11, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.017, 0, 67], 'false': [0.035, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.125, 0, 67], 'true,false': [0.0, 0, 0], 'true,true,false': [0.033, 6, 0], 'false': [0.04, 131, 0]}]]
[{'': [0.13609374999999896, 6.80136627698294e-17], 'true': [-9.544603913195376e-16, -1.2810265668751807e-17], 'true,true': [-9.544603913195376e-16, nan], 'true,true,true': [-9.544603913195376e-16, nan], 'true,false,true': [-1.2810265668751807e-17, nan], 'true,false': [-1.2810265668751807e-17, nan]}, {'': [0.09196679314565047, -3.496765431890257e-18], 'true': [3.1815346377317917e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.05387479711332965, 0.031106040194996864], 'true': [1.9378438248002731e-16, -1.5419764230904951e-18], 'true,true': [1.9378438248002731e-16, nan], 'true,false,true': [-1.5419764230904951e-18, nan], 'true,false': [-1.5419764230904951e-18, nan], 'false': [7.131359574234582e-17, 0.11052901025604692]}, {'': [0.03373369515607153, 3.621368117874709e-05], 'true': [0.0008295111952116421, 0.00023578020191838966], 'true,false,true': [0.00023578020191838966, nan], 'true,false': [0.00023578020191838966, nan], 'true,true': [0.0008295111952116421, nan]}, {'': [0.028773137788494423, 3.991192841219952e-05], 'true': [0.0007017740576634519, 0.00027677203595994905], 'true,true': [0.0007017740576634519, nan], 'true,true,true': [0.0007017740576634519, nan], 'true,false,true': [0.00027677203595994905, nan], 'true,false': [0.00027677203595994905, nan]}, {'': [0.017116541824713317, 1.6199507854115232e-05], 'true': [0.017116541824713317, nan]}, {'': [0.016550548672892528, 3.498639670974464e-05], 'true': [0.016550548672892528, nan], 'true,true,true': [0.00045163985238889616, nan], 'true,true,false': [0.00029809198605918504, nan], 'true,true': [0.00045163985238889616, 0.00029809198605918504]}, {'': [0.009915291745820341, -1.938484646170908e-17], 'true': [0.0, 0.0077209487722866045], 'true,false': [0.0077209487722866045, nan], 'false': [-1.938484646170908e-17, nan]}, {'': [0.009586190088734136, 1.0481928875255272e-05], 'true': [0.0002897198449543379, 0.0002328176047922883], 'true,false,true': [0.0002328176047922883, nan], 'true,false': [0.0002328176047922883, nan], 'true,true': [0.0002897198449543379, nan]}, {'': [0.004737913518910861, 1.2119007120997602e-05], 'true': [0.004737913518910861, nan], 'true,true': [0.00023270432361701112, 0.00018313238575244986]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048793;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839108;  // std dev = 8,02e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8,82e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.10159632948783635;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09269127618926086;  // std dev = 7,15e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08574598333518756;  // std dev = 0,068, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07922908293807089;  // std dev = 0,064, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.13340386553516315;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1441566657046703;  // std dev = 0,085, 38,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   else return -0.07317745381997949;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15486757005057536;  // std dev = 0,018, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.0801400865703498;  // std dev = 0,023, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0691008994292214;  // std dev = 0,071, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1356634147656497;  // std dev = 0,016, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07534216022610009;  // std dev = 0,018, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06471370073272292;  // std dev = 0,067, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063932
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.471 seconds
Total inference time: 1.039 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064914
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.333 seconds
Refined model CLL: -0.064914


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063932
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.015000000000001 seconds
Total inference time: 1.039 seconds
AUC ROC: 1.0
Total revision time: 7.015000000000001
Best scored revision CLL: -0.064914


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:19:49
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065542, 'Learning time': 2.33, 'Inference time': 1.26}, 'CLL': -0.063932, 'Learning time': 7.015000000000001, 'Inference time': 1.039}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048793;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.12544463852839116;  // std dev = 7,30e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360621;  // std dev = 8,94e-08, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10159632948783638;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.09269127618926098;  // std dev = 4,47e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839679;  // std dev = 4,59e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07877675473109164;  // std dev = 5,05e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.073246225763337;  // std dev = 3,16e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06842697784420265;  // std dev = 5,05e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06419184008202626;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.138 seconds
Total inference time: 1.201 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:19:52
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 2.138, 'Inference time': 1.201}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.79 seconds
Total inference time: 0.746 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:19:54
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 0.79, 'Inference time': 0.746}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462834;  // std dev = 4,46e-07, 114,000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360686;  // std dev = 0,000, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
%   | else return 0.31844672821922665;  // std dev = 1,779, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.42624307695579877;  // std dev = 0,241, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10858574527220229;  // std dev = 0,074, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10270576056472006;  // std dev = 0,113, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.32679793737048324;  // std dev = 0,221, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11048965283436765;  // std dev = 0,079, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09341108055074518;  // std dev = 0,085, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.20429981427996619;  // std dev = 1,623, 159,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08591320186641795;  // std dev = 0,089, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22218117758576322;  // std dev = 0,176, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11828744783064328;  // std dev = 0,108, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07967337344692312;  // std dev = 0,098, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10807540737812606;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1505145239957671;  // std dev = 1,185, 153,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07301208874684316;  // std dev = 9,66e-08, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16448315298704091;  // std dev = 0,012, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12837823539182652;  // std dev = 0,091, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06932822158631026;  // std dev = 0,083, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14312725257685024;  // std dev = 0,127, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10768522075120432;  // std dev = 0,090, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0646051901318282;  // std dev = 0,068, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065475
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.922 seconds
Total inference time: 1.434 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067577
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.268 seconds
Parameter learned model CLL: -0.067577


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [8e-07, 0, 134], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 253, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 134], 'true,false,true': [0.0, 22, 0], 'false': [0.0, 240, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [1.67e-08, 18, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 254, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [4.46e-07, 0, 114], 'false,false': [1.779, 11, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.074, 20, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.241, 0, 134], 'false': [0.113, 252, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.079, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.221, 0, 134], 'true,false,true,false': [0.0, 0, 0], 'false': [0.085, 212, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.623, 25, 134], 'true,false': [0.0, 0, 0], 'false': [0.089, 230, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.176, 0, 134], 'true,true,false,true': [0.108, 23, 0], 'true,false': [0.0, 0, 0], 'false': [0.098, 242, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [3.73e-09, 6, 0], 'true,false,true': [1.185, 19, 134], 'false,true': [9.66e-08, 242, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.091, 15, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.012, 0, 134], 'false': [0.083, 216, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.127, 0, 134], 'true,false': [0.0, 0, 0], 'true,true,false': [0.09, 19, 0], 'false': [0.068, 256, 0]}]]
[{'': [0.1043975069252125, -1.3691287892610626e-16], 'true': [4.772301956597688e-15, -3.0839528461809902e-18], 'true,true': [4.772301956597688e-15, nan], 'true,true,true': [4.772301956597688e-15, nan], 'true,false,true': [-3.0839528461809902e-18, nan], 'true,false': [-3.0839528461809902e-18, nan]}, {'': [0.08647836286765649, -5.736152293896643e-17], 'true': [-1.908920782639075e-15, -2.523234146875356e-18], 'true,false': [-2.523234146875356e-18, nan]}, {'': [0.052501279871623736, 0.02908884960591073], 'true': [1.745192684323053e-15, 1.5419764230904953e-17], 'true,true': [1.745192684323053e-15, nan], 'true,false,true': [1.5419764230904953e-17, nan], 'true,false': [1.5419764230904953e-17, nan], 'false': [-9.616104937698206e-17, 0.1020562696155381]}, {'': [0.032737744737559936, 5.046432988847683e-05], 'true': [0.00043436305365936363, 0.0002768276203715461], 'true,false,true': [0.0002768276203715461, nan], 'true,false': [0.0002768276203715461, nan], 'true,true': [0.00043436305365936363, nan]}, {'': [0.016749026647526203, 3.437587758291358e-05], 'true': [0.00036342205365767495, 0.00045065374362629473], 'true,true': [0.00036342205365767495, nan], 'true,true,true': [0.00036342205365767495, nan], 'true,false,true': [0.00045065374362629473, nan], 'true,false': [0.00045065374362629473, nan]}, {'': [0.016562403430239618, 3.413034649818313e-05], 'true': [0.016562403430239618, nan]}, {'': [0.014766354779034345, 3.9305247359091927e-05], 'true': [0.014766354779034345, nan], 'true,true,true': [0.0002323171543141445, nan], 'true,true,false': [0.0005057843854674087, nan], 'true,true': [0.0002323171543141445, 0.0005057843854674087]}, {'': [0.011263368162092963, 3.853666697045998e-17], 'true': [2.3129646346357427e-18, 0.009181719719314725], 'true,false': [0.009181719719314725, nan], 'false': [3.853666697045998e-17, nan]}, {'': [0.007955692905672353, 3.1817215320919356e-05], 'true': [0.00014982220225078839, 0.0005546866104097159], 'true,false,true': [0.0005546866104097159, nan], 'true,false': [0.0005546866104097159, nan], 'true,true': [0.00014982220225078839, nan]}, {'': [0.007000097258734788, 1.8176637144892357e-05], 'true': [0.007000097258734788, nan], 'true,true': [0.0001201875755967871, 0.00042663634700975056]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.1418510649004884;  // std dev = 0,000, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839186;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4,46e-07, 114,000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(B) )
%   | then return -0.11231637819360678;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.11231637819360629;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1123163781936063;  // std dev = 9,13e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158309;  // std dev = 4,04e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.10159632948783656;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601499;  // std dev = 2,27e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926096;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926049;  // std dev = 9,19e-08, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949006;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.08518475138839678;  // std dev = 9,19e-08, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.07877675473109144;  // std dev = 6,14e-08, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333702;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527797;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07324622576333661;  // std dev = 1,31e-07, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.06842697784420275;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1340070300080113;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | | else return -0.06419184008202618;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.13400703000801129;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202615;  // std dev = 6,83e-08, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.886 seconds
Total inference time: 1.186 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.384 seconds
Refined model CLL: -0.064077


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.459999999999999 seconds
Total inference time: 1.186 seconds
AUC ROC: 1.0
Total revision time: 8.459999999999999
Best scored revision CLL: -0.064077


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:20:06
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065475, 'Learning time': 2.922, 'Inference time': 1.434}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 8.459999999999999, 'Inference time': 1.186}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.14185106490048838;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12544463852839177;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360685;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783656;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else return 0.40367065312774664;  // std dev = 0,084, 75,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=73 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3223588236953288;  // std dev = 0,017, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.09288867669336101;  // std dev = 0,052, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2562963371548855;  // std dev = 0,015, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08611310064196238;  // std dev = 0,107, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21055180685508273;  // std dev = 0,013, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.0788879488489038;  // std dev = 0,045, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17767893525918332;  // std dev = 0,012, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07404110795027524;  // std dev = 0,094, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15318570280852134;  // std dev = 0,010, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06846508972125882;  // std dev = 0,040, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13435198089562475;  // std dev = 0,009, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.06422588463533707;  // std dev = 0,038, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06366
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.907 seconds
Total inference time: 1.116 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:20:10
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06366, 'Learning time': 2.907, 'Inference time': 1.116}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048832;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.022 seconds
Total inference time: 0.811 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:20:12
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 1.022, 'Inference time': 0.811}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 2,48e-07, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0,000, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462833;  // std dev = 5,72e-07, 171,000 (wgt'ed) examples reached here.  /* #pos=171 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
%   | else return 0.2640139356816047;  // std dev = 2,456, 55,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=31 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.4285751896333802;  // std dev = 0,369, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11056386588898773;  // std dev = 0,105, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10297799435556916;  // std dev = 0,141, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.3284753264495877;  // std dev = 0,339, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10077665274360693;  // std dev = 0,084, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09390943712866333;  // std dev = 0,140, 414,000 (wgt'ed) examples reached here.  /* #neg=414 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.23356909082979643;  // std dev = 1,413, 219,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08544332375445961;  // std dev = 0,076, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21826452164542695;  // std dev = 0,269, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11148776392870251;  // std dev = 0,089, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07986068044963732;  // std dev = 0,121, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10289413765012247;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1398961308020938;  // std dev = 1,610, 238,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07297906583930919;  // std dev = 3,65e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1633805539646336;  // std dev = 0,015, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12233874765916782;  // std dev = 0,112, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06911858860773486;  // std dev = 0,094, 387,000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14228967857093264;  // std dev = 0,195, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.10849265775616239;  // std dev = 0,110, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0649822539514617;  // std dev = 0,094, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065463
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.003 seconds
Total inference time: 1.257 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067761
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.455 seconds
Parameter learned model CLL: -0.067761


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [3.33e-08, 34, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.08e-06, 0, 202], 'true,false,true,false': [0.0, 0, 0], 'false': [2.48e-07, 374, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 202], 'true,false,true': [0.0, 24, 0], 'false': [0.0, 354, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 26, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 364, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.72e-07, 0, 171], 'false,false': [2.456, 24, 31]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.105, 40, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.369, 0, 202], 'false': [0.141, 375, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.084, 29, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.339, 0, 202], 'true,false,true,false': [0.0, 0, 0], 'false': [0.14, 414, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.413, 17, 202], 'true,false': [0.0, 0, 0], 'false': [0.076, 371, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.269, 0, 202], 'true,true,false,true': [0.089, 31, 0], 'true,false': [0.0, 0, 0], 'false': [0.121, 371, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [9.13e-09, 15, 0], 'true,false,true': [1.61, 36, 202], 'false,true': [3.65e-08, 350, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.112, 31, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.015, 0, 202], 'false': [0.094, 387, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.195, 0, 202], 'true,false': [0.0, 0, 0], 'true,true,false': [0.11, 37, 0], 'false': [0.094, 367, 0]}]]
[{'': [0.12331226659006576, 1.6386179400884662e-16], 'true': [5.768762805181012e-15, 3.2653618371328135e-17], 'true,true': [5.768762805181012e-15, nan], 'true,true,true': [5.768762805181012e-15, nan], 'true,false,true': [3.2653618371328135e-17, nan], 'true,false': [3.2653618371328135e-17, nan]}, {'': [0.06776023597053416, -1.154130149892818e-16], 'true': [-3.728590593592605e-15, -4.625929269271485e-18], 'true,false': [-4.625929269271485e-18, nan]}, {'': [0.051071357615851486, 0.030542583523396432], 'true': [1.911401511401439e-15, -2.135044278125301e-18], 'true,true': [1.911401511401439e-15, nan], 'true,false,true': [-2.135044278125301e-18, nan], 'true,false': [-2.135044278125301e-18, nan], 'false': [-2.928060724286127e-17, 0.109644778173999]}, {'': [0.04071266487604476, 5.315824661815919e-05], 'true': [0.0006749486703980107, 0.00027699088692058755], 'true,false,true': [0.00027699088692058755, nan], 'true,false': [0.00027699088692058755, nan], 'true,true': [0.0006749486703980107, nan]}, {'': [0.020757431654694257, 4.735698812039523e-05], 'true': [0.0005703610612731142, 0.0002454223004091333], 'true,true': [0.0005703610612731142, nan], 'true,true,true': [0.0005703610612731142, nan], 'true,false,true': [0.0002454223004091333, nan], 'true,false': [0.0002454223004091333, nan]}, {'': [0.009116089582542217, 1.555343443577515e-05], 'true': [0.009116089582542217, nan]}, {'': [0.012885991473137128, 3.9562812597170316e-05], 'true': [0.012885991473137128, nan], 'true,true,true': [0.00035709882587086196, nan], 'true,true,false': [0.0002564000277032007, nan], 'true,true': [0.00035709882587086196, 0.0002564000277032007]}, {'': [0.013528829997228565, 3.8064789415719655e-18], 'true': [5.551115123125783e-18, 0.010886599141194676], 'true,false': [0.010886599141194676, nan], 'false': [3.8064789415719655e-18, nan]}, {'': [0.009673652731040285, 2.2821529433275314e-05], 'true': [0.0002344348442340238, 0.00040667323168041755], 'true,false,true': [0.00040667323168041755, nan], 'true,false': [0.00040667323168041755, nan], 'true,true': [0.0002344348442340238, nan]}, {'': [0.008438652163083813, 2.428906536655012e-05], 'true': [0.008438652163083813, nan], 'true,true': [0.00018853586436596068, 0.00032443180262729386]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048757;  // std dev = 2,21e-07, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.12544463852839216;  // std dev = 0,000, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462833;  // std dev = 5,72e-07, 171,000 (wgt'ed) examples reached here.  /* #pos=171 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( actor(B) )
%   | then return -0.11231637819360611;  // std dev = 0,000, 421,000 (wgt'ed) examples reached here.  /* #neg=421 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.11231637819360632;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360636;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.10159632948783628;  // std dev = 1,15e-07, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014906;  // std dev = 4,00e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926046;  // std dev = 1,95e-07, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,26e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.08518475138839678;  // std dev = 1,13e-07, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07877675473109144;  // std dev = 7,60e-08, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333706;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333766;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06842697784420325;  // std dev = 0,000, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13400703000801126;  // std dev = 7,30e-08, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | | else return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.11749045750050807;  // std dev = 0,055, 120,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=110 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202576;  // std dev = 1,61e-07, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063989
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.634 seconds
Total inference time: 1.113 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064666
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.905 seconds
Refined model CLL: -0.064666


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063989
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.997 seconds
Total inference time: 1.113 seconds
AUC ROC: 1.0
Total revision time: 10.997
Best scored revision CLL: -0.064666


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:20:26
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065463, 'Learning time': 4.003, 'Inference time': 1.257}, 'CLL': -0.063989, 'Learning time': 10.997, 'Inference time': 1.113}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1418510649004877;  // std dev = 1,69e-07, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.12544463852839216;  // std dev = 0,000, 406,000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.11231637819360676;  // std dev = 0,000, 349,000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.10159632948783655;  // std dev = 0,000, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926062;  // std dev = 1,86e-07, 390,000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2,04e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 421,000 (wgt'ed) examples reached here.  /* #neg=421 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07877675473109147;  // std dev = 3,65e-08, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07324622576333713;  // std dev = 6,14e-08, 369,000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06842697784420325;  // std dev = 0,000, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202564;  // std dev = 1,83e-07, 384,000 (wgt'ed) examples reached here.  /* #neg=384 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1311065587384007;  // std dev = 0,341, 205,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=202 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063745
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.279 seconds
Total inference time: 1.131 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:20:31
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063745, 'Learning time': 3.279, 'Inference time': 1.131}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1418510649004878;  // std dev = 1,19e-07, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.152 seconds
Total inference time: 0.823 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:20:33
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 1.152, 'Inference time': 0.823}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 4,21e-08, 509,000 (wgt'ed) examples reached here.  /* #neg=509 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0,000, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462832;  // std dev = 5,59e-07, 228,000 (wgt'ed) examples reached here.  /* #pos=228 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360597;  // std dev = 0,000, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
%   | else return 0.29626564288901264;  // std dev = 2,663, 67,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.4272717087732561;  // std dev = 0,377, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11283170080391394;  // std dev = 0,119, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10303298352497334;  // std dev = 0,172, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.32753327030672474;  // std dev = 0,346, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.10485784130032051;  // std dev = 0,128, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09379256097526681;  // std dev = 0,149, 464,000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.2193195589765588;  // std dev = 1,990, 304,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08573385324644243;  // std dev = 0,118, 504,000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22007847773966832;  // std dev = 0,275, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.1118694551572044;  // std dev = 0,133, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07971698058484025;  // std dev = 0,138, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10590150874814881;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.14461716532857705;  // std dev = 1,791, 312,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07297331941276346;  // std dev = 0,000, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16391767593932624;  // std dev = 0,014, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11776620202548249;  // std dev = 0,137, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06900797829266117;  // std dev = 0,107, 514,000 (wgt'ed) examples reached here.  /* #neg=514 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14269640972845415;  // std dev = 0,199, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.1079409466401162;  // std dev = 0,116, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06467426236003251;  // std dev = 0,098, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065511
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.762 seconds
Total inference time: 1.315 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067768
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.02 seconds
Parameter learned model CLL: -0.067768


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [5.05e-08, 48, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.07e-06, 0, 269], 'true,false,true,false': [0.0, 0, 0], 'false': [4.21e-08, 509, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 269], 'true,false,true': [0.0, 43, 0], 'false': [0.0, 494, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 452, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.59e-07, 0, 228], 'false,false': [2.663, 26, 41]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.119, 39, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.377, 0, 269], 'false': [0.172, 488, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.128, 46, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.346, 0, 269], 'true,false,true,false': [0.0, 0, 0], 'false': [0.149, 464, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.99, 35, 269], 'true,false': [0.0, 0, 0], 'false': [0.118, 504, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.275, 0, 269], 'true,true,false,true': [0.133, 52, 0], 'true,false': [0.0, 0, 0], 'false': [0.138, 483, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 14, 0], 'true,false,true': [1.791, 43, 269], 'false,true': [0.0, 488, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.137, 45, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.014, 0, 269], 'false': [0.107, 514, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.199, 0, 269], 'true,false': [0.0, 0, 0], 'true,true,false': [0.116, 36, 0], 'false': [0.098, 500, 0]}]]
[{'': [0.12849167570580255, 3.4898955587431244e-18], 'true': [4.226276495227362e-15, 5.3198186596622086e-17], 'true,true': [4.226276495227362e-15, nan], 'true,true,true': [4.226276495227362e-15, nan], 'true,false,true': [5.3198186596622086e-17, nan], 'true,false': [5.3198186596622086e-17, nan]}, {'': [0.08482829234143342, -1.3124903772896588e-16], 'true': [-4.5432472323694135e-15, -2.840105411831796e-17], 'true,false': [-2.840105411831796e-17, nan]}, {'': [0.039698510299904594, 0.03243526379131314], 'true': [1.3712228233966845e-15, 0.0], 'true,true': [1.3712228233966845e-15, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'false': [-1.5719972030090712e-17, 0.1058639260183158]}, {'': [0.03276919188919074, 6.0887257261726856e-05], 'true': [0.0005295216362964073, 0.00036607734896941914], 'true,false,true': [0.00036607734896941914, nan], 'true,false': [0.00036607734896941914, nan], 'true,true': [0.0005295216362964073, nan]}, {'': [0.023747080384939598, 4.8001253466405535e-05], 'true': [0.00044480695751111354, 0.0003550474423195671], 'true,true': [0.00044480695751111354, nan], 'true,true,true': [0.00044480695751111354, nan], 'true,false,true': [0.0003550474423195671, nan], 'true,false': [0.0003550474423195671, nan]}, {'': [0.01302101900348307, 2.7541371374236894e-05], 'true': [0.01302101900348307, nan]}, {'': [0.01524921962942176, 3.954360139659764e-05], 'true': [0.01524921962942176, nan], 'true,true,true': [0.0002809756503913918, nan], 'true,true,false': [0.0003416681283461244, nan], 'true,true': [0.0002809756503913918, 0.0003416681283461244]}, {'': [0.012419028846813998, -1.0920226471722851e-17], 'true': [0.0, 0.010281095155427624], 'true,false': [0.010281095155427624, nan], 'false': [-1.0920226471722851e-17, nan]}, {'': [0.0099577610048319, 2.236488923775041e-05], 'true': [0.0001828717686802124, 0.0004152839497154516], 'true,false,true': [0.0004152839497154516, nan], 'true,false': [0.0004152839497154516, nan], 'true,true': [0.0001828717686802124, nan]}, {'': [0.0067134085464273414, 1.913105164152551e-05], 'true': [0.0067134085464273414, nan], 'true,true': [0.0001468576008968214, 0.0003757636397373029]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048746;  // std dev = 1,93e-07, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.12544463852839227;  // std dev = 0,000, 453,000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462832;  // std dev = 5,59e-07, 228,000 (wgt'ed) examples reached here.  /* #pos=228 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( actor(B) )
%   | then return -0.1123163781936059;  // std dev = 0,000, 478,000 (wgt'ed) examples reached here.  /* #neg=478 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462842;  // std dev = 1,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.11231637819360633;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783626;  // std dev = 2,36e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.10159632948783553;  // std dev = 3,21e-07, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.0926912761892614;  // std dev = 0,000, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,32e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.08518475138839678;  // std dev = 1,40e-07, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,80e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07877675473109164;  // std dev = 7,30e-08, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452779;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #pos=124 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.13657860029879695;  // std dev = 0,092, 173,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=145 */
%   else return -0.07324622576333696;  // std dev = 1,41e-07, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15561024496040624;  // std dev = 0,043, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07590043028605714;  // std dev = 0,051, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06842697784420348;  // std dev = 0,000, 499,000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13624174418652615;  // std dev = 0,039, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07008079167405931;  // std dev = 0,049, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202541;  // std dev = 2,45e-07, 495,000 (wgt'ed) examples reached here.  /* #neg=495 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064013
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.747 seconds
Total inference time: 1.211 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064681
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.903 seconds
Refined model CLL: -0.064681


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064013
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.432 seconds
Total inference time: 1.211 seconds
AUC ROC: 1.0
Total revision time: 12.432
Best scored revision CLL: -0.064681


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:20:49
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065511, 'Learning time': 4.762, 'Inference time': 1.315}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064013, 'Learning time': 12.432, 'Inference time': 1.211}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1418510649004877;  // std dev = 0,000, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.12544463852839222;  // std dev = 0,000, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.11231637819360601;  // std dev = 0,000, 514,000 (wgt'ed) examples reached here.  /* #neg=514 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.10159632948783573;  // std dev = 2,90e-07, 513,000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.0926912761892614;  // std dev = 0,000, 508,000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 1,29e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.08518475138839678;  // std dev = 1,26e-07, 462,000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.07877675473109196;  // std dev = 0,000, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07324622576333724;  // std dev = 0,000, 490,000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.06842697784420347;  // std dev = 0,000, 490,000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.06419184008202555;  // std dev = 2,27e-07, 535,000 (wgt'ed) examples reached here.  /* #neg=535 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.85 seconds
Total inference time: 1.129 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:20:54
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 3.85, 'Inference time': 1.129}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048735;  // std dev = 2,46e-07, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.17 seconds
Total inference time: 0.746 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:20:56
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 1.17, 'Inference time': 0.746}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;publication(E, B).;false;false
0;true,false,true;publication(F, G), professor(G).;false;false
0;true,false;publication(F, A).;true;true
0;true,false,false;projectmember(H, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,true;ta(J, A, K).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;true;true
2;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
2;true,true;publication(D, E), ta(F, E, G).;false;true
2;true,false,false;hasposition(P, C), tempadvisedby(Q, P).;false;false
2;true,false,true;publication(K, L), ta(M, L, N).;false;false
2;true,false;publication(J, B), publication(K, A).;true;true
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true,false;ta(F, C, G).;false;false
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C), publication(E, B).;false;false
3;true,false,true;publication(I, J), ta(K, J, L).;false;false
3;true,false;publication(H, A), publication(I, B).;true;true
3;true,false,false;publication(M, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,true,true;publication(F, E), publication(F, B).;false;false
4;true,false,true;publication(H, I), ta(J, I, K).;false;false
4;true,false;tempadvisedby(G, B), publication(H, A).;true;true
4;true,false,false;publication(L, B), tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;projectmember(C, B), publication(D, A).;false;true
5;true,false,true;ta(F, E, G), publication(H, B).;false;false
5;true,false;tempadvisedby(E, B).;true;true
5;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(E, A), publication(E, B).;true;true
6;true,true,true;publication(D, B).;false;false
6;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;ta(J, A, K).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, A).;true;true
7;true;professor(A).;false;true
7;false,false,true;publication(G, F).;false;false
7;false,false;tempadvisedby(F, B), student(A).;true;true
7;false,false,false;publication(H, B).;false;false
7;true,false,false;publication(C, E), professor(E).;false;false
7;true,false;projectmember(D, B).;false;true
7;false;student(B).;false;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true,false;publication(C, H), ta(I, H, J).;false;false
8;true,true;tempadvisedby(D, B), publication(E, D).;true;true
8;true,true,true;ta(F, D, G).;false;false
8;true,false,true;publication(K, N), inphase(N, P).;false;false
8;true,false;publication(K, B), ta(L, A, M).;true;true
8;true,false,false;tempadvisedby(Q, B), publication(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
9;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
9;true,false,true;publication(H, B).;false;false
9;true,false;tempadvisedby(G, B), publication(H, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004885;  // std dev = 0,000, 615,000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0,000, 639,000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462832;  // std dev = 1,69e-07, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360567;  // std dev = 0,000, 555,000 (wgt'ed) examples reached here.  /* #neg=555 */
%   | else return 0.3181633314386908;  // std dev = 2,786, 76,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.42602799401501995;  // std dev = 0,379, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.11541892900413799;  // std dev = 0,170, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10314098515840205;  // std dev = 0,210, 633,000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, B) )
%   | | | then return 0.3266486585296091;  // std dev = 0,347, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.09946800002129498;  // std dev = 0,109, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09416085389395988;  // std dev = 0,203, 619,000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.22351593520687138;  // std dev = 2,090, 375,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08633147211165942;  // std dev = 0,180, 608,000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21878931179081218;  // std dev = 0,274, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.11341308735669754;  // std dev = 0,142, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08012763538037637;  // std dev = 0,190, 610,000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.10784996040688352;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( movie(C, D), director(D) )
%   | | then return 0.1422542318748446;  // std dev = 2,021, 394,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07287295466918732;  // std dev = 2,54e-07, 577,000 (wgt'ed) examples reached here.  /* #neg=577 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16337185162351725;  // std dev = 0,012, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1153279076518997;  // std dev = 0,147, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0695081624306326;  // std dev = 0,159, 635,000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14227064733220077;  // std dev = 0,199, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10394710792414867;  // std dev = 0,135, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06500448185652755;  // std dev = 0,138, 593,000 (wgt'ed) examples reached here.  /* #neg=593 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065465
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.817 seconds
Total inference time: 1.421 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.475 seconds
Parameter learned model CLL: -0.067844


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)', 'true,false': 'movie(F, A)'}, {'true,false,true,true': [6.32e-08, 62, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.04e-06, 0, 337], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 615, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 337], 'true,false,true': [0.0, 54, 0], 'false': [0.0, 639, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, B), movie(G, A)', 'false': 'actor(B)'}, {'true,false,true,true': [2.79e-08, 49, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 555, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.69e-07, 0, 288], 'false,false': [2.786, 27, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,true,true': [0.17, 64, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.379, 0, 337], 'false': [0.21, 633, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, B)', 'true,false,true': 'movie(G, H)', 'true,false': 'movie(G, A)'}, {'true,false,true,true': [0.109, 43, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.347, 0, 337], 'true,false,true,false': [0.0, 0, 0], 'false': [0.203, 619, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [2.09, 38, 337], 'true,false': [0.0, 0, 0], 'false': [0.18, 608, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.274, 0, 337], 'true,true,false,true': [0.142, 51, 0], 'true,false': [0.0, 0, 0], 'false': [0.19, 610, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, A)', 'true': 'director(A)', 'true,false': 'movie(C, D), director(D)', 'false': 'actor(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 29, 0], 'true,false,true': [2.021, 57, 337], 'false,true': [2.54e-07, 577, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, B)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.147, 56, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.012, 0, 337], 'false': [0.159, 635, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.199, 0, 337], 'true,false': [0.0, 0, 0], 'true,true,false': [0.135, 57, 0], 'false': [0.138, 593, 0]}]]
[{'': [0.1312428942029289, -3.292759019376074e-16], 'true': [3.204821834882351e-15, 6.446456272017038e-17], 'true,true': [3.204821834882351e-15, nan], 'true,true,true': [3.204821834882351e-15, nan], 'true,false,true': [6.446456272017038e-17, nan], 'true,false': [6.446456272017038e-17, nan]}, {'': [0.08497659456597553, -2.9188962149769376e-16], 'true': [-5.144582419153248e-15, -3.700743415417188e-17], 'true,false': [-3.700743415417188e-17, nan]}, {'': [0.055394820922591285, 0.03193013412935171], 'true': [9.868649107779169e-17, 1.586032892321652e-17], 'true,true': [9.868649107779169e-17, nan], 'true,false,true': [1.586032892321652e-17, nan], 'true,false': [1.586032892321652e-17, nan], 'false': [-1.6003214769371626e-18, 0.10211112389669286]}, {'': [0.03975206830244817, 6.953372466967514e-05], 'true': [0.00042609409101774723, 0.00045252060960333275], 'true,false,true': [0.00045252060960333275, nan], 'true,false': [0.00045252060960333275, nan], 'true,true': [0.00042609409101774723, nan]}, {'': [0.018569046614540428, 6.628772466423043e-05], 'true': [0.0003565719027908436, 0.00027530690678972573], 'true,true': [0.0003565719027908436, nan], 'true,true,true': [0.0003565719027908436, nan], 'true,false,true': [0.00027530690678972573, nan], 'true,false': [0.00027530690678972573, nan]}, {'': [0.01164662081295982, 5.3334501363533936e-05], 'true': [0.01164662081295982, nan]}, {'': [0.012845169841106993, 5.8951005393741536e-05], 'true': [0.012845169841106993, nan], 'true,true,true': [0.00022342196668918266, nan], 'true,true,false': [0.000395142547816045, nan], 'true,true': [0.00022342196668918266, 0.000395142547816045]}, {'': [0.013654131281659387, 1.1159954147011972e-16], 'true': [-1.7227598657976568e-17, 0.010370688468574203], 'true,false': [0.010370688468574203, nan], 'false': [1.1159954147011972e-16, nan]}, {'': [0.009670747998915225, 3.998056527347737e-05], 'true': [0.00014562852036079798, 0.00038598806711134207], 'true,false,true': [0.00038598806711134207, nan], 'true,false': [0.00038598806711134207, nan], 'true,true': [0.00014562852036079798, nan]}, {'': [0.007647882578898208, 3.191791761947226e-05], 'true': [0.007647882578898208, nan], 'true,true': [0.00011692931866545064, 0.0003201681641431375]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, A).;true;true
7;true;director(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048857;  // std dev = 0,000, 615,000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.12544463852839233;  // std dev = 0,000, 605,000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462832;  // std dev = 1,69e-07, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 0,000, 630,000 (wgt'ed) examples reached here.  /* #neg=630 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.5553664367462839;  // std dev = 2,02e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.11231637819360621;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783616;  // std dev = 4,94e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.10159632948783509;  // std dev = 4,33e-07, 605,000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.09269127618926186;  // std dev = 0,000, 622,000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.08518475138839678;  // std dev = 1,63e-07, 647,000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109264;  // std dev = 0,000, 655,000 (wgt'ed) examples reached here.  /* #neg=655 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, A) )
%   then if ( director(A) )
%   | then return -0.07324622576333688;  // std dev = 8,33e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333653;  // std dev = 2,46e-07, 587,000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.06842697784420361;  // std dev = 0,000, 563,000 (wgt'ed) examples reached here.  /* #neg=563 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801187;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202523;  // std dev = 2,51e-07, 618,000 (wgt'ed) examples reached here.  /* #neg=618 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.897 seconds
Total inference time: 1.176 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.483 seconds
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.672 seconds
Total inference time: 1.176 seconds
AUC ROC: 1.0
Total revision time: 14.672
Best scored revision CLL: -0.064087


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:21:14
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065465, 'Learning time': 5.817, 'Inference time': 1.421}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 14.672, 'Inference time': 1.176}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.14185106490048854;  // std dev = 0,000, 629,000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.12544463852839233;  // std dev = 0,000, 606,000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360633;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.11231637819360592;  // std dev = 0,000, 619,000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783626;  // std dev = 2,36e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.10159632948783555;  // std dev = 3,42e-07, 587,000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.09269127618926162;  // std dev = 0,000, 556,000 (wgt'ed) examples reached here.  /* #neg=556 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.08518475138839678;  // std dev = 1,52e-07, 629,000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109177;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07877675473109262;  // std dev = 0,000, 656,000 (wgt'ed) examples reached here.  /* #neg=656 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333682;  // std dev = 1,79e-07, 608,000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420369;  // std dev = 0,000, 643,000 (wgt'ed) examples reached here.  /* #neg=643 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.0641918400820254;  // std dev = 2,48e-07, 642,000 (wgt'ed) examples reached here.  /* #neg=642 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.028 seconds
Total inference time: 1.163 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:21:19
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 4.028, 'Inference time': 1.163}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.14185106490048832;  // std dev = 0,000, 589,000 (wgt'ed) examples reached here.  /* #neg=589 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.46 seconds
Total inference time: 0.754 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:21:22
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 1.46, 'Inference time': 0.754}


