Starting experiment #2 for 54_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 698
Source train neg examples: 27996

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.565191188620635;  // std dev = 0,455, 355,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10508635901813483;  // std dev = 3,801, 408,000 (wgt'ed) examples reached here.  /* #neg=393 #pos=15 */
%   | | | else return 0.16117923812981538;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.039810248573957346;  // std dev = 4,738, 245,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=25 */
%   | | | else return 0.3032161996734986;  // std dev = 14,843, 892,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=397 */
%   else return -0.14185106490048777;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.30407088503508356;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.4602115282612151;  // std dev = 8,723, 353,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=242 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07988975204045962;  // std dev = 3,762, 261,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=15 */
%   | | | else return 0.39122622601725304;  // std dev = 2,167, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09047138120959226;  // std dev = 3,797, 384,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=15 */
%   | | | else return 0.2077447847865496;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else return 0.2543189709982873;  // std dev = 0,496, 908,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=397 */
%   else return -0.12544463852839116;  // std dev = 7,60e-08, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3756026629026243;  // std dev = 0,462, 364,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08187750322672742;  // std dev = 3,804, 387,000 (wgt'ed) examples reached here.  /* #neg=372 #pos=15 */
%   | | | else return 0.10840310263918625;  // std dev = 2,631, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03252958440863642;  // std dev = 4,638, 253,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=25 */
%   | | | else return 0.21177761387048782;  // std dev = 14,966, 911,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=397 */
%   else return -0.11231637819360621;  // std dev = 8,82e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2696480082269214;  // std dev = 0,470, 375,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07553968970762104;  // std dev = 3,805, 416,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=15 */
%   | | | else return 0.0759259488474159;  // std dev = 2,658, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03653070466596399;  // std dev = 4,663, 273,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=25 */
%   | | | else return 0.16857084432112668;  // std dev = 15,023, 920,000 (wgt'ed) examples reached here.  /* #neg=523 #pos=397 */
%   else return -0.10159632948783641;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.5623133506672282;  // std dev = 0,048, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.28625187604007685;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.23817399708397607;  // std dev = 8,402, 340,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=240 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06496814981186677;  // std dev = 3,799, 378,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=15 */
%   | | | else return 0.0895050692224943;  // std dev = 2,605, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.042809787375997124;  // std dev = 4,691, 310,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=25 */
%   | | | else return 0.13368831849297402;  // std dev = 15,035, 922,000 (wgt'ed) examples reached here.  /* #neg=525 #pos=397 */
%   else return -0.0926912761892608;  // std dev = 7,60e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16188385193833027;  // std dev = 0,458, 367,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06061347126802932;  // std dev = 3,802, 394,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=15 */
%   | | | else return 0.12488510868096346;  // std dev = 2,510, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.023014103923020723;  // std dev = 4,652, 261,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=25 */
%   | | | else return 0.10929045482333483;  // std dev = 14,979, 913,000 (wgt'ed) examples reached here.  /* #neg=516 #pos=397 */
%   else return -0.0851847513883968;  // std dev = 7,30e-08, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.43849391056588993;  // std dev = 0,261, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.39894682296429623;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.1366961437776;  // std dev = 0,457, 343,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=242 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0560245866876341;  // std dev = 3,803, 401,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=15 */
%   | | | else return 0.07761357350156026;  // std dev = 2,557, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.026830166695654644;  // std dev = 4,670, 279,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=25 */
%   | | | else return 0.09911740588576931;  // std dev = 14,789, 884,000 (wgt'ed) examples reached here.  /* #neg=487 #pos=397 */
%   else return -0.07877675473109155;  // std dev = 6,91e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1166891692012536;  // std dev = 0,441, 354,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05019293363572478;  // std dev = 3,800, 391,000 (wgt'ed) examples reached here.  /* #neg=376 #pos=15 */
%   | | | else return 0.12422444952675474;  // std dev = 2,441, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.022314956045620754;  // std dev = 4,667, 274,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=25 */
%   | | | else return 0.04373171135542341;  // std dev = 15,219, 953,000 (wgt'ed) examples reached here.  /* #neg=556 #pos=397 */
%   else return -0.0732462257633372;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.07688321283607667;  // std dev = 0,447, 360,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=251 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.015626025610940567;  // std dev = 2,121, 50,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | | else return -0.05314872341553913;  // std dev = 4,108, 388,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=20 */
%   | else return 0.02897965107396161;  // std dev = 0,460, 1.189,000 (wgt'ed) examples reached here.  /* #neg=767 #pos=422 */
%   else return -0.06842697784420264;  // std dev = 5,96e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07155803587627853;  // std dev = 0,441, 354,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04200827374411557;  // std dev = 3,795, 380,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=15 */
%   | | | else return 0.062029671883523936;  // std dev = 2,524, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else return 0.03252492588661558;  // std dev = 0,458, 1.171,000 (wgt'ed) examples reached here.  /* #neg=749 #pos=422 */
%   else return -0.06419184008202626;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.46562557061353194;  // std dev = 0,488, 107,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.4415632961315083;  // std dev = 4,770, 100,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3660356075148567;  // std dev = 0,475, 99,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2919960471871674;  // std dev = 0,473, 98,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.14401232115322152;  // std dev = 5,190, 111,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926104;  // std dev = 2,79e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2369619372668218;  // std dev = 0,452, 91,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,37e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.19385334086451378;  // std dev = 0,444, 89,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109161;  // std dev = 5,27e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.04686574917596481;  // std dev = 0,483, 103,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.035528405088457025;  // std dev = 4,897, 103,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=65 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 5,27e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08742184483623103;  // std dev = 0,462, 94,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */


Results
   AUC ROC   = 0.857618
   AUC PR    = 0.056112
   CLL	      = -0.326167
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 1.115 seconds
Total inference time: 1.534 seconds
AUC ROC: 0.857618


Results scoring model
   AUC ROC   = 0.866819
   AUC PR    = 0.100464
   CLL	      = -0.311559
   Precision = 0.100464 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.182584


Total scoring time: 1.332 seconds
Parameter learned model CLL: -0.311559


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [7.88e-08, 84, 0], 'true,true': [0.488, 42, 65], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [4.77, 35, 65], 'false': [0.0, 95, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [7.15e-08, 88, 0], 'true,true': [0.475, 34, 65], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [3.94e-08, 99, 0], 'true,true': [0.473, 33, 65], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [2.79e-08, 90, 0], 'true,true': [5.19, 46, 65], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [5.37e-08, 95, 0], 'true,true': [0.452, 26, 65], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [5.27e-08, 91, 0], 'true,true': [0.444, 24, 65], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 89, 0], 'true,true': [0.483, 38, 65], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [5.27e-08, 110, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [4.897, 38, 65], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 87, 0], 'true,true': [0.462, 29, 65], 'true,false': [0.0, 0, 0]}]]
[{'': [0.23844877281858615, 7.401486830834377e-17], 'true': [0.23844877281858615, nan]}, {'': [0.2274999999999999, -1.402386978473882e-17], 'true': [0.2274999999999999, nan], 'true,true': [0.2274999999999999, nan], 'true,true,true': [0.2274999999999999, nan]}, {'': [0.22548719518416604, 5.803438537813318e-17], 'true': [0.22548719518416604, nan]}, {'': [0.22334443981674187, 1.570012358055777e-17], 'true': [0.22334443981674187, nan]}, {'': [0.24267510753997254, 8.635067969306773e-18], 'true': [0.24267510753997254, nan]}, {'': [0.2040816326530611, 3.0385051200267444e-17], 'true': [0.2040816326530611, nan]}, {'': [0.19694483019820755, 3.050063254464716e-17], 'true': [0.19694483019820755, nan]}, {'': [0.23282118955603723, -7.484649604214538e-18], 'true': [0.23282118955603723, nan]}, {'': [0.23282118955603712, 2.5232341468753557e-17], 'true': [0.23282118955603712, nan], 'true,true': [0.23282118955603712, nan]}, {'': [0.21333182435491133, -1.2761184191093753e-17], 'true': [0.21333182435491133, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004877;  // std dev = 4,21e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.12544463852839138;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1123163781936062;  // std dev = 8,02e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return -0.1015963294878363;  // std dev = 2,11e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09418673275556189;  // std dev = 0,053, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.09269127618926096;  // std dev = 4,71e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08506828525632006;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return -0.08518475138839682;  // std dev = 5,77e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08424857433452407;  // std dev = 0,122, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109161;  // std dev = 5,27e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08158299161412084;  // std dev = 0,112, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07324622576333707;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1527438580936707;  // std dev = 4,94e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07120124611202255;  // std dev = 0,108, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.06842697784420265;  // std dev = 4,59e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.0654384299684259;  // std dev = 0,073, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06419184008202626;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063168
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.121 seconds
Total inference time: 1.394 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064708
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.46 seconds
Refined model CLL: -0.064708


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063168
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.028 seconds
Total inference time: 1.394 seconds
AUC ROC: 1.0
Total revision time: 6.028
Best scored revision CLL: -0.064708


Dataset: 54_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 05:55:01
{'parameter_0.2': {'F1': 0.106262, 'Inference time': 1.534, 'Precision': [0.056112, 0.5], 'AUC ROC': 0.857618, 'AUC PR': 0.056112, 'Recall': 1.0, 'Learning time': 1.115, 'CLL': -0.326167}, 'F1': 1.0, 'Inference time': 1.394, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 6.028, 'CLL': -0.063168}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839133;  // std dev = 0,000, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360622;  // std dev = 8,69e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783634;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926104;  // std dev = 2,36e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08518475138839683;  // std dev = 4,71e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109161;  // std dev = 5,96e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07324622576333707;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,94e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06842697784420267;  // std dev = 5,05e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202626;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.063 seconds
Total inference time: 1.52 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 05:55:04
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.52, 'Precision': [1.0, 0.5], 'Learning time': 2.063, 'AUC PR': 1.0, 'CLL': -0.063421, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.836 seconds
Total inference time: 0.862 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 05:55:06
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.862, 'Precision': [nan, 0.5], 'Learning time': 0.836, 'AUC PR': 1.0, 'CLL': -0.152968, 'AUC ROC': 1.0}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.4831489350995091;  // std dev = 0,484, 208,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.4136573287083115;  // std dev = 6,982, 208,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=130 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283916;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.39223364621617823;  // std dev = 0,466, 191,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360657;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.29860664452188806;  // std dev = 0,469, 193,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0,000, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.206156091396547;  // std dev = 6,714, 199,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 9,19e-08, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1857598598713877;  // std dev = 0,465, 190,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7,60e-08, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.12880473167152692;  // std dev = 0,469, 193,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 7,45e-08, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09361642040867821;  // std dev = 0,470, 194,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333673;  // std dev = 9,71e-08, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return -0.01620452054432319;  // std dev = 7,363, 223,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=130 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420262;  // std dev = 7,67e-08, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09622316075107767;  // std dev = 0,462, 188,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */


Results
   AUC ROC   = 0.857618
   AUC PR    = 0.056112
   CLL	      = -0.321494
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 1.896 seconds
Total inference time: 1.388 seconds
AUC ROC: 0.857618


Results scoring model
   AUC ROC   = 0.868909
   AUC PR    = 0.101881
   CLL	      = -0.303728
   Precision = 0.101881 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184922


Total scoring time: 1.712 seconds
Parameter learned model CLL: -0.303728


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 181, 0], 'true,true': [0.484, 78, 130], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [6.982, 78, 130], 'false': [0.0, 194, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 194, 0], 'true,true': [0.466, 61, 130], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 203, 0], 'true,true': [0.469, 63, 130], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [9.19e-08, 196, 0], 'true,true': [6.714, 69, 130], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [7.6e-08, 196, 0], 'true,true': [0.465, 60, 130], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [7.45e-08, 194, 0], 'true,true': [0.469, 63, 130], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [9.71e-08, 171, 0], 'true,true': [0.47, 64, 130], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [7.67e-08, 181, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [7.363, 93, 130], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 199, 0], 'true,true': [0.462, 58, 130], 'true,false': [0.0, 0, 0]}]]
[{'': [0.23437500000000425, -2.011895867829013e-16], 'true': [0.23437500000000425, nan]}, {'': [0.2343750000000009, -2.9758555299231e-17], 'true': [0.2343750000000009, nan], 'true,true': [0.2343750000000009, nan], 'true,true,true': [0.2343750000000009, nan]}, {'': [0.2173734272635054, -3.433679457603577e-17], 'true': [0.2173734272635054, nan]}, {'': [0.21987167440736827, -8.969289460025895e-17], 'true': [0.21987167440736827, nan]}, {'': [0.22650943158000958, 4.304946422015913e-17], 'true': [0.22650943158000958, nan]}, {'': [0.21606648199445957, 2.945489657168783e-17], 'true': [0.21606648199445957, nan]}, {'': [0.21987167440736585, 2.8613995480029805e-17], 'true': [0.21987167440736585, nan]}, {'': [0.2210649378254864, 5.518652461587035e-17], 'true': [0.2210649378254864, nan]}, {'': [0.24311769792274202, 3.250929298626149e-17], 'true': [0.24311769792274202, nan], 'true,true': [0.24311769792274202, nan]}, {'': [0.21333182435491188, -1.6737030521987284e-18], 'true': [0.21333182435491188, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048768;  // std dev = 5,96e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return -0.14185106490048835;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.12544463852839155;  // std dev = 0,000, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360632;  // std dev = 3,80e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.11231637819360661;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.41751358415830914;  // std dev = 3,86e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783627;  // std dev = 2,36e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783649;  // std dev = 0,000, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601497;  // std dev = 2,53e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.0926912761892606;  // std dev = 8,56e-08, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694897;  // std dev = 5,96e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839679;  // std dev = 1,05e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return -0.08518475138839678;  // std dev = 7,45e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2097577156325353;  // std dev = 2,11e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109175;  // std dev = 1,05e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.07877675473109147;  // std dev = 7,74e-08, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return -0.0732462257633367;  // std dev = 1,04e-07, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420268;  // std dev = 2,89e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return -0.06842697784420262;  // std dev = 8,16e-08, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06419184008202626;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.08 seconds
Total inference time: 1.454 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.777 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.465 seconds
Total inference time: 1.454 seconds
AUC ROC: 1.0
Total revision time: 7.465
Best scored revision CLL: -0.064211


Dataset: 54_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 05:55:17
{'F1': 1.0, 'Inference time': 1.454, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_0.4': {'F1': 0.106262, 'Inference time': 1.388, 'Precision': [0.056112, 0.5], 'AUC ROC': 0.857618, 'AUC PR': 0.056112, 'Recall': 1.0, 'Learning time': 1.896, 'CLL': -0.321494}, 'Recall': 1.0, 'Learning time': 7.465, 'CLL': -0.063421}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.14185106490048843;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12544463852839174;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.11231637819360674;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 3,86e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.10159632948783648;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2,53e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.09269127618926055;  // std dev = 6,32e-08, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5,96e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.08518475138839678;  // std dev = 8,69e-08, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2,11e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109146;  // std dev = 7,88e-08, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333675;  // std dev = 1,02e-07, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.06842697784420261;  // std dev = 6,32e-08, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06419184008202618;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06419184008202626;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.051 seconds
Total inference time: 1.375 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 05:55:22
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.375, 'Precision': [1.0, 0.5], 'Learning time': 3.051, 'AUC PR': 1.0, 'CLL': -0.063421, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.14185106490048846;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.996 seconds
Total inference time: 0.921 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 05:55:24
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.921, 'Precision': [nan, 0.5], 'Learning time': 0.996, 'AUC PR': 1.0, 'CLL': -0.152968, 'AUC ROC': 1.0}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5236779453384164;  // std dev = 0,472, 293,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004879;  // std dev = 5,96e-08, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.461265567117163;  // std dev = 7,906, 287,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=195 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.125444638528392;  // std dev = 0,000, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.33044086514266335;  // std dev = 0,481, 306,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360693;  // std dev = 0,000, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.28210249895293454;  // std dev = 0,473, 294,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878366;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.18152391995920833;  // std dev = 8,482, 309,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926043;  // std dev = 1,52e-07, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.19429304463657235;  // std dev = 0,463, 283,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,10e-07, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.10034650990607082;  // std dev = 0,479, 303,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109141;  // std dev = 4,71e-08, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.06719031268811924;  // std dev = 0,481, 307,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333692;  // std dev = 1,03e-07, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.08113429449388758;  // std dev = 8,076, 293,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=195 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420285;  // std dev = 0,000, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.05930956281761192;  // std dev = 0,473, 294,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202602;  // std dev = 9,88e-08, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */


Results
   AUC ROC   = 0.857618
   AUC PR    = 0.056112
   CLL	      = -0.321374
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 2.055 seconds
Total inference time: 1.336 seconds
AUC ROC: 0.857618


Results scoring model
   AUC ROC   = 0.870882
   AUC PR    = 0.103284
   CLL	      = -0.300174
   Precision = 0.103284 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.18723


Total scoring time: 1.834 seconds
Parameter learned model CLL: -0.300174


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [5.96e-08, 292, 0], 'true,true': [0.472, 98, 195], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [7.906, 92, 195], 'false': [0.0, 292, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 272, 0], 'true,true': [0.481, 111, 195], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 281, 0], 'true,true': [0.473, 99, 195], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.52e-07, 296, 0], 'true,true': [8.482, 114, 195], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.1e-07, 322, 0], 'true,true': [0.463, 88, 195], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [4.71e-08, 287, 0], 'true,true': [0.479, 108, 195], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.03e-07, 285, 0], 'true,true': [0.481, 112, 195], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 271, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [8.076, 98, 195], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [9.88e-08, 285, 0], 'true,true': [0.473, 99, 195], 'true,false': [0.0, 0, 0]}]]
[{'': [0.2226001467693324, 1.2166827667125003e-17], 'true': [0.2226001467693324, nan]}, {'': [0.21780038606757585, -7.908437983631252e-17], 'true': [0.21780038606757585, nan], 'true,true': [0.21780038606757585, nan], 'true,true,true': [0.21780038606757585, nan]}, {'': [0.23116109188774026, -1.0938962154394925e-16], 'true': [0.23116109188774026, nan]}, {'': [0.2233444398167452, -6.005476859182342e-17], 'true': [0.2233444398167452, nan]}, {'': [0.2328211895560352, 7.801567200068668e-17], 'true': [0.2328211895560352, nan]}, {'': [0.21426163393225187, 3.7237293993638793e-17], 'true': [0.21426163393225187, nan]}, {'': [0.2293892755612196, 7.736745816203181e-18], 'true': [0.2293892755612196, nan]}, {'': [0.2317265965686635, 3.739698609263685e-17], 'true': [0.2317265965686635, nan]}, {'': [0.22260014676932857, -3.0316053070945236e-17], 'true': [0.22260014676932857, nan], 'true,true': [0.22260014676932857, nan]}, {'': [0.2233444398167424, 3.4280570584917116e-17], 'true': [0.2233444398167424, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048766;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return -0.14185106490048785;  // std dev = 8,43e-08, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else return -0.125444638528392;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360624;  // std dev = 7,30e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return -0.11231637819360689;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415830997;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783626;  // std dev = 4,47e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return -0.1015963294878366;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.320711847160149;  // std dev = 4,00e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926101;  // std dev = 3,33e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return -0.09269127618926043;  // std dev = 1,46e-07, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.08518475138839682;  // std dev = 4,94e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109168;  // std dev = 4,21e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return -0.07877675473109143;  // std dev = 5,96e-08, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else return -0.07324622576333684;  // std dev = 1,13e-07, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420268;  // std dev = 4,21e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else return -0.068426977844203;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return -0.06419184008202597;  // std dev = 1,13e-07, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.671 seconds
Total inference time: 1.469 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.91 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.47 seconds
Total inference time: 1.469 seconds
AUC ROC: 1.0
Total revision time: 8.47
Best scored revision CLL: -0.064211


Dataset: 54_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 05:55:36
{'F1': 1.0, 'Inference time': 1.469, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_0.6': {'F1': 0.106262, 'Inference time': 1.336, 'Precision': [0.056112, 0.5], 'AUC ROC': 0.857618, 'AUC PR': 0.056112, 'Recall': 1.0, 'Learning time': 2.055, 'CLL': -0.321374}, 'Recall': 1.0, 'Learning time': 8.47, 'CLL': -0.063421}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.141851064900488;  // std dev = 0,000, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.12544463852839205;  // std dev = 0,000, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360665;  // std dev = 0,000, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.10159632948783656;  // std dev = 0,000, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 4,00e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926047;  // std dev = 1,44e-07, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07877675473109147;  // std dev = 2,98e-08, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07324622576333709;  // std dev = 7,30e-08, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420314;  // std dev = 0,000, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.06419184008202605;  // std dev = 8,94e-08, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.482 seconds
Total inference time: 1.568 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 05:55:41
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.568, 'Precision': [1.0, 0.5], 'Learning time': 3.482, 'AUC PR': 1.0, 'CLL': -0.063421, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.14185106490048774;  // std dev = 1,52e-07, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.158 seconds
Total inference time: 0.876 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 05:55:44
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.876, 'Precision': [nan, 0.5], 'Learning time': 1.158, 'AUC PR': 1.0, 'CLL': -0.152968, 'AUC ROC': 1.0}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.49229527656292277;  // std dev = 0,482, 410,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004874;  // std dev = 2,76e-07, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.4259494584107632;  // std dev = 9,691, 407,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=260 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0,000, 417,000 (wgt'ed) examples reached here.  /* #neg=417 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3507501794765507;  // std dev = 0,479, 404,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360628;  // std dev = 0,000, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.308568676625988;  // std dev = 0,467, 383,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878361;  // std dev = 1,70e-07, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.23070562096846975;  // std dev = 9,188, 385,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926067;  // std dev = 1,79e-07, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12900066993395076;  // std dev = 0,483, 412,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,19e-07, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.1393114447594162;  // std dev = 0,469, 386,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109141;  // std dev = 1,21e-07, 402,000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.07011274667943003;  // std dev = 0,480, 407,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633377;  // std dev = 0,000, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.040690352660394564;  // std dev = 9,854, 415,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=260 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442033;  // std dev = 0,000, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.032366428795561696;  // std dev = 0,483, 414,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202555;  // std dev = 2,05e-07, 415,000 (wgt'ed) examples reached here.  /* #neg=415 */


Results
   AUC ROC   = 0.857618
   AUC PR    = 0.056112
   CLL	      = -0.311249
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 2.314 seconds
Total inference time: 1.459 seconds
AUC ROC: 0.857618


Results scoring model
   AUC ROC   = 0.870453
   AUC PR    = 0.10297
   CLL	      = -0.292159
   Precision = 0.10297 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.186715


Total scoring time: 2.392 seconds
Parameter learned model CLL: -0.292159


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.76e-07, 380, 0], 'true,true': [0.482, 150, 260], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [9.691, 147, 260], 'false': [0.0, 417, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 388, 0], 'true,true': [0.479, 144, 260], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.7e-07, 374, 0], 'true,true': [0.467, 123, 260], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.79e-07, 372, 0], 'true,true': [9.188, 125, 260], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.19e-07, 355, 0], 'true,true': [0.483, 152, 260], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.21e-07, 402, 0], 'true,true': [0.469, 126, 260], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 394, 0], 'true,true': [0.48, 147, 260], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 381, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [9.854, 155, 260], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.05e-07, 415, 0], 'true,true': [0.483, 154, 260], 'true,false': [0.0, 0, 0]}]]
[{'': [0.23200475907198442, 2.0100880024792309e-16], 'true': [0.23200475907198442, nan]}, {'': [0.230728830237435, -1.2992538033982648e-16], 'true': [0.230728830237435, nan], 'true,true': [0.230728830237435, nan], 'true,true,true': [0.230728830237435, nan]}, {'': [0.22938927556121838, -2.2891196384023845e-17], 'true': [0.22938927556121838, nan]}, {'': [0.21801225722447268, 7.718127978677559e-17], 'true': [0.21801225722447268, nan]}, {'': [0.21926125822229678, 8.59527502935605e-17], 'true': [0.21926125822229678, nan]}, {'': [0.23282118955603498, 4.003057666254086e-17], 'true': [0.23282118955603498, nan]}, {'': [0.21987167440736724, 3.645508439067678e-17], 'true': [0.21987167440736724, nan]}, {'': [0.23072883023742857, -6.875492842856299e-17], 'true': [0.23072883023742857, nan]}, {'': [0.23399622586732413, -1.0373737447941096e-16], 'true': [0.23399622586732413, nan], 'true,true': [0.23399622586732413, nan]}, {'': [0.23361105276669136, 1.0165897574880951e-16], 'true': [0.23361105276669136, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048802;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else return -0.14185106490048738;  // std dev = 2,92e-07, 392,000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839108;  // std dev = 8,16e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return -0.12544463852839227;  // std dev = 0,000, 404,000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462832;  // std dev = 3,95e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360621;  // std dev = 8,43e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else return -0.11231637819360603;  // std dev = 0,000, 441,000 (wgt'ed) examples reached here.  /* #neg=441 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783645;  // std dev = 0,000, 151,000 (wgt'ed) examples reached here.  /* #neg=151 */
%   else return -0.101596329487836;  // std dev = 1,98e-07, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601502;  // std dev = 1,33e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0926912761892609;  // std dev = 6,50e-08, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else return -0.09269127618926072;  // std dev = 1,78e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08518475138839679;  // std dev = 5,37e-08, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else return -0.08518475138839678;  // std dev = 1,28e-07, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109158;  // std dev = 7,15e-08, 151,000 (wgt'ed) examples reached here.  /* #neg=151 */
%   else return -0.07877675473109143;  // std dev = 1,93e-07, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return -0.0732462257633377;  // std dev = 0,000, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420268;  // std dev = 4,34e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else return -0.06842697784420325;  // std dev = 0,000, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1340070300080112;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else return -0.06419184008202561;  // std dev = 1,92e-07, 393,000 (wgt'ed) examples reached here.  /* #neg=393 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.877 seconds
Total inference time: 1.382 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.068 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.651 seconds
Total inference time: 1.382 seconds
AUC ROC: 1.0
Total revision time: 9.651
Best scored revision CLL: -0.064211


Dataset: 54_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 05:55:57
{'F1': 1.0, 'Inference time': 1.382, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter_0.8': {'F1': 0.106262, 'Inference time': 1.459, 'Precision': [0.056112, 0.5], 'AUC ROC': 0.857618, 'AUC PR': 0.056112, 'Recall': 1.0, 'Learning time': 2.314, 'CLL': -0.311249}, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 9.651, 'CLL': -0.063421}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048727;  // std dev = 2,95e-07, 454,000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.12544463852839227;  // std dev = 0,000, 482,000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,95e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360633;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1123163781936059;  // std dev = 0,000, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783626;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.10159632948783597;  // std dev = 2,29e-07, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,33e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.09269127618926132;  // std dev = 0,000, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.08518475138839678;  // std dev = 1,28e-07, 453,000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109166;  // std dev = 6,32e-08, 451,000 (wgt'ed) examples reached here.  /* #neg=451 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333724;  // std dev = 0,000, 437,000 (wgt'ed) examples reached here.  /* #neg=437 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.06842697784420344;  // std dev = 0,000, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080112;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.06419184008202575;  // std dev = 1,81e-07, 461,000 (wgt'ed) examples reached here.  /* #neg=461 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.706 seconds
Total inference time: 1.33 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 05:56:02
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.33, 'Precision': [1.0, 0.5], 'Learning time': 3.706, 'AUC PR': 1.0, 'CLL': -0.063421, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048735;  // std dev = 2,46e-07, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.342 seconds
Total inference time: 0.885 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 05:56:04
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.885, 'Precision': [nan, 0.5], 'Learning time': 1.342, 'AUC PR': 1.0, 'CLL': -0.152968, 'AUC ROC': 1.0}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5154069996156371;  // std dev = 0,475, 496,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 5,96e-08, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.47099430546442184;  // std dev = 10,089, 474,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=326 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0,000, 490,000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.33209152002582154;  // std dev = 0,480, 510,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360578;  // std dev = 0,000, 513,000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2636482634123829;  // std dev = 0,478, 505,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783553;  // std dev = 3,15e-07, 469,000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.2049489288424879;  // std dev = 10,671, 501,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926147;  // std dev = 0,000, 504,000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1631464791740477;  // std dev = 0,474, 494,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,43e-07, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.1590925589545194;  // std dev = 0,460, 468,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109197;  // std dev = 0,000, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09962706497255824;  // std dev = 0,468, 482,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333696;  // std dev = 1,43e-07, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.07832911694203343;  // std dev = 10,227, 480,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=326 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420348;  // std dev = 0,000, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.02864463655649849;  // std dev = 0,478, 503,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202536;  // std dev = 2,46e-07, 515,000 (wgt'ed) examples reached here.  /* #neg=515 */


Results
   AUC ROC   = 0.857618
   AUC PR    = 0.056112
   CLL	      = -0.327191
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 2.504 seconds
Total inference time: 1.426 seconds
AUC ROC: 0.857618


Results scoring model
   AUC ROC   = 0.871431
   AUC PR    = 0.103954
   CLL	      = -0.304232
   Precision = 0.103954 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.18833


Total scoring time: 2.453 seconds
Parameter learned model CLL: -0.304232


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [5.96e-08, 491, 0], 'true,true': [0.475, 170, 326], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [10.089, 148, 326], 'false': [0.0, 490, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 513, 0], 'true,true': [0.48, 184, 326], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [3.15e-07, 469, 0], 'true,true': [0.478, 179, 326], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [0.0, 504, 0], 'true,true': [10.671, 175, 326], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.43e-07, 493, 0], 'true,true': [0.474, 168, 326], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [0.0, 483, 0], 'true,true': [0.46, 142, 326], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.43e-07, 491, 0], 'true,true': [0.468, 156, 326], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 463, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [10.227, 154, 326], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.46e-07, 515, 0], 'true,true': [0.478, 177, 326], 'true,false': [0.0, 0, 0]}]]
[{'': [0.2252699011446437, 7.235669406925663e-18], 'true': [0.2252699011446437, nan]}, {'': [0.21474478805034883, -1.395708945243054e-16], 'true': [0.21474478805034883, nan], 'true,true': [0.21474478805034883, nan], 'true,true,true': [0.21474478805034883, nan]}, {'': [0.23061899269511577, -6.92536779493275e-18], 'true': [0.23061899269511577, nan]}, {'': [0.22881678266836436, 2.1210230918211945e-16], 'true': [0.22881678266836436, nan]}, {'': [0.22728993111581175, -3.348291661567932e-17], 'true': [0.22728993111581175, nan]}, {'': [0.22442590437476567, 4.143631572637501e-17], 'true': [0.22442590437476567, nan]}, {'': [0.21135583315070383, -2.7583180736028734e-17], 'true': [0.21135583315070383, nan]}, {'': [0.2189011897178098, 4.160509908982257e-17], 'true': [0.2189011897178098, nan]}, {'': [0.21789930555555584, -1.2373111894310599e-16], 'true': [0.21789930555555584, nan], 'true,true': [0.21789930555555584, nan]}, {'': [0.22806303333083103, 1.1727404376623014e-16], 'true': [0.22806303333083103, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048802;  // std dev = 0,000, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else return -0.14185106490048738;  // std dev = 2,27e-07, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839133;  // std dev = 4,71e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else return -0.12544463852839233;  // std dev = 0,000, 476,000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1123163781936064;  // std dev = 6,32e-08, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   else return -0.11231637819360593;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783649;  // std dev = 0,000, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else return -0.10159632948783552;  // std dev = 3,20e-07, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926083;  // std dev = 6,50e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   else return -0.09269127618926142;  // std dev = 0,000, 492,000 (wgt'ed) examples reached here.  /* #neg=492 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 4,94e-08, 149,000 (wgt'ed) examples reached here.  /* #neg=149 */
%   else return -0.08518475138839678;  // std dev = 1,50e-07, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109155;  // std dev = 7,74e-08, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   else return -0.07877675473109212;  // std dev = 1,13e-07, 509,000 (wgt'ed) examples reached here.  /* #neg=509 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1770964977452765;  // std dev = 2,76e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0732462257633369;  // std dev = 6,32e-08, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
%   else return -0.07324622576333718;  // std dev = 5,58e-08, 451,000 (wgt'ed) examples reached here.  /* #neg=451 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420265;  // std dev = 6,75e-08, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
%   else return -0.06842697784420354;  // std dev = 0,000, 492,000 (wgt'ed) examples reached here.  /* #neg=492 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   else return -0.06419184008202536;  // std dev = 2,45e-07, 512,000 (wgt'ed) examples reached here.  /* #neg=512 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.577 seconds
Total inference time: 1.557 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.143 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.677 seconds
Total inference time: 1.557 seconds
AUC ROC: 1.0
Total revision time: 10.677
Best scored revision CLL: -0.064216


Dataset: 54_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 05:56:20
{'parameter_1.0': {'F1': 0.106262, 'Inference time': 1.426, 'Precision': [0.056112, 0.5], 'AUC ROC': 0.857618, 'AUC PR': 0.056112, 'Recall': 1.0, 'Learning time': 2.504, 'CLL': -0.327191}, 'F1': 1.0, 'Inference time': 1.557, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 10.677, 'CLL': -0.063421}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.14185106490048854;  // std dev = 0,000, 617,000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839224;  // std dev = 0,000, 552,000 (wgt'ed) examples reached here.  /* #neg=552 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360624;  // std dev = 6,14e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return -0.1123163781936057;  // std dev = 0,000, 596,000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783619;  // std dev = 4,83e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.10159632948783551;  // std dev = 3,53e-07, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.0926912761892617;  // std dev = 0,000, 590,000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.08518475138839678;  // std dev = 1,43e-07, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07877675473109219;  // std dev = 0,000, 554,000 (wgt'ed) examples reached here.  /* #neg=554 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452765;  // std dev = 2,76e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07324622576333689;  // std dev = 1,59e-07, 599,000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0684269778442036;  // std dev = 0,000, 565,000 (wgt'ed) examples reached here.  /* #neg=565 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return -0.06419184008202553;  // std dev = 2,38e-07, 581,000 (wgt'ed) examples reached here.  /* #neg=581 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.226 seconds
Total inference time: 1.243 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 05:56:26
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.243, 'Precision': [1.0, 0.5], 'Learning time': 4.226, 'AUC PR': 1.0, 'CLL': -0.063421, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048854;  // std dev = 0,000, 618,000 (wgt'ed) examples reached here.  /* #neg=618 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.294 seconds
Total inference time: 0.858 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 05:56:28
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.858, 'Precision': [nan, 0.5], 'Learning time': 1.294, 'AUC PR': 1.0, 'CLL': -0.152968, 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5538011090125565;  // std dev = 0,460, 92,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.40409215791044145;  // std dev = 4,883, 102,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3084325422578081;  // std dev = 0,488, 105,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2577906305777047;  // std dev = 0,483, 102,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5,58e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.24938780014647954;  // std dev = 4,519, 94,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4,47e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11039713744215644;  // std dev = 0,489, 106,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.1320981760559077;  // std dev = 0,476, 98,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109162;  // std dev = 5,16e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.06756831070879103;  // std dev = 0,485, 103,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.0509385078575449;  // std dev = 4,923, 103,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=64 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4,83e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.004300522429932868;  // std dev = 0,492, 109,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */


Results
   AUC ROC   = 0.868098
   AUC PR    = 0.060354
   CLL	      = -0.281556
   Precision = 0.060354 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.113837


Total learning time: 1.32 seconds
Total inference time: 1.747 seconds
AUC ROC: 0.868098


Results scoring model
   AUC ROC   = 0.863321
   AUC PR    = 0.09771
   CLL	      = -0.292267
   Precision = 0.09771 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.178025


Total scoring time: 1.135 seconds
Parameter learned model CLL: -0.292267


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [7.88e-08, 85, 0], 'true,true': [0.46, 28, 64], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [4.883, 38, 64], 'false': [0.0, 96, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [6.66e-08, 82, 0], 'true,true': [0.488, 41, 64], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [5.58e-08, 84, 0], 'true,true': [0.483, 38, 64], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [4.47e-08, 98, 0], 'true,true': [4.519, 30, 64], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [5.16e-08, 88, 0], 'true,true': [0.489, 42, 64], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [5.16e-08, 89, 0], 'true,true': [0.476, 34, 64], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 91, 0], 'true,true': [0.485, 39, 64], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [4.83e-08, 100, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [4.923, 39, 64], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 75, 0], 'true,true': [0.492, 45, 64], 'true,false': [0.0, 0, 0]}]]
[{'': [0.21172022684309946, 7.314410515177502e-17], 'true': [0.21172022684309946, nan]}, {'': [0.2337562475970757, -1.3877787807814457e-17], 'true': [0.2337562475970757, nan], 'true,true': [0.2337562475970757, nan], 'true,true,true': [0.2337562475970757, nan]}, {'': [0.2380045351473928, 5.415722071342227e-17], 'true': [0.2380045351473928, nan]}, {'': [0.23375624759707792, 3.700743415417188e-17], 'true': [0.23375624759707792, nan]}, {'': [0.2172928927116346, 2.0391851472706958e-17], 'true': [0.2172928927116346, nan]}, {'': [0.23923104307582735, 3.027880976250427e-17], 'true': [0.23923104307582735, nan]}, {'': [0.2265722615576845, 2.993859841685815e-17], 'true': [0.2265722615576845, nan]}, {'': [0.2352719389197851, -7.93016446160826e-18], 'true': [0.2352719389197851, nan]}, {'': [0.23527193891978523, 2.3314683517128286e-17], 'true': [0.23527193891978523, nan], 'true,true': [0.23527193891978523, nan]}, {'': [0.2424038380607688, -9.62193288008469e-18], 'true': [0.2424038380607688, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839127;  // std dev = 3,65e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else return -0.1254446385283914;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.116288858205988;  // std dev = 0,113, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.1123163781936062;  // std dev = 7,74e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10403681985195479;  // std dev = 0,105, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.1015963294878362;  // std dev = 5,27e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.0975032854705594;  // std dev = 0,136, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.09269127618926105;  // std dev = 2,36e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08680572422436965;  // std dev = 0,091, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.08518475138839682;  // std dev = 4,83e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08251929863855006;  // std dev = 0,119, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109161;  // std dev = 5,58e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07719664157035086;  // std dev = 0,111, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333707;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1527438580936707;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07331941698571445;  // std dev = 0,127, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420265;  // std dev = 5,16e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06452755112762985;  // std dev = 0,071, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.06419184008202626;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063109
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.736 seconds
Total inference time: 1.331 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064641
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.252 seconds
Refined model CLL: -0.064641


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063109
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.443 seconds
Total inference time: 1.331 seconds
AUC ROC: 1.0
Total revision time: 5.443
Best scored revision CLL: -0.064641


Dataset: 54_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 05:56:38
{'parameter_0.2': {'F1': 0.113837, 'Inference time': 1.747, 'Precision': [0.060354, 0.5], 'AUC ROC': 0.868098, 'AUC PR': 0.060354, 'Recall': 1.0, 'Learning time': 1.32, 'CLL': -0.281556}, 'F1': 1.0, 'Inference time': 1.331, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 5.443, 'CLL': -0.063109}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048768;  // std dev = 6,32e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839133;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360622;  // std dev = 8,30e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1015963294878364;  // std dev = 0,000, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.09269127618926098;  // std dev = 4,21e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839679;  // std dev = 4,83e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109164;  // std dev = 5,05e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07324622576333704;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06842697784420267;  // std dev = 4,47e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06419184008202626;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.358 seconds
Total inference time: 1.27 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 05:56:42
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.27, 'Precision': [1.0, 0.5], 'Learning time': 2.358, 'AUC PR': 1.0, 'CLL': -0.063422, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.817 seconds
Total inference time: 0.944 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 05:56:44
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.944, 'Precision': [nan, 0.5], 'Learning time': 0.817, 'AUC PR': 1.0, 'CLL': -0.152985, 'AUC ROC': 1.0}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.48741722778243596;  // std dev = 0,483, 205,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048838;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.44948348772728447;  // std dev = 6,608, 195,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283916;  // std dev = 0,000, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.40060507401748097;  // std dev = 0,459, 185,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936064;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.23083058552777946;  // std dev = 0,486, 209,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783652;  // std dev = 0,000, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.1994493142027162;  // std dev = 6,798, 201,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 9,42e-08, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.14040582245969802;  // std dev = 0,482, 204,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7,60e-08, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.07297847508357218;  // std dev = 0,490, 215,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 7,60e-08, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0934448440671538;  // std dev = 0,480, 202,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333667;  // std dev = 1,14e-07, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.06724249376258547;  // std dev = 6,857, 203,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420262;  // std dev = 8,09e-08, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.06035838137302316;  // std dev = 0,479, 200,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */


Results
   AUC ROC   = 0.868098
   AUC PR    = 0.060354
   CLL	      = -0.290855
   Precision = 0.060354 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.113837


Total learning time: 1.714 seconds
Total inference time: 1.398 seconds
AUC ROC: 0.868098


Results scoring model
   AUC ROC   = 0.865434
   AUC PR    = 0.099768
   CLL	      = -0.298032
   Precision = 0.099768 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.181435


Total scoring time: 1.754 seconds
Parameter learned model CLL: -0.298032


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 198, 0], 'true,true': [0.483, 76, 129], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [6.608, 66, 129], 'false': [0.0, 191, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 172, 0], 'true,true': [0.459, 56, 129], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 187, 0], 'true,true': [0.486, 80, 129], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [9.42e-08, 203, 0], 'true,true': [6.798, 72, 129], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [7.6e-08, 196, 0], 'true,true': [0.482, 75, 129], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [7.6e-08, 191, 0], 'true,true': [0.49, 86, 129], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.14e-07, 193, 0], 'true,true': [0.48, 73, 129], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [8.09e-08, 197, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [6.857, 74, 129], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 190, 0], 'true,true': [0.479, 71, 129], 'true,false': [0.0, 0, 0]}]]
[{'': [0.23328970850684533, -2.377447285055891e-16], 'true': [0.23328970850684533, nan]}, {'': [0.22390532544378763, -2.790089276544896e-17], 'true': [0.22390532544378763, nan], 'true,true': [0.22390532544378763, nan], 'true,true,true': [0.22390532544378763, nan]}, {'': [0.21107377647918427, -2.581914010756178e-18], 'true': [0.21107377647918427, nan]}, {'': [0.23625832741924227, -8.786791852648298e-17], 'true': [0.23625832741924227, nan]}, {'': [0.2298952996212972, 4.375263151232144e-17], 'true': [0.2298952996212972, nan]}, {'': [0.23248269896193796, 2.945489657168783e-17], 'true': [0.23248269896193796, nan]}, {'': [0.24000000000000007, 3.022596716256971e-17], 'true': [0.24000000000000007, nan]}, {'': [0.23078619743162412, 6.787892067656397e-17], 'true': [0.23078619743162412, nan]}, {'': [0.23164842631464028, 3.325033424004276e-17], 'true': [0.23164842631464028, nan], 'true,true': [0.23164842631464028, nan]}, {'': [0.22897500000000023, -3.505967446184705e-18], 'true': [0.22897500000000023, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048843;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.1254446385283915;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360629;  // std dev = 4,83e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return -0.11231637819360649;  // std dev = 0,000, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1015963294878362;  // std dev = 4,34e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.10159632948783653;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.09269127618926058;  // std dev = 8,82e-08, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694898;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.08518475138839678;  // std dev = 7,74e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.07877675473109147;  // std dev = 7,30e-08, 200,000 (wgt'ed) examples reached here.  /* #neg=200 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07324622576333668;  // std dev = 1,12e-07, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420268;  // std dev = 2,24e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06842697784420262;  // std dev = 7,38e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.06419184008202626;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.56 seconds
Total inference time: 1.429 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.572 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.6000000000000005 seconds
Total inference time: 1.429 seconds
AUC ROC: 1.0
Total revision time: 7.6000000000000005
Best scored revision CLL: -0.064216


Dataset: 54_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 05:56:55
{'F1': 1.0, 'Inference time': 1.429, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_0.4': {'F1': 0.113837, 'Inference time': 1.398, 'Precision': [0.060354, 0.5], 'AUC ROC': 0.868098, 'AUC PR': 0.060354, 'Recall': 1.0, 'Learning time': 1.714, 'CLL': -0.290855}, 'Recall': 1.0, 'Learning time': 7.6000000000000005, 'CLL': -0.063422}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.14185106490048835;  // std dev = 0,000, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.12544463852839183;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360686;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.10159632948783649;  // std dev = 0,000, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926055;  // std dev = 6,32e-08, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 6,83e-08, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109146;  // std dev = 6,83e-08, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07324622576333674;  // std dev = 1,10e-07, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420261;  // std dev = 5,77e-08, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202623;  // std dev = 1,49e-08, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.627 seconds
Total inference time: 1.312 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 05:56:59
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.312, 'Precision': [1.0, 0.5], 'Learning time': 2.627, 'AUC PR': 1.0, 'CLL': -0.063422, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048846;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.989 seconds
Total inference time: 0.908 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 05:57:01
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.908, 'Precision': [nan, 0.5], 'Learning time': 0.989, 'AUC PR': 1.0, 'CLL': -0.152985, 'AUC ROC': 1.0}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5225324967433441;  // std dev = 0,472, 292,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048813;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.46272013548705326;  // std dev = 7,870, 285,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=194 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.34852562132019094;  // std dev = 0,475, 296,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360692;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.25687321144912;  // std dev = 0,479, 302,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783662;  // std dev = 0,000, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.19881348699208526;  // std dev = 8,279, 300,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926044;  // std dev = 1,32e-07, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1881461051339906;  // std dev = 0,464, 283,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,03e-07, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.08763541908420802;  // std dev = 0,482, 307,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109143;  // std dev = 5,58e-08, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.05586932009290687;  // std dev = 0,485, 312,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333688;  // std dev = 1,10e-07, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.04419805605486681;  // std dev = 8,543, 311,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=194 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420294;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0499378698949968;  // std dev = 0,480, 303,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202608;  // std dev = 8,82e-08, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */


Results
   AUC ROC   = 0.868098
   AUC PR    = 0.060354
   CLL	      = -0.2928
   Precision = 0.060354 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.113837


Total learning time: 1.9 seconds
Total inference time: 1.498 seconds
AUC ROC: 0.868098


Results scoring model
   AUC ROC   = 0.865192
   AUC PR    = 0.099846
   CLL	      = -0.300347
   Precision = 0.099846 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.181563


Total scoring time: 2.073 seconds
Parameter learned model CLL: -0.300347


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 263, 0], 'true,true': [0.472, 98, 194], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [7.87, 91, 194], 'false': [0.0, 228, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 269, 0], 'true,true': [0.475, 102, 194], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 295, 0], 'true,true': [0.479, 108, 194], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.32e-07, 276, 0], 'true,true': [8.279, 106, 194], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.03e-07, 300, 0], 'true,true': [0.464, 89, 194], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [5.58e-08, 271, 0], 'true,true': [0.482, 113, 194], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.1e-07, 273, 0], 'true,true': [0.485, 118, 194], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 288, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [8.543, 117, 194], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [8.82e-08, 277, 0], 'true,true': [0.48, 109, 194], 'true,false': [0.0, 0, 0]}]]
[{'': [0.2229780446612922, -7.767339792054327e-17], 'true': [0.2229780446612922, nan]}, {'': [0.21734687596182872, -5.0641752000445734e-17], 'true': [0.21734687596182872, nan], 'true,true': [0.21734687596182872, nan], 'true,true,true': [0.21734687596182872, nan]}, {'': [0.22584915997078162, -1.0730780163663223e-16], 'true': [0.22584915997078162, nan]}, {'': [0.2297267663698934, -5.419393747322798e-17], 'true': [0.2297267663698934, nan]}, {'': [0.22848888888888633, 6.275173617446536e-17], 'true': [0.22848888888888633, nan]}, {'': [0.21558516150782228, 3.552713678800501e-17], 'true': [0.21558516150782228, nan]}, {'': [0.23259663232501276, 1.1470938999817116e-17], 'true': [0.23259663232501276, nan]}, {'': [0.23516600920447045, 4.3920910864291905e-17], 'true': [0.23516600920447045, nan]}, {'': [0.23467499302116443, -4.625929269271486e-17], 'true': [0.23467499302116443, nan], 'true,true': [0.23467499302116443, nan]}, {'': [0.2303260028973204, 2.805617751760323e-17], 'true': [0.2303260028973204, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else return -0.14185106490048816;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839144;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return -0.1254446385283919;  // std dev = 0,000, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360622;  // std dev = 7,60e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return -0.11231637819360674;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1015963294878363;  // std dev = 2,98e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else return -0.1015963294878366;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return -0.09269127618926043;  // std dev = 1,49e-07, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0851847513883968;  // std dev = 2,79e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else return -0.08518475138839678;  // std dev = 9,77e-08, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109166;  // std dev = 4,21e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return -0.07877675473109143;  // std dev = 5,77e-08, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return -0.07324622576333695;  // std dev = 1,02e-07, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420267;  // std dev = 4,47e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else return -0.06842697784420296;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else return -0.06419184008202596;  // std dev = 1,16e-07, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.865 seconds
Total inference time: 1.644 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.163 seconds
Refined model CLL: -0.064221


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.001 seconds
Total inference time: 1.644 seconds
AUC ROC: 1.0
Total revision time: 9.001
Best scored revision CLL: -0.064221


Dataset: 54_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 05:57:14
{'F1': 1.0, 'Inference time': 1.644, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_0.6': {'F1': 0.113837, 'Inference time': 1.498, 'Precision': [0.060354, 0.5], 'AUC ROC': 0.868098, 'AUC PR': 0.060354, 'Recall': 1.0, 'Learning time': 1.9, 'CLL': -0.2928}, 'Recall': 1.0, 'Learning time': 9.001, 'CLL': -0.063422}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.1418510649004878;  // std dev = 1,19e-07, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.1254446385283921;  // std dev = 0,000, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360678;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.10159632948783658;  // std dev = 0,000, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.09269127618926047;  // std dev = 1,53e-07, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08518475138839682;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.07877675473109147;  // std dev = 0,000, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07324622576333706;  // std dev = 8,02e-08, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420314;  // std dev = 0,000, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.06419184008202594;  // std dev = 1,20e-07, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.462 seconds
Total inference time: 1.4 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 05:57:19
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.4, 'Precision': [1.0, 0.5], 'Learning time': 3.462, 'AUC PR': 1.0, 'CLL': -0.063422, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.14185106490048796;  // std dev = 0,000, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.144 seconds
Total inference time: 0.9 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 05:57:21
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.9, 'Precision': [nan, 0.5], 'Learning time': 1.144, 'AUC PR': 1.0, 'CLL': -0.152985, 'AUC ROC': 1.0}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5105418822027827;  // std dev = 0,476, 397,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004874;  // std dev = 2,81e-07, 383,000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.47288524310441543;  // std dev = 8,977, 376,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=259 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0,000, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.316104526498885;  // std dev = 0,485, 416,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936064;  // std dev = 0,000, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.297048555118503;  // std dev = 0,469, 384,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783588;  // std dev = 2,31e-07, 407,000 (wgt'ed) examples reached here.  /* #neg=407 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.20637651025086018;  // std dev = 9,443, 395,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926065;  // std dev = 1,80e-07, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.14676082124464448;  // std dev = 0,478, 400,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,26e-07, 369,000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.12504446713798556;  // std dev = 0,473, 391,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109143;  // std dev = 2,08e-07, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09077148409410016;  // std dev = 0,474, 393,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333768;  // std dev = 0,000, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.07887137319752524;  // std dev = 9,255, 387,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=259 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420332;  // std dev = 0,000, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.03819188058297662;  // std dev = 0,478, 400,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202565;  // std dev = 1,84e-07, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */


Results
   AUC ROC   = 0.868098
   AUC PR    = 0.060354
   CLL	      = -0.303026
   Precision = 0.060354 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.113837


Total learning time: 2.055 seconds
Total inference time: 1.513 seconds
AUC ROC: 0.868098


Results scoring model
   AUC ROC   = 0.867457
   AUC PR    = 0.101489
   CLL	      = -0.30639
   Precision = 0.101489 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184276


Total scoring time: 2.511 seconds
Parameter learned model CLL: -0.30639


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.81e-07, 383, 0], 'true,true': [0.476, 138, 259], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [8.977, 117, 259], 'false': [0.0, 367, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 363, 0], 'true,true': [0.485, 157, 259], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.31e-07, 407, 0], 'true,true': [0.469, 125, 259], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.8e-07, 370, 0], 'true,true': [9.443, 136, 259], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.26e-07, 369, 0], 'true,true': [0.478, 141, 259], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [2.08e-07, 360, 0], 'true,true': [0.473, 132, 259], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 355, 0], 'true,true': [0.474, 134, 259], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 388, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [9.255, 128, 259], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.84e-07, 381, 0], 'true,true': [0.478, 141, 259], 'true,false': [0.0, 0, 0]}]]
[{'': [0.2267763896731821, 2.0639132990420664e-16], 'true': [0.2267763896731821, nan]}, {'': [0.21434331145315108, -1.210052342915702e-16], 'true': [0.21434331145315108, nan], 'true,true': [0.21434331145315108, nan], 'true,true,true': [0.21434331145315108, nan]}, {'': [0.23497018306213102, -2.9361270072731413e-17], 'true': [0.23497018306213102, nan]}, {'': [0.2195570203993021, 1.3093539356758603e-16], 'true': [0.2195570203993021, nan]}, {'': [0.22575869251722172, 8.761760086230966e-17], 'true': [0.22575869251722172, nan]}, {'': [0.22824374999999775, 4.332577657073782e-17], 'true': [0.22824374999999775, nan]}, {'': [0.2236249108783981, 1.1965737043182242e-16], 'true': [0.2236249108783981, nan]}, {'': [0.22470847982181888, -6.630064259733329e-17], 'true': [0.22470847982181888, nan]}, {'': [0.22135421883033118, -1.0816090291451267e-16], 'true': [0.22135421883033118, nan], 'true,true': [0.22135421883033118, nan]}, {'': [0.22824374999999977, 8.858472427455317e-17], 'true': [0.22824374999999977, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048774;  // std dev = 4,71e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else return -0.14185106490048732;  // std dev = 3,01e-07, 406,000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1254446385283912;  // std dev = 6,99e-08, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else return -0.12544463852839222;  // std dev = 0,000, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360625;  // std dev = 8,02e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else return -0.11231637819360639;  // std dev = 0,000, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else return -0.10159632948783597;  // std dev = 2,09e-07, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926078;  // std dev = 8,16e-08, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else return -0.09269127618926085;  // std dev = 1,52e-07, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839683;  // std dev = 6,14e-08, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else return -0.08518475138839678;  // std dev = 1,21e-07, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.0787767547310916;  // std dev = 6,32e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else return -0.07877675473109143;  // std dev = 1,15e-07, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333721;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else return -0.0732462257633377;  // std dev = 0,000, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06842697784420265;  // std dev = 4,83e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return -0.06842697784420321;  // std dev = 0,000, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else return -0.06419184008202565;  // std dev = 1,81e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.029 seconds
Total inference time: 1.469 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.259 seconds
Refined model CLL: -0.064223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.854000000000001 seconds
Total inference time: 1.469 seconds
AUC ROC: 1.0
Total revision time: 9.854000000000001
Best scored revision CLL: -0.064223


Dataset: 54_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 05:57:35
{'F1': 1.0, 'Inference time': 1.469, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter_0.8': {'F1': 0.113837, 'Inference time': 1.513, 'Precision': [0.060354, 0.5], 'AUC ROC': 0.868098, 'AUC PR': 0.060354, 'Recall': 1.0, 'Learning time': 2.055, 'CLL': -0.303026}, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 9.854000000000001, 'CLL': -0.063422}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.14185106490048718;  // std dev = 3,01e-07, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.12544463852839222;  // std dev = 0,000, 441,000 (wgt'ed) examples reached here.  /* #neg=441 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360603;  // std dev = 0,000, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.10159632948783597;  // std dev = 2,27e-07, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.09269127618926111;  // std dev = 9,66e-08, 454,000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.0851847513883968;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.08518475138839679;  // std dev = 1,33e-07, 442,000 (wgt'ed) examples reached here.  /* #neg=442 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.07877675473109164;  // std dev = 2,05e-07, 446,000 (wgt'ed) examples reached here.  /* #neg=446 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07324622576333768;  // std dev = 0,000, 454,000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420337;  // std dev = 0,000, 433,000 (wgt'ed) examples reached here.  /* #neg=433 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.06419184008202568;  // std dev = 2,00e-07, 495,000 (wgt'ed) examples reached here.  /* #neg=495 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.714 seconds
Total inference time: 1.374 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 05:57:40
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.374, 'Precision': [1.0, 0.5], 'Learning time': 3.714, 'AUC PR': 1.0, 'CLL': -0.063422, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048763;  // std dev = 2,11e-07, 411,000 (wgt'ed) examples reached here.  /* #neg=411 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.264 seconds
Total inference time: 0.899 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 05:57:43
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.899, 'Precision': [nan, 0.5], 'Learning time': 1.264, 'AUC PR': 1.0, 'CLL': -0.152985, 'AUC ROC': 1.0}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5345581209032658;  // std dev = 0,468, 479,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048746;  // std dev = 1,88e-07, 476,000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.45355814796453503;  // std dev = 10,284, 481,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=324 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0,000, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.35644519688708015;  // std dev = 0,472, 488,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360586;  // std dev = 0,000, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2869315134252805;  // std dev = 0,468, 480,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878355;  // std dev = 3,24e-07, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.20732509762108048;  // std dev = 10,414, 487,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926129;  // std dev = 0,000, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.16249586933954663;  // std dev = 0,469, 482,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,40e-07, 440,000 (wgt'ed) examples reached here.  /* #neg=440 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.09654738740912873;  // std dev = 0,478, 501,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109168;  // std dev = 1,98e-07, 440,000 (wgt'ed) examples reached here.  /* #neg=440 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10390464881048632;  // std dev = 0,467, 478,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633375;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.04630644438587507;  // std dev = 10,718, 502,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=324 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442035;  // std dev = 0,000, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.07049143038816857;  // std dev = 0,466, 476,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820254;  // std dev = 2,43e-07, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */


Results
   AUC ROC   = 0.868098
   AUC PR    = 0.060354
   CLL	      = -0.308608
   Precision = 0.060354 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.113837


Total learning time: 2.263 seconds
Total inference time: 1.79 seconds
AUC ROC: 0.868098


Results scoring model
   AUC ROC   = 0.86826
   AUC PR    = 0.102112
   CLL	      = -0.310321
   Precision = 0.102112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.185302


Total scoring time: 2.782 seconds
Parameter learned model CLL: -0.310321


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.88e-07, 476, 0], 'true,true': [0.468, 155, 324], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [10.284, 157, 324], 'false': [0.0, 493, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 491, 0], 'true,true': [0.472, 164, 324], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [3.24e-07, 477, 0], 'true,true': [0.468, 156, 324], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [0.0, 465, 0], 'true,true': [10.414, 163, 324], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.4e-07, 440, 0], 'true,true': [0.469, 158, 324], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.98e-07, 440, 0], 'true,true': [0.478, 177, 324], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 469, 0], 'true,true': [0.467, 154, 324], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 468, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [10.718, 178, 324], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.43e-07, 481, 0], 'true,true': [0.466, 152, 324], 'true,false': [0.0, 0, 0]}]]
[{'': [0.21887979916405803, 7.463684199160717e-17], 'true': [0.21887979916405803, nan]}, {'': [0.21986419491617074, -1.3872157873612505e-16], 'true': [0.21986419491617074, nan], 'true,true': [0.21986419491617074, nan], 'true,true,true': [0.21986419491617074, nan]}, {'': [0.22312550389679825, -3.6178347034628316e-18], 'true': [0.22312550389679825, nan]}, {'': [0.21937500000000335, 2.1971709334300793e-16], 'true': [0.21937500000000335, nan]}, {'': [0.22267665673001236, -2.865091676452017e-18], 'true': [0.22267665673001236, nan]}, {'': [0.22034744580844107, 4.4408920985006264e-17], 'true': [0.22034744580844107, nan]}, {'': [0.22847717738176157, 8.881784197001253e-17], 'true': [0.22847717738176157, nan]}, {'': [0.21837852978764405, -3.78754123539499e-17], 'true': [0.21837852978764405, nan]}, {'': [0.22885351026174156, -1.2240920527918394e-16], 'true': [0.22885351026174156, nan], 'true,true': [0.22885351026174156, nan]}, {'': [0.21735753124779422, 1.2233226674663886e-16], 'true': [0.21735753124779422, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1418510649004883;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
%   else return -0.1418510649004878;  // std dev = 0,000, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839133;  // std dev = 4,21e-08, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   else return -0.12544463852839227;  // std dev = 0,000, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360656;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   else return -0.11231637819360579;  // std dev = 0,000, 505,000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783649;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   else return -0.10159632948783562;  // std dev = 2,95e-07, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0926912761892607;  // std dev = 8,02e-08, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else return -0.09269127618926135;  // std dev = 0,000, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839678;  // std dev = 6,66e-08, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
%   else return -0.08518475138839678;  // std dev = 1,43e-07, 497,000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109154;  // std dev = 8,02e-08, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else return -0.07877675473109187;  // std dev = 0,000, 467,000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527653;  // std dev = 2,73e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07324622576333688;  // std dev = 6,58e-08, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   else return -0.07324622576333685;  // std dev = 1,71e-07, 512,000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420267;  // std dev = 6,05e-08, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   else return -0.06842697784420351;  // std dev = 0,000, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
%   else return -0.06419184008202537;  // std dev = 2,46e-07, 496,000 (wgt'ed) examples reached here.  /* #neg=496 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.641 seconds
Total inference time: 1.598 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.238 seconds
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.924 seconds
Total inference time: 1.598 seconds
AUC ROC: 1.0
Total revision time: 10.924
Best scored revision CLL: -0.064225


Dataset: 54_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 05:57:58
{'parameter_1.0': {'F1': 0.113837, 'Inference time': 1.79, 'Precision': [0.060354, 0.5], 'AUC ROC': 0.868098, 'AUC PR': 0.060354, 'Recall': 1.0, 'Learning time': 2.263, 'CLL': -0.308608}, 'F1': 1.0, 'Inference time': 1.598, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 10.924, 'CLL': -0.063422}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048827;  // std dev = 0,000, 585,000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.1254446385283923;  // std dev = 0,000, 595,000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360624;  // std dev = 5,87e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.11231637819360568;  // std dev = 0,000, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783617;  // std dev = 4,83e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.10159632948783552;  // std dev = 3,55e-07, 598,000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.09269127618926178;  // std dev = 0,000, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839679;  // std dev = 1,97e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839678;  // std dev = 1,37e-07, 543,000 (wgt'ed) examples reached here.  /* #neg=543 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109243;  // std dev = 0,000, 601,000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0732462257633365;  // std dev = 2,52e-07, 595,000 (wgt'ed) examples reached here.  /* #neg=595 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1710641429619365;  // std dev = 0,699, 332,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=324 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15352616063362487;  // std dev = 1,76e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 2,47e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06870178583248061;  // std dev = 0,054, 630,000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134617465625934;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06428680256920925;  // std dev = 0,033, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063429
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.231 seconds
Total inference time: 1.407 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 05:58:03
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.407, 'Precision': [1.0, 0.5], 'Learning time': 4.231, 'AUC PR': 1.0, 'CLL': -0.063429, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.14185106490048854;  // std dev = 0,000, 617,000 (wgt'ed) examples reached here.  /* #neg=617 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.445 seconds
Total inference time: 0.892 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 05:58:06
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.892, 'Precision': [nan, 0.5], 'Learning time': 1.445, 'AUC PR': 1.0, 'CLL': -0.152985, 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5361150367944275;  // std dev = 0,467, 59,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.45766025924559106;  // std dev = 3,589, 59,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3163044286589631;  // std dev = 0,484, 64,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.23547226644616828;  // std dev = 0,487, 65,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 4,08e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.13469957439205252;  // std dev = 4,140, 70,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1096115307024744;  // std dev = 0,494, 69,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.11791881962416985;  // std dev = 0,487, 65,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0980805761039179;  // std dev = 0,484, 64,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.24871536672816633;  // std dev = 2,828, 50,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.03343418234921828;  // std dev = 0,478, 62,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */


Results
   AUC ROC   = 0.888089
   AUC PR    = 0.183316
   CLL	      = -0.274976
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 1.107 seconds
Total inference time: 1.9 seconds
AUC ROC: 0.888089


Results scoring model
   AUC ROC   = 0.853134
   AUC PR    = 0.05988
   CLL	      = -0.330731
   Precision = 0.05988 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.112994


Total scoring time: 1.24 seconds
Parameter learned model CLL: -0.330731


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [5.16e-08, 49, 0], 'true,true': [0.467, 19, 40], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [3.589, 19, 40], 'false': [0.0, 43, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [4.71e-08, 62, 0], 'true,true': [0.484, 24, 40], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [4.08e-08, 58, 0], 'true,true': [0.487, 25, 40], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [0.0, 47, 0], 'true,true': [4.14, 30, 40], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.11e-08, 45, 0], 'true,true': [0.494, 29, 40], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [0.0, 49, 0], 'true,true': [0.487, 25, 40], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [7.45e-09, 56, 0], 'true,true': [0.484, 24, 40], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [1.83e-08, 57, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.828, 10, 40], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 57, 0], 'true,true': [0.478, 22, 40], 'true,false': [0.0, 0, 0]}]]
[{'': [0.21832806664751578, 5.437827059388522e-17], 'true': [0.21832806664751578, nan]}, {'': [0.2183280666475155, -2.840105411831796e-17], 'true': [0.2183280666475155, nan], 'true,true': [0.2183280666475155, nan], 'true,true,true': [0.2183280666475155, nan]}, {'': [0.23437499999999953, 3.581364595565021e-17], 'true': [0.23437499999999953, nan]}, {'': [0.2366863905325445, 2.871266442996095e-17], 'true': [0.2366863905325445, nan]}, {'': [0.2448979591836733, -3.543264972207946e-18], 'true': [0.2448979591836733, nan]}, {'': [0.24364629279563116, 9.86864910777917e-18], 'true': [0.24364629279563116, nan]}, {'': [0.2366863905325443, -1.1328806373726086e-18], 'true': [0.2366863905325443, nan]}, {'': [0.234375, 9.912705577010326e-19], 'true': [0.234375, nan]}, {'': [0.16000000000000023, 5.843279076974508e-18], 'true': [0.16000000000000023, nan], 'true,true': [0.16000000000000023, nan]}, {'': [0.2289281997918835, -2.921639538487254e-18], 'true': [0.2289281997918835, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1304472820529286;  // std dev = 0,153, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11181857408443241;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.10118588978212915;  // std dev = 9,13e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.10159632948783617;  // std dev = 4,47e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( actor(A) )
%   | | then return -0.09234751256665864;  // std dev = 7,45e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.18805210196780606;  // std dev = 0,332, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926105;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( female(B) )
%   | | then return -0.08489292503019906;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.08489292503019905;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11133372007749497;  // std dev = 0,330, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253542;  // std dev = 5,96e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.07701311742231651;  // std dev = 0,013, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.07146860114255274;  // std dev = 0,009, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936709;  // std dev = 3,94e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.06740164074234527;  // std dev = 0,006, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06263387716191725;  // std dev = 0,012, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.1340070300080111;  // std dev = 1,83e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087253
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.695 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06362
   Precision = 0.97561 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.987654


Total scoring time: 1.395 seconds
Refined model CLL: -0.06362


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087253
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 5.436999999999999 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0
Total revision time: 5.436999999999999
Best scored revision CLL: -0.06362


Dataset: 54_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 05:58:15
{'parameter_0.2': {'F1': 0.309835, 'Inference time': 1.9, 'Precision': [0.183316, 0.5], 'AUC ROC': 0.888089, 'AUC PR': 0.183316, 'Recall': 1.0, 'Learning time': 1.107, 'CLL': -0.274976}, 'F1': 0.770563, 'Inference time': 1.328, 'Precision': [0.626761, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 5.436999999999999, 'CLL': -0.087253}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6,50e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360625;  // std dev = 5,67e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783616;  // std dev = 5,87e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.18914811060656223;  // std dev = 0,074, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.19945291311954882;  // std dev = 0,054, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else return -0.07877675473109169;  // std dev = 3,33e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17909620054059558;  // std dev = 0,004, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09430232984102989;  // std dev = 0,000761, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15425922238527492;  // std dev = 0,004, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.0862116270343241;  // std dev = 0,000664, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06840797670573136;  // std dev = 0,001, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419298151357476;  // std dev = 2,69e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1351889948482627;  // std dev = 0,004, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.08016218419378046;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102814
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.791 seconds
Total inference time: 1.37 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 05:58:19
{'F1': 0.770563, 'Recall': 1.0, 'Inference time': 1.37, 'Precision': [0.626761, 0.5], 'Learning time': 1.791, 'AUC PR': 1.0, 'CLL': -0.102814, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( female(A) )
%   | then return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.236324
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.762 seconds
Total inference time: 0.913 seconds
AUC ROC: 0.848575


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 05:58:21
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.913, 'Precision': [nan, 0.5], 'Learning time': 0.762, 'AUC PR': 0.136922, 'CLL': -0.236324, 'AUC ROC': 0.848575}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.4671714914904885;  // std dev = 0,488, 133,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 4,71e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.4393081183743093;  // std dev = 5,340, 125,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=81 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3576161229141632;  // std dev = 0,478, 125,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 7,88e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.22210000850215658;  // std dev = 0,492, 137,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.20572054163590758;  // std dev = 5,490, 129,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926087;  // std dev = 6,99e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.16985179774435652;  // std dev = 0,479, 126,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6,05e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.08015112291252478;  // std dev = 0,491, 136,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109157;  // std dev = 6,32e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0973921294778862;  // std dev = 0,482, 128,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 4,94e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.058776679536013496;  // std dev = 5,560, 131,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=81 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5,27e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.07402495079682961;  // std dev = 0,478, 125,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 3,33e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */


Results
   AUC ROC   = 0.888089
   AUC PR    = 0.183316
   CLL	      = -0.262196
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 1.532 seconds
Total inference time: 1.427 seconds
AUC ROC: 0.888089


Results scoring model
   AUC ROC   = 0.855506
   AUC PR    = 0.061503
   CLL	      = -0.307487
   Precision = 0.061503 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.11588


Total scoring time: 1.918 seconds
Parameter learned model CLL: -0.307487


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [4.71e-08, 119, 0], 'true,true': [0.488, 52, 81], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [5.34, 44, 81], 'false': [7.88e-08, 112, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [7.88e-08, 104, 0], 'true,true': [0.478, 44, 81], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 112, 0], 'true,true': [0.492, 56, 81], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [6.99e-08, 115, 0], 'true,true': [5.49, 48, 81], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [6.05e-08, 112, 0], 'true,true': [0.479, 45, 81], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [6.32e-08, 110, 0], 'true,true': [0.491, 55, 81], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [4.94e-08, 109, 0], 'true,true': [0.482, 47, 81], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [5.27e-08, 107, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.56, 50, 81], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [3.33e-08, 121, 0], 'true,true': [0.478, 44, 81], 'true,false': [0.0, 0, 0]}]]
[{'': [0.23811408219797736, 1.8659210497901792e-17], 'true': [0.23811408219797736, nan]}, {'': [0.22809599999999872, 5.551115123125783e-17], 'true': [0.22809599999999872, nan], 'true,true': [0.22809599999999872, nan], 'true,true,true': [0.22809599999999872, nan]}, {'': [0.22809600000000177, 5.978123978750843e-17], 'true': [0.22809600000000177, nan]}, {'': [0.2416751025627369, -7.93016446160826e-18], 'true': [0.2416751025627369, nan]}, {'': [0.23363980530016343, 4.247809833348425e-17], 'true': [0.23363980530016343, nan]}, {'': [0.22959183673469405, 3.271192840413408e-17], 'true': [0.22959183673469405, nan]}, {'': [0.24086288927335667, 3.633457171500512e-17], 'true': [0.24086288927335667, nan]}, {'': [0.2323608398437495, 2.2408171139223344e-17], 'true': [0.2323608398437495, nan]}, {'': [0.23600023308665033, 2.5939790294980293e-17], 'true': [0.23600023308665033, nan], 'true,true': [0.23600023308665033, nan]}, {'': [0.22809599999999985, 9.175396897728567e-18], 'true': [0.22809599999999985, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return -0.11231637819360618;  // std dev = 8,82e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583104;  // std dev = 8,43e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.10159632948783635;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return -0.09269127618926087;  // std dev = 6,58e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839679;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return -0.08518475138839682;  // std dev = 5,48e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return -0.07877675473109155;  // std dev = 6,66e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527716;  // std dev = 3,65e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07324622576333722;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0.15274385809367116;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return -0.06842697784420264;  // std dev = 5,48e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1340070300080109;  // std dev = 5,58e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06419184008202626;  // std dev = 0,000, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.124249
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.004 seconds
Total inference time: 1.417 seconds
AUC ROC: 0.985041


Results scoring model
   AUC ROC   = 0.999649
   AUC PR    = 0.964286
   CLL	      = -0.064967
   Precision = 0.964286 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.981818


Total scoring time: 1.624 seconds
Refined model CLL: -0.064967


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.124249
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 7.078000000000001 seconds
Total inference time: 1.417 seconds
AUC ROC: 0.985041
Total revision time: 7.078000000000001
Best scored revision CLL: -0.064967


Dataset: 54_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 05:58:31
{'F1': 0.770563, 'Inference time': 1.417, 'Precision': [0.626761, 0.5], 'AUC ROC': 0.985041, 'AUC PR': 0.626761, 'parameter_0.4': {'F1': 0.309835, 'Inference time': 1.427, 'Precision': [0.183316, 0.5], 'AUC ROC': 0.888089, 'AUC PR': 0.183316, 'Recall': 1.0, 'Learning time': 1.532, 'CLL': -0.262196}, 'Recall': 1.0, 'Learning time': 7.078000000000001, 'CLL': -0.124249}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004881;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12640193451148185;  // std dev = 0,155, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1122209698508866;  // std dev = 3,65e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10151768811987703;  // std dev = 9,31e-08, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 8,43e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09262533450466283;  // std dev = 1,46e-05, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08512886968439291;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07872876799695142;  // std dev = 5,58e-08, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527716;  // std dev = 3,65e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.07320459587088846;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.15580279921086784;  // std dev = 0,452, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0732045958708884;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06826357071387157;  // std dev = 0,010, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367116;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080109;  // std dev = 5,58e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06416731140293964;  // std dev = 2,98e-08, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.12296491724096127;  // std dev = 0,168, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06416731140293964;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.085233
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.434 seconds
Total inference time: 1.511 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 05:58:36
{'F1': 0.770563, 'Recall': 1.0, 'Inference time': 1.511, 'Precision': [0.626761, 0.5], 'Learning time': 2.434, 'AUC PR': 1.0, 'CLL': -0.085233, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1418510649004883;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.865 seconds
Total inference time: 0.929 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 05:58:38
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.929, 'Precision': [nan, 0.5], 'Learning time': 0.865, 'AUC PR': 1.0, 'CLL': -0.188432, 'AUC ROC': 1.0}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.4837899607405349;  // std dev = 0,484, 195,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.383672415961199;  // std dev = 7,028, 205,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=122 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 164,000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3842564971962881;  // std dev = 0,471, 183,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936066;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2593777329004558;  // std dev = 0,484, 195,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783641;  // std dev = 0,000, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.23477112252111096;  // std dev = 6,412, 184,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926061;  // std dev = 8,43e-08, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.14239574335419874;  // std dev = 0,483, 194,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7,45e-08, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.09723778601816252;  // std dev = 0,486, 197,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109148;  // std dev = 8,30e-08, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.13915047172007688;  // std dev = 0,464, 178,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333667;  // std dev = 1,13e-07, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.08987217603740863;  // std dev = 6,342, 182,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=122 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420262;  // std dev = 7,60e-08, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0681575412697312;  // std dev = 0,470, 182,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */


Results
   AUC ROC   = 0.888089
   AUC PR    = 0.183316
   CLL	      = -0.274369
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 1.835 seconds
Total inference time: 1.533 seconds
AUC ROC: 0.888089


Results scoring model
   AUC ROC   = 0.858613
   AUC PR    = 0.063017
   CLL	      = -0.320174
   Precision = 0.063017 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.118562


Total scoring time: 1.803 seconds
Parameter learned model CLL: -0.320174


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 192, 0], 'true,true': [0.484, 73, 122], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [7.028, 83, 122], 'false': [0.0, 164, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 193, 0], 'true,true': [0.471, 61, 122], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 133, 0], 'true,true': [0.484, 73, 122], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [8.43e-08, 176, 0], 'true,true': [6.412, 62, 122], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [7.45e-08, 177, 0], 'true,true': [0.483, 72, 122], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [8.3e-08, 171, 0], 'true,true': [0.486, 75, 122], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.13e-07, 192, 0], 'true,true': [0.464, 56, 122], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [7.6e-08, 179, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [6.342, 60, 122], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 171, 0], 'true,true': [0.47, 60, 122], 'true,false': [0.0, 0, 0]}]]
[{'': [0.23421433267587505, -2.266705341943028e-16], 'true': [0.23421433267587505, nan]}, {'': [0.24095181439618876, 0.0], 'true': [0.24095181439618876, nan], 'true,true': [0.24095181439618876, nan], 'true,true,true': [0.24095181439618876, nan]}, {'': [0.2222222222222217, -2.0708823257256806e-17], 'true': [0.2222222222222217, nan]}, {'': [0.23421433267587033, -4.340721600038206e-17], 'true': [0.23421433267587033, nan]}, {'': [0.22341682419659745, 4.0371746350005693e-17], 'true': [0.22341682419659745, nan]}, {'': [0.23339355935806122, 3.136223233404397e-17], 'true': [0.23339355935806122, nan]}, {'': [0.23577005333814327, 4.025370030804661e-17], 'true': [0.23577005333814327, nan]}, {'': [0.21562933972983317, 6.707597440443654e-17], 'true': [0.21562933972983317, nan]}, {'': [0.22098780340538535, 3.2252288983524104e-17], 'true': [0.22098780340538535, nan], 'true,true': [0.22098780340538535, nan]}, {'': [0.2209878034053858, -6.492532307749453e-18], 'true': [0.2209878034053858, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048827;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.12544463852839155;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.11231637819360643;  // std dev = 5,16e-08, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.4175135841583093;  // std dev = 3,53e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10530836187468273;  // std dev = 0,236, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.10159632948783653;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09237956738124861;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0.3207118471601499;  // std dev = 2,19e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else return -0.0926912761892606;  // std dev = 8,69e-08, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08492014340619922;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0.2551722425694898;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else return -0.08518475138839678;  // std dev = 6,99e-08, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07854949314619408;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0.2097577156325354;  // std dev = 1,93e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else return -0.0787767547310915;  // std dev = 8,56e-08, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1770964977452781;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( actor(A) )
%   | | then return -0.07304904125101194;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.15910533452631226;  // std dev = 0,385, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333674;  // std dev = 9,37e-08, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06759514864473253;  // std dev = 0,014, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0.1527438580936714;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else return -0.06842697784420262;  // std dev = 7,81e-08, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06342104221856779;  // std dev = 0,014, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0.1340070300080111;  // std dev = 5,16e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else return -0.06419184008202626;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.085232
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.352 seconds
Total inference time: 1.496 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064401
   Precision = 0.931298 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.964427


Total scoring time: 2.15 seconds
Refined model CLL: -0.064401


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.085232
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 8.14 seconds
Total inference time: 1.496 seconds
AUC ROC: 1.0
Total revision time: 8.14
Best scored revision CLL: -0.064401


Dataset: 54_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 05:58:49
{'F1': 0.770563, 'Inference time': 1.496, 'Precision': [0.626761, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_0.6': {'F1': 0.309835, 'Inference time': 1.533, 'Precision': [0.183316, 0.5], 'AUC ROC': 0.888089, 'AUC PR': 0.183316, 'Recall': 1.0, 'Learning time': 1.835, 'CLL': -0.274369}, 'Recall': 1.0, 'Learning time': 8.14, 'CLL': -0.085232}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048835;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839172;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360656;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583093;  // std dev = 3,53e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783656;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926912761892605;  // std dev = 1,23e-07, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2,19e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08518475138839678;  // std dev = 8,30e-08, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109147;  // std dev = 7,15e-08, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1,93e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452781;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07324622576333668;  // std dev = 1,19e-07, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0684269778442027;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 2,11e-08, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080111;  // std dev = 5,16e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079079
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.733 seconds
Total inference time: 1.425 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 05:58:54
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.425, 'Precision': [1.0, 0.5], 'Learning time': 2.733, 'AUC PR': 1.0, 'CLL': -0.079079, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048852;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.011 seconds
Total inference time: 0.921 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 05:58:56
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.921, 'Precision': [nan, 0.5], 'Learning time': 1.011, 'AUC PR': 1.0, 'CLL': -0.188432, 'AUC ROC': 1.0}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5344974828173512;  // std dev = 0,468, 241,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048813;  // std dev = 0,000, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.40449295379179967;  // std dev = 7,823, 261,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=163 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.32029578033014955;  // std dev = 0,486, 264,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360686;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2637613919763894;  // std dev = 0,482, 258,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783652;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.2105311876598572;  // std dev = 7,642, 254,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0926912761892605;  // std dev = 6,50e-08, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.14594282798587335;  // std dev = 0,483, 259,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8,30e-08, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.08833901892120184;  // std dev = 0,488, 268,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109146;  // std dev = 6,32e-08, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08747672998782507;  // std dev = 0,483, 259,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333681;  // std dev = 1,16e-07, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.06585385787304347;  // std dev = 7,773, 259,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=163 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.07238546310877086;  // std dev = 0,476, 250,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */


Results
   AUC ROC   = 0.888089
   AUC PR    = 0.183316
   CLL	      = -0.264499
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 1.959 seconds
Total inference time: 1.49 seconds
AUC ROC: 0.888089


Results scoring model
   AUC ROC   = 0.859949
   AUC PR    = 0.063697
   CLL	      = -0.303585
   Precision = 0.063697 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.119765


Total scoring time: 2.027 seconds
Parameter learned model CLL: -0.303585


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 262, 0], 'true,true': [0.468, 78, 163], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [7.823, 98, 163], 'false': [0.0, 225, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 253, 0], 'true,true': [0.486, 101, 163], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 198, 0], 'true,true': [0.482, 95, 163], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [6.5e-08, 216, 0], 'true,true': [7.642, 91, 163], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [8.3e-08, 218, 0], 'true,true': [0.483, 96, 163], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [6.32e-08, 229, 0], 'true,true': [0.488, 105, 163], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.16e-07, 256, 0], 'true,true': [0.483, 96, 163], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 250, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [7.773, 96, 163], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 204, 0], 'true,true': [0.476, 87, 163], 'true,false': [0.0, 0, 0]}]]
[{'': [0.21890118971781328, -8.474984920802722e-17], 'true': [0.21890118971781328, nan]}, {'': [0.234494502429504, -4.9343245538895844e-17], 'true': [0.234494502429504, nan], 'true,true': [0.234494502429504, nan], 'true,true,true': [0.234494502429504, nan]}, {'': [0.23621154729109314, -9.47858392565351e-17], 'true': [0.23621154729109314, nan]}, {'': [0.2326332552130264, -9.195786668612408e-17], 'true': [0.2326332552130264, nan]}, {'': [0.22991195982391932, 1.9531701359146273e-17], 'true': [0.22991195982391932, nan]}, {'': [0.23327022554821744, 3.1575150241632894e-17], 'true': [0.23327022554821744, nan]}, {'': [0.23829082200935572, 1.7453287723364907e-17], 'true': [0.23829082200935572, nan]}, {'': [0.2332702255482171, 5.2909066017292616e-17], 'true': [0.2332702255482171, nan]}, {'': [0.23327022554821827, -6.217248937900877e-18], 'true': [0.23327022554821827, nan], 'true,true': [0.23327022554821827, nan]}, {'': [0.22689599999999965, -2.1769078914218755e-18], 'true': [0.22689599999999965, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.14185106490048766;  // std dev = 8,02e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return -0.14185106490048846;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return -0.12544463852839177;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360622;  // std dev = 6,50e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return -0.11231637819360696;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10412367068739131;  // std dev = 0,236, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return -0.10159632948783656;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09247894648339346;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return -0.09269127618926047;  // std dev = 8,16e-08, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.0881738495065485;  // std dev = 0,303, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return -0.08518475138839678;  // std dev = 8,69e-08, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.0816524797754379;  // std dev = 0,288, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return -0.07877675473109144;  // std dev = 6,83e-08, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.0755786515326498;  // std dev = 0,276, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return -0.07324622576333682;  // std dev = 1,14e-07, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06775990918342592;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return -0.06842697784420261;  // std dev = 5,96e-08, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06730865929399749;  // std dev = 0,302, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return -0.06419184008202625;  // std dev = 1,83e-08, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075873
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.61 seconds
Total inference time: 1.36 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063894
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.796 seconds
Refined model CLL: -0.063894


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075873
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.392 seconds
Total inference time: 1.36 seconds
AUC ROC: 1.0
Total revision time: 8.392
Best scored revision CLL: -0.063894


Dataset: 54_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 05:59:08
{'F1': 1.0, 'Inference time': 1.36, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter_0.8': {'F1': 0.309835, 'Inference time': 1.49, 'Precision': [0.183316, 0.5], 'AUC ROC': 0.888089, 'AUC PR': 0.183316, 'Recall': 1.0, 'Learning time': 1.959, 'CLL': -0.264499}, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 8.392, 'CLL': -0.075873}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048785;  // std dev = 7,30e-08, 317,000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839205;  // std dev = 0,000, 321,000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1123163781936067;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783659;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926049;  // std dev = 1,65e-07, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 1,07e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109143;  // std dev = 3,65e-08, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333698;  // std dev = 9,77e-08, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06842697784420312;  // std dev = 0,000, 330,000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06419184008202618;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06419184008202608;  // std dev = 8,56e-08, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067763
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.293 seconds
Total inference time: 1.426 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 05:59:13
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.426, 'Precision': [1.0, 0.5], 'Learning time': 3.293, 'AUC PR': 1.0, 'CLL': -0.067763, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048802;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.177 seconds
Total inference time: 0.954 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 05:59:15
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.954, 'Precision': [nan, 0.5], 'Learning time': 1.177, 'AUC PR': 1.0, 'CLL': -0.188432, 'AUC ROC': 1.0}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5204865974371707;  // std dev = 0,473, 308,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004876;  // std dev = 2,09e-07, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.40622014639911763;  // std dev = 8,760, 327,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=204 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0,000, 338,000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.34693992770249166;  // std dev = 0,480, 318,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360674;  // std dev = 0,000, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.25826181250546293;  // std dev = 0,483, 324,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783662;  // std dev = 0,000, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.21015743808464812;  // std dev = 8,528, 317,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926043;  // std dev = 1,83e-07, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.20835702085842978;  // std dev = 0,461, 294,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.0806468312975686;  // std dev = 0,486, 330,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109144;  // std dev = 5,37e-08, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.04425813551226057;  // std dev = 0,490, 339,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333703;  // std dev = 8,82e-08, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.0631785188021725;  // std dev = 8,669, 323,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=204 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420299;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.05367232897392871;  // std dev = 0,481, 320,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202601;  // std dev = 1,04e-07, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */


Results
   AUC ROC   = 0.888089
   AUC PR    = 0.183316
   CLL	      = -0.264349
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 1.971 seconds
Total inference time: 1.553 seconds
AUC ROC: 0.888089


Results scoring model
   AUC ROC   = 0.861638
   AUC PR    = 0.064496
   CLL	      = -0.300565
   Precision = 0.064496 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.121176


Total scoring time: 2.048 seconds
Parameter learned model CLL: -0.300565


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.09e-07, 341, 0], 'true,true': [0.473, 104, 204], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [8.76, 123, 204], 'false': [0.0, 338, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 314, 0], 'true,true': [0.48, 114, 204], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 295, 0], 'true,true': [0.483, 120, 204], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.83e-07, 313, 0], 'true,true': [8.528, 113, 204], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.07e-07, 309, 0], 'true,true': [0.461, 90, 204], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [5.37e-08, 263, 0], 'true,true': [0.486, 126, 204], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [8.82e-08, 318, 0], 'true,true': [0.49, 135, 204], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 298, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [8.669, 119, 204], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.04e-07, 290, 0], 'true,true': [0.481, 116, 204], 'true,false': [0.0, 0, 0]}]]
[{'': [0.22364648338674775, 1.276268110419535e-16], 'true': [0.22364648338674775, nan]}, {'': [0.23466038212271595, -1.1562085936924707e-16], 'true': [0.23466038212271595, nan], 'true,true': [0.23466038212271595, nan], 'true,true,true': [0.23466038212271595, nan]}, {'': [0.22997508009967788, -4.6671795939656264e-17], 'true': [0.22997508009967788, nan]}, {'': [0.23319615912208658, -5.419393747322798e-17], 'true': [0.23319615912208658, nan]}, {'': [0.22939824259371389, 1.0641115251998306e-16], 'true': [0.22939824259371389, nan]}, {'': [0.21241149521032815, 3.7366729631396854e-17], 'true': [0.21241149521032815, nan]}, {'': [0.23603305785124035, 1.0975588836598506e-17], 'true': [0.23603305785124035, nan]}, {'': [0.23964288511238074, 2.4438871611245585e-17], 'true': [0.23964288511238074, nan]}, {'': [0.23268698060941864, -5.513859316930308e-17], 'true': [0.23268698060941864, nan], 'true,true': [0.23268698060941864, nan]}, {'': [0.2310937499999995, 3.7517881521815636e-17], 'true': [0.2310937499999995, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048774;  // std dev = 4,71e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else return -0.14185106490048785;  // std dev = 9,42e-08, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1254446385283911;  // std dev = 7,45e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return -0.125444638528392;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 8,82e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.11231637819360693;  // std dev = 0,000, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10230855221237159;  // std dev = 0,079, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return -0.10159632948783662;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0939776286346259;  // std dev = 0,103, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else return -0.09269127618926042;  // std dev = 1,62e-07, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08568024142836213;  // std dev = 0,068, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return -0.08518475138839678;  // std dev = 1,03e-07, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07859594802220292;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else return -0.07877675473109141;  // std dev = 4,71e-08, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07409060016636373;  // std dev = 0,097, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else return -0.07324622576333693;  // std dev = 1,02e-07, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0690240039563947;  // std dev = 0,091, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else return -0.06842697784420293;  // std dev = 0,000, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06477949054994304;  // std dev = 0,087, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return -0.06419184008202608;  // std dev = 8,69e-08, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068001
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.934 seconds
Total inference time: 1.483 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063602
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.149 seconds
Refined model CLL: -0.063602


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068001
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.102 seconds
Total inference time: 1.483 seconds
AUC ROC: 1.0
Total revision time: 9.102
Best scored revision CLL: -0.063602


Dataset: 54_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 05:59:28
{'parameter_1.0': {'F1': 0.309835, 'Inference time': 1.553, 'Precision': [0.183316, 0.5], 'AUC ROC': 0.888089, 'AUC PR': 0.183316, 'Recall': 1.0, 'Learning time': 1.971, 'CLL': -0.264349}, 'F1': 1.0, 'Inference time': 1.483, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 9.102, 'CLL': -0.068001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048754;  // std dev = 2,27e-07, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.12544463852839222;  // std dev = 0,000, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.11231637819360639;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.10159632948783609;  // std dev = 1,79e-07, 409,000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.09269127618926097;  // std dev = 1,26e-07, 416,000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109144;  // std dev = 9,88e-08, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333718;  // std dev = 4,71e-08, 387,000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06842697784420342;  // std dev = 0,000, 427,000 (wgt'ed) examples reached here.  /* #neg=427 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06419184008202572;  // std dev = 1,73e-07, 386,000 (wgt'ed) examples reached here.  /* #neg=386 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.755 seconds
Total inference time: 1.406 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 05:59:33
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.406, 'Precision': [1.0, 0.5], 'Learning time': 3.755, 'AUC PR': 1.0, 'CLL': -0.065435, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048766;  // std dev = 1,88e-07, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.221 seconds
Total inference time: 0.886 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 05:59:36
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.886, 'Precision': [nan, 0.5], 'Learning time': 1.221, 'AUC PR': 1.0, 'CLL': -0.188432, 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5560656017661798;  // std dev = 0,459, 96,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.4204788798939717;  // std dev = 4,882, 104,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.378642827406941;  // std dev = 0,465, 98,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,83e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.27277153590442915;  // std dev = 0,473, 101,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.1575834154482777;  // std dev = 5,081, 109,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926104;  // std dev = 2,79e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10182865765134282;  // std dev = 0,490, 112,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 5,37e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.1688928043970062;  // std dev = 0,462, 97,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109158;  // std dev = 6,14e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.05665275913424159;  // std dev = 0,485, 108,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.010122317133802836;  // std dev = 5,256, 114,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 3,41e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0767980934542789;  // std dev = 0,475, 102,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 0.85431
   AUC PR    = 0.075503
   CLL	      = -0.314902
   Precision = 0.075503 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.140406


Total learning time: 1.456 seconds
Total inference time: 1.231 seconds
AUC ROC: 0.85431


Results scoring model
   AUC ROC   = 0.867963
   AUC PR    = 0.093185
   CLL	      = -0.292934
   Precision = 0.093185 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.170483


Total scoring time: 1.273 seconds
Parameter learned model CLL: -0.292934


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [8.43e-08, 107, 0], 'true,true': [0.459, 29, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [4.882, 37, 67], 'false': [0.0, 110, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [6.83e-08, 84, 0], 'true,true': [0.465, 31, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [3.65e-08, 100, 0], 'true,true': [0.473, 34, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [2.79e-08, 90, 0], 'true,true': [5.081, 42, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [5.37e-08, 92, 0], 'true,true': [0.49, 45, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [6.14e-08, 105, 0], 'true,true': [0.462, 30, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 90, 0], 'true,true': [0.485, 41, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [3.41e-08, 74, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.256, 47, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 115, 0], 'true,true': [0.475, 35, 67], 'true,false': [0.0, 0, 0]}]]
[{'': [0.21082899305555472, 6.640586315514955e-17], 'true': [0.21082899305555472, nan]}, {'': [0.22919748520709876, -8.074349270001138e-18], 'true': [0.22919748520709876, nan], 'true,true': [0.22919748520709876, nan], 'true,true,true': [0.22919748520709876, nan]}, {'': [0.21626405664306458, 5.551115123125783e-17], 'true': [0.21626405664306458, nan]}, {'': [0.2233114400548965, 1.3322676295501878e-17], 'true': [0.2233114400548965, nan]}, {'': [0.23684875010520923, 8.635067969306773e-18], 'true': [0.23684875010520923, nan]}, {'': [0.24035395408163338, 3.137586808723268e-17], 'true': [0.24035395408163338, nan]}, {'': [0.21362525241789782, 3.595007889262412e-17], 'true': [0.21362525241789782, nan]}, {'': [0.2355109739368995, -8.018277400070574e-18], 'true': [0.2355109739368995, nan]}, {'': [0.2423053247152974, 1.5753164538600193e-17], 'true': [0.2423053247152974, nan], 'true,true': [0.2423053247152974, nan]}, {'': [0.2253940792003076, -1.7860109526578604e-17], 'true': [0.2253940792003076, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.12544463852839147;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return -0.11231637819360622;  // std dev = 6,99e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10314646130006007;  // std dev = 0,078, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783624;  // std dev = 4,83e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09256099300304263;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return -0.09269127618926089;  // std dev = 6,32e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.0914176298656738;  // std dev = 0,179, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.08518475138839682;  // std dev = 5,96e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07822317600984337;  // std dev = 1,29e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07877675473109162;  // std dev = 5,16e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07684083691927221;  // std dev = 0,161, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07324622576333707;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08383763320100186;  // std dev = 0,327, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420264;  // std dev = 5,67e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06627672777114704;  // std dev = 0,144, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.06419184008202626;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063697
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.902 seconds
Total inference time: 1.294 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064812
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.341 seconds
Refined model CLL: -0.064812


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063697
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.972 seconds
Total inference time: 1.294 seconds
AUC ROC: 1.0
Total revision time: 5.972
Best scored revision CLL: -0.064812


Dataset: 54_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 05:59:45
{'parameter_0.2': {'F1': 0.140406, 'Inference time': 1.231, 'Precision': [0.075503, 0.5], 'AUC ROC': 0.85431, 'AUC PR': 0.075503, 'Recall': 1.0, 'Learning time': 1.456, 'CLL': -0.314902}, 'F1': 1.0, 'Inference time': 1.294, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 5.972, 'CLL': -0.063697}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048774;  // std dev = 4,71e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839113;  // std dev = 7,30e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360624;  // std dev = 8,30e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1015963294878364;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926098;  // std dev = 4,47e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839682;  // std dev = 6,23e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109158;  // std dev = 6,66e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333721;  // std dev = 0,000, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420265;  // std dev = 4,83e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06419184008202626;  // std dev = 0,000, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.193 seconds
Total inference time: 1.066 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 05:59:49
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.066, 'Precision': [1.0, 0.5], 'Learning time': 2.193, 'AUC PR': 1.0, 'CLL': -0.063847, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,16e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.998942
   AUC PR    = 0.918367
   CLL	      = -0.160872
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.84 seconds
Total inference time: 0.738 seconds
AUC ROC: 0.998942


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 05:59:50
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.738, 'Precision': [nan, 0.5], 'Learning time': 0.84, 'AUC PR': 0.918367, 'CLL': -0.160872, 'AUC ROC': 0.998942}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5315157692703635;  // std dev = 0,469, 199,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0,000, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.4125586344924843;  // std dev = 7,022, 212,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839163;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.4070718502197248;  // std dev = 0,456, 190,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360651;  // std dev = 0,000, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.22504556633985467;  // std dev = 0,487, 218,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878365;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.2223863219257294;  // std dev = 6,683, 201,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1,00e-07, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1415037897369262;  // std dev = 0,480, 209,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7,15e-08, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.13840350611446187;  // std dev = 0,469, 199,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 7,74e-08, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0974917967999454;  // std dev = 0,471, 201,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333667;  // std dev = 1,12e-07, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.06075604089979489;  // std dev = 6,812, 205,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420262;  // std dev = 7,38e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08682015705873118;  // std dev = 0,461, 193,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */


Results
   AUC ROC   = 0.85431
   AUC PR    = 0.075503
   CLL	      = -0.335387
   Precision = 0.075503 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.140406


Total learning time: 1.823 seconds
Total inference time: 1.151 seconds
AUC ROC: 0.85431


Results scoring model
   AUC ROC   = 0.870494
   AUC PR    = 0.094834
   CLL	      = -0.306614
   Precision = 0.094834 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.173239


Total scoring time: 1.752 seconds
Parameter learned model CLL: -0.306614


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 215, 0], 'true,true': [0.469, 65, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [7.022, 78, 134], 'false': [0.0, 197, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 186, 0], 'true,true': [0.456, 56, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 184, 0], 'true,true': [0.487, 84, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1e-07, 223, 0], 'true,true': [6.683, 67, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [7.15e-08, 188, 0], 'true,true': [0.48, 75, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [7.74e-08, 182, 0], 'true,true': [0.469, 65, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.12e-07, 190, 0], 'true,true': [0.471, 67, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [7.38e-08, 172, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [6.812, 71, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 171, 0], 'true,true': [0.461, 59, 134], 'true,false': [0.0, 0, 0]}]]
[{'': [0.21994394080958, -2.354705577809634e-16], 'true': [0.21994394080958, nan]}, {'': [0.23255606977572507, -4.9593718866504455e-17], 'true': [0.23255606977572507, nan], 'true,true': [0.23255606977572507, nan], 'true,true,true': [0.23255606977572507, nan]}, {'': [0.2078670360110812, -2.3875763970433474e-17], 'true': [0.2078670360110812, nan]}, {'': [0.2368487501052107, -8.930054763289303e-17], 'true': [0.2368487501052107, nan]}, {'': [0.2222222222222212, 4.4807207271867304e-17], 'true': [0.2222222222222212, nan]}, {'': [0.23007715024839245, 2.7165031453594255e-17], 'true': [0.23007715024839245, nan]}, {'': [0.21994394080957547, 3.294068314821893e-17], 'true': [0.21994394080957547, nan]}, {'': [0.22222222222222132, 6.544472566211448e-17], 'true': [0.22222222222222132, nan]}, {'': [0.2263890541344435, 3.162844663176318e-17], 'true': [0.2263890541344435, nan], 'true,true': [0.2263890541344435, nan]}, {'': [0.21224730865258162, -6.492532307749453e-18], 'true': [0.21224730865258162, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048768;  // std dev = 5,96e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.14185106490048843;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.12544463852839152;  // std dev = 0,000, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1123163781936063;  // std dev = 4,21e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.11231637819360656;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783619;  // std dev = 5,27e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return -0.10159632948783653;  // std dev = 0,000, 208,000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.09269127618926057;  // std dev = 9,19e-08, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.08518475138839678;  // std dev = 7,74e-08, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0787767547310917;  // std dev = 3,16e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.07877675473109148;  // std dev = 8,02e-08, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07324622576333671;  // std dev = 1,03e-07, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420268;  // std dev = 2,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   else return -0.06842697784420262;  // std dev = 8,16e-08, 200,000 (wgt'ed) examples reached here.  /* #neg=200 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06455777121525552;  // std dev = 0,020, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return -0.06419184008202626;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063871
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.728 seconds
Total inference time: 1.231 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064172
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.101 seconds
Refined model CLL: -0.064172


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063871
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.404 seconds
Total inference time: 1.231 seconds
AUC ROC: 1.0
Total revision time: 8.404
Best scored revision CLL: -0.064172


Dataset: 54_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 06:00:02
{'F1': 1.0, 'Inference time': 1.231, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_0.4': {'F1': 0.140406, 'Inference time': 1.151, 'Precision': [0.075503, 0.5], 'AUC ROC': 0.85431, 'AUC PR': 0.075503, 'Recall': 1.0, 'Learning time': 1.823, 'CLL': -0.335387}, 'Recall': 1.0, 'Learning time': 8.404, 'CLL': -0.063871}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048827;  // std dev = 0,000, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.12544463852839183;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.1123163781936067;  // std dev = 0,000, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.10159632948783656;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926055;  // std dev = 6,66e-08, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.08518475138839678;  // std dev = 8,30e-08, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.07877675473109144;  // std dev = 6,14e-08, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.07324622576333671;  // std dev = 1,18e-07, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.06842697784420261;  // std dev = 6,32e-08, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202618;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06419184008202626;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.902 seconds
Total inference time: 1.118 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 06:00:06
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.118, 'Precision': [1.0, 0.5], 'Learning time': 2.902, 'AUC PR': 1.0, 'CLL': -0.063847, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.14185106490048846;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.069 seconds
Total inference time: 0.782 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 06:00:08
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.782, 'Precision': [nan, 0.5], 'Learning time': 1.069, 'AUC PR': 1.0, 'CLL': -0.160469, 'AUC ROC': 1.0}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.540581367531941;  // std dev = 0,466, 296,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048785;  // std dev = 8,43e-08, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.49019361799618727;  // std dev = 7,637, 284,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283919;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3328709098526501;  // std dev = 0,477, 311,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936068;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.23667343388994172;  // std dev = 0,483, 321,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878366;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.18899546309779697;  // std dev = 8,537, 316,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926046;  // std dev = 1,59e-07, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1459833784029644;  // std dev = 0,479, 314,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,10e-07, 321,000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.10953906313736333;  // std dev = 0,479, 314,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109143;  // std dev = 2,98e-08, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08240673893657952;  // std dev = 0,479, 314,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333699;  // std dev = 9,42e-08, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.06842904261977269;  // std dev = 8,414, 311,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420297;  // std dev = 0,000, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.06682607112736311;  // std dev = 0,472, 304,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202589;  // std dev = 1,32e-07, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */


Results
   AUC ROC   = 0.85431
   AUC PR    = 0.075503
   CLL	      = -0.325138
   Precision = 0.075503 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.140406


Total learning time: 2.179 seconds
Total inference time: 1.076 seconds
AUC ROC: 0.85431


Results scoring model
   AUC ROC   = 0.87127
   AUC PR    = 0.09578
   CLL	      = -0.29635
   Precision = 0.09578 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.174816


Total scoring time: 2.002 seconds
Parameter learned model CLL: -0.29635


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [8.43e-08, 297, 0], 'true,true': [0.466, 94, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [7.637, 82, 202], 'false': [0.0, 263, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 305, 0], 'true,true': [0.477, 109, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 278, 0], 'true,true': [0.483, 119, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.59e-07, 285, 0], 'true,true': [8.537, 114, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.1e-07, 321, 0], 'true,true': [0.479, 112, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [2.98e-08, 304, 0], 'true,true': [0.479, 112, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [9.42e-08, 306, 0], 'true,true': [0.479, 112, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 294, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [8.414, 109, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.32e-07, 316, 0], 'true,true': [0.472, 102, 202], 'true,false': [0.0, 0, 0]}]]
[{'': [0.21671840759679076, 2.392399783704041e-17], 'true': [0.21671840759679076, nan]}, {'': [0.20536599880976444, -7.091918940571342e-17], 'true': [0.20536599880976444, nan], 'true,true': [0.20536599880976444, nan], 'true,true,true': [0.20536599880976444, nan]}, {'': [0.22764446190589094, -6.260929843787768e-17], 'true': [0.22764446190589094, nan]}, {'': [0.23328577944701534, -5.910539843328172e-17], 'true': [0.23328577944701534, nan]}, {'': [0.230612081397214, 8.881784197001253e-17], 'true': [0.230612081397214, nan]}, {'': [0.22946164144590028, 3.735329802477162e-17], 'true': [0.22946164144590028, nan]}, {'': [0.22946164144590114, 2.921639538487254e-18], 'true': [0.22946164144590114, nan]}, {'': [0.22946164144590114, 2.9025438552291676e-17], 'true': [0.22946164144590114, nan]}, {'': [0.2276444619058946, -5.1357255560891597e-17], 'true': [0.2276444619058946, nan], 'true,true': [0.2276444619058946, nan]}, {'': [0.2229484072022153, 5.551115123125783e-17], 'true': [0.2229484072022153, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048766;  // std dev = 8,02e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return -0.14185106490048796;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else return -0.125444638528392;  // std dev = 0,000, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360624;  // std dev = 6,99e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return -0.11231637819360657;  // std dev = 0,000, 334,000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783623;  // std dev = 4,94e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else return -0.10159632948783662;  // std dev = 0,000, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else return -0.09269127618926044;  // std dev = 1,76e-07, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 3,16e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return -0.08518475138839678;  // std dev = 1,03e-07, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109164;  // std dev = 4,71e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return -0.07877675473109144;  // std dev = 4,47e-08, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return -0.07324622576333693;  // std dev = 1,04e-07, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420267;  // std dev = 4,34e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return -0.06842697784420294;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return -0.06419184008202594;  // std dev = 1,19e-07, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.704 seconds
Total inference time: 1.267 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.972 seconds
Refined model CLL: -0.06406


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.857 seconds
Total inference time: 1.267 seconds
AUC ROC: 1.0
Total revision time: 8.857
Best scored revision CLL: -0.06406


Dataset: 54_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 06:00:20
{'F1': 1.0, 'Inference time': 1.267, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_0.6': {'F1': 0.140406, 'Inference time': 1.076, 'Precision': [0.075503, 0.5], 'AUC ROC': 0.85431, 'AUC PR': 0.075503, 'Recall': 1.0, 'Learning time': 2.179, 'CLL': -0.325138}, 'Recall': 1.0, 'Learning time': 8.857, 'CLL': -0.063847}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1418510649004878;  // std dev = 1,23e-07, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.12544463852839213;  // std dev = 0,000, 383,000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360647;  // std dev = 0,000, 401,000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.10159632948783649;  // std dev = 0,000, 383,000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.09269127618926051;  // std dev = 1,81e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.08518475138839678;  // std dev = 1,03e-07, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109147;  // std dev = 5,96e-08, 390,000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.0732462257633371;  // std dev = 6,99e-08, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06842697784420321;  // std dev = 0,000, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.06419184008202596;  // std dev = 1,22e-07, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.41 seconds
Total inference time: 1.161 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 06:00:25
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.161, 'Precision': [1.0, 0.5], 'Learning time': 3.41, 'AUC PR': 1.0, 'CLL': -0.063847, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048768;  // std dev = 1,76e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.201 seconds
Total inference time: 0.804 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 06:00:27
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.804, 'Precision': [nan, 0.5], 'Learning time': 1.201, 'AUC PR': 1.0, 'CLL': -0.160469, 'AUC ROC': 1.0}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5063417061838454;  // std dev = 0,478, 415,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048746;  // std dev = 2,55e-07, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.45726574968050715;  // std dev = 9,386, 400,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3718903642348269;  // std dev = 0,469, 399,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360611;  // std dev = 0,000, 423,000 (wgt'ed) examples reached here.  /* #neg=423 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.23105415046199707;  // std dev = 0,486, 436,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783588;  // std dev = 2,29e-07, 406,000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.18222832333531874;  // std dev = 10,055, 431,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 1,44e-07, 405,000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.16099489891187896;  // std dev = 0,478, 415,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,25e-07, 399,000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.14846312511588328;  // std dev = 0,468, 398,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109143;  // std dev = 1,10e-07, 387,000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0983583942323216;  // std dev = 0,473, 406,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633377;  // std dev = 0,000, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.0945247716389828;  // std dev = 9,238, 394,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420335;  // std dev = 0,000, 397,000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0582483851946167;  // std dev = 0,471, 402,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202561;  // std dev = 1,92e-07, 393,000 (wgt'ed) examples reached here.  /* #neg=393 */


Results
   AUC ROC   = 0.85431
   AUC PR    = 0.075503
   CLL	      = -0.332982
   Precision = 0.075503 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.140406


Total learning time: 2.428 seconds
Total inference time: 1.248 seconds
AUC ROC: 0.85431


Results scoring model
   AUC ROC   = 0.870089
   AUC PR    = 0.094885
   CLL	      = -0.305254
   Precision = 0.094885 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.173325


Total scoring time: 2.405 seconds
Parameter learned model CLL: -0.305254


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.55e-07, 367, 0], 'true,true': [0.478, 146, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [9.386, 131, 269], 'false': [0.0, 392, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 423, 0], 'true,true': [0.469, 130, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.29e-07, 406, 0], 'true,true': [0.486, 167, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.44e-07, 405, 0], 'true,true': [10.055, 162, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.25e-07, 399, 0], 'true,true': [0.478, 146, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.1e-07, 387, 0], 'true,true': [0.468, 129, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 389, 0], 'true,true': [0.473, 137, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 397, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [9.238, 125, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.92e-07, 393, 0], 'true,true': [0.471, 133, 269], 'true,false': [0.0, 0, 0]}]]
[{'': [0.22803890259834858, 1.7666764206569248e-16], 'true': [0.22803890259834858, nan]}, {'': [0.22024375000000446, -1.2688263138573217e-16], 'true': [0.22024375000000446, nan], 'true,true': [0.22024375000000446, nan], 'true,true,true': [0.22024375000000446, nan]}, {'': [0.21965942424985607, -1.4697988032862592e-17], 'true': [0.21965942424985607, nan]}, {'': [0.2363174396094617, 1.2907026296134824e-16], 'true': [0.2363174396094617, nan]}, {'': [0.2345917603802726, 5.153627867395788e-17], 'true': [0.2345917603802726, nan]}, {'': [0.22803890259834583, 3.895519384649672e-17], 'true': [0.22803890259834583, nan]}, {'': [0.21906643771622125, 3.0982968129074136e-17], 'true': [0.21906643771622125, nan]}, {'': [0.2235737338930797, -6.849705036247752e-17], 'true': [0.2235737338930797, nan]}, {'': [0.2166056842484995, -1.1242056823660275e-16], 'true': [0.2166056842484995, nan], 'true,true': [0.2166056842484995, nan]}, {'': [0.2213868468602269, 9.378983312355012e-17], 'true': [0.2213868468602269, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048807;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else return -0.1418510649004873;  // std dev = 3,01e-07, 411,000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839116;  // std dev = 7,60e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else return -0.12544463852839224;  // std dev = 0,000, 398,000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360618;  // std dev = 9,77e-08, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else return -0.11231637819360617;  // std dev = 0,000, 411,000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783638;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else return -0.10159632948783602;  // std dev = 1,92e-07, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926093;  // std dev = 5,96e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return -0.092691276189261;  // std dev = 1,30e-07, 417,000 (wgt'ed) examples reached here.  /* #neg=417 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 5,37e-08, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else return -0.08518475138839678;  // std dev = 1,25e-07, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109158;  // std dev = 7,07e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else return -0.07877675473109151;  // std dev = 1,07e-07, 418,000 (wgt'ed) examples reached here.  /* #neg=418 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333703;  // std dev = 2,11e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else return -0.07324622576333772;  // std dev = 0,000, 436,000 (wgt'ed) examples reached here.  /* #neg=436 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420265;  // std dev = 5,77e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else return -0.0684269778442034;  // std dev = 0,000, 427,000 (wgt'ed) examples reached here.  /* #neg=427 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else return -0.0641918400820256;  // std dev = 1,95e-07, 399,000 (wgt'ed) examples reached here.  /* #neg=399 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.213 seconds
Total inference time: 1.301 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064058
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.267 seconds
Refined model CLL: -0.064058


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.312999999999999 seconds
Total inference time: 1.301 seconds
AUC ROC: 1.0
Total revision time: 10.312999999999999
Best scored revision CLL: -0.064058


Dataset: 54_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 06:00:41
{'F1': 1.0, 'Inference time': 1.301, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter_0.8': {'F1': 0.140406, 'Inference time': 1.248, 'Precision': [0.075503, 0.5], 'AUC ROC': 0.85431, 'AUC PR': 0.075503, 'Recall': 1.0, 'Learning time': 2.428, 'CLL': -0.332982}, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 10.312999999999999, 'CLL': -0.063847}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1418510649004878;  // std dev = 0,000, 519,000 (wgt'ed) examples reached here.  /* #neg=519 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.12544463852839224;  // std dev = 0,000, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360617;  // std dev = 0,000, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.10159632948783591;  // std dev = 2,38e-07, 482,000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.09269127618926135;  // std dev = 0,000, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.08518475138839678;  // std dev = 1,28e-07, 497,000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07877675473109177;  // std dev = 0,000, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07324622576333721;  // std dev = 0,000, 521,000 (wgt'ed) examples reached here.  /* #neg=521 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.06842697784420351;  // std dev = 0,000, 513,000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.06419184008202565;  // std dev = 1,96e-07, 464,000 (wgt'ed) examples reached here.  /* #neg=464 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.021 seconds
Total inference time: 1.077 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 06:00:46
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.077, 'Precision': [1.0, 0.5], 'Learning time': 4.021, 'AUC PR': 1.0, 'CLL': -0.063847, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.14185106490048757;  // std dev = 1,26e-07, 502,000 (wgt'ed) examples reached here.  /* #neg=502 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.303 seconds
Total inference time: 0.801 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 06:00:48
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.801, 'Precision': [nan, 0.5], 'Learning time': 1.303, 'AUC PR': 1.0, 'CLL': -0.160469, 'AUC ROC': 1.0}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5362173455622846;  // std dev = 0,467, 497,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 1,79e-07, 478,000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.44306241012185976;  // std dev = 10,651, 508,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839235;  // std dev = 0,000, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.35130928456576405;  // std dev = 0,475, 513,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360579;  // std dev = 0,000, 506,000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.255928739637926;  // std dev = 0,480, 526,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783538;  // std dev = 3,53e-07, 502,000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.2271687791640326;  // std dev = 10,482, 500,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926148;  // std dev = 0,000, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12648495570444127;  // std dev = 0,483, 535,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,49e-07, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.1270969005644483;  // std dev = 0,473, 509,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109204;  // std dev = 1,35e-07, 495,000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.07426222824355845;  // std dev = 0,480, 526,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333689;  // std dev = 1,60e-07, 503,000 (wgt'ed) examples reached here.  /* #neg=503 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.08408850707362983;  // std dev = 10,567, 504,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420351;  // std dev = 0,000, 478,000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.06782761231538975;  // std dev = 0,469, 501,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202532;  // std dev = 2,47e-07, 537,000 (wgt'ed) examples reached here.  /* #neg=537 */


Results
   AUC ROC   = 0.85431
   AUC PR    = 0.075503
   CLL	      = -0.330299
   Precision = 0.075503 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.140406


Total learning time: 2.715 seconds
Total inference time: 1.28 seconds
AUC ROC: 0.85431


Results scoring model
   AUC ROC   = 0.870352
   AUC PR    = 0.095252
   CLL	      = -0.30245
   Precision = 0.095252 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.173935


Total scoring time: 2.712 seconds
Parameter learned model CLL: -0.30245


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.79e-07, 478, 0], 'true,true': [0.467, 160, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [10.651, 171, 337], 'false': [0.0, 494, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 506, 0], 'true,true': [0.475, 176, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [3.53e-07, 502, 0], 'true,true': [0.48, 189, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [0.0, 507, 0], 'true,true': [10.482, 163, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.49e-07, 489, 0], 'true,true': [0.483, 198, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.35e-07, 495, 0], 'true,true': [0.473, 172, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.6e-07, 503, 0], 'true,true': [0.48, 189, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 478, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [10.567, 167, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.47e-07, 537, 0], 'true,true': [0.469, 164, 337], 'true,false': [0.0, 0, 0]}]]
[{'': [0.2182916411952628, 6.689209855482115e-17], 'true': [0.2182916411952628, nan]}, {'': [0.22330507161013924, -1.4023869784738819e-16], 'true': [0.22330507161013924, nan], 'true,true': [0.22330507161013924, nan], 'true,true,true': [0.22330507161013924, nan]}, {'': [0.22537608912903345, -8.776466597827325e-18], 'true': [0.22537608912903345, nan]}, {'': [0.23020789660108518, 2.4769916087254486e-16], 'true': [0.23020789660108518, nan]}, {'': [0.21972400000000092, -3.503662405128699e-17], 'true': [0.21972400000000092, nan]}, {'': [0.23312429033103177, 4.5407894667695565e-17], 'true': [0.23312429033103177, nan]}, {'': [0.2237292584172494, 3.6783146674449633e-17], 'true': [0.2237292584172494, nan]}, {'': [0.2302078966010789, 5.120710570835712e-17], 'true': [0.2302078966010789, nan]}, {'': [0.2215569098009574, -1.2077740016842707e-16], 'true': [0.2215569098009574, nan], 'true,true': [0.2215569098009574, nan]}, {'': [0.22019035780734011, 1.132965023267385e-16], 'true': [0.22019035780734011, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048824;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   else return -0.14185106490048785;  // std dev = 0,000, 511,000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839144;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   else return -0.1254446385283923;  // std dev = 0,000, 528,000 (wgt'ed) examples reached here.  /* #neg=528 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360638;  // std dev = 6,99e-08, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
%   else return -0.11231637819360578;  // std dev = 0,000, 514,000 (wgt'ed) examples reached here.  /* #neg=514 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783649;  // std dev = 0,000, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else return -0.10159632948783537;  // std dev = 3,55e-07, 504,000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926071;  // std dev = 7,74e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   else return -0.0926912761892616;  // std dev = 0,000, 530,000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839678;  // std dev = 6,50e-08, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
%   else return -0.08518475138839678;  // std dev = 1,49e-07, 530,000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109151;  // std dev = 8,30e-08, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   else return -0.07877675473109201;  // std dev = 0,000, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333682;  // std dev = 8,49e-08, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   else return -0.07324622576333682;  // std dev = 1,76e-07, 518,000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420265;  // std dev = 6,83e-08, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   else return -0.06842697784420354;  // std dev = 0,000, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else return -0.0641918400820254;  // std dev = 2,45e-07, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.549 seconds
Total inference time: 1.28 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.085 seconds
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.061 seconds
Total inference time: 1.28 seconds
AUC ROC: 1.0
Total revision time: 11.061
Best scored revision CLL: -0.064062


Dataset: 54_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 06:01:03
{'parameter_1.0': {'F1': 0.140406, 'Inference time': 1.28, 'Precision': [0.075503, 0.5], 'AUC ROC': 0.85431, 'AUC PR': 0.075503, 'Recall': 1.0, 'Learning time': 2.715, 'CLL': -0.330299}, 'F1': 1.0, 'Inference time': 1.28, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 11.061, 'CLL': -0.063847}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1418510649004887;  // std dev = 0,000, 641,000 (wgt'ed) examples reached here.  /* #neg=641 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.12544463852839233;  // std dev = 0,000, 609,000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.11231637819360633;  // std dev = 0,000, 665,000 (wgt'ed) examples reached here.  /* #neg=665 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783541;  // std dev = 3,77e-07, 622,000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926182;  // std dev = 0,000, 619,000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.08518475138839675;  // std dev = 1,52e-07, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07877675473109264;  // std dev = 0,000, 653,000 (wgt'ed) examples reached here.  /* #neg=653 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07324622576333678;  // std dev = 1,62e-07, 608,000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420228;  // std dev = 2,08e-07, 609,000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06419184008202547;  // std dev = 2,40e-07, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.28 seconds
Total inference time: 1.142 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 06:01:08
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.142, 'Precision': [1.0, 0.5], 'Learning time': 4.28, 'AUC PR': 1.0, 'CLL': -0.063847, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.14185106490048854;  // std dev = 0,000, 614,000 (wgt'ed) examples reached here.  /* #neg=614 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.479 seconds
Total inference time: 0.78 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 06:01:11
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.78, 'Precision': [nan, 0.5], 'Learning time': 1.479, 'AUC PR': 1.0, 'CLL': -0.160469, 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.47851930546988364;  // std dev = 0,485, 108,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.4097983203925064;  // std dev = 5,043, 108,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3901119819022619;  // std dev = 0,468, 99,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 8,69e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2908812397917216;  // std dev = 0,473, 101,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.20164864665475649;  // std dev = 4,882, 104,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 5,16e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1163505253449269;  // std dev = 0,488, 110,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 4,94e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.09855672091375865;  // std dev = 0,485, 108,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109161;  // std dev = 5,58e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.07403699629555692;  // std dev = 0,485, 108,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.11215504874714949;  // std dev = 4,654, 99,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4,47e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.04613887832941848;  // std dev = 0,481, 105,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 0.864075
   AUC PR    = 0.074013
   CLL	      = -0.301021
   Precision = 0.074013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.137825


Total learning time: 1.297 seconds
Total inference time: 1.091 seconds
AUC ROC: 0.864075


Results scoring model
   AUC ROC   = 0.865598
   AUC PR    = 0.092926
   CLL	      = -0.299625
   Precision = 0.092926 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.170051


Total scoring time: 1.411 seconds
Parameter learned model CLL: -0.299625


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [7.6e-08, 113, 0], 'true,true': [0.485, 41, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [5.043, 41, 67], 'false': [0.0, 94, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [8.69e-08, 109, 0], 'true,true': [0.468, 32, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 106, 0], 'true,true': [0.473, 34, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [5.16e-08, 101, 0], 'true,true': [4.882, 37, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [4.94e-08, 83, 0], 'true,true': [0.488, 43, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [5.58e-08, 95, 0], 'true,true': [0.485, 41, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 107, 0], 'true,true': [0.485, 41, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [4.47e-08, 93, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [4.654, 32, 67], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 107, 0], 'true,true': [0.481, 38, 67], 'true,false': [0.0, 0, 0]}]]
[{'': [0.23551097393689918, 5.1089909097794814e-17], 'true': [0.23551097393689918, nan]}, {'': [0.23551097393689965, -1.4173059888831785e-17], 'true': [0.23551097393689965, nan], 'true,true': [0.23551097393689965, nan], 'true,true,true': [0.23551097393689965, nan]}, {'': [0.21875318845015942, 6.926161988487215e-17], 'true': [0.21875318845015942, nan]}, {'': [0.22331144005489753, 0.0], 'true': [0.22331144005489753, nan]}, {'': [0.22919748520710087, 2.63815372188156e-17], 'true': [0.22919748520710087, nan]}, {'': [0.2380991735537191, 2.942759824307644e-17], 'true': [0.2380991735537191, nan]}, {'': [0.2355109739368992, 3.272236283105724e-17], 'true': [0.2355109739368992, nan]}, {'': [0.23551097393689954, -3.112774835397635e-18], 'true': [0.23551097393689954, nan]}, {'': [0.2187531884501584, 2.1488187573390126e-17], 'true': [0.2187531884501584, nan], 'true,true': [0.2187531884501584, nan]}, {'': [0.23092970521541986, -1.6601465788787386e-17], 'true': [0.23092970521541986, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048774;  // std dev = 2,79e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839133;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return -0.11231637819360618;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10654570600363171;  // std dev = 0,235, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.10159632948783633;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.0992581957764494;  // std dev = 0,220, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.09269127618926101;  // std dev = 3,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09086587286761916;  // std dev = 0,207, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 3,80e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07753772731618815;  // std dev = 1,49e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return -0.07877675473109158;  // std dev = 5,67e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then return -0.07217030103796157;  // std dev = 1,67e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(B) )
%   | | | then return -0.07217030103796163;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.17128899680871948;  // std dev = 0,271, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333707;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07736284664809286;  // std dev = 0,299, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.06842697784420265;  // std dev = 4,53e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07191623602611362;  // std dev = 0,284, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06419184008202626;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063492
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.931 seconds
Total inference time: 1.277 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066323
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.277 seconds
Refined model CLL: -0.066323


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063492
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.916 seconds
Total inference time: 1.277 seconds
AUC ROC: 1.0
Total revision time: 5.916
Best scored revision CLL: -0.066323


Dataset: 54_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 06:01:20
{'parameter_0.2': {'F1': 0.137825, 'Inference time': 1.091, 'Precision': [0.074013, 0.5], 'AUC ROC': 0.864075, 'AUC PR': 0.074013, 'Recall': 1.0, 'Learning time': 1.297, 'CLL': -0.301021}, 'F1': 1.0, 'Inference time': 1.277, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 5.916, 'CLL': -0.063492}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048782;  // std dev = 0,000, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283911;  // std dev = 7,88e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.11231637819360625;  // std dev = 7,74e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783638;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.092691276189261;  // std dev = 3,94e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839683;  // std dev = 5,37e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109161;  // std dev = 5,77e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07324622576333707;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06842697784420267;  // std dev = 5,27e-08, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202626;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.257 seconds
Total inference time: 1.162 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 06:01:23
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.162, 'Precision': [1.0, 0.5], 'Learning time': 2.257, 'AUC PR': 1.0, 'CLL': -0.063719, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048785;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.794 seconds
Total inference time: 0.84 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 06:01:25
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.84, 'Precision': [nan, 0.5], 'Learning time': 0.794, 'AUC PR': 1.0, 'CLL': -0.158221, 'AUC ROC': 1.0}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5747264752064613;  // std dev = 0,451, 187,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.42664879668961764;  // std dev = 6,812, 205,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839172;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.34016565719275493;  // std dev = 0,477, 206,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360665;  // std dev = 0,000, 208,000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2599915564985762;  // std dev = 0,478, 207,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0,000, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.17271046678938803;  // std dev = 7,105, 215,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 5,58e-08, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.20073942406658665;  // std dev = 0,461, 193,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7,88e-08, 207,000 (wgt'ed) examples reached here.  /* #neg=207 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.10059645432505139;  // std dev = 0,479, 208,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109146;  // std dev = 8,16e-08, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.057706240510328945;  // std dev = 0,484, 214,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333663;  // std dev = 1,26e-07, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.055536768150416346;  // std dev = 6,964, 210,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6,05e-08, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.06409947318639726;  // std dev = 0,474, 203,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */


Results
   AUC ROC   = 0.864075
   AUC PR    = 0.074013
   CLL	      = -0.30634
   Precision = 0.074013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.137825


Total learning time: 1.51 seconds
Total inference time: 1.278 seconds
AUC ROC: 0.864075


Results scoring model
   AUC ROC   = 0.86755
   AUC PR    = 0.094167
   CLL	      = -0.30142
   Precision = 0.094167 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.172126


Total scoring time: 1.804 seconds
Parameter learned model CLL: -0.30142


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 192, 0], 'true,true': [0.451, 53, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [6.812, 71, 134], 'false': [0.0, 213, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 208, 0], 'true,true': [0.477, 72, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 214, 0], 'true,true': [0.478, 73, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [5.58e-08, 192, 0], 'true,true': [7.105, 81, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [7.88e-08, 207, 0], 'true,true': [0.461, 59, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [8.16e-08, 182, 0], 'true,true': [0.479, 74, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.26e-07, 210, 0], 'true,true': [0.484, 80, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [6.05e-08, 185, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [6.964, 76, 134], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 209, 0], 'true,true': [0.474, 69, 134], 'true,false': [0.0, 0, 0]}]]
[{'': [0.20309416912122624, -2.266705341943028e-16], 'true': [0.20309416912122624, nan]}, {'': [0.2263890541344459, -4.378344322465406e-17], 'true': [0.2263890541344459, nan], 'true,true': [0.2263890541344459, nan], 'true,true,true': [0.2263890541344459, nan]}, {'': [0.22735413328306395, -5.337610695313253e-17], 'true': [0.22735413328306395, nan]}, {'': [0.2282900417746058, -8.300732894393693e-17], 'true': [0.2282900417746058, nan]}, {'': [0.23480800432666296, 1.61907524424502e-17], 'true': [0.23480800432666296, nan]}, {'': [0.21224730865258057, 3.003501902367573e-17], 'true': [0.21224730865258057, nan]}, {'': [0.22919748520709968, 3.660075905357659e-17], 'true': [0.22919748520709968, nan]}, {'': [0.23408157917722058, 7.507222356989154e-17], 'true': [0.23408157917722058, nan]}, {'': [0.2309297052154194, 1.9803978277097388e-17], 'true': [0.2309297052154194, nan], 'true,true': [0.2309297052154194, nan]}, {'': [0.22436846319978607, -1.5936215664475932e-18], 'true': [0.22436846319978607, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return -0.14185106490048852;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.1254446385283916;  // std dev = 0,000, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360632;  // std dev = 2,98e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1123163781936063;  // std dev = 5,16e-08, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783621;  // std dev = 4,71e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return -0.1015963294878365;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.09269127618926057;  // std dev = 9,19e-08, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0851847513883968;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.08518475138839678;  // std dev = 8,69e-08, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07877675473109148;  // std dev = 8,30e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07324622576333668;  // std dev = 1,11e-07, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420268;  // std dev = 2,69e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return -0.06842697784420262;  // std dev = 7,45e-08, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06419184008202626;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.394 seconds
Total inference time: 1.297 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.172 seconds
Refined model CLL: -0.064077


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.880000000000001 seconds
Total inference time: 1.297 seconds
AUC ROC: 1.0
Total revision time: 7.880000000000001
Best scored revision CLL: -0.064077


Dataset: 54_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 06:01:36
{'F1': 1.0, 'Inference time': 1.297, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_0.4': {'F1': 0.137825, 'Inference time': 1.278, 'Precision': [0.074013, 0.5], 'AUC ROC': 0.864075, 'AUC PR': 0.074013, 'Recall': 1.0, 'Learning time': 1.51, 'CLL': -0.30634}, 'Recall': 1.0, 'Learning time': 7.880000000000001, 'CLL': -0.063719}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1418510649004884;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.12544463852839183;  // std dev = 0,000, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11231637819360664;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.10159632948783649;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.09269127618926054;  // std dev = 6,32e-08, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.08518475138839678;  // std dev = 7,60e-08, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07877675473109146;  // std dev = 6,99e-08, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07324622576333677;  // std dev = 1,21e-07, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.0684269778442027;  // std dev = 0,000, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202622;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.06419184008202626;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.534 seconds
Total inference time: 1.031 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 06:01:40
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.031, 'Precision': [1.0, 0.5], 'Learning time': 2.534, 'AUC PR': 1.0, 'CLL': -0.063719, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.1418510649004884;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.044 seconds
Total inference time: 0.798 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 06:01:42
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.798, 'Precision': [nan, 0.5], 'Learning time': 1.044, 'AUC PR': 1.0, 'CLL': -0.158221, 'AUC ROC': 1.0}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5182796540537569;  // std dev = 0,474, 306,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048785;  // std dev = 9,42e-08, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.46059482405926844;  // std dev = 8,067, 298,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839202;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.31793199504312364;  // std dev = 0,485, 324,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0,000, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.26652162975364735;  // std dev = 0,479, 314,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783662;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.2233670125652704;  // std dev = 8,233, 304,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926044;  // std dev = 1,67e-07, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1365550121901984;  // std dev = 0,482, 319,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.15864620920059241;  // std dev = 0,463, 293,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109143;  // std dev = 3,65e-08, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09886309744439749;  // std dev = 0,471, 302,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333696;  // std dev = 9,88e-08, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.057556647036217844;  // std dev = 8,389, 310,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442029;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.03957818386132391;  // std dev = 0,478, 312,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202594;  // std dev = 1,19e-07, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */


Results
   AUC ROC   = 0.864075
   AUC PR    = 0.074013
   CLL	      = -0.310217
   Precision = 0.074013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.137825


Total learning time: 2.079 seconds
Total inference time: 1.239 seconds
AUC ROC: 0.864075


Results scoring model
   AUC ROC   = 0.86827
   AUC PR    = 0.095059
   CLL	      = -0.303884
   Precision = 0.095059 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.173614


Total scoring time: 2.126 seconds
Parameter learned model CLL: -0.303884


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [9.42e-08, 299, 0], 'true,true': [0.474, 104, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [8.067, 96, 202], 'false': [0.0, 305, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 310, 0], 'true,true': [0.485, 122, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 296, 0], 'true,true': [0.479, 112, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.67e-07, 294, 0], 'true,true': [8.233, 102, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.07e-07, 320, 0], 'true,true': [0.482, 117, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [3.65e-08, 293, 0], 'true,true': [0.463, 91, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [9.88e-08, 297, 0], 'true,true': [0.471, 100, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 280, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [8.389, 108, 202], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.19e-07, 303, 0], 'true,true': [0.478, 110, 202], 'true,false': [0.0, 0, 0]}]]
[{'': [0.22435815284720015, 2.9704963869569404e-17], 'true': [0.22435815284720015, nan]}, {'': [0.21836854195756514, -8.736181177378281e-17], 'true': [0.21836854195756514, nan], 'true,true': [0.21836854195756514, nan], 'true,true,true': [0.21836854195756514, nan]}, {'': [0.23475842097241492, -6.446456272017038e-17], 'true': [0.23475842097241492, nan]}, {'': [0.22946164144590148, -5.401084984662924e-17], 'true': [0.22946164144590148, nan]}, {'': [0.22294840720221598, 9.516197353929913e-17], 'true': [0.22294840720221598, nan]}, {'': [0.23225007615884394, 3.608224830031759e-17], 'true': [0.23225007615884394, nan]}, {'': [0.2141201411781159, 4.54698849675832e-18], 'true': [0.2141201411781159, nan]}, {'': [0.22148151396868457, 3.289549702593056e-17], 'true': [0.22148151396868457, nan]}, {'': [0.22701352757544224, -3.8857805861880476e-17], 'true': [0.22701352757544224, nan], 'true,true': [0.22701352757544224, nan]}, {'': [0.22826265614727176, 4.6900510611227736e-17], 'true': [0.22826265614727176, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048766;  // std dev = 8,16e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return -0.14185106490048782;  // std dev = 1,07e-07, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839133;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else return -0.12544463852839197;  // std dev = 0,000, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360622;  // std dev = 7,88e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return -0.1123163781936067;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783628;  // std dev = 3,65e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else return -0.10159632948783662;  // std dev = 0,000, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926098;  // std dev = 4,08e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return -0.09269127618926046;  // std dev = 1,60e-07, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839683;  // std dev = 5,48e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return -0.08518475138839678;  // std dev = 1,12e-07, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109161;  // std dev = 5,48e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return -0.07877675473109143;  // std dev = 2,98e-08, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return -0.07324622576333696;  // std dev = 1,00e-07, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420268;  // std dev = 3,49e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else return -0.06842697784420304;  // std dev = 0,000, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else return -0.06419184008202601;  // std dev = 1,03e-07, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.565 seconds
Total inference time: 1.326 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.283 seconds
Refined model CLL: -0.064085


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.052999999999999 seconds
Total inference time: 1.326 seconds
AUC ROC: 1.0
Total revision time: 9.052999999999999
Best scored revision CLL: -0.064085


Dataset: 54_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 06:01:55
{'F1': 1.0, 'Inference time': 1.326, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_0.6': {'F1': 0.137825, 'Inference time': 1.239, 'Precision': [0.074013, 0.5], 'AUC ROC': 0.864075, 'AUC PR': 0.074013, 'Recall': 1.0, 'Learning time': 2.079, 'CLL': -0.310217}, 'Recall': 1.0, 'Learning time': 9.052999999999999, 'CLL': -0.063719}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048757;  // std dev = 2,15e-07, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( actor(A) )
%   | | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1254446385283921;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360672;  // std dev = 0,000, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.10159632948783656;  // std dev = 0,000, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.09269127618926054;  // std dev = 1,66e-07, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109147;  // std dev = 2,11e-08, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07324622576333711;  // std dev = 6,83e-08, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420326;  // std dev = 0,000, 384,000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.06419184008202584;  // std dev = 1,51e-07, 402,000 (wgt'ed) examples reached here.  /* #neg=402 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.218 seconds
Total inference time: 1.161 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 06:01:59
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.161, 'Precision': [1.0, 0.5], 'Learning time': 3.218, 'AUC PR': 1.0, 'CLL': -0.063719, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048768;  // std dev = 1,79e-07, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.116 seconds
Total inference time: 0.806 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 06:02:01
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.806, 'Precision': [nan, 0.5], 'Learning time': 1.116, 'AUC PR': 1.0, 'CLL': -0.158221, 'AUC ROC': 1.0}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.492582897363659;  // std dev = 0,482, 424,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004873;  // std dev = 3,01e-07, 408,000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.47330511251579666;  // std dev = 9,187, 392,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #neg=413 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3565374113362599;  // std dev = 0,474, 408,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 0,000, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2781086444717034;  // std dev = 0,473, 407,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878358;  // std dev = 2,51e-07, 420,000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.17238698887396373;  // std dev = 10,075, 432,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926046;  // std dev = 2,05e-07, 349,000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.15652777682628452;  // std dev = 0,477, 414,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,35e-07, 415,000 (wgt'ed) examples reached here.  /* #neg=415 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.12538461917221036;  // std dev = 0,474, 409,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109141;  // std dev = 2,25e-07, 401,000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09433589342303467;  // std dev = 0,474, 409,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333771;  // std dev = 0,000, 397,000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.09459652571319072;  // std dev = 9,263, 395,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420333;  // std dev = 0,000, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.05177766556577556;  // std dev = 0,473, 407,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202566;  // std dev = 1,80e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */


Results
   AUC ROC   = 0.864075
   AUC PR    = 0.074013
   CLL	      = -0.312983
   Precision = 0.074013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.137825


Total learning time: 2.349 seconds
Total inference time: 1.206 seconds
AUC ROC: 0.864075


Results scoring model
   AUC ROC   = 0.869194
   AUC PR    = 0.09556
   CLL	      = -0.304863
   Precision = 0.09556 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.174449


Total scoring time: 2.599 seconds
Parameter learned model CLL: -0.304863


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [3.01e-07, 408, 0], 'true,true': [0.482, 155, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [9.187, 123, 269], 'false': [0.0, 413, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 391, 0], 'true,true': [0.474, 139, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.51e-07, 420, 0], 'true,true': [0.473, 138, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [2.05e-07, 349, 0], 'true,true': [10.075, 163, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.35e-07, 415, 0], 'true,true': [0.477, 145, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [2.25e-07, 401, 0], 'true,true': [0.474, 140, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 397, 0], 'true,true': [0.474, 140, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 395, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [9.263, 126, 269], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.8e-07, 377, 0], 'true,true': [0.473, 138, 269], 'true,false': [0.0, 0, 0]}]]
[{'': [0.23192750978996415, 2.220446049250313e-16], 'true': [0.23192750978996415, nan]}, {'': [0.2153204394002376, -1.290331844600666e-16], 'true': [0.2153204394002376, nan], 'true,true': [0.2153204394002376, nan], 'true,true,true': [0.2153204394002376, nan]}, {'': [0.22461913687043294, -2.271556060614131e-17], 'true': [0.22461913687043294, nan]}, {'': [0.22410035677849338, 1.5014444713978308e-16], 'true': [0.22410035677849338, nan]}, {'': [0.23494834533607992, 1.208838823374096e-16], 'true': [0.23494834533607992, nan]}, {'': [0.22757240542369986, 4.387387374422305e-17], 'true': [0.22757240542369986, nan]}, {'': [0.22513017019267018, 1.262498003065016e-16], 'true': [0.22513017019267018, nan]}, {'': [0.22513017019267015, -6.264230667910203e-17], 'true': [0.22513017019267015, nan]}, {'': [0.21723441756128925, -1.1130337158267392e-16], 'true': [0.21723441756128925, nan], 'true,true': [0.21723441756128925, nan]}, {'': [0.2241003567784887, 8.599074885690868e-17], 'true': [0.2241003567784887, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.141851064900488;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else return -0.14185106490048732;  // std dev = 3,01e-07, 405,000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else return -0.12544463852839222;  // std dev = 0,000, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360621;  // std dev = 8,82e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else return -0.11231637819360618;  // std dev = 0,000, 406,000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783637;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else return -0.1015963294878359;  // std dev = 2,29e-07, 405,000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926087;  // std dev = 5,77e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else return -0.09269127618926087;  // std dev = 1,55e-07, 398,000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 6,14e-08, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else return -0.08518475138839678;  // std dev = 1,32e-07, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0787767547310916;  // std dev = 6,83e-08, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else return -0.07877675473109151;  // std dev = 2,18e-07, 418,000 (wgt'ed) examples reached here.  /* #neg=418 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333695;  // std dev = 5,27e-08, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else return -0.07324622576333772;  // std dev = 0,000, 424,000 (wgt'ed) examples reached here.  /* #neg=424 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420265;  // std dev = 5,96e-08, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else return -0.0684269778442034;  // std dev = 0,000, 420,000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else return -0.06419184008202551;  // std dev = 2,14e-07, 429,000 (wgt'ed) examples reached here.  /* #neg=429 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.304 seconds
Total inference time: 1.171 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.61 seconds
Refined model CLL: -0.064083


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.862 seconds
Total inference time: 1.171 seconds
AUC ROC: 1.0
Total revision time: 10.862
Best scored revision CLL: -0.064083


Dataset: 54_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 06:02:15
{'F1': 1.0, 'Inference time': 1.171, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter_0.8': {'F1': 0.137825, 'Inference time': 1.206, 'Precision': [0.074013, 0.5], 'AUC ROC': 0.864075, 'AUC PR': 0.074013, 'Recall': 1.0, 'Learning time': 2.349, 'CLL': -0.312983}, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 10.862, 'CLL': -0.063719}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.14185106490048735;  // std dev = 2,35e-07, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839227;  // std dev = 0,000, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.11231637819360596;  // std dev = 0,000, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.10159632948783573;  // std dev = 2,92e-07, 524,000 (wgt'ed) examples reached here.  /* #neg=524 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.09269127618926133;  // std dev = 0,000, 496,000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.08518475138839678;  // std dev = 1,37e-07, 518,000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.07877675473109208;  // std dev = 0,000, 519,000 (wgt'ed) examples reached here.  /* #neg=519 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.0732462257633372;  // std dev = 0,000, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.06842697784420344;  // std dev = 0,000, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06419184008202566;  // std dev = 1,96e-07, 479,000 (wgt'ed) examples reached here.  /* #neg=479 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.704 seconds
Total inference time: 1.154 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 06:02:20
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.154, 'Precision': [1.0, 0.5], 'Learning time': 3.704, 'AUC PR': 1.0, 'CLL': -0.063719, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.1418510649004874;  // std dev = 2,15e-07, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.396 seconds
Total inference time: 0.77 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 06:02:23
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.77, 'Precision': [nan, 0.5], 'Learning time': 1.396, 'AUC PR': 1.0, 'CLL': -0.158221, 'AUC ROC': 1.0}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true;haswordauthor(D, C).;false;true
0;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
0;true,false,true;haswordvenue(G, E).;false;false
0;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
1;true,true,false;haswordvenue(G, D).;false;false
1;true,false,true;haswordvenue(J, H).;false;false
1;true,true;haswordtitle(A, D).;true;true
1;true,true,true;author(F, E), title(F, B).;false;false
1;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;true,false,true;haswordvenue(G, E).;false;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;true,false,true;haswordvenue(G, E).;false;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true;haswordauthor(D, C).;true;true
4;true,true,false;author(F, D), title(F, B).;false;false
4;true,false,true;haswordvenue(I, G).;false;false
4;true,true;author(E, D), title(E, A).;false;true
4;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
4;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true;haswordauthor(D, C).;false;true
5;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
5;true,false,true;haswordvenue(G, E).;false;false
5;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true;haswordauthor(D, C).;true;true
6;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
6;true,false,true;haswordvenue(I, G).;false;false
6;true,true;author(E, D), title(E, B).;true;false
6;true,true,true;samebib(E, F), title(F, A).;false;false
6;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
7;true,false,true;haswordvenue(G, E).;false;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true;haswordtitle(A, D), haswordauthor(E, D).;true;false
8;true,true,false;author(F, E), title(F, B).;false;false
8;true,true;haswordauthor(E, C).;false;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true;haswordauthor(D, C).;false;true
9;true,false,true;haswordvenue(G, E).;false;false
9;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5215347618711615;  // std dev = 0,473, 508,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048754;  // std dev = 1,52e-07, 482,000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then if ( genre(E, F) )
%   | | | then return 0.461623896620793;  // std dev = 10,394, 496,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839235;  // std dev = 0,000, 512,000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.33061647321788595;  // std dev = 0,481, 529,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360574;  // std dev = 0,000, 526,000 (wgt'ed) examples reached here.  /* #neg=526 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2503028477470112;  // std dev = 0,483, 534,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783545;  // std dev = 3,36e-07, 486,000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.21180922714570094;  // std dev = 10,812, 516,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926136;  // std dev = 0,000, 479,000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.19098725588016388;  // std dev = 0,465, 492,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1,48e-07, 482,000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.12307220744691426;  // std dev = 0,472, 507,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109184;  // std dev = 1,75e-07, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.06266852395611155;  // std dev = 0,482, 531,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333734;  // std dev = 0,000, 496,000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.08945521467092772;  // std dev = 10,438, 498,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442035;  // std dev = 0,000, 466,000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.025899343820735398;  // std dev = 0,482, 531,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202537;  // std dev = 2,45e-07, 504,000 (wgt'ed) examples reached here.  /* #neg=504 */


Results
   AUC ROC   = 0.864075
   AUC PR    = 0.074013
   CLL	      = -0.308672
   Precision = 0.074013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.137825


Total learning time: 2.73 seconds
Total inference time: 1.281 seconds
AUC ROC: 0.864075


Results scoring model
   AUC ROC   = 0.868927
   AUC PR    = 0.095576
   CLL	      = -0.301282
   Precision = 0.095576 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.174476


Total scoring time: 2.475 seconds
Parameter learned model CLL: -0.301282


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.52e-07, 482, 0], 'true,true': [0.473, 171, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'genre(E, F)'}, {'true,true,true,true': [10.394, 159, 337], 'false': [0.0, 512, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 526, 0], 'true,true': [0.481, 192, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [3.36e-07, 486, 0], 'true,true': [0.483, 197, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [0.0, 479, 0], 'true,true': [10.812, 179, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [1.48e-07, 482, 0], 'true,true': [0.465, 155, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'false': [1.75e-07, 463, 0], 'true,true': [0.472, 170, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [0.0, 496, 0], 'true,true': [0.482, 194, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'false': [0.0, 466, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [10.438, 161, 337], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'false': [2.45e-07, 504, 0], 'true,true': [0.482, 194, 337], 'true,false': [0.0, 0, 0]}]]
[{'': [0.22330507161014587, 4.791003923693622e-17], 'true': [0.22330507161014587, nan]}, {'': [0.21780290712798467, -1.457167719820518e-16], 'true': [0.21780290712798467, nan], 'true,true': [0.21780290712798467, nan], 'true,true,true': [0.21780290712798467, nan]}, {'': [0.2312170125178157, -5.0656563861223874e-18], 'true': [0.2312170125178157, nan]}, {'': [0.23281642329110352, 2.3209600679406563e-16], 'true': [0.23281642329110352, nan]}, {'': [0.22656015263505658, -1.4833877573279752e-17], 'true': [0.22656015263505658, nan]}, {'': [0.2157900389979521, 4.514599851172836e-17], 'true': [0.2157900389979521, nan]}, {'': [0.22287579410929229, 6.618176129514972e-17], 'true': [0.22287579410929229, nan]}, {'': [0.23186894641457165, -1.2534776084477573e-17], 'true': [0.23186894641457165, nan]}, {'': [0.21877469718230377, -1.2293456667523192e-16], 'true': [0.21877469718230377, nan], 'true,true': [0.21877469718230377, nan]}, {'': [0.23186894641457337, 1.189524669241239e-16], 'true': [0.23186894641457337, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1418510649004882;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   else return -0.14185106490048785;  // std dev = 0,000, 511,000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
%   else return -0.1254446385283923;  // std dev = 0,000, 501,000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360632;  // std dev = 7,88e-08, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else return -0.11231637819360582;  // std dev = 0,000, 497,000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783645;  // std dev = 0,000, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else return -0.10159632948783535;  // std dev = 3,61e-07, 510,000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926076;  // std dev = 7,15e-08, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else return -0.0926912761892615;  // std dev = 0,000, 508,000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 5,96e-08, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   else return -0.08518475138839678;  // std dev = 1,43e-07, 497,000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109148;  // std dev = 8,02e-08, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else return -0.07877675473109215;  // std dev = 0,000, 514,000 (wgt'ed) examples reached here.  /* #neg=514 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333685;  // std dev = 7,96e-08, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   else return -0.07324622576333685;  // std dev = 1,71e-07, 513,000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420265;  // std dev = 6,66e-08, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   else return -0.0684269778442035;  // std dev = 0,000, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
%   else return -0.06419184008202539;  // std dev = 2,45e-07, 495,000 (wgt'ed) examples reached here.  /* #neg=495 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.557 seconds
Total inference time: 1.144 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.538 seconds
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.3 seconds
Total inference time: 1.144 seconds
AUC ROC: 1.0
Total revision time: 11.3
Best scored revision CLL: -0.064087


Dataset: 54_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 06:02:37
{'parameter_1.0': {'F1': 0.137825, 'Inference time': 1.281, 'Precision': [0.074013, 0.5], 'AUC ROC': 0.864075, 'AUC PR': 0.074013, 'Recall': 1.0, 'Learning time': 2.73, 'CLL': -0.308672}, 'F1': 1.0, 'Inference time': 1.144, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Learning time': 11.3, 'CLL': -0.063719}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1418510649004885;  // std dev = 0,000, 608,000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.12544463852839233;  // std dev = 0,000, 605,000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.11231637819360599;  // std dev = 0,000, 635,000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1015963294878362;  // std dev = 4,08e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.10159632948783545;  // std dev = 3,60e-07, 589,000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926175;  // std dev = 0,000, 601,000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1,05e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.08518475138839678;  // std dev = 1,49e-07, 601,000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109175;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109248;  // std dev = 0,000, 618,000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07324622576333686;  // std dev = 1,67e-07, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420367;  // std dev = 0,000, 639,000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.0641918400820254;  // std dev = 2,48e-07, 634,000 (wgt'ed) examples reached here.  /* #neg=634 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.369 seconds
Total inference time: 1.017 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 06:02:43
{'F1': 1.0, 'Recall': 1.0, 'Inference time': 1.017, 'Precision': [1.0, 0.5], 'Learning time': 4.369, 'AUC PR': 1.0, 'CLL': -0.063719, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1418510649004882;  // std dev = 0,000, 573,000 (wgt'ed) examples reached here.  /* #neg=573 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.315 seconds
Total inference time: 0.794 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 06:02:45
{'F1': nan, 'Recall': 0.0, 'Inference time': 0.794, 'Precision': [nan, 0.5], 'Learning time': 1.315, 'AUC PR': 1.0, 'CLL': -0.158221, 'AUC ROC': 1.0}


