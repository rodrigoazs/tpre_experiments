Starting experiment #4 for 10_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048924;  // std dev = 0,000, 734,000 (wgt'ed) examples reached here.  /* #neg=734 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839235;  // std dev = 0,000, 711,000 (wgt'ed) examples reached here.  /* #neg=711 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360633;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.11231637819360636;  // std dev = 0,000, 675,000 (wgt'ed) examples reached here.  /* #neg=675 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783624;  // std dev = 2,98e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1015963294878352;  // std dev = 4,23e-07, 686,000 (wgt'ed) examples reached here.  /* #neg=686 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.092691276189262;  // std dev = 0,000, 691,000 (wgt'ed) examples reached here.  /* #neg=691 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839675;  // std dev = 1,30e-07, 728,000 (wgt'ed) examples reached here.  /* #neg=728 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109169;  // std dev = 3,33e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07877675473109279;  // std dev = 0,000, 698,000 (wgt'ed) examples reached here.  /* #neg=698 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07324622576333659;  // std dev = 2,20e-07, 676,000 (wgt'ed) examples reached here.  /* #neg=676 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2,89e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06842697784420253;  // std dev = 1,87e-07, 705,000 (wgt'ed) examples reached here.  /* #neg=705 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06419184008202529;  // std dev = 2,52e-07, 737,000 (wgt'ed) examples reached here.  /* #neg=737 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 536
Target train neg examples: 18889

Target test facts examples: 7463
Target test pos	 examples: 162
Target test neg examples: 9107

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,19e-07, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.06104748582415012;  // std dev = 6,681, 276,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=56 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.06348172307858409;  // std dev = 6,639, 263,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=56 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 4,21e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.08472809975583731;  // std dev = 6,513, 231,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=56 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.02860042753454057;  // std dev = 6,702, 283,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=56 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601495;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.03798129372400402;  // std dev = 6,646, 265,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=56 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.03570977454409516;  // std dev = 6,632, 261,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=56 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 2,98e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.016562537575823152;  // std dev = 6,690, 279,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=56 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.01478313194235136;  // std dev = 6,687, 278,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=56 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.022410328009690728;  // std dev = 6,646, 265,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=56 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,33e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.009070676936597499;  // std dev = 6,687, 278,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=56 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.229536
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 2.264 seconds
Total inference time: 2.427 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.738318
   AUC PR    = 0.514926
   CLL	      = -0.234793
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.476636
   F1        = 0.64557


Total scoring time: 2.023 seconds
Parameter learned model CLL: -0.234793


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.19e-07, 0, 51], 'false': [6.681, 220, 56]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [6.639, 207, 56]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 51], 'false': [6.513, 175, 56]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [6.702, 227, 56]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [6.646, 209, 56]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [6.632, 205, 56]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 51], 'false': [6.69, 223, 56]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [6.687, 222, 56]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [6.646, 209, 56]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.33e-08, 0, 51], 'false': [6.687, 222, 56]}]]
[{'': [2.7864421010200007e-16, 0.16173072883848025]}, {'': [-4.876273676785002e-16, 0.16758952710028938]}, {'': [3.483052626275001e-17, 0.1836547291092732]}, {'': [-3.483052626275001e-16, 0.15872342019503405]}, {'': [-3.483052626275001e-17, 0.1666642933428249]}, {'': [-2.6122894697062506e-17, 0.16852365643487485]}, {'': [1.7415263131375004e-17, 0.16042959365886972]}, {'': [-6.095342095981252e-17, 0.16086123906629962]}, {'': [-3.047671047990626e-17, 0.16666429334282826]}, {'': [2.1769078914218755e-17, 0.16086123906630073]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,19e-07, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.41912454485560896;  // std dev = 0,496, 41,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.12669954974897252;  // std dev = 0,992, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | | else return 0.07436515131572749;  // std dev = 5,008, 148,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=32 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.37413156537935127;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.10987496096529849;  // std dev = 0,991, 58,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   | | | else return 0.07580357213689703;  // std dev = 4,974, 141,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=32 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 4,21e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4088530281669951;  // std dev = 0,468, 34,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.13888248291301256;  // std dev = 0,989, 47,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
%   | | | else return 0.024157484649238024;  // std dev = 5,076, 188,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=32 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.3548263795081305;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3216442087271634;  // std dev = 2,728, 34,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.10097321335410472;  // std dev = 0,991, 60,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
%   | | | else return 0.06483595444421317;  // std dev = 4,954, 143,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=32 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601495;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.13706655814580815;  // std dev = 0,489, 41,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.1285854764770148;  // std dev = 0,991, 49,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
%   | | | else return 0.02253281894297011;  // std dev = 5,033, 184,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=32 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14417510510710438;  // std dev = 0,484, 38,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09384543685377392;  // std dev = 0,992, 67,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1 */
%   | | | else return 0.0445164448296601;  // std dev = 4,979, 150,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=32 */
%   | else return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 2,98e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.1605535996291129;  // std dev = 2,774, 35,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | | | else return -0.08309215714920463;  // std dev = 0,992, 68,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.11815917949865481;  // std dev = 0,989, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | | else return 0.11188433118057438;  // std dev = 4,674, 105,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.033707111700882586;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11949352307186807;  // std dev = 0,128, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0.04691510573130649;  // std dev = 0,894, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09148696146778032;  // std dev = 0,043, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0.054911423119529235;  // std dev = 0,920, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.06425392077852272;  // std dev = 4,774, 117,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=31 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15742536769334117;  // std dev = 0,446, 33,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09087820628881214;  // std dev = 0,971, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | | else return 0.023501092156258188;  // std dev = 4,888, 168,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=32 */
%   | else return -0.06863206751890336;  // std dev = 0,009, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,33e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.4207270494559094;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.08823380559712382;  // std dev = 2,728, 34,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0844008429722957;  // std dev = 0,066, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.0731199414361235;  // std dev = 0,906, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10252176484793721;  // std dev = 0,074, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0.2278171426176948;  // std dev = 0,797, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.10776532795961714;  // std dev = 4,581, 96,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return -0.0641795211904692;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.853714
   AUC PR    = 0.488267
   CLL	      = -0.25031
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 26.223 seconds
Total inference time: 4.204 seconds
AUC ROC: 0.853714


Results scoring model
   AUC ROC   = 0.910353
   AUC PR    = 0.597212
   CLL	      = -0.220542
   Precision = 0.247492 at threshold = 0.5
   Recall    = 0.691589
   F1        = 0.364532


Total scoring time: 4.238 seconds
Refined model CLL: -0.220542


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853714
   AUC PR    = 0.488267
   CLL	      = -0.25031
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 34.748 seconds
Total inference time: 4.204 seconds
AUC ROC: 0.853714
Total revision time: 34.748
Best scored revision CLL: -0.220542


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 09:11:22
{'parameter_0.2': {'F1': 0.578947, 'Inference time': 2.427, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 2.264, 'CLL': -0.229536}, 'F1': 0.216769, 'Inference time': 4.204, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853714, 'AUC PR': 0.488267, 'Recall': 0.654321, 'Learning time': 34.748, 'CLL': -0.25031}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6850720120225892;  // std dev = 0,378, 52,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=43 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.11859525094699933;  // std dev = 0,988, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | | else return 0.28280646934608883;  // std dev = 5,973, 146,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=62 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5493429950753449;  // std dev = 0,403, 54,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=43 */
%   | else if ( haswordvenue(E, C) )
%   | | then return -0.12819164498704833;  // std dev = 0,009, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0.0735258984880796;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( haswordvenue(H, F) )
%   | | then return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0.03173212904520563;  // std dev = 0,911, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return 0.2100619488057365;  // std dev = 0,488, 159,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=62 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3791231227997981;  // std dev = 0,438, 58,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=43 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11462766443419607;  // std dev = 0,008, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.11558506183277013;  // std dev = 0,864, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0.10937624812518189;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.20314015242794078;  // std dev = 0,493, 149,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=62 */
%   else return -0.11372608930212487;  // std dev = 0,021, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3282990566161999;  // std dev = 0,413, 55,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=43 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10237536512761593;  // std dev = 0,046, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0.1789650426450968;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.12812716519464415;  // std dev = 0,458, 182,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
%   else return -0.10327754789751177;  // std dev = 0,024, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.5353999690966846;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.27592078562029704;  // std dev = 0,391, 53,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=43 */
%   | else if ( haswordvenue(F, C) )
%   | | then return -0.0946717760622783;  // std dev = 0,074, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.08896004817483658;  // std dev = 0,237, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then return -0.11516325677986758;  // std dev = 0,023, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0.18462832344339764;  // std dev = 0,794, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then return 0.21066182563597408;  // std dev = 0,500, 128,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=62 */
%   | | else return -0.0924316572994687;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08594501324918138;  // std dev = 0,457, 63,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=43 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08643686284787372;  // std dev = 0,055, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 1.8044690880430111E-4;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.08705902129233593;  // std dev = 0,132, 47,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
%   | | else return 0.11006837920444464;  // std dev = 0,495, 145,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=62 */
%   else return -0.08571020538267374;  // std dev = 0,016, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11563523012499725;  // std dev = 0,430, 59,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=43 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09711055684273537;  // std dev = 0,023, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0.1957450613311816;  // std dev = 0,762, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.0598743853529052;  // std dev = 0,903, 49,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
%   | | | else return 0.12085304398336168;  // std dev = 5,772, 134,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=62 */
%   else return -0.08295564670121684;  // std dev = 0,058, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12132335003215514;  // std dev = 0,417, 56,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=43 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0754470786482057;  // std dev = 0,062, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.0016665662438882828;  // std dev = 0,913, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06699186737139919;  // std dev = 0,875, 35,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
%   | | | else return 0.055138570397204004;  // std dev = 5,973, 146,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=62 */
%   else return -0.07505627911252481;  // std dev = 0,038, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.05497471414253993;  // std dev = 0,440, 59,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=43 */
%   | else if ( haswordvenue(E, C) )
%   | | then return -0.08462466434879794;  // std dev = 0,045, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0.056366617867059876;  // std dev = 0,834, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( haswordvenue(H, F) )
%   | | then return -0.06921218437192099;  // std dev = 0,002, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0.05773939262263432;  // std dev = 0,879, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return 0.0872423249047249;  // std dev = 0,499, 132,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=62 */
%   | | else return -0.06783363559888345;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.07881687679585883;  // std dev = 0,422, 56,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=43 */
%   | else if ( haswordvenue(E, C) )
%   | | then return -0.0771004994242277;  // std dev = 0,043, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0.20585595851511995;  // std dev = 0,714, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( haswordvenue(H, F) )
%   | | then return -0.06483655355587403;  // std dev = 0,002, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0.08401567006708244;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(B, I), haswordvenue(J, I) )
%   | | then if ( title(K, A), venue(K, J) )
%   | | | then return -0.028259969277943782;  // std dev = 5,809, 144,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=54 */
%   | | | else return 0.18163800414153652;  // std dev = 1,497, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.15646795984067138;  // std dev = 0,763, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.76801
   AUC PR    = 0.051757
   CLL	      = -0.411156
   Precision = 0.06988 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.116935


Total learning time: 108.791 seconds
Total inference time: 4.894 seconds
AUC ROC: 0.76801


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 09:13:16
{'F1': 0.116935, 'Recall': 0.358025, 'Inference time': 4.894, 'Precision': [0.06988, 0.5], 'Learning time': 108.791, 'AUC PR': 0.051757, 'CLL': -0.411156, 'AUC ROC': 0.76801}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6850720120225892;  // std dev = 0,378, 52,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=43 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.1148240378734607;  // std dev = 0,986, 37,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
%   | | | else return 0.29476865340937264;  // std dev = 5,910, 142,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=62 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.759501
   AUC PR    = 0.049948
   CLL	      = -0.207563
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.421 seconds
Total inference time: 2.078 seconds
AUC ROC: 0.759501


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 09:13:25
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.078, 'Precision': [nan, 0.5], 'Learning time': 6.421, 'AUC PR': 0.049948, 'CLL': -0.207563, 'AUC ROC': 0.759501}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return 0.07257018747142684;  // std dev = 9,422, 527,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=113 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return 0.060298323052439144;  // std dev = 9,441, 535,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=113 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,26e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return 0.05280348630010455;  // std dev = 9,439, 534,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=113 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,53e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return 0.04059275880654047;  // std dev = 9,469, 547,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=113 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return 0.04032294979904631;  // std dev = 9,436, 533,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=113 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return 0.047604626766285414;  // std dev = 9,358, 502,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=113 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 1,43e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return 0.01723390675456401;  // std dev = 9,497, 560,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=113 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 6,32e-08, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return 0.03660288417797897;  // std dev = 9,366, 505,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=113 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return 0.02791134047868124;  // std dev = 9,384, 512,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=113 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else return 0.009408638352924225;  // std dev = 9,469, 547,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=113 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.235249
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 2.788 seconds
Total inference time: 2.156 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.735981
   AUC PR    = 0.509751
   CLL	      = -0.240534
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471963
   F1        = 0.64127


Total scoring time: 2.631 seconds
Parameter learned model CLL: -0.240534


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.3e-07, 0, 101], 'false': [9.422, 414, 113]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 101], 'false': [9.441, 422, 113]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.26e-07, 0, 101], 'false': [9.439, 421, 113]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.53e-07, 0, 101], 'false': [9.469, 434, 113]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 101], 'false': [9.436, 420, 113]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 101], 'false': [9.358, 389, 113]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.43e-07, 0, 101], 'false': [9.497, 447, 113]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.32e-08, 0, 101], 'false': [9.366, 392, 113]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 101], 'false': [9.384, 399, 113]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.66e-08, 0, 101], 'false': [9.469, 434, 113]}]]
[{'': [1.8291199138378817e-15, 0.16844477890317675]}, {'': [-2.110522977505248e-16, 0.16660319678575033]}, {'': [1.793944530879461e-15, 0.16683148872897746]}, {'': [6.331568932515744e-16, 0.16390549749506314]}, {'': [-2.814030636673664e-16, 0.16706032264537266]}, {'': [-4.3969228698026004e-17, 0.17442977095601844]}, {'': [2.0225845201091961e-16, 0.1610682397959162]}, {'': [3.95723058282234e-17, 0.17369277521811866]}, {'': [-1.187169174846702e-16, 0.17199325561523973]}, {'': [4.3969228698026004e-17, 0.16390549749506092]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3516554286060048;  // std dev = 0,500, 77,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09929787341112595;  // std dev = 2,397, 141,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=6 */
%   | | | else return 0.06289670958022524;  // std dev = 7,408, 337,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=69 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.38550110691961015;  // std dev = 0,494, 66,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08438643515529354;  // std dev = 2,393, 131,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=6 */
%   | | | else return 0.07879557683173863;  // std dev = 7,296, 302,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=69 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,26e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.31039773907202073;  // std dev = 0,495, 67,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0744150081990736;  // std dev = 2,392, 129,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=6 */
%   | | | else return 0.05975592585085013;  // std dev = 7,337, 314,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=69 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,53e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.21492264440579803;  // std dev = 0,499, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0709830239536894;  // std dev = 2,397, 142,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=6 */
%   | | | else return 0.037786029414579154;  // std dev = 7,402, 335,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=69 */
%   | else return -0.10159632948783634;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.24413926116664128;  // std dev = 0,487, 62,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09897687273759569;  // std dev = 2,544, 102,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=7 */
%   | | | else return 0.0467020153145221;  // std dev = 7,251, 346,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=68 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08633785900374975;  // std dev = 0,500, 74,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=38 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08685545222647169;  // std dev = 1,711, 136,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=3 */
%   | | | else return 0.07327706244752716;  // std dev = 1,558, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10468825138950866;  // std dev = 1,946, 78,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=4 */
%   | | | else return 0.2338564006377512;  // std dev = 1,331, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.10938229883367571;  // std dev = 6,636, 214,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=62 */
%   | | | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 1,43e-07, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.4484226299725789;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.09443451288456335;  // std dev = 4,168, 70,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07748849496982857;  // std dev = 1,710, 126,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=3 */
%   | | | else return 0.04544784948645622;  // std dev = 1,579, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09732243412070196;  // std dev = 1,952, 86,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=4 */
%   | | | else return 0.17891515746962589;  // std dev = 1,335, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.11292571226661366;  // std dev = 6,541, 200,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=62 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 6,32e-08, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08827666924146715;  // std dev = 0,488, 69,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.053106745489240485;  // std dev = 2,367, 134,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=6 */
%   | | | else return 0.04182717765536506;  // std dev = 7,138, 288,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=69 */
%   | else return -0.0769125991158742;  // std dev = 0,074, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.3618850264479995;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05680803215304273;  // std dev = 4,132, 69,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06564869420367;  // std dev = 1,710, 124,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=3 */
%   | | | else return 0.07453289399246861;  // std dev = 1,553, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08617276607790501;  // std dev = 1,948, 82,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=4 */
%   | | | else return 0.2309514531520557;  // std dev = 1,239, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.06700711949697422;  // std dev = 6,636, 214,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=62 */
%   | | | else return -0.06819363535845485;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.19528786800140052;  // std dev = 0,285, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0044200579141156285;  // std dev = 4,748, 154,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.032225084804190715;  // std dev = 2,339, 106,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=6 */
%   | | | else return 0.04225839315208083;  // std dev = 6,696, 224,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=62 */
%   | else return -0.068566261547235;  // std dev = 0,114, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.833175
   AUC PR    = 0.485421
   CLL	      = -0.265636
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 41.406 seconds
Total inference time: 4.594 seconds
AUC ROC: 0.833175


Results scoring model
   AUC ROC   = 0.887415
   AUC PR    = 0.575805
   CLL	      = -0.221585
   Precision = 0.228243 at threshold = 0.5
   Recall    = 0.649533
   F1        = 0.337789


Total scoring time: 10.78 seconds
Refined model CLL: -0.221585


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.833175
   AUC PR    = 0.485421
   CLL	      = -0.265636
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 57.605 seconds
Total inference time: 4.594 seconds
AUC ROC: 0.833175
Total revision time: 57.605
Best scored revision CLL: -0.221585


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 09:14:30
{'F1': 0.216769, 'Inference time': 4.594, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.833175, 'AUC PR': 0.485421, 'parameter_0.4': {'F1': 0.578947, 'Inference time': 2.156, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 2.788, 'CLL': -0.235249}, 'Recall': 0.654321, 'Learning time': 57.605, 'CLL': -0.265636}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5955226724732505;  // std dev = 0,440, 99,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=73 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11432812912067115;  // std dev = 1,708, 109,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=3 */
%   | | | else return 0.01604367194161748;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.052107475156897946;  // std dev = 2,524, 78,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=7 */
%   | | | else return 0.31366494933438405;  // std dev = 8,348, 281,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=128 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5066940547705003;  // std dev = 0,440, 99,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=73 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10194671713691583;  // std dev = 1,709, 113,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=3 */
%   | | | else return 0.006184705118076267;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.047018050182182095;  // std dev = 2,526, 79,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=7 */
%   | | | else return 0.2776214092139291;  // std dev = 8,298, 277,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=128 */
%   else return -0.1254446385283914;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4050698494728525;  // std dev = 0,440, 99,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=73 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08920284265473562;  // std dev = 1,707, 106,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=3 */
%   | | | else return 0.022088154999448946;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.053284402726778514;  // std dev = 2,542, 91,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=7 */
%   | | | else return 0.217623711140015;  // std dev = 8,409, 286,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=128 */
%   else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.28834656823153654;  // std dev = 0,451, 102,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=73 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08153853070591442;  // std dev = 1,708, 111,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=3 */
%   | | | else return 0.029138808625195932;  // std dev = 1,572, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.030957484407116258;  // std dev = 2,519, 75,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=7 */
%   | | | else return 0.20691509053051765;  // std dev = 8,177, 268,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=128 */
%   else return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3032895142259085;  // std dev = 0,398, 91,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=73 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07031026621476426;  // std dev = 1,705, 98,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=3 */
%   | | | else return 0.14896991048911684;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03559447362180571;  // std dev = 2,530, 82,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=7 */
%   | | | else return 0.12047749432470016;  // std dev = 8,512, 295,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=128 */
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.18623753587250932;  // std dev = 0,427, 96,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=73 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06559315454413693;  // std dev = 1,707, 103,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=3 */
%   | | | else return 0.059629999758157734;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03583102790397046;  // std dev = 2,536, 86,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=7 */
%   | | | else return 0.11238727588586221;  // std dev = 8,373, 283,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=128 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.07627245816841019;  // std dev = 0,460, 105,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=73 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0648522274009305;  // std dev = 1,711, 123,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=3 */
%   | | | else return 0.03452134932886684;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07233186571717996;  // std dev = 1,958, 97,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=4 */
%   | | | else return 0.48643102088075807;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.07888392816317208;  // std dev = 0,497, 288,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=128 */
%   else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.6367839637450077;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.17432714736610408;  // std dev = 0,391, 90,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=73 */
%   | else if ( haswordvenue(F, C) )
%   | | then if ( author(G, D), venue(G, F) )
%   | | | then return 0.17922603049021685;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07710919697981483;  // std dev = 1,399, 65,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=2 */
%   | | else return 0.12436999163650153;  // std dev = 0,432, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then if ( haswordvenue(J, H) )
%   | | then return -0.0606550262187576;  // std dev = 0,148, 133,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=3 */
%   | | else return 0.045858339022685754;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.04693426151482286;  // std dev = 0,495, 297,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=128 */
%   | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( author(F, D), venue(F, E) )
%   | | then return 0.1756255577818878;  // std dev = 0,382, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(B, C) )
%   | | | then return 0.02082125230849213;  // std dev = 4,597, 103,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=71 */
%   | | | else return -0.07145775342831108;  // std dev = 0,996, 120,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=1 */
%   | else return 0.018224430665477097;  // std dev = 0,396, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then return -0.056299589777455694;  // std dev = 0,204, 90,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=4 */
%   | | else if ( author(J, H), title(J, A) )
%   | | | then return -0.11840910912683171;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3453314750374899;  // std dev = 1,139, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.06689052156924138;  // std dev = 0,499, 277,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=128 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09907478765641198;  // std dev = 0,410, 94,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=73 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.046207487243295674;  // std dev = 1,687, 101,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=3 */
%   | | | else return 0.059876273933269275;  // std dev = 1,491, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.027566400319558804;  // std dev = 0,454, 367,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=135 */
%   else return -0.06761529605414314;  // std dev = 0,067, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 0.761343
   AUC PR    = 0.05114
   CLL	      = -0.427861
   Precision = 0.06988 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.116935


Total learning time: 119.501 seconds
Total inference time: 4.981 seconds
AUC ROC: 0.761343


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 09:16:35
{'F1': 0.116935, 'Recall': 0.358025, 'Inference time': 4.981, 'Precision': [0.06988, 0.5], 'Learning time': 119.501, 'AUC PR': 0.05114, 'CLL': -0.427861, 'AUC ROC': 0.761343}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5340748610254392;  // std dev = 0,468, 108,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=73 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11457833762776039;  // std dev = 1,708, 110,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=3 */
%   | | | else return -0.005487428536851416;  // std dev = 1,610, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06816685437417189;  // std dev = 2,546, 95,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=7 */
%   | | | else return 0.2697244978004731;  // std dev = 8,679, 311,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=128 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */


Results
   AUC ROC   = 0.759501
   AUC PR    = 0.049948
   CLL	      = -0.20019
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 12.251 seconds
Total inference time: 2.326 seconds
AUC ROC: 0.759501


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 09:16:50
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.326, 'Precision': [nan, 0.5], 'Learning time': 12.251, 'AUC PR': 0.049948, 'CLL': -0.20019, 'AUC ROC': 0.759501}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 8,92e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.07436515131572403;  // std dev = 11,745, 814,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=176 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.07023686532570769;  // std dev = 11,706, 795,000 (wgt'ed) examples reached here.  /* #neg=619 #pos=176 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,13e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.04692197844040989;  // std dev = 11,812, 849,000 (wgt'ed) examples reached here.  /* #neg=673 #pos=176 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.0496818570490558;  // std dev = 11,743, 813,000 (wgt'ed) examples reached here.  /* #neg=637 #pos=176 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,56e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.04081439929322372;  // std dev = 11,757, 820,000 (wgt'ed) examples reached here.  /* #neg=644 #pos=176 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694903;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.03619171587792343;  // std dev = 11,747, 815,000 (wgt'ed) examples reached here.  /* #neg=639 #pos=176 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253523;  // std dev = 2,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.03374797322552465;  // std dev = 11,725, 804,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=176 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.0222570004252183;  // std dev = 11,772, 828,000 (wgt'ed) examples reached here.  /* #neg=652 #pos=176 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.029310590694106083;  // std dev = 11,694, 789,000 (wgt'ed) examples reached here.  /* #neg=613 #pos=176 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.01625767215723782;  // std dev = 11,757, 820,000 (wgt'ed) examples reached here.  /* #neg=644 #pos=176 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.237964
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 3.559 seconds
Total inference time: 2.309 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.725857
   AUC PR    = 0.49005
   CLL	      = -0.243994
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451713
   F1        = 0.622318


Total scoring time: 3.442 seconds
Parameter learned model CLL: -0.243994


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.92e-07, 0, 145], 'false': [11.745, 638, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 145], 'false': [11.706, 619, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.13e-07, 0, 145], 'false': [11.812, 673, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.38e-07, 0, 145], 'false': [11.743, 637, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.56e-07, 0, 145], 'false': [11.757, 644, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 145], 'false': [11.747, 639, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.38e-07, 0, 145], 'false': [11.725, 628, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 145], 'false': [11.772, 652, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 145], 'false': [11.694, 613, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.32e-08, 0, 145], 'false': [11.757, 644, 176]}]]
[{'': [5.488330096905601e-15, 0.16946676406136066]}, {'': [-2.2541355755148008e-15, 0.1723729282860732]}, {'': [1.8131090498706005e-15, 0.16432829588195028]}, {'': [1.3230795769326004e-15, 0.16961763713578165]}, {'': [4.532772624676501e-16, 0.16856632956572945]}, {'': [-1.4700884188140004e-16, 0.1693161202905701]}, {'': [3.920235783504001e-16, 0.17098586668647095]}, {'': [-2.9401768376280007e-16, 0.16737846857569844]}, {'': [-3.675221047035001e-17, 0.1733082096828871]}, {'': [2.7564157852762507e-17, 0.1685663295657349]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 8,92e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.44230735094109735;  // std dev = 4,953, 101,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=59 */
%   | | | else return -0.05773891536777739;  // std dev = 2,871, 107,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=9 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09240051544993824;  // std dev = 2,925, 182,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=9 */
%   | | | else return 0.15634170618384755;  // std dev = 8,335, 332,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=99 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.36269212912070165;  // std dev = 5,053, 104,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=59 */
%   | | | else return -0.06573604828916375;  // std dev = 2,894, 130,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=9 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08258390963393442;  // std dev = 2,927, 186,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=9 */
%   | | | else return 0.14171308920011255;  // std dev = 8,303, 326,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=99 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,13e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.1270683706997246;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.3406008022326047;  // std dev = 4,753, 95,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=58 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07801236277234262;  // std dev = 2,934, 204,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=9 */
%   | | | else return 0.06918741403174204;  // std dev = 8,969, 458,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=108 */
%   | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.23549498228116236;  // std dev = 0,492, 103,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=59 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06833352300529864;  // std dev = 2,932, 197,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=9 */
%   | | | else return 0.06400584294332924;  // std dev = 8,940, 448,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=108 */
%   | else return -0.10159632948783628;  // std dev = 1,83e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,56e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16576612405657493;  // std dev = 0,493, 106,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06253967545703716;  // std dev = 2,933, 201,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=9 */
%   | | | else return 0.05030811815298127;  // std dev = 8,964, 455,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=108 */
%   | else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694903;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11128696069901581;  // std dev = 0,493, 109,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=59 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05465718256482179;  // std dev = 2,930, 192,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=9 */
%   | | | else return 0.034604299259401346;  // std dev = 9,016, 468,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=108 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253523;  // std dev = 2,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08287666356061055;  // std dev = 0,494, 109,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=59 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08666369061286452;  // std dev = 2,896, 142,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=9 */
%   | | | else return 0.029146482126447618;  // std dev = 8,981, 534,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=108 */
%   | else return -0.07877675473109165;  // std dev = 4,15e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.04040901058559714;  // std dev = 1,362, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.02335066780521569;  // std dev = 5,229, 111,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=56 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09632433799863803;  // std dev = 2,188, 134,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=5 */
%   | | | else return 0.06605699170141727;  // std dev = 1,754, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.056760639765350826;  // std dev = 2,397, 146,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=6 */
%   | | | else return 0.07906903847670306;  // std dev = 1,569, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.060968335782588076;  // std dev = 8,426, 350,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=99 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.02205175530240741;  // std dev = 5,725, 233,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=64 */
%   | | | else return 0.3554013707220373;  // std dev = 1,397, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03800956381515316;  // std dev = 2,904, 158,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=9 */
%   | | | else return 0.061175110092558785;  // std dev = 8,362, 337,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=99 */
%   | else return -0.0695704144089603;  // std dev = 0,023, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.05091787132380688;  // std dev = 5,216, 112,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=59 */
%   | | | else return -0.04274842195716866;  // std dev = 2,918, 182,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.054491411708601445;  // std dev = 2,800, 112,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=9 */
%   | | | else return 0.06568411218555356;  // std dev = 8,269, 320,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=99 */
%   | else return -0.06523796426854574;  // std dev = 0,024, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */


Results
   AUC ROC   = 0.853205
   AUC PR    = 0.489177
   CLL	      = -0.264883
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 75.95 seconds
Total inference time: 4.455 seconds
AUC ROC: 0.853205


Results scoring model
   AUC ROC   = 0.878429
   AUC PR    = 0.552809
   CLL	      = -0.230426
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451713
   F1        = 0.622318


Total scoring time: 9.928 seconds
Refined model CLL: -0.230426


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853205
   AUC PR    = 0.489177
   CLL	      = -0.264883
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 92.879 seconds
Total inference time: 4.455 seconds
AUC ROC: 0.853205
Total revision time: 92.879
Best scored revision CLL: -0.230426


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 09:18:30
{'F1': 0.216769, 'Inference time': 4.455, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853205, 'AUC PR': 0.489177, 'parameter_0.6': {'F1': 0.578947, 'Inference time': 2.309, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 3.559, 'CLL': -0.237964}, 'Recall': 0.654321, 'Learning time': 92.879, 'CLL': -0.264883}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5290350110488768;  // std dev = 0,470, 158,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=106 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10696734397025524;  // std dev = 2,406, 172,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=6 */
%   | | | else return 0.034619523334806335;  // std dev = 1,572, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0655798784598097;  // std dev = 2,883, 118,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=9 */
%   | | | else return 0.31735639430696727;  // std dev = 10,322, 429,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=197 */
%   else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.43121464182069524;  // std dev = 0,477, 163,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=106 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09503622449137462;  // std dev = 2,407, 175,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=6 */
%   | | | else return 0.06816796134754846;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06088326465362373;  // std dev = 2,888, 123,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=9 */
%   | | | else return 0.2678451129281949;  // std dev = 10,382, 435,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=197 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.17658736638233813;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.4412697764748063;  // std dev = 5,171, 140,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=104 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0832283258143427;  // std dev = 2,190, 109,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=5 */
%   | | | else return 0.5422407106282937;  // std dev = 1,145, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07872426425399442;  // std dev = 2,400, 149,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=6 */
%   | | | else return 0.032670322641344146;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.2282234517549614;  // std dev = 0,498, 431,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=197 */
%   else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.32188665813322925;  // std dev = 0,444, 148,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=106 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.017268560284572687;  // std dev = 1,354, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return -0.07290243789100903;  // std dev = 2,559, 153,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05918400976010862;  // std dev = 2,814, 140,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=9 */
%   | | | else return 0.170114934152226;  // std dev = 10,487, 446,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=197 */
%   else return -0.10159632948783616;  // std dev = 5,37e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.11082142414483319;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( author(F, D), title(F, A) )
%   | | | then return -0.14752754446292884;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.22747245553707252;  // std dev = 5,454, 144,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=102 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07368320080577685;  // std dev = 2,419, 178,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=6 */
%   | | | else return -0.003409955010143873;  // std dev = 1,597, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.051979228492486394;  // std dev = 2,808, 143,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=9 */
%   | | | else return 0.1787060776946377;  // std dev = 10,070, 406,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=197 */
%   else return -0.09269127618926107;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1212175845285474;  // std dev = 0,468, 165,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=106 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06449347191707576;  // std dev = 2,410, 172,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=6 */
%   | | | else return -0.0026281349102676354;  // std dev = 1,597, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03147720683045673;  // std dev = 2,789, 113,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=9 */
%   | | | else return 0.0797315406411406;  // std dev = 10,639, 463,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=197 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08950687673455586;  // std dev = 0,474, 164,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=106 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06062828550193738;  // std dev = 2,417, 175,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=6 */
%   | | | else return 0.051627269424162923;  // std dev = 1,548, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return 0.07059804220348437;  // std dev = 0,467, 532,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=206 */
%   else return -0.0787767547310917;  // std dev = 2,79e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.1408759146123312;  // std dev = 0,446, 147,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=106 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0733683902697663;  // std dev = 2,197, 130,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=5 */
%   | | | else return 0.12404006038222579;  // std dev = 1,652, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0.026763103977234137;  // std dev = 0,440, 626,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=206 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.06169201881475317;  // std dev = 0,455, 160,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=106 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05579635961798156;  // std dev = 2,413, 168,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=6 */
%   | | | else return 0.035125305873543684;  // std dev = 1,549, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.036413163059974996;  // std dev = 2,775, 121,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=9 */
%   | | | else return 0.0414319227596665;  // std dev = 10,613, 460,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=197 */
%   else return -0.06842697784420268;  // std dev = 2,58e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.18101850438165912;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.10209211698787418;  // std dev = 0,440, 141,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=104 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.06445281202704638;  // std dev = 2,202, 129,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=5 */
%   | | | else return 0.11154625687053989;  // std dev = 1,649, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.0455155246772745;  // std dev = 2,888, 189,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=9 */
%   | | | else return 0.05826420001030082;  // std dev = 10,362, 433,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=197 */
%   else return -0.06419184008202625;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */


Results
   AUC ROC   = 0.766973
   AUC PR    = 0.051655
   CLL	      = -0.391628
   Precision = 0.073107 at threshold = 0.5
   Recall    = 0.345679
   F1        = 0.12069


Total learning time: 368.078 seconds
Total inference time: 4.73 seconds
AUC ROC: 0.766973


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 09:24:43
{'F1': 0.12069, 'Recall': 0.345679, 'Inference time': 4.73, 'Precision': [0.073107, 0.5], 'Learning time': 368.078, 'AUC PR': 0.051655, 'CLL': -0.391628, 'AUC ROC': 0.766973}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5037185553526743;  // std dev = 0,478, 158,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=102 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10368312596918994;  // std dev = 2,193, 131,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=5 */
%   | | | else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.09751608953102975;  // std dev = 2,933, 203,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=9 */
%   | | | else return 0.321678346864214;  // std dev = 10,280, 425,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=197 */
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */


Results
   AUC ROC   = 0.76766
   AUC PR    = 0.06789
   CLL	      = -0.206483
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.191 seconds
Total inference time: 2.195 seconds
AUC ROC: 0.76766


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 09:25:06
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.195, 'Precision': [nan, 0.5], 'Learning time': 20.191, 'AUC PR': 0.06789, 'CLL': -0.206483, 'AUC ROC': 0.76766}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.07745540182865461;  // std dev = 13,516, 1.067,000 (wgt'ed) examples reached here.  /* #neg=833 #pos=234 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.0598384202083935;  // std dev = 13,584, 1.107,000 (wgt'ed) examples reached here.  /* #neg=873 #pos=234 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.056070554112953606;  // std dev = 13,549, 1.086,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=234 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.04703342442642011;  // std dev = 13,561, 1.093,000 (wgt'ed) examples reached here.  /* #neg=859 #pos=234 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.038444949181030884;  // std dev = 13,578, 1.103,000 (wgt'ed) examples reached here.  /* #neg=869 #pos=234 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.04209009610308132;  // std dev = 13,498, 1.057,000 (wgt'ed) examples reached here.  /* #neg=823 #pos=234 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.031299108382101336;  // std dev = 13,537, 1.079,000 (wgt'ed) examples reached here.  /* #neg=845 #pos=234 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.023940410655241415;  // std dev = 13,559, 1.092,000 (wgt'ed) examples reached here.  /* #neg=858 #pos=234 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.01430820395948008;  // std dev = 13,610, 1.123,000 (wgt'ed) examples reached here.  /* #neg=889 #pos=234 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.010953198903525316;  // std dev = 13,620, 1.129,000 (wgt'ed) examples reached here.  /* #neg=895 #pos=234 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.234519
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 3.919 seconds
Total inference time: 2.302 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.726636
   AUC PR    = 0.491508
   CLL	      = -0.240591
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.453271
   F1        = 0.623794


Total scoring time: 3.501 seconds
Parameter learned model CLL: -0.240591


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.09e-06, 0, 194], 'false': [13.516, 833, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 194], 'false': [13.584, 873, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.19e-07, 0, 194], 'false': [13.549, 852, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 194], 'false': [13.561, 859, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.95e-07, 0, 194], 'false': [13.578, 869, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 194], 'false': [13.498, 823, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 194], 'false': [13.537, 845, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 194], 'false': [13.559, 858, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 194], 'false': [13.61, 889, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-07, 0, 194], 'false': [13.62, 895, 234]}]]
[{'': [6.15315358802561e-15, 0.1712111403799261]}, {'': [-3.516087764586063e-15, 0.16669971577764411]}, {'': [1.9777993675796604e-15, 0.16904245902140022]}, {'': [4.76136884787696e-16, 0.16825527832861534]}, {'': [8.057701127176394e-16, 0.16714162068504396]}, {'': [-3.57102663590772e-16, 0.17237160203321622]}, {'': [4.3951097057325786e-16, 0.169835970387579]}, {'': [-1.2361246047372877e-16, 0.1683673469387711]}, {'': [-2.7469435660828616e-16, 0.16495219759437016]}, {'': [5.722799096005961e-17, 0.16430508668715982]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.088918165868743;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.42190732436125533;  // std dev = 6,053, 149,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=84 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.10103473836987584;  // std dev = 3,097, 245,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=10 */
%   | | | else return 0.08091316274178535;  // std dev = 10,319, 615,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=137 */
%   | else return -0.14185106490048763;  // std dev = 8,56e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.42666833038085417;  // std dev = 0,483, 139,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=87 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.088669093173274;  // std dev = 3,096, 242,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=10 */
%   | | | else return 0.07596458880355693;  // std dev = 10,284, 601,000 (wgt'ed) examples reached here.  /* #neg=464 #pos=137 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.33799440291563926;  // std dev = 5,781, 142,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=87 */
%   | | | else return -0.09148220155360232;  // std dev = 3,195, 163,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=11 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07102711543422356;  // std dev = 3,083, 203,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=10 */
%   | | | else return 0.12962600134812371;  // std dev = 9,447, 432,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=126 */
%   | else return -0.11231637819360624;  // std dev = 6,14e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.33928003393773504;  // std dev = 1,198, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2076938714429049;  // std dev = 6,051, 149,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=83 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07257617963471731;  // std dev = 3,098, 248,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=10 */
%   | | | else return 0.054005379706912694;  // std dev = 10,228, 604,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=137 */
%   | else return -0.10159632948783616;  // std dev = 5,58e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.0443597542674976;  // std dev = 1,343, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2304427130320914;  // std dev = 5,570, 133,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=84 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08941682221514526;  // std dev = 3,202, 169,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=11 */
%   | | | else return 0.037927240508047695;  // std dev = 10,200, 687,000 (wgt'ed) examples reached here.  /* #neg=551 #pos=136 */
%   | else return -0.09269127618926105;  // std dev = 2,11e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12917709446242603;  // std dev = 0,491, 150,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07956543890144582;  // std dev = 3,204, 175,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=11 */
%   | | | else return 0.03347356005823098;  // std dev = 10,180, 691,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=136 */
%   | else return -0.08518475138839682;  // std dev = 4,34e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12692650023528212;  // std dev = 0,484, 143,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=87 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07677350605086712;  // std dev = 3,104, 285,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=10 */
%   | | | else return 0.04413092482471145;  // std dev = 10,154, 605,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=137 */
%   | else return -0.07877675473109169;  // std dev = 3,49e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.0542895654588941;  // std dev = 6,074, 154,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=87 */
%   | | | else return -0.0635607410306851;  // std dev = 3,094, 247,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=10 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0741157140227676;  // std dev = 3,203, 164,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=11 */
%   | | | else return 0.059525044975518464;  // std dev = 9,614, 473,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=126 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.028185520882356558;  // std dev = 0,493, 157,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=87 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07083507804051893;  // std dev = 2,414, 235,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=6 */
%   | | | else return 0.0270734781535067;  // std dev = 1,864, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09822948059721544;  // std dev = 2,201, 163,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=5 */
%   | | | else return 0.28463107954274464;  // std dev = 1,846, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.09354844007669967;  // std dev = 9,322, 406,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=126 */
%   | | | else return -0.0684269778442027;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0753060022804972;  // std dev = 0,483, 143,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=87 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06108713837439294;  // std dev = 3,135, 177,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=11 */
%   | | | else return 0.009714644894909192;  // std dev = 10,122, 689,000 (wgt'ed) examples reached here.  /* #neg=553 #pos=136 */
%   | else return -0.06699936830880654;  // std dev = 0,067, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 0.853497
   AUC PR    = 0.484335
   CLL	      = -0.243335
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 88.431 seconds
Total inference time: 4.072 seconds
AUC ROC: 0.853497


Results scoring model
   AUC ROC   = 0.886779
   AUC PR    = 0.557947
   CLL	      = -0.228577
   Precision = 0.216511 at threshold = 0.5
   Recall    = 0.649533
   F1        = 0.324766


Total scoring time: 10.956 seconds
Refined model CLL: -0.228577


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853497
   AUC PR    = 0.484335
   CLL	      = -0.243335
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 106.807 seconds
Total inference time: 4.072 seconds
AUC ROC: 0.853497
Total revision time: 106.807
Best scored revision CLL: -0.228577


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 09:27:00
{'F1': 0.216769, 'Inference time': 4.072, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853497, 'parameter_0.8': {'F1': 0.578947, 'Inference time': 2.302, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 3.919, 'CLL': -0.234519}, 'AUC PR': 0.484335, 'Recall': 0.654321, 'Learning time': 106.807, 'CLL': -0.243335}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.5745668455472703;  // std dev = 0,451, 201,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=144 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11518439823382151;  // std dev = 2,417, 225,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=6 */
%   | | | else return 0.011995088945666114;  // std dev = 1,840, 26,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else return 0.23862984033288814;  // std dev = 0,486, 707,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=269 */
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.45276632666031263;  // std dev = 0,462, 220,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=149 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1027585058431271;  // std dev = 2,418, 234,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=6 */
%   | | | else return 0.030595542043629683;  // std dev = 1,818, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.10108170488162184;  // std dev = 3,194, 152,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=11 */
%   | | | else return 0.2799769390920994;  // std dev = 11,875, 569,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=258 */
%   else return -0.12544463852839152;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6198907963725167;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1840591429430899;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.39696878672721986;  // std dev = 0,452, 202,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=144 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09018254530545619;  // std dev = 2,416, 221,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=6 */
%   | | | else return 0.043361095462719726;  // std dev = 1,799, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.09472725545391432;  // std dev = 3,208, 170,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=11 */
%   | | | else return 0.23138249223581314;  // std dev = 11,926, 575,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=258 */
%   else return -0.11231637819360621;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.30546934714100815;  // std dev = 0,442, 211,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=149 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08309949133981426;  // std dev = 2,418, 238,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=6 */
%   | | | else return 0.001206780810148012;  // std dev = 1,840, 26,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.08205522982410665;  // std dev = 3,207, 169,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=11 */
%   | | | else return 0.16372777898455854;  // std dev = 12,202, 610,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=258 */
%   else return -0.10159632948783617;  // std dev = 5,05e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.24542194613172458;  // std dev = 0,439, 205,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=149 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07276348685031798;  // std dev = 2,415, 216,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=6 */
%   | | | else return 0.05773079156787322;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06281754551259683;  // std dev = 3,191, 148,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=11 */
%   | | | else return 0.17215128560249726;  // std dev = 11,759, 556,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=258 */
%   else return -0.09269127618926107;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1420960333822886;  // std dev = 0,455, 219,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=149 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06883320714802478;  // std dev = 2,418, 237,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=6 */
%   | | | else return -4.1941946450869906E-4;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07258474985821976;  // std dev = 3,220, 192,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=11 */
%   | | | else return 0.1395530272964263;  // std dev = 11,713, 551,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=258 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1560599209291706;  // std dev = 0,424, 207,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=149 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06374956318997424;  // std dev = 2,419, 243,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=6 */
%   | | | else return -0.006516784140777555;  // std dev = 1,840, 26,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05356875542954231;  // std dev = 3,201, 161,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=11 */
%   | | | else return 0.0778495592296687;  // std dev = 12,041, 589,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=258 */
%   else return -0.07877675473109165;  // std dev = 4,15e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.27292089198086966;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.304894750903521;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.09318344421512084;  // std dev = 0,454, 203,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=144 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05700281569842151;  // std dev = 2,417, 227,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=6 */
%   | | | else return -0.011339267508830256;  // std dev = 1,846, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04194887259537895;  // std dev = 3,191, 148,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=11 */
%   | | | else return 0.07671679989838627;  // std dev = 11,858, 567,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=258 */
%   else return -0.07324622576333704;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09505675588457374;  // std dev = 0,432, 205,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=149 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05060615244620151;  // std dev = 2,414, 210,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=6 */
%   | | | else return 0.04202676381338102;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04655549997088247;  // std dev = 3,206, 168,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=11 */
%   | | | else return 0.03348618771767276;  // std dev = 12,127, 600,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=258 */
%   else return -0.06842697784420267;  // std dev = 2,98e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.025441685266368703;  // std dev = 0,455, 220,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=149 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0517561301053224;  // std dev = 2,420, 252,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=6 */
%   | | | else return 0.010268822492672653;  // std dev = 1,818, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07699549177467498;  // std dev = 2,202, 164,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=5 */
%   | | | else return 0.5591833700139429;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.033476707397990135;  // std dev = 0,496, 589,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=258 */
%   else return -0.06419184008202625;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */


Results
   AUC ROC   = 0.771745
   AUC PR    = 0.070075
   CLL	      = -0.384154
   Precision = 0.075521 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.124731


Total learning time: 244.879 seconds
Total inference time: 4.925 seconds
AUC ROC: 0.771745


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 09:31:10
{'F1': 0.124731, 'Recall': 0.358025, 'Inference time': 4.925, 'Precision': [0.075521, 0.5], 'Learning time': 244.879, 'AUC PR': 0.070075, 'CLL': -0.384154, 'AUC ROC': 0.771745}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5116577070293336;  // std dev = 0,476, 228,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=149 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11695479934032228;  // std dev = 2,419, 241,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=6 */
%   | | | else return 0.0399671169176941;  // std dev = 1,809, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07310106490048765;  // std dev = 3,201, 160,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=11 */
%   | | | else return 0.28672036367093634;  // std dev = 12,142, 602,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=258 */
%   else return -0.14185106490048766;  // std dev = 7,15e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */


Results
   AUC ROC   = 0.759501
   AUC PR    = 0.049948
   CLL	      = -0.20258
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 25.081 seconds
Total inference time: 2.026 seconds
AUC ROC: 0.759501


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 09:31:38
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.026, 'Precision': [nan, 0.5], 'Learning time': 25.081, 'AUC PR': 0.049948, 'CLL': -0.20258, 'AUC ROC': 0.759501}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.07321843034456957;  // std dev = 15,191, 1.367,000 (wgt'ed) examples reached here.  /* #neg=1.073 #pos=294 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.06297408374858826;  // std dev = 15,202, 1.374,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=294 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.0628028315227678;  // std dev = 15,123, 1.324,000 (wgt'ed) examples reached here.  /* #neg=1.030 #pos=294 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.05692939480875044;  // std dev = 15,097, 1.308,000 (wgt'ed) examples reached here.  /* #neg=1.014 #pos=294 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.044446172408927336;  // std dev = 15,140, 1.334,000 (wgt'ed) examples reached here.  /* #neg=1.040 #pos=294 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.037250091048072344;  // std dev = 15,146, 1.338,000 (wgt'ed) examples reached here.  /* #neg=1.044 #pos=294 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.03530052171653213;  // std dev = 15,110, 1.316,000 (wgt'ed) examples reached here.  /* #neg=1.022 #pos=294 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.02519570005023865;  // std dev = 15,155, 1.344,000 (wgt'ed) examples reached here.  /* #neg=1.050 #pos=294 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.019616902983432768;  // std dev = 15,171, 1.354,000 (wgt'ed) examples reached here.  /* #neg=1.060 #pos=294 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.007128514182030054;  // std dev = 15,262, 1.415,000 (wgt'ed) examples reached here.  /* #neg=1.121 #pos=294 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.238926
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 4.632 seconds
Total inference time: 1.729 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.725746
   AUC PR    = 0.48982
   CLL	      = -0.244971
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451493
   F1        = 0.622108


Total scoring time: 4.053 seconds
Parameter learned model CLL: -0.244971


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 242], 'false': [15.191, 1073, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.202, 1080, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.92e-07, 0, 242], 'false': [15.123, 1030, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.097, 1014, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.67e-07, 0, 242], 'false': [15.14, 1040, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 242], 'false': [15.146, 1044, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 242], 'false': [15.11, 1022, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.23e-07, 0, 242], 'false': [15.155, 1050, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.171, 1060, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 242], 'false': [15.262, 1121, 294]}]]
[{'': [4.8152482919279514e-15, 0.16881460746009744]}, {'': [-4.2280228904733235e-15, 0.16818901241396111]}, {'': [9.98283182472868e-16, 0.1727462326922869]}, {'': [-2.055288905091199e-16, 0.17424880060600317]}, {'': [2.9361270072731413e-16, 0.17181813890656333]}, {'': [3.8169651094550837e-16, 0.1714492549618945]}, {'': [3.5233524087277696e-16, 0.17349479402445353]}, {'': [6.239269890455425e-17, 0.17089843750000058]}, {'': [-1.7249746167729704e-16, 0.1699870616958475]}, {'': [2.9361270072731413e-17, 0.16460387818551261]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4206489350995093;  // std dev = 0,496, 192,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=108 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09216162390669934;  // std dev = 3,899, 322,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=16 */
%   | | | else return 0.07443392237686165;  // std dev = 11,543, 786,000 (wgt'ed) examples reached here.  /* #neg=616 #pos=170 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.33090646264051815;  // std dev = 7,109, 203,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=108 */
%   | | | else return -0.08342731351336516;  // std dev = 3,860, 241,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=16 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08161548281840933;  // std dev = 3,900, 324,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=16 */
%   | | | else return 0.12632187136709722;  // std dev = 10,548, 555,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=154 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.007142774953124764;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.34163217765061993;  // std dev = 6,440, 173,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0737822340891406;  // std dev = 3,902, 332,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=16 */
%   | | | else return 0.04774429465321222;  // std dev = 11,536, 815,000 (wgt'ed) examples reached here.  /* #neg=645 #pos=170 */
%   | else return -0.11231637819360621;  // std dev = 7,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.2672978215296561;  // std dev = 6,604, 182,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=108 */
%   | | | else return -0.07575651284951689;  // std dev = 3,853, 234,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=16 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06251929343413486;  // std dev = 3,895, 309,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=16 */
%   | | | else return 0.12474115504670409;  // std dev = 10,386, 514,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=154 */
%   | else return -0.10159632948783626;  // std dev = 4,59e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19604839344394911;  // std dev = 0,492, 185,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=108 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0609943704144957;  // std dev = 3,904, 340,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=16 */
%   | | | else return 0.04892021971854992;  // std dev = 11,333, 748,000 (wgt'ed) examples reached here.  /* #neg=578 #pos=170 */
%   | else return -0.09269127618926098;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.09276080335998875;  // std dev = 1,700, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.12487062319272897;  // std dev = 6,721, 186,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=104 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05249132274150408;  // std dev = 3,899, 321,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=16 */
%   | | | else return 0.036603307014671994;  // std dev = 11,376, 761,000 (wgt'ed) examples reached here.  /* #neg=591 #pos=170 */
%   | else return -0.08518475138839682;  // std dev = 4,83e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.07319813444644363;  // std dev = 1,707, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.17790995081323122;  // std dev = 6,047, 161,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=104 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05213606948589318;  // std dev = 3,908, 352,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=16 */
%   | | | else return 0.03642481823058043;  // std dev = 11,324, 747,000 (wgt'ed) examples reached here.  /* #neg=577 #pos=170 */
%   | else return -0.0787767547310916;  // std dev = 5,67e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.05611721091536885;  // std dev = 1,706, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.08381347409363776;  // std dev = 6,471, 174,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=104 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08123780266905621;  // std dev = 3,854, 233,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=16 */
%   | | | else return 0.01892749968174712;  // std dev = 11,419, 884,000 (wgt'ed) examples reached here.  /* #neg=714 #pos=170 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.014048943148054776;  // std dev = 1,635, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.09975066553290975;  // std dev = 6,165, 164,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=104 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06705921891464249;  // std dev = 3,845, 224,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=16 */
%   | | | else return 0.015337125916057251;  // std dev = 11,402, 908,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=170 */
%   | else return -0.06842697784420265;  // std dev = 4,94e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return -0.028858799668645022;  // std dev = 7,180, 209,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=108 */
%   | | | else return -0.07539754930290027;  // std dev = 2,426, 330,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=6 */
%   | | else return 0.1251350887738002;  // std dev = 0,405, 47,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09818234760470698;  // std dev = 2,414, 201,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=6 */
%   | | | else return 0.3585733245828341;  // std dev = 2,219, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.0660213483433725;  // std dev = 10,492, 540,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=154 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 0.853931
   AUC PR    = 0.489198
   CLL	      = -0.251844
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 102.047 seconds
Total inference time: 4.128 seconds
AUC ROC: 0.853931


Results scoring model
   AUC ROC   = 0.883344
   AUC PR    = 0.558032
   CLL	      = -0.225493
   Precision = 0.221507 at threshold = 0.5
   Recall    = 0.641791
   F1        = 0.329344


Total scoring time: 13.974 seconds
Refined model CLL: -0.225493


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853931
   AUC PR    = 0.489198
   CLL	      = -0.251844
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 124.706 seconds
Total inference time: 4.128 seconds
AUC ROC: 0.853931
Total revision time: 124.706
Best scored revision CLL: -0.225493


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 09:33:49
{'parameter_1.0': {'F1': 0.578947, 'Inference time': 1.729, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 4.632, 'CLL': -0.238926}, 'F1': 0.216769, 'Inference time': 4.128, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853931, 'AUC PR': 0.489198, 'Recall': 0.654321, 'Learning time': 124.706, 'CLL': -0.251844}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5947901564735545;  // std dev = 0,440, 262,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1224962261908106;  // std dev = 2,426, 310,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=6 */
%   | | | else return 0.07554023944733845;  // std dev = 2,798, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05764053858469817;  // std dev = 3,828, 190,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=16 */
%   | | | else return 0.29741447182267156;  // std dev = 13,206, 708,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=311 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.43496753022878;  // std dev = 0,472, 290,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=193 */
%   | else return 0.11473770158625364;  // std dev = 0,436, 1.248,000 (wgt'ed) examples reached here.  /* #neg=905 #pos=343 */
%   else return -0.12544463852839136;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6835733086375065;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.3164266913624934;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.35993694500114215;  // std dev = 0,468, 275,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=186 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.121861627532987;  // std dev = 2,426, 315,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=6 */
%   | | | else return 0.05076409873947344;  // std dev = 2,798, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.07347289740111304;  // std dev = 3,846, 212,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=16 */
%   | | | else return 0.25228332236409695;  // std dev = 13,054, 688,000 (wgt'ed) examples reached here.  /* #neg=377 #pos=311 */
%   else return -0.11231637819360621;  // std dev = 7,60e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2908623329040259;  // std dev = 0,454, 282,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10489481927582205;  // std dev = 2,423, 274,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=6 */
%   | | | else return 0.0893616709416107;  // std dev = 2,714, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06680996392169107;  // std dev = 3,851, 219,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=16 */
%   | | | else return 0.18172773412748444;  // std dev = 13,374, 732,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=311 */
%   else return -0.10159632948783628;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2206901769558188;  // std dev = 0,452, 282,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09521826971365634;  // std dev = 2,424, 294,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=6 */
%   | | | else return 0.10711366329584412;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05962519595692376;  // std dev = 3,852, 221,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=16 */
%   | | | else return 0.1792390696644126;  // std dev = 12,991, 680,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=311 */
%   else return -0.09269127618926108;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.39534876280929737;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.3600570605618442;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.20412157973100495;  // std dev = 0,444, 255,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=186 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08450118821877897;  // std dev = 2,423, 276,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=6 */
%   | | | else return 0.05257314963953876;  // std dev = 2,727, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04112884883257659;  // std dev = 3,828, 190,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=16 */
%   | | | else return 0.13264142958404831;  // std dev = 13,101, 694,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=311 */
%   else return -0.08518475138839682;  // std dev = 5,16e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.33958042207829836;  // std dev = 0,142, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.5757544178882537;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.12573896058847547;  // std dev = 0,448, 269,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=186 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07650147342548033;  // std dev = 2,422, 273,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=6 */
%   | | | else return 0.04390826401119613;  // std dev = 2,727, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03926683211730172;  // std dev = 3,833, 196,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=16 */
%   | | | else return 0.0754658145982949;  // std dev = 13,427, 740,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=311 */
%   else return -0.0787767547310916;  // std dev = 5,77e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.07807128226653995;  // std dev = 1,134, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.08240000042005996;  // std dev = 7,580, 271,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=186 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0695882885861534;  // std dev = 2,422, 269,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=6 */
%   | | | else return 0.050327723256914994;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08435539858649863;  // std dev = 2,409, 185,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=6 */
%   | | | else return 0.4714474630987161;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else return 0.08867761019245986;  // std dev = 0,498, 690,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=311 */
%   else return -0.07324622576333707;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2739194974572123;  // std dev = 0,087, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.09389323922921344;  // std dev = 0,441, 262,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=186 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.06590965855737135;  // std dev = 2,424, 295,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=6 */
%   | | | else return 0.049079045565680976;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.03550299913950811;  // std dev = 3,695, 205,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=16 */
%   | | | else return 0.0759333422777004;  // std dev = 12,975, 678,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=311 */
%   else return -0.06842697784420267;  // std dev = 4,01e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.02248856729643027;  // std dev = 0,459, 291,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=193 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05991738920996446;  // std dev = 2,423, 282,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=6 */
%   | | | else return -0.020079801813638467;  // std dev = 2,798, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07289549419681568;  // std dev = 2,410, 187,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=6 */
%   | | | else return 0.3064210287423626;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else return 0.03108359166086194;  // std dev = 0,495, 720,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=311 */
%   else return -0.06419184008202626;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 0.765119
   AUC PR    = 0.070429
   CLL	      = -0.410383
   Precision = 0.075521 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.124731


Total learning time: 420.725 seconds
Total inference time: 4.905 seconds
AUC ROC: 0.765119


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 09:40:55
{'F1': 0.124731, 'Recall': 0.358025, 'Inference time': 4.905, 'Precision': [0.075521, 0.5], 'Learning time': 420.725, 'AUC PR': 0.070429, 'CLL': -0.410383, 'AUC ROC': 0.765119}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.6091216977454231;  // std dev = 0,432, 257,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=193 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11457833762776087;  // std dev = 2,416, 220,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=6 */
%   | | | else return 0.3844647245731965;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.1201904150809937;  // std dev = 2,423, 277,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=6 */
%   | | | else return 0.2029765213064089;  // std dev = 2,560, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else return 0.3075709004174268;  // std dev = 0,497, 692,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=311 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */


Results
   AUC ROC   = 0.696098
   AUC PR    = 0.042668
   CLL	      = -0.223768
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 61.19 seconds
Total inference time: 2.418 seconds
AUC ROC: 0.696098


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 09:41:59
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.418, 'Precision': [nan, 0.5], 'Learning time': 61.19, 'AUC PR': 0.042668, 'CLL': -0.223768, 'AUC ROC': 0.696098}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 558
Target train neg examples: 23373

Target test facts examples: 9016
Target test pos	 examples: 140
Target test neg examples: 4623

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,06e-07, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.07409577895333364;  // std dev = 7,139, 301,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=65 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.08020450111798064;  // std dev = 7,069, 281,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=65 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.05939744333565553;  // std dev = 7,115, 294,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=65 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.06645885946218082;  // std dev = 7,045, 275,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=65 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.04465335284655638;  // std dev = 7,101, 290,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=65 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.041915144247655745;  // std dev = 7,083, 285,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=65 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325355;  // std dev = 5,16e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.09249879273666056;  // std dev = 6,817, 228,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=65 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.012212140911583975;  // std dev = 7,122, 296,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=65 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.029573590326662253;  // std dev = 7,033, 272,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=65 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,79e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.003785824688417046;  // std dev = 7,129, 298,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=65 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.260565
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 2.118 seconds
Total inference time: 2.284 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.707207
   AUC PR    = 0.449492
   CLL	      = -0.258525
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.414414
   F1        = 0.585987


Total scoring time: 2.55 seconds
Parameter learned model CLL: -0.258525


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.06e-07, 0, 46], 'false': [7.139, 236, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [7.069, 216, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [7.115, 229, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [7.045, 210, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 46], 'false': [7.101, 225, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [7.083, 220, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 46], 'false': [6.817, 163, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [7.122, 231, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [7.033, 207, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.79e-08, 0, 46], 'false': [7.129, 233, 65]}]]
[{'': [9.267948727305654e-16, 0.16931380448339498]}, {'': [-9.267948727305654e-16, 0.17780929826116634]}, {'': [-3.8616453030440226e-17, 0.172208339117958]}, {'': [-3.8616453030440226e-16, 0.18049586776859572]}, {'': [1.9308226515220113e-17, 0.1739001189060648]}, {'': [-1.9308226515220113e-17, 0.17605417051400535]}, {'': [5.792467954566034e-17, 0.20381271160356884]}, {'': [-7.723290606088045e-17, 0.17137280861943244]}, {'': [-3.8616453030440226e-17, 0.1818636461937707]}, {'': [1.68946982008176e-17, 0.17054411963425026]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,06e-07, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.43261702020589426;  // std dev = 0,494, 47,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=27 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05851773156715445;  // std dev = 1,658, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.0884120929942479;  // std dev = 5,190, 152,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=35 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3594570055100484;  // std dev = 0,496, 48,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=27 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07199349944623872;  // std dev = 2,347, 75,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=6 */
%   | | | else return 0.05650719821648557;  // std dev = 5,024, 157,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=32 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4249217552628743;  // std dev = 0,462, 39,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05862903814901719;  // std dev = 2,342, 71,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=6 */
%   | | | else return 0.0835782385603917;  // std dev = 4,914, 134,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=32 */
%   | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.17117014844392;  // std dev = 0,499, 51,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08409708623691255;  // std dev = 1,671, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | | | else return 0.047808023821671125;  // std dev = 5,228, 169,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=35 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.24438471578060317;  // std dev = 0,479, 42,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=27 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07788482396948525;  // std dev = 1,675, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | | | else return 0.07500748870651927;  // std dev = 5,114, 145,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=35 */
%   | else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.45823520365026377;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.27149452607946634;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06288153625160084;  // std dev = 1,670, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | | else return 0.029346590142705645;  // std dev = 5,234, 169,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=35 */
%   | else return -0.08518475138839682;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325355;  // std dev = 5,16e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return -0.016553890715065793;  // std dev = 3,639, 53,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | | | else return -0.08929108134807306;  // std dev = 1,934, 70,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=4 */
%   | | else return 0.255684417691239;  // std dev = 1,076, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07434507822370116;  // std dev = 1,377, 42,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=2 */
%   | | | else return 0.22355026088105193;  // std dev = 0,798, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordtitle(B, J), haswordvenue(K, J) )
%   | | | then return 0.039061202995886286;  // std dev = 4,705, 127,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=29 */
%   | | | else return -0.09810813127196477;  // std dev = 0,150, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18866743750928558;  // std dev = 0,454, 38,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=27 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05925837279908945;  // std dev = 1,663, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | | | else return 0.023366965108375055;  // std dev = 5,214, 168,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=35 */
%   | else return -0.07790069195605236;  // std dev = 0,045, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( author(G, E), title(G, A) )
%   | | | then return -0.03278025820891123;  // std dev = 1,079, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.08757054677803228;  // std dev = 3,843, 107,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=28 */
%   | | else return 0.14405373199487165;  // std dev = 0,824, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07746777058262923;  // std dev = 1,930, 63,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=4 */
%   | | | else return 0.35561981435425316;  // std dev = 0,897, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.06648573395177679;  // std dev = 4,597, 107,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | | | else return -0.07187198282470596;  // std dev = 0,015, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,79e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.3679220666599309;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1279921959925822;  // std dev = 2,962, 40,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.050797269105791784;  // std dev = 2,250, 67,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=6 */
%   | | | else return 0.04182650875508631;  // std dev = 4,869, 140,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | else return -0.0643791050243916;  // std dev = 0,015, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.900185
   AUC PR    = 0.572973
   CLL	      = -0.250372
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 19.386 seconds
Total inference time: 3.564 seconds
AUC ROC: 0.900185


Results scoring model
   AUC ROC   = 0.879699
   AUC PR    = 0.515424
   CLL	      = -0.235974
   Precision = 0.174224 at threshold = 0.5
   Recall    = 0.657658
   F1        = 0.275472


Total scoring time: 4.2 seconds
Refined model CLL: -0.235974


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900185
   AUC PR    = 0.572973
   CLL	      = -0.250372
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 28.253999999999998 seconds
Total inference time: 3.564 seconds
AUC ROC: 0.900185
Total revision time: 28.253999999999998
Best scored revision CLL: -0.235974


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 09:42:34
{'parameter_0.2': {'F1': 0.640777, 'Inference time': 2.284, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 2.118, 'CLL': -0.260565}, 'F1': 0.318339, 'Inference time': 3.564, 'Precision': [0.210046, 0.5], 'AUC ROC': 0.900185, 'AUC PR': 0.572973, 'Recall': 0.657143, 'Learning time': 28.253999999999998, 'CLL': -0.250372}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5346195233348068;  // std dev = 0,468, 68,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07935106490048771;  // std dev = 1,936, 64,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=4 */
%   | | | else return 0.058148935099512175;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.07366924671866958;  // std dev = 1,672, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | | else return 0.28122585817643647;  // std dev = 5,633, 130,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=55 */
%   else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5521887904679974;  // std dev = 0,419, 61,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=47 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08801104742001899;  // std dev = 1,382, 44,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=2 */
%   | | | else return 0.1172094199734034;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.0318949234584382;  // std dev = 2,310, 59,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=6 */
%   | | | else return 0.27490335035585767;  // std dev = 5,477, 121,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=55 */
%   else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.48267295898327706;  // std dev = 0,393, 58,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=47 */
%   | else if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.1267146837777009;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10097524845551299;  // std dev = 0,989, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | else return 0.19773835650994298;  // std dev = 0,803, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then if ( author(J, H), title(J, B) )
%   | | | then return -0.12470979695518054;  // std dev = 0,025, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.04846549830526227;  // std dev = 1,916, 51,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | else return 0.3549229029978147;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.1357141869848873;  // std dev = 0,480, 153,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=55 */
%   | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.30601807106320716;  // std dev = 0,434, 63,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=47 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06364374042055551;  // std dev = 1,940, 67,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=4 */
%   | | | else return 0.050105478261842556;  // std dev = 1,214, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.021548763640163275;  // std dev = 1,606, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0.19533367292671133;  // std dev = 5,532, 124,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=55 */
%   else return -0.10948206299721136;  // std dev = 0,070, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.24195279565680433;  // std dev = 0,427, 62,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=47 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06666267428852832;  // std dev = 1,369, 42,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=2 */
%   | | | else return 0.08090757111746752;  // std dev = 0,864, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.016610415082219776;  // std dev = 2,261, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | | | else return 0.14664834049343417;  // std dev = 5,584, 127,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=55 */
%   else return -0.09586236673037063;  // std dev = 0,052, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.24357907415100877;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.2427253775908357;  // std dev = 0,383, 56,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=46 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.061535807177732306;  // std dev = 1,945, 76,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=4 */
%   | | | else return 0.09631918748816407;  // std dev = 1,179, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.07612368442043373;  // std dev = 0,460, 165,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   else return -0.09027737438301485;  // std dev = 0,066, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return -0.33564214607263176;  // std dev = 1,042, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.16011683269942095;  // std dev = 0,399, 58,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=46 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.05671127463263991;  // std dev = 1,947, 77,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=4 */
%   | | | else return 0.20003416438051644;  // std dev = 1,068, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04783964696306609;  // std dev = 1,616, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | | | else return 0.07039001579806418;  // std dev = 5,723, 136,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=55 */
%   else return -0.07930002612112162;  // std dev = 0,025, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13274141313885893;  // std dev = 0,401, 59,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=47 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.21633689191708064;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06715518295863662;  // std dev = 1,334, 46,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.01154493801288781;  // std dev = 2,259, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | | | else return 0.07649800870965755;  // std dev = 5,617, 129,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=55 */
%   else return -0.07601113625274178;  // std dev = 0,042, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.0398889581786418;  // std dev = 0,444, 64,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=47 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.03968032885216507;  // std dev = 1,939, 63,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=4 */
%   | | | else return 0.27474218236761855;  // std dev = 0,954, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.034884586486530755;  // std dev = 1,605, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | | else return 0.042995638693967934;  // std dev = 5,694, 134,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=55 */
%   else return -0.07544932597980805;  // std dev = 0,060, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( haswordtitle(A, C), haswordauthor(E, C) )
%   | then return 0.06243847627792964;  // std dev = 0,428, 60,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=46 */
%   | else if ( haswordtitle(A, C) )
%   | | then if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.04324213725388465;  // std dev = 1,664, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | | else return -0.0017605349252254616;  // std dev = 6,221, 214,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=61 */
%   | | else if ( title(H, B), venue(H, D) )
%   | | | then return -0.13011693461190624;  // std dev = 0,283, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06295508054089771;  // std dev = 0,000669, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | then return -0.06342297457123891;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09992535329329917;  // std dev = 0,098, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.825905
   AUC PR    = 0.111274
   CLL	      = -0.354257
   Precision = 0.116279 at threshold = 0.5
   Recall    = 0.428571
   F1        = 0.182927


Total learning time: 49.921 seconds
Total inference time: 6.772 seconds
AUC ROC: 0.825905


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 09:43:31
{'F1': 0.182927, 'Recall': 0.428571, 'Inference time': 6.772, 'Precision': [0.116279, 0.5], 'Learning time': 49.921, 'AUC PR': 0.111274, 'CLL': -0.354257, 'AUC ROC': 0.825905}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6000844189704803;  // std dev = 0,438, 62,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=46 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07518439823382105;  // std dev = 1,932, 60,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21617362645753826;  // std dev = 0,479, 162,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.769989
   AUC PR    = 0.096808
   CLL	      = -0.219581
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 5.862 seconds
Total inference time: 1.585 seconds
AUC ROC: 0.769989


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 09:43:39
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.585, 'Precision': [nan, 0.5], 'Learning time': 5.862, 'AUC PR': 0.096808, 'CLL': -0.219581, 'AUC ROC': 0.769989}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995116;  // std dev = 2,67e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else return 0.07031998773108847;  // std dev = 10,081, 608,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=129 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 2,38e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else return 0.07850114826185751;  // std dev = 9,972, 563,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=129 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else return 0.06899683767978687;  // std dev = 9,967, 561,000 (wgt'ed) examples reached here.  /* #neg=432 #pos=129 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 2,06e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else return 0.0554327637465354;  // std dev = 9,993, 571,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=129 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else return 0.05438218013310697;  // std dev = 9,948, 554,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=129 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else return 0.04093013183206976;  // std dev = 9,983, 567,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=129 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325357;  // std dev = 1,19e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else return 0.034638338096743895;  // std dev = 9,983, 567,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=129 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452772;  // std dev = 8,43e-08, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else return 0.03410781765096268;  // std dev = 9,951, 555,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=129 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else return 0.020155007695139195;  // std dev = 10,005, 576,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=129 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,32e-08, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else return 0.011550709223389057;  // std dev = 10,040, 590,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=129 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.253642
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 2.601 seconds
Total inference time: 2.036 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.710762
   AUC PR    = 0.455835
   CLL	      = -0.251334
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.421525
   F1        = 0.59306


Total scoring time: 3.149 seconds
Parameter learned model CLL: -0.251334


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.67e-07, 0, 94], 'false': [10.081, 479, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.38e-07, 0, 94], 'false': [9.972, 434, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.09e-07, 0, 94], 'false': [9.967, 432, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.06e-07, 0, 94], 'false': [9.993, 442, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 94], 'false': [9.948, 425, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 94], 'false': [9.983, 438, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.19e-07, 0, 94], 'false': [9.983, 438, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 94], 'false': [9.951, 426, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 94], 'false': [10.005, 447, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.32e-08, 0, 94], 'false': [10.04, 461, 129]}]]
[{'': [7.558965274043619e-16, 0.16715449705678825]}, {'': [6.047172219234895e-16, 0.1766292602746622]}, {'': [1.7763568394002505e-15, 0.17707112013497453]}, {'': [4.535379164426171e-16, 0.17487984639969023]}, {'': [-3.4015343733196285e-16, 0.17863193838053415]}, {'': [-4.724353296277262e-17, 0.17575095881973865]}, {'': [1.5117930548087238e-16, 0.17575095881974725]}, {'': [7.558965274043619e-17, 0.17840759678597726]}, {'': [-9.448706592554524e-17, 0.1738009982638929]}, {'': [4.2519179666495357e-17, 0.17083883941395767]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995116;  // std dev = 2,67e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.49033284314549;  // std dev = 0,482, 87,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=55 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10224710450444807;  // std dev = 1,960, 101,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=4 */
%   | | | else return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09533943699351091;  // std dev = 2,392, 129,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=6 */
%   | | | else return 0.13592671287729013;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.09051408032772847;  // std dev = 6,556, 241,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=56 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 2,38e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.3788553033076005;  // std dev = 4,741, 93,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=55 */
%   | | | else return -0.055366895242710774;  // std dev = 2,506, 91,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=7 */
%   | | else return 0.04999685129214675;  // std dev = 0,395, 341,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=67 */
%   | else return -0.1308182714186464;  // std dev = 0,073, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3352174920360131;  // std dev = 0,486, 89,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=55 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05329269331935205;  // std dev = 3,134, 129,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=11 */
%   | | | else return 0.05084023052376226;  // std dev = 7,031, 315,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=63 */
%   | else return -0.11977661806495438;  // std dev = 0,102, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 2,06e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.24247380693932125;  // std dev = 0,490, 92,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=55 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05043552422211684;  // std dev = 3,142, 134,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=11 */
%   | | | else return 0.05056952940851308;  // std dev = 7,004, 304,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=63 */
%   | else return -0.10645844823755667;  // std dev = 0,066, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18520018713075212;  // std dev = 0,490, 92,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=55 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03908834866341092;  // std dev = 3,134, 125,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=11 */
%   | | | else return 0.02806424888151913;  // std dev = 7,073, 329,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=63 */
%   | else return -0.09364459080029643;  // std dev = 0,040, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1529928367330097;  // std dev = 0,487, 90,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=55 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06496495020203091;  // std dev = 2,504, 94,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=7 */
%   | | | else return 0.04990560155523847;  // std dev = 7,183, 323,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=67 */
%   | else return -0.08742817400535383;  // std dev = 0,052, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325357;  // std dev = 1,19e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.11484292449129228;  // std dev = 4,625, 90,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=55 */
%   | | | else return -0.04769112156186565;  // std dev = 2,491, 84,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=7 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03726611966368793;  // std dev = 3,126, 122,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=11 */
%   | | | else return 0.0570133555478309;  // std dev = 6,513, 231,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=56 */
%   | else return -0.08075832917029249;  // std dev = 0,055, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452772;  // std dev = 8,43e-08, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.5249580886711107;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1712444429744594;  // std dev = 4,088, 79,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=55 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05514822604383202;  // std dev = 2,511, 99,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=7 */
%   | | | else return 0.0245808348231059;  // std dev = 7,242, 344,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=67 */
%   | else return -0.07297935875469255;  // std dev = 0,009, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.06678406762766416;  // std dev = 4,477, 87,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=55 */
%   | | | else return -0.04626232089117069;  // std dev = 3,144, 140,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=11 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.031860931211908736;  // std dev = 2,492, 77,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=7 */
%   | | | else return 0.07247957921142882;  // std dev = 6,391, 207,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=56 */
%   | else return -0.07208826116151382;  // std dev = 0,055, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,32e-08, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.010357109120888363;  // std dev = 4,957, 172,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=59 */
%   | | | else return 0.3499330236222647;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.0022407032607492552;  // std dev = 3,078, 92,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return 0.054335078493972386;  // std dev = 6,419, 212,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=56 */
%   | else return -0.06591158623146451;  // std dev = 0,051, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */


Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.249211
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 34.382 seconds
Total inference time: 3.554 seconds
AUC ROC: 0.900324


Results scoring model
   AUC ROC   = 0.88056
   AUC PR    = 0.527936
   CLL	      = -0.229856
   Precision = 0.183498 at threshold = 0.5
   Recall    = 0.668161
   F1        = 0.287923


Total scoring time: 5.668 seconds
Refined model CLL: -0.229856


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.249211
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 45.8 seconds
Total inference time: 3.554 seconds
AUC ROC: 0.900324
Total revision time: 45.8
Best scored revision CLL: -0.229856


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 09:44:31
{'F1': 0.318339, 'Inference time': 3.554, 'Precision': [0.210046, 0.5], 'AUC ROC': 0.900324, 'AUC PR': 0.576646, 'parameter_0.4': {'F1': 0.640777, 'Inference time': 2.036, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 2.601, 'CLL': -0.253642}, 'Recall': 0.657143, 'Learning time': 45.8, 'CLL': -0.249211}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6438632208137965;  // std dev = 0,410, 112,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=88 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09423201728144004;  // std dev = 2,390, 126,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=6 */
%   | | | else return 0.17064893509951234;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05324346996377883;  // std dev = 2,526, 79,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=7 */
%   | | | else return 0.3318331456258246;  // std dev = 7,847, 247,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=117 */
%   else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.532559863508937;  // std dev = 0,420, 114,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=88 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08117591325678726;  // std dev = 2,388, 121,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=6 */
%   | | | else return 0.2906261763253836;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.057714748275532864;  // std dev = 2,541, 90,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=7 */
%   | | | else return 0.20539604667976732;  // std dev = 8,430, 298,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=117 */
%   else return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.38436495778586754;  // std dev = 0,442, 120,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=88 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0705271557220205;  // std dev = 2,386, 117,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=6 */
%   | | | else return 0.08639781868510137;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.14891355182981622;  // std dev = 0,465, 357,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=124 */
%   else return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.28679216682135594;  // std dev = 0,445, 121,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=88 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10139500959294712;  // std dev = 1,961, 85,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=4 */
%   | | | else return 0.6114832257399878;  // std dev = 0,838, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.02932346219594711;  // std dev = 3,039, 114,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=11 */
%   | | | else return 0.16337383938887698;  // std dev = 8,305, 285,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=117 */
%   else return -0.10159632948783634;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.17855947532985253;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21310719133681416;  // std dev = 4,891, 120,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=87 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06511905350087684;  // std dev = 2,394, 128,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=6 */
%   | | | else return 0.09898275063225073;  // std dev = 1,844, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0903465892819733;  // std dev = 1,956, 91,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=4 */
%   | | | else return 0.5096134514383448;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.12466066245067317;  // std dev = 0,491, 290,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=117 */
%   else return -0.09269127618926101;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.19066493737253165;  // std dev = 0,428, 117,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=88 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07793835895126822;  // std dev = 1,960, 84,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=4 */
%   | | | else return 0.6549677234179956;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.024752563375853555;  // std dev = 3,020, 119,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=11 */
%   | | | else return 0.07289030419148146;  // std dev = 8,535, 310,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=117 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15262775242275275;  // std dev = 0,422, 116,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=88 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05000465917428567;  // std dev = 2,384, 114,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=6 */
%   | | | else return 0.32778008169215916;  // std dev = 1,483, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.054923686306531154;  // std dev = 2,262, 83,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=7 */
%   | | | else return 0.10527187475343044;  // std dev = 8,199, 275,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=117 */
%   else return -0.07877675473109179;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.08910913633702851;  // std dev = 0,440, 120,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=88 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.14241978039938075;  // std dev = 1,220, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.08333404999359346;  // std dev = 1,892, 89,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05259805934185136;  // std dev = 2,393, 131,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=6 */
%   | | | else return 0.33174766923133797;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.07137670216285098;  // std dev = 0,493, 282,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=117 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.40812356981367937;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.06443864913493057;  // std dev = 4,837, 119,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=87 */
%   | | else if ( author(G, E), title(G, A) )
%   | | | then return 0.08239135466554545;  // std dev = 1,253, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.08018427905699874;  // std dev = 1,963, 87,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.2395025333842736;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.030173977183008044;  // std dev = 2,765, 110,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=10 */
%   | | else if ( haswordvenue(K, C) )
%   | | | then return 0.030455780476627257;  // std dev = 8,264, 287,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=112 */
%   | | | else return 0.2652118780376015;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08800874019644105;  // std dev = 0,422, 115,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=88 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.13372936674490077;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.04256188935870931;  // std dev = 2,822, 131,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, C), haswordvenue(I, G) )
%   | | | then return -0.040308699759130096;  // std dev = 1,911, 67,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=4 */
%   | | | else return -0.08877798181217775;  // std dev = 1,372, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.03966148652041003;  // std dev = 0,490, 287,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=117 */
%   else return -0.06419184008202625;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */


Results
   AUC ROC   = 0.824897
   AUC PR    = 0.106808
   CLL	      = -0.346523
   Precision = 0.143564 at threshold = 0.5
   Recall    = 0.414286
   F1        = 0.213235


Total learning time: 99.017 seconds
Total inference time: 7.741 seconds
AUC ROC: 0.824897


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 09:46:18
{'F1': 0.213235, 'Recall': 0.414286, 'Inference time': 7.741, 'Precision': [0.143564, 0.5], 'Learning time': 99.017, 'AUC PR': 0.106808, 'CLL': -0.346523, 'AUC ROC': 0.824897}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.6349346493852251;  // std dev = 0,416, 112,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=87 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08577629854534748;  // std dev = 2,380, 107,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=6 */
%   | | | else return 0.15226658215833588;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordvenue(I, C) )
%   | | | then return 0.19055116973637978;  // std dev = 8,913, 358,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=119 */
%   | | | else return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */


Results
   AUC ROC   = 0.769989
   AUC PR    = 0.096808
   CLL	      = -0.21721
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.119 seconds
Total inference time: 2.001 seconds
AUC ROC: 0.769989


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 09:46:31
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.001, 'Precision': [nan, 0.5], 'Learning time': 10.119, 'AUC PR': 0.096808, 'CLL': -0.21721, 'AUC ROC': 0.769989}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995101;  // std dev = 8,60e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.07696979677751209;  // std dev = 12,279, 882,000 (wgt'ed) examples reached here.  /* #neg=689 #pos=193 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.06783691586531453;  // std dev = 12,275, 880,000 (wgt'ed) examples reached here.  /* #neg=687 #pos=193 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,99e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.07611131118973578;  // std dev = 12,139, 816,000 (wgt'ed) examples reached here.  /* #neg=623 #pos=193 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,21e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.047153560166378755;  // std dev = 12,285, 885,000 (wgt'ed) examples reached here.  /* #neg=692 #pos=193 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,42e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.05177699322832603;  // std dev = 12,195, 841,000 (wgt'ed) examples reached here.  /* #neg=648 #pos=193 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694902;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.03366469063327991;  // std dev = 12,277, 881,000 (wgt'ed) examples reached here.  /* #neg=688 #pos=193 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253526;  // std dev = 2,31e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.026311082274043822;  // std dev = 12,294, 890,000 (wgt'ed) examples reached here.  /* #neg=697 #pos=193 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.027716181703728308;  // std dev = 12,251, 868,000 (wgt'ed) examples reached here.  /* #neg=675 #pos=193 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.026979909131037868;  // std dev = 12,222, 854,000 (wgt'ed) examples reached here.  /* #neg=661 #pos=193 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.02237982060565217;  // std dev = 12,224, 855,000 (wgt'ed) examples reached here.  /* #neg=662 #pos=193 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.251345
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 3.043 seconds
Total inference time: 2.151 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.711078
   AUC PR    = 0.456263
   CLL	      = -0.248957
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.422156
   F1        = 0.593684


Total scoring time: 3.651 seconds
Parameter learned model CLL: -0.248957


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.6e-07, 0, 141], 'false': [12.279, 689, 193]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 141], 'false': [12.275, 687, 193]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.99e-07, 0, 141], 'false': [12.139, 623, 193]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-07, 0, 141], 'false': [12.285, 692, 193]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.42e-07, 0, 141], 'false': [12.195, 648, 193]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 141], 'false': [12.277, 688, 193]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.31e-07, 0, 141], 'false': [12.294, 697, 193]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 141], 'false': [12.251, 675, 193]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 141], 'false': [12.222, 661, 193]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.96e-08, 0, 141], 'false': [12.224, 662, 193]}]]
[{'': [5.2408825900035755e-15, 0.170938292172502]}, {'': [-2.2172964803861283e-15, 0.171217716942154]}, {'': [1.763758563943511e-15, 0.18057808294886776]}, {'': [1.2598275456739365e-15, 0.17052060391330823]}, {'': [4.1574309007239905e-16, 0.17682363869523998]}, {'': [-1.2598275456739366e-16, 0.1710779078052163]}, {'': [3.7794826370218095e-16, 0.16982830450700223]}, {'': [-2.897603355050054e-16, 0.17291060544925294]}, {'': [-3.7794826370218094e-17, 0.17492143323333326]}, {'': [2.519655091347873e-17, 0.17477651243117426]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995101;  // std dev = 8,60e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.43507201202259016;  // std dev = 0,494, 130,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=75 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06089868394810669;  // std dev = 3,953, 210,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=17 */
%   | | | else return 0.08012695707753303;  // std dev = 8,865, 455,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=101 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3173927909460492;  // std dev = 0,500, 144,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=75 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0560079160477371;  // std dev = 3,556, 148,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=14 */
%   | | | else return 0.06494139103237839;  // std dev = 9,028, 492,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=104 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,99e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3172243854629183;  // std dev = 0,494, 130,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=75 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.051091198455066315;  // std dev = 3,929, 188,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=17 */
%   | | | else return 0.06867834490398327;  // std dev = 8,826, 449,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=101 */
%   | else return -0.11231637819360624;  // std dev = 5,77e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,21e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2998734743355403;  // std dev = 0,484, 120,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=75 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.051536954015779415;  // std dev = 3,943, 203,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=17 */
%   | | | else return 0.05169712877642735;  // std dev = 8,869, 465,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=101 */
%   | else return -0.1015963294878362;  // std dev = 4,59e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,42e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.23097809568784514;  // std dev = 5,303, 120,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=75 */
%   | | | else return -0.0657031476314803;  // std dev = 3,557, 152,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=14 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0383767659153495;  // std dev = 3,929, 185,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=17 */
%   | | | else return 0.06983105063444593;  // std dev = 8,093, 352,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=87 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694902;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.450299852970711;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.17995224786962546;  // std dev = 5,266, 119,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=75 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05518270980849257;  // std dev = 3,552, 151,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=14 */
%   | | | else return 0.0375688929970873;  // std dev = 8,996, 509,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=104 */
%   | else return -0.08518475138839679;  // std dev = 2,58e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253526;  // std dev = 2,31e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.34304382688003265;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.13512869462224708;  // std dev = 5,266, 119,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=75 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0335503058786085;  // std dev = 3,917, 178,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=17 */
%   | | | else return 0.0362842484278383;  // std dev = 8,835, 466,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=101 */
%   | else return -0.0787767547310917;  // std dev = 3,07e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.07389119613867454;  // std dev = 0,480, 127,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=75 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03592774472226825;  // std dev = 3,930, 190,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=17 */
%   | | | else return 0.034566018966712984;  // std dev = 8,813, 458,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=101 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.015528432067205358;  // std dev = 6,144, 313,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=84 */
%   | | | else return 0.26632390414996854;  // std dev = 2,197, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0522936782482909;  // std dev = 3,547, 138,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=14 */
%   | | | else return 0.04231775553136247;  // std dev = 8,093, 352,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=87 */
%   | else return -0.06842697784420265;  // std dev = 4,59e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0331226165512091;  // std dev = 0,491, 131,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=75 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05258631143916503;  // std dev = 3,556, 154,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=14 */
%   | | | else return 0.012890420231511771;  // std dev = 8,996, 537,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=104 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.244257
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 51.141 seconds
Total inference time: 3.395 seconds
AUC ROC: 0.900324


Results scoring model
   AUC ROC   = 0.870217
   AUC PR    = 0.521423
   CLL	      = -0.228525
   Precision = 0.180602 at threshold = 0.5
   Recall    = 0.646707
   F1        = 0.282353


Total scoring time: 6.278 seconds
Refined model CLL: -0.228525


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.244257
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 64.113 seconds
Total inference time: 3.395 seconds
AUC ROC: 0.900324
Total revision time: 64.113
Best scored revision CLL: -0.228525


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 09:47:41
{'F1': 0.318339, 'Inference time': 3.395, 'Precision': [0.210046, 0.5], 'AUC ROC': 0.900324, 'AUC PR': 0.576646, 'parameter_0.6': {'F1': 0.640777, 'Inference time': 2.151, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 3.043, 'CLL': -0.251345}, 'Recall': 0.657143, 'Learning time': 64.113, 'CLL': -0.244257}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5305627282029578;  // std dev = 0,469, 174,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=117 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09100360727336901;  // std dev = 2,923, 177,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=9 */
%   | | | else return 0.1914822684328457;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04974580174259292;  // std dev = 3,565, 152,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=14 */
%   | | | else return 0.3140312880406846;  // std dev = 10,060, 408,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=186 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.49843781394817827;  // std dev = 0,450, 163,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=117 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08194975325507887;  // std dev = 2,925, 183,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=9 */
%   | | | else return 0.11891977694583404;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02390274555844804;  // std dev = 3,526, 125,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=14 */
%   | | | else return 0.2325127859095564;  // std dev = 10,413, 446,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=186 */
%   else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3523084854441874;  // std dev = 0,471, 175,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=117 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06785515295668403;  // std dev = 2,918, 166,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=9 */
%   | | | else return 0.1017322058157498;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.008120119383008436;  // std dev = 3,500, 112,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=14 */
%   | | | else return 0.22501290977990523;  // std dev = 10,141, 416,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=186 */
%   else return -0.11231637819360624;  // std dev = 6,14e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3298780431994224;  // std dev = 0,446, 161,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=117 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07086678260492141;  // std dev = 2,933, 204,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=9 */
%   | | | else return 0.10794361120173351;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.019282627090555126;  // std dev = 3,524, 124,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=14 */
%   | | | else return 0.15179250216373275;  // std dev = 10,430, 448,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=186 */
%   else return -0.1015963294878362;  // std dev = 5,37e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.27781135063311757;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.24268554377681986;  // std dev = 0,449, 161,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=116 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.058516663052562944;  // std dev = 2,925, 182,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=9 */
%   | | | else return 0.11576985556252446;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.02146240314038117;  // std dev = 3,533, 129,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=14 */
%   | | | else return 0.1317569354241079;  // std dev = 10,336, 437,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=186 */
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17816940791134578;  // std dev = 0,449, 164,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=117 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05865782827401408;  // std dev = 3,066, 140,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=10 */
%   | | | else return 0.16172164417561616;  // std dev = 1,682, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.015938070023069177;  // std dev = 3,717, 173,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=17 */
%   | | | else return 0.10175522399055803;  // std dev = 10,353, 439,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=186 */
%   else return -0.08518475138839678;  // std dev = 3,49e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13632808953315506;  // std dev = 0,451, 163,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=117 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04752413958218387;  // std dev = 2,919, 168,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=9 */
%   | | | else return 0.1005121967199661;  // std dev = 2,302, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.06905420682091883;  // std dev = 0,464, 548,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=200 */
%   else return -0.07877675473109165;  // std dev = 4,28e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.05796300266340622;  // std dev = 0,467, 175,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=117 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.054731384578758355;  // std dev = 2,936, 214,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=9 */
%   | | | else return 0.08074754845554309;  // std dev = 2,306, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.028847764268522966;  // std dev = 3,523, 138,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=14 */
%   | | | else return 0.053038369199746443;  // std dev = 10,446, 450,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=186 */
%   else return -0.07324622576333704;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10045020841089392;  // std dev = 0,444, 161,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=117 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.052213496498749276;  // std dev = 3,062, 130,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=10 */
%   | | | else return 0.25695166319974905;  // std dev = 1,527, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.005681186389836272;  // std dev = 3,660, 166,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=17 */
%   | | | else return 0.06815056564810525;  // std dev = 10,199, 422,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=186 */
%   else return -0.06842697784420265;  // std dev = 4,01e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.065472373921993;  // std dev = 0,448, 164,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=117 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.04261175811922353;  // std dev = 2,927, 182,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=9 */
%   | | | else return 0.10025702375030297;  // std dev = 2,240, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.03142541468731311;  // std dev = 3,019, 113,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=10 */
%   | | | else return 0.3835164198118622;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.03793288046420993;  // std dev = 0,495, 436,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=186 */
%   else return -0.06419184008202625;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 0.824897
   AUC PR    = 0.106808
   CLL	      = -0.355832
   Precision = 0.123077 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.193939


Total learning time: 107.678 seconds
Total inference time: 3.363 seconds
AUC ROC: 0.824897


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 09:49:33
{'F1': 0.193939, 'Recall': 0.457143, 'Inference time': 3.363, 'Precision': [0.123077, 0.5], 'Learning time': 107.678, 'AUC PR': 0.106808, 'CLL': -0.355832, 'AUC ROC': 0.824897}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.6017386786892533;  // std dev = 0,437, 156,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=116 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08595044378247522;  // std dev = 2,915, 161,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=9 */
%   | | | else return 0.1914822684328457;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.19886443765487408;  // std dev = 0,474, 587,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=200 */
%   else return -0.14185106490048763;  // std dev = 8,56e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */


Results
   AUC ROC   = 0.769989
   AUC PR    = 0.096808
   CLL	      = -0.217274
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 11.151 seconds
Total inference time: 1.67 seconds
AUC ROC: 0.769989


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 09:49:46
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.67, 'Precision': [nan, 0.5], 'Learning time': 11.151, 'AUC PR': 0.096808, 'CLL': -0.217274, 'AUC ROC': 0.769989}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else return 0.0814330358814362;  // std dev = 14,129, 1.151,000 (wgt'ed) examples reached here.  /* #neg=894 #pos=257 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else return 0.06949588431269388;  // std dev = 14,144, 1.160,000 (wgt'ed) examples reached here.  /* #neg=903 #pos=257 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,08e-07, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else return 0.05364840782434681;  // std dev = 14,205, 1.196,000 (wgt'ed) examples reached here.  /* #neg=939 #pos=257 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 3,26e-07, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else return 0.055831816268757085;  // std dev = 14,118, 1.145,000 (wgt'ed) examples reached here.  /* #neg=888 #pos=257 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,86e-07, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else return 0.043251262051544975;  // std dev = 14,160, 1.169,000 (wgt'ed) examples reached here.  /* #neg=912 #pos=257 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.255172242569491;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else return 0.03354012049232356;  // std dev = 14,190, 1.187,000 (wgt'ed) examples reached here.  /* #neg=930 #pos=257 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253504;  // std dev = 2,92e-07, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else return 0.030870183925291058;  // std dev = 14,168, 1.174,000 (wgt'ed) examples reached here.  /* #neg=917 #pos=257 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527766;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else return 0.03106933921870835;  // std dev = 14,123, 1.148,000 (wgt'ed) examples reached here.  /* #neg=891 #pos=257 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else return 0.025604414961680953;  // std dev = 14,129, 1.151,000 (wgt'ed) examples reached here.  /* #neg=894 #pos=257 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,01e-07, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else return 0.022682085849858796;  // std dev = 14,118, 1.145,000 (wgt'ed) examples reached here.  /* #neg=888 #pos=257 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.249566
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 3.945 seconds
Total inference time: 2.275 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.711883
   AUC PR    = 0.457824
   CLL	      = -0.24712
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.423767
   F1        = 0.595276


Total scoring time: 3.622 seconds
Parameter learned model CLL: -0.24712


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 189], 'false': [14.129, 894, 257]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 189], 'false': [14.144, 903, 257]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.08e-07, 0, 189], 'false': [14.205, 939, 257]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.26e-07, 0, 189], 'false': [14.118, 888, 257]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.86e-07, 0, 189], 'false': [14.16, 912, 257]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 189], 'false': [14.19, 930, 257]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 189], 'false': [14.168, 917, 257]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 189], 'false': [14.123, 891, 257]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 189], 'false': [14.129, 894, 257]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.01e-07, 0, 189], 'false': [14.118, 888, 257]}]]
[{'': [6.1655560140029854e-15, 0.1734283111199356]}, {'': [-3.458726544440699e-15, 0.17246655766945268]}, {'': [1.9549323946838734e-15, 0.16870826388966073]}, {'': [5.639228061588096e-16, 0.17407448370549813]}, {'': [7.894919286223335e-16, 0.17151374874593778]}, {'': [-3.4775239713126594e-16, 0.1696346761355185]}, {'': [4.511382449270477e-16, 0.1709882490879845]}, {'': [-1.5037941497568257e-16, 0.17375089536112953]}, {'': [-2.7256268964342466e-16, 0.1734283111199264]}, {'': [5.4042602256885924e-17, 0.17407448370550163]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.4720729857324212;  // std dev = 6,120, 158,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=97 */
%   | | | else return -0.04540436439287345;  // std dev = 4,143, 197,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=19 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06464518254754663;  // std dev = 4,402, 272,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=21 */
%   | | | else return 0.1308762078267815;  // std dev = 9,342, 440,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=120 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.37837631978272596;  // std dev = 0,492, 165,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=97 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04964848466260289;  // std dev = 4,385, 248,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=21 */
%   | | | else return 0.06348222235474822;  // std dev = 10,401, 644,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=139 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,08e-07, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3310877031596392;  // std dev = 0,488, 159,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=97 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04392683784538878;  // std dev = 4,385, 248,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=21 */
%   | | | else return 0.06223353322084305;  // std dev = 10,350, 624,000 (wgt'ed) examples reached here.  /* #neg=485 #pos=139 */
%   | else return -0.11231637819360618;  // std dev = 9,06e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 3,26e-07, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.23774768716511377;  // std dev = 0,492, 165,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=97 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0426759857988521;  // std dev = 4,393, 259,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=21 */
%   | | | else return 0.05589145445901246;  // std dev = 10,336, 617,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=139 */
%   | else return -0.1015963294878363;  // std dev = 1,49e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,86e-07, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15799910238084341;  // std dev = 0,496, 172,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=97 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05555380353518631;  // std dev = 4,123, 188,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=19 */
%   | | | else return 0.045485014529871345;  // std dev = 10,428, 682,000 (wgt'ed) examples reached here.  /* #neg=541 #pos=141 */
%   | else return -0.09269127618926094;  // std dev = 5,37e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.255172242569491;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1655129277299921;  // std dev = 0,488, 159,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=97 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04631574980275873;  // std dev = 4,400, 273,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=21 */
%   | | | else return 0.0385248036876784;  // std dev = 10,362, 632,000 (wgt'ed) examples reached here.  /* #neg=493 #pos=139 */
%   | else return -0.08518475138839682;  // std dev = 4,83e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253504;  // std dev = 2,92e-07, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1653036315851124;  // std dev = 0,477, 149,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=97 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.036147135529208244;  // std dev = 4,387, 255,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=21 */
%   | | | else return 0.04254676274179369;  // std dev = 10,293, 606,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=139 */
%   | else return -0.0787767547310916;  // std dev = 5,77e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527766;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.13738475877135353;  // std dev = 0,472, 146,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=97 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05402173534385503;  // std dev = 4,109, 183,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=19 */
%   | | | else return 0.03351602425455143;  // std dev = 10,392, 685,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=141 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.023466455856957266;  // std dev = 7,066, 393,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=108 */
%   | | | else return 0.23009040703995046;  // std dev = 2,544, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03818950859681854;  // std dev = 4,095, 162,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=19 */
%   | | | else return 0.052999581185268395;  // std dev = 9,407, 457,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=120 */
%   | else return -0.06842697784420267;  // std dev = 4,01e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,01e-07, 189,000 (wgt'ed) examples reached here.  /* #pos=189 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.011973674592892797;  // std dev = 6,479, 171,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=97 */
%   | | | else return -0.07237804176981734;  // std dev = 3,244, 281,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=11 */
%   | | else return 0.15732881681153468;  // std dev = 0,442, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06777178067431448;  // std dev = 3,584, 189,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=14 */
%   | | | else return 0.3753750649746811;  // std dev = 1,502, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.0423721710400824;  // std dev = 9,418, 460,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=120 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */


Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.255855
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 68.901 seconds
Total inference time: 3.036 seconds
AUC ROC: 0.899184


Results scoring model
   AUC ROC   = 0.870077
   AUC PR    = 0.518185
   CLL	      = -0.234979
   Precision = 0.169231 at threshold = 0.5
   Recall    = 0.641256
   F1        = 0.26779


Total scoring time: 8.557 seconds
Refined model CLL: -0.234979


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.255855
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 85.02499999999999 seconds
Total inference time: 3.036 seconds
AUC ROC: 0.899184
Total revision time: 85.02499999999999
Best scored revision CLL: -0.234979


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 09:51:17
{'F1': 0.277457, 'Inference time': 3.036, 'Precision': [0.173913, 0.5], 'AUC ROC': 0.899184, 'parameter_0.8': {'F1': 0.640777, 'Inference time': 2.275, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 3.945, 'CLL': -0.249566}, 'AUC PR': 0.571454, 'Recall': 0.685714, 'Learning time': 85.02499999999999, 'CLL': -0.255855}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5103228481429872;  // std dev = 0,476, 230,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=150 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09854397828631485;  // std dev = 3,244, 254,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=11 */
%   | | | else return 0.3343394112899885;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03265566260163709;  // std dev = 4,114, 174,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=19 */
%   | | | else return 0.28059117932393024;  // std dev = 12,160, 606,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=256 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.49163970857813505;  // std dev = 0,455, 212,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=150 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07911056535158553;  // std dev = 3,231, 215,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=11 */
%   | | | else return 0.14573025403358955;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02996766657161567;  // std dev = 4,117, 176,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=19 */
%   | | | else return 0.25288384236803263;  // std dev = 12,054, 592,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=256 */
%   else return -0.12544463852839133;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.08955451477134133;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3843901955225178;  // std dev = 6,720, 213,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=148 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.05242589779453111;  // std dev = 3,591, 168,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=14 */
%   | | | else return 0.3236465584448513;  // std dev = 1,641, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07685363989148973;  // std dev = 3,242, 246,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=11 */
%   | | | else return 0.22395272448999562;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else return 0.21925536294195322;  // std dev = 0,496, 583,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=256 */
%   else return -0.11231637819360621;  // std dev = 7,45e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.32442563097493626;  // std dev = 0,448, 208,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=150 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06873718029997972;  // std dev = 3,243, 243,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=11 */
%   | | | else return 0.049300366491697716;  // std dev = 2,637, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.039242685156026164;  // std dev = 3,571, 157,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=14 */
%   | | | else return 0.44831592856133284;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.2082575584178819;  // std dev = 0,499, 547,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=256 */
%   else return -0.10159632948783631;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.17126347209613962;  // std dev = 0,485, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.21848894176601297;  // std dev = 0,459, 213,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=148 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.06334681067355377;  // std dev = 3,246, 248,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=11 */
%   | | | else return 0.11601262609408486;  // std dev = 2,489, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.019815989270283055;  // std dev = 4,005, 170,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=19 */
%   | | | else return 0.13068953542130177;  // std dev = 12,054, 592,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=256 */
%   else return -0.092691276189261;  // std dev = 3,65e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15934967228512895;  // std dev = 0,462, 218,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=150 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05034236124415161;  // std dev = 3,628, 184,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=14 */
%   | | | else return 0.1272431205484761;  // std dev = 1,719, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.04242700680135079;  // std dev = 4,156, 278,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=21 */
%   | | | else return 0.09669705915887496;  // std dev = 12,115, 600,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=256 */
%   else return -0.08518475138839682;  // std dev = 5,67e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.11725202017916574;  // std dev = 1,238, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1301112608165432;  // std dev = 6,640, 211,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=148 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.052597066826174835;  // std dev = 3,246, 241,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=11 */
%   | | | else return 0.1447578499244992;  // std dev = 2,374, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.16111817003977796;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.038388914061222044;  // std dev = 3,428, 157,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=14 */
%   | | else return 0.06798363394425276;  // std dev = 0,494, 610,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=256 */
%   else return -0.07877675473109158;  // std dev = 6,14e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.07701212463236892;  // std dev = 0,467, 222,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=150 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.048650593144776856;  // std dev = 3,245, 247,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=11 */
%   | | | else return 0.06325538941793066;  // std dev = 2,498, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.17818485803850106;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.024700395834130015;  // std dev = 3,413, 140,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=14 */
%   | | else return 0.08257131896272599;  // std dev = 0,497, 569,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=256 */
%   else return -0.07324622576333707;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.06250600979417209;  // std dev = 0,465, 221,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=150 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.017933758141618145;  // std dev = 1,660, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return -0.03997076842309865;  // std dev = 3,789, 231,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=18 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.008516545180622791;  // std dev = 3,937, 169,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=19 */
%   | | | else return 0.05464741033954029;  // std dev = 11,959, 580,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=256 */
%   else return -0.06842697784420265;  // std dev = 5,00e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07990215585199731;  // std dev = 0,451, 211,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=150 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.03982769922717306;  // std dev = 3,237, 238,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=11 */
%   | | | else return -0.004847110343834482;  // std dev = 2,623, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.01960211280666962;  // std dev = 3,976, 186,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=19 */
%   | | | else return 0.056557881541558504;  // std dev = 11,797, 561,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=256 */
%   else return -0.06419184008202626;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 0.825905
   AUC PR    = 0.111274
   CLL	      = -0.356549
   Precision = 0.116279 at threshold = 0.5
   Recall    = 0.428571
   F1        = 0.182927


Total learning time: 183.738 seconds
Total inference time: 8.037 seconds
AUC ROC: 0.825905


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 09:54:29
{'F1': 0.182927, 'Recall': 0.428571, 'Inference time': 8.037, 'Precision': [0.116279, 0.5], 'Learning time': 183.738, 'AUC PR': 0.111274, 'CLL': -0.356549, 'AUC ROC': 0.825905}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5338246107751846;  // std dev = 0,468, 222,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=150 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09464076447130342;  // std dev = 3,237, 233,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=11 */
%   | | | else return 0.21529179224236947;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.034506432132126084;  // std dev = 4,118, 177,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=19 */
%   | | | else return 0.2862425805844576;  // std dev = 12,100, 598,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=256 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.216828
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 16.02 seconds
Total inference time: 1.526 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 09:54:47
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.526, 'Precision': [nan, 0.5], 'Learning time': 16.02, 'AUC PR': 0.097917, 'CLL': -0.216828, 'AUC ROC': 0.821572}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.08005904745905795;  // std dev = 15,680, 1.424,000 (wgt'ed) examples reached here.  /* #neg=1.108 #pos=316 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.06848385253774178;  // std dev = 15,696, 1.434,000 (wgt'ed) examples reached here.  /* #neg=1.118 #pos=316 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.049895089222349844;  // std dev = 15,792, 1.499,000 (wgt'ed) examples reached here.  /* #neg=1.183 #pos=316 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.05540042628549855;  // std dev = 15,668, 1.416,000 (wgt'ed) examples reached here.  /* #neg=1.100 #pos=316 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.04169015311557299;  // std dev = 15,727, 1.454,000 (wgt'ed) examples reached here.  /* #neg=1.138 #pos=316 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.03891081861226583;  // std dev = 15,693, 1.432,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=316 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.03031271755729257;  // std dev = 15,720, 1.450,000 (wgt'ed) examples reached here.  /* #neg=1.134 #pos=316 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.025949726121108168;  // std dev = 15,717, 1.448,000 (wgt'ed) examples reached here.  /* #neg=1.132 #pos=316 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.019649754659198583;  // std dev = 15,740, 1.463,000 (wgt'ed) examples reached here.  /* #neg=1.147 #pos=316 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.024808642297838787;  // std dev = 15,657, 1.409,000 (wgt'ed) examples reached here.  /* #neg=1.093 #pos=316 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.247283
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 4.365 seconds
Total inference time: 2.101 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.716846
   AUC PR    = 0.467514
   CLL	      = -0.244477
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.605


Total scoring time: 4.338 seconds
Parameter learned model CLL: -0.244477


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 242], 'false': [15.68, 1108, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.696, 1118, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.92e-07, 0, 242], 'false': [15.792, 1183, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.668, 1100, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.67e-07, 0, 242], 'false': [15.727, 1138, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 242], 'false': [15.693, 1116, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 242], 'false': [15.72, 1134, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.23e-07, 0, 242], 'false': [15.717, 1132, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.74, 1147, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 242], 'false': [15.657, 1093, 316]}]]
[{'': [4.8152482919279514e-15, 0.17266601439212323]}, {'': [-4.2280228904733235e-15, 0.1718029368455634]}, {'': [9.98283182472868e-16, 0.1663675272062726]}, {'': [-2.055288905091199e-16, 0.17336174151744638]}, {'': [2.9361270072731413e-16, 0.1700985187189396]}, {'': [3.8169651094550837e-16, 0.17197496957023925]}, {'': [3.5233524087277696e-16, 0.17043709869203105]}, {'': [6.239269890455425e-17, 0.1706068190836676]}, {'': [-1.7249746167729704e-16, 0.16934089402341385]}, {'': [2.9361270072731413e-17, 0.1739743643343195]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4394297232768491;  // std dev = 0,493, 203,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05988385178573388;  // std dev = 4,791, 305,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=25 */
%   | | | else return 0.08282425977483232;  // std dev = 11,582, 770,000 (wgt'ed) examples reached here.  /* #neg=597 #pos=173 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.42019099133141713;  // std dev = 0,484, 189,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.056100238344968315;  // std dev = 4,799, 318,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=25 */
%   | | | else return 0.06293882542420542;  // std dev = 11,652, 804,000 (wgt'ed) examples reached here.  /* #neg=631 #pos=173 */
%   | else return -0.12544463852839108;  // std dev = 7,88e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.28082373506901265;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.30045705310833015;  // std dev = 7,029, 203,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05042844214581352;  // std dev = 4,801, 321,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=25 */
%   | | | else return 0.05845020144216304;  // std dev = 11,624, 790,000 (wgt'ed) examples reached here.  /* #neg=617 #pos=173 */
%   | else return -0.11231637819360624;  // std dev = 9,31e-08, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.26528897718547934;  // std dev = 6,740, 195,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=118 */
%   | | | else return -0.05031097035407201;  // std dev = 4,815, 345,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=25 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05064677551849938;  // std dev = 4,696, 212,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=25 */
%   | | | else return 0.10601125647646022;  // std dev = 10,362, 539,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=148 */
%   | else return -0.1015963294878364;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2776970168372462;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.18257805999520385;  // std dev = 6,956, 200,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.044358797740919144;  // std dev = 4,814, 342,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=25 */
%   | | | else return 0.048724916029102186;  // std dev = 11,522, 766,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=173 */
%   | else return -0.09269127618926083;  // std dev = 7,45e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12164016421739524;  // std dev = 0,485, 210,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=118 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05552319745357842;  // std dev = 4,703, 231,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=25 */
%   | | | else return 0.027634352262772267;  // std dev = 11,644, 902,000 (wgt'ed) examples reached here.  /* #neg=729 #pos=173 */
%   | else return -0.0851847513883968;  // std dev = 6,14e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10582012932232081;  // std dev = 0,487, 203,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04162457260283831;  // std dev = 4,810, 339,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=25 */
%   | | | else return 0.04887571477707806;  // std dev = 11,444, 736,000 (wgt'ed) examples reached here.  /* #neg=563 #pos=173 */
%   | else return -0.07877675473109155;  // std dev = 6,91e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.02286564284300788;  // std dev = 8,246, 428,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=133 */
%   | | | else return 0.3690172218900393;  // std dev = 2,132, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.02129064549273091;  // std dev = 4,769, 277,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=25 */
%   | | | else return 0.04992131029569719;  // std dev = 10,512, 584,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=148 */
%   | else return -0.07324622576333718;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06633787794557924;  // std dev = 0,487, 211,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=118 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.055209495287504066;  // std dev = 4,604, 225,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=25 */
%   | | | else return 0.01848814797025037;  // std dev = 11,584, 891,000 (wgt'ed) examples reached here.  /* #neg=718 #pos=173 */
%   | else return -0.06842697784420264;  // std dev = 5,48e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.5197091158693051;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.11781406292706131;  // std dev = 6,503, 187,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=118 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.052875147038823775;  // std dev = 4,620, 242,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=25 */
%   | | | else return 0.02511427596445943;  // std dev = 11,526, 838,000 (wgt'ed) examples reached here.  /* #neg=665 #pos=173 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */


Results
   AUC ROC   = 0.895077
   AUC PR    = 0.576104
   CLL	      = -0.242479
   Precision = 0.228426 at threshold = 0.5
   Recall    = 0.642857
   F1        = 0.337079


Total learning time: 79.538 seconds
Total inference time: 2.888 seconds
AUC ROC: 0.895077


Results scoring model
   AUC ROC   = 0.86752
   AUC PR    = 0.530058
   CLL	      = -0.229341
   Precision = 0.183767 at threshold = 0.5
   Recall    = 0.645161
   F1        = 0.286055


Total scoring time: 10.392 seconds
Refined model CLL: -0.229341


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.895077
   AUC PR    = 0.576104
   CLL	      = -0.242479
   Precision = 0.228426 at threshold = 0.5
   Recall    = 0.642857
   F1        = 0.337079


Total learning time: 98.633 seconds
Total inference time: 2.888 seconds
AUC ROC: 0.895077
Total revision time: 98.633
Best scored revision CLL: -0.229341


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 09:56:31
{'parameter_1.0': {'F1': 0.640777, 'Inference time': 2.101, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 4.365, 'CLL': -0.247283}, 'F1': 0.337079, 'Inference time': 2.888, 'Precision': [0.228426, 0.5], 'AUC ROC': 0.895077, 'AUC PR': 0.576104, 'Recall': 0.642857, 'Learning time': 98.633, 'CLL': -0.242479}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5406306869243261;  // std dev = 0,466, 274,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09151549443068945;  // std dev = 3,774, 298,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=15 */
%   | | | else return 0.18072958026080266;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03455492756143218;  // std dev = 4,724, 233,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=25 */
%   | | | else return 0.28444375581663917;  // std dev = 13,571, 753,000 (wgt'ed) examples reached here.  /* #neg=432 #pos=321 */
%   else return -0.14185106490048774;  // std dev = 4,71e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.48192503822939575;  // std dev = 0,457, 266,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08284025902688497;  // std dev = 3,778, 311,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=15 */
%   | | | else return 0.12040877291097303;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02354129415199147;  // std dev = 4,706, 219,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=25 */
%   | | | else return 0.2572128829113292;  // std dev = 13,439, 734,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=321 */
%   else return -0.12544463852839108;  // std dev = 7,74e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.36021928814826504;  // std dev = 0,468, 277,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07072726574631356;  // std dev = 3,773, 293,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=15 */
%   | | | else return 0.09518241125282323;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.026699998942481536;  // std dev = 4,722, 231,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=25 */
%   | | | else return 0.19454390363725205;  // std dev = 13,694, 772,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=321 */
%   else return -0.1123163781936062;  // std dev = 9,54e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2682994502827959;  // std dev = 0,472, 281,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=187 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07101373904984518;  // std dev = 3,759, 243,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=15 */
%   | | | else return 0.5359803117069165;  // std dev = 1,819, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05940309963306728;  // std dev = 3,765, 272,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=15 */
%   | | | else return 0.1599099357696582;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else return 0.16412368945820852;  // std dev = 0,494, 763,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=321 */
%   else return -0.10159632948783666;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.5371627240467413;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.46283727595325874;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.239452800382618;  // std dev = 0,457, 262,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=184 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.057382549037835705;  // std dev = 3,777, 287,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=15 */
%   | | | else return 0.0934132105833694;  // std dev = 2,605, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.015748760738949305;  // std dev = 4,565, 222,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=25 */
%   | | | else return 0.14060174383067545;  // std dev = 13,530, 747,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=321 */
%   else return -0.09269127618926082;  // std dev = 7,60e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.03343849123156737;  // std dev = 1,015, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.19732819990173836;  // std dev = 0,445, 257,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=184 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.05076372947672886;  // std dev = 3,773, 282,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=15 */
%   | | | else return -0.012919091657899427;  // std dev = 2,771, 45,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.014248215305065579;  // std dev = 4,571, 221,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=25 */
%   | | | else return 0.11202514392227905;  // std dev = 13,516, 745,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=321 */
%   else return -0.0851847513883968;  // std dev = 6,83e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.12931772976202469;  // std dev = 0,454, 268,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=187 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.046851527369214455;  // std dev = 3,775, 286,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=15 */
%   | | | else return 0.11218034319785769;  // std dev = 2,539, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.04377809822636803;  // std dev = 3,721, 195,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=15 */
%   | | | else return 0.2988002767052942;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0.08837742829697515;  // std dev = 0,495, 743,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=321 */
%   else return -0.07877675473109154;  // std dev = 7,38e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.0945792172053207;  // std dev = 0,454, 270,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=187 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.044026955490132;  // std dev = 3,778, 292,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=15 */
%   | | | else return 0.07165761684127206;  // std dev = 2,573, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.04504146207121097;  // std dev = 3,733, 211,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=15 */
%   | | | else return 0.30205192488719845;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else return 0.06934346481424056;  // std dev = 0,496, 741,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=321 */
%   else return -0.07324622576333717;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordauthor(E, C) )
%   | | | then return 0.012713593430395003;  // std dev = 8,061, 285,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=181 */
%   | | | else return -0.03916393689155703;  // std dev = 3,773, 288,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=15 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.37478280945707243;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06216738544361813;  // std dev = 2,556, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else return 0.05248456637672499;  // std dev = 0,461, 924,000 (wgt'ed) examples reached here.  /* #neg=578 #pos=346 */
%   else return -0.06842697784420264;  // std dev = 6,14e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.047518263281503444;  // std dev = 0,461, 278,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=187 */
%   | else return 0.013058362296851228;  // std dev = 0,417, 1.288,000 (wgt'ed) examples reached here.  /* #neg=917 #pos=371 */
%   else return -0.06419184008202626;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */


Results
   AUC ROC   = 0.828723
   AUC PR    = 0.15428
   CLL	      = -0.345442
   Precision = 0.151961 at threshold = 0.5
   Recall    = 0.442857
   F1        = 0.226277


Total learning time: 202.246 seconds
Total inference time: 4.393 seconds
AUC ROC: 0.828723


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 09:59:58
{'F1': 0.226277, 'Recall': 0.442857, 'Inference time': 4.393, 'Precision': [0.151961, 0.5], 'Learning time': 202.246, 'AUC PR': 0.15428, 'CLL': -0.345442, 'AUC ROC': 0.828723}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5746240308849493;  // std dev = 0,451, 261,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09151549443068945;  // std dev = 3,774, 298,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=15 */
%   | | | else return 0.12130682983635446;  // std dev = 2,714, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03680904809376528;  // std dev = 4,730, 238,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=25 */
%   | | | else return 0.31803432191899195;  // std dev = 13,167, 698,000 (wgt'ed) examples reached here.  /* #neg=377 #pos=321 */
%   else return -0.14185106490048782;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.219079
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 19.568 seconds
Total inference time: 1.379 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 10:00:20
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.379, 'Precision': [nan, 0.5], 'Learning time': 19.568, 'AUC PR': 0.097917, 'CLL': -0.219079, 'AUC ROC': 0.821572}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 585
Target train neg examples: 24169

Target test facts examples: 9306
Target test pos	 examples: 113
Target test neg examples: 3827

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,19e-07, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.07741803808954634;  // std dev = 7,178, 301,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=66 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.05999957202558368;  // std dev = 7,214, 312,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=66 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 4,21e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.05010816318950679;  // std dev = 7,223, 315,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=66 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.050148059563547696;  // std dev = 7,192, 305,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=66 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601495;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.023701814836431065;  // std dev = 7,280, 335,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=66 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.05484360490297952;  // std dev = 7,122, 285,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=66 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 2,98e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.03811593419088133;  // std dev = 7,161, 296,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=66 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.03230332070468782;  // std dev = 7,161, 296,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=66 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.00862996323782742;  // std dev = 7,247, 323,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=66 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,33e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.009830189134599102;  // std dev = 7,235, 319,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=66 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.242911
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 2.263 seconds
Total inference time: 1.677 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.717949
   AUC PR    = 0.470897
   CLL	      = -0.239053
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.435897
   F1        = 0.607143


Total scoring time: 2.141 seconds
Parameter learned model CLL: -0.239053


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.19e-07, 0, 51], 'false': [7.178, 235, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.214, 246, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 51], 'false': [7.223, 249, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.192, 239, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.28, 269, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.122, 219, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 51], 'false': [7.161, 230, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.161, 230, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.247, 257, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.33e-08, 0, 51], 'false': [7.235, 253, 66]}]]
[{'': [2.7864421010200007e-16, 0.17119016346398017]}, {'': [-4.876273676785002e-16, 0.1667899408284029]}, {'': [3.483052626275001e-17, 0.16562358276643938]}, {'': [-3.483052626275001e-16, 0.16956732061274085]}, {'': [-3.483052626275001e-17, 0.15820004455335093]}, {'': [-2.6122894697062506e-17, 0.17795013850415387]}, {'': [1.7415263131375004e-17, 0.1732560262965654]}, {'': [-6.095342095981252e-17, 0.17325602629656925]}, {'': [-3.047671047990626e-17, 0.16258183247227387]}, {'': [2.1769078914218755e-17, 0.1640903686087996]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,19e-07, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4478925248431012;  // std dev = 0,492, 39,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.12776655785823415;  // std dev = 0,993, 71,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=1 */
%   | | | else return 0.11424649607512129;  // std dev = 5,590, 164,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=42 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.39973711892093344;  // std dev = 0,489, 38,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.1065898312606667;  // std dev = 0,990, 49,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
%   | | | else return 0.07069191468672167;  // std dev = 5,698, 185,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=42 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 4,21e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3980622141053059;  // std dev = 0,468, 34,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0989759834442705;  // std dev = 0,992, 60,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
%   | | | else return 0.06362113281149083;  // std dev = 5,689, 183,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=42 */
%   | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.2567561557253617;  // std dev = 2,950, 37,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return -0.09274115846902958;  // std dev = 0,993, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.10215104613952555;  // std dev = 1,926, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | | else return 0.10660316261468254;  // std dev = 5,225, 135,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=38 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601495;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.07384397076340134;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2738439707634017;  // std dev = 2,510, 30,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08156037390733675;  // std dev = 0,992, 63,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=1 */
%   | | | else return 0.08246246416809919;  // std dev = 5,515, 159,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=42 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.15859078919629557;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.05855830525751876;  // std dev = 3,065, 38,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08988023965162413;  // std dev = 0,012, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0.0531227258223891;  // std dev = 0,925, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.11988372928068554;  // std dev = 1,378, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | | else return 0.2453186513666484;  // std dev = 1,066, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.10508848809785555;  // std dev = 5,124, 123,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 2,98e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.1798929113683443;  // std dev = 2,708, 34,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | | else return -0.07202231168098225;  // std dev = 0,984, 80,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08393217111739949;  // std dev = 1,879, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return 0.053920931737804566;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | else return -0.08019427392557542;  // std dev = 0,027, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.0345082941074774;  // std dev = 3,105, 40,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   | | | else return -0.06353233727549729;  // std dev = 0,982, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06748732906458231;  // std dev = 1,874, 49,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | | | else return 0.0386264761864973;  // std dev = 5,269, 141,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
%   | else return -0.07474272693747698;  // std dev = 0,036, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return -0.017446368282485657;  // std dev = 3,272, 43,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | | else return -0.07305263309282652;  // std dev = 0,013, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( author(G, E), title(G, A) )
%   | | | then return -0.08266236747303965;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.16606662966683816;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09174875669578493;  // std dev = 1,383, 46,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | | | else return 0.48082047355221563;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.04577482664020427;  // std dev = 5,218, 134,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=38 */
%   | | | else return -0.06824145785620052;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,33e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.0022945608356497596;  // std dev = 0,495, 42,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06827364263914255;  // std dev = 0,011, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.012295876864527279;  // std dev = 0,939, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07814713437387191;  // std dev = 1,381, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.18160202087947935;  // std dev = 1,007, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.027177813343573;  // std dev = 5,255, 139,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=38 */
%   | | | else return -0.06402813042883874;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.86687
   AUC PR    = 0.539649
   CLL	      = -0.263428
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 29.188 seconds
Total inference time: 3.027 seconds
AUC ROC: 0.86687


Results scoring model
   AUC ROC   = 0.883848
   AUC PR    = 0.526264
   CLL	      = -0.236023
   Precision = 0.169811 at threshold = 0.5
   Recall    = 0.615385
   F1        = 0.266174


Total scoring time: 4.62 seconds
Refined model CLL: -0.236023


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.86687
   AUC PR    = 0.539649
   CLL	      = -0.263428
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 38.211999999999996 seconds
Total inference time: 3.027 seconds
AUC ROC: 0.86687
Total revision time: 38.211999999999996
Best scored revision CLL: -0.236023


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:01:04
{'parameter_0.2': {'F1': 0.604938, 'Inference time': 1.677, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 2.263, 'CLL': -0.242911}, 'F1': 0.305499, 'Inference time': 3.027, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.86687, 'AUC PR': 0.539649, 'Recall': 0.663717, 'Learning time': 38.211999999999996, 'CLL': -0.263428}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5433341202846964;  // std dev = 0,464, 54,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=37 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.041851064900487754;  // std dev = 1,897, 40,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | | else return 0.25814893509951364;  // std dev = 6,573, 180,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=72 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4937618064793707;  // std dev = 0,452, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return 0.02176788419240575;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04380926162612149;  // std dev = 1,905, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | | else return 0.2794298570157533;  // std dev = 6,260, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.34986272452652917;  // std dev = 0,472, 60,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11231637819360626;  // std dev = 4,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0.052383206278143676;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.051740068543689094;  // std dev = 1,918, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return 0.19323572708881723;  // std dev = 6,497, 174,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=72 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3057003044968307;  // std dev = 0,457, 57,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10159632948783619;  // std dev = 4,71e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0.09566964266876343;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04750235583292257;  // std dev = 1,920, 51,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | | else return 0.2181261964656906;  // std dev = 6,156, 152,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=72 */
%   else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.033867494308373075;  // std dev = 1,242, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.17630380329134365;  // std dev = 0,478, 57,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08021998549085703;  // std dev = 1,388, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.3862293024217769;  // std dev = 0,986, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.0822161733187322;  // std dev = 0,930, 67,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1 */
%   | | | else return 0.13715294067943137;  // std dev = 6,370, 165,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=72 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2718186025136766;  // std dev = 0,887, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.31497320466680623;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2487235866527444;  // std dev = 2,903, 47,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=36 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08684750368380863;  // std dev = 0,044, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.013274828161457539;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.02858955458128777;  // std dev = 1,864, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | | else return 0.07804340470326701;  // std dev = 6,535, 177,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=72 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15435408045843912;  // std dev = 0,448, 55,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0800527703491837;  // std dev = 0,041, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.011571027808416758;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.011884531109223922;  // std dev = 1,821, 32,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.09284206476780035;  // std dev = 6,355, 164,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=72 */
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07928188856400095;  // std dev = 0,455, 59,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=40 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07436305832762605;  // std dev = 0,039, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.01006611623695958;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0344132665299852;  // std dev = 1,876, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | | else return 0.053567501398157864;  // std dev = 6,456, 171,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=72 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.4556482863702977;  // std dev = 0,102, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07290749889091233;  // std dev = 0,187, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordtitle(B, C) )
%   | | then return 0.020367072580816045;  // std dev = 0,476, 55,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=36 */
%   | | else return -0.05802476785549058;  // std dev = 0,117, 62,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=1 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then if ( author(J, H), title(J, A) )
%   | | | then return -0.10752827210610626;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.05524362353528819;  // std dev = 1,377, 39,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | | else return 0.21855129506026674;  // std dev = 1,077, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.09056588778201952;  // std dev = 0,499, 153,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=72 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.34811954744676604;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.44331516968653983;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.04697043569739905;  // std dev = 0,465, 54,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=37 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06577774465768171;  // std dev = 0,035, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0.05644225916016741;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.022514456389459456;  // std dev = 1,834, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | | else return 0.01947296868551998;  // std dev = 6,456, 171,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=72 */
%   else return -0.06790035513482065;  // std dev = 0,030, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.837106
   AUC PR    = 0.098582
   CLL	      = -0.317595
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 51.854 seconds
Total inference time: 3.57 seconds
AUC ROC: 0.837106


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 10:01:59
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 3.57, 'Precision': [0.119186, 0.5], 'Learning time': 51.854, 'AUC PR': 0.098582, 'CLL': -0.317595, 'AUC ROC': 0.837106}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4642095411601182;  // std dev = 0,489, 66,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09423201728144012;  // std dev = 1,380, 42,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.12669954974897252;  // std dev = 0,992, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | | else return 0.27920156667846097;  // std dev = 6,456, 171,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=72 */
%   else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.678122
   AUC PR    = 0.039592
   CLL	      = -0.220875
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 5.554 seconds
Total inference time: 1.507 seconds
AUC ROC: 0.678122


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 10:02:07
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.507, 'Precision': [nan, 0.5], 'Learning time': 5.554, 'AUC PR': 0.039592, 'CLL': -0.220875, 'AUC ROC': 0.678122}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,77e-07, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else return 0.07459188811964367;  // std dev = 10,054, 596,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=129 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else return 0.07085510563625956;  // std dev = 10,018, 581,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=129 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,38e-07, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else return 0.0642441291103844;  // std dev = 10,000, 574,000 (wgt'ed) examples reached here.  /* #neg=445 #pos=129 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830964;  // std dev = 2,73e-07, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else return 0.03253748974881257;  // std dev = 10,147, 639,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=129 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else return 0.04921671995880739;  // std dev = 10,010, 578,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=129 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else return 0.031017962483961433;  // std dev = 10,081, 608,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=129 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 1,52e-07, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else return 0.04496945696854599;  // std dev = 9,961, 559,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=129 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527733;  // std dev = 4,21e-08, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else return 0.02338140961252608;  // std dev = 10,056, 597,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=129 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else return 0.010037497211227049;  // std dev = 10,118, 625,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=129 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else return 0.024846635840908942;  // std dev = 10,013, 579,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=129 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.246651
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 2.962 seconds
Total inference time: 1.855 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.724359
   AUC PR    = 0.482732
   CLL	      = -0.242413
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.448718
   F1        = 0.619469


Total scoring time: 3.163 seconds
Parameter learned model CLL: -0.242413


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.77e-07, 0, 105], 'false': [10.054, 467, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 105], 'false': [10.018, 452, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.38e-07, 0, 105], 'false': [10.0, 445, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.73e-07, 0, 105], 'false': [10.147, 510, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 105], 'false': [10.01, 449, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 105], 'false': [10.081, 479, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.52e-07, 0, 105], 'false': [9.961, 430, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 105], 'false': [10.056, 468, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 105], 'false': [10.118, 496, 129]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.83e-08, 0, 105], 'false': [10.013, 450, 129]}]]
[{'': [2.1654635756498293e-15, 0.1695954011080598]}, {'': [-5.413658939124573e-16, 0.17273322451349818]}, {'': [1.827109891954543e-15, 0.17423120348675036]}, {'': [7.105427357601002e-16, 0.16112323392625041]}, {'': [-2.0301221021717148e-16, 0.17337256498365694]}, {'': [-4.229421046191072e-17, 0.16715449705678492]}, {'': [2.1992989440193578e-16, 0.17751479289940392]}, {'': [1.6917684184764292e-17, 0.16938966187722032]}, {'': [-1.3111205243192325e-16, 0.16379904000000148]}, {'': [4.4408920985006264e-17, 0.17315901098015635]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,77e-07, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4013588116427228;  // std dev = 4,483, 81,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=44 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08690600995543274;  // std dev = 2,174, 91,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=5 */
%   | | | else return 0.10814893509951223;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.12144290163518168;  // std dev = 1,714, 147,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=3 */
%   | | | else return 0.09344305274657114;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.1512523833753758;  // std dev = 6,933, 232,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=68 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3771375010983881;  // std dev = 0,494, 80,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=46 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07797282650781831;  // std dev = 2,545, 132,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=7 */
%   | | | else return 0.05334049742279031;  // std dev = 7,714, 367,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=76 */
%   | else return -0.13189246937757365;  // std dev = 0,058, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,38e-07, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.4047070248591084;  // std dev = 0,820, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.29979487737013577;  // std dev = 4,377, 78,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=44 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07159896452205936;  // std dev = 2,549, 139,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=7 */
%   | | | else return 0.05991578061640681;  // std dev = 7,646, 344,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=76 */
%   | else return -0.11669240501787366;  // std dev = 0,054, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830964;  // std dev = 2,73e-07, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.09793030033296939;  // std dev = 1,233, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.30054775982480136;  // std dev = 4,048, 70,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=44 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06190138735741337;  // std dev = 2,547, 133,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=7 */
%   | | | else return 0.04149613561902634;  // std dev = 7,696, 360,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=76 */
%   | else return -0.10174381919140943;  // std dev = 0,008, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.27924175054649947;  // std dev = 0,861, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23517517410826635;  // std dev = 4,039, 70,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=44 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.059984021695642716;  // std dev = 2,670, 88,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=8 */
%   | | | else return 0.03365552745413566;  // std dev = 7,632, 391,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=75 */
%   | else return -0.09564058800793654;  // std dev = 0,035, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.10904050613766814;  // std dev = 4,509, 82,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=46 */
%   | | | else return -0.05852282514042059;  // std dev = 2,546, 133,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.04688751323764649;  // std dev = 2,666, 81,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=8 */
%   | | | else return 0.06437272586177976;  // std dev = 7,128, 269,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=68 */
%   | else return -0.08787864213453903;  // std dev = 0,042, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 1,52e-07, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11101043634156266;  // std dev = 0,487, 79,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=46 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06009016274176122;  // std dev = 2,558, 153,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=7 */
%   | | | else return 0.0330582976554251;  // std dev = 7,627, 355,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=76 */
%   | else return -0.0816344092330093;  // std dev = 0,034, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527733;  // std dev = 4,21e-08, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.006725206466372114;  // std dev = 1,076, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.02761726215132468;  // std dev = 4,512, 82,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07774096375882732;  // std dev = 1,715, 154,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=3 */
%   | | | else return 0.10226740664348441;  // std dev = 1,754, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07691395350338046;  // std dev = 2,163, 85,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=5 */
%   | | | else return 0.35885282425840903;  // std dev = 1,164, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.0660732930598701;  // std dev = 7,046, 252,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=68 */
%   | | | else return -0.07193536331637174;  // std dev = 3,73e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return -0.03351754181769846;  // std dev = 0,338, 218,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=49 */
%   | | else if ( author(G, E), title(G, A) )
%   | | | then return 0.11997301401999949;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.18305403590855723;  // std dev = 1,423, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07553774729122593;  // std dev = 2,172, 95,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=5 */
%   | | | else return 0.2062275201009092;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.09160820367404572;  // std dev = 6,868, 222,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=68 */
%   | | | else return -0.06727832273274705;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.05573018409787394;  // std dev = 0,492, 83,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=46 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05638113909838786;  // std dev = 2,609, 109,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=8 */
%   | | | else return 0.002279079124999857;  // std dev = 7,564, 406,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=75 */
%   | else return -0.07309606192505438;  // std dev = 0,143, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */


Results
   AUC ROC   = 0.869002
   AUC PR    = 0.539794
   CLL	      = -0.254947
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 40.791 seconds
Total inference time: 2.933 seconds
AUC ROC: 0.869002


Results scoring model
   AUC ROC   = 0.879377
   AUC PR    = 0.540623
   CLL	      = -0.22597
   Precision = 0.189327 at threshold = 0.5
   Recall    = 0.636752
   F1        = 0.291871


Total scoring time: 7.195 seconds
Refined model CLL: -0.22597


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.869002
   AUC PR    = 0.539794
   CLL	      = -0.254947
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 54.111 seconds
Total inference time: 2.933 seconds
AUC ROC: 0.869002
Total revision time: 54.111
Best scored revision CLL: -0.22597


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:03:06
{'F1': 0.305499, 'Inference time': 2.933, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.869002, 'AUC PR': 0.539794, 'parameter_0.4': {'F1': 0.604938, 'Inference time': 1.855, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 2.962, 'CLL': -0.246651}, 'Recall': 0.663717, 'Learning time': 54.111, 'CLL': -0.254947}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.5896304165809927;  // std dev = 0,443, 108,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=79 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11506535061477338;  // std dev = 1,709, 112,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=3 */
%   | | | else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.047733417841664155;  // std dev = 2,692, 85,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=8 */
%   | | | else return 0.2849402123580754;  // std dev = 8,862, 321,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=137 */
%   else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.29701438684128156;  // std dev = 1,035, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.3973484630256592;  // std dev = 0,484, 126,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=79 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09064307631430966;  // std dev = 2,187, 107,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=5 */
%   | | | else return 0.19805258106605617;  // std dev = 1,412, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.07850229666869563;  // std dev = 2,521, 130,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=7 */
%   | | | else return 0.22633804681124273;  // std dev = 9,017, 337,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=137 */
%   else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3951474201224475;  // std dev = 0,454, 117,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=82 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09400687290145755;  // std dev = 1,709, 116,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=3 */
%   | | | else return 0.1479896273365888;  // std dev = 1,663, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.13591143049309787;  // std dev = 0,464, 433,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=145 */
%   else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3118184755596568;  // std dev = 0,450, 116,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=82 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08660401265119454;  // std dev = 1,712, 124,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=3 */
%   | | | else return 0.12697877847514702;  // std dev = 1,663, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05227513823711316;  // std dev = 2,661, 87,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=8 */
%   | | | else return 0.17020349790000225;  // std dev = 8,989, 334,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=137 */
%   else return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4844726899423934;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2813306351951523;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.2256040267111267;  // std dev = 0,459, 113,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=79 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08023435410568407;  // std dev = 1,713, 136,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=3 */
%   | | | else return 0.13309020541045755;  // std dev = 1,632, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.029740526103977382;  // std dev = 2,638, 74,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=8 */
%   | | | else return 0.12472660784671596;  // std dev = 9,088, 345,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=137 */
%   else return -0.092691276189261;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.0796822630984693;  // std dev = 0,479, 136,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=82 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07522393543229464;  // std dev = 1,716, 148,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=3 */
%   | | | else return 0.0632309881045068;  // std dev = 1,689, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07811161423799536;  // std dev = 2,175, 93,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=5 */
%   | | | else return 0.5814284659419047;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.11990050498220446;  // std dev = 0,493, 328,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=137 */
%   else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.05297245589360123;  // std dev = 0,724, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.20997171871835196;  // std dev = 0,427, 104,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=79 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.06764875944451007;  // std dev = 1,715, 139,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=3 */
%   | | | else return 0.052101467829013086;  // std dev = 1,689, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04416299814964264;  // std dev = 2,576, 94,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=8 */
%   | | | else return 0.10467891428671779;  // std dev = 8,851, 320,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=137 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return -0.1217887252991574;  // std dev = 1,175, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.04454698920148624;  // std dev = 0,468, 125,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=79 */
%   | else if ( haswordvenue(F, C) )
%   | | then return -0.06402382649079989;  // std dev = 0,136, 159,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=3 */
%   | | else return 0.007181864342386732;  // std dev = 0,405, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then if ( author(J, H), title(J, B) )
%   | | | then return -0.11849547714513377;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.053657126417419446;  // std dev = 2,161, 82,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=5 */
%   | | else return 0.2236493196773434;  // std dev = 0,455, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.05736732154647266;  // std dev = 0,491, 339,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=137 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1355944769630862;  // std dev = 0,417, 113,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=82 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.053965542827935954;  // std dev = 1,711, 119,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=3 */
%   | | | else return 0.0056860976902842544;  // std dev = 1,731, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.019757790052673512;  // std dev = 2,516, 78,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=8 */
%   | | | else return 0.0937735447163973;  // std dev = 8,652, 302,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=137 */
%   else return -0.07048137946520161;  // std dev = 0,029, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07569697998891206;  // std dev = 0,440, 116,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=82 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05482554100901894;  // std dev = 1,715, 147,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=3 */
%   | | | else return 0.1542981065590602;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.041238853848658455;  // std dev = 0,456, 400,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=145 */
%   else return -0.06512146371057144;  // std dev = 0,020, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */


Results
   AUC ROC   = 0.836163
   AUC PR    = 0.098521
   CLL	      = -0.379008
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 114.922 seconds
Total inference time: 3.737 seconds
AUC ROC: 0.836163


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 10:05:05
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 3.737, 'Precision': [0.119186, 0.5], 'Learning time': 114.922, 'AUC PR': 0.098521, 'CLL': -0.379008, 'AUC ROC': 0.836163}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.5829195773013461;  // std dev = 0,447, 109,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=79 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11877414182356458;  // std dev = 1,712, 130,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=3 */
%   | | | else return 0.06867525088898598;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.053938976988399764;  // std dev = 2,701, 91,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=8 */
%   | | | else return 0.2599084658912972;  // std dev = 9,053, 341,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=137 */
%   else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.833652
   AUC PR    = 0.098313
   CLL	      = -0.210535
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 13.853 seconds
Total inference time: 1.745 seconds
AUC ROC: 0.833652


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 10:05:21
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.745, 'Precision': [nan, 0.5], 'Learning time': 13.853, 'AUC PR': 0.098313, 'CLL': -0.210535, 'AUC ROC': 0.833652}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.08917951267595149;  // std dev = 12,525, 883,000 (wgt'ed) examples reached here.  /* #neg=679 #pos=204 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.07771190569562667;  // std dev = 12,527, 884,000 (wgt'ed) examples reached here.  /* #neg=680 #pos=204 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.05713557894377238;  // std dev = 12,610, 925,000 (wgt'ed) examples reached here.  /* #neg=721 #pos=204 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.06257839477777559;  // std dev = 12,501, 872,000 (wgt'ed) examples reached here.  /* #neg=668 #pos=204 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.05217491724263368;  // std dev = 12,512, 877,000 (wgt'ed) examples reached here.  /* #neg=673 #pos=204 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.03345828284808795;  // std dev = 12,600, 920,000 (wgt'ed) examples reached here.  /* #neg=716 #pos=204 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.028532691016347835;  // std dev = 12,598, 919,000 (wgt'ed) examples reached here.  /* #neg=715 #pos=204 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.015450590375760739;  // std dev = 12,668, 956,000 (wgt'ed) examples reached here.  /* #neg=752 #pos=204 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.027785017985925742;  // std dev = 12,548, 894,000 (wgt'ed) examples reached here.  /* #neg=690 #pos=204 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,32e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.015886921836982433;  // std dev = 12,608, 924,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=204 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.253008
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 3.223 seconds
Total inference time: 1.81 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.709402
   AUC PR    = 0.453422
   CLL	      = -0.249915
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.418803
   F1        = 0.590361


Total scoring time: 3.813 seconds
Parameter learned model CLL: -0.249915


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9e-07, 0, 147], 'false': [12.525, 679, 204]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [12.527, 680, 204]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.2e-07, 0, 147], 'false': [12.61, 721, 204]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.42e-07, 0, 147], 'false': [12.501, 668, 204]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.63e-07, 0, 147], 'false': [12.512, 673, 204]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [12.6, 716, 204]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.42e-07, 0, 147], 'false': [12.598, 715, 204]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [12.668, 752, 204]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [12.548, 690, 204]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.32e-08, 0, 147], 'false': [12.608, 720, 204]}]]
[{'': [5.5103314201803686e-15, 0.17765544980114048]}, {'': [-2.3201395453391025e-15, 0.1775147928994]}, {'': [1.836777140060123e-15, 0.1719024105186241]}, {'': [1.3292466145171943e-15, 0.17921471256628407]}, {'': [4.712783451470053e-16, 0.1785032159754641]}, {'': [-1.570927817156684e-16, 0.17257088846880167]}, {'': [3.9877398435515827e-16, 0.17270510951842777]}, {'': [-3.021015032993623e-16, 0.16785420423312358]}, {'': [-3.6252180395923476e-17, 0.17611819287418742]}, {'': [2.718913529694261e-17, 0.1720357564513475]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.44408643509951323;  // std dev = 0,493, 128,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=75 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09185106490048765;  // std dev = 2,579, 140,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=7 */
%   | | | else return 0.21529179224236947;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11258277221756123;  // std dev = 2,413, 205,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=6 */
%   | | | else return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.1213068298363522;  // std dev = 8,796, 399,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=105 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.39033283743903385;  // std dev = 0,491, 126,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=75 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07840197728588237;  // std dev = 2,575, 133,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=7 */
%   | | | else return 0.18701313901080718;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09760288618120033;  // std dev = 2,411, 193,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=6 */
%   | | | else return 0.054502885253336616;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.1183219589304037;  // std dev = 8,721, 381,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=105 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.28393925980254897;  // std dev = 0,496, 134,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=75 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05898494645727315;  // std dev = 3,271, 176,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=12 */
%   | | | else return 0.06639336431646994;  // std dev = 9,397, 512,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=117 */
%   | else return -0.12505612203170058;  // std dev = 0,150, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.16922837587740788;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.2827490252525362;  // std dev = 5,276, 118,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=73 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06503920631651773;  // std dev = 3,293, 222,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=12 */
%   | | | else return 0.06440303121827098;  // std dev = 9,343, 498,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=117 */
%   | else return -0.1145302936038335;  // std dev = 0,195, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19461283837529886;  // std dev = 0,489, 127,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=75 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.058810927086789255;  // std dev = 3,295, 227,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=12 */
%   | | | else return 0.050141531427424745;  // std dev = 9,379, 505,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=117 */
%   | else return -0.10198261208470918;  // std dev = 0,141, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14145727815304032;  // std dev = 0,487, 129,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=75 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0472001907820767;  // std dev = 3,287, 203,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=12 */
%   | | | else return 0.04606823331060172;  // std dev = 9,343, 502,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=117 */
%   | else return -0.09299740437499425;  // std dev = 0,144, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.040735699914343705;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.13434448594149187;  // std dev = 5,276, 118,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=73 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.049639659041685304;  // std dev = 3,299, 234,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=12 */
%   | | | else return 0.030498788187940926;  // std dev = 9,401, 518,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=117 */
%   | else return -0.085346524893127;  // std dev = 0,122, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08223158044913786;  // std dev = 0,491, 126,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=75 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08044004248808312;  // std dev = 3,229, 152,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=12 */
%   | | | else return 0.039861006108944205;  // std dev = 9,286, 561,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=117 */
%   | else return -0.07924464848912462;  // std dev = 0,125, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.01923386184036589;  // std dev = 5,765, 137,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=75 */
%   | | | else return -0.09214278359034137;  // std dev = 2,580, 152,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=7 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return 0.0694375646283523;  // std dev = 0,815, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.22632033003728438;  // std dev = 1,413, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06285127898813314;  // std dev = 2,409, 197,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=6 */
%   | | | else return 0.18238239542390422;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.04740015499920847;  // std dev = 8,768, 392,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=105 */
%   | | | else return -0.06498213142655353;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,32e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06800232468942785;  // std dev = 0,483, 125,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=75 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05891251287493792;  // std dev = 3,176, 146,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=12 */
%   | | | else return 0.012065950828664776;  // std dev = 9,394, 600,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=117 */
%   | else return -0.08073654552742322;  // std dev = 0,218, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.869002
   AUC PR    = 0.539794
   CLL	      = -0.271035
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 51.64 seconds
Total inference time: 2.984 seconds
AUC ROC: 0.869002


Results scoring model
   AUC ROC   = 0.873535
   AUC PR    = 0.517464
   CLL	      = -0.234615
   Precision = 0.183486 at threshold = 0.5
   Recall    = 0.626781
   F1        = 0.283871


Total scoring time: 8.124 seconds
Refined model CLL: -0.234615


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.869002
   AUC PR    = 0.539794
   CLL	      = -0.271035
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 66.8 seconds
Total inference time: 2.984 seconds
AUC ROC: 0.869002
Total revision time: 66.8
Best scored revision CLL: -0.234615


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:06:34
{'F1': 0.305499, 'Inference time': 2.984, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.869002, 'AUC PR': 0.539794, 'parameter_0.6': {'F1': 0.604938, 'Inference time': 1.81, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 3.223, 'CLL': -0.253008}, 'Recall': 0.663717, 'Learning time': 66.8, 'CLL': -0.271035}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.5923261502893832;  // std dev = 5,553, 158,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=116 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.11229441465418263;  // std dev = 2,413, 203,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=6 */
%   | | | else return 0.13087620782678508;  // std dev = 2,089, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.038402789038418705;  // std dev = 3,280, 116,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=12 */
%   | | | else return 0.28823368086221984;  // std dev = 10,756, 472,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=203 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4933408054465041;  // std dev = 0,440, 172,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=124 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08195605884525622;  // std dev = 2,573, 125,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=7 */
%   | | | else return 0.2808458644831742;  // std dev = 1,704, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.07562230903106273;  // std dev = 3,323, 217,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=12 */
%   | | | else return 0.21814404581573768;  // std dev = 11,047, 509,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=203 */
%   else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3754183816865317;  // std dev = 0,448, 177,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=124 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09112347680667535;  // std dev = 2,414, 203,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=6 */
%   | | | else return 0.11233239379274196;  // std dev = 2,105, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04599006160047625;  // std dev = 3,258, 141,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=12 */
%   | | | else return 0.19820162064511895;  // std dev = 10,912, 491,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=203 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2941039538085815;  // std dev = 0,446, 175,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=124 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08296101598428525;  // std dev = 2,416, 210,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=6 */
%   | | | else return 0.03670171931204605;  // std dev = 2,190, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03287341542144516;  // std dev = 3,247, 128,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=12 */
%   | | | else return 0.16368680517079634;  // std dev = 10,904, 490,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=203 */
%   else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.20876644044857828;  // std dev = 0,449, 179,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=124 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07098152349424361;  // std dev = 2,410, 185,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=6 */
%   | | | else return 0.0715599649202013;  // std dev = 2,135, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03700137880135919;  // std dev = 3,261, 140,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=12 */
%   | | | else return 0.13426469547165654;  // std dev = 10,880, 487,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=203 */
%   else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17185981104711218;  // std dev = 0,447, 174,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=124 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06495016641892808;  // std dev = 2,411, 186,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=6 */
%   | | | else return 0.10708438405060658;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03129348652249564;  // std dev = 3,264, 134,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=12 */
%   | | | else return 0.10036402217025274;  // std dev = 10,935, 494,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=203 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17649669985929758;  // std dev = 0,417, 164,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=124 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06022238868579754;  // std dev = 2,412, 192,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=6 */
%   | | | else return 0.1050768611071485;  // std dev = 2,049, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.030141965783975263;  // std dev = 3,265, 140,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=12 */
%   | | | else return 0.11272106859017499;  // std dev = 10,613, 456,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=203 */
%   else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07061646458148813;  // std dev = 0,455, 178,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=124 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0536215157716653;  // std dev = 2,410, 180,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=6 */
%   | | | else return 0.02814197660438388;  // std dev = 2,135, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03509726857181996;  // std dev = 3,281, 154,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=12 */
%   | | | else return 0.04807555367483692;  // std dev = 10,981, 500,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=203 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.06728088273553331;  // std dev = 0,445, 176,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=124 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05182375203458917;  // std dev = 2,412, 196,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=6 */
%   | | | else return 0.09900672806043229;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.038645906591453456;  // std dev = 2,555, 104,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=7 */
%   | | | else return 0.187785346092359;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.06845326544576845;  // std dev = 0,496, 464,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=203 */
%   else return -0.06842697784420271;  // std dev = 1,05e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.018978671903513877;  // std dev = 1,106, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.018698645943396562;  // std dev = 6,158, 179,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=120 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.044696541913445624;  // std dev = 2,409, 176,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=6 */
%   | | | else return 0.016053551979112526;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.053397076276592986;  // std dev = 2,580, 143,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=7 */
%   | | | else return 0.24617817057347632;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.03343269654263717;  // std dev = 0,493, 485,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=203 */
%   else return -0.06419184008202625;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */


Results
   AUC ROC   = 0.83324
   AUC PR    = 0.09825
   CLL	      = -0.358592
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 172.775 seconds
Total inference time: 3.625 seconds
AUC ROC: 0.83324


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 10:09:30
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 3.625, 'Precision': [0.119186, 0.5], 'Learning time': 172.775, 'AUC PR': 0.09825, 'CLL': -0.358592, 'AUC ROC': 0.83324}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.6263608556293112;  // std dev = 5,185, 151,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=116 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10851773156715454;  // std dev = 2,408, 180,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=6 */
%   | | | else return 0.0803711573217346;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.05425982402457525;  // std dev = 3,309, 137,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=12 */
%   | | | else return 0.26496256235401694;  // std dev = 10,973, 499,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=203 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */


Results
   AUC ROC   = 0.833652
   AUC PR    = 0.098313
   CLL	      = -0.214351
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 18.544 seconds
Total inference time: 1.627 seconds
AUC ROC: 0.833652


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 10:09:51
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.627, 'Precision': [nan, 0.5], 'Learning time': 18.544, 'AUC PR': 0.098313, 'CLL': -0.214351, 'AUC ROC': 0.833652}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995091;  // std dev = 1,08e-06, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else return 0.07663633005749063;  // std dev = 14,255, 1.190,000 (wgt'ed) examples reached here.  /* #neg=930 #pos=260 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else return 0.07078381333029683;  // std dev = 14,220, 1.170,000 (wgt'ed) examples reached here.  /* #neg=910 #pos=260 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,42e-07, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else return 0.05883401523714252;  // std dev = 14,244, 1.184,000 (wgt'ed) examples reached here.  /* #neg=924 #pos=260 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 2,23e-07, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else return 0.04744862062427791;  // std dev = 14,274, 1.202,000 (wgt'ed) examples reached here.  /* #neg=942 #pos=260 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601492;  // std dev = 3,91e-07, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else return 0.04231626341169942;  // std dev = 14,260, 1.193,000 (wgt'ed) examples reached here.  /* #neg=933 #pos=260 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,53e-07, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else return 0.0353771622729418;  // std dev = 14,266, 1.197,000 (wgt'ed) examples reached here.  /* #neg=937 #pos=260 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,01e-07, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else return 0.026134658621175668;  // std dev = 14,302, 1.219,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=260 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527783;  // std dev = 0,000, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else return 0.030490599119139525;  // std dev = 14,226, 1.173,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=260 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else return 0.021106203999161452;  // std dev = 14,268, 1.198,000 (wgt'ed) examples reached here.  /* #neg=938 #pos=260 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 8,94e-08, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else return 0.013846223779579201;  // std dev = 14,304, 1.220,000 (wgt'ed) examples reached here.  /* #neg=960 #pos=260 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.246152
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 3.745 seconds
Total inference time: 1.894 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.722222
   AUC PR    = 0.47839
   CLL	      = -0.242053
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.444444
   F1        = 0.615385


Total scoring time: 3.789 seconds
Parameter learned model CLL: -0.242053


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 208], 'false': [14.255, 930, 260]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 208], 'false': [14.22, 910, 260]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.42e-07, 0, 208], 'false': [14.244, 924, 260]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.23e-07, 0, 208], 'false': [14.274, 942, 260]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.91e-07, 0, 208], 'false': [14.26, 933, 260]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.53e-07, 0, 208], 'false': [14.266, 937, 260]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.01e-07, 0, 208], 'false': [14.302, 959, 260]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 208], 'false': [14.226, 913, 260]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 208], 'false': [14.268, 938, 260]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.94e-08, 0, 208], 'false': [14.304, 960, 260]}]]
[{'': [5.60235618580079e-15, 0.17075065320245875]}, {'': [-3.825999346400539e-15, 0.1728395061728369]}, {'': [1.9813210901002794e-15, 0.1713728086194218]}, {'': [2.391249591500337e-16, 0.16951780310685954]}, {'': [7.344552316751035e-16, 0.1704410120787094]}, {'': [3.0744637605004334e-16, 0.17002964107567048]}, {'': [4.355490327375614e-16, 0.16779713599482796]}, {'': [-5.551115123125783e-17, 0.17252343689246313]}, {'': [-1.2810265668751805e-16, 0.1699270626335981]}, {'': [3.843079700625542e-17, 0.1676968556839525]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995091;  // std dev = 1,08e-06, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.43211343214092973;  // std dev = 0,494, 169,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=97 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08779701084643361;  // std dev = 3,076, 185,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=10 */
%   | | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11387903692846031;  // std dev = 2,789, 286,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=8 */
%   | | | else return 0.17814893509951235;  // std dev = 2,332, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.09365618147632056;  // std dev = 9,969, 552,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=130 */
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3642899441889662;  // std dev = 0,495, 171,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=97 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07563624909122428;  // std dev = 3,830, 282,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=16 */
%   | | | else return 0.06919807127835452;  // std dev = 10,654, 675,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=147 */
%   | else return -0.13665036397299102;  // std dev = 0,190, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,42e-07, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.28290149347186383;  // std dev = 0,497, 176,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=97 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06853299459209272;  // std dev = 3,833, 292,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=16 */
%   | | | else return 0.060256829831284005;  // std dev = 10,655, 673,000 (wgt'ed) examples reached here.  /* #neg=526 #pos=147 */
%   | else return -0.1182979780821867;  // std dev = 0,137, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 2,23e-07, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.10501770667145657;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.27024434783588336;  // std dev = 6,184, 159,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=95 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05817147216724461;  // std dev = 3,833, 272,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=16 */
%   | | | else return 0.0433302308982239;  // std dev = 10,717, 699,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=147 */
%   | else return -0.10907949797389974;  // std dev = 0,143, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601492;  // std dev = 3,91e-07, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.12486328335266465;  // std dev = 1,261, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1880489067931944;  // std dev = 6,290, 164,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05858537942754483;  // std dev = 3,846, 308,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=16 */
%   | | | else return 0.04654607702700876;  // std dev = 10,641, 674,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=147 */
%   | else return -0.09447621318014293;  // std dev = 0,084, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,53e-07, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16550918276745064;  // std dev = 0,488, 163,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=97 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05276163907296016;  // std dev = 3,846, 309,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=16 */
%   | | | else return 0.038704211179508514;  // std dev = 10,651, 675,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=147 */
%   | else return -0.08734013779296673;  // std dev = 0,089, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,01e-07, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.22911912649012195;  // std dev = 1,311, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.17564335431356815;  // std dev = 5,754, 146,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=95 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07979138281247575;  // std dev = 3,839, 195,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=17 */
%   | | | else return 0.024437076013368097;  // std dev = 10,686, 792,000 (wgt'ed) examples reached here.  /* #neg=646 #pos=146 */
%   | else return -0.08302309659023945;  // std dev = 0,092, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527783;  // std dev = 0,000, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.0426762474291305;  // std dev = 6,523, 176,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=97 */
%   | | | else return -0.04509437559344751;  // std dev = 3,837, 281,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=16 */
%   | | else return 0.025027458888259354;  // std dev = 0,404, 699,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=147 */
%   | else return -0.0780171178413282;  // std dev = 0,116, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.08824148713345212;  // std dev = 6,082, 160,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=97 */
%   | | | else return -0.07473900208314971;  // std dev = 3,844, 206,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=17 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04360700612143037;  // std dev = 3,844, 293,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=16 */
%   | | | else return 0.0604496672197796;  // std dev = 9,818, 503,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=130 */
%   | else return -0.07240031832469669;  // std dev = 0,091, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 8,94e-08, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.028931558340791738;  // std dev = 6,386, 170,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=97 */
%   | | | else return -0.06313348289480936;  // std dev = 2,789, 295,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=8 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return 0.29523059012373304;  // std dev = 1,069, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08800363040619562;  // std dev = 2,172, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.05699808737334992;  // std dev = 3,834, 179,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=17 */
%   | | | else return 0.055917427128839216;  // std dev = 9,784, 493,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=130 */
%   | | else return -0.06634771456403105;  // std dev = 0,067, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */


Results
   AUC ROC   = 0.901089
   AUC PR    = 0.550951
   CLL	      = -0.234007
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 77.137 seconds
Total inference time: 2.586 seconds
AUC ROC: 0.901089


Results scoring model
   AUC ROC   = 0.872703
   AUC PR    = 0.540277
   CLL	      = -0.227894
   Precision = 0.185776 at threshold = 0.5
   Recall    = 0.647436
   F1        = 0.288709


Total scoring time: 11.812 seconds
Refined model CLL: -0.227894


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.901089
   AUC PR    = 0.550951
   CLL	      = -0.234007
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 96.483 seconds
Total inference time: 2.586 seconds
AUC ROC: 0.901089
Total revision time: 96.483
Best scored revision CLL: -0.227894


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:11:33
{'F1': 0.305499, 'Inference time': 2.586, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.901089, 'parameter_0.8': {'F1': 0.604938, 'Inference time': 1.894, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 3.745, 'CLL': -0.246152}, 'AUC PR': 0.550951, 'Recall': 0.663717, 'Learning time': 96.483, 'CLL': -0.234007}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5373156017661755;  // std dev = 0,467, 240,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=163 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11010503315445647;  // std dev = 2,783, 252,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=8 */
%   | | | else return 0.17814893509951235;  // std dev = 2,332, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03287670592612868;  // std dev = 3,892, 156,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=17 */
%   | | | else return 0.30186834782381444;  // std dev = 12,301, 613,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=272 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.47905868129545776;  // std dev = 0,458, 233,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=163 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09796130074019617;  // std dev = 2,784, 258,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=8 */
%   | | | else return 0.08505025609950073;  // std dev = 2,449, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03963003619627332;  // std dev = 3,915, 173,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=17 */
%   | | | else return 0.24296075511042411;  // std dev = 12,499, 639,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=272 */
%   else return -0.12544463852839155;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.0635389876243635;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.36886444585202827;  // std dev = 7,106, 233,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=159 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07307661269121317;  // std dev = 3,068, 164,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=10 */
%   | | | else return 0.2811410028656437;  // std dev = 2,020, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08673805335338466;  // std dev = 2,783, 253,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=8 */
%   | | | else return 0.0810636917313066;  // std dev = 2,436, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else return 0.2126984769069036;  // std dev = 0,496, 626,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=272 */
%   else return -0.11231637819360622;  // std dev = 6,23e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.33667717196347235;  // std dev = 0,442, 223,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=163 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07710015396621685;  // std dev = 2,784, 241,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=8 */
%   | | | else return 0.09820228016831378;  // std dev = 2,385, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.016970149613593923;  // std dev = 3,825, 152,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=17 */
%   | | | else return 0.16234388673582217;  // std dev = 12,528, 643,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=272 */
%   else return -0.1015963294878362;  // std dev = 4,47e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.4055492677562633;  // std dev = 0,977, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.2112512159986825;  // std dev = 0,455, 231,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=158 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07119322370068823;  // std dev = 2,784, 257,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=8 */
%   | | | else return 0.06601718166925322;  // std dev = 2,409, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.022990810611948395;  // std dev = 3,843, 164,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=17 */
%   | | | else return 0.1272507103827246;  // std dev = 12,556, 647,000 (wgt'ed) examples reached here.  /* #neg=375 #pos=272 */
%   else return -0.09269127618926107;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.5262105180192401;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08114248580501204;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.16800175195508626;  // std dev = 0,454, 227,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=158 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0645751665858915;  // std dev = 2,786, 249,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=8 */
%   | | | else return 0.1376485948659802;  // std dev = 2,266, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03727902349658898;  // std dev = 3,881, 196,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=17 */
%   | | | else return 0.09570757947414944;  // std dev = 12,605, 654,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=272 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.06831034857418278;  // std dev = 1,343, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.08257459998830649;  // std dev = 7,382, 242,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=159 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.059758834215487854;  // std dev = 2,785, 258,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=8 */
%   | | | else return -0.031198099133476702;  // std dev = 2,511, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05272480298667668;  // std dev = 3,059, 156,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=10 */
%   | | | else return 0.3413898392909474;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.08296141022116077;  // std dev = 0,494, 641,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=272 */
%   else return -0.07877675473109164;  // std dev = 4,41e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.44692860207005114;  // std dev = 0,119, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.45027864676036317;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.12185943673673552;  // std dev = 0,450, 222,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=159 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.022829415873521646;  // std dev = 1,754, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return -0.05915713755890427;  // std dev = 3,279, 262,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=12 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03462424959185741;  // std dev = 3,818, 202,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=17 */
%   | | | else return 0.051231503897079464;  // std dev = 12,652, 661,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=272 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.05826583097242837;  // std dev = 0,456, 243,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=163 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05314830150527406;  // std dev = 2,786, 278,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=8 */
%   | | | else return 0.08475436143204204;  // std dev = 2,339, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return 0.021509131084562268;  // std dev = 0,459, 842,000 (wgt'ed) examples reached here.  /* #neg=553 #pos=289 */
%   else return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.06969315326887349;  // std dev = 0,446, 234,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=163 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04351621088472;  // std dev = 2,778, 228,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=8 */
%   | | | else return 0.03304193117307962;  // std dev = 2,394, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else return 0.031831563123392546;  // std dev = 0,458, 819,000 (wgt'ed) examples reached here.  /* #neg=530 #pos=289 */
%   else return -0.06419184008202625;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */


Results
   AUC ROC   = 0.832297
   AUC PR    = 0.098123
   CLL	      = -0.344431
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 513.145 seconds
Total inference time: 3.837 seconds
AUC ROC: 0.832297


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 10:20:10
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 3.837, 'Precision': [0.119186, 0.5], 'Learning time': 513.145, 'AUC PR': 0.098123, 'CLL': -0.344431, 'AUC ROC': 0.832297}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.6046278083389457;  // std dev = 0,435, 213,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=159 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10629550934493251;  // std dev = 2,778, 225,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=8 */
%   | | | else return 0.1005731775237548;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else return 0.2093032485867494;  // std dev = 0,477, 823,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=289 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */


Results
   AUC ROC   = 0.796491
   AUC PR    = 0.087747
   CLL	      = -0.21658
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 23.13 seconds
Total inference time: 1.382 seconds
AUC ROC: 0.796491


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 10:20:35
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.382, 'Precision': [nan, 0.5], 'Learning time': 23.13, 'AUC PR': 0.087747, 'CLL': -0.21658, 'AUC ROC': 0.796491}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.06956268347823628;  // std dev = 16,034, 1.542,000 (wgt'ed) examples reached here.  /* #neg=1.216 #pos=326 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.06267959846593397;  // std dev = 16,015, 1.529,000 (wgt'ed) examples reached here.  /* #neg=1.203 #pos=326 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.05717067747892043;  // std dev = 15,988, 1.510,000 (wgt'ed) examples reached here.  /* #neg=1.184 #pos=326 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.050681414308776665;  // std dev = 15,975, 1.501,000 (wgt'ed) examples reached here.  /* #neg=1.175 #pos=326 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.038165671496525694;  // std dev = 16,029, 1.539,000 (wgt'ed) examples reached here.  /* #neg=1.213 #pos=326 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.04286539957969425;  // std dev = 15,925, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.142 #pos=326 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.032462729401139326;  // std dev = 15,966, 1.495,000 (wgt'ed) examples reached here.  /* #neg=1.169 #pos=326 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.028974215674582422;  // std dev = 15,951, 1.485,000 (wgt'ed) examples reached here.  /* #neg=1.159 #pos=326 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.013243109463528267;  // std dev = 16,065, 1.565,000 (wgt'ed) examples reached here.  /* #neg=1.239 #pos=326 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.026289361716326114;  // std dev = 15,911, 1.459,000 (wgt'ed) examples reached here.  /* #neg=1.133 #pos=326 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.245992
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 4.548 seconds
Total inference time: 1.456 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.721368
   AUC PR    = 0.476703
   CLL	      = -0.241949
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.442735
   F1        = 0.613744


Total scoring time: 4.174 seconds
Parameter learned model CLL: -0.241949


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 259], 'false': [16.034, 1216, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [16.015, 1203, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.13e-07, 0, 259], 'false': [15.988, 1184, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.975, 1175, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 259], 'false': [16.029, 1213, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.26e-07, 0, 259], 'false': [15.925, 1142, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 259], 'false': [15.966, 1169, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 259], 'false': [15.951, 1159, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [16.065, 1239, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.911, 1133, 326]}]]
[{'': [4.499189523731908e-15, 0.16671797537517752]}, {'': [-4.499189523731908e-15, 0.16775221240451255]}, {'': [6.584179790827183e-16, 0.16928380334195092]}, {'': [-4.1151123692669897e-16, 0.17001767864285017]}, {'': [8.230224738533979e-17, 0.1669556655820318]}, {'': [4.1151123692669897e-16, 0.1727553846267965]}, {'': [3.154919483104692e-16, 0.170509949553138]}, {'': [6.858520615444983e-18, 0.17133580473648263]}, {'': [-1.7146301538612456e-16, 0.1649150241402913]}, {'': [-3.086334276950242e-17, 0.17351496067284095]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.40769848464905856;  // std dev = 7,413, 222,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=122 */
%   | | | else return -0.058847112331317786;  // std dev = 4,388, 253,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=21 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07683558502432707;  // std dev = 4,431, 323,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=21 */
%   | | | else return 0.13649945056342533;  // std dev = 10,812, 582,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=162 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.13429274612301725;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.3682671050973734;  // std dev = 7,145, 208,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=118 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08677551694083056;  // std dev = 3,379, 253,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=12 */
%   | | | else return 0.36777163757836173;  // std dev = 2,110, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09847646643794077;  // std dev = 3,404, 355,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=12 */
%   | | | else return 0.16822164946306004;  // std dev = 2,507, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.08690795858718967;  // std dev = 11,051, 658,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=162 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.34571271340141385;  // std dev = 6,898, 201,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=122 */
%   | | | else return -0.04557774709774708;  // std dev = 4,292, 251,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=21 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06266230597388732;  // std dev = 4,390, 339,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=21 */
%   | | | else return 0.08750734678521878;  // std dev = 10,958, 626,000 (wgt'ed) examples reached here.  /* #neg=464 #pos=162 */
%   | else return -0.12093351867205027;  // std dev = 0,165, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.25069217941030786;  // std dev = 0,491, 209,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=122 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0600382993204392;  // std dev = 4,407, 356,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=21 */
%   | | | else return 0.059916684218314774;  // std dev = 11,728, 806,000 (wgt'ed) examples reached here.  /* #neg=623 #pos=183 */
%   | else return -0.11026226855050604;  // std dev = 0,184, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.10508529739619647;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.2296461015909202;  // std dev = 6,658, 189,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05284458687954056;  // std dev = 4,406, 348,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=21 */
%   | | | else return 0.02820788263881044;  // std dev = 11,916, 891,000 (wgt'ed) examples reached here.  /* #neg=708 #pos=183 */
%   | else return -0.09860519881698011;  // std dev = 0,130, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1525822883220793;  // std dev = 0,485, 206,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=122 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0488299655681929;  // std dev = 4,408, 361,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=21 */
%   | | | else return 0.03559526898950471;  // std dev = 11,810, 852,000 (wgt'ed) examples reached here.  /* #neg=669 #pos=183 */
%   | else return -0.09077325069359267;  // std dev = 0,126, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.1129279554183262;  // std dev = 6,987, 206,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=122 */
%   | | | else return -0.04199992680813656;  // std dev = 4,404, 347,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=21 */
%   | | else return 0.026970459495162753;  // std dev = 0,404, 858,000 (wgt'ed) examples reached here.  /* #neg=675 #pos=183 */
%   | else return -0.08290499659750095;  // std dev = 0,106, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.12726365587951416;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.08516552129967217;  // std dev = 6,853, 196,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=118 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.058789177291952426;  // std dev = 4,285, 260,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=21 */
%   | | | else return 0.022321450759935035;  // std dev = 11,878, 941,000 (wgt'ed) examples reached here.  /* #neg=758 #pos=183 */
%   | else return -0.07533756301503197;  // std dev = 0,102, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.009459740244637443;  // std dev = 1,560, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04872501496695215;  // std dev = 6,988, 204,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=118 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06314752695394305;  // std dev = 3,405, 360,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=12 */
%   | | | else return 0.14694144095428874;  // std dev = 2,551, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06894586884013763;  // std dev = 3,356, 208,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=12 */
%   | | | else return 0.25841556931344517;  // std dev = 2,191, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.0621763457846386;  // std dev = 10,848, 592,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=162 */
%   | | | else return -0.0662290181133831;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.12264643486745165;  // std dev = 1,757, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.05836372274113883;  // std dev = 6,797, 194,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03429667192878303;  // std dev = 4,370, 328,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=21 */
%   | | | else return 0.02249898539493216;  // std dev = 11,730, 829,000 (wgt'ed) examples reached here.  /* #neg=646 #pos=183 */
%   | else return -0.07156761825932531;  // std dev = 0,173, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */


Results
   AUC ROC   = 0.868179
   AUC PR    = 0.539734
   CLL	      = -0.244256
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 109.375 seconds
Total inference time: 2.494 seconds
AUC ROC: 0.868179


Results scoring model
   AUC ROC   = 0.8772
   AUC PR    = 0.539856
   CLL	      = -0.23119
   Precision = 0.184172 at threshold = 0.5
   Recall    = 0.644444
   F1        = 0.286474


Total scoring time: 16.003 seconds
Refined model CLL: -0.23119


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.868179
   AUC PR    = 0.539734
   CLL	      = -0.244256
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 134.10000000000002 seconds
Total inference time: 2.494 seconds
AUC ROC: 0.868179
Total revision time: 134.10000000000002
Best scored revision CLL: -0.23119


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:22:54
{'parameter_1.0': {'F1': 0.604938, 'Inference time': 1.456, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 4.548, 'CLL': -0.245992}, 'F1': 0.305499, 'Inference time': 2.494, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.868179, 'AUC PR': 0.539734, 'Recall': 0.663717, 'Learning time': 134.10000000000002, 'CLL': -0.244256}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5269387440167059;  // std dev = 0,471, 314,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=210 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09773341784166459;  // std dev = 3,387, 272,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=12 */
%   | | | else return 0.23314893509951237;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.08062657510456976;  // std dev = 4,440, 343,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=21 */
%   | | | else return 0.2697682181650206;  // std dev = 13,998, 809,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=333 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4314211328242879;  // std dev = 0,477, 323,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=210 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09802023803927523;  // std dev = 3,407, 343,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=12 */
%   | | | else return 0.14936001364639614;  // std dev = 2,542, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05241294014784543;  // std dev = 4,325, 258,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=21 */
%   | | | else return 0.2346796293356334;  // std dev = 13,985, 807,000 (wgt'ed) examples reached here.  /* #neg=474 #pos=333 */
%   else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6988105324159744;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.30118946758402565;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.39672719908263976;  // std dev = 0,459, 288,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08295033215350829;  // std dev = 3,400, 304,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=12 */
%   | | | else return 0.08675959264441406;  // std dev = 2,620, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.030276200021897823;  // std dev = 4,288, 215,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=21 */
%   | | | else return 0.2302726317038599;  // std dev = 13,592, 748,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=333 */
%   else return -0.11231637819360622;  // std dev = 6,32e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5356468178225257;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.24180122359400888;  // std dev = 1,49e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.32219501500141534;  // std dev = 0,452, 282,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07716474379928949;  // std dev = 3,402, 334,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=12 */
%   | | | else return 0.08865999114266981;  // std dev = 2,596, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.02404056633699954;  // std dev = 4,282, 209,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=21 */
%   | | | else return 0.1641527206341369;  // std dev = 13,892, 792,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=333 */
%   else return -0.10159632948783616;  // std dev = 5,27e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.212974284354528;  // std dev = 0,452, 312,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=210 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06807097411484761;  // std dev = 3,400, 318,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=12 */
%   | | | else return 0.06946293078858351;  // std dev = 2,608, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else return 0.10294961439389949;  // std dev = 0,463, 995,000 (wgt'ed) examples reached here.  /* #neg=641 #pos=354 */
%   else return -0.09269127618926107;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16196574757417884;  // std dev = 0,451, 311,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=210 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06257757272110964;  // std dev = 3,402, 324,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=12 */
%   | | | else return 0.09734483765871675;  // std dev = 2,541, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04577634039089416;  // std dev = 4,309, 241,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=21 */
%   | | | else return 0.13417721891288856;  // std dev = 13,600, 749,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=333 */
%   else return -0.08518475138839679;  // std dev = 2,11e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.34370049551416665;  // std dev = 0,150, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.5627233652742357;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.12151134289016119;  // std dev = 0,459, 296,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05666407954517654;  // std dev = 3,401, 321,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=12 */
%   | | | else return 0.05820305386470532;  // std dev = 2,584, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03536325782470111;  // std dev = 4,300, 226,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=21 */
%   | | | else return 0.07850006083031;  // std dev = 13,917, 796,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=333 */
%   else return -0.0787767547310917;  // std dev = 2,79e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.12117232083684008;  // std dev = 1,368, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.13858889592187837;  // std dev = 7,313, 276,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=201 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.05726919030322436;  // std dev = 3,410, 374,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=12 */
%   | | | else return 0.016612110335833714;  // std dev = 2,639, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06840472010879861;  // std dev = 3,372, 228,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=12 */
%   | | | else return 0.43913022945759506;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else return 0.06545774450028483;  // std dev = 0,494, 787,000 (wgt'ed) examples reached here.  /* #neg=454 #pos=333 */
%   else return -0.07324622576333704;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.06975742632601636;  // std dev = 1,317, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.09318468461516624;  // std dev = 7,476, 281,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=201 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.048141530482969;  // std dev = 3,401, 329,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=12 */
%   | | | else return 0.07918335647132883;  // std dev = 2,525, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0586459980786568;  // std dev = 3,367, 217,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=12 */
%   | | | else return 0.46307351846967454;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return 0.05517819058745569;  // std dev = 0,495, 778,000 (wgt'ed) examples reached here.  /* #neg=445 #pos=333 */
%   else return -0.06842697784420265;  // std dev = 4,15e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07474451605326861;  // std dev = 0,433, 298,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=210 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04636470731255661;  // std dev = 3,405, 344,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=12 */
%   | | | else return 0.08576175169872963;  // std dev = 2,489, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return 0.013950996648415794;  // std dev = 0,453, 1.035,000 (wgt'ed) examples reached here.  /* #neg=681 #pos=354 */
%   else return -0.06419184008202625;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */


Results
   AUC ROC   = 0.836986
   AUC PR    = 0.098646
   CLL	      = -0.369493
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 397.14 seconds
Total inference time: 3.564 seconds
AUC ROC: 0.836986


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 10:29:35
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 3.564, 'Precision': [0.119186, 0.5], 'Learning time': 397.14, 'AUC PR': 0.098646, 'CLL': -0.369493, 'AUC ROC': 0.836986}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5581489350995085;  // std dev = 0,458, 300,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=210 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10686564215996326;  // std dev = 3,403, 343,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=12 */
%   | | | else return 0.13939893509951237;  // std dev = 2,543, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else return 0.21790503266048314;  // std dev = 0,480, 984,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=354 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */


Results
   AUC ROC   = 0.796491
   AUC PR    = 0.087747
   CLL	      = -0.218118
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 23.607 seconds
Total inference time: 1.442 seconds
AUC ROC: 0.796491


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 10:30:00
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.442, 'Precision': [nan, 0.5], 'Learning time': 23.607, 'AUC PR': 0.087747, 'CLL': -0.218118, 'AUC ROC': 0.796491}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 569
Target train neg examples: 23251

Target test facts examples: 8129
Target test pos	 examples: 129
Target test neg examples: 4745

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,06e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.08573514199606493;  // std dev = 7,140, 290,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=66 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.08143119121038686;  // std dev = 7,110, 282,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=66 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.05877967525059182;  // std dev = 7,165, 297,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=66 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.05285056499021695;  // std dev = 7,154, 294,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=66 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.03925866927348729;  // std dev = 7,182, 302,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=66 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.04323984753989813;  // std dev = 7,136, 289,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=66 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,71e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.0275231221635651;  // std dev = 7,178, 301,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=66 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.02177405782439997;  // std dev = 7,185, 303,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=66 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.022719895968713745;  // std dev = 7,165, 297,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=66 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,79e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.043113152885669546;  // std dev = 7,053, 268,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=66 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.254871
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 2.379 seconds
Total inference time: 2.153 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.707965
   AUC PR    = 0.451568
   CLL	      = -0.25327
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.415929
   F1        = 0.5875


Total scoring time: 2.107 seconds
Parameter learned model CLL: -0.25327


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.06e-07, 0, 47], 'false': [7.14, 224, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [7.11, 216, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [7.165, 231, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [7.154, 228, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 47], 'false': [7.182, 236, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [7.136, 223, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.71e-08, 0, 47], 'false': [7.178, 235, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [7.185, 237, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [7.165, 231, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.79e-08, 0, 47], 'false': [7.053, 202, 66]}]]
[{'': [9.070758328852342e-16, 0.17579072532699236]}, {'': [-7.558965274043619e-16, 0.17926663648710084]}, {'': [0.0, 0.17283950617283925]}, {'': [-4.1574309007239905e-16, 0.1740941274468972]}, {'': [1.8897413185109047e-17, 0.1707819832463476]}, {'': [-1.8897413185109047e-17, 0.1762191544641487]}, {'': [4.724353296277262e-17, 0.17119016346397736]}, {'': [-7.558965274043619e-17, 0.17037545338692117]}, {'': [-3.7794826370218094e-17, 0.17283950617283902]}, {'': [1.6535236536970416e-17, 0.18562040543550895]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,06e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.46684458727342437;  // std dev = 0,488, 46,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04507687135210061;  // std dev = 2,328, 62,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=6 */
%   | | | else return 0.059406796734731475;  // std dev = 5,056, 159,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=32 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.04136209805851122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.39136209805851074;  // std dev = 3,286, 45,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07051327564278215;  // std dev = 2,146, 64,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=5 */
%   | | | else return 0.06472122748698776;  // std dev = 5,092, 158,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=33 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.0344505716160084;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.44919148598145947;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.050941326870077415;  // std dev = 1,905, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | | else return 0.07883845695382415;  // std dev = 0,873, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return 0.12846804789355654;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.09685334356194011;  // std dev = 1,689, 68,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.11786734268214763;  // std dev = 4,423, 98,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.11190166998502522;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17173957303260967;  // std dev = 3,482, 49,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=27 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0639049052901014;  // std dev = 2,334, 83,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=6 */
%   | | | else return 0.06805727499928893;  // std dev = 4,923, 140,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | else return -0.10506757962476578;  // std dev = 0,033, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11797642415122633;  // std dev = 0,497, 53,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=28 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.032067883478253234;  // std dev = 2,303, 62,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=6 */
%   | | | else return 0.0618992065661541;  // std dev = 4,916, 137,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=32 */
%   | else return -0.10014159073177334;  // std dev = 0,033, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0997333324279372;  // std dev = 0,496, 52,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04761890856138233;  // std dev = 2,327, 78,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=6 */
%   | | | else return 0.059420154358188565;  // std dev = 4,890, 134,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=32 */
%   | else return -0.0868653061037334;  // std dev = 0,025, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,71e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.08338520779152765;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.23629159845084155;  // std dev = 2,796, 38,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=27 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03567877158195417;  // std dev = 2,320, 71,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=6 */
%   | | | else return 0.05233518356241695;  // std dev = 4,888, 132,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=32 */
%   | else return -0.08180708206774065;  // std dev = 0,034, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return -0.018632686503569727;  // std dev = 3,714, 57,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=28 */
%   | | | else return -0.054302134609144195;  // std dev = 2,097, 47,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03132757811134365;  // std dev = 2,319, 71,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=6 */
%   | | | else return 0.040900714691930996;  // std dev = 4,493, 107,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=27 */
%   | else return -0.07579175953241968;  // std dev = 0,029, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.04202313999774639;  // std dev = 3,520, 50,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | | | else return -0.03526967412627719;  // std dev = 2,330, 77,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=6 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0391882844771133;  // std dev = 2,091, 42,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | | else return 0.07836768562533661;  // std dev = 4,358, 91,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | else return -0.06936300026354061;  // std dev = 0,024, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,79e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.061971878185589656;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07458368032269976;  // std dev = 3,230, 44,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=27 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05751895229933174;  // std dev = 2,117, 55,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
%   | | | else return 0.008739531463366776;  // std dev = 5,053, 168,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=33 */
%   | else return -0.06511420914190898;  // std dev = 0,019, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.826611
   AUC PR    = 0.521091
   CLL	      = -0.246678
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 30.119 seconds
Total inference time: 3.255 seconds
AUC ROC: 0.826611


Results scoring model
   AUC ROC   = 0.868653
   AUC PR    = 0.513072
   CLL	      = -0.240192
   Precision = 0.16087 at threshold = 0.5
   Recall    = 0.654867
   F1        = 0.25829


Total scoring time: 5.782 seconds
Refined model CLL: -0.240192


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826611
   AUC PR    = 0.521091
   CLL	      = -0.246678
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 40.387 seconds
Total inference time: 3.255 seconds
AUC ROC: 0.826611
Total revision time: 40.387
Best scored revision CLL: -0.240192


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:30:47
{'parameter_0.2': {'F1': 0.597826, 'Inference time': 2.153, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 2.379, 'CLL': -0.254871}, 'F1': 0.422018, 'Inference time': 3.255, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826611, 'AUC PR': 0.521091, 'Recall': 0.534884, 'Learning time': 40.387, 'CLL': -0.246678}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.5516973221962868;  // std dev = 0,461, 62,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=43 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.0942320172814401;  // std dev = 1,690, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.030739953789376617;  // std dev = 2,108, 45,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | | else return 0.2899671169176952;  // std dev = 5,691, 132,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=57 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.507344584337382;  // std dev = 0,443, 62,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.09828577455090831;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.06772518424230227;  // std dev = 2,134, 74,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0245137835800988;  // std dev = 2,105, 44,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | | | else return 0.28627919482186065;  // std dev = 5,511, 122,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=57 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3717676224127921;  // std dev = 0,463, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.26194466703812835;  // std dev = 1,299, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.07317692860361476;  // std dev = 1,690, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03109056061455502;  // std dev = 2,116, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return 0.2251044065199994;  // std dev = 5,587, 126,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=57 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.17467480554141135;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2961813860128933;  // std dev = 0,456, 61,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.043120903970910056;  // std dev = 1,491, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.0708000637384466;  // std dev = 1,695, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.018025488794172605;  // std dev = 2,105, 44,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | | | else return 0.1626111102521902;  // std dev = 5,691, 132,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=57 */
%   else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17112887842705007;  // std dev = 0,474, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.05186857792235966;  // std dev = 0,794, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.04856931421918257;  // std dev = 2,092, 75,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.01850358854843969;  // std dev = 2,108, 45,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | | else return 0.10770209606816461;  // std dev = 5,799, 139,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=57 */
%   else return -0.092691276189261;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.14602293462782517;  // std dev = 0,469, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.1615485603761687;  // std dev = 1,190, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07093771654666561;  // std dev = 1,682, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.02768728307759992;  // std dev = 2,252, 64,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=6 */
%   | | | else return 0.05699036520573827;  // std dev = 5,933, 149,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=57 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17087139907928484;  // std dev = 0,446, 62,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04565127149777737;  // std dev = 2,052, 71,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=5 */
%   | | | else return 0.09941323761742035;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.010527822358673816;  // std dev = 2,087, 45,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | | else return 0.054907868988387114;  // std dev = 5,882, 145,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=57 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.18333736201164444;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08025012168674218;  // std dev = 3,695, 63,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=43 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return 0.05282057669286682;  // std dev = 1,486, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.048433547424343075;  // std dev = 1,685, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.18802124666474074;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.035414782691657744;  // std dev = 1,658, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else return 0.1166210730367737;  // std dev = 0,499, 122,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=57 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.048556112013310095;  // std dev = 3,861, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | | | else return -0.010561122566621024;  // std dev = 2,007, 50,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | else return 0.2272332607307422;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.04966928830108982;  // std dev = 0,470, 165,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=62 */
%   else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.04120284451358491;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09611287668240928;  // std dev = 0,445, 59,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=43 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.04605721302753141;  // std dev = 1,486, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.048171010875184335;  // std dev = 1,674, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.002477513493130202;  // std dev = 2,052, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return 0.029791945100641492;  // std dev = 5,754, 136,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=57 */
%   else return -0.06419184008202622;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */


Results
   AUC ROC   = 0.71738
   AUC PR    = 0.07671
   CLL	      = -0.387081
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 150.111 seconds
Total inference time: 3.977 seconds
AUC ROC: 0.71738


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 10:33:21
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 3.977, 'Precision': [0.167742, 0.5], 'Learning time': 150.111, 'AUC PR': 0.07671, 'CLL': -0.387081, 'AUC ROC': 0.71738}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5612739350995126;  // std dev = 0,457, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.09185106490048772;  // std dev = 1,688, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03768439823382107;  // std dev = 2,116, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return 0.2652917922423706;  // std dev = 5,813, 140,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=57 */
%   else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */


Results
   AUC ROC   = 0.717557
   AUC PR    = 0.07672
   CLL	      = -0.218512
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.768 seconds
Total inference time: 1.871 seconds
AUC ROC: 0.717557


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 10:33:30
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.871, 'Precision': [nan, 0.5], 'Learning time': 6.768, 'AUC PR': 0.07672, 'CLL': -0.218512, 'AUC ROC': 0.717557}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.07037304375825335;  // std dev = 9,923, 589,000 (wgt'ed) examples reached here.  /* #neg=464 #pos=125 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.06713473249200358;  // std dev = 9,888, 574,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=125 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.053882851030114906;  // std dev = 9,916, 586,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=125 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,60e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.04616541568650974;  // std dev = 9,919, 587,000 (wgt'ed) examples reached here.  /* #neg=462 #pos=125 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.04185006472530606;  // std dev = 9,905, 581,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=125 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.036888893384430806;  // std dev = 9,898, 578,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=125 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.029539780070050637;  // std dev = 9,910, 583,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=125 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 5,58e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.02214455981236778;  // std dev = 9,928, 591,000 (wgt'ed) examples reached here.  /* #neg=466 #pos=125 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.02236226209997863;  // std dev = 9,905, 581,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=125 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.02186214553324081;  // std dev = 9,886, 573,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=125 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.242831
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 2.8 seconds
Total inference time: 1.899 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.72467
   AUC PR    = 0.483577
   CLL	      = -0.240025
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.449339
   F1        = 0.620061


Total scoring time: 3.154 seconds
Parameter learned model CLL: -0.240025


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.3e-07, 0, 102], 'false': [9.923, 464, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.888, 449, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.3e-07, 0, 102], 'false': [9.916, 461, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.6e-07, 0, 102], 'false': [9.919, 462, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.905, 456, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.898, 453, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 102], 'false': [9.91, 458, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.58e-08, 0, 102], 'false': [9.928, 466, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.905, 456, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.66e-08, 0, 102], 'false': [9.886, 448, 125]}]]
[{'': [1.8111873656630004e-15, 0.16718503636274692]}, {'': [-2.7864421010200007e-16, 0.17034624676758917]}, {'': [1.8111873656630004e-15, 0.16780917657748162]}, {'': [6.617799989922502e-16, 0.16760068375274206]}, {'': [-2.612289469706251e-16, 0.16885836930213818]}, {'': [-4.353815782843751e-17, 0.16949330108595279]}, {'': [2.0898315757650005e-16, 0.1684373427795596]}, {'': [3.047671047990626e-17, 0.16677116705460976]}, {'': [-1.2190684191962504e-16, 0.16885836930214373]}, {'': [4.353815782843751e-17, 0.17056062668847222]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.43362063321272076;  // std dev = 5,089, 106,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=61 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09720820775763052;  // std dev = 2,186, 112,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return -0.011416282291792127;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return -0.11060106490048766;  // std dev = 1,969, 128,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.1043027812533583;  // std dev = 6,015, 195,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=48 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.08635728429291653;  // std dev = 1,211, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.44716365691476034;  // std dev = 4,615, 94,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08497023110552733;  // std dev = 2,185, 110,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=5 */
%   | | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then return -0.08364574773420824;  // std dev = 0,212, 148,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=7 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07574116183991898;  // std dev = 6,076, 208,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=48 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.2646581453974927;  // std dev = 1,032, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3136756005532763;  // std dev = 4,924, 103,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=61 */
%   | | else if ( author(G, E), title(G, A) )
%   | | | then return 0.1605915420677169;  // std dev = 1,497, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.07927935419221266;  // std dev = 1,841, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return 0.03599829005060126;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.09039652966332501;  // std dev = 1,970, 136,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.07359503957988613;  // std dev = 6,045, 201,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=48 */
%   | | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,60e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.386537572674871;  // std dev = 0,847, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23644076705176814;  // std dev = 5,004, 104,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=61 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06614847084238759;  // std dev = 2,573, 141,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=7 */
%   | | | else return 0.052877625043013646;  // std dev = 6,451, 264,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=55 */
%   | else return -0.11303004506344431;  // std dev = 0,257, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.09350894016445663;  // std dev = 1,245, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2054184924662119;  // std dev = 4,846, 100,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=61 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.048993815591629186;  // std dev = 2,550, 120,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=7 */
%   | | | else return 0.03372217373410766;  // std dev = 6,509, 276,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=55 */
%   | else return -0.10059954427829892;  // std dev = 0,173, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1541383169489755;  // std dev = 0,487, 104,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=63 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05158218666305549;  // std dev = 2,570, 130,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=7 */
%   | | | else return 0.039938576836643355;  // std dev = 6,467, 259,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=55 */
%   | else return -0.10466342491866022;  // std dev = 0,338, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.11042038900819574;  // std dev = 1,248, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.05860702705628327;  // std dev = 5,212, 110,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=61 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05895483255089747;  // std dev = 2,392, 96,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=7 */
%   | | | else return 0.008840902536845403;  // std dev = 6,618, 328,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=55 */
%   | else return -0.09610054332945131;  // std dev = 0,328, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 5,58e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.12163364661400589;  // std dev = 1,277, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07783728310338311;  // std dev = 5,000, 104,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=61 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.054868860901442364;  // std dev = 2,410, 96,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=7 */
%   | | | else return 0.009907740718999945;  // std dev = 6,607, 325,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=55 */
%   | else return -0.08030129581854108;  // std dev = 0,196, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.065133232043737;  // std dev = 0,485, 109,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=63 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05475525002692241;  // std dev = 2,575, 152,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=7 */
%   | | | else return -0.0032769587574683562;  // std dev = 6,622, 319,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=55 */
%   | else return -0.08629953794387327;  // std dev = 0,315, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.04538080726066577;  // std dev = 0,493, 108,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=63 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.049500171038527246;  // std dev = 2,408, 99,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=7 */
%   | | | else return 0.013322872733145627;  // std dev = 6,585, 324,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=55 */
%   | else return -0.06390730434363086;  // std dev = 0,041, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */


Results
   AUC ROC   = 0.825603
   AUC PR    = 0.521043
   CLL	      = -0.213667
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 42.136 seconds
Total inference time: 3.418 seconds
AUC ROC: 0.825603


Results scoring model
   AUC ROC   = 0.90145
   AUC PR    = 0.561598
   CLL	      = -0.214672
   Precision = 0.183673 at threshold = 0.5
   Recall    = 0.713656
   F1        = 0.292155


Total scoring time: 9.389 seconds
Refined model CLL: -0.214672


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.825603
   AUC PR    = 0.521043
   CLL	      = -0.213667
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 57.479 seconds
Total inference time: 3.418 seconds
AUC ROC: 0.825603
Total revision time: 57.479
Best scored revision CLL: -0.214672


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:34:34
{'F1': 0.422018, 'Inference time': 3.418, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.825603, 'AUC PR': 0.521043, 'parameter_0.4': {'F1': 0.597826, 'Inference time': 1.899, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 2.8, 'CLL': -0.242831}, 'Recall': 0.534884, 'Learning time': 57.479, 'CLL': -0.213667}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5434636204141954;  // std dev = 0,464, 143,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=98 */
%   | else return 0.12524295219352566;  // std dev = 0,442, 468,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=125 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4454394501425641;  // std dev = 0,468, 153,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=102 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11367332391699077;  // std dev = 2,395, 136,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=6 */
%   | | | else return 0.008875695690852179;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.16907883511837102;  // std dev = 0,469, 361,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=118 */
%   else return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6392975591564373;  // std dev = 0,061, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.307656795954166;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.38286410503656465;  // std dev = 0,461, 142,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=98 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.0880837358640041;  // std dev = 0,229, 126,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=7 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.09724281580106933;  // std dev = 2,532, 83,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=7 */
%   | | | else return 0.22352932385243918;  // std dev = 8,126, 274,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=111 */
%   else return -0.11231637819360626;  // std dev = 4,94e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.33423172072098783;  // std dev = 0,436, 140,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=102 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0869882569483649;  // std dev = 2,393, 131,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=6 */
%   | | | else return -0.004690639300943988;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10090709002661558;  // std dev = 2,160, 75,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=5 */
%   | | | else return 0.49909290997338446;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2147219576081567;  // std dev = 0,495, 257,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=111 */
%   else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4020699734330401;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.31334610980840644;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.1625635400147742;  // std dev = 0,679, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2696368329093216;  // std dev = 4,962, 130,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=97 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return 0.14963876174990343;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.08979707714952292;  // std dev = 1,955, 118,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=4 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.07913204761249093;  // std dev = 2,476, 91,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=7 */
%   | | | else return 0.150700688000404;  // std dev = 8,116, 273,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=111 */
%   else return -0.09269127618926105;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.18095912342837078;  // std dev = 0,435, 142,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=102 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.026494844258720927;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.0818479089063294;  // std dev = 1,958, 122,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.0530201947995793;  // std dev = 0,284, 75,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=7 */
%   | | else return 0.1316678189411287;  // std dev = 0,493, 266,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=111 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.0866740143552366;  // std dev = 0,456, 153,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=102 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.18993770889740683;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.07397708332621582;  // std dev = 1,958, 124,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07655177237777173;  // std dev = 2,167, 82,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=5 */
%   | | | else return 0.4415302296505565;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.09040565848799773;  // std dev = 0,491, 275,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=111 */
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07955946840756276;  // std dev = 0,451, 150,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=102 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06969848540531572;  // std dev = 2,358, 153,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=6 */
%   | | | else return 0.1312454880556403;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04875730495490962;  // std dev = 2,410, 83,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=7 */
%   | | | else return 0.06917507021030678;  // std dev = 8,146, 276,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=111 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.2417749784182673;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.32067412876799095;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.16273825220052898;  // std dev = 0,407, 124,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=98 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.059922045010304015;  // std dev = 2,356, 138,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=6 */
%   | | | else return 0.03347541778109354;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04781693493405195;  // std dev = 2,419, 88,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=7 */
%   | | | else return 0.07351656946584682;  // std dev = 8,010, 263,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=111 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.03629352356708795;  // std dev = 0,441, 149,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=102 */
%   | | else if ( haswordvenue(G, D), haswordvenue(H, C) )
%   | | | then return -0.052757474594563154;  // std dev = 2,349, 140,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=6 */
%   | | | else return 0.10281811386417845;  // std dev = 0,883, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), title(K, A) )
%   | | | then return 0.15447715088613792;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.07368056956276711;  // std dev = 1,791, 82,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=4 */
%   | | else if ( haswordvenue(L, C) )
%   | | | then return 0.04544318063455008;  // std dev = 7,903, 258,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=106 */
%   | | | else return 0.34887618174196877;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.717275
   AUC PR    = 0.076707
   CLL	      = -0.3647
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 219.112 seconds
Total inference time: 3.524 seconds
AUC ROC: 0.717275


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 10:38:17
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 3.524, 'Precision': [0.167742, 0.5], 'Learning time': 219.112, 'AUC PR': 0.076707, 'CLL': -0.3647, 'AUC ROC': 0.717275}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.6119950889456642;  // std dev = 0,431, 130,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=98 */
%   | else if ( haswordvenue(G, C) )
%   | | then if ( author(H, D), title(H, A) )
%   | | | then return 0.04564893509951222;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.11482403787346067;  // std dev = 1,395, 74,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=2 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), title(K, B) )
%   | | then return 0.00814893509951222;  // std dev = 0,357, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( haswordvenue(L, I) )
%   | | | then return -0.11912379217321492;  // std dev = 1,712, 132,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=3 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, M), haswordtitle(B, M) )
%   | | then return 0.2489940055220438;  // std dev = 0,488, 284,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=111 */
%   | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.717125
   AUC PR    = 0.076702
   CLL	      = -0.214362
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 16.866 seconds
Total inference time: 1.966 seconds
AUC ROC: 0.717125


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 10:38:36
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.966, 'Precision': [nan, 0.5], 'Learning time': 16.866, 'AUC PR': 0.076702, 'CLL': -0.214362, 'AUC ROC': 0.717125}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,39e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.0635837177082035;  // std dev = 12,255, 920,000 (wgt'ed) examples reached here.  /* #neg=731 #pos=189 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.0779421377920572;  // std dev = 12,082, 830,000 (wgt'ed) examples reached here.  /* #neg=641 #pos=189 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,33e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.050266661639428195;  // std dev = 12,217, 899,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=189 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,62e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.06736311373361753;  // std dev = 12,031, 807,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=189 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,83e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.04208454794692941;  // std dev = 12,153, 865,000 (wgt'ed) examples reached here.  /* #neg=676 #pos=189 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.03363657465620376;  // std dev = 12,171, 874,000 (wgt'ed) examples reached here.  /* #neg=685 #pos=189 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,49e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.01752673800095718;  // std dev = 12,256, 921,000 (wgt'ed) examples reached here.  /* #neg=732 #pos=189 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.034360720036734994;  // std dev = 12,105, 841,000 (wgt'ed) examples reached here.  /* #neg=652 #pos=189 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.015213310817984027;  // std dev = 12,212, 896,000 (wgt'ed) examples reached here.  /* #neg=707 #pos=189 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.01737730972992773;  // std dev = 12,177, 877,000 (wgt'ed) examples reached here.  /* #neg=688 #pos=189 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.244139
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 3.107 seconds
Total inference time: 1.814 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.722874
   AUC PR    = 0.479983
   CLL	      = -0.2415
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.445748
   F1        = 0.616633


Total scoring time: 3.273 seconds
Parameter learned model CLL: -0.2415


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.39e-07, 0, 152], 'false': [12.255, 731, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.082, 641, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.33e-07, 0, 152], 'false': [12.217, 710, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.62e-07, 0, 152], 'false': [12.031, 618, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.83e-07, 0, 152], 'false': [12.153, 676, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.171, 685, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.49e-07, 0, 152], 'false': [12.256, 732, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.105, 652, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.212, 707, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.66e-08, 0, 152], 'false': [12.177, 688, 189]}]]
[{'': [5.796532844358712e-15, 0.16323133270321533]}, {'': [-2.4308040960213954e-15, 0.17585861518361617]}, {'': [1.8698493046318425e-15, 0.16603542930533044]}, {'': [1.402386978473882e-15, 0.17935075524108401]}, {'': [5.258951169277057e-16, 0.17075612282400549]}, {'': [-1.8698493046318425e-16, 0.16948431420807283]}, {'': [4.0902953538821556e-16, 0.1630998737387213]}, {'': [-3.0385051200267443e-16, 0.17422778216862025]}, {'': [-3.7981314000334304e-17, 0.16644287109374267]}, {'': [2.921639538487254e-17, 0.1690639671628595]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,39e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.4581489350995101;  // std dev = 5,797, 140,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=84 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09916813807121937;  // std dev = 2,589, 164,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=7 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10883219697595975;  // std dev = 2,602, 212,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=7 */
%   | | | else return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.11671591329265897;  // std dev = 7,845, 321,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=83 */
%   | | | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3857305456900965;  // std dev = 0,492, 147,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=87 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.10293900189814824;  // std dev = 1,754, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.09399588388479692;  // std dev = 2,167, 129,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.0784337246542843;  // std dev = 0,219, 195,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=10 */
%   | | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | | then return 0.09036271829316411;  // std dev = 7,906, 336,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=83 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,33e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.05619713580851916;  // std dev = 1,587, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.2905904677595035;  // std dev = 6,026, 148,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=84 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0723470274971918;  // std dev = 3,063, 200,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=10 */
%   | | | else return 0.05317491659895012;  // std dev = 8,434, 440,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=92 */
%   | else return -0.11996649390843868;  // std dev = 0,114, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,62e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.008392633155371235;  // std dev = 1,549, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2454187414718324;  // std dev = 5,904, 144,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=84 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06181329938494021;  // std dev = 3,059, 189,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=10 */
%   | | | else return 0.04702151906369489;  // std dev = 8,430, 436,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=92 */
%   | else return -0.11053339147922413;  // std dev = 0,108, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,83e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.19241129828041964;  // std dev = 6,022, 150,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   | | | else return -0.05211023565633431;  // std dev = 2,827, 110,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=9 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05678112078777571;  // std dev = 3,058, 197,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=10 */
%   | | | else return 0.10468136229780399;  // std dev = 7,686, 288,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=83 */
%   | else return -0.0972607741163477;  // std dev = 0,099, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.21208014701831263;  // std dev = 0,475, 135,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=87 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07547752379545992;  // std dev = 2,875, 173,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=9 */
%   | | | else return 0.02414389665992593;  // std dev = 8,470, 495,000 (wgt'ed) examples reached here.  /* #neg=402 #pos=93 */
%   | else return -0.08983349761376251;  // std dev = 0,107, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,49e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.06735795578287249;  // std dev = 1,535, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.11499915566923437;  // std dev = 5,711, 138,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=84 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05640531900096747;  // std dev = 3,064, 207,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=10 */
%   | | | else return 0.040475970449192746;  // std dev = 8,320, 417,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=92 */
%   | else return -0.08235328639088464;  // std dev = 0,085, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06469315788714367;  // std dev = 0,491, 151,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.055241878772324046;  // std dev = 3,072, 225,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=10 */
%   | | | else return 0.019265467058772495;  // std dev = 8,398, 451,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=92 */
%   | else return -0.07694636153678983;  // std dev = 0,075, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08395257001769121;  // std dev = 0,481, 143,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=87 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.047288375449145846;  // std dev = 3,067, 212,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=10 */
%   | | | else return 0.03165617920111721;  // std dev = 8,297, 425,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=92 */
%   | else return -0.07192325961933561;  // std dev = 0,089, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.03853765534971346;  // std dev = 5,943, 149,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=87 */
%   | | | else return -0.06680556950142406;  // std dev = 2,856, 148,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=9 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04091881121298847;  // std dev = 3,064, 200,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=10 */
%   | | | else return 0.06157616335799392;  // std dev = 7,728, 296,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=83 */
%   | else return -0.06768788465160397;  // std dev = 0,087, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */


Results
   AUC ROC   = 0.826677
   AUC PR    = 0.521087
   CLL	      = -0.234877
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 59.414 seconds
Total inference time: 2.803 seconds
AUC ROC: 0.826677


Results scoring model
   AUC ROC   = 0.893218
   AUC PR    = 0.551831
   CLL	      = -0.227416
   Precision = 0.176383 at threshold = 0.5
   Recall    = 0.692082
   F1        = 0.28112


Total scoring time: 10.373 seconds
Refined model CLL: -0.227416


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826677
   AUC PR    = 0.521087
   CLL	      = -0.234877
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 76.167 seconds
Total inference time: 2.803 seconds
AUC ROC: 0.826677
Total revision time: 76.167
Best scored revision CLL: -0.227416


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:39:58
{'F1': 0.422018, 'Inference time': 2.803, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826677, 'AUC PR': 0.521087, 'parameter_0.6': {'F1': 0.597826, 'Inference time': 1.814, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 3.107, 'CLL': -0.244139}, 'Recall': 0.534884, 'Learning time': 76.167, 'CLL': -0.234877}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.5472681060839653;  // std dev = 6,430, 193,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=133 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0787880018374246;  // std dev = 2,561, 111,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=7 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H), haswordvenue(J, C) )
%   | | | then return -0.1064975295469526;  // std dev = 2,599, 198,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=7 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.2931371147685388;  // std dev = 0,496, 423,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=184 */
%   else return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7955546283360488;  // std dev = 0,020, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.22222759318352953;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.48545568103880293;  // std dev = 0,455, 188,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=133 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09861703687529837;  // std dev = 2,611, 215,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=7 */
%   | | | else return 0.13223342219805703;  // std dev = 1,403, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.19656080508158236;  // std dev = 0,475, 527,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=193 */
%   else return -0.12544463852839147;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.33950392246745364;  // std dev = 0,468, 212,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=138 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08539505975101859;  // std dev = 2,604, 205,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=7 */
%   | | | else return 0.20249200410613338;  // std dev = 1,282, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0990246333592299;  // std dev = 2,873, 150,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=9 */
%   | | | else return 0.24076567087043535;  // std dev = 10,030, 406,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=184 */
%   else return -0.11231637819360625;  // std dev = 5,58e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.555861635345505;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.24315570155296704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.31328977816729936;  // std dev = 0,455, 188,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=133 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.03011457948666153;  // std dev = 1,610, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return -0.08070937148132018;  // std dev = 2,491, 184,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=7 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.07308377428901579;  // std dev = 2,852, 124,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=9 */
%   | | | else return 0.1826039817900067;  // std dev = 10,168, 420,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=184 */
%   else return -0.10159632948783616;  // std dev = 5,27e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.019913780002025292;  // std dev = 1,111, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.263761853187916;  // std dev = 5,936, 181,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=133 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08420660206168579;  // std dev = 2,579, 136,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=7 */
%   | | | else return 0.31529551353385776;  // std dev = 0,980, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07123878690407867;  // std dev = 2,598, 209,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=7 */
%   | | | else return 0.1949250624878027;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.12930935945794916;  // std dev = 0,494, 437,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=184 */
%   else return -0.09269127618926107;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4131433051834851;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20445207645883628;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.14514235906659012;  // std dev = 0,466, 195,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=133 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06646952706875142;  // std dev = 2,603, 216,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=7 */
%   | | | else return 0.24916921521403612;  // std dev = 1,181, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.05076995703053202;  // std dev = 2,811, 115,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=9 */
%   | | | else return 0.1018900854040981;  // std dev = 10,321, 437,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=184 */
%   else return -0.08518475138839682;  // std dev = 4,59e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.31780807535092676;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1731951697200337;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.1274419752345765;  // std dev = 0,458, 190,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=133 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05705618816768387;  // std dev = 2,601, 190,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=7 */
%   | | | else return 0.30455134961787333;  // std dev = 1,027, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.06032204786203732;  // std dev = 2,837, 144,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=9 */
%   | | | else return 0.12412399662866609;  // std dev = 9,914, 395,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=184 */
%   else return -0.07877675473109164;  // std dev = 4,71e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1290769502441782;  // std dev = 0,425, 193,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=138 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.051520387021548306;  // std dev = 2,597, 189,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=7 */
%   | | | else return 0.13346654967992735;  // std dev = 1,169, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0433642965231157;  // std dev = 2,819, 124,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=9 */
%   | | | else return 0.11406883047548899;  // std dev = 9,742, 380,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=184 */
%   else return -0.07324622576333707;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.12186957249576176;  // std dev = 0,807, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.04366458717138189;  // std dev = 0,462, 198,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=133 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.04393381514086364;  // std dev = 2,588, 178,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=7 */
%   | | | else return 0.2396331077304163;  // std dev = 0,921, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.029261534093377506;  // std dev = 2,806, 109,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=9 */
%   | | | else return 0.03380783005659272;  // std dev = 10,233, 427,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=184 */
%   else return -0.06842697784420265;  // std dev = 4,15e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.21125676965856086;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1731302198376839;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07463602760357936;  // std dev = 0,449, 185,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=133 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.010679356586435384;  // std dev = 1,791, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return -0.05106143350552465;  // std dev = 2,270, 182,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=7 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03471308202296861;  // std dev = 2,830, 117,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=9 */
%   | | | else return 0.04575337028114614;  // std dev = 10,051, 408,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=184 */
%   else return -0.06419184008202626;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 0.718177
   AUC PR    = 0.076752
   CLL	      = -0.39442
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 654.274 seconds
Total inference time: 4.714 seconds
AUC ROC: 0.718177


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 10:50:57
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 4.714, 'Precision': [0.167742, 0.5], 'Learning time': 654.274, 'AUC PR': 0.076752, 'CLL': -0.39442, 'AUC ROC': 0.718177}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.6011656948760458;  // std dev = 0,437, 179,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=133 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.14386322081379804;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.09234611440543816;  // std dev = 2,180, 101,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=5 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.09159980861908075;  // std dev = 3,082, 199,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=10 */
%   | | | else return 0.28211206874006106;  // std dev = 10,295, 434,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=184 */
%   else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */


Results
   AUC ROC   = 0.717785
   AUC PR    = 0.07673
   CLL	      = -0.218258
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 22.716 seconds
Total inference time: 2.146 seconds
AUC ROC: 0.717785


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 10:51:23
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.146, 'Precision': [nan, 0.5], 'Learning time': 22.716, 'AUC PR': 0.07673, 'CLL': -0.218258, 'AUC ROC': 0.717785}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.0656803158526455;  // std dev = 14,019, 1.195,000 (wgt'ed) examples reached here.  /* #neg=947 #pos=248 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.07562381226158965;  // std dev = 13,858, 1.099,000 (wgt'ed) examples reached here.  /* #neg=851 #pos=248 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,42e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.057606721335735016;  // std dev = 13,930, 1.140,000 (wgt'ed) examples reached here.  /* #neg=892 #pos=248 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583102;  // std dev = 2,38e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.04269686969225096;  // std dev = 13,992, 1.178,000 (wgt'ed) examples reached here.  /* #neg=930 #pos=248 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014917;  // std dev = 3,91e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.04501044290317907;  // std dev = 13,918, 1.133,000 (wgt'ed) examples reached here.  /* #neg=885 #pos=248 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,53e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.025370982999298266;  // std dev = 14,034, 1.205,000 (wgt'ed) examples reached here.  /* #neg=957 #pos=248 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,04e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.02720322498172069;  // std dev = 13,985, 1.173,000 (wgt'ed) examples reached here.  /* #neg=925 #pos=248 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527783;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.031125195155310564;  // std dev = 13,913, 1.130,000 (wgt'ed) examples reached here.  /* #neg=882 #pos=248 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.02138470258315863;  // std dev = 13,957, 1.156,000 (wgt'ed) examples reached here.  /* #neg=908 #pos=248 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,19e-08, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.010681940716015541;  // std dev = 14,022, 1.197,000 (wgt'ed) examples reached here.  /* #neg=949 #pos=248 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.241049
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 4.931 seconds
Total inference time: 1.862 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.727473
   AUC PR    = 0.488898
   CLL	      = -0.238059
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.454945
   F1        = 0.625378


Total scoring time: 4.855 seconds
Parameter learned model CLL: -0.238059


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 207], 'false': [14.019, 947, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 207], 'false': [13.858, 851, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.42e-07, 0, 207], 'false': [13.93, 892, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.38e-07, 0, 207], 'false': [13.992, 930, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.91e-07, 0, 207], 'false': [13.918, 885, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.53e-07, 0, 207], 'false': [14.034, 957, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 207], 'false': [13.985, 925, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 207], 'false': [13.913, 882, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 207], 'false': [13.957, 908, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.19e-08, 0, 207], 'false': [14.022, 949, 248]}]]
[{'': [5.6294207084375085e-15, 0.1644621067558354]}, {'': [-3.775830962976378e-15, 0.17473739465359747]}, {'': [1.990892689569363e-15, 0.17021852877807744]}, {'': [2.7460588821646383e-16, 0.16620498614957444]}, {'': [7.380033245817466e-16, 0.17097599184848852]}, {'': [3.089316242435218e-16, 0.16345173120297343]}, {'': [4.4623456835175375e-16, 0.1667237190291084]}, {'': [-5.577932104396922e-17, 0.1713023729344555]}, {'': [-1.244307930980852e-16, 0.16850851881563297]}, {'': [4.0761811532131354e-17, 0.1642591580594514]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.5108435458779528;  // std dev = 6,153, 167,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=109 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.1016211798430165;  // std dev = 2,592, 174,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=7 */
%   | | | else return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.11407328712271049;  // std dev = 2,789, 288,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=8 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.11438476276390867;  // std dev = 9,168, 441,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=113 */
%   | | | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.10944794019839156;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.37319356525256747;  // std dev = 6,692, 185,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=109 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08609098966656291;  // std dev = 3,323, 270,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=12 */
%   | | | else return 0.049974288017727964;  // std dev = 9,857, 618,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=123 */
%   | else return -0.12869317742772227;  // std dev = 0,090, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,42e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.28340635306520434;  // std dev = 0,495, 200,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=113 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07594273327402636;  // std dev = 3,327, 263,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=12 */
%   | | | else return 0.040625095722691344;  // std dev = 9,875, 626,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=123 */
%   | else return -0.11509610857097827;  // std dev = 0,077, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583102;  // std dev = 2,38e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.06701993317940523;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.21783576208749655;  // std dev = 6,888, 193,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=109 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06802180083031865;  // std dev = 3,326, 268,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=12 */
%   | | | else return 0.040286014766966444;  // std dev = 9,842, 610,000 (wgt'ed) examples reached here.  /* #neg=487 #pos=123 */
%   | else return -0.1037405328807057;  // std dev = 0,059, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014917;  // std dev = 3,91e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.05456020703232926;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.18824079517861525;  // std dev = 6,717, 186,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=109 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09050430105558037;  // std dev = 3,045, 184,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=10 */
%   | | | else return 0.03875810508324197;  // std dev = 9,854, 668,000 (wgt'ed) examples reached here.  /* #neg=543 #pos=125 */
%   | else return -0.09551524291500496;  // std dev = 0,072, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,53e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.04136302827069792;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.14877051566000352;  // std dev = 6,666, 184,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=109 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06732331129719038;  // std dev = 3,333, 281,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=12 */
%   | | | else return 0.04747193321415858;  // std dev = 9,718, 572,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=123 */
%   | else return -0.08839628384352233;  // std dev = 0,100, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,04e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.0110314382479389;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.1682271189949557;  // std dev = 6,187, 168,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=109 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08409715235090288;  // std dev = 3,044, 183,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=10 */
%   | | | else return 0.029736231772909558;  // std dev = 9,839, 670,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=125 */
%   | else return -0.08048435992429111;  // std dev = 0,054, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527783;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09582848257652811;  // std dev = 0,487, 187,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=113 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06398126777467769;  // std dev = 3,332, 289,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=12 */
%   | | | else return 0.03696431507245723;  // std dev = 9,707, 582,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=123 */
%   | else return -0.07551380463243183;  // std dev = 0,077, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.08714236778169186;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.07286598999222539;  // std dev = 6,442, 176,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=109 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05459869361981992;  // std dev = 3,329, 266,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=12 */
%   | | | else return 0.03951915129984153;  // std dev = 9,657, 559,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=123 */
%   | else return -0.07107941449085088;  // std dev = 0,078, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,19e-08, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.002723149270391815;  // std dev = 7,090, 204,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=113 */
%   | | | else return -0.06402388693830381;  // std dev = 2,785, 290,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=8 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return -0.09194754981169544;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.17899547840610894;  // std dev = 1,632, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09146925857332575;  // std dev = 2,586, 165,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=7 */
%   | | | else return 0.12246429915503466;  // std dev = 1,401, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.08076478488945099;  // std dev = 8,991, 397,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=113 */
%   | | | else return -0.06295152734773297;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */


Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.227734
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 91.106 seconds
Total inference time: 4.781 seconds
AUC ROC: 0.826968


Results scoring model
   AUC ROC   = 0.896997
   AUC PR    = 0.558631
   CLL	      = -0.222243
   Precision = 0.178229 at threshold = 0.5
   Recall    = 0.694505
   F1        = 0.283662


Total scoring time: 17.561 seconds
Refined model CLL: -0.222243


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.227734
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 118.453 seconds
Total inference time: 4.781 seconds
AUC ROC: 0.826968
Total revision time: 118.453
Best scored revision CLL: -0.222243


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:53:29
{'F1': 0.422018, 'Inference time': 4.781, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826968, 'parameter_0.8': {'F1': 0.597826, 'Inference time': 1.862, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 4.931, 'CLL': -0.241049}, 'AUC PR': 0.521103, 'Recall': 0.534884, 'Learning time': 118.453, 'CLL': -0.227734}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.5678263544543475;  // std dev = 0,454, 248,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=176 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10823761952233688;  // std dev = 2,780, 238,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=8 */
%   | | | else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.08161010104506597;  // std dev = 3,066, 166,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=10 */
%   | | | else return 0.30823967920114126;  // std dev = 11,678, 551,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=248 */
%   else return -0.1418510649004877;  // std dev = 5,16e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5010012598800239;  // std dev = 0,443, 254,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=185 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1012069479395389;  // std dev = 2,789, 286,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=8 */
%   | | | else return 0.19258789115538322;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.1810383099303457;  // std dev = 0,471, 731,000 (wgt'ed) examples reached here.  /* #neg=473 #pos=258 */
%   else return -0.1254446385283911;  // std dev = 7,30e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6232617232257148;  // std dev = 0,083, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.32493750819703526;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3668306993046304;  // std dev = 0,459, 255,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=176 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08802618463619807;  // std dev = 2,785, 265,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=8 */
%   | | | else return 0.16352953408429413;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.09821082535075498;  // std dev = 3,072, 178,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=10 */
%   | | | else return 0.2273502613981347;  // std dev = 11,788, 564,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=248 */
%   else return -0.11231637819360622;  // std dev = 7,88e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.4687393357298429;  // std dev = 0,080, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.25463951306331495;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3012900794690179;  // std dev = 0,448, 249,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=176 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0762850426177967;  // std dev = 2,781, 242,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=8 */
%   | | | else return 0.058146706154433125;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0791062390559698;  // std dev = 3,061, 159,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=10 */
%   | | | else return 0.1955944546226275;  // std dev = 11,695, 553,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=248 */
%   else return -0.10159632948783628;  // std dev = 3,33e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.20509985298702874;  // std dev = 0,449, 270,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=185 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06921029706574752;  // std dev = 2,781, 243,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=8 */
%   | | | else return 0.20649425714980232;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G), haswordvenue(I, C) )
%   | | | then return -0.09169587967854817;  // std dev = 2,591, 171,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=7 */
%   | | | else return 0.4673684478068319;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.14505098967935715;  // std dev = 0,496, 568,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=248 */
%   else return -0.09269127618926103;  // std dev = 3,16e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3211353192281907;  // std dev = 0,129, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.36592938252344737;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.21624955966594406;  // std dev = 0,428, 235,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=176 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06433737133881787;  // std dev = 2,783, 253,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=8 */
%   | | | else return 0.12261222761592563;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0654016665603438;  // std dev = 3,011, 165,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=10 */
%   | | | else return 0.1037085746953009;  // std dev = 11,930, 582,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=248 */
%   else return -0.08518475138839682;  // std dev = 5,87e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.018918529177127445;  // std dev = 1,081, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.15067580905770414;  // std dev = 6,726, 239,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=176 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06293368803281818;  // std dev = 2,789, 290,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=8 */
%   | | | else return 0.14182265528620516;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( haswordvenue(H, C) )
%   | | then if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.05042718385583243;  // std dev = 2,997, 147,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=10 */
%   | | | else return 0.0836157641079705;  // std dev = 11,681, 557,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=239 */
%   | | else if ( haswordtitle(A, K), haswordvenue(L, K) )
%   | | | then return -0.17880194983577272;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.36105416524562894;  // std dev = 1,444, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else return -0.07877675473109158;  // std dev = 6,14e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.15383061862498615;  // std dev = 0,703, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.11302143087294768;  // std dev = 6,740, 240,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=176 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.057596036143173816;  // std dev = 2,789, 287,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=8 */
%   | | | else return 0.166638721471712;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06933748221870122;  // std dev = 2,597, 165,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=7 */
%   | | | else return 0.42147153904439216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.0769259685461747;  // std dev = 0,495, 561,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=248 */
%   else return -0.07324622576333707;  // std dev = 4,47e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.22468688979006313;  // std dev = 0,106, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.322370276542484;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.11637535801891359;  // std dev = 0,420, 230,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=176 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.0013772873256010694;  // std dev = 1,694, 34,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | | else return -0.05433291879154158;  // std dev = 2,712, 228,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.048145034911130744;  // std dev = 2,959, 160,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=10 */
%   | | | else return 0.0563351768003914;  // std dev = 11,766, 564,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=248 */
%   else return -0.06842697784420265;  // std dev = 4,89e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.03976933765876131;  // std dev = 0,433, 263,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=185 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.046735836944252894;  // std dev = 2,782, 259,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=8 */
%   | | | else return 0.002637229985350845;  // std dev = 1,601, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.029880414427374248;  // std dev = 0,451, 717,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=258 */
%   else return -0.06419184008202626;  // std dev = 2,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */


Results
   AUC ROC   = 0.718292
   AUC PR    = 0.076755
   CLL	      = -0.383315
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 718.144 seconds
Total inference time: 5.273 seconds
AUC ROC: 0.718292


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 11:05:33
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 5.273, 'Precision': [0.167742, 0.5], 'Learning time': 718.144, 'AUC PR': 0.076755, 'CLL': -0.383315, 'AUC ROC': 0.718292}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5433341202846939;  // std dev = 0,464, 270,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=185 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1126539846085175;  // std dev = 2,787, 274,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=8 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.08535388975924471;  // std dev = 3,072, 177,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=10 */
%   | | | else return 0.3378394573432216;  // std dev = 11,359, 517,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=248 */
%   else return -0.14185106490048768;  // std dev = 6,32e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 0.718659
   AUC PR    = 0.076768
   CLL	      = -0.221928
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 18.473 seconds
Total inference time: 1.782 seconds
AUC ROC: 0.718659


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 11:05:53
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.782, 'Precision': [nan, 0.5], 'Learning time': 18.473, 'AUC PR': 0.076768, 'CLL': -0.221928, 'AUC ROC': 0.718659}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,07e-06, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.08516042935238097;  // std dev = 15,629, 1.392,000 (wgt'ed) examples reached here.  /* #neg=1.076 #pos=316 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.07366194352487654;  // std dev = 15,637, 1.397,000 (wgt'ed) examples reached here.  /* #neg=1.081 #pos=316 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,46e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.05622900023407677;  // std dev = 15,714, 1.446,000 (wgt'ed) examples reached here.  /* #neg=1.130 #pos=316 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.04443239668958253;  // std dev = 15,755, 1.473,000 (wgt'ed) examples reached here.  /* #neg=1.157 #pos=316 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601501;  // std dev = 1,88e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.04283191559272557;  // std dev = 15,707, 1.441,000 (wgt'ed) examples reached here.  /* #neg=1.125 #pos=316 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,21e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.02902509255890764;  // std dev = 15,782, 1.492,000 (wgt'ed) examples reached here.  /* #neg=1.176 #pos=316 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.040683357438235535;  // std dev = 15,621, 1.387,000 (wgt'ed) examples reached here.  /* #neg=1.071 #pos=316 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.024817780294040193;  // std dev = 15,717, 1.448,000 (wgt'ed) examples reached here.  /* #neg=1.132 #pos=316 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.0249067728575977;  // std dev = 15,677, 1.422,000 (wgt'ed) examples reached here.  /* #neg=1.106 #pos=316 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801112;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.010222723900178973;  // std dev = 15,785, 1.494,000 (wgt'ed) examples reached here.  /* #neg=1.178 #pos=316 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.246466
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 5.063 seconds
Total inference time: 2.14 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.72232
   AUC PR    = 0.478862
   CLL	      = -0.243911
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44464
   F1        = 0.615572


Total scoring time: 4.098 seconds
Parameter learned model CLL: -0.243911


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.07e-06, 0, 253], 'false': [15.629, 1076, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.637, 1081, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.46e-07, 0, 253], 'false': [15.714, 1130, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.755, 1157, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.88e-07, 0, 253], 'false': [15.707, 1125, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.21e-07, 0, 253], 'false': [15.782, 1176, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 253], 'false': [15.621, 1071, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.717, 1132, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.677, 1106, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.785, 1178, 316]}]]
[{'': [4.49355089808759e-15, 0.17547727572995217]}, {'': [-4.3812121256354e-15, 0.17503301122305356]}, {'': [7.863714071653283e-16, 0.1707768269983113]}, {'': [-3.3701631735656924e-16, 0.16850583644316358]}, {'': [1.404234655652372e-16, 0.1712031075651442]}, {'': [4.0722805013918787e-16, 0.16693859655426732]}, {'': [3.2297397080004555e-16, 0.17592340868367673]}, {'': [-1.4042346556523718e-17, 0.1706068190836775]}, {'': [-1.6148698540002277e-16, 0.17283950617284338]}, {'': [-1.0531759917392789e-17, 0.16677508785701473]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,07e-06, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.41186794336397164;  // std dev = 0,497, 242,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09231546118531789;  // std dev = 3,900, 323,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=16 */
%   | | | else return 0.08338638421755395;  // std dev = 11,341, 737,000 (wgt'ed) examples reached here.  /* #neg=571 #pos=166 */
%   | else return -0.14185106490048804;  // std dev = 0,000, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.36569471306911194;  // std dev = 0,496, 237,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08190093278318596;  // std dev = 3,901, 326,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=16 */
%   | | | else return 0.0818247153671051;  // std dev = 11,275, 709,000 (wgt'ed) examples reached here.  /* #neg=543 #pos=166 */
%   | else return -0.12544463852839116;  // std dev = 6,99e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,46e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.29847230254939966;  // std dev = 0,496, 238,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07648217971890046;  // std dev = 3,908, 352,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=16 */
%   | | | else return 0.04721751684210299;  // std dev = 11,449, 789,000 (wgt'ed) examples reached here.  /* #neg=623 #pos=166 */
%   | else return -0.11231637819360615;  // std dev = 1,03e-07, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.28815844691681725;  // std dev = 7,186, 218,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=134 */
%   | | | else return -0.10068110573426894;  // std dev = 3,859, 239,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=16 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06692298979530495;  // std dev = 3,905, 340,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=16 */
%   | | | else return 0.13639658832495377;  // std dev = 10,202, 490,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=150 */
%   | else return -0.10159632948783641;  // std dev = 0,000, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601501;  // std dev = 1,88e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18734595379631722;  // std dev = 0,494, 231,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.059766494738384204;  // std dev = 3,903, 337,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=16 */
%   | | | else return 0.04486282611277671;  // std dev = 11,261, 735,000 (wgt'ed) examples reached here.  /* #neg=569 #pos=166 */
%   | else return -0.09269127618926086;  // std dev = 6,91e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,21e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.12246703187320776;  // std dev = 7,673, 239,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=134 */
%   | | | else return -0.05597210212832664;  // std dev = 3,907, 350,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=16 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08037170503263712;  // std dev = 3,833, 196,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=16 */
%   | | | else return 0.08408246900836651;  // std dev = 10,386, 534,000 (wgt'ed) examples reached here.  /* #neg=384 #pos=150 */
%   | else return -0.08518475138839678;  // std dev = 5,05e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.09925341015857243;  // std dev = 7,610, 236,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=134 */
%   | | | else return -0.052547329248105026;  // std dev = 3,910, 362,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=16 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0744642329076012;  // std dev = 3,843, 208,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=16 */
%   | | | else return 0.07635928145943328;  // std dev = 10,343, 523,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=150 */
%   | else return -0.07877675473109153;  // std dev = 7,38e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06970986134184623;  // std dev = 0,496, 238,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=134 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06639678786138005;  // std dev = 3,844, 217,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=16 */
%   | | | else return 0.021465340451889994;  // std dev = 11,155, 861,000 (wgt'ed) examples reached here.  /* #neg=695 #pos=166 */
%   | else return -0.07324622576333713;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.05466008070190899;  // std dev = 0,496, 237,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.048273870249009344;  // std dev = 3,907, 351,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=16 */
%   | | | else return 0.031090838686680264;  // std dev = 11,095, 713,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=166 */
%   | else return -0.06842697784420264;  // std dev = 6,32e-08, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801112;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06333123060099313;  // std dev = 0,492, 228,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=134 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06409025094488137;  // std dev = 3,849, 224,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=16 */
%   | | | else return 0.018933353636414692;  // std dev = 11,129, 840,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=166 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */


Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.240247
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 106.10900000000001 seconds
Total inference time: 2.751 seconds
AUC ROC: 0.826968


Results scoring model
   AUC ROC   = 0.885201
   AUC PR    = 0.539711
   CLL	      = -0.231587
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total scoring time: 14.086 seconds
Refined model CLL: -0.231587


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.240247
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 129.35600000000002 seconds
Total inference time: 2.751 seconds
AUC ROC: 0.826968
Total revision time: 129.35600000000002
Best scored revision CLL: -0.231587


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 11:08:08
{'parameter_1.0': {'F1': 0.597826, 'Inference time': 2.14, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 5.063, 'CLL': -0.246466}, 'F1': 0.422018, 'Inference time': 2.751, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826968, 'AUC PR': 0.521103, 'Recall': 0.534884, 'Learning time': 129.35600000000002, 'CLL': -0.240247}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5043027812533545;  // std dev = 8,620, 325,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=210 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10726893233564652;  // std dev = 3,404, 347,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=12 */
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.06021841183926316;  // std dev = 3,833, 196,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=16 */
%   | | | else return 0.31611994959226136;  // std dev = 13,087, 690,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=316 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.4831111986386157;  // std dev = 0,459, 304,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=212 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G), haswordvenue(J, C) )
%   | | | then return -0.0936796757889519;  // std dev = 3,402, 337,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=12 */
%   | | | else return 0.08396657092190811;  // std dev = 1,679, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return 0.19022277824832026;  // std dev = 0,475, 913,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=332 */
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.37593566276281204;  // std dev = 0,464, 311,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=212 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08174363809737124;  // std dev = 3,400, 318,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=12 */
%   | | | else return 0.11200027051622762;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.07421423468570708;  // std dev = 3,828, 190,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=16 */
%   | | | else return 0.21645956618501416;  // std dev = 13,401, 732,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=316 */
%   else return -0.11231637819360617;  // std dev = 1,00e-07, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.30624222345878643;  // std dev = 0,458, 304,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=212 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G), haswordvenue(J, C) )
%   | | | then return -0.07549634186353528;  // std dev = 3,402, 340,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=12 */
%   | | | else return 0.036707819103891245;  // std dev = 1,682, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.07148430611366624;  // std dev = 3,842, 207,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=16 */
%   | | | else return 0.19103373152923253;  // std dev = 13,242, 710,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=316 */
%   else return -0.10159632948783637;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.16600731167644475;  // std dev = 0,467, 355,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=221 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0688202012738653;  // std dev = 3,405, 341,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=12 */
%   | | | else return 0.22428405715066166;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G), haswordvenue(I, C) )
%   | | | then return -0.08253507252541138;  // std dev = 3,363, 209,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=12 */
%   | | | else return 0.43147723096057616;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.15824036782593956;  // std dev = 0,498, 702,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=316 */
%   else return -0.09269127618926079;  // std dev = 7,74e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15945571172572515;  // std dev = 0,455, 337,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(H, C) )
%   | | | then return -0.06383162093469066;  // std dev = 3,406, 358,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=12 */
%   | | | else return 0.08255208129702847;  // std dev = 1,567, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.055285666827235555;  // std dev = 3,788, 203,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=16 */
%   | | | else return 0.1156902391892118;  // std dev = 13,287, 716,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=316 */
%   else return -0.08518475138839679;  // std dev = 7,74e-08, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.25427028787829276;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12392823232093289;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.17653740712303342;  // std dev = 0,446, 293,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=212 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05517799208789034;  // std dev = 3,402, 321,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=12 */
%   | | | else return 0.08633667943381905;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.043083391041114055;  // std dev = 3,777, 189,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=16 */
%   | | | else return 0.10443855088778033;  // std dev = 13,111, 693,000 (wgt'ed) examples reached here.  /* #neg=377 #pos=316 */
%   else return -0.07877675473109155;  // std dev = 6,91e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.20912038373329733;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11108819186129362;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.10021798310751191;  // std dev = 0,461, 307,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=212 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.1853445009395818;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.05236180338064843;  // std dev = 3,377, 306,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=13 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.043489136839384164;  // std dev = 3,791, 200,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=16 */
%   | | | else return 0.06256955231959763;  // std dev = 13,323, 721,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=316 */
%   else return -0.07324622576333713;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.17662890373439488;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.10058315437637463;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.09237749513402695;  // std dev = 0,454, 300,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=212 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.025538858995546213;  // std dev = 2,093, 43,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | | | else return -0.05743391197488419;  // std dev = 3,105, 319,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=11 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04395919961658774;  // std dev = 3,799, 217,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=16 */
%   | | | else return 0.0708172684773895;  // std dev = 13,047, 685,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=316 */
%   else return -0.06842697784420264;  // std dev = 5,48e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.15238904843703682;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.09184230832876962;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.27679871630555225;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.08175712640856893;  // std dev = 7,679, 292,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=210 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.04518064760338471;  // std dev = 3,386, 327,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=12 */
%   | | | else return 0.035069274618329635;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.03785163165829196;  // std dev = 3,796, 213,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=16 */
%   | | | else return 0.038851358268624264;  // std dev = 13,227, 708,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=316 */
%   else return -0.06419184008202626;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */


Results
   AUC ROC   = 0.718292
   AUC PR    = 0.076755
   CLL	      = -0.395235
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 404.812 seconds
Total inference time: 3.813 seconds
AUC ROC: 0.718292


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 11:14:57
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 3.813, 'Precision': [0.167742, 0.5], 'Learning time': 404.812, 'AUC PR': 0.076755, 'CLL': -0.395235, 'AUC ROC': 0.718292}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5531174885586279;  // std dev = 0,460, 318,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=221 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0857762985453476;  // std dev = 3,366, 214,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=12 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H), haswordvenue(K, C) )
%   | | | then return -0.10018439823382153;  // std dev = 3,391, 288,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=12 */
%   | | | else return 0.19148226843284558;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.29401100406502495;  // std dev = 0,496, 725,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=316 */
%   else return -0.14185106490048796;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */


Results
   AUC ROC   = 0.718409
   AUC PR    = 0.076758
   CLL	      = -0.218341
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 82.578 seconds
Total inference time: 1.731 seconds
AUC ROC: 0.718409


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 11:16:22
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.731, 'Precision': [nan, 0.5], 'Learning time': 82.578, 'AUC PR': 0.076758, 'CLL': -0.218341, 'AUC ROC': 0.718409}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 544
Target train neg examples: 22302

Target test facts examples: 8644
Target test pos	 examples: 154
Target test neg examples: 5694

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.09029179224237036;  // std dev = 7,065, 280,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=65 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.09024412649470968;  // std dev = 7,013, 267,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=65 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.059634701614020534;  // std dev = 7,098, 289,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=65 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.08023511870823652;  // std dev = 6,964, 256,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=65 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.04419326719584947;  // std dev = 7,076, 283,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=65 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.018780419548095763;  // std dev = 7,161, 308,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=65 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253548;  // std dev = 5,77e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.0193295344732944;  // std dev = 7,145, 303,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=65 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.04429097898837172;  // std dev = 7,017, 268,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=65 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.029276708342597033;  // std dev = 7,053, 277,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=65 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 4,21e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 1.564953925725766E-4;  // std dev = 7,164, 309,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=65 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.253224
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 2.155 seconds
Total inference time: 2.417 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.699074
   AUC PR    = 0.434146
   CLL	      = -0.253815
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.398148
   F1        = 0.569536


Total scoring time: 1.756 seconds
Parameter learned model CLL: -0.253815


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.31e-07, 0, 43], 'false': [7.065, 215, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 43], 'false': [7.013, 202, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 43], 'false': [7.098, 224, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 43], 'false': [6.964, 191, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 43], 'false': [7.076, 218, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 43], 'false': [7.161, 243, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.77e-08, 0, 43], 'false': [7.145, 238, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 43], 'false': [7.017, 203, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 43], 'false': [7.053, 212, 65]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 43], 'false': [7.164, 244, 65]}]]
[{'': [1.2393187251629655e-15, 0.17825255102040885]}, {'': [-9.914549801303723e-16, 0.18417988750017583]}, {'': [-4.131062417209885e-17, 0.1743274146621836]}, {'': [-3.7179561754888965e-16, 0.1894378662109369]}, {'': [0.0, 0.17692816741375114]}, {'': [-2.0655312086049424e-17, 0.16650151796255888]}, {'': [7.745742032268534e-17, 0.16850199871472035]}, {'': [-7.745742032268534e-17, 0.18371296502561585]}, {'': [-4.6474452193611206e-17, 0.1795931134251731]}, {'': [4.131062417209885e-17, 0.1661063457651289]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.433906510857088;  // std dev = 0,494, 33,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0733579142155562;  // std dev = 2,158, 73,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=5 */
%   | | | else return 0.12438270133327767;  // std dev = 5,485, 154,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=41 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2967482646957417;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07291269791584608;  // std dev = 2,168, 83,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=5 */
%   | | | else return 0.11565665000658794;  // std dev = 5,458, 150,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=41 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2555276243187335;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.27225015345904374;  // std dev = 2,995, 36,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05143116791536234;  // std dev = 2,152, 68,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=5 */
%   | | | else return 0.09432156245657514;  // std dev = 5,478, 153,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=41 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.34799545401069204;  // std dev = 0,471, 29,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03611109829386488;  // std dev = 2,141, 60,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=5 */
%   | | | else return 0.09130520814656458;  // std dev = 5,437, 147,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=41 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1532822813621684;  // std dev = 0,498, 35,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05076318132485126;  // std dev = 2,162, 77,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=5 */
%   | | | else return 0.08479274112227436;  // std dev = 5,408, 143,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=41 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.08621752715860782;  // std dev = 3,011, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return -0.045669944961588264;  // std dev = 2,162, 77,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=5 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.015930488283549187;  // std dev = 2,366, 35,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return 0.0988843265312649;  // std dev = 4,827, 108,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253548;  // std dev = 5,77e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.12199247100090027;  // std dev = 2,830, 34,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return -0.06682235454586158;  // std dev = 2,442, 50,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03372787177390829;  // std dev = 2,154, 69,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=5 */
%   | | | else return 0.024434271241402666;  // std dev = 5,024, 132,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0602723149077086;  // std dev = 0,489, 36,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.04215012067911471;  // std dev = 2,422, 45,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | | else return 0.01798545219129237;  // std dev = 5,434, 180,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=39 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10058333015165144;  // std dev = 0,491, 32,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0405237823986049;  // std dev = 2,425, 49,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
%   | | | else return -0.0010268271428667904;  // std dev = 5,496, 195,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=39 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 4,21e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.028268092173015274;  // std dev = 2,926, 35,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return -0.07659423370536818;  // std dev = 1,395, 78,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=2 */
%   | | else return 0.39735550279827264;  // std dev = 1,220, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06132689368361039;  // std dev = 2,088, 43,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | | | else return 0.4774284854341759;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07130304767877732;  // std dev = 4,837, 109,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | | else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.899996
   AUC PR    = 0.575688
   CLL	      = -0.250139
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 23.659 seconds
Total inference time: 3.813 seconds
AUC ROC: 0.899996


Results scoring model
   AUC ROC   = 0.852789
   AUC PR    = 0.487756
   CLL	      = -0.246325
   Precision = 0.178674 at threshold = 0.5
   Recall    = 0.574074
   F1        = 0.272527


Total scoring time: 3.971 seconds
Refined model CLL: -0.246325


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899996
   AUC PR    = 0.575688
   CLL	      = -0.250139
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 31.541 seconds
Total inference time: 3.813 seconds
AUC ROC: 0.899996
Total revision time: 31.541
Best scored revision CLL: -0.246325


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 11:17:01
{'parameter_0.2': {'F1': 0.637168, 'Inference time': 2.417, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 2.155, 'CLL': -0.253224}, 'F1': 0.293725, 'Inference time': 3.813, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.899996, 'AUC PR': 0.575688, 'Recall': 0.714286, 'Learning time': 31.541, 'CLL': -0.250139}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5185262935900773;  // std dev = 0,474, 53,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.03768439823382107;  // std dev = 2,116, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10263537862597792;  // std dev = 1,386, 51,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=2 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.2907730485746908;  // std dev = 0,495, 141,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=61 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4969862437229456;  // std dev = 0,452, 49,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=35 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09221643354671848;  // std dev = 1,387, 53,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=2 */
%   | | | else return 0.19048282069391675;  // std dev = 1,355, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.19180555974872077;  // std dev = 0,476, 187,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=68 */
%   else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.3133535419220075;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.37292096788191353;  // std dev = 0,464, 51,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=35 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08989376299128304;  // std dev = 1,393, 67,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=2 */
%   | | | else return 0.06135041291682299;  // std dev = 1,456, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.17542179293537227;  // std dev = 0,482, 179,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=68 */
%   else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.346144286432647;  // std dev = 0,436, 47,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.09884113047849016;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.03882625106595293;  // std dev = 1,975, 33,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.075500616198173;  // std dev = 1,389, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | | else return 0.36674425332536376;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.18762404333810265;  // std dev = 0,495, 142,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=61 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.25571629844251215;  // std dev = 0,429, 48,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=35 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07718056537628933;  // std dev = 1,399, 72,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=2 */
%   | | | else return -0.04336017857004184;  // std dev = 1,483, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02809955945096845;  // std dev = 2,355, 43,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | | else return 0.15770857133397917;  // std dev = 5,867, 140,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=61 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.1454693132985347;  // std dev = 0,455, 51,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=35 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06433028002964114;  // std dev = 1,391, 62,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=2 */
%   | | | else return 0.14527269673989365;  // std dev = 1,230, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.04035440957557941;  // std dev = 2,061, 36,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | | else return 0.39275835066027476;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14111291748753052;  // std dev = 0,498, 135,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=61 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.41325848459299847;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1615198137607144;  // std dev = 0,436, 47,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.06307155691619695;  // std dev = 1,397, 68,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2 */
%   | | | else return 0.12262646180940202;  // std dev = 1,267, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.05005678627984887;  // std dev = 2,348, 52,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
%   | | | else return 0.04928660619910684;  // std dev = 6,095, 156,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=61 */
%   else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.31782840728042644;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.13904890016385635;  // std dev = 0,427, 46,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=35 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.04787305137176882;  // std dev = 1,392, 49,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=2 */
%   | | | else return 0.02036674885617451;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.03704888283678784;  // std dev = 0,462, 195,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=68 */
%   else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09075699032064868;  // std dev = 0,436, 47,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04844654343725637;  // std dev = 1,390, 59,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=2 */
%   | | | else return 0.1670688566379653;  // std dev = 1,167, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.024723040062683343;  // std dev = 2,315, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | | else return 0.037275656908756345;  // std dev = 6,056, 153,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=61 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13962565372239277;  // std dev = 0,375, 44,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=35 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07910412010816571;  // std dev = 2,124, 56,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=5 */
%   | | | else return 0.31685233863850176;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.015661706480618348;  // std dev = 1,838, 54,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=5 */
%   | | | else return 0.05062580841545485;  // std dev = 5,945, 145,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=61 */
%   else return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.811772
   AUC PR    = 0.08245
   CLL	      = -0.340171
   Precision = 0.105166 at threshold = 0.5
   Recall    = 0.37013
   F1        = 0.163793


Total learning time: 106.083 seconds
Total inference time: 4.301 seconds
AUC ROC: 0.811772


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 11:18:52
{'F1': 0.163793, 'Recall': 0.37013, 'Inference time': 4.301, 'Precision': [0.105166, 0.5], 'Learning time': 106.083, 'AUC PR': 0.08245, 'CLL': -0.340171, 'AUC ROC': 0.811772}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5444234449034329;  // std dev = 0,464, 51,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=35 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.05045662740720463;  // std dev = 0,394, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( haswordvenue(H, F) )
%   | | then return -0.11010503315445595;  // std dev = 0,175, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | else return 0.28672036367094084;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return 0.2877263998882459;  // std dev = 0,495, 142,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=61 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.804029
   AUC PR    = 0.077564
   CLL	      = -0.213676
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 5.723 seconds
Total inference time: 1.861 seconds
AUC ROC: 0.804029


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 11:18:59
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.861, 'Precision': [nan, 0.5], 'Learning time': 5.723, 'AUC PR': 0.077564, 'CLL': -0.213676, 'AUC ROC': 0.804029}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.09041843864560828;  // std dev = 10,029, 564,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=131 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.08453154922358784;  // std dev = 9,993, 551,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=131 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,82e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.07454150608581966;  // std dev = 9,984, 548,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=131 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 1,52e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.06059867456385795;  // std dev = 10,007, 556,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=131 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.06654274986598457;  // std dev = 9,909, 523,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=131 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.036094196956147497;  // std dev = 10,042, 569,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=131 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325358;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.02719291295417217;  // std dev = 10,063, 577,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=131 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,71e-08, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.01894134907964214;  // std dev = 10,088, 587,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=131 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367122;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.015087991029802995;  // std dev = 10,093, 589,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=131 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.01184481899171847;  // std dev = 10,098, 591,000 (wgt'ed) examples reached here.  /* #neg=460 #pos=131 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.255043
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 2.781 seconds
Total inference time: 2.372 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.698157
   AUC PR    = 0.431715
   CLL	      = -0.25578
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.396313
   F1        = 0.567657


Total scoring time: 2.722 seconds
Parameter learned model CLL: -0.25578


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 86], 'false': [10.029, 433, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.8e-07, 0, 86], 'false': [9.993, 420, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.82e-07, 0, 86], 'false': [9.984, 417, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.52e-07, 0, 86], 'false': [10.007, 425, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 86], 'false': [9.909, 392, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 86], 'false': [10.042, 438, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 86], 'false': [10.063, 446, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.71e-08, 0, 86], 'false': [10.088, 456, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 86], 'false': [10.093, 458, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.77e-08, 0, 86], 'false': [10.098, 460, 131]}]]
[{'': [-3.304849933767908e-16, 0.17832038126854963]}, {'': [9.088337317861747e-16, 0.1812246995233921]}, {'': [1.6937355910560528e-15, 0.1819056689221563]}, {'': [2.685190571186425e-16, 0.18009872677397798]}, {'': [-3.511403054628402e-16, 0.1877387772411674]}, {'': [-5.163828021512356e-17, 0.1772233221419526]}, {'': [-1.1360421647327184e-16, 0.175490870425831]}, {'': [2.581914010756178e-17, 0.17336440596803682]}, {'': [-6.196593625814827e-17, 0.17294427261537723]}, {'': [3.872871016134267e-17, 0.17252584595210754]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4378590800270483;  // std dev = 4,100, 69,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.059498123724017096;  // std dev = 2,534, 85,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=7 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.11265398460851685;  // std dev = 1,971, 137,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=4 */
%   | | | else return 0.24276431971489695;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.11968739663797523;  // std dev = 7,086, 260,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=68 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.20278342705181132;  // std dev = 1,244, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.37470693993341264;  // std dev = 4,093, 69,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0717387586893765;  // std dev = 2,851, 143,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=9 */
%   | | | else return 0.11265435274128999;  // std dev = 7,568, 297,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=79 */
%   | else return -0.1289298454277627;  // std dev = 0,049, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,82e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.29667697223373596;  // std dev = 0,497, 75,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=43 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05924076592405866;  // std dev = 2,842, 136,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=9 */
%   | | | else return 0.0937244662003593;  // std dev = 7,585, 301,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=79 */
%   | else return -0.11547357970385604;  // std dev = 0,046, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 1,52e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.3380180587632722;  // std dev = 0,891, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.28494315944841503;  // std dev = 3,898, 65,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=40 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.044015934264472235;  // std dev = 2,832, 119,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=9 */
%   | | | else return 0.08197021333159243;  // std dev = 7,573, 299,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=79 */
%   | else return -0.10392900605493813;  // std dev = 0,017, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19699736227864761;  // std dev = 0,485, 72,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.056557137356171024;  // std dev = 2,859, 156,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=9 */
%   | | | else return 0.026304869662989505;  // std dev = 7,791, 358,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=79 */
%   | else return -0.09448490975436723;  // std dev = 0,020, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.010860206981832512;  // std dev = 1,211, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.11041936627379559;  // std dev = 4,203, 71,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=40 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06727086355230164;  // std dev = 3,016, 99,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=11 */
%   | | | else return 0.03308267362658773;  // std dev = 7,647, 377,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=77 */
%   | else return -0.08697887652241779;  // std dev = 0,015, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325358;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.05855738188045986;  // std dev = 4,439, 81,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return -0.04773391814649094;  // std dev = 2,849, 141,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.03807659625150531;  // std dev = 2,987, 82,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
%   | | | else return 0.08820965219022955;  // std dev = 6,914, 229,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=68 */
%   | else return -0.0796250707056064;  // std dev = 0,015, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,71e-08, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06796969571478585;  // std dev = 0,494, 77,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=43 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.039228025032863524;  // std dev = 2,847, 131,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=9 */
%   | | | else return 0.034376534424637596;  // std dev = 7,632, 326,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=79 */
%   | else return -0.07383285366459445;  // std dev = 0,014, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367122;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10640146894388154;  // std dev = 0,484, 70,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0372000169273026;  // std dev = 2,848, 137,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=9 */
%   | | | else return 0.04563807130262121;  // std dev = 7,540, 305,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=79 */
%   | else return -0.06916087262695915;  // std dev = 0,012, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.39882616750240746;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.060033007066088724;  // std dev = 4,026, 68,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=40 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.054791120572743726;  // std dev = 3,004, 92,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return 0.0076803848754736555;  // std dev = 7,639, 385,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=77 */
%   | else return -0.06526425530705048;  // std dev = 0,015, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */


Results
   AUC ROC   = 0.89953
   AUC PR    = 0.571705
   CLL	      = -0.247549
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 37.692 seconds
Total inference time: 3.161 seconds
AUC ROC: 0.89953


Results scoring model
   AUC ROC   = 0.859443
   AUC PR    = 0.494836
   CLL	      = -0.244674
   Precision = 0.17704 at threshold = 0.5
   Recall    = 0.589862
   F1        = 0.27234


Total scoring time: 7.242 seconds
Refined model CLL: -0.244674


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.89953
   AUC PR    = 0.571705
   CLL	      = -0.247549
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 50.437 seconds
Total inference time: 3.161 seconds
AUC ROC: 0.89953
Total revision time: 50.437
Best scored revision CLL: -0.244674


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 11:19:56
{'F1': 0.293725, 'Inference time': 3.161, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.89953, 'AUC PR': 0.571705, 'parameter_0.4': {'F1': 0.637168, 'Inference time': 2.372, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 2.781, 'CLL': -0.255043}, 'Recall': 0.714286, 'Learning time': 50.437, 'CLL': -0.247549}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5463209781102658;  // std dev = 4,467, 93,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=64 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11131671375544949;  // std dev = 1,969, 131,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=4 */
%   | | | else return 0.10814893509951236;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return 0.004815601766179008;  // std dev = 3,064, 75,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return 0.3053320336910579;  // std dev = 8,379, 284,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=127 */
%   else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.4964802831188601;  // std dev = 4,318, 93,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=67 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09708696671905344;  // std dev = 1,968, 126,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=4 */
%   | | | else return 0.20161029497861266;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05152918564818947;  // std dev = 2,523, 77,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=7 */
%   | | | else return 0.35756172344271964;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.2415270391547044;  // std dev = 0,494, 299,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=127 */
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.10953803380179195;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.3544294514556348;  // std dev = 4,570, 95,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=64 */
%   | | | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08094023161085996;  // std dev = 1,962, 107,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=4 */
%   | | | else return 0.07927230281437771;  // std dev = 1,919, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.02037339558237819;  // std dev = 3,053, 93,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=11 */
%   | | | else return 0.2083515716834489;  // std dev = 8,504, 295,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=127 */
%   else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.2823660968890703;  // std dev = 0,465, 98,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=67 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07565410032843291;  // std dev = 1,965, 116,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=4 */
%   | | | else return 0.11641865138415579;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.008988132459361841;  // std dev = 3,042, 85,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=11 */
%   | | | else return 0.14813318639264392;  // std dev = 8,668, 311,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=127 */
%   else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.04613580148173024;  // std dev = 1,295, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.14431022753899858;  // std dev = 5,009, 108,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=67 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06555483178417315;  // std dev = 1,962, 107,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=4 */
%   | | | else return 0.02301153514493888;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.03139106972655936;  // std dev = 2,508, 69,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
%   | | | else return 0.4792652335564222;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15587589502226695;  // std dev = 0,497, 285,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=127 */
%   else return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return -0.034649425663352794;  // std dev = 1,295, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.16717977335749587;  // std dev = 4,574, 95,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=64 */
%   | | else return 0.2901176759413032;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06285215392288897;  // std dev = 1,966, 117,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=4 */
%   | | | else return 0.11433929578942943;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.014577137255691479;  // std dev = 2,982, 86,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */
%   | | | else return 0.09355989974457522;  // std dev = 8,609, 305,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=127 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( haswordvenue(F, C) )
%   | | | then return 0.1006663722307107;  // std dev = 4,881, 104,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=67 */
%   | | | else return 0.2341668785171459;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06181988477790045;  // std dev = 1,970, 134,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=4 */
%   | | | else return 0.010823383283624772;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.04121412984883341;  // std dev = 2,529, 81,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=7 */
%   | | | else return 0.17595422544172548;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.09431484177190498;  // std dev = 0,496, 290,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=127 */
%   else return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( haswordvenue(F, C) )
%   | | | then return 0.12850832025784986;  // std dev = 4,464, 97,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=67 */
%   | | | else return 0.19480316097435746;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.05515530297797425;  // std dev = 1,968, 127,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=4 */
%   | | | else return 0.17551494990007974;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.03450735413437591;  // std dev = 2,526, 79,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=7 */
%   | | | else return 0.6955808846910367;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06241886128266244;  // std dev = 0,495, 297,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=127 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4818593618809057;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.5069961121039576;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.09141503223281418;  // std dev = 4,420, 92,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=64 */
%   | | | else return 0.16604781061654428;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.052081542214659195;  // std dev = 1,969, 132,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=4 */
%   | | | else return 0.10990639528491997;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.03004222546463605;  // std dev = 0,460, 385,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=138 */
%   else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.008813580238760462;  // std dev = 0,915, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.055486239907215754;  // std dev = 4,518, 94,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=64 */
%   | | | else return 0.1443095401149319;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.13104142720244463;  // std dev = 1,493, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.06941108357421158;  // std dev = 2,494, 85,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=8 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.035575392440676944;  // std dev = 2,720, 123,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=9 */
%   | | | else return 0.026800387496665884;  // std dev = 8,629, 307,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=127 */
%   else return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.814379
   AUC PR    = 0.090585
   CLL	      = -0.321667
   Precision = 0.106814 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.166428


Total learning time: 188.542 seconds
Total inference time: 5.336 seconds
AUC ROC: 0.814379


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 11:23:10
{'F1': 0.166428, 'Recall': 0.376623, 'Inference time': 5.336, 'Precision': [0.106814, 0.5], 'Learning time': 188.542, 'AUC PR': 0.090585, 'CLL': -0.321667, 'AUC ROC': 0.814379}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.53491661186719;  // std dev = 4,654, 99,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=67 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.04462884267826547;  // std dev = 2,514, 72,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=7 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.11286555765411084;  // std dev = 1,971, 138,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=4 */
%   | | | else return 0.24276431971489695;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.28720298915356257;  // std dev = 0,495, 296,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=127 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */


Results
   AUC ROC   = 0.810473
   AUC PR    = 0.082316
   CLL	      = -0.208271
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 17.827 seconds
Total inference time: 2.454 seconds
AUC ROC: 0.810473


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 11:23:31
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.454, 'Precision': [nan, 0.5], 'Learning time': 17.827, 'AUC PR': 0.082316, 'CLL': -0.208271, 'AUC ROC': 0.810473}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995102;  // std dev = 8,34e-07, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else return 0.07358672311794075;  // std dev = 12,113, 868,000 (wgt'ed) examples reached here.  /* #neg=681 #pos=187 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else return 0.068953063860904;  // std dev = 12,077, 850,000 (wgt'ed) examples reached here.  /* #neg=663 #pos=187 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,99e-07, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else return 0.06962650191927616;  // std dev = 12,002, 814,000 (wgt'ed) examples reached here.  /* #neg=627 #pos=187 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158309;  // std dev = 4,17e-07, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else return 0.05426319888213249;  // std dev = 12,047, 835,000 (wgt'ed) examples reached here.  /* #neg=648 #pos=187 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,31e-07, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else return 0.05953699425903541;  // std dev = 11,945, 789,000 (wgt'ed) examples reached here.  /* #neg=602 #pos=187 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949017;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else return 0.03628873451182556;  // std dev = 12,057, 840,000 (wgt'ed) examples reached here.  /* #neg=653 #pos=187 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253526;  // std dev = 2,27e-07, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else return 0.0235429632974389;  // std dev = 12,113, 868,000 (wgt'ed) examples reached here.  /* #neg=681 #pos=187 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else return 0.03000081467724973;  // std dev = 12,034, 829,000 (wgt'ed) examples reached here.  /* #neg=642 #pos=187 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else return 0.012648907414062877;  // std dev = 12,131, 878,000 (wgt'ed) examples reached here.  /* #neg=691 #pos=187 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else return 0.022120598538336776;  // std dev = 12,042, 833,000 (wgt'ed) examples reached here.  /* #neg=646 #pos=187 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.248271
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 3.189 seconds
Total inference time: 2.421 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.71319
   AUC PR    = 0.461023
   CLL	      = -0.247984
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.42638
   F1        = 0.597849


Total scoring time: 3.545 seconds
Parameter learned model CLL: -0.247984


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.34e-07, 0, 139], 'false': [12.113, 681, 187]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 139], 'false': [12.077, 663, 187]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.99e-07, 0, 139], 'false': [12.002, 627, 187]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.17e-07, 0, 139], 'false': [12.047, 648, 187]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.31e-07, 0, 139], 'false': [11.945, 602, 187]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 139], 'false': [12.057, 653, 187]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.27e-07, 0, 139], 'false': [12.113, 681, 187]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 139], 'false': [12.034, 642, 187]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 139], 'false': [12.131, 691, 187]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.96e-08, 0, 139], 'false': [12.042, 646, 187]}]]
[{'': [5.00958187802085e-15, 0.16902434751215972]}, {'': [-2.146963662008936e-15, 0.1716000000000101]}, {'': [1.7891363850074464e-15, 0.1769539810080373]}, {'': [1.2523954695052125e-15, 0.1737975545914072]}, {'': [3.833863682158814e-16, 0.18083566658795444]}, {'': [-1.1501591046476442e-16, 0.17305980725623185]}, {'': [3.7060682260868536e-16, 0.1690243475121659]}, {'': [-2.8753977616191103e-16, 0.17468981041585027]}, {'': [-3.833863682158814e-17, 0.167621847126152]}, {'': [2.5559091214392094e-17, 0.1740941274469023]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995102;  // std dev = 8,34e-07, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5418224044872683;  // std dev = 0,465, 98,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=67 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08020722928404929;  // std dev = 2,906, 146,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=9 */
%   | | | else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10770472343707338;  // std dev = 2,600, 205,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=7 */
%   | | | else return 0.13592671287729013;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.11842290770225082;  // std dev = 8,383, 365,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=95 */
%   | | | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.11204556481057198;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.4024746077148611;  // std dev = 4,869, 101,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=63 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.05798490728365039;  // std dev = 2,886, 121,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=9 */
%   | | | else return 0.22895152751901957;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09258971952160144;  // std dev = 2,597, 191,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=7 */
%   | | | else return 0.11856181366859946;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.12170562657838715;  // std dev = 8,279, 341,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=95 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,99e-07, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.25880370755903404;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2543936831876638;  // std dev = 5,309, 114,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=63 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07440103225646592;  // std dev = 3,319, 242,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=12 */
%   | | | else return 0.06659580964690799;  // std dev = 9,040, 470,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=108 */
%   | else return -0.11544541878051016;  // std dev = 0,035, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158309;  // std dev = 4,17e-07, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.016030832402846622;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.26971817356591543;  // std dev = 4,869, 101,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=63 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05499867964627836;  // std dev = 3,303, 192,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=12 */
%   | | | else return 0.050875909984325195;  // std dev = 9,067, 487,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=108 */
%   | else return -0.10686322172268539;  // std dev = 0,037, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,31e-07, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1826781893613908;  // std dev = 0,492, 113,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05767819597586277;  // std dev = 3,374, 151,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=13 */
%   | | | else return 0.03575010090998088;  // std dev = 9,068, 533,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=107 */
%   | else return -0.09436980815425218;  // std dev = 0,027, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949017;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.1477091488120407;  // std dev = 5,172, 111,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=67 */
%   | | | else return -0.0519950001942244;  // std dev = 3,295, 196,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=12 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.03064694830992992;  // std dev = 3,336, 121,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=13 */
%   | | | else return 0.08182934223620286;  // std dev = 8,279, 341,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=95 */
%   | else return -0.08915584161490901;  // std dev = 0,077, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253526;  // std dev = 2,27e-07, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.3529902157119159;  // std dev = 0,962, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06714860615138035;  // std dev = 5,230, 113,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=63 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05210084973169669;  // std dev = 3,315, 205,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=12 */
%   | | | else return 0.04187262208430885;  // std dev = 8,980, 466,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=108 */
%   | else return -0.08344249750037318;  // std dev = 0,070, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1028604337463941;  // std dev = 0,487, 109,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=67 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04591604511046084;  // std dev = 3,311, 204,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=12 */
%   | | | else return 0.022780755536913454;  // std dev = 9,053, 494,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=108 */
%   | else return -0.07390539356938353;  // std dev = 0,020, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0973758323222434;  // std dev = 0,479, 106,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=67 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03425144384160401;  // std dev = 3,298, 182,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=12 */
%   | | | else return 0.03641243157350666;  // std dev = 8,945, 458,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=108 */
%   | else return -0.07088649659689933;  // std dev = 0,059, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0680467077896366;  // std dev = 0,480, 107,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=67 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.040122408834666376;  // std dev = 3,315, 211,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=12 */
%   | | | else return 0.018162903353516148;  // std dev = 9,018, 484,000 (wgt'ed) examples reached here.  /* #neg=376 #pos=108 */
%   | else return -0.06608202669309585;  // std dev = 0,025, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */


Results
   AUC ROC   = 0.899441
   AUC PR    = 0.571701
   CLL	      = -0.242321
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 54.988 seconds
Total inference time: 3.901 seconds
AUC ROC: 0.899441


Results scoring model
   AUC ROC   = 0.870652
   AUC PR    = 0.522137
   CLL	      = -0.236642
   Precision = 0.186984 at threshold = 0.5
   Recall    = 0.625767
   F1        = 0.287932


Total scoring time: 8.786 seconds
Refined model CLL: -0.236642


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899441
   AUC PR    = 0.571701
   CLL	      = -0.242321
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 70.508 seconds
Total inference time: 3.901 seconds
AUC ROC: 0.899441
Total revision time: 70.508
Best scored revision CLL: -0.236642


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 11:24:49
{'F1': 0.293725, 'Inference time': 3.901, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.899441, 'AUC PR': 0.571701, 'parameter_0.6': {'F1': 0.637168, 'Inference time': 2.421, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 3.189, 'CLL': -0.248271}, 'Recall': 0.714286, 'Learning time': 70.508, 'CLL': -0.242321}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5733388085172313;  // std dev = 0,451, 158,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=113 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07756535061477336;  // std dev = 2,902, 140,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=9 */
%   | | | else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10185106490048777;  // std dev = 2,592, 175,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=7 */
%   | | | else return 0.15226658215833588;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.274078138639331;  // std dev = 0,493, 452,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=188 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4010114482754525;  // std dev = 0,483, 180,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=113 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09450894284924923;  // std dev = 2,600, 195,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=7 */
%   | | | else return 0.05410450015776921;  // std dev = 1,972, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03132177433194463;  // std dev = 3,378, 126,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=13 */
%   | | | else return 0.2535927581562083;  // std dev = 10,332, 435,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=188 */
%   else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.14086058139276036;  // std dev = 0,448, 952,000 (wgt'ed) examples reached here.  /* #neg=626 #pos=326 */
%   else return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6648067491240048;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.33519325087599516;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3661054504227072;  // std dev = 0,458, 154,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=108 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09668932299484612;  // std dev = 2,597, 177,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=7 */
%   | | | else return 0.10840346211598148;  // std dev = 1,869, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03490214716972944;  // std dev = 3,356, 115,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=13 */
%   | | | else return 0.14941524709332818;  // std dev = 10,680, 478,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=188 */
%   else return -0.1015963294878362;  // std dev = 4,59e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2878146088405088;  // std dev = 0,447, 160,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=113 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08848586701797181;  // std dev = 2,598, 195,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=7 */
%   | | | else return 0.15537457652462155;  // std dev = 1,779, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03496703510189342;  // std dev = 3,367, 119,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=13 */
%   | | | else return 0.14529321866544667;  // std dev = 10,462, 450,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=188 */
%   else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.12711409017191055;  // std dev = 0,477, 184,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=113 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07861376255103616;  // std dev = 2,598, 190,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=7 */
%   | | | else return 0.06294827123567048;  // std dev = 1,873, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.056219270413833684;  // std dev = 2,876, 111,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=9 */
%   | | | else return 0.3946816940387315;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.09778240790053551;  // std dev = 0,490, 470,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=188 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.40252715219358415;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3531883366523167;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.18648362516894118;  // std dev = 0,454, 152,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=108 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06649549432011866;  // std dev = 2,593, 169,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=7 */
%   | | | else return 8.183125052018627E-4;  // std dev = 1,934, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.029914830278721924;  // std dev = 3,319, 119,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=13 */
%   | | | else return 0.10599599988871272;  // std dev = 10,359, 438,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=188 */
%   else return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.20350892420167874;  // std dev = 0,858, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.08129812443133888;  // std dev = 0,679, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.12259540513418504;  // std dev = 5,706, 153,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=106 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.010125294817377445;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.06328230595596596;  // std dev = 3,119, 203,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=11 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.014049113939097533;  // std dev = 3,294, 107,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=13 */
%   | | | else return 0.09447978812078388;  // std dev = 10,249, 426,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=188 */
%   else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12926268360436952;  // std dev = 0,434, 156,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=113 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0551678757504461;  // std dev = 2,592, 169,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=7 */
%   | | | else return 0.024194553994153645;  // std dev = 1,918, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.018442572590850807;  // std dev = 3,302, 114,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=13 */
%   | | | else return 0.052988507131115886;  // std dev = 10,428, 446,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=188 */
%   else return -0.0684269778442027;  // std dev = 1,18e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07828878428616652;  // std dev = 0,437, 163,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=113 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04992135088112154;  // std dev = 2,590, 169,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=7 */
%   | | | else return 0.15275180800108815;  // std dev = 1,738, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.01634082281848795;  // std dev = 3,306, 113,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=13 */
%   | | | else return 0.048272669171033775;  // std dev = 10,359, 438,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=188 */
%   else return -0.06419184008202625;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */


Results
   AUC ROC   = 0.812771
   AUC PR    = 0.088683
   CLL	      = -0.326608
   Precision = 0.106814 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.166428


Total learning time: 175.386 seconds
Total inference time: 4.306 seconds
AUC ROC: 0.812771


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 11:27:49
{'F1': 0.166428, 'Recall': 0.376623, 'Inference time': 4.306, 'Precision': [0.106814, 0.5], 'Learning time': 175.386, 'AUC PR': 0.088683, 'CLL': -0.326608, 'AUC ROC': 0.812771}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5228548174524508;  // std dev = 0,472, 170,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=113 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09890627962441403;  // std dev = 2,588, 163,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=7 */
%   | | | else return 0.06648226843284567;  // std dev = 1,990, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.032607367421496065;  // std dev = 3,403, 119,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=13 */
%   | | | else return 0.2913286586018122;  // std dev = 10,323, 434,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=188 */
%   else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */


Results
   AUC ROC   = 0.804917
   AUC PR    = 0.077769
   CLL	      = -0.209675
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 12.239 seconds
Total inference time: 1.954 seconds
AUC ROC: 0.804917


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 11:28:03
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.954, 'Precision': [nan, 0.5], 'Learning time': 12.239, 'AUC PR': 0.077769, 'CLL': -0.209675, 'AUC ROC': 0.804917}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.0747713931012758;  // std dev = 13,854, 1.131,000 (wgt'ed) examples reached here.  /* #neg=886 #pos=245 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.06833513891619655;  // std dev = 13,828, 1.116,000 (wgt'ed) examples reached here.  /* #neg=871 #pos=245 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,08e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.06541907390172835;  // std dev = 13,774, 1.086,000 (wgt'ed) examples reached here.  /* #neg=841 #pos=245 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,26e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.05518241323499898;  // std dev = 13,785, 1.092,000 (wgt'ed) examples reached here.  /* #neg=847 #pos=245 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,86e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.049357574019355185;  // std dev = 13,767, 1.082,000 (wgt'ed) examples reached here.  /* #neg=837 #pos=245 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.255172242569491;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.03378332568900133;  // std dev = 13,840, 1.123,000 (wgt'ed) examples reached here.  /* #neg=878 #pos=245 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253504;  // std dev = 2,92e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.020602983385492216;  // std dev = 13,911, 1.166,000 (wgt'ed) examples reached here.  /* #neg=921 #pos=245 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527764;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.02127182758646368;  // std dev = 13,877, 1.145,000 (wgt'ed) examples reached here.  /* #neg=900 #pos=245 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.02689710321000281;  // std dev = 13,798, 1.099,000 (wgt'ed) examples reached here.  /* #neg=854 #pos=245 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,03e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.015933463472759868;  // std dev = 13,857, 1.133,000 (wgt'ed) examples reached here.  /* #neg=888 #pos=245 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.244698
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 4.119 seconds
Total inference time: 2.199 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.718391
   AUC PR    = 0.471136
   CLL	      = -0.244046
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.436782
   F1        = 0.608


Total scoring time: 3.603 seconds
Parameter learned model CLL: -0.244046


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 190], 'false': [13.854, 886, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 190], 'false': [13.828, 871, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.08e-07, 0, 190], 'false': [13.774, 841, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.26e-07, 0, 190], 'false': [13.785, 847, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.86e-07, 0, 190], 'false': [13.767, 837, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 190], 'false': [13.84, 878, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 190], 'false': [13.911, 921, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 190], 'false': [13.877, 900, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 190], 'false': [13.798, 854, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 190], 'false': [13.857, 888, 245]}]]
[{'': [6.133105719192444e-15, 0.16969716869104184]}, {'': [-3.515316692707864e-15, 0.17133885099111268]}, {'': [1.9446432768171164e-15, 0.1747038314527031]}, {'': [5.609547913895527e-16, 0.1740220249835608]}, {'': [7.853367079453739e-16, 0.17516084064219664]}, {'': [-3.4592212135689087e-16, 0.17056938663689059]}, {'': [4.487638331116422e-16, 0.1659696253777043]}, {'': [-1.4023869784738819e-16, 0.16818901241394293]}, {'': [-2.711281491716172e-16, 0.17323217980446015]}, {'': [5.609547913895528e-17, 0.1694803024720124]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4071685429426477;  // std dev = 0,498, 153,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=84 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08795884933162537;  // std dev = 2,918, 167,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=9 */
%   | | | else return 0.42957750652808374;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10439788137988894;  // std dev = 3,102, 267,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=10 */
%   | | | else return 0.07243464938522666;  // std dev = 2,171, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.12876204292191845;  // std dev = 9,662, 473,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=128 */
%   | | | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.3724724558693332;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.3604844438813192;  // std dev = 5,937, 143,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=80 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07171067979882767;  // std dev = 3,857, 265,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=16 */
%   | | | else return 0.08742978949872403;  // std dev = 10,413, 604,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=145 */
%   | else return -0.12873179263343482;  // std dev = 0,080, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,08e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3459819595777104;  // std dev = 0,488, 138,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=84 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.059768201682094825;  // std dev = 3,851, 247,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=16 */
%   | | | else return 0.059439722183857915;  // std dev = 10,521, 649,000 (wgt'ed) examples reached here.  /* #neg=504 #pos=145 */
%   | else return -0.11444764837186801;  // std dev = 0,029, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,26e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.23261693829980218;  // std dev = 0,495, 148,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=84 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06415571149481028;  // std dev = 3,873, 298,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=16 */
%   | | | else return 0.05928386435267699;  // std dev = 10,459, 627,000 (wgt'ed) examples reached here.  /* #neg=482 #pos=145 */
%   | else return -0.1030107137735477;  // std dev = 0,027, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,86e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18675528561368285;  // std dev = 0,494, 146,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=84 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.050654842200191515;  // std dev = 3,860, 264,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=16 */
%   | | | else return 0.05936732243269681;  // std dev = 10,399, 603,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=145 */
%   | else return -0.09486941744323352;  // std dev = 0,060, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.255172242569491;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.12640650389378316;  // std dev = 1,662, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.13358410554191405;  // std dev = 5,884, 141,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=80 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04990722945895908;  // std dev = 3,871, 281,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=16 */
%   | | | else return 0.039677693879840846;  // std dev = 10,469, 631,000 (wgt'ed) examples reached here.  /* #neg=486 #pos=145 */
%   | else return -0.0861410476223895;  // std dev = 0,017, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253504;  // std dev = 2,92e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.04090357340133411;  // std dev = 1,489, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.0887547168556736;  // std dev = 5,963, 144,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=80 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08465141785775783;  // std dev = 3,787, 198,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=17 */
%   | | | else return 0.0282604359746575;  // std dev = 10,502, 738,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=144 */
%   | else return -0.07981913363875134;  // std dev = 0,021, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527764;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.0665276086093586;  // std dev = 6,121, 153,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=84 */
%   | | | else return -0.04670540014825446;  // std dev = 3,865, 280,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=16 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05035219819008779;  // std dev = 3,748, 147,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=17 */
%   | | | else return 0.07468518913311571;  // std dev = 9,583, 453,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=128 */
%   | else return -0.07513319042912203;  // std dev = 0,054, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.03478905671306703;  // std dev = 6,231, 157,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=84 */
%   | | | else return -0.059088669643735284;  // std dev = 3,100, 265,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=10 */
%   | | else return 0.1435387232857288;  // std dev = 0,428, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.048774956831544355;  // std dev = 3,759, 156,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=17 */
%   | | | else return 0.05721551924788488;  // std dev = 9,616, 461,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=128 */
%   | | else return -0.06895301846501621;  // std dev = 0,011, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,03e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.019763216460844415;  // std dev = 6,962, 407,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=94 */
%   | | | else return 0.14755229217930393;  // std dev = 2,075, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return 0.029225977776198186;  // std dev = 0,420, 606,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=145 */
%   | else return -0.06555284449714091;  // std dev = 0,031, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */


Results
   AUC ROC   = 0.89953
   AUC PR    = 0.571705
   CLL	      = -0.232649
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 83.593 seconds
Total inference time: 3.398 seconds
AUC ROC: 0.89953


Results scoring model
   AUC ROC   = 0.868469
   AUC PR    = 0.527277
   CLL	      = -0.229896
   Precision = 0.184552 at threshold = 0.5
   Recall    = 0.62069
   F1        = 0.28451


Total scoring time: 10.021 seconds
Refined model CLL: -0.229896


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.89953
   AUC PR    = 0.571705
   CLL	      = -0.232649
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 101.336 seconds
Total inference time: 3.398 seconds
AUC ROC: 0.89953
Total revision time: 101.336
Best scored revision CLL: -0.229896


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 11:29:51
{'F1': 0.293725, 'Inference time': 3.398, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.89953, 'parameter_0.8': {'F1': 0.637168, 'Inference time': 2.199, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 4.119, 'CLL': -0.244698}, 'AUC PR': 0.571705, 'Recall': 0.714286, 'Learning time': 101.336, 'CLL': -0.232649}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.5453527265687034;  // std dev = 0,464, 211,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=145 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09965697207348383;  // std dev = 3,095, 237,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=10 */
%   | | | else return 0.11901850031690367;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.02926828344353401;  // std dev = 3,884, 151,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=17 */
%   | | | else return 0.28696540165182344;  // std dev = 11,950, 583,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=250 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.5412611843741308;  // std dev = 0,425, 190,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=145 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09123679744243275;  // std dev = 3,100, 257,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=10 */
%   | | | else return 0.04993100583693237;  // std dev = 2,181, 29,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else return 0.1791383987673875;  // std dev = 0,471, 766,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=267 */
%   else return -0.12544463852839152;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.33696777641171305;  // std dev = 0,461, 230,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=152 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07760914658697568;  // std dev = 3,094, 235,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=10 */
%   | | | else return 0.05853571730825803;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.060499680088002744;  // std dev = 3,910, 169,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=17 */
%   | | | else return 0.21810554199974044;  // std dev = 11,973, 586,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=250 */
%   else return -0.11231637819360622;  // std dev = 6,83e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.23079494041981563;  // std dev = 0,473, 239,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=152 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06871781283812212;  // std dev = 3,093, 230,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=10 */
%   | | | else return 0.06814181408506698;  // std dev = 2,135, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0914382405370027;  // std dev = 2,906, 146,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=9 */
%   | | | else return 0.5135845905132254;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0.18648265541000061;  // std dev = 0,496, 577,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=250 */
%   else return -0.10159632948783619;  // std dev = 4,71e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2714304080626101;  // std dev = 0,436, 206,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=152 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06437918675063478;  // std dev = 3,097, 243,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=10 */
%   | | | else return 0.07909534771207957;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.043357695051721476;  // std dev = 3,753, 162,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=17 */
%   | | | else return 0.16256767162312993;  // std dev = 11,773, 561,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=250 */
%   else return -0.09269127618926107;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3505060685817796;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.22651369139327768;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.2160123392251446;  // std dev = 0,434, 194,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=145 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07568236797420683;  // std dev = 2,910, 149,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=9 */
%   | | | else return 0.30682384564927156;  // std dev = 1,884, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.04974846692809572;  // std dev = 3,785, 285,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=16 */
%   | | | else return 0.12218265139700121;  // std dev = 11,839, 569,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=250 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.3154012403564409;  // std dev = 0,167, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.5846324030836666;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.11726614020188343;  // std dev = 0,450, 209,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=145 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.055922564881677087;  // std dev = 3,101, 251,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=10 */
%   | | | else return 0.10027678806267534;  // std dev = 2,068, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03386735476590293;  // std dev = 3,654, 163,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=17 */
%   | | | else return 0.08386519405193088;  // std dev = 11,957, 584,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=250 */
%   else return -0.07877675473109169;  // std dev = 3,33e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08805137303183667;  // std dev = 0,438, 222,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=152 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04713254640771715;  // std dev = 3,094, 229,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=10 */
%   | | | else return 0.07125056150453984;  // std dev = 2,088, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return 0.061729281372812146;  // std dev = 0,465, 706,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=267 */
%   else return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08864313162823756;  // std dev = 0,433, 213,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=152 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.048297725983944904;  // std dev = 3,102, 258,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=10 */
%   | | | else return -0.0059347844131029176;  // std dev = 2,179, 29,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.040898784382398815;  // std dev = 3,664, 168,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=17 */
%   | | | else return 0.06313275689514898;  // std dev = 11,822, 567,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=250 */
%   else return -0.06842697784420267;  // std dev = 3,49e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.1977555471700438;  // std dev = 0,038, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2385481750775127;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.06885720605523736;  // std dev = 0,446, 201,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=145 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.04320623189840896;  // std dev = 3,101, 247,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=10 */
%   | | | else return 0.02793539550134926;  // std dev = 2,134, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.027202864032994607;  // std dev = 3,651, 153,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=17 */
%   | | | else return 0.03681832706709088;  // std dev = 11,942, 582,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=250 */
%   else return -0.06419184008202625;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */


Results
   AUC ROC   = 0.813591
   AUC PR    = 0.09541
   CLL	      = -0.33192
   Precision = 0.106814 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.166428


Total learning time: 217.299 seconds
Total inference time: 4.174 seconds
AUC ROC: 0.813591


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 11:33:33
{'F1': 0.166428, 'Recall': 0.376623, 'Inference time': 4.174, 'Precision': [0.106814, 0.5], 'Learning time': 217.299, 'AUC PR': 0.09541, 'CLL': -0.33192, 'AUC ROC': 0.813591}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.49949914606997303;  // std dev = 0,480, 237,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=152 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09799141577768097;  // std dev = 3,092, 228,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=10 */
%   | | | else return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03287670592612868;  // std dev = 3,892, 156,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=17 */
%   | | | else return 0.2818777486588298;  // std dev = 12,003, 590,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=250 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */


Results
   AUC ROC   = 0.804917
   AUC PR    = 0.077769
   CLL	      = -0.20898
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 14.75 seconds
Total inference time: 1.76 seconds
AUC ROC: 0.804917


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 11:33:50
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.76, 'Precision': [nan, 0.5], 'Learning time': 14.75, 'AUC PR': 0.077769, 'CLL': -0.20898, 'AUC ROC': 0.804917}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.08851542724610427;  // std dev = 15,396, 1.337,000 (wgt'ed) examples reached here.  /* #neg=1.029 #pos=308 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.06438936203645892;  // std dev = 15,526, 1.417,000 (wgt'ed) examples reached here.  /* #neg=1.109 #pos=308 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.05849807328280627;  // std dev = 15,500, 1.400,000 (wgt'ed) examples reached here.  /* #neg=1.092 #pos=308 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.04356742750767116;  // std dev = 15,568, 1.445,000 (wgt'ed) examples reached here.  /* #neg=1.137 #pos=308 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.043880870480153315;  // std dev = 15,503, 1.402,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=308 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.03373453881475564;  // std dev = 15,539, 1.426,000 (wgt'ed) examples reached here.  /* #neg=1.118 #pos=308 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.03666405429564643;  // std dev = 15,460, 1.375,000 (wgt'ed) examples reached here.  /* #neg=1.067 #pos=308 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527747;  // std dev = 9,88e-08, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.03118121357708911;  // std dev = 15,458, 1.374,000 (wgt'ed) examples reached here.  /* #neg=1.066 #pos=308 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.02055520797186186;  // std dev = 15,515, 1.410,000 (wgt'ed) examples reached here.  /* #neg=1.102 #pos=308 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.028854974267164907;  // std dev = 15,400, 1.339,000 (wgt'ed) examples reached here.  /* #neg=1.031 #pos=308 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.248133
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 4.563 seconds
Total inference time: 2.336 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.716912
   AUC PR    = 0.468238
   CLL	      = -0.247608
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433824
   F1        = 0.605128


Total scoring time: 4.402 seconds
Parameter learned model CLL: -0.247608


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 236], 'false': [15.396, 1029, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.526, 1109, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.33e-07, 0, 236], 'false': [15.5, 1092, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.568, 1137, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 236], 'false': [15.503, 1094, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.95e-07, 0, 236], 'false': [15.539, 1118, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.89e-07, 0, 236], 'false': [15.46, 1067, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.88e-08, 0, 236], 'false': [15.458, 1066, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.515, 1102, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 236], 'false': [15.4, 1031, 308]}]]
[{'': [4.937669858671883e-15, 0.1772977714426699]}, {'': [-4.215084025695509e-15, 0.17011498145565104]}, {'': [1.2043097216272884e-15, 0.17160000000000564]}, {'': [-1.5053871520341105e-16, 0.16771638270615627]}, {'': [3.6129291648818656e-16, 0.17142415257601004]}, {'': [3.688198522483571e-16, 0.16933762680257505]}, {'': [3.53765980728016e-16, 0.17382400000000275]}, {'': [4.139814668093804e-17, 0.17391396468835682]}, {'': [-1.6559258672375216e-16, 0.17072380664957643]}, {'': [4.516161456102332e-17, 0.17711209807905567]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.452743529694104;  // std dev = 0,491, 185,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07518439823382142;  // std dev = 4,531, 330,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=22 */
%   | | | else return 0.08321287371843344;  // std dev = 11,679, 782,000 (wgt'ed) examples reached here.  /* #neg=606 #pos=176 */
%   | else return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.293680732713733;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3635732058320154;  // std dev = 6,752, 186,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0674667928559036;  // std dev = 4,534, 336,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=22 */
%   | | | else return 0.08113628555037618;  // std dev = 11,615, 754,000 (wgt'ed) examples reached here.  /* #neg=578 #pos=176 */
%   | else return -0.12544463852839133;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.339857722818358;  // std dev = 0,487, 180,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05929081829723056;  // std dev = 4,533, 333,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=22 */
%   | | | else return 0.0676106916636663;  // std dev = 11,636, 763,000 (wgt'ed) examples reached here.  /* #neg=587 #pos=176 */
%   | else return -0.1123163781936062;  // std dev = 8,16e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.03485854768821849;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.21059153880705958;  // std dev = 6,868, 191,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.051514511654875424;  // std dev = 4,529, 326,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=22 */
%   | | | else return 0.06061661929290923;  // std dev = 11,618, 755,000 (wgt'ed) examples reached here.  /* #neg=579 #pos=176 */
%   | else return -0.10159632948783621;  // std dev = 5,27e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.10792853920010728;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.18588062613063974;  // std dev = 6,678, 183,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05259247360532042;  // std dev = 4,545, 360,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=22 */
%   | | | else return 0.04403117284197604;  // std dev = 11,676, 781,000 (wgt'ed) examples reached here.  /* #neg=605 #pos=176 */
%   | else return -0.09269127618926108;  // std dev = 1,49e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.117721208600266;  // std dev = 0,494, 200,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=110 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0782337895394811;  // std dev = 4,420, 215,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=22 */
%   | | | else return 0.04417223578783715;  // std dev = 11,613, 865,000 (wgt'ed) examples reached here.  /* #neg=689 #pos=176 */
%   | else return -0.08518475138839682;  // std dev = 4,94e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.12335502805350594;  // std dev = 6,712, 188,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=110 */
%   | | | else return -0.046767510648739206;  // std dev = 4,532, 335,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=22 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06347849244661756;  // std dev = 4,418, 195,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=22 */
%   | | | else return 0.05481094050798823;  // std dev = 10,750, 617,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=154 */
%   | else return -0.07877675473109164;  // std dev = 4,83e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527747;  // std dev = 9,88e-08, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.01827597943985183;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.10728356557750628;  // std dev = 6,465, 175,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=106 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06868925321609656;  // std dev = 4,449, 236,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=22 */
%   | | | else return 0.02951496280808123;  // std dev = 11,608, 893,000 (wgt'ed) examples reached here.  /* #neg=717 #pos=176 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.026734361077722733;  // std dev = 7,777, 511,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=122 */
%   | | | else return 0.16183067131727252;  // std dev = 2,692, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.053157105033524936;  // std dev = 4,438, 210,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=22 */
%   | | | else return 0.05222433957672992;  // std dev = 10,671, 591,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=154 */
%   | else return -0.06842697784420267;  // std dev = 3,57e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.04598140383174169;  // std dev = 6,927, 198,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=110 */
%   | | | else return -0.06952875324539083;  // std dev = 3,396, 340,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=12 */
%   | | else return 0.16769142190844696;  // std dev = 0,446, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07715114605456413;  // std dev = 3,336, 179,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=12 */
%   | | | else return 0.5214744141534566;  // std dev = 1,796, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.049801653004660114;  // std dev = 10,625, 577,000 (wgt'ed) examples reached here.  /* #neg=423 #pos=154 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.899996
   AUC PR    = 0.575688
   CLL	      = -0.232192
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 102.917 seconds
Total inference time: 3.265 seconds
AUC ROC: 0.899996


Results scoring model
   AUC ROC   = 0.876675
   AUC PR    = 0.53068
   CLL	      = -0.228965
   Precision = 0.186885 at threshold = 0.5
   Recall    = 0.628676
   F1        = 0.288121


Total scoring time: 12.366 seconds
Refined model CLL: -0.228965


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899996
   AUC PR    = 0.575688
   CLL	      = -0.232192
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 124.248 seconds
Total inference time: 3.265 seconds
AUC ROC: 0.899996
Total revision time: 124.248
Best scored revision CLL: -0.228965


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 11:36:01
{'parameter_1.0': {'F1': 0.637168, 'Inference time': 2.336, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 4.563, 'CLL': -0.248133}, 'F1': 0.293725, 'Inference time': 3.265, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.899996, 'AUC PR': 0.575688, 'Recall': 0.714286, 'Learning time': 124.248, 'CLL': -0.232192}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20028729987938157;  // std dev = 0,474, 1.590,000 (wgt'ed) examples reached here.  /* #neg=1.046 #pos=544 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.831978227183016;  // std dev = 4,21e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16802177281698397;  // std dev = 9,13e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.33197822718301606;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5669179862191597;  // std dev = 6,965, 249,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=183 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.1295602343554459;  // std dev = 3,397, 312,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=12 */
%   | | | else return 0.04474418462982441;  // std dev = 2,806, 47,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.05964738858053063;  // std dev = 4,429, 203,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=22 */
%   | | | else return 0.2801534096647668;  // std dev = 13,016, 685,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=307 */
%   else return -0.12544463852839147;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4338602585627916;  // std dev = 0,453, 279,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=193 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.100794965597618;  // std dev = 3,361, 203,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=12 */
%   | | | else return 0.3972355249474856;  // std dev = 2,101, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11094550368572925;  // std dev = 3,395, 302,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=12 */
%   | | | else return 0.26041279045782234;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else return 0.22893645482334732;  // std dev = 0,496, 698,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=307 */
%   else return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5827017332055502;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.20851924680231768;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.19717348836236925;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3774124885815439;  // std dev = 7,003, 250,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=183 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09902423124355834;  // std dev = 3,402, 308,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=12 */
%   | | | else return 0.063924216953082;  // std dev = 2,660, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.04822168479207699;  // std dev = 4,307, 212,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=22 */
%   | | | else return 0.16789789457667909;  // std dev = 13,351, 732,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=307 */
%   else return -0.10159632948783624;  // std dev = 4,71e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3038084213706811;  // std dev = 0,425, 259,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0924149987149048;  // std dev = 3,411, 350,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=12 */
%   | | | else return 0.05497285233425195;  // std dev = 2,665, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04246419833974965;  // std dev = 4,313, 212,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=22 */
%   | | | else return 0.12767754263423764;  // std dev = 13,435, 745,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=307 */
%   else return -0.09269127618926094;  // std dev = 5,16e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.36525306722354856;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.22468237606227046;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.19809150498385758;  // std dev = 0,450, 258,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=185 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07733826372215244;  // std dev = 3,399, 306,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=12 */
%   | | | else return 0.07611214070945413;  // std dev = 2,609, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03863090495897305;  // std dev = 4,319, 215,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=22 */
%   | | | else return 0.1243750690012038;  // std dev = 13,165, 705,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=307 */
%   else return -0.08518475138839682;  // std dev = 5,37e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.15834273242337749;  // std dev = 0,430, 270,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=193 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07292364283677609;  // std dev = 3,406, 333,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=12 */
%   | | | else return 0.022347661130936267;  // std dev = 2,674, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else return 0.05461325724942084;  // std dev = 0,456, 956,000 (wgt'ed) examples reached here.  /* #neg=627 #pos=329 */
%   else return -0.07877675473109165;  // std dev = 4,47e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.25421978705566367;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.21333736750873142;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.10588521138411724;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.12112951025740012;  // std dev = 7,041, 251,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=183 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05945725917281957;  // std dev = 3,393, 282,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=12 */
%   | | | else return 0.037573361652494794;  // std dev = 2,640, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.030801182917779772;  // std dev = 4,293, 196,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=22 */
%   | | | else return 0.10753067152568682;  // std dev = 12,897, 670,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=307 */
%   else return -0.07324622576333707;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.20908468717708173;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.17971758382118977;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.08991787248951186;  // std dev = 0,445, 256,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=185 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05631311556614556;  // std dev = 3,398, 296,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=12 */
%   | | | else return 0.01698418730376432;  // std dev = 2,664, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.037428945318753126;  // std dev = 4,320, 217,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=22 */
%   | | | else return 0.0661880526221608;  // std dev = 13,092, 695,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=307 */
%   else return -0.06842697784420265;  // std dev = 4,53e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.052793724685660945;  // std dev = 0,440, 278,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05393380768840837;  // std dev = 3,402, 314,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=12 */
%   | | | else return 0.08378183540418419;  // std dev = 2,528, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.030762134496609278;  // std dev = 4,322, 210,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=22 */
%   | | | else return 0.04060276391930095;  // std dev = 13,208, 711,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=307 */
%   else return -0.06419184008202626;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 0.813591
   AUC PR    = 0.09541
   CLL	      = -0.33361
   Precision = 0.106814 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.166428


Total learning time: 301.365 seconds
Total inference time: 4.574 seconds
AUC ROC: 0.813591


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 11:41:07
{'F1': 0.166428, 'Recall': 0.376623, 'Inference time': 4.574, 'Precision': [0.106814, 0.5], 'Learning time': 301.365, 'AUC PR': 0.09541, 'CLL': -0.33361, 'AUC ROC': 0.813591}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.6206489350995088;  // std dev = 6,593, 240,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=183 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.1035124067535234;  // std dev = 3,397, 313,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=12 */
%   | | | else return 0.2029765213064089;  // std dev = 2,560, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else return 0.201572734681971;  // std dev = 0,475, 958,000 (wgt'ed) examples reached here.  /* #neg=629 #pos=329 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */


Results
   AUC ROC   = 0.758743
   AUC PR    = 0.086309
   CLL	      = -0.21241
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 23.579 seconds
Total inference time: 1.623 seconds
AUC ROC: 0.758743


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 11:41:33
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.623, 'Precision': [nan, 0.5], 'Learning time': 23.579, 'AUC PR': 0.086309, 'CLL': -0.21241, 'AUC ROC': 0.758743}


