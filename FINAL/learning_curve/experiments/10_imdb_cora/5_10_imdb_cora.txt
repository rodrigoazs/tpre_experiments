Starting experiment #5 for 10_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048915;  // std dev = 0,000, 725,000 (wgt'ed) examples reached here.  /* #neg=725 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.12544463852839235;  // std dev = 0,000, 696,000 (wgt'ed) examples reached here.  /* #neg=696 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360679;  // std dev = 0,000, 733,000 (wgt'ed) examples reached here.  /* #neg=733 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783617;  // std dev = 4,94e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.10159632948783517;  // std dev = 4,30e-07, 689,000 (wgt'ed) examples reached here.  /* #neg=689 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.09269127618926198;  // std dev = 0,000, 722,000 (wgt'ed) examples reached here.  /* #neg=722 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.08518475138839675;  // std dev = 1,37e-07, 714,000 (wgt'ed) examples reached here.  /* #neg=714 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109277;  // std dev = 0,000, 700,000 (wgt'ed) examples reached here.  /* #neg=700 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333648;  // std dev = 2,53e-07, 722,000 (wgt'ed) examples reached here.  /* #neg=722 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2,58e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06842697784420262;  // std dev = 1,76e-07, 750,000 (wgt'ed) examples reached here.  /* #neg=750 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06419184008202533;  // std dev = 2,21e-07, 679,000 (wgt'ed) examples reached here.  /* #neg=679 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 536
Target train neg examples: 18889

Target test facts examples: 7463
Target test pos	 examples: 162
Target test neg examples: 9107

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0.08037115732173518;  // std dev = 6,944, 279,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=62 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0.07856429413506559;  // std dev = 6,907, 269,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=62 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0.07342118353923575;  // std dev = 6,884, 263,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=62 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0.04198026372751299;  // std dev = 6,978, 289,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=62 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0.04045215987785029;  // std dev = 6,958, 283,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=62 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0.019305741173728724;  // std dev = 7,025, 304,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=62 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0.02118840739751073;  // std dev = 7,004, 297,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=62 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0.048566250697810065;  // std dev = 6,867, 259,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=62 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0.023000898519461067;  // std dev = 6,948, 280,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=62 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0.03543644199365363;  // std dev = 6,875, 261,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=62 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.24615
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 2.332 seconds
Total inference time: 2.199 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.71028
   AUC PR    = 0.460639
   CLL	      = -0.253175
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.420561
   F1        = 0.592105


Total scoring time: 2.375 seconds
Parameter learned model CLL: -0.253175


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.23e-07, 0, 45], 'false': [6.944, 217, 62]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 45], 'false': [6.907, 207, 62]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 45], 'false': [6.884, 201, 62]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 45], 'false': [6.978, 227, 62]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 45], 'false': [6.958, 221, 62]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 45], 'false': [7.025, 242, 62]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.58e-08, 0, 45], 'false': [7.004, 235, 62]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 45], 'false': [6.867, 197, 62]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 45], 'false': [6.948, 218, 62]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.36e-08, 0, 45], 'false': [6.875, 199, 62]}]]
[{'': [1.105288700071267e-15, 0.17283950617284027]}, {'': [-9.473903143468002e-16, 0.17736073299153007]}, {'': [-3.947459643111668e-17, 0.18016741603897923]}, {'': [-4.144832625267251e-16, 0.1685085188156265]}, {'': [1.973729821555834e-17, 0.17108466830650837]}, {'': [-2.960594732333751e-17, 0.16235283933517852]}, {'': [6.908054375445419e-17, 0.16517588908161396]}, {'': [-8.388351741612294e-17, 0.18207838285058248]}, {'': [-3.947459643111668e-17, 0.17239795918367143]}, {'': [1.2335811384723961e-17, 0.18111889138445073]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5525933795439559;  // std dev = 2,764, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07935106490048774;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | | else return 0.04638422921715848;  // std dev = 5,097, 170,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=32 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.22314938806186374;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3772753521725509;  // std dev = 3,286, 45,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.10957663864688043;  // std dev = 0,988, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | | else return 0.5342032373193563;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10315468721341632;  // std dev = 1,692, 71,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=3 */
%   | | | else return 0.25240827621165896;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.07015021169552951;  // std dev = 4,596, 124,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=27 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.39360645076638723;  // std dev = 0,450, 40,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09956654713638699;  // std dev = 0,989, 49,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
%   | | | else return 0.4600018918693327;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0861578983525106;  // std dev = 1,688, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | | else return 0.15108783400240186;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.10635940231277241;  // std dev = 0,439, 103,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.26623799034378626;  // std dev = 0,472, 42,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=27 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06666728319797774;  // std dev = 1,532, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | | else return 0.03524060450876084;  // std dev = 5,014, 167,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=32 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then return -0.23557845491588192;  // std dev = 0,152, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11761202702781871;  // std dev = 0,028, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1936170809110545;  // std dev = 0,468, 43,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07070958037756932;  // std dev = 2,111, 76,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=5 */
%   | | | else return 0.03299928227570281;  // std dev = 4,817, 156,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=30 */
%   | else return -0.10282534669137167;  // std dev = 0,079, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.007944141375480543;  // std dev = 3,856, 109,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | | else return 0.4665537268108528;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02435124709601297;  // std dev = 1,460, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | | else return 0.06659954935836025;  // std dev = 4,507, 109,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=27 */
%   | else return -0.09837001181892319;  // std dev = 0,064, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09656824811063877;  // std dev = 0,489, 46,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=27 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0642144942256644;  // std dev = 2,067, 71,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=5 */
%   | | | else return 0.029482801317063625;  // std dev = 4,770, 152,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=30 */
%   | else return -0.09149117059789372;  // std dev = 0,117, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.11725241542029116;  // std dev = 3,118, 43,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | | | else return -0.053439020009496845;  // std dev = 1,490, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04416014253897491;  // std dev = 2,058, 58,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
%   | | | else return 0.06382005411134058;  // std dev = 4,471, 104,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=27 */
%   | else return -0.08538890529960734;  // std dev = 0,109, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.15444140415902072;  // std dev = 1,518, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.027974273127347328;  // std dev = 3,583, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03608487904257949;  // std dev = 1,480, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | | else return 0.04396018121504849;  // std dev = 4,500, 108,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | else return -0.0805360588669543;  // std dev = 0,142, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10612625986319024;  // std dev = 0,467, 42,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=27 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.04514278823523608;  // std dev = 1,510, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | | | else return 0.022065371534090827;  // std dev = 4,920, 157,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=32 */
%   | else return -0.0655662122767003;  // std dev = 0,037, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.786885
   AUC PR    = 0.483753
   CLL	      = -0.339171
   Precision = 0.120729 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.203846


Total learning time: 30.42 seconds
Total inference time: 4.328 seconds
AUC ROC: 0.786885


Results scoring model
   AUC ROC   = 0.892758
   AUC PR    = 0.565529
   CLL	      = -0.230316
   Precision = 0.218182 at threshold = 0.5
   Recall    = 0.672897
   F1        = 0.329519


Total scoring time: 8.396 seconds
Refined model CLL: -0.230316


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.786885
   AUC PR    = 0.483753
   CLL	      = -0.339171
   Precision = 0.120729 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.203846


Total learning time: 43.523 seconds
Total inference time: 4.328 seconds
AUC ROC: 0.786885
Total revision time: 43.523
Best scored revision CLL: -0.230316


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 12:01:11
{'parameter_0.2': {'F1': 0.578947, 'Inference time': 2.199, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 2.332, 'CLL': -0.24615}, 'F1': 0.203846, 'Inference time': 4.328, 'Precision': [0.120729, 0.5], 'AUC ROC': 0.786885, 'AUC PR': 0.483753, 'Recall': 0.654321, 'Learning time': 43.523, 'CLL': -0.339171}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6340110040650297;  // std dev = 3,176, 58,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=45 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09837280403092248;  // std dev = 1,694, 69,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=3 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.07366924671866958;  // std dev = 1,672, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | | else return 0.20889520375622908;  // std dev = 5,524, 134,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=47 */
%   else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.29279418357704884;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.5518929270354548;  // std dev = 3,078, 57,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordvenue(G, C) )
%   | | then return -0.10821205087100313;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | | else return 0.36880054233849;  // std dev = 0,996, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then if ( haswordvenue(J, H) )
%   | | then return -0.08319049639311332;  // std dev = 0,211, 64,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=3 */
%   | | else return 0.07373365448410585;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.22572946657822746;  // std dev = 0,489, 119,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=47 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.39298039743790014;  // std dev = 0,440, 65,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=48 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07587388763765485;  // std dev = 1,694, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   | | | else return 0.10221800267471123;  // std dev = 1,189, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.0698774549281519;  // std dev = 1,620, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   | | | else return 0.16097302610054712;  // std dev = 5,466, 129,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=47 */
%   else return -0.12492911925501146;  // std dev = 0,092, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.6583784750389707;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.29275970626879394;  // std dev = 3,436, 61,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.06874145848745693;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.06898069015839085;  // std dev = 1,610, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.05497891794892241;  // std dev = 1,616, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | | else return 0.1393857430403162;  // std dev = 5,441, 127,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   else return -0.10296635584720801;  // std dev = 0,019, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return -5.754975342200375E-4;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.20790310021727662;  // std dev = 3,513, 62,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05152464643352987;  // std dev = 1,670, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | | | else return 0.13727650776701902;  // std dev = 1,161, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03720514963401148;  // std dev = 1,610, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | | else return 0.138606031988305;  // std dev = 5,333, 119,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=47 */
%   else return -0.09543668337728094;  // std dev = 0,051, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.19575545168859526;  // std dev = 0,428, 63,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=48 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordvenue(F, C) )
%   | | then return -0.08438930615112561;  // std dev = 0,149, 45,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
%   | | else return 0.2468292028351881;  // std dev = 1,085, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then if ( author(I, H), title(I, B) )
%   | | then return 0.10717792836408688;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(J, G) )
%   | | | then return -0.07713917291323177;  // std dev = 0,987, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | | else return 0.07114568064468728;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.04501782114004762;  // std dev = 0,470, 143,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   | | else return -0.08389016646519966;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.45078934084489414;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15922403176214783;  // std dev = 3,176, 58,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=45 */
%   | | else return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordvenue(G, C) )
%   | | then return -0.06379212264833452;  // std dev = 0,177, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | else return 0.3098971117260069;  // std dev = 0,991, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then if ( haswordvenue(J, H) )
%   | | then return -0.05098407910922957;  // std dev = 0,213, 61,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=3 */
%   | | else return 0.10653135770302809;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.08922456226876792;  // std dev = 0,486, 123,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=47 */
%   | | else return -0.07766398025919917;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.20346133381340673;  // std dev = 0,350, 56,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07827892434517882;  // std dev = 1,003, 58,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   | | | else return 0.25487657709826456;  // std dev = 0,995, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.0310357581952993;  // std dev = 2,060, 60,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=5 */
%   | | | else return 0.06732894175399627;  // std dev = 5,402, 124,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=47 */
%   else return -0.08217962400220026;  // std dev = 0,131, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.051778139495496874;  // std dev = 0,433, 64,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=48 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.041464424661913475;  // std dev = 1,663, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | | else return 0.15968664289953846;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.027861933962959957;  // std dev = 1,466, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | | else return 0.04085925121321313;  // std dev = 5,454, 128,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=47 */
%   else return -0.06926581336362822;  // std dev = 0,019, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.038329569880938386;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06702016920244289;  // std dev = 3,176, 58,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=45 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.28660544702546875;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06013750264237283;  // std dev = 1,562, 69,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.030545304371848988;  // std dev = 1,491, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | | else return 0.026164863364560274;  // std dev = 5,478, 130,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=47 */
%   else return -0.06385057711004331;  // std dev = 0,007, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.753178
   AUC PR    = 0.047438
   CLL	      = -0.500713
   Precision = 0.067285 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.113281


Total learning time: 90.541 seconds
Total inference time: 5.115 seconds
AUC ROC: 0.753178


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 12:02:47
{'F1': 0.113281, 'Recall': 0.358025, 'Inference time': 5.115, 'Precision': [0.067285, 0.5], 'Learning time': 90.541, 'AUC PR': 0.047438, 'CLL': -0.500713, 'AUC ROC': 0.753178}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.6323424834866094;  // std dev = 0,418, 62,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=48 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordvenue(F, C) )
%   | | then if ( author(G, D), title(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11327963632905916;  // std dev = 0,986, 35,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
%   | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then if ( haswordvenue(J, H) )
%   | | then if ( author(K, I), title(K, B) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12399392204334482;  // std dev = 0,991, 56,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
%   | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(A, L), haswordtitle(B, L) )
%   | | then return 0.23414893509951282;  // std dev = 0,484, 125,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=47 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.679585
   AUC PR    = 0.041694
   CLL	      = -0.222358
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.931 seconds
Total inference time: 2.1 seconds
AUC ROC: 0.679585


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 12:02:59
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.1, 'Precision': [nan, 0.5], 'Learning time': 9.931, 'AUC PR': 0.041694, 'CLL': -0.222358, 'AUC ROC': 0.679585}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.0754601689853295;  // std dev = 9,610, 543,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=118 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.06364891923975236;  // std dev = 9,625, 549,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=118 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.05297017372542304;  // std dev = 9,639, 555,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=118 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.04727858794450007;  // std dev = 9,630, 551,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=118 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.03492604340143256;  // std dev = 9,664, 566,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=118 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.0265960559610679;  // std dev = 9,684, 575,000 (wgt'ed) examples reached here.  /* #neg=457 #pos=118 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.02230430931791034;  // std dev = 9,686, 576,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=118 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.0318033125377389;  // std dev = 9,608, 542,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=118 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.018079212424094167;  // std dev = 9,662, 565,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=118 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.026983773242768027;  // std dev = 9,590, 535,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=118 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.234261
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 2.731 seconds
Total inference time: 2.126 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.724299
   AUC PR    = 0.487172
   CLL	      = -0.240535
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.448598
   F1        = 0.619355


Total scoring time: 2.922 seconds
Parameter learned model CLL: -0.240535


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.37e-07, 0, 96], 'false': [9.61, 425, 118]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.88e-07, 0, 96], 'false': [9.625, 431, 118]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.09e-07, 0, 96], 'false': [9.639, 437, 118]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.23e-07, 0, 96], 'false': [9.63, 433, 118]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 96], 'false': [9.664, 448, 118]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 96], 'false': [9.684, 457, 118]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.26e-07, 0, 96], 'false': [9.686, 458, 118]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.6e-08, 0, 96], 'false': [9.608, 424, 118]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 96], 'false': [9.662, 447, 118]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.65e-08, 0, 96], 'false': [9.59, 417, 118]}]]
[{'': [1.1842378929335002e-15, 0.17008706151284358]}, {'': [3.7007434154171886e-16, 0.16873865713782976]}, {'': [1.7393494052460785e-15, 0.1674084895706569]}, {'': [5.181040781584064e-16, 0.16829325331603057]}, {'': [1.850371707708594e-17, 0.16501641923359794]}, {'': [-4.625929269271486e-17, 0.16310321361058527]}, {'': [1.6653345369377348e-16, 0.16289303626543117]}, {'': [6.013708050052931e-17, 0.1703135850546751]}, {'': [-6.013708050052931e-17, 0.16523141984493658]}, {'': [1.3877787807814457e-17, 0.17191370425364835]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4630872067044512;  // std dev = 0,489, 81,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=49 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07983556102451866;  // std dev = 2,739, 129,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=8 */
%   | | | else return 0.06353614048671812;  // std dev = 6,962, 297,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=61 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.3823432387676547;  // std dev = 4,480, 83,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=49 */
%   | | | else return -0.11194530899739652;  // std dev = 1,698, 83,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06461115231377956;  // std dev = 2,731, 118,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=8 */
%   | | | else return 0.127749314430253;  // std dev = 6,473, 209,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=58 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3345332231631942;  // std dev = 0,487, 80,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=49 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06346502595110018;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=8 */
%   | | | else return 0.04060731763250149;  // std dev = 6,935, 306,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=61 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19467125597485718;  // std dev = 0,498, 90,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=49 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06146511708239944;  // std dev = 2,747, 141,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=8 */
%   | | | else return 0.05396230183680567;  // std dev = 6,852, 279,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=61 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18123693807035804;  // std dev = 0,494, 85,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=49 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10755950218379136;  // std dev = 1,697, 79,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=3 */
%   | | | else return 0.052803479009360624;  // std dev = 7,105, 315,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=66 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18098387621611553;  // std dev = 0,485, 79,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=49 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09705352783100411;  // std dev = 1,699, 82,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=3 */
%   | | | else return 0.03911708324586593;  // std dev = 7,129, 327,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=66 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15214445854971592;  // std dev = 0,481, 77,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=49 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0854260352209768;  // std dev = 1,698, 83,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=3 */
%   | | | else return 0.04187471938450969;  // std dev = 7,091, 313,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=66 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.041189213690317174;  // std dev = 5,090, 193,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=52 */
%   | | | else return 0.1110192604095755;  // std dev = 1,942, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07621083760664923;  // std dev = 1,698, 78,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=3 */
%   | | | else return 0.05797572016196515;  // std dev = 6,556, 224,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.057816972289808366;  // std dev = 4,591, 86,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=49 */
%   | | | else return -0.059682451436494595;  // std dev = 2,710, 128,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06661897121542361;  // std dev = 1,697, 74,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=3 */
%   | | | else return 0.03327387343639539;  // std dev = 6,623, 238,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then if ( haswordvenue(G, D) )
%   | | | then return 0.09465650584607024;  // std dev = 0,805, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.47361753610698354;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( author(H, E), title(H, B) )
%   | | | then return -0.31366645350893735;  // std dev = 0,673, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.027615223317605877;  // std dev = 4,690, 164,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return -0.08197728019482646;  // std dev = 1,706, 105,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=3 */
%   | | | else return 0.3884109980287444;  // std dev = 1,519, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( haswordtitle(A, L), haswordtitle(B, L) )
%   | | | then return 0.06692165368282747;  // std dev = 6,449, 205,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 6,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.848385
   AUC PR    = 0.484137
   CLL	      = -0.255535
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 53.132 seconds
Total inference time: 4.276 seconds
AUC ROC: 0.848385


Results scoring model
   AUC ROC   = 0.890696
   AUC PR    = 0.580296
   CLL	      = -0.223633
   Precision = 0.217718 at threshold = 0.5
   Recall    = 0.67757
   F1        = 0.329545


Total scoring time: 7.572 seconds
Refined model CLL: -0.223633


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.848385
   AUC PR    = 0.484137
   CLL	      = -0.255535
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 66.357 seconds
Total inference time: 4.276 seconds
AUC ROC: 0.848385
Total revision time: 66.357
Best scored revision CLL: -0.223633


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 12:04:13
{'F1': 0.216769, 'Inference time': 4.276, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.848385, 'AUC PR': 0.484137, 'parameter_0.4': {'F1': 0.578947, 'Inference time': 2.126, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 2.731, 'CLL': -0.234261}, 'Recall': 0.654321, 'Learning time': 66.357, 'CLL': -0.255535}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.6602322684328452;  // std dev = 3,904, 96,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=77 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.12950538588814198;  // std dev = 0,994, 81,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=1 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordtitle(A, K), haswordauthor(L, K) )
%   | | | then return -0.06777699082641359;  // std dev = 2,722, 108,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=8 */
%   | | | else return 0.29588478415611247;  // std dev = 8,076, 265,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=116 */
%   else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.4183313503359764;  // std dev = 0,471, 124,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=82 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.10681259230246774;  // std dev = 1,710, 109,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=3 */
%   | | | else return 0.1607298951959666;  // std dev = 1,878, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.08746338748270607;  // std dev = 1,661, 72,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=3 */
%   | | | else return 0.2266381483164746;  // std dev = 8,284, 284,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=116 */
%   else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.3625997255039944;  // std dev = 0,458, 119,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=82 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09558098466006423;  // std dev = 1,709, 114,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=3 */
%   | | | else return 0.2047175206889322;  // std dev = 1,790, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.07952768569201141;  // std dev = 1,665, 75,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | | else return 0.21006429191895404;  // std dev = 8,145, 271,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=116 */
%   else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.5401434076881805;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.41124120792678875;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.2778740210297202;  // std dev = 4,925, 115,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=79 */
%   | | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0873108887218217;  // std dev = 1,711, 120,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=3 */
%   | | | else return 0.11362988007259084;  // std dev = 1,874, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.07267834260634508;  // std dev = 1,666, 80,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=3 */
%   | | | else return 0.15839030028883197;  // std dev = 8,243, 280,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=116 */
%   else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.087375556268942;  // std dev = 0,423, 603,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=214 */
%   else return -0.09269127618926101;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.14133817211742525;  // std dev = 0,467, 129,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=82 */
%   | | else return 0.30198190576935735;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.04697569088886391;  // std dev = 0,410, 470,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=127 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.25740708621398695;  // std dev = 0,660, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.1890732181420691;  // std dev = 4,553, 107,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=77 */
%   | | | else return 0.24234609726001563;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0903214929929361;  // std dev = 1,710, 112,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=3 */
%   | | | else return 0.04341517776410727;  // std dev = 1,914, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return 0.0719160669741033;  // std dev = 0,453, 346,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=119 */
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordvenue(G, C) )
%   | | | then return 0.17040732743623851;  // std dev = 4,338, 110,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=82 */
%   | | | else return 0.2006549517827975;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(H, D) )
%   | | | then return -0.10844685269511675;  // std dev = 0,993, 68,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=1 */
%   | | | else return 0.2545366704697417;  // std dev = 1,077, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return -0.07975886222568893;  // std dev = 1,708, 107,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=3 */
%   | | | else return 0.3954640387529005;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.07869233648883947;  // std dev = 0,492, 283,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=116 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.021444046487278677;  // std dev = 0,410, 616,000 (wgt'ed) examples reached here.  /* #neg=402 #pos=214 */
%   else return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.22070204040707597;  // std dev = 1,015, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.13269380512762835;  // std dev = 4,325, 109,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=84 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07521435748524408;  // std dev = 1,710, 109,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=3 */
%   | | | else return 0.0021428055886444273;  // std dev = 1,817, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10156144591151277;  // std dev = 0,994, 80,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=1 */
%   | | | else return 0.4709932196260968;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.08234543818370664;  // std dev = 0,496, 266,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=116 */
%   else return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.760201
   AUC PR    = 0.051659
   CLL	      = -0.498326
   Precision = 0.06988 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.116935


Total learning time: 149.628 seconds
Total inference time: 5.184 seconds
AUC ROC: 0.760201


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 12:06:48
{'F1': 0.116935, 'Recall': 0.358025, 'Inference time': 5.184, 'Precision': [0.06988, 0.5], 'Learning time': 149.628, 'AUC PR': 0.051659, 'CLL': -0.498326, 'AUC ROC': 0.760201}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.5711924133603803;  // std dev = 0,452, 115,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=82 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordvenue(F, C) )
%   | | then if ( author(G, D), venue(G, F) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0.039967116917694;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then if ( haswordvenue(J, H) )
%   | | then if ( author(K, I), title(K, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11621003925946202;  // std dev = 1,710, 117,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=3 */
%   | | else return 0.3126943896449669;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( haswordtitle(A, L), haswordtitle(B, L) )
%   | | then return 0.24098721892789132;  // std dev = 0,486, 303,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=116 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.616932
   AUC PR    = 0.038725
   CLL	      = -0.222382
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.955 seconds
Total inference time: 2.134 seconds
AUC ROC: 0.616932


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 12:07:01
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.134, 'Precision': [nan, 0.5], 'Learning time': 10.955, 'AUC PR': 0.038725, 'CLL': -0.222382, 'AUC ROC': 0.616932}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995101;  // std dev = 8,51e-07, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.08299365559640201;  // std dev = 11,845, 805,000 (wgt'ed) examples reached here.  /* #neg=624 #pos=181 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.07773012612609502;  // std dev = 11,806, 787,000 (wgt'ed) examples reached here.  /* #neg=606 #pos=181 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,06e-07, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.06089321838197021;  // std dev = 11,856, 810,000 (wgt'ed) examples reached here.  /* #neg=629 #pos=181 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158309;  // std dev = 4,21e-07, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.03919606304639033;  // std dev = 11,956, 861,000 (wgt'ed) examples reached here.  /* #neg=680 #pos=181 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,35e-07, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.041681842466898066;  // std dev = 11,895, 829,000 (wgt'ed) examples reached here.  /* #neg=648 #pos=181 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949017;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.02742274864069068;  // std dev = 11,956, 861,000 (wgt'ed) examples reached here.  /* #neg=680 #pos=181 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253526;  // std dev = 2,31e-07, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.039886944462821226;  // std dev = 11,830, 798,000 (wgt'ed) examples reached here.  /* #neg=617 #pos=181 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.02659195389819297;  // std dev = 11,885, 824,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=181 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.023217928830405975;  // std dev = 11,878, 821,000 (wgt'ed) examples reached here.  /* #neg=640 #pos=181 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.016862776710450573;  // std dev = 11,899, 831,000 (wgt'ed) examples reached here.  /* #neg=650 #pos=181 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.241144
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 3.328 seconds
Total inference time: 2.28 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.718069
   AUC PR    = 0.474954
   CLL	      = -0.247706
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.436137
   F1        = 0.607375


Total scoring time: 3.326 seconds
Parameter learned model CLL: -0.247706


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.51e-07, 0, 140], 'false': [11.845, 624, 181]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 140], 'false': [11.806, 606, 181]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.06e-07, 0, 140], 'false': [11.856, 629, 181]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-07, 0, 140], 'false': [11.956, 680, 181]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.35e-07, 0, 140], 'false': [11.895, 648, 181]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 140], 'false': [11.956, 680, 181]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.31e-07, 0, 140], 'false': [11.83, 617, 181]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 140], 'false': [11.885, 643, 181]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 140], 'false': [11.878, 640, 181]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.96e-08, 0, 140], 'false': [11.899, 650, 181]}]]
[{'': [5.1768113605378725e-15, 0.17428957216156987]}, {'': [-2.1316282072803005e-15, 0.17709313833918153]}, {'': [1.827109891954543e-15, 0.17352385307118176]}, {'': [1.2688263138573218e-15, 0.1660279420116187]}, {'': [3.9333615729576973e-16, 0.17066502144080972]}, {'': [-1.1419436824715895e-16, 0.1660279420116295]}, {'': [3.806478941571965e-16, 0.17537107178975211]}, {'': [-2.91830052187184e-16, 0.17140959326986216]}, {'': [-4.123685520036296e-17, 0.17185898187201648]}, {'': [2.5376526277146434e-17, 0.17036872919264132]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995101;  // std dev = 8,51e-07, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.48542166237224055;  // std dev = 0,484, 110,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=69 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10075517448952874;  // std dev = 2,399, 146,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=6 */
%   | | | else return 0.07014893509951083;  // std dev = 9,139, 500,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=106 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.2882782689511117;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4051006988576527;  // std dev = 5,029, 107,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=66 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09295069078741854;  // std dev = 3,219, 194,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=11 */
%   | | | else return 0.07109893059667098;  // std dev = 8,849, 468,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=101 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,06e-07, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.2656390099596036;  // std dev = 5,563, 125,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=69 */
%   | | | else return -0.09481187374875615;  // std dev = 2,395, 141,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=6 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0728329637619982;  // std dev = 3,205, 166,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=11 */
%   | | | else return 0.1211355095631511;  // std dev = 8,264, 338,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=95 */
%   | else return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158309;  // std dev = 4,21e-07, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.20426656722232228;  // std dev = 0,498, 126,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=69 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08554921447504175;  // std dev = 2,397, 148,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=6 */
%   | | | else return 0.04896450036258178;  // std dev = 9,035, 505,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=106 */
%   | else return -0.10159632948783617;  // std dev = 5,05e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,35e-07, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.15896134093430755;  // std dev = 1,533, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.19344293423776998;  // std dev = 5,235, 113,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=66 */
%   | | else return 0.013616636382249742;  // std dev = 0,372, 646,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=112 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949017;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.023603552815508293;  // std dev = 1,381, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.08661811036690532;  // std dev = 5,598, 126,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=66 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.11181364184846983;  // std dev = 1,978, 179,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=4 */
%   | | | else return 0.14837464340994586;  // std dev = 2,227, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10179740644788371;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=2 */
%   | | | else return 0.3890178040475568;  // std dev = 1,390, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.13916401491222755;  // std dev = 8,006, 292,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=95 */
%   | | | else return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253526;  // std dev = 2,31e-07, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12205567115781603;  // std dev = 0,493, 120,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=69 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07124279071735412;  // std dev = 3,166, 194,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=11 */
%   | | | else return 0.034835516931005665;  // std dev = 8,679, 468,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=101 */
%   | else return -0.07958657705071824;  // std dev = 0,046, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08435389098966002;  // std dev = 0,492, 122,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=69 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.056572599225871406;  // std dev = 3,156, 173,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=11 */
%   | | | else return 0.04815526788428673;  // std dev = 8,565, 430,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=101 */
%   | else return -0.07655502228518125;  // std dev = 0,084, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04100530948482424;  // std dev = 5,971, 260,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=71 */
%   | | | else return 0.2307492327308874;  // std dev = 1,527, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.05431426994636111;  // std dev = 3,168, 178,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=11 */
%   | | | else return 0.04168701262875452;  // std dev = 8,362, 360,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=95 */
%   | else return -0.07005128998434708;  // std dev = 0,069, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.09626019705909224;  // std dev = 1,463, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.10456664397432468;  // std dev = 5,107, 109,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=66 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07517553757548408;  // std dev = 2,251, 138,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=6 */
%   | | | else return 0.019629484850029078;  // std dev = 8,897, 512,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=106 */
%   | else return -0.06578296642113629;  // std dev = 0,070, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */


Results
   AUC ROC   = 0.853931
   AUC PR    = 0.489198
   CLL	      = -0.267198
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 65.535 seconds
Total inference time: 4.298 seconds
AUC ROC: 0.853931


Results scoring model
   AUC ROC   = 0.886774
   AUC PR    = 0.54679
   CLL	      = -0.22683
   Precision = 0.219591 at threshold = 0.5
   Recall    = 0.635514
   F1        = 0.3264


Total scoring time: 9.669 seconds
Refined model CLL: -0.22683


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853931
   AUC PR    = 0.489198
   CLL	      = -0.267198
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 81.85799999999999 seconds
Total inference time: 4.298 seconds
AUC ROC: 0.853931
Total revision time: 81.85799999999999
Best scored revision CLL: -0.22683


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 12:08:31
{'F1': 0.216769, 'Inference time': 4.298, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853931, 'AUC PR': 0.489198, 'parameter_0.6': {'F1': 0.578947, 'Inference time': 2.28, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 3.328, 'CLL': -0.241144}, 'Recall': 0.654321, 'Learning time': 81.85799999999999, 'CLL': -0.267198}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.5456489350995097;  // std dev = 0,464, 160,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=110 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.11700634440359346;  // std dev = 1,975, 161,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=4 */
%   | | | else return 0.09148226843284571;  // std dev = 2,317, 30,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.09460697041229868;  // std dev = 2,391, 127,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=6 */
%   | | | else return 0.2923290736676374;  // std dev = 10,314, 433,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=188 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.27805214248586196;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.5072188091525286;  // std dev = 5,333, 144,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=105 */
%   | | else return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10255474422450381;  // std dev = 1,974, 156,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=4 */
%   | | | else return 0.16482574653870843;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.07854616437185359;  // std dev = 2,385, 115,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=6 */
%   | | | else return 0.2549106773119178;  // std dev = 10,295, 431,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=188 */
%   else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.2263732246951209;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.41855940085981364;  // std dev = 5,293, 149,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=111 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.10834263756353472;  // std dev = 1,412, 123,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=2 */
%   | | | else return 0.21331865004921444;  // std dev = 1,628, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09200715017080002;  // std dev = 1,975, 159,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=4 */
%   | | | else return 0.15733412373552474;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return 0.22013024892118557;  // std dev = 0,497, 425,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=188 */
%   else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.6400623413143854;  // std dev = 0,107, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.41858791001139845;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.2601284603083892;  // std dev = 5,798, 156,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=105 */
%   | | | else return 0.45111126200851365;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09607817815440758;  // std dev = 1,408, 122,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=2 */
%   | | | else return 0.29826872893507966;  // std dev = 1,489, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordauthor(L, K) )
%   | | | then return -0.05365323119683166;  // std dev = 3,059, 172,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=11 */
%   | | | else return 0.18186990285797058;  // std dev = 10,220, 423,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=188 */
%   else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5644864140663175;  // std dev = 0,101, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3799413345043408;  // std dev = 2,58e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.265756518863347;  // std dev = 5,116, 140,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=105 */
%   | | | else return 0.34359981030523734;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07966156276164277;  // std dev = 1,977, 172,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=4 */
%   | | | else return 0.032613649628821885;  // std dev = 2,324, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.06353175238746345;  // std dev = 2,280, 132,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=6 */
%   | | | else return 0.14307950708139794;  // std dev = 10,239, 425,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=188 */
%   else return -0.09269127618926107;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.12684624814677495;  // std dev = 0,457, 165,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=110 */
%   | | else return 0.27073576496179536;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.06926422570099086;  // std dev = 1,975, 148,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=4 */
%   | | | else return 0.14721061852166756;  // std dev = 2,128, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.053115966516268646;  // std dev = 2,268, 128,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=6 */
%   | | | else return 0.10811689084180214;  // std dev = 10,277, 429,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=188 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return -0.04643232790909845;  // std dev = 1,262, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.10807223237127382;  // std dev = 5,678, 153,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=105 */
%   | | else return 0.22069366770595247;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.062060738871081655;  // std dev = 1,977, 136,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=4 */
%   | | | else return 0.22261841953467043;  // std dev = 1,964, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04726850272746416;  // std dev = 2,275, 121,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=6 */
%   | | | else return 0.0921123006408164;  // std dev = 10,200, 421,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=188 */
%   else return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.06316844506550913;  // std dev = 0,464, 166,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=110 */
%   | | else return 0.18507691288398276;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.05992358971706694;  // std dev = 1,979, 152,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=4 */
%   | | | else return 0.1303272383639467;  // std dev = 2,059, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04312566077027652;  // std dev = 2,281, 119,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=6 */
%   | | | else return 0.0686532774930002;  // std dev = 10,220, 423,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=188 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.03253646443422269;  // std dev = 1,138, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.14189993241415824;  // std dev = 4,936, 138,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=105 */
%   | | else return 0.15877124565815182;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordvenue(G, C) )
%   | | then return -0.07473877868360011;  // std dev = 0,127, 132,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=2 */
%   | | else return 0.1065424597304618;  // std dev = 0,409, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then if ( haswordvenue(J, H) )
%   | | then return -0.0584357850866097;  // std dev = 0,145, 186,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=4 */
%   | | else return 0.08750914252446616;  // std dev = 0,449, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.012273685119480023;  // std dev = 0,491, 465,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=188 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.05342999150119117;  // std dev = 0,447, 158,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=110 */
%   | | else return 0.13869511845746707;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.0702983931896425;  // std dev = 1,457, 123,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=2 */
%   | | | else return 0.0973796912423164;  // std dev = 1,703, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.02986832537036003;  // std dev = 2,879, 158,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=11 */
%   | | | else return 0.016421986987676714;  // std dev = 10,520, 457,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=188 */
%   else return -0.06589033003290115;  // std dev = 0,032, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */


Results
   AUC ROC   = 0.754205
   AUC PR    = 0.068382
   CLL	      = -0.510446
   Precision = 0.06988 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.116935


Total learning time: 354.713 seconds
Total inference time: 5.246 seconds
AUC ROC: 0.754205


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 12:14:31
{'F1': 0.116935, 'Recall': 0.358025, 'Inference time': 5.246, 'Precision': [0.06988, 0.5], 'Learning time': 354.713, 'AUC PR': 0.068382, 'CLL': -0.510446, 'AUC ROC': 0.754205}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.541378748764106;  // std dev = 0,465, 161,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=110 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.12164904469846795;  // std dev = 1,980, 198,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=4 */
%   | | | else return 0.16249676118646889;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.0960495381829304;  // std dev = 2,393, 131,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=6 */
%   | | | else return 0.3005018762759787;  // std dev = 10,239, 425,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=188 */
%   else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */


Results
   AUC ROC   = 0.759501
   AUC PR    = 0.049948
   CLL	      = -0.213627
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 17.819 seconds
Total inference time: 2.141 seconds
AUC ROC: 0.759501


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 12:14:51
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.141, 'Precision': [nan, 0.5], 'Learning time': 17.819, 'AUC PR': 0.049948, 'CLL': -0.213627, 'AUC ROC': 0.759501}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else return 0.07316283686039718;  // std dev = 13,495, 1.079,000 (wgt'ed) examples reached here.  /* #neg=847 #pos=232 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else return 0.062242705619349005;  // std dev = 13,510, 1.088,000 (wgt'ed) examples reached here.  /* #neg=856 #pos=232 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,19e-07, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else return 0.05910402580576903;  // std dev = 13,467, 1.063,000 (wgt'ed) examples reached here.  /* #neg=831 #pos=232 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 2,92e-07, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else return 0.049809607718495;  // std dev = 13,478, 1.069,000 (wgt'ed) examples reached here.  /* #neg=837 #pos=232 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 4,04e-07, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else return 0.03250632399894235;  // std dev = 13,566, 1.122,000 (wgt'ed) examples reached here.  /* #neg=890 #pos=232 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694911;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else return 0.025230818391010712;  // std dev = 13,587, 1.136,000 (wgt'ed) examples reached here.  /* #neg=904 #pos=232 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 2,92e-07, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else return 0.02515288795692208;  // std dev = 13,556, 1.116,000 (wgt'ed) examples reached here.  /* #neg=884 #pos=232 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527755;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else return 0.023435953493420883;  // std dev = 13,538, 1.105,000 (wgt'ed) examples reached here.  /* #neg=873 #pos=232 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367153;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else return 0.021964936928058246;  // std dev = 13,520, 1.094,000 (wgt'ed) examples reached here.  /* #neg=862 #pos=232 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,05e-07, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else return 0.02331673656467481;  // std dev = 13,480, 1.070,000 (wgt'ed) examples reached here.  /* #neg=838 #pos=232 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.233495
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 4.146 seconds
Total inference time: 2.213 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.728972
   AUC PR    = 0.496027
   CLL	      = -0.239407
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.457944
   F1        = 0.628205


Total scoring time: 4.019 seconds
Parameter learned model CLL: -0.239407


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 196], 'false': [13.495, 847, 232]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 196], 'false': [13.51, 856, 232]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.19e-07, 0, 196], 'false': [13.467, 831, 232]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 196], 'false': [13.478, 837, 232]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.04e-07, 0, 196], 'false': [13.566, 890, 232]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 196], 'false': [13.587, 904, 232]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 196], 'false': [13.556, 884, 232]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 196], 'false': [13.538, 873, 232]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 196], 'false': [13.52, 862, 232]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-07, 0, 196], 'false': [13.48, 838, 232]}]]
[{'': [5.945357584931451e-15, 0.16878292381044965]}, {'': [-3.552713678800501e-15, 0.1677660034602073]}, {'': [1.9576177413798677e-15, 0.17061707002580928]}, {'': [4.3502616475108174e-16, 0.16992529496543166]}, {'': [8.338001491062401e-16, 0.16401828921489428]}, {'': [-3.625218039592348e-16, 0.16251735766712375]}, {'': [4.3502616475108174e-16, 0.1646690047661155]}, {'': [-1.1781958628675131e-16, 0.1658737536086472]}, {'': [-2.7642287551891654e-16, 0.16709390426089873]}, {'': [5.664403186863044e-17, 0.16981046379595605]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.41979277071594934;  // std dev = 5,995, 146,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=82 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08861912573698989;  // std dev = 3,641, 263,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=14 */
%   | | | else return 0.08433941128998522;  // std dev = 10,145, 588,000 (wgt'ed) examples reached here.  /* #neg=455 #pos=133 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3355833546426189;  // std dev = 0,499, 158,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=85 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07817005686120895;  // std dev = 3,641, 263,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=14 */
%   | | | else return 0.07847182577153838;  // std dev = 10,114, 576,000 (wgt'ed) examples reached here.  /* #neg=443 #pos=133 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,19e-07, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.11215184588229063;  // std dev = 1,577, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.2853982421877383;  // std dev = 6,099, 150,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=82 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.1000627992162398;  // std dev = 3,489, 216,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=13 */
%   | | | else return 0.036806637510418114;  // std dev = 10,329, 724,000 (wgt'ed) examples reached here.  /* #neg=590 #pos=134 */
%   | else return -0.11231637819360625;  // std dev = 5,27e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 2,92e-07, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.21849160488061015;  // std dev = 0,498, 159,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=85 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07034029665395283;  // std dev = 3,633, 252,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=14 */
%   | | | else return 0.06576611915716224;  // std dev = 10,089, 581,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=133 */
%   | else return -0.10159632948783613;  // std dev = 5,96e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 4,04e-07, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.053523221695496205;  // std dev = 1,499, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.19626483558005228;  // std dev = 5,972, 145,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=82 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06592234292281654;  // std dev = 3,640, 266,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=14 */
%   | | | else return 0.059131865893392574;  // std dev = 10,070, 575,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=133 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694911;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.06424302731295672;  // std dev = 1,293, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.14168875511130746;  // std dev = 6,010, 151,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=82 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06270035394219917;  // std dev = 3,646, 286,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=14 */
%   | | | else return 0.041923091077901015;  // std dev = 10,126, 597,000 (wgt'ed) examples reached here.  /* #neg=464 #pos=133 */
%   | else return -0.08518475138839683;  // std dev = 4,08e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 2,92e-07, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.03128431254614058;  // std dev = 1,403, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.09645355250482562;  // std dev = 6,098, 150,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=82 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09555582232836513;  // std dev = 3,465, 184,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=13 */
%   | | | else return 0.03380699219532711;  // std dev = 10,151, 688,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=134 */
%   | else return -0.07877675473109162;  // std dev = 4,71e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527755;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11505107017759757;  // std dev = 0,486, 148,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=85 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08235286247103056;  // std dev = 3,464, 183,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=13 */
%   | | | else return 0.03777136010423212;  // std dev = 10,098, 653,000 (wgt'ed) examples reached here.  /* #neg=519 #pos=134 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367153;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.06591514152342824;  // std dev = 6,069, 153,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=85 */
%   | | | else return -0.05783701344435148;  // std dev = 3,635, 259,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=14 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06946892081169287;  // std dev = 3,461, 165,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=13 */
%   | | | else return 0.07645558074621239;  // std dev = 9,293, 428,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=120 */
%   | else return -0.06842697784420268;  // std dev = 2,79e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,05e-07, 196,000 (wgt'ed) examples reached here.  /* #pos=196 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.04827843936710792;  // std dev = 1,437, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.08834729087745538;  // std dev = 5,670, 135,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=82 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05467331574243282;  // std dev = 3,640, 271,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=14 */
%   | | | else return 0.03292697291404683;  // std dev = 9,976, 586,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=133 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */


Results
   AUC ROC   = 0.853497
   AUC PR    = 0.484335
   CLL	      = -0.229486
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 83.218 seconds
Total inference time: 4.279 seconds
AUC ROC: 0.853497


Results scoring model
   AUC ROC   = 0.878705
   AUC PR    = 0.559297
   CLL	      = -0.22727
   Precision = 0.215004 at threshold = 0.5
   Recall    = 0.649533
   F1        = 0.323068


Total scoring time: 13.669 seconds
Refined model CLL: -0.22727


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853497
   AUC PR    = 0.484335
   CLL	      = -0.229486
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 105.052 seconds
Total inference time: 4.279 seconds
AUC ROC: 0.853497
Total revision time: 105.052
Best scored revision CLL: -0.22727


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 12:16:43
{'F1': 0.216769, 'Inference time': 4.279, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853497, 'parameter_0.8': {'F1': 0.578947, 'Inference time': 2.213, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 4.146, 'CLL': -0.233495}, 'AUC PR': 0.484335, 'Recall': 0.654321, 'Learning time': 105.052, 'CLL': -0.229486}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.5399671169176908;  // std dev = 0,466, 220,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=150 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.11880959024611032;  // std dev = 2,210, 217,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=5 */
%   | | | else return 0.11529179224236952;  // std dev = 2,586, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.061105723285580824;  // std dev = 3,457, 161,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=13 */
%   | | | else return 0.2776694830447133;  // std dev = 11,925, 584,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=245 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.779031768367374;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22096823163262608;  // std dev = 1,29e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.5251457580046804;  // std dev = 6,046, 193,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=144 */
%   | | | else return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10270218944174248;  // std dev = 2,202, 152,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=5 */
%   | | | else return 0.5331890856595075;  // std dev = 1,628, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( haswordtitle(A, K), haswordauthor(L, K) )
%   | | | then return -0.07366269416990887;  // std dev = 3,577, 243,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=14 */
%   | | | else return 0.23543301217758228;  // std dev = 11,976, 591,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=245 */
%   else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.05570189555055318;  // std dev = 1,646, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.37831582539686653;  // std dev = 6,546, 205,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=144 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10250059241488865;  // std dev = 2,223, 268,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=5 */
%   | | | else return 0.19999104367592974;  // std dev = 2,423, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.05350544055023071;  // std dev = 3,298, 172,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=13 */
%   | | | else return 0.22746217646077968;  // std dev = 11,673, 552,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=245 */
%   else return -0.11231637819360621;  // std dev = 6,99e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.14841758811711112;  // std dev = 1,479, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.3082101897425575;  // std dev = 6,350, 200,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=144 */
%   | | else return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09014558349397628;  // std dev = 2,222, 238,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=5 */
%   | | | else return 0.11764293337785843;  // std dev = 2,523, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.047302888244723805;  // std dev = 3,305, 170,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=13 */
%   | | | else return 0.16210316896850083;  // std dev = 11,925, 584,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=245 */
%   else return -0.10159632948783617;  // std dev = 5,05e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.23698780625052157;  // std dev = 0,441, 210,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=150 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07967927356690438;  // std dev = 2,221, 214,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=5 */
%   | | | else return 0.10960816275596029;  // std dev = 2,506, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.0427602181354519;  // std dev = 3,312, 170,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=13 */
%   | | | else return 0.15184239360491683;  // std dev = 11,698, 555,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=245 */
%   else return -0.09269127618926108;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.04728656485885436;  // std dev = 1,463, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.15886500282773414;  // std dev = 6,508, 204,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=144 */
%   | | else return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07374348183809463;  // std dev = 2,220, 230,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=5 */
%   | | | else return 0.20076725106420054;  // std dev = 2,304, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04283856636768623;  // std dev = 3,321, 184,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=13 */
%   | | | else return 0.11805152196203453;  // std dev = 11,715, 557,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=245 */
%   else return -0.08518475138839683;  // std dev = 3,80e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return -0.009950640074012888;  // std dev = 1,747, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.17014140901549635;  // std dev = 5,850, 194,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=144 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06618990161797278;  // std dev = 2,216, 218,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=5 */
%   | | | else return 0.013656265539970023;  // std dev = 2,584, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.029223880988868304;  // std dev = 3,307, 162,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=13 */
%   | | | else return 0.09334980650686378;  // std dev = 11,698, 555,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=245 */
%   else return -0.07877675473109164;  // std dev = 4,47e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.222033533773922;  // std dev = 1,120, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.12085666829902882;  // std dev = 6,030, 193,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=144 */
%   | | else return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06105468133327716;  // std dev = 2,216, 219,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=5 */
%   | | | else return -0.036448745075976376;  // std dev = 2,665, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.032489085644258384;  // std dev = 3,326, 173,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=13 */
%   | | | else return 0.06950426955052955;  // std dev = 11,723, 558,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=245 */
%   else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return -0.07720347918747907;  // std dev = 1,547, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.05228953642608632;  // std dev = 6,503, 204,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=144 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.055752312639719595;  // std dev = 2,213, 217,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=5 */
%   | | | else return 0.08245357647496641;  // std dev = 2,468, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.030550052980968082;  // std dev = 3,328, 178,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=13 */
%   | | | else return 0.043172906983699244;  // std dev = 11,827, 571,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=245 */
%   else return -0.06842697784420265;  // std dev = 4,01e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.44969445096111693;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.33678917245656825;  // std dev = 2,58e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.2249675713200953;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07527833858631029;  // std dev = 6,083, 198,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=148 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05412501029023851;  // std dev = 2,218, 234,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=5 */
%   | | | else return 0.06733322316203423;  // std dev = 2,467, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.0122261549668685;  // std dev = 3,302, 145,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=13 */
%   | | | else return 0.0351589309663071;  // std dev = 11,803, 568,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=245 */
%   else return -0.06419184008202625;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */


Results
   AUC ROC   = 0.761142
   AUC PR    = 0.069663
   CLL	      = -0.494286
   Precision = 0.06988 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.116935


Total learning time: 299.093 seconds
Total inference time: 5.635 seconds
AUC ROC: 0.761142


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 12:21:49
{'F1': 0.116935, 'Recall': 0.358025, 'Inference time': 5.635, 'Precision': [0.06988, 0.5], 'Learning time': 299.093, 'AUC PR': 0.069663, 'CLL': -0.494286, 'AUC ROC': 0.761142}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.5640312880406856;  // std dev = 6,508, 204,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=144 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.12011193446570566;  // std dev = 2,212, 230,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=5 */
%   | | | else return 0.14847151574467365;  // std dev = 2,527, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0688173570353191;  // std dev = 3,471, 178,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=13 */
%   | | | else return 0.28797349650301657;  // std dev = 11,819, 570,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=245 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */


Results
   AUC ROC   = 0.759501
   AUC PR    = 0.049948
   CLL	      = -0.21279
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 23.648 seconds
Total inference time: 2.445 seconds
AUC ROC: 0.759501


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 12:22:15
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.445, 'Precision': [nan, 0.5], 'Learning time': 23.648, 'AUC PR': 0.049948, 'CLL': -0.21279, 'AUC ROC': 0.759501}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.0729042309358843;  // std dev = 15,194, 1.369,000 (wgt'ed) examples reached here.  /* #neg=1.075 #pos=294 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.06827993379453706;  // std dev = 15,151, 1.341,000 (wgt'ed) examples reached here.  /* #neg=1.047 #pos=294 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.05721339552302321;  // std dev = 15,171, 1.354,000 (wgt'ed) examples reached here.  /* #neg=1.060 #pos=294 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.04060509226512778;  // std dev = 15,256, 1.411,000 (wgt'ed) examples reached here.  /* #neg=1.117 #pos=294 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.04411299958355307;  // std dev = 15,166, 1.351,000 (wgt'ed) examples reached here.  /* #neg=1.057 #pos=294 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.03250697237110012;  // std dev = 15,217, 1.384,000 (wgt'ed) examples reached here.  /* #neg=1.090 #pos=294 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.027201124030241636;  // std dev = 15,221, 1.387,000 (wgt'ed) examples reached here.  /* #neg=1.093 #pos=294 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.02985040984349901;  // std dev = 15,155, 1.344,000 (wgt'ed) examples reached here.  /* #neg=1.050 #pos=294 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.012222587449518702;  // std dev = 15,281, 1.429,000 (wgt'ed) examples reached here.  /* #neg=1.135 #pos=294 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.01517133239925823;  // std dev = 15,234, 1.396,000 (wgt'ed) examples reached here.  /* #neg=1.102 #pos=294 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.234264
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 4.506 seconds
Total inference time: 2.526 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.725746
   AUC PR    = 0.48982
   CLL	      = -0.240454
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451493
   F1        = 0.622108


Total scoring time: 4.354 seconds
Parameter learned model CLL: -0.240454


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 242], 'false': [15.194, 1075, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.151, 1047, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.92e-07, 0, 242], 'false': [15.171, 1060, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.256, 1117, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.67e-07, 0, 242], 'false': [15.166, 1057, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 242], 'false': [15.217, 1090, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 242], 'false': [15.221, 1093, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.23e-07, 0, 242], 'false': [15.155, 1050, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.281, 1135, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 242], 'false': [15.234, 1102, 294]}]]
[{'': [4.8152482919279514e-15, 0.16863545874660824]}, {'': [-4.2280228904733235e-15, 0.17117347066447378]}, {'': [9.98283182472868e-16, 0.1699870616958578]}, {'': [-2.055288905091199e-16, 0.1649477804493418]}, {'': [2.9361270072731413e-16, 0.17025960428467457]}, {'': [3.8169651094550837e-16, 0.1673021985365336]}, {'': [3.5233524087277696e-16, 0.167037726463005]}, {'': [6.239269890455425e-17, 0.1708984374999924]}, {'': [-1.7249746167729704e-16, 0.1634100392695281]}, {'': [2.9361270072731413e-17, 0.1662486350686673]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.42957750652808085;  // std dev = 6,676, 182,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=104 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09200682814036355;  // std dev = 3,899, 321,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=16 */
%   | | | else return 0.07171677429548794;  // std dev = 11,563, 796,000 (wgt'ed) examples reached here.  /* #neg=626 #pos=170 */
%   | else return -0.14185106490048763;  // std dev = 8,56e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.3784578480922478;  // std dev = 6,731, 186,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=108 */
%   | | | else return -0.07691053622064473;  // std dev = 3,848, 220,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=16 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08054263534396709;  // std dev = 3,898, 317,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=16 */
%   | | | else return 0.1312439763048429;  // std dev = 10,515, 546,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=154 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.28956408480689455;  // std dev = 0,496, 193,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=108 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07181556093109512;  // std dev = 3,898, 318,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=16 */
%   | | | else return 0.055754807892384385;  // std dev = 11,473, 784,000 (wgt'ed) examples reached here.  /* #neg=614 #pos=170 */
%   | else return -0.1123163781936062;  // std dev = 7,74e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.21472687238700466;  // std dev = 0,498, 198,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=108 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06479831525014514;  // std dev = 3,899, 321,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=16 */
%   | | | else return 0.057117865188452875;  // std dev = 11,399, 755,000 (wgt'ed) examples reached here.  /* #neg=585 #pos=170 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.12835592328236675;  // std dev = 1,747, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.21422538061909588;  // std dev = 6,495, 175,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=104 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08010094460235383;  // std dev = 3,844, 221,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=16 */
%   | | | else return 0.04313158208276585;  // std dev = 11,408, 849,000 (wgt'ed) examples reached here.  /* #neg=679 #pos=170 */
%   | else return -0.09269127618926096;  // std dev = 4,71e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.11349837548136588;  // std dev = 1,763, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.18052445921071025;  // std dev = 6,346, 170,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=104 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07814463085223855;  // std dev = 3,861, 249,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=16 */
%   | | | else return 0.04764558022135562;  // std dev = 11,327, 805,000 (wgt'ed) examples reached here.  /* #neg=635 #pos=170 */
%   | else return -0.08518475138839682;  // std dev = 4,83e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.08195242104582642;  // std dev = 6,939, 197,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=108 */
%   | | | else return -0.06716631170634021;  // std dev = 3,897, 328,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=16 */
%   | | else return 0.03622112058883821;  // std dev = 0,408, 780,000 (wgt'ed) examples reached here.  /* #neg=610 #pos=170 */
%   | else return -0.07877675473109162;  // std dev = 4,94e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.058538184788101695;  // std dev = 1,529, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05529367145527743;  // std dev = 6,822, 191,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=104 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08863443083966334;  // std dev = 2,426, 328,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=6 */
%   | | | else return 0.1639076437859712;  // std dev = 2,686, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.058062465133977406;  // std dev = 3,832, 195,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=16 */
%   | | | else return 0.06834873113666269;  // std dev = 10,581, 564,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=154 */
%   | | else return -0.07324622576333707;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.06818623840371933;  // std dev = 1,703, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.0423847193268793;  // std dev = 6,818, 188,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=104 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07941932204283209;  // std dev = 2,423, 296,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=6 */
%   | | | else return 0.13074998580115693;  // std dev = 2,709, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10051920460518655;  // std dev = 2,414, 207,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=6 */
%   | | | else return 0.2926712038803398;  // std dev = 2,347, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.07784045060277811;  // std dev = 10,428, 524,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=154 */
%   | | | else return -0.0684269778442027;  // std dev = 1,39e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.07207209172162757;  // std dev = 0,489, 186,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=108 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05405003183377768;  // std dev = 3,812, 349,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=16 */
%   | | | else return 0.023061239832871394;  // std dev = 11,230, 765,000 (wgt'ed) examples reached here.  /* #neg=595 #pos=170 */
%   | else return -0.06602443053266036;  // std dev = 0,081, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */


Results
   AUC ROC   = 0.853931
   AUC PR    = 0.489198
   CLL	      = -0.252287
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 114.59100000000001 seconds
Total inference time: 4.611 seconds
AUC ROC: 0.853931


Results scoring model
   AUC ROC   = 0.88639
   AUC PR    = 0.558293
   CLL	      = -0.22622
   Precision = 0.21504 at threshold = 0.5
   Recall    = 0.645522
   F1        = 0.322611


Total scoring time: 15.395 seconds
Refined model CLL: -0.22622


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853931
   AUC PR    = 0.489198
   CLL	      = -0.252287
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 138.846 seconds
Total inference time: 4.611 seconds
AUC ROC: 0.853931
Total revision time: 138.846
Best scored revision CLL: -0.22622


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 12:24:42
{'parameter_1.0': {'F1': 0.578947, 'Inference time': 2.526, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 4.506, 'CLL': -0.234264}, 'F1': 0.216769, 'Inference time': 4.611, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853931, 'AUC PR': 0.489198, 'Recall': 0.654321, 'Learning time': 138.846, 'CLL': -0.252287}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.6051368869067377;  // std dev = 0,435, 249,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=186 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11726090096606204;  // std dev = 2,419, 244,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=6 */
%   | | | else return 0.2285193054698827;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0719820692672999;  // std dev = 3,858, 229,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=16 */
%   | | | else return 0.2824327004473931;  // std dev = 13,381, 733,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=311 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5123233801944012;  // std dev = 0,431, 260,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=193 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.1071334445862489;  // std dev = 2,422, 215,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=6 */
%   | | | else return 0.3438579717599995;  // std dev = 2,284, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10747766773324674;  // std dev = 2,424, 290,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=6 */
%   | | | else return 0.131024893570045;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0.25092789614778455;  // std dev = 0,495, 722,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=311 */
%   else return -0.12544463852839136;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3866118386196945;  // std dev = 0,440, 269,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09529070241656301;  // std dev = 2,425, 276,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=6 */
%   | | | else return 0.1157004622581513;  // std dev = 2,625, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0496117226170257;  // std dev = 3,723, 207,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=16 */
%   | | | else return 0.203296178169287;  // std dev = 13,394, 735,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=311 */
%   else return -0.1123163781936062;  // std dev = 7,74e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2882907496722854;  // std dev = 0,446, 271,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08789445620531731;  // std dev = 2,430, 298,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=6 */
%   | | | else return 0.04921275218546527;  // std dev = 2,717, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else return 0.14829653836383266;  // std dev = 0,466, 878,000 (wgt'ed) examples reached here.  /* #neg=551 #pos=327 */
%   else return -0.10159632948783631;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17732736949676173;  // std dev = 0,461, 288,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=193 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10542522973975726;  // std dev = 2,425, 207,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=6 */
%   | | | else return 0.3229026968123071;  // std dev = 2,165, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.05972294283384886;  // std dev = 3,676, 322,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=16 */
%   | | | else return 0.1502168931236603;  // std dev = 13,242, 713,000 (wgt'ed) examples reached here.  /* #neg=402 #pos=311 */
%   else return -0.09269127618926107;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15748654457835973;  // std dev = 0,453, 277,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07422187204108317;  // std dev = 2,430, 296,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=6 */
%   | | | else return 0.06617457055679238;  // std dev = 2,675, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05544887040991811;  // std dev = 3,587, 208,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=16 */
%   | | | else return 0.12859940597603245;  // std dev = 13,124, 697,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=311 */
%   else return -0.08518475138839682;  // std dev = 5,05e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11396108772691263;  // std dev = 0,452, 280,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06649175039066148;  // std dev = 2,430, 270,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=6 */
%   | | | else return 0.01192823425910704;  // std dev = 2,766, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0517400134773976;  // std dev = 3,593, 220,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=16 */
%   | | | else return 0.11396000983230861;  // std dev = 12,958, 676,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=311 */
%   else return -0.07877675473109161;  // std dev = 5,27e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.34978463748522737;  // std dev = 0,070, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.6085301259151404;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.08232172945838222;  // std dev = 0,455, 272,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=186 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08116087335577571;  // std dev = 2,422, 200,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=6 */
%   | | | else return 0.339280209397789;  // std dev = 2,049, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.04784308768790467;  // std dev = 3,692, 301,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=16 */
%   | | | else return 0.05312309961506457;  // std dev = 13,367, 731,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=311 */
%   else return -0.07324622576333707;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.025773739807265002;  // std dev = 0,467, 297,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=193 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0572068348763207;  // std dev = 2,423, 276,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=6 */
%   | | | else return 0.0567433968915021;  // std dev = 2,680, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07310535244264109;  // std dev = 2,414, 207,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=6 */
%   | | | else return 0.3306698214113198;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else return 0.06330870991180865;  // std dev = 0,497, 694,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=311 */
%   else return -0.06842697784420265;  // std dev = 4,94e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09760477896947414;  // std dev = 0,434, 265,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0536726834623033;  // std dev = 2,437, 263,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=6 */
%   | | | else return 0.012590156472002637;  // std dev = 2,745, 45,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.032614314504758185;  // std dev = 3,277, 198,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=16 */
%   | | | else return 0.041224378897913874;  // std dev = 13,184, 705,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=311 */
%   else return -0.06419184008202626;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */


Results
   AUC ROC   = 0.760409
   AUC PR    = 0.0686
   CLL	      = -0.445385
   Precision = 0.077128 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.126915


Total learning time: 334.391 seconds
Total inference time: 4.457 seconds
AUC ROC: 0.760409


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 12:30:21
{'F1': 0.126915, 'Recall': 0.358025, 'Inference time': 4.457, 'Precision': [0.077128, 0.5], 'Learning time': 334.391, 'AUC PR': 0.0686, 'CLL': -0.445385, 'AUC ROC': 0.760409}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.5790791676576482;  // std dev = 0,449, 258,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=186 */
%   | else return 0.14303265602974;  // std dev = 0,451, 1.204,000 (wgt'ed) examples reached here.  /* #neg=861 #pos=343 */
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 0.673256
   AUC PR    = 0.062564
   CLL	      = -0.203634
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 17.95 seconds
Total inference time: 2.206 seconds
AUC ROC: 0.673256


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 12:30:42
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.206, 'Precision': [nan, 0.5], 'Learning time': 17.95, 'AUC PR': 0.062564, 'CLL': -0.203634, 'AUC ROC': 0.673256}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 558
Target train neg examples: 23373

Target test facts examples: 9016
Target test pos	 examples: 140
Target test neg examples: 4623

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,06e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.06937005721172415;  // std dev = 7,105, 303,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=64 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.07970880644497824;  // std dev = 7,019, 278,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=64 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.07089956374255069;  // std dev = 7,011, 276,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=64 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.06109163113326475;  // std dev = 7,011, 276,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=64 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.026168636335969254;  // std dev = 7,129, 311,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=64 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.029116952401279792;  // std dev = 7,099, 301,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=64 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,71e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.036650839815514084;  // std dev = 7,045, 285,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=64 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.06040069194693768;  // std dev = 6,910, 252,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=64 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.004621322535352881;  // std dev = 7,120, 308,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=64 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,79e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return -0.00879811774217356;  // std dev = 7,177, 328,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=64 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.246188
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 2.211 seconds
Total inference time: 2.127 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.711712
   AUC PR    = 0.458299
   CLL	      = -0.243626
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.423423
   F1        = 0.594937


Total scoring time: 2.113 seconds
Parameter learned model CLL: -0.243626


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.06e-07, 0, 47], 'false': [7.105, 239, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [7.019, 214, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [7.011, 212, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [7.011, 212, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 47], 'false': [7.129, 247, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [7.099, 237, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.71e-08, 0, 47], 'false': [7.045, 221, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [6.91, 188, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [7.12, 244, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.79e-08, 0, 47], 'false': [7.177, 264, 64]}]]
[{'': [9.070758328852342e-16, 0.16660675968587038]}, {'': [-7.558965274043619e-16, 0.17721650018115087]}, {'': [0.0, 0.17811384162991037]}, {'': [-4.1574309007239905e-16, 0.17811384162991034]}, {'': [1.8897413185109047e-17, 0.16343917039732883]}, {'': [-1.8897413185109047e-17, 0.16741537069127166]}, {'': [4.724353296277262e-17, 0.17413357956294243]}, {'': [-7.558965274043619e-17, 0.18946837994456892]}, {'': [-3.7794826370218094e-17, 0.1646146061730453]}, {'': [1.6535236536970416e-17, 0.15704937537180338]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,06e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.2971733253434148;  // std dev = 3,178, 41,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | | else return -0.04661296966239252;  // std dev = 1,902, 42,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.01141628229179202;  // std dev = 2,798, 69,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | | else return 0.1354598594692588;  // std dev = 4,884, 119,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3044821727840882;  // std dev = 0,500, 37,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.026171196120586975;  // std dev = 2,823, 79,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=9 */
%   | | | else return 0.11709943666920526;  // std dev = 5,172, 137,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=37 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.3889198038477037;  // std dev = 2,613, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | | else return -0.0692554215956708;  // std dev = 1,916, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.012336867164172002;  // std dev = 2,806, 72,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=9 */
%   | | | else return 0.14185147484237134;  // std dev = 4,746, 104,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19198689739089259;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -3.047265241558897E-4;  // std dev = 2,787, 67,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=9 */
%   | | | else return 0.023281006938979096;  // std dev = 5,382, 177,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=37 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.23028075356519176;  // std dev = 0,493, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return 0.05967011196745379;  // std dev = 5,864, 201,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=46 */
%   | | | else return -0.17634134196135043;  // std dev = 0,089, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04217850462042485;  // std dev = 3,529, 89,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
%   | | | else return 0.5142560291917312;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return 0.0021570833152190346;  // std dev = 2,774, 62,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | | | else return 0.06959095567829283;  // std dev = 4,874, 118,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
%   | else return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,71e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1511695386083816;  // std dev = 0,498, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.032119683076756236;  // std dev = 2,830, 81,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=9 */
%   | | | else return 0.06105614830585721;  // std dev = 5,133, 138,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=37 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.09850830508844954;  // std dev = 2,910, 34,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return -0.07917292013458303;  // std dev = 1,835, 53,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0066363401722143445;  // std dev = 2,793, 68,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
%   | | | else return 0.025835080276182528;  // std dev = 4,943, 128,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=33 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.03709639198259032;  // std dev = 3,405, 77,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | | else return 0.43867364690172644;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return 0.013965176500407418;  // std dev = 2,762, 59,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   | | | else return 0.012449478541423592;  // std dev = 4,975, 132,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,79e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08338912311271754;  // std dev = 0,499, 34,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.029384274205207082;  // std dev = 2,839, 79,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=9 */
%   | | | else return 0.03406041407729768;  // std dev = 5,145, 146,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=37 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.259325
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 21.991 seconds
Total inference time: 3.74 seconds
AUC ROC: 0.899184


Results scoring model
   AUC ROC   = 0.842697
   AUC PR    = 0.502657
   CLL	      = -0.240012
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.423423
   F1        = 0.594937


Total scoring time: 4.349 seconds
Refined model CLL: -0.240012


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.259325
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 30.663999999999998 seconds
Total inference time: 3.74 seconds
AUC ROC: 0.899184
Total revision time: 30.663999999999998
Best scored revision CLL: -0.240012


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 12:31:19
{'parameter_0.2': {'F1': 0.640777, 'Inference time': 2.127, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 2.211, 'CLL': -0.246188}, 'F1': 0.640777, 'Inference time': 3.74, 'Precision': [1.0, 0.5], 'AUC ROC': 0.899184, 'AUC PR': 0.571454, 'Recall': 0.471429, 'Learning time': 30.663999999999998, 'CLL': -0.259325}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.49080199632400107;  // std dev = 0,482, 49,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04325951560471305;  // std dev = 2,512, 71,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=7 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02756535061477346;  // std dev = 1,882, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return 0.2989384087837241;  // std dev = 6,121, 152,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=67 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4469533900120933;  // std dev = 0,474, 47,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=31 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08449160846216008;  // std dev = 1,377, 36,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | | else return 0.5281381019446526;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.36333374872560315;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.043341061274019356;  // std dev = 2,310, 63,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
%   | | else return 0.2364827553808953;  // std dev = 0,493, 160,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=67 */
%   else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2772034791128868;  // std dev = 0,494, 54,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.3712500601862023;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.09243985490635259;  // std dev = 1,276, 45,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=2 */
%   | | else return 0.14892251924734212;  // std dev = 0,465, 220,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=76 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2271322049421058;  // std dev = 0,493, 53,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=31 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08436725655556508;  // std dev = 1,319, 45,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=2 */
%   | | | else return 0.13463862471515017;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return 0.007061475673112212;  // std dev = 2,687, 54,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=9 */
%   | | | else return 0.22171358770132626;  // std dev = 5,967, 143,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=67 */
%   else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.24810861888766308;  // std dev = 0,474, 47,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=31 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.12317010044524536;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.04596798867270733;  // std dev = 2,294, 56,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.008463022861482336;  // std dev = 1,736, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return 0.18827457136020564;  // std dev = 5,911, 140,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=67 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.13924413420364853;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.20924071428119942;  // std dev = 0,466, 44,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | else if ( haswordvenue(F, C) )
%   | | then if ( title(G, B), venue(G, F) )
%   | | | then return 0.0350119768131883;  // std dev = 6,637, 236,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=69 */
%   | | | else return 0.28846295640315467;  // std dev = 2,038, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.23133796887503397;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.23345076190196784;  // std dev = 0,198, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839682;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.19810875808324807;  // std dev = 0,450, 43,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05990774460331996;  // std dev = 2,448, 64,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | | | else return 0.04174684574830915;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0335052164748063;  // std dev = 1,737, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | | else return 0.14117713697086517;  // std dev = 5,854, 138,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=67 */
%   else return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1683745509421133;  // std dev = 0,438, 42,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=31 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.22884642027897448;  // std dev = 0,994, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.04468111964216421;  // std dev = 2,459, 64,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.016752548071451507;  // std dev = 1,729, 37,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.046102112283537514;  // std dev = 6,208, 158,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=67 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11244841621407362;  // std dev = 0,444, 43,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.3555897796710251;  // std dev = 0,967, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08112934390280412;  // std dev = 1,254, 37,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return 0.0018615592243153244;  // std dev = 2,664, 56,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | | else return 0.04173979058605999;  // std dev = 6,167, 156,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=67 */
%   else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, A) )
%   | then return 0.17881765957878898;  // std dev = 0,404, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( haswordvenue(F, C) )
%   | | then if ( author(G, D), title(G, B) )
%   | | | then return -0.11203509785755723;  // std dev = 1,023, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.055506351705004266;  // std dev = 3,903, 113,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | | else return 0.09621756826202749;  // std dev = 0,394, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then if ( haswordvenue(J, H) )
%   | | then return -0.058350725021169766;  // std dev = 0,192, 41,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | | else return 0.49459149028283633;  // std dev = 0,685, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.07395835679806488;  // std dev = 0,498, 142,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=67 */
%   | | else return -0.06419184008202618;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.82389
   AUC PR    = 0.098755
   CLL	      = -0.379114
   Precision = 0.123077 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.193939


Total learning time: 51.92 seconds
Total inference time: 7.373 seconds
AUC ROC: 0.82389


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 12:32:19
{'F1': 0.193939, 'Recall': 0.457143, 'Inference time': 7.373, 'Precision': [0.123077, 0.5], 'Learning time': 51.92, 'AUC PR': 0.098755, 'CLL': -0.379114, 'AUC ROC': 0.82389}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4781489350995113;  // std dev = 0,485, 50,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=31 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10481402786345068;  // std dev = 1,388, 54,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.024967948017370803;  // std dev = 2,819, 77,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=9 */
%   | | | else return 0.3108516378022162;  // std dev = 6,055, 148,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=67 */
%   else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.219369
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 5.847 seconds
Total inference time: 1.896 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 12:32:27
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.896, 'Precision': [nan, 0.5], 'Learning time': 5.847, 'AUC PR': 0.097917, 'CLL': -0.219369, 'AUC ROC': 0.821572}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995116;  // std dev = 2,38e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.08345222799378996;  // std dev = 10,035, 577,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=130 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,38e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.07416446920749144;  // std dev = 10,028, 574,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=130 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,00e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.06835542690437127;  // std dev = 10,002, 564,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=130 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 1,98e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.05562978321057032;  // std dev = 10,023, 572,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=130 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.052860609999267776;  // std dev = 9,988, 559,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=130 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.03807260205981798;  // std dev = 10,033, 576,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=130 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 1,15e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.026844990505647513;  // std dev = 10,068, 590,000 (wgt'ed) examples reached here.  /* #neg=460 #pos=130 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527716;  // std dev = 8,69e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.026034388795656036;  // std dev = 10,046, 581,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=130 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.018086159167032843;  // std dev = 10,070, 591,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=130 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080109;  // std dev = 6,14e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.01971520318150338;  // std dev = 10,041, 579,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=130 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.252539
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 3.035 seconds
Total inference time: 2.139 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.70852
   AUC PR    = 0.451451
   CLL	      = -0.250366
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.41704
   F1        = 0.588608


Total scoring time: 3.209 seconds
Parameter learned model CLL: -0.250366


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.38e-07, 0, 93], 'false': [10.035, 447, 130]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.38e-07, 0, 93], 'false': [10.028, 444, 130]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4e-07, 0, 93], 'false': [10.002, 434, 130]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.98e-07, 0, 93], 'false': [10.023, 442, 130]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 93], 'false': [9.988, 429, 130]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 93], 'false': [10.033, 446, 130]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.15e-07, 0, 93], 'false': [10.068, 460, 130]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.69e-08, 0, 93], 'false': [10.046, 451, 130]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 93], 'false': [10.07, 461, 130]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.14e-08, 0, 93], 'false': [10.041, 449, 130]}]]
[{'': [6.11219557643097e-16, 0.17454171910527638]}, {'': [6.11219557643097e-16, 0.17518726705435234]}, {'': [1.7190550058712102e-15, 0.17736783863990976]}, {'': [4.2021344587962916e-16, 0.17561983471074336]}, {'': [-3.2471038999789525e-16, 0.17847485127095528]}, {'': [-3.820122235269356e-17, 0.17475646219136298]}, {'': [1.4325458382260084e-16, 0.17178971559896153]}, {'': [8.117759749947381e-17, 0.1736871261786728]}, {'': [-9.072790308764721e-17, 0.17158104792416223]}, {'': [4.0588798749736907e-17, 0.17411354816385724]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995116;  // std dev = 2,38e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.43923001618059393;  // std dev = 0,493, 74,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.041851064900487664;  // std dev = 3,286, 120,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=12 */
%   | | | else return 0.09034707751437426;  // std dev = 7,588, 323,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=75 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,38e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.34716686304469174;  // std dev = 4,393, 78,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=43 */
%   | | | else return -0.04716563004214979;  // std dev = 2,987, 96,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.040832517440074906;  // std dev = 3,294, 125,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=12 */
%   | | | else return 0.13313487360297396;  // std dev = 6,811, 227,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=65 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,00e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.27122469347828015;  // std dev = 0,499, 80,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=43 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04379770933271334;  // std dev = 3,308, 136,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=12 */
%   | | | else return 0.06837024600563305;  // std dev = 7,549, 323,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=75 */
%   | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 1,98e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.23595729214545802;  // std dev = 0,497, 77,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=43 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.044352925287137135;  // std dev = 3,318, 145,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=12 */
%   | | | else return 0.04943568736925107;  // std dev = 7,596, 336,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=75 */
%   | else return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11260349462951026;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=43 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06329343473056984;  // std dev = 2,998, 104,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=10 */
%   | | | else return 0.043295845144178856;  // std dev = 7,709, 366,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=77 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12159162363689616;  // std dev = 0,499, 82,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=43 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.04601683174630878;  // std dev = 2,983, 95,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return 0.052075280404118664;  // std dev = 7,633, 341,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=77 */
%   | else return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 1,15e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.23951430703457194;  // std dev = 3,756, 64,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=43 */
%   | | | else return -0.04457314541285444;  // std dev = 2,991, 99,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=10 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03373730817439638;  // std dev = 3,288, 121,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=12 */
%   | | | else return 0.08264577192954854;  // std dev = 6,811, 227,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=65 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527716;  // std dev = 8,69e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19071688084353705;  // std dev = 0,465, 63,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=43 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04097679527653703;  // std dev = 3,307, 137,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=12 */
%   | | | else return 0.036006178832620514;  // std dev = 7,492, 326,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=75 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.022650521159438816;  // std dev = 5,030, 186,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=50 */
%   | | | else return 0.3754659618230479;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03354392826685555;  // std dev = 2,977, 88,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=10 */
%   | | | else return 0.07870473604478907;  // std dev = 6,734, 215,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=65 */
%   | else return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080109;  // std dev = 6,14e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( author(G, E), title(G, A) )
%   | | | then return 0.12368424657258044;  // std dev = 1,470, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.05885593299443678;  // std dev = 4,738, 168,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=45 */
%   | | else return 0.18960941253445038;  // std dev = 0,451, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.016927932197880056;  // std dev = 3,216, 108,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=12 */
%   | | | else return 0.04380367417665792;  // std dev = 6,834, 231,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=65 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */


Results
   AUC ROC   = 0.89962
   AUC PR    = 0.576135
   CLL	      = -0.261489
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 40.353 seconds
Total inference time: 3.642 seconds
AUC ROC: 0.89962


Results scoring model
   AUC ROC   = 0.859925
   AUC PR    = 0.500765
   CLL	      = -0.241797
   Precision = 0.16152 at threshold = 0.5
   Recall    = 0.609865
   F1        = 0.255399


Total scoring time: 5.923 seconds
Refined model CLL: -0.241797


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.89962
   AUC PR    = 0.576135
   CLL	      = -0.261489
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 52.52 seconds
Total inference time: 3.642 seconds
AUC ROC: 0.89962
Total revision time: 52.52
Best scored revision CLL: -0.241797


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 12:33:26
{'F1': 0.277457, 'Inference time': 3.642, 'Precision': [0.173913, 0.5], 'AUC ROC': 0.89962, 'AUC PR': 0.576135, 'parameter_0.4': {'F1': 0.640777, 'Inference time': 2.139, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 3.035, 'CLL': -0.252539}, 'Recall': 0.685714, 'Learning time': 52.52, 'CLL': -0.261489}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.4954038370602975;  // std dev = 0,481, 102,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=65 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08882076187018462;  // std dev = 2,575, 132,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=7 */
%   | | | else return 0.24276431971489695;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.033155412726574636;  // std dev = 2,985, 92,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=10 */
%   | | | else return 0.3285322103608326;  // std dev = 8,456, 287,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=135 */
%   else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.055101217525739085;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.508829715720155;  // std dev = 0,448, 90,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=65 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.06943208123704954;  // std dev = 2,562, 113,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=7 */
%   | | | else return 0.12007398024261139;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.031479823926361825;  // std dev = 2,989, 94,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=10 */
%   | | | else return 0.2693614614000238;  // std dev = 8,569, 296,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=135 */
%   else return -0.1254446385283913;  // std dev = 2,79e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.34568343070506485;  // std dev = 0,475, 101,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=66 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07180440258539747;  // std dev = 2,576, 135,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=7 */
%   | | | else return 0.1926301242059969;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.15297694158010197;  // std dev = 0,470, 401,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=145 */
%   else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2463706325523249;  // std dev = 0,479, 105,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=66 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.057749714753473125;  // std dev = 2,567, 120,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=7 */
%   | | | else return 0.05412959330493119;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.030997531454905008;  // std dev = 2,963, 82,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=10 */
%   | | | else return 0.15856433882919785;  // std dev = 8,864, 323,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=135 */
%   else return -0.10159632948783628;  // std dev = 2,47e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.24891532230114963;  // std dev = 0,454, 96,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=66 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.059562943157222006;  // std dev = 2,578, 138,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=7 */
%   | | | else return 0.06093059783440062;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03269683953477837;  // std dev = 2,973, 86,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=10 */
%   | | | else return 0.12311719428567323;  // std dev = 8,894, 326,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=135 */
%   else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.17810066780692302;  // std dev = 0,460, 97,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=66 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10151609746751883;  // std dev = 2,200, 108,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=5 */
%   | | | else return 0.3591521335138934;  // std dev = 1,569, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.18145460676919187;  // std dev = 1,484, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.0348265563252332;  // std dev = 2,707, 105,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | | else return 0.1437194080487569;  // std dev = 0,498, 293,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=135 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12473168321206445;  // std dev = 0,466, 98,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=66 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.048614583170990044;  // std dev = 2,554, 128,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=7 */
%   | | | else return 0.12180105951711358;  // std dev = 1,786, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03235087001224495;  // std dev = 2,909, 94,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=10 */
%   | | | else return 0.10561150418587496;  // std dev = 8,581, 297,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=135 */
%   else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13327194479879484;  // std dev = 0,446, 93,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=66 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07562637933262736;  // std dev = 2,189, 89,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=5 */
%   | | | else return 0.6519084351832568;  // std dev = 0,865, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.012191587685102772;  // std dev = 3,129, 112,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=12 */
%   | | | else return 0.03333384491563657;  // std dev = 8,950, 332,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=135 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.06703694025717327;  // std dev = 0,466, 97,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=66 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.039849164293149685;  // std dev = 2,562, 114,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=7 */
%   | | | else return 0.052961280288983247;  // std dev = 1,858, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.4791968026213249;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.04468551747978597;  // std dev = 2,230, 72,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=7 */
%   | | else return 0.09422880810396098;  // std dev = 0,499, 284,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=135 */
%   else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.05834415888278395;  // std dev = 0,457, 97,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=66 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.23258984537549207;  // std dev = 1,135, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03973440432047958;  // std dev = 2,909, 119,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=10 */
%   | else return 0.043987611874236617;  // std dev = 0,465, 370,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=145 */
%   else return -0.06419184008202625;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 0.824897
   AUC PR    = 0.106808
   CLL	      = -0.361256
   Precision = 0.143564 at threshold = 0.5
   Recall    = 0.414286
   F1        = 0.213235


Total learning time: 82.269 seconds
Total inference time: 5.098 seconds
AUC ROC: 0.824897


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 12:34:54
{'F1': 0.213235, 'Recall': 0.414286, 'Inference time': 5.098, 'Precision': [0.143564, 0.5], 'Learning time': 82.269, 'AUC PR': 0.106808, 'CLL': -0.361256, 'AUC ROC': 0.824897}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.49892563412863944;  // std dev = 0,480, 103,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=66 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08012266983875929;  // std dev = 2,166, 81,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=5 */
%   | | | else return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07042249347191624;  // std dev = 2,550, 98,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=7 */
%   | | | else return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.31269438964496304;  // std dev = 0,498, 297,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=135 */
%   else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.218026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 17.843 seconds
Total inference time: 1.971 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 12:35:14
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.971, 'Precision': [nan, 0.5], 'Learning time': 17.843, 'AUC PR': 0.097917, 'CLL': -0.218026, 'AUC ROC': 0.821572}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995102;  // std dev = 8,26e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.09148226843284091;  // std dev = 12,258, 840,000 (wgt'ed) examples reached here.  /* #neg=644 #pos=196 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.0544912242211548;  // std dev = 12,460, 943,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=196 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,99e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.058184502090957935;  // std dev = 12,374, 896,000 (wgt'ed) examples reached here.  /* #neg=700 #pos=196 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158309;  // std dev = 4,13e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.0693005231442976;  // std dev = 12,222, 824,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=196 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 2,31e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.04372195033413723;  // std dev = 12,347, 882,000 (wgt'ed) examples reached here.  /* #neg=686 #pos=196 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 1,58e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.035718797368901246;  // std dev = 12,359, 888,000 (wgt'ed) examples reached here.  /* #neg=692 #pos=196 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253529;  // std dev = 2,27e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.04626680896282296;  // std dev = 12,231, 828,000 (wgt'ed) examples reached here.  /* #neg=632 #pos=196 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.039317395775550955;  // std dev = 12,229, 827,000 (wgt'ed) examples reached here.  /* #neg=631 #pos=196 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.021812514585963783;  // std dev = 12,318, 868,000 (wgt'ed) examples reached here.  /* #neg=672 #pos=196 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.02061355597958769;  // std dev = 12,300, 859,000 (wgt'ed) examples reached here.  /* #neg=663 #pos=196 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.25592
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 3.176 seconds
Total inference time: 1.888 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.706587
   AUC PR    = 0.447478
   CLL	      = -0.253901
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.413174
   F1        = 0.584746


Total scoring time: 3.463 seconds
Parameter learned model CLL: -0.253901


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.26e-07, 0, 138], 'false': [12.258, 644, 196]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 138], 'false': [12.46, 747, 196]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.99e-07, 0, 138], 'false': [12.374, 700, 196]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.13e-07, 0, 138], 'false': [12.222, 628, 196]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.31e-07, 0, 138], 'false': [12.347, 686, 196]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.58e-07, 0, 138], 'false': [12.359, 692, 196]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.27e-07, 0, 138], 'false': [12.231, 632, 196]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 138], 'false': [12.229, 631, 196]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 138], 'false': [12.318, 672, 196]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.96e-08, 0, 138], 'false': [12.3, 663, 196]}]]
[{'': [4.942905987896349e-15, 0.17888888888889085]}, {'': [-2.059544161623479e-15, 0.16464679746618746]}, {'': [1.802101141420544e-15, 0.17089843749999648]}, {'': [1.2357264969740872e-15, 0.18128475822414983]}, {'': [3.8616453030440226e-16, 0.17283950617284843]}, {'': [1.802101141420544e-16, 0.1720030841652463]}, {'': [3.732923792942555e-16, 0.1806809960559206]}, {'': [-2.831873222232283e-16, 0.18083163603239502]}, {'': [-3.8616453030440226e-17, 0.174817898022895]}, {'': [2.5744302020293485e-17, 0.17610969790520942]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995102;  // std dev = 8,26e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.4615972109615823;  // std dev = 5,269, 116,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=70 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05727395047262695;  // std dev = 3,945, 201,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=17 */
%   | | | else return 0.08618240790285764;  // std dev = 9,173, 478,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=109 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.41315332086762774;  // std dev = 0,484, 113,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=70 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07438858881395503;  // std dev = 3,324, 156,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=12 */
%   | | | else return 0.08413752681460962;  // std dev = 9,325, 494,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=114 */
%   | else return -0.12544463852839144;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,99e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.17818430127959115;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3248061646664547;  // std dev = 5,234, 115,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=70 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05943012988418627;  // std dev = 3,940, 202,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=17 */
%   | | | else return 0.06886902509916755;  // std dev = 9,140, 480,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=109 */
%   | else return -0.11231637819360625;  // std dev = 5,48e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158309;  // std dev = 4,13e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19306020998509552;  // std dev = 0,494, 129,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=70 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05278667963646328;  // std dev = 3,941, 203,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=17 */
%   | | | else return 0.052468301196135325;  // std dev = 9,181, 495,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=109 */
%   | else return -0.10159632948783619;  // std dev = 4,71e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 2,31e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.23524445505267252;  // std dev = 0,473, 112,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=70 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06415602297682589;  // std dev = 3,294, 130,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=12 */
%   | | | else return 0.06458753466402177;  // std dev = 9,285, 494,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=114 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 1,58e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1041813777583199;  // std dev = 0,492, 126,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=70 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.047900365184747655;  // std dev = 3,926, 191,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=17 */
%   | | | else return 0.05189575895292119;  // std dev = 9,083, 469,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=109 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253529;  // std dev = 2,27e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14859767044147684;  // std dev = 0,477, 112,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=70 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04691592121842267;  // std dev = 3,938, 199,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=17 */
%   | | | else return 0.0362574442437995;  // std dev = 9,130, 485,000 (wgt'ed) examples reached here.  /* #neg=376 #pos=109 */
%   | else return -0.07877675473109162;  // std dev = 4,71e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.03673556883172946;  // std dev = 5,535, 128,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=70 */
%   | | | else return -0.06617224991590998;  // std dev = 3,291, 131,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=12 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0289398382242069;  // std dev = 3,913, 171,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=17 */
%   | | | else return 0.07620339813637804;  // std dev = 8,350, 345,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=97 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.08081584983036252;  // std dev = 5,198, 116,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=70 */
%   | | | else return -0.04505883006689544;  // std dev = 3,953, 215,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=17 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06439887540845556;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | | else return 0.050303189062741914;  // std dev = 8,427, 362,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=97 */
%   | else return -0.06842697784420267;  // std dev = 3,94e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.012157255072797152;  // std dev = 6,086, 294,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=80 */
%   | | | else return 0.19327986658825272;  // std dev = 2,178, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04341979020053238;  // std dev = 3,283, 118,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=12 */
%   | | | else return 0.07396980885864582;  // std dev = 8,238, 323,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=97 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */


Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.252997
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 59.17 seconds
Total inference time: 3.446 seconds
AUC ROC: 0.900324


Results scoring model
   AUC ROC   = 0.86447
   AUC PR    = 0.507216
   CLL	      = -0.239354
   Precision = 0.173333 at threshold = 0.5
   Recall    = 0.622754
   F1        = 0.271186


Total scoring time: 7.798 seconds
Refined model CLL: -0.239354


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.252997
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 73.607 seconds
Total inference time: 3.446 seconds
AUC ROC: 0.900324
Total revision time: 73.607
Best scored revision CLL: -0.239354


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 12:36:34
{'F1': 0.318339, 'Inference time': 3.446, 'Precision': [0.210046, 0.5], 'AUC ROC': 0.900324, 'AUC PR': 0.576646, 'parameter_0.6': {'F1': 0.640777, 'Inference time': 1.888, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 3.176, 'CLL': -0.25592}, 'Recall': 0.657143, 'Learning time': 73.607, 'CLL': -0.252997}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.5581489350995099;  // std dev = 0,458, 150,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=105 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09030467314791042;  // std dev = 3,080, 194,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=10 */
%   | | | else return 0.14981560176617903;  // std dev = 2,227, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0896122589303384;  // std dev = 2,576, 134,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=7 */
%   | | | else return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.3287371703936257;  // std dev = 0,499, 425,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=200 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.48058404112409764;  // std dev = 0,456, 149,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=105 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07168592518049498;  // std dev = 3,067, 168,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=10 */
%   | | | else return 0.11891597081397777;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03522948093255851;  // std dev = 3,174, 115,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=12 */
%   | | | else return 0.2537778883932282;  // std dev = 10,578, 454,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=200 */
%   else return -0.1254446385283915;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.014962088466460114;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.35695343045780276;  // std dev = 5,811, 154,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=104 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07406528358617215;  // std dev = 2,576, 130,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=7 */
%   | | | else return 0.49379256154402046;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06707200530861336;  // std dev = 3,072, 178,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=10 */
%   | | | else return 0.28885849115386447;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return 0.20546012236210448;  // std dev = 0,496, 461,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=200 */
%   else return -0.11231637819360624;  // std dev = 5,77e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.24486040742581192;  // std dev = 0,479, 163,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=105 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05635050998122622;  // std dev = 3,068, 166,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=10 */
%   | | | else return 0.033025786940569186;  // std dev = 2,260, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02754177738090872;  // std dev = 3,035, 120,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=12 */
%   | | | else return 0.20734987182512;  // std dev = 10,257, 422,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=200 */
%   else return -0.10159632948783616;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.25462952334080163;  // std dev = 0,452, 147,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=105 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05698582641632158;  // std dev = 3,080, 183,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=10 */
%   | | | else return 0.0846112517495029;  // std dev = 2,177, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.042704197459682194;  // std dev = 3,105, 139,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=12 */
%   | | | else return 0.13840090152677814;  // std dev = 10,513, 447,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=200 */
%   else return -0.09269127618926107;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.059212971291990144;  // std dev = 0,433, 941,000 (wgt'ed) examples reached here.  /* #neg=607 #pos=334 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1918303284038853;  // std dev = 0,444, 144,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=105 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.04715290752072514;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.053405776807321545;  // std dev = 3,453, 177,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=14 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.020657770513159257;  // std dev = 3,035, 111,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | | | else return 0.08586659347496016;  // std dev = 10,596, 456,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=200 */
%   else return -0.07877675473109162;  // std dev = 4,71e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.09721689619630519;  // std dev = 0,465, 154,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=105 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05396678889064994;  // std dev = 3,075, 187,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=10 */
%   | | | else return 0.13507281269316473;  // std dev = 2,062, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05619853494834132;  // std dev = 2,565, 117,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=7 */
%   | | | else return 0.5234560437846729;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.1024864158341677;  // std dev = 0,499, 421,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=200 */
%   else return -0.07324622576333707;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.03571914263639288;  // std dev = 6,055, 160,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=103 */
%   | | | else return -0.06706395731686589;  // std dev = 2,598, 153,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=7 */
%   | | else return 0.28673125050914927;  // std dev = 0,366, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.038234430672681355;  // std dev = 3,055, 157,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=10 */
%   | | | else return 0.13964467348390497;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0.0556627476309632;  // std dev = 0,498, 442,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=200 */
%   else return -0.06842697784420267;  // std dev = 3,49e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08335382623102544;  // std dev = 0,457, 150,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=105 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.19800392997597888;  // std dev = 1,445, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.053069645214777715;  // std dev = 2,394, 117,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=9 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03277324613723246;  // std dev = 3,743, 203,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=17 */
%   | | | else return 0.03921562133387501;  // std dev = 10,493, 445,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=200 */
%   else return -0.06419184008202625;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */


Results
   AUC ROC   = 0.821535
   AUC PR    = 0.097832
   CLL	      = -0.366833
   Precision = 0.123077 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.193939


Total learning time: 124.146 seconds
Total inference time: 5.056 seconds
AUC ROC: 0.821535


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 12:38:43
{'F1': 0.193939, 'Recall': 0.457143, 'Inference time': 5.056, 'Precision': [0.123077, 0.5], 'Learning time': 124.146, 'AUC PR': 0.097832, 'CLL': -0.366833, 'AUC ROC': 0.821535}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5399671169176916;  // std dev = 0,466, 154,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=105 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09003759339789706;  // std dev = 3,079, 193,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=10 */
%   | | | else return 0.24703782398840124;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return 0.2327072389864336;  // std dev = 0,484, 566,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=212 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 0.776951
   AUC PR    = 0.090554
   CLL	      = -0.220943
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 13.456 seconds
Total inference time: 1.408 seconds
AUC ROC: 0.776951


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 12:38:58
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.408, 'Precision': [nan, 0.5], 'Learning time': 13.456, 'AUC PR': 0.090554, 'CLL': -0.220943, 'AUC ROC': 0.776951}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995094;  // std dev = 1,09e-06, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else return 0.09041843864560674;  // std dev = 14,183, 1.128,000 (wgt'ed) examples reached here.  /* #neg=866 #pos=262 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109567;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else return 0.07680834183787137;  // std dev = 14,203, 1.139,000 (wgt'ed) examples reached here.  /* #neg=877 #pos=262 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,02e-07, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else return 0.06557016698058395;  // std dev = 14,213, 1.144,000 (wgt'ed) examples reached here.  /* #neg=882 #pos=262 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583097;  // std dev = 3,48e-07, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else return 0.06215154075629894;  // std dev = 14,159, 1.116,000 (wgt'ed) examples reached here.  /* #neg=854 #pos=262 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601491;  // std dev = 3,72e-07, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else return 0.04073754881443835;  // std dev = 14,273, 1.178,000 (wgt'ed) examples reached here.  /* #neg=916 #pos=262 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694887;  // std dev = 3,82e-07, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else return 0.04570318405108435;  // std dev = 14,171, 1.122,000 (wgt'ed) examples reached here.  /* #neg=860 #pos=262 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253504;  // std dev = 3,04e-07, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else return 0.024001072654869445;  // std dev = 14,306, 1.197,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=262 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else return 0.015729755552772444;  // std dev = 14,347, 1.222,000 (wgt'ed) examples reached here.  /* #neg=960 #pos=262 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367153;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else return 0.02236054323771435;  // std dev = 14,263, 1.172,000 (wgt'ed) examples reached here.  /* #neg=910 #pos=262 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,16e-08, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else return 0.03666808225447891;  // std dev = 14,097, 1.085,000 (wgt'ed) examples reached here.  /* #neg=823 #pos=262 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.255773
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 4.178 seconds
Total inference time: 1.948 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.706278
   AUC PR    = 0.446859
   CLL	      = -0.253797
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.412556
   F1        = 0.584127


Total scoring time: 3.742 seconds
Parameter learned model CLL: -0.253797


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.09e-06, 0, 184], 'false': [14.183, 866, 262]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 184], 'false': [14.203, 877, 262]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.02e-07, 0, 184], 'false': [14.213, 882, 262]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.48e-07, 0, 184], 'false': [14.159, 854, 262]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.72e-07, 0, 184], 'false': [14.273, 916, 262]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.82e-07, 0, 184], 'false': [14.171, 860, 262]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 184], 'false': [14.306, 935, 262]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 184], 'false': [14.347, 960, 262]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 184], 'false': [14.263, 910, 262]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.16e-08, 0, 184], 'false': [14.097, 823, 262]}]]
[{'': [6.487564109113958e-15, 0.17832038126854924]}, {'': [-3.3210149606178597e-15, 0.1771142223088898]}, {'': [1.9694391045524517e-15, 0.1765703701892508]}, {'': [6.564797015174838e-16, 0.17965146902017456]}, {'': [7.530208340935844e-16, 0.1729442726153858]}, {'': [7.916372871240246e-16, 0.1789839254450887]}, {'': [5.020138893957229e-16, 0.17097184621258135]}, {'': [-1.5929286875056593e-16, 0.1684341357705584]}, {'': [-5.792467954566034e-17, 0.17357511444512358]}, {'': [3.6202924716037714e-17, 0.18316464567095417]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995094;  // std dev = 1,09e-06, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4374172277824365;  // std dev = 6,322, 164,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=95 */
%   | | | else return -0.05404618685170715;  // std dev = 4,052, 205,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=18 */
%   | | else return 0.07471870254136907;  // std dev = 0,412, 688,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=149 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109567;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4513515590254057;  // std dev = 0,475, 145,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=95 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06169795087986652;  // std dev = 4,574, 260,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=23 */
%   | | | else return 0.09168981975222289;  // std dev = 10,439, 604,000 (wgt'ed) examples reached here.  /* #neg=460 #pos=144 */
%   | else return -0.12544463852839136;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,02e-07, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.2753822184819055;  // std dev = 6,450, 169,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=95 */
%   | | | else return -0.047485125848867694;  // std dev = 4,025, 184,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=18 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05697731049779916;  // std dev = 4,584, 266,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=23 */
%   | | | else return 0.10361019393544185;  // std dev = 9,611, 472,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=126 */
%   | else return -0.1123163781936062;  // std dev = 7,74e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583097;  // std dev = 3,48e-07, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.26278887735110723;  // std dev = 0,488, 156,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=95 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.055600096318237154;  // std dev = 4,596, 287,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=23 */
%   | | | else return 0.05677155907213899;  // std dev = 10,498, 642,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=144 */
%   | else return -0.1015963294878363;  // std dev = 1,49e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601491;  // std dev = 3,72e-07, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.40780179679555256;  // std dev = 1,29e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16795577896202268;  // std dev = 6,348, 165,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=95 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04743462914437351;  // std dev = 4,591, 281,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=23 */
%   | | | else return 0.04423094846343038;  // std dev = 10,527, 655,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=144 */
%   | else return -0.09269127618926096;  // std dev = 4,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694887;  // std dev = 3,82e-07, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.149058605526191;  // std dev = 0,487, 160,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=95 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06506847926879153;  // std dev = 4,048, 210,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=18 */
%   | | | else return 0.03489326479075144;  // std dev = 10,743, 728,000 (wgt'ed) examples reached here.  /* #neg=579 #pos=149 */
%   | else return -0.08518475138839682;  // std dev = 5,58e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253504;  // std dev = 3,04e-07, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.013686561389995688;  // std dev = 7,550, 398,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=108 */
%   | | | else return 0.20534322505945815;  // std dev = 2,579, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03184952311500961;  // std dev = 3,995, 159,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=18 */
%   | | | else return 0.07877671052041323;  // std dev = 9,541, 454,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=126 */
%   | else return -0.0787767547310916;  // std dev = 5,77e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.34400660330905536;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1911848780851912;  // std dev = 5,567, 141,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=95 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03752232430855436;  // std dev = 4,523, 253,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=23 */
%   | | | else return 0.04718395279414524;  // std dev = 10,344, 603,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=144 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367153;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.034599165406898814;  // std dev = 6,404, 170,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=95 */
%   | | | else return -0.0946315842322259;  // std dev = 2,924, 206,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=9 */
%   | | else return 0.31773105081770187;  // std dev = 0,485, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06061012013831317;  // std dev = 3,490, 229,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=13 */
%   | | | else return 0.32742000074196476;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07550355106932834;  // std dev = 9,424, 427,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=126 */
%   | | | else return -0.06842697784420272;  // std dev = 5,27e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,16e-08, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06347546798153636;  // std dev = 0,486, 159,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=95 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03484665198975391;  // std dev = 4,452, 262,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=23 */
%   | | | else return 0.023940620673944698;  // std dev = 10,348, 620,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=144 */
%   | else return -0.06744179299358107;  // std dev = 0,087, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */


Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.250755
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 75.43 seconds
Total inference time: 3.665 seconds
AUC ROC: 0.900324


Results scoring model
   AUC ROC   = 0.865774
   AUC PR    = 0.508581
   CLL	      = -0.238463
   Precision = 0.177255 at threshold = 0.5
   Recall    = 0.625561
   F1        = 0.276238


Total scoring time: 9.519 seconds
Refined model CLL: -0.238463


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.250755
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 92.86900000000001 seconds
Total inference time: 3.665 seconds
AUC ROC: 0.900324
Total revision time: 92.86900000000001
Best scored revision CLL: -0.238463


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 12:40:38
{'F1': 0.318339, 'Inference time': 3.665, 'Precision': [0.210046, 0.5], 'AUC ROC': 0.900324, 'parameter_0.8': {'F1': 0.640777, 'Inference time': 1.948, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 4.178, 'CLL': -0.255773}, 'AUC PR': 0.576646, 'Recall': 0.657143, 'Learning time': 92.86900000000001, 'CLL': -0.250755}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5232652141692765;  // std dev = 0,472, 215,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=143 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09165801470743781;  // std dev = 3,514, 259,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=13 */
%   | | | else return 0.15226658215833588;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else return 0.22817546029844663;  // std dev = 0,483, 754,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=279 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.489616216436587;  // std dev = 0,454, 204,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=144 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07526154780420138;  // std dev = 3,504, 233,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=13 */
%   | | | else return 0.19572733716138066;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06791020193429106;  // std dev = 4,016, 173,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=18 */
%   | | | else return 0.2397154795813662;  // std dev = 12,392, 634,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=261 */
%   else return -0.12544463852839138;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.38822467110222847;  // std dev = 0,457, 206,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=144 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07310182058792043;  // std dev = 3,515, 262,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=13 */
%   | | | else return 0.11333728279694122;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05274506200106377;  // std dev = 4,003, 164,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=18 */
%   | | | else return 0.24589311682165776;  // std dev = 11,930, 574,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=261 */
%   else return -0.11231637819360621;  // std dev = 7,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.1641794673254572;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.34436782425187457;  // std dev = 5,921, 185,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=138 */
%   | | | else return 0.5984218783059305;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10478667795645732;  // std dev = 2,929, 176,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=9 */
%   | | | else return 0.4499347259279799;  // std dev = 1,872, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.017547188393261786;  // std dev = 4,394, 214,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=23 */
%   | | | else return 0.17978769484575738;  // std dev = 12,174, 604,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=261 */
%   else return -0.10159632948783628;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return -0.18309167969419538;  // std dev = 1,051, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.1853518666957066;  // std dev = 0,464, 214,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=143 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08753415719064488;  // std dev = 2,918, 167,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=9 */
%   | | | else return 0.3385067111654829;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.024768945614209174;  // std dev = 4,419, 235,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=23 */
%   | | | else return 0.1272130723349217;  // std dev = 12,357, 629,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=261 */
%   else return -0.09269127618926101;  // std dev = 3,80e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15539492910655137;  // std dev = 0,459, 211,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=144 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07772620050413141;  // std dev = 2,919, 167,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=9 */
%   | | | else return 0.2825030003029154;  // std dev = 1,949, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else return 0.08491692557977384;  // std dev = 0,446, 844,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=284 */
%   else return -0.08518475138839682;  // std dev = 5,77e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.1027863287903694;  // std dev = 6,739, 208,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=139 */
%   | | | else return -0.06199473112792625;  // std dev = 3,505, 226,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=13 */
%   | | else return 0.19776996131255756;  // std dev = 0,442, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05981356398929104;  // std dev = 2,903, 142,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=9 */
%   | | | else return 0.3428753553737559;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return 0.10484187399090024;  // std dev = 0,496, 596,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=261 */
%   else return -0.07877675473109161;  // std dev = 5,27e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.21500039426747422;  // std dev = 0,378, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.11164866359529213;  // std dev = 6,351, 195,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=138 */
%   | | | else return 0.32343185379971684;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05869444871240532;  // std dev = 3,523, 232,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=13 */
%   | | | else return 0.10221335260963961;  // std dev = 2,532, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0441214383814863;  // std dev = 3,569, 187,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=18 */
%   | | | else return 0.07969525301058354;  // std dev = 12,128, 598,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=261 */
%   else return -0.07324622576333707;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.027928879264983917;  // std dev = 0,472, 223,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=144 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.053537542918854035;  // std dev = 3,519, 236,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=13 */
%   | | | else return 0.05059502482510756;  // std dev = 2,578, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06239954226731184;  // std dev = 2,924, 180,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=9 */
%   | | | else return 0.33000196268033205;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return 0.07243486566043368;  // std dev = 0,497, 583,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=261 */
%   else return -0.06842697784420265;  // std dev = 4,83e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.00716175075168413;  // std dev = 0,477, 228,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=144 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.08083261699946324;  // std dev = 1,271, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.06638503532772032;  // std dev = 3,390, 202,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=16 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.044803496196423064;  // std dev = 3,500, 226,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=13 */
%   | | | else return 0.06503479596194478;  // std dev = 2,560, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else return 0.035490599893401;  // std dev = 0,495, 610,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=261 */
%   else return -0.06419184008202626;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 0.822663
   AUC PR    = 0.110501
   CLL	      = -0.342519
   Precision = 0.143564 at threshold = 0.5
   Recall    = 0.414286
   F1        = 0.213235


Total learning time: 169.327 seconds
Total inference time: 4.557 seconds
AUC ROC: 0.822663


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 12:43:32
{'F1': 0.213235, 'Recall': 0.414286, 'Inference time': 4.557, 'Precision': [0.143564, 0.5], 'Learning time': 169.327, 'AUC PR': 0.110501, 'CLL': -0.342519, 'AUC ROC': 0.822663}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5438632208137948;  // std dev = 0,464, 210,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=144 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09267073703163525;  // std dev = 2,925, 183,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=9 */
%   | | | else return 0.4581489350995123;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.04758876981852064;  // std dev = 4,564, 244,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=23 */
%   | | | else return 0.3050667433186859;  // std dev = 12,015, 584,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=261 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.218889
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 15.797 seconds
Total inference time: 1.908 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 12:43:50
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.908, 'Precision': [nan, 0.5], 'Learning time': 15.797, 'AUC PR': 0.097917, 'CLL': -0.218889, 'AUC ROC': 0.821572}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.08813437905875049;  // std dev = 15,599, 1.374,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=316 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.06652255173686313;  // std dev = 15,705, 1.440,000 (wgt'ed) examples reached here.  /* #neg=1.124 #pos=316 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.05770510363167026;  // std dev = 15,705, 1.440,000 (wgt'ed) examples reached here.  /* #neg=1.124 #pos=316 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.052818733074942135;  // std dev = 15,674, 1.420,000 (wgt'ed) examples reached here.  /* #neg=1.104 #pos=316 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.0346486280112449;  // std dev = 15,781, 1.491,000 (wgt'ed) examples reached here.  /* #neg=1.175 #pos=316 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.02854785044303253;  // std dev = 15,791, 1.498,000 (wgt'ed) examples reached here.  /* #neg=1.182 #pos=316 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.03320648616727375;  // std dev = 15,701, 1.437,000 (wgt'ed) examples reached here.  /* #neg=1.121 #pos=316 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.02903387981642647;  // std dev = 15,691, 1.431,000 (wgt'ed) examples reached here.  /* #neg=1.115 #pos=316 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.017037856779103175;  // std dev = 15,766, 1.481,000 (wgt'ed) examples reached here.  /* #neg=1.165 #pos=316 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.02287638280759509;  // std dev = 15,680, 1.424,000 (wgt'ed) examples reached here.  /* #neg=1.108 #pos=316 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.246428
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 4.326 seconds
Total inference time: 2.171 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.716846
   AUC PR    = 0.467514
   CLL	      = -0.243608
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.605


Total scoring time: 4.187 seconds
Parameter learned model CLL: -0.243608


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 242], 'false': [15.599, 1058, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.705, 1124, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.92e-07, 0, 242], 'false': [15.705, 1124, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.674, 1104, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.67e-07, 0, 242], 'false': [15.781, 1175, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 242], 'false': [15.791, 1182, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 242], 'false': [15.701, 1121, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.23e-07, 0, 242], 'false': [15.691, 1115, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.766, 1165, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 242], 'false': [15.68, 1108, 316]}]]
[{'': [4.8152482919279514e-15, 0.17709213952611402]}, {'': [-4.2280228904733235e-15, 0.17128858024690627]}, {'': [9.98283182472868e-16, 0.1712885802469107]}, {'': [-2.055288905091199e-16, 0.17301329101367832]}, {'': [2.9361270072731413e-16, 0.16702045494519022]}, {'': [3.8169651094550837e-16, 0.16644890116059236]}, {'': [3.5233524087277696e-16, 0.1715454324011652]}, {'': [6.239269890455425e-17, 0.1720610950203579]}, {'': [-1.7249746167729704e-16, 0.16784286763555603]}, {'': [2.9361270072731413e-17, 0.1726660143921269]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.4792015666784567;  // std dev = 6,687, 190,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=118 */
%   | | | else return -0.03680904809376528;  // std dev = 4,730, 238,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=25 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06146521281045585;  // std dev = 4,795, 311,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=25 */
%   | | | else return 0.11157359263375438;  // std dev = 10,512, 584,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=148 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3593628235276597;  // std dev = 7,123, 207,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=118 */
%   | | | else return -0.03369467825257239;  // std dev = 4,734, 241,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=25 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04329148495095404;  // std dev = 4,766, 274,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=25 */
%   | | | else return 0.09109556913184746;  // std dev = 10,556, 599,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=148 */
%   | else return -0.1254446385283913;  // std dev = 0,000, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2962246800138841;  // std dev = 0,495, 206,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=118 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.03582719795686938;  // std dev = 4,750, 256,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=25 */
%   | | | else return 0.04856203915839897;  // std dev = 11,634, 851,000 (wgt'ed) examples reached here.  /* #neg=678 #pos=173 */
%   | else return -0.11231637819360621;  // std dev = 8,69e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.33957002173901296;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.294838580411526;  // std dev = 6,568, 186,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06124550899873175;  // std dev = 4,811, 340,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=25 */
%   | | | else return 0.06241421033290323;  // std dev = 11,492, 774,000 (wgt'ed) examples reached here.  /* #neg=601 #pos=173 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.17273421444798634;  // std dev = 0,491, 204,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05167635451282578;  // std dev = 4,804, 328,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=25 */
%   | | | else return 0.051330520465115693;  // std dev = 11,509, 782,000 (wgt'ed) examples reached here.  /* #neg=609 #pos=173 */
%   | else return -0.09269127618926085;  // std dev = 7,30e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18603757854934222;  // std dev = 0,479, 186,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04523534893184099;  // std dev = 4,802, 325,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=25 */
%   | | | else return 0.03892500022918773;  // std dev = 11,551, 797,000 (wgt'ed) examples reached here.  /* #neg=624 #pos=173 */
%   | else return -0.0851847513883968;  // std dev = 6,50e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10048434173823177;  // std dev = 0,486, 199,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.041111038588383;  // std dev = 4,804, 328,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=25 */
%   | | | else return 0.0367639676296373;  // std dev = 11,516, 787,000 (wgt'ed) examples reached here.  /* #neg=614 #pos=173 */
%   | else return -0.07877675473109155;  // std dev = 6,91e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.03082445677481985;  // std dev = 8,265, 550,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=133 */
%   | | | else return 0.1819257972450888;  // std dev = 2,652, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03149830556326338;  // std dev = 4,688, 207,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=25 */
%   | | | else return 0.055757061016546185;  // std dev = 10,464, 569,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=148 */
%   | else return -0.0732462257633371;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.10089695619497167;  // std dev = 6,710, 193,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=118 */
%   | | | else return -0.041707279690098985;  // std dev = 4,784, 355,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=25 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.03614205941779434;  // std dev = 4,711, 223,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=25 */
%   | | | else return 0.04978174106751499;  // std dev = 10,441, 562,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=148 */
%   | else return -0.06842697784420264;  // std dev = 5,48e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.015131225276919102;  // std dev = 8,057, 487,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=133 */
%   | | | else return 0.1754718645509532;  // std dev = 2,637, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.025260325089082145;  // std dev = 4,694, 211,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=25 */
%   | | | else return 0.06367061244540033;  // std dev = 10,282, 518,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=148 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */


Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.246341
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 98.548 seconds
Total inference time: 3.772 seconds
AUC ROC: 0.900324


Results scoring model
   AUC ROC   = 0.870011
   AUC PR    = 0.529473
   CLL	      = -0.231318
   Precision = 0.181178 at threshold = 0.5
   Recall    = 0.645161
   F1        = 0.282908


Total scoring time: 11.031 seconds
Refined model CLL: -0.231318


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.246341
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 118.09200000000001 seconds
Total inference time: 3.772 seconds
AUC ROC: 0.900324
Total revision time: 118.09200000000001
Best scored revision CLL: -0.231318


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 12:45:55
{'parameter_1.0': {'F1': 0.640777, 'Inference time': 2.171, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 4.326, 'CLL': -0.246428}, 'F1': 0.318339, 'Inference time': 3.772, 'Precision': [0.210046, 0.5], 'AUC ROC': 0.900324, 'AUC PR': 0.576646, 'Recall': 0.657143, 'Learning time': 118.09200000000001, 'CLL': -0.246341}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5456489350995086;  // std dev = 0,464, 272,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=187 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07304372545094635;  // std dev = 3,737, 218,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=15 */
%   | | | else return 0.41370449065506787;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08209010872518906;  // std dev = 3,755, 251,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=15 */
%   | | | else return 0.3126943896449669;  // std dev = 2,335, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else return 0.28672036367093623;  // std dev = 0,495, 749,000 (wgt'ed) examples reached here.  /* #neg=428 #pos=321 */
%   else return -0.14185106490048785;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.46303382746755223;  // std dev = 0,465, 273,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08247390710793571;  // std dev = 3,778, 299,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=15 */
%   | | | else return 0.13935963621760172;  // std dev = 2,582, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.014898403895657383;  // std dev = 4,568, 204,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=25 */
%   | | | else return 0.271659416332331;  // std dev = 13,262, 710,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=321 */
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.02144743033339068;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.43913450516332037;  // std dev = 6,768, 245,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=184 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06733549047976208;  // std dev = 3,748, 232,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=15 */
%   | | | else return 0.46973974255048834;  // std dev = 1,822, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.069970431024306;  // std dev = 3,769, 283,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=15 */
%   | | | else return 0.15093647436808003;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else return 0.20671839431075315;  // std dev = 0,495, 745,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=321 */
%   else return -0.11231637819360621;  // std dev = 8,82e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.28482121531748894;  // std dev = 0,459, 269,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=187 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05668102321781424;  // std dev = 3,741, 222,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=15 */
%   | | | else return 0.34405740531566453;  // std dev = 1,928, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.38437555850585386;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.05040415447705877;  // std dev = 4,347, 282,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=22 */
%   | | else return 0.1734146378425534;  // std dev = 0,496, 737,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=321 */
%   else return -0.10159632948783644;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17995855268695873;  // std dev = 0,470, 284,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06400689726380164;  // std dev = 3,793, 283,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=15 */
%   | | | else return 0.05550931666549917;  // std dev = 2,645, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.027088109235026907;  // std dev = 4,383, 233,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=25 */
%   | | | else return 0.12757445143283247;  // std dev = 13,591, 756,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=321 */
%   else return -0.0926912761892608;  // std dev = 7,60e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1394182831146942;  // std dev = 0,469, 282,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.053861890526673506;  // std dev = 3,742, 287,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=15 */
%   | | | else return 0.06008158977535908;  // std dev = 2,638, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.015341018363549352;  // std dev = 4,356, 215,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=25 */
%   | | | else return 0.12969442509010468;  // std dev = 13,238, 707,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=321 */
%   else return -0.0851847513883968;  // std dev = 6,14e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.14920617230813482;  // std dev = 0,452, 264,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=187 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.052906617304766194;  // std dev = 3,774, 297,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=15 */
%   | | | else return 0.08348445418216985;  // std dev = 2,572, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.047238090302813916;  // std dev = 3,742, 226,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=15 */
%   | | | else return 0.31911664957158936;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0.09121913329229704;  // std dev = 0,497, 722,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=321 */
%   else return -0.07877675473109154;  // std dev = 7,15e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.5041163029190465;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.49588369708095353;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.11419719349438752;  // std dev = 0,452, 258,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=184 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.043830563282017954;  // std dev = 3,750, 226,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=15 */
%   | | | else return 0.18618719545114726;  // std dev = 1,932, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.03121924289127115;  // std dev = 4,578, 312,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=25 */
%   | | | else return 0.045117131346257625;  // std dev = 13,649, 765,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=321 */
%   else return -0.07324622576333716;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09625426120430136;  // std dev = 0,443, 261,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04578708444950017;  // std dev = 3,792, 293,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=15 */
%   | | | else return 0.12131112835606846;  // std dev = 2,473, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.019605264883662377;  // std dev = 4,209, 238,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=25 */
%   | | | else return 0.04517724906470078;  // std dev = 13,523, 746,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=321 */
%   else return -0.06842697784420264;  // std dev = 5,77e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.057174507939287;  // std dev = 0,447, 269,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.041516440122773675;  // std dev = 3,792, 288,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=15 */
%   | | | else return 0.04518196371990483;  // std dev = 2,576, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.015894237449666577;  // std dev = 4,246, 225,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=25 */
%   | | | else return 0.0298597456437414;  // std dev = 13,577, 754,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=321 */
%   else return -0.06419184008202626;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */


Results
   AUC ROC   = 0.825237
   AUC PR    = 0.107304
   CLL	      = -0.349575
   Precision = 0.151961 at threshold = 0.5
   Recall    = 0.442857
   F1        = 0.226277


Total learning time: 213.49 seconds
Total inference time: 5.564 seconds
AUC ROC: 0.825237


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 12:49:35
{'F1': 0.226277, 'Recall': 0.442857, 'Inference time': 5.564, 'Precision': [0.151961, 0.5], 'Learning time': 213.49, 'AUC PR': 0.107304, 'CLL': -0.349575, 'AUC ROC': 0.825237}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5507415276921013;  // std dev = 0,461, 270,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09747236667563611;  // std dev = 3,786, 338,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=15 */
%   | | | else return 0.17064893509951234;  // std dev = 2,622, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.035013458062881135;  // std dev = 4,725, 234,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=25 */
%   | | | else return 0.29018123657999223;  // std dev = 13,503, 743,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=321 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.217079
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.746 seconds
Total inference time: 1.432 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 12:49:57
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.432, 'Precision': [nan, 0.5], 'Learning time': 20.746, 'AUC PR': 0.097917, 'CLL': -0.217079, 'AUC ROC': 0.821572}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 585
Target train neg examples: 24169

Target test facts examples: 9306
Target test pos	 examples: 113
Target test neg examples: 3827

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,19e-07, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.09219148829100264;  // std dev = 7,110, 282,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=66 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.07180779473428192;  // std dev = 7,151, 293,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=66 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 4,21e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.07525716747129614;  // std dev = 7,090, 277,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=66 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.03867867112206068;  // std dev = 7,211, 311,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=66 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601495;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.02970310269624231;  // std dev = 7,226, 316,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=66 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.03071821187150799;  // std dev = 7,201, 308,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=66 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 2,98e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.053542166641592226;  // std dev = 7,074, 273,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=66 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.02949370867022273;  // std dev = 7,147, 292,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=66 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.03876729583260963;  // std dev = 7,082, 275,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=66 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,33e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else return 0.004682342365566719;  // std dev = 7,211, 311,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=66 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.253944
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 2.327 seconds
Total inference time: 1.879 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.717949
   AUC PR    = 0.470897
   CLL	      = -0.250285
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.435897
   F1        = 0.607143


Total scoring time: 2.561 seconds
Parameter learned model CLL: -0.250285


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.19e-07, 0, 51], 'false': [7.11, 216, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.151, 227, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 51], 'false': [7.09, 211, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.211, 245, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.226, 250, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.201, 242, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 51], 'false': [7.074, 207, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.147, 226, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 51], 'false': [7.082, 209, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.33e-08, 0, 51], 'false': [7.211, 245, 66]}]]
[{'': [2.7864421010200007e-16, 0.1792666364870989]}, {'': [-4.876273676785002e-16, 0.17451571946091665]}, {'': [3.483052626275001e-17, 0.1814959141915047]}, {'': [-3.483052626275001e-16, 0.1671818943145743]}, {'': [-3.483052626275001e-17, 0.16523794263739883]}, {'': [-2.6122894697062506e-17, 0.16836734693877334]}, {'': [1.7415263131375004e-17, 0.1833111943002055]}, {'': [-6.095342095981252e-17, 0.17493901294801947]}, {'': [-3.047671047990626e-17, 0.18239999999999884]}, {'': [2.1769078914218755e-17, 0.16718189431457545]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,19e-07, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.467905032660487;  // std dev = 0,488, 41,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=25 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.11746082099804868;  // std dev = 0,988, 41,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11685106490048769;  // std dev = 1,396, 80,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.11188027838309306;  // std dev = 5,037, 134,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=34 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.38642505104618163;  // std dev = 0,491, 42,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.1284940228486882;  // std dev = 0,017, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0.19681144939127979;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10647399472065397;  // std dev = 1,399, 92,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=2 */
%   | | | else return 0.2670719622367217;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.1035187096345752;  // std dev = 5,018, 131,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=34 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 4,21e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.053576863349114455;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2916721014443524;  // std dev = 3,207, 42,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=24 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06312773185177396;  // std dev = 1,962, 82,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=5 */
%   | | | else return 0.06786089272218854;  // std dev = 5,208, 159,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=36 */
%   | else return -0.1266888159420135;  // std dev = 0,166, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.34208920522332087;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.35521141263881034;  // std dev = 2,758, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06175402697892122;  // std dev = 2,007, 79,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=5 */
%   | | | else return 0.04820418527807723;  // std dev = 5,233, 169,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=36 */
%   | else return -0.10388091897836889;  // std dev = 0,034, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601495;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.11891328991076015;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.17414581597637593;  // std dev = 3,098, 40,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04994773615462469;  // std dev = 1,991, 77,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=5 */
%   | | | else return 0.03210601221031356;  // std dev = 5,272, 174,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=36 */
%   | else return -0.09398421490978606;  // std dev = 0,032, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.12077525933131752;  // std dev = 3,179, 44,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   | | | else return -0.052843707833219476;  // std dev = 2,019, 83,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=5 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09721337574888383;  // std dev = 1,322, 52,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | | else return 0.021737673481026995;  // std dev = 5,170, 159,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=34 */
%   | else return -0.08837207984045936;  // std dev = 0,040, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 2,98e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return -0.028166012995153863;  // std dev = 3,654, 54,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
%   | | | else return -0.11846620018530989;  // std dev = 0,069, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0.35813752502484847;  // std dev = 0,947, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.2919428789816937;  // std dev = 1,189, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06440137144521473;  // std dev = 1,323, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else return 0.075014553487206;  // std dev = 0,441, 127,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.05251071133266368;  // std dev = 0,493, 47,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=25 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07302055616833489;  // std dev = 1,234, 45,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=2 */
%   | | | else return 0.008482061687895618;  // std dev = 5,473, 212,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=39 */
%   | else return -0.09800935456510765;  // std dev = 0,180, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( author(G, E), venue(G, F) )
%   | | | then return -0.37824339486402847;  // std dev = 0,311, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.021102577991113935;  // std dev = 3,670, 115,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=27 */
%   | | else if ( author(H, E), title(H, B) )
%   | | | then return 0.3867853162033061;  // std dev = 0,770, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02171282738554135;  // std dev = 0,876, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04627414185133338;  // std dev = 1,219, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | | else return 0.05257679928918531;  // std dev = 5,011, 130,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | else return -0.07438969385839922;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,33e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, A), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.6724245045718138;  // std dev = 1,106, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | | else return -0.16243671183677003;  // std dev = 2,296, 210,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=4 */
%   | | else if ( haswordauthor(H, D), haswordtitle(A, D) )
%   | | | then return -0.4998441983660229;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08812867170404402;  // std dev = 0,931, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return -0.17479987301836794;  // std dev = 0,105, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08775341177656815;  // std dev = 0,064, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.955751
   AUC PR    = 0.725163
   CLL	      = -0.249375
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 83.732 seconds
Total inference time: 5.327 seconds
AUC ROC: 0.955751


Results scoring model
   AUC ROC   = 0.965713
   AUC PR    = 0.724651
   CLL	      = -0.183829
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.649573
   F1        = 0.787565


Total scoring time: 26.729 seconds
Refined model CLL: -0.183829


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.955751
   AUC PR    = 0.725163
   CLL	      = -0.249375
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 115.349 seconds
Total inference time: 5.327 seconds
AUC ROC: 0.955751
Total revision time: 115.349
Best scored revision CLL: -0.183829


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 12:52:01
{'parameter_0.2': {'F1': 0.604938, 'Inference time': 1.879, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 2.327, 'CLL': -0.253944}, 'F1': 0.305499, 'Inference time': 5.327, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.955751, 'AUC PR': 0.725163, 'Recall': 0.663717, 'Learning time': 115.349, 'CLL': -0.249375}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.4930695700201471;  // std dev = 0,481, 63,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=40 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.11010503315445595;  // std dev = 1,392, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.09639651944594228;  // std dev = 1,382, 44,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=2 */
%   | | | else return 0.2380372032559382;  // std dev = 6,494, 179,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=68 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.3332054912315484;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5417160335580695;  // std dev = 0,430, 53,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10265326320449665;  // std dev = 1,395, 76,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=2 */
%   | | else return 0.18860999483981922;  // std dev = 0,473, 198,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=70 */
%   else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.7485954275470138;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3115170216320566;  // std dev = 3,804, 62,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.12260749873488012;  // std dev = 1,439, 78,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=2 */
%   | | | else return 0.17158318798449912;  // std dev = 1,239, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.15345103414873026;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.5132156325179366;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.27014353130945834;  // std dev = 0,499, 144,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=68 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.025493030110224375;  // std dev = 1,045, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.28584462489704976;  // std dev = 0,469, 59,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=40 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09437969834617527;  // std dev = 1,364, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | | else return 0.09811403545845576;  // std dev = 1,312, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.08844132063453122;  // std dev = 1,248, 37,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=2 */
%   | | | else return 0.19530538760452185;  // std dev = 6,146, 153,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=68 */
%   else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2779220433822174;  // std dev = 0,988, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.281243420115131;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.26408716201607135;  // std dev = 3,291, 54,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | else if ( haswordvenue(G, C) )
%   | | then if ( author(H, D), title(H, B) )
%   | | | then return -0.1935350581084272;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.0804895040064826;  // std dev = 1,008, 50,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
%   | | else return 0.2753096311950443;  // std dev = 1,056, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | then if ( haswordvenue(K, I) )
%   | | then return -0.12290958254492337;  // std dev = 0,044, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0.44962875207752967;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.15253709051038014;  // std dev = 0,495, 155,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=68 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.49257188176893485;  // std dev = 0,154, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.300794264973473;  // std dev = 0,369, 48,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=39 */
%   | else if ( haswordvenue(F, C) )
%   | | then return -0.10964457488995503;  // std dev = 0,044, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0.06584508379917646;  // std dev = 1,109, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then if ( author(J, H), title(J, B) )
%   | | | then return -0.14309566964044818;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.07458233225263936;  // std dev = 1,022, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | else return 0.22758465005019302;  // std dev = 1,037, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.07482935813796032;  // std dev = 0,486, 174,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=68 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.045779495693914825;  // std dev = 0,829, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( author(F, D), title(F, A) )
%   | | | then return -0.488795895458625;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.06304339016919917;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( author(G, D), title(G, B) )
%   | | then return 0.010666628679368418;  // std dev = 0,366, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return -0.07300341515290756;  // std dev = 0,160, 73,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=2 */
%   else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | then if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return -0.10135735274798964;  // std dev = 2,11e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0.34965482148079835;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1025683140430577;  // std dev = 0,496, 155,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=68 */
%   | else return -0.10721178985596053;  // std dev = 0,071, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.05370860321541923;  // std dev = 3,662, 63,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=41 */
%   | | | else return -0.06601927324473715;  // std dev = 1,369, 70,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=2 */
%   | | else if ( author(G, E), title(G, A) )
%   | | | then return 0.4801286059671018;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05076862886083112;  // std dev = 0,852, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09249114700512961;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0.2696433591636573;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.07930964460519017;  // std dev = 0,496, 155,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=68 */
%   else return -0.09800769351727383;  // std dev = 0,033, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.3718118160149733;  // std dev = 0,074, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.11015672376811854;  // std dev = 0,441, 53,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=39 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.05639219339256584;  // std dev = 1,360, 61,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */
%   | | | else return 0.048687366513595585;  // std dev = 1,147, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.029475454955072342;  // std dev = 0,457, 193,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=70 */
%   else return -0.08698224995247753;  // std dev = 0,054, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.08731568118427872;  // std dev = 0,433, 57,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=42 */
%   | else if ( author(E, D), title(E, B) )
%   | | then if ( haswordvenue(F, C) )
%   | | | then return -0.080329731113273;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.13280417480268958;  // std dev = 0,966, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.10548075986648779;  // std dev = 0,157, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.045199131748745285;  // std dev = 1,307, 61,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then if ( haswordvenue(J, H) )
%   | | then return -0.0853137047107688;  // std dev = 0,041, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0.11892902249104507;  // std dev = 0,859, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.050206075903216706;  // std dev = 0,494, 157,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=68 */


Results
   AUC ROC   = 0.724076
   AUC PR    = 0.07337
   CLL	      = -0.444565
   Precision = 0.046973 at threshold = 0.5
   Recall    = 0.39823
   F1        = 0.084034


Total learning time: 133.532 seconds
Total inference time: 4.234 seconds
AUC ROC: 0.724076


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 12:54:19
{'F1': 0.084034, 'Recall': 0.39823, 'Inference time': 4.234, 'Precision': [0.046973, 0.5], 'Learning time': 133.532, 'AUC PR': 0.07337, 'CLL': -0.444565, 'AUC ROC': 0.724076}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.1438632208137979;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.5724346493852267;  // std dev = 0,452, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.10906417965458606;  // std dev = 1,391, 61,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.095339436993511;  // std dev = 1,381, 43,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | | | else return 0.31760839455897294;  // std dev = 6,063, 148,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=68 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.833652
   AUC PR    = 0.098313
   CLL	      = -0.21797
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.252 seconds
Total inference time: 1.866 seconds
AUC ROC: 0.833652


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 12:54:30
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.866, 'Precision': [nan, 0.5], 'Learning time': 9.252, 'AUC PR': 0.098313, 'CLL': -0.21797, 'AUC ROC': 0.833652}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,13e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.07746153739083483;  // std dev = 10,228, 611,000 (wgt'ed) examples reached here.  /* #neg=477 #pos=134 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.06634169634780465;  // std dev = 10,237, 615,000 (wgt'ed) examples reached here.  /* #neg=481 #pos=134 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,21e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.0676179597644595;  // std dev = 10,172, 588,000 (wgt'ed) examples reached here.  /* #neg=454 #pos=134 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.07273070451539633;  // std dev = 10,076, 553,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=134 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.050166828470488777;  // std dev = 10,156, 582,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=134 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.041852128006950234;  // std dev = 10,161, 584,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=134 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 1,37e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.04310614545105087;  // std dev = 10,110, 565,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=134 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,66e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.024696317714536;  // std dev = 10,187, 594,000 (wgt'ed) examples reached here.  /* #neg=460 #pos=134 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367133;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.018074901025438666;  // std dev = 10,204, 601,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=134 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.03938538315974072;  // std dev = 10,043, 542,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=134 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.260987
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 2.934 seconds
Total inference time: 1.974 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.713675
   AUC PR    = 0.461907
   CLL	      = -0.257735
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.42735
   F1        = 0.598802


Total scoring time: 2.737 seconds
Parameter learned model CLL: -0.257735


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.13e-07, 0, 100], 'false': [10.228, 477, 134]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 100], 'false': [10.237, 481, 134]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-07, 0, 100], 'false': [10.172, 454, 134]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.46e-07, 0, 100], 'false': [10.076, 419, 134]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 100], 'false': [10.156, 448, 134]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 100], 'false': [10.161, 450, 134]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.37e-07, 0, 100], 'false': [10.11, 431, 134]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.66e-08, 0, 100], 'false': [10.187, 460, 134]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 100], 'false': [10.204, 467, 134]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.65e-08, 0, 100], 'false': [10.043, 408, 134]}]]
[{'': [1.7053025658242404e-15, 0.17121458476753418]}, {'': [-1.4210854715202004e-16, 0.17041179192279632]}, {'': [1.7763568394002505e-15, 0.17595677726873274]}, {'': [6.039613253960852e-16, 0.18359825904404573]}, {'': [1.7763568394002505e-17, 0.17722983904300063]}, {'': [-4.4408920985006264e-17, 0.17680380934509163]}, {'': [1.865174681370263e-16, 0.1809194142062855]}, {'': [4.4408920985006264e-17, 0.17469872688727886]}, {'': [-5.329070518200751e-17, 0.17324979720433067]}, {'': [1.3322676295501878e-17, 0.18610857695292277]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,13e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.44351478875804956;  // std dev = 4,461, 82,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=48 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.10411521584388389;  // std dev = 1,962, 106,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=4 */
%   | | | else return 0.3966104735610508;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.12634718893149544;  // std dev = 1,403, 129,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=2 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.12192846265856878;  // std dev = 7,023, 254,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=67 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.127334239218108;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.44383650724280316;  // std dev = 4,107, 74,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0841888762640746;  // std dev = 1,954, 88,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=4 */
%   | | | else return 0.19161009323734268;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.11297104542252073;  // std dev = 1,404, 141,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=2 */
%   | | | else return 0.077334239218108;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.13020265004450496;  // std dev = 6,909, 233,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=67 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,21e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.1417131513096307;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.27824774593919915;  // std dev = 4,571, 85,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=48 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07648035291949212;  // std dev = 1,956, 91,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=4 */
%   | | | else return 0.3539469811360798;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return 0.031886235113580776;  // std dev = 1,526, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.1077705396480539;  // std dev = 1,384, 150,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=2 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.07935857150615108;  // std dev = 7,066, 263,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=67 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.08546511298522437;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.24607928781138808;  // std dev = 4,422, 81,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=48 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07946346729721328;  // std dev = 2,150, 134,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=5 */
%   | | | else return 0.060276454315945235;  // std dev = 7,564, 332,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=78 */
%   | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return -0.11256699806076889;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.29779240738099594;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10424210392066058;  // std dev = 0,016, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.22508146591684994;  // std dev = 0,484, 83,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07622866451969487;  // std dev = 2,165, 146,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=5 */
%   | | | else return 0.0534595926843956;  // std dev = 7,532, 335,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=78 */
%   | else return -0.10606246082682842;  // std dev = 0,212, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12408199198286177;  // std dev = 0,492, 90,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=51 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0651761318998855;  // std dev = 2,146, 139,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=5 */
%   | | | else return 0.0328233703708906;  // std dev = 7,605, 349,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=78 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09250596166504901;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.22068356618775561;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08475968225908208;  // std dev = 0,006, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 1,37e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12800338894923907;  // std dev = 0,485, 85,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=51 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.03812676249793323;  // std dev = 2,771, 105,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=11 */
%   | | | else return 0.0371354501742392;  // std dev = 7,268, 360,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=72 */
%   | else return -0.08899060674350784;  // std dev = 0,156, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,66e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.0509391421451526;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.13533755124199304;  // std dev = 4,054, 73,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.058773748701519093;  // std dev = 2,132, 128,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=5 */
%   | | | else return 0.046605366436981814;  // std dev = 7,480, 319,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=78 */
%   | else return -0.07985186251493431;  // std dev = 0,136, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367133;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.1857296549199067;  // std dev = 1,291, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07560533251240877;  // std dev = 4,310, 79,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=49 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0583192140145567;  // std dev = 2,145, 146,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=5 */
%   | | | else return 0.010195267213920665;  // std dev = 7,620, 365,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=78 */
%   | else return -0.07993422685272109;  // std dev = 0,150, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.04397539666189276;  // std dev = 1,118, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.027444152660613612;  // std dev = 4,451, 84,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=49 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06679299423672745;  // std dev = 1,412, 129,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=2 */
%   | | | else return 0.09772711754227979;  // std dev = 1,489, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.020988599532072813;  // std dev = 2,743, 84,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=11 */
%   | | | else return 0.03518968153550584;  // std dev = 7,033, 256,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=67 */
%   | | else return -0.06723786570134303;  // std dev = 0,086, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.859286
   AUC PR    = 0.53851
   CLL	      = -0.27552
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 40.463 seconds
Total inference time: 3.167 seconds
AUC ROC: 0.859286


Results scoring model
   AUC ROC   = 0.887331
   AUC PR    = 0.529102
   CLL	      = -0.233089
   Precision = 0.18408 at threshold = 0.5
   Recall    = 0.632479
   F1        = 0.285164


Total scoring time: 8.624 seconds
Refined model CLL: -0.233089


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.859286
   AUC PR    = 0.53851
   CLL	      = -0.27552
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 54.758 seconds
Total inference time: 3.167 seconds
AUC ROC: 0.859286
Total revision time: 54.758
Best scored revision CLL: -0.233089


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 12:55:31
{'F1': 0.305499, 'Inference time': 3.167, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.859286, 'AUC PR': 0.53851, 'parameter_0.4': {'F1': 0.604938, 'Inference time': 1.974, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 2.934, 'CLL': -0.260987}, 'Recall': 0.663717, 'Learning time': 54.758, 'CLL': -0.27552}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.5451054568386419;  // std dev = 0,464, 115,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=79 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.04564893509951222;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.12658388932796863;  // std dev = 1,403, 131,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.020971944021366803;  // std dev = 3,110, 91,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=11 */
%   | | | else return 0.29404637099694436;  // std dev = 8,759, 312,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=136 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.7634778380054928;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5128880069610438;  // std dev = 0,440, 106,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=78 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.11611127172297839;  // std dev = 1,397, 139,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=2 */
%   | | | else return 0.037274151600738215;  // std dev = 1,560, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.03455538349290867;  // std dev = 3,138, 105,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=11 */
%   | | | else return 0.25296555283474187;  // std dev = 8,770, 313,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=136 */
%   else return -0.1254446385283914;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6280449250789534;  // std dev = 0,109, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.32256552546251643;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.41534211290369033;  // std dev = 0,438, 104,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=77 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.03746475767766905;  // std dev = 1,559, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.10064400697748788;  // std dev = 1,395, 125,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=2 */
%   | | else return 0.1421136894024435;  // std dev = 0,468, 425,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=147 */
%   else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.09776408102168638;  // std dev = 1,058, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.31539824485915396;  // std dev = 4,447, 104,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=76 */
%   | | else return 0.46541639760264175;  // std dev = 0,093, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09465333910165308;  // std dev = 1,392, 143,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=2 */
%   | | | else return 0.10199553388397167;  // std dev = 1,488, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03693200157307333;  // std dev = 3,119, 95,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=11 */
%   | | | else return 0.15705399298297085;  // std dev = 8,997, 336,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=136 */
%   else return -0.10159632948783631;  // std dev = 1,83e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.41378362771236016;  // std dev = 0,143, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3210013486500518;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.20707336094640064;  // std dev = 0,454, 109,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=77 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08325919922552212;  // std dev = 1,391, 115,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=2 */
%   | | | else return 0.08708998461791678;  // std dev = 1,492, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.012201138933339154;  // std dev = 3,083, 81,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
%   | | | else return 0.12544367152002023;  // std dev = 9,006, 337,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=136 */
%   else return -0.09269127618926105;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.13950212463725045;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=79 */
%   | | else return 0.2971111939799801;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07714424105817873;  // std dev = 1,390, 133,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */
%   | | | else return 0.07283255773786917;  // std dev = 1,497, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.005446019583496222;  // std dev = 3,074, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
%   | | | else return 0.1044199953294398;  // std dev = 8,970, 333,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=136 */
%   else return -0.08518475138839682;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( haswordvenue(F, C) )
%   | | | then return 0.08436974354311146;  // std dev = 5,022, 120,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=79 */
%   | | | else return 0.23991632544244687;  // std dev = 0,093, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return 0.10746591927329918;  // std dev = 1,435, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.07118983662004004;  // std dev = 1,374, 115,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=2 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09579212170542838;  // std dev = 1,949, 80,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=4 */
%   | | | else return 0.6319856560723495;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.11218739694358404;  // std dev = 0,496, 310,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=136 */
%   else return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.2654251468448485;  // std dev = 0,147, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.30020889978949117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.07475222396886842;  // std dev = 0,465, 113,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=77 */
%   | else return -0.06248001015415509;  // std dev = 0,153, 185,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=5 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then if ( author(J, H), title(J, B) )
%   | | | then return -0.13426249837254492;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06727548074756493;  // std dev = 1,931, 67,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=4 */
%   | | else if ( author(K, H), title(K, A) )
%   | | | then return 0.756945791427904;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23912534316318357;  // std dev = 1,402, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.07325312178837305;  // std dev = 0,491, 324,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=136 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.21788949917600053;  // std dev = 0,125, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.24112672099582738;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.11608934842919065;  // std dev = 0,437, 104,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=77 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07839267021861376;  // std dev = 1,951, 86,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=4 */
%   | | | else return 0.13274987490835746;  // std dev = 1,860, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.03879097527985784;  // std dev = 2,052, 115,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=5 */
%   | | | else return 0.05382743093574111;  // std dev = 8,863, 322,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=136 */
%   else return -0.073175164073286;  // std dev = 0,024, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.025926605069087734;  // std dev = 0,462, 117,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=79 */
%   | | else return 0.16232878725209623;  // std dev = 0,092, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.04586568568288643;  // std dev = 0,172, 145,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=5 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( haswordvenue(H, F) )
%   | | then if ( title(I, A), venue(I, H) )
%   | | | then return -0.11707963076097333;  // std dev = 0,009, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06420096441392219;  // std dev = 1,945, 84,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=4 */
%   | | else if ( author(J, G), title(J, A) )
%   | | | then return 0.561268422134682;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2868801463101045;  // std dev = 1,223, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.06185119095412095;  // std dev = 0,497, 307,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=136 */
%   | | else return -0.07325151780390425;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.825022
   AUC PR    = 0.093903
   CLL	      = -0.412699
   Precision = 0.099274 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.155894


Total learning time: 141.21699999999998 seconds
Total inference time: 3.548 seconds
AUC ROC: 0.825022


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 12:57:56
{'F1': 0.155894, 'Recall': 0.362832, 'Inference time': 3.548, 'Precision': [0.099274, 0.5], 'Learning time': 141.21699999999998, 'AUC PR': 0.093903, 'CLL': -0.412699, 'AUC ROC': 0.825022}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.6057217506334927;  // std dev = 0,434, 103,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=77 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.12746257569185473;  // std dev = 1,404, 139,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=2 */
%   | | | else return 0.10814893509951223;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.24096143509950818;  // std dev = 0,486, 384,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=147 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */


Results
   AUC ROC   = 0.796491
   AUC PR    = 0.087747
   CLL	      = -0.218536
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 17.265 seconds
Total inference time: 1.715 seconds
AUC ROC: 0.796491


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 12:58:15
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.715, 'Precision': [nan, 0.5], 'Learning time': 17.265, 'AUC PR': 0.087747, 'CLL': -0.218536, 'AUC ROC': 0.796491}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995097;  // std dev = 9,97e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.0674000364210936;  // std dev = 12,257, 908,000 (wgt'ed) examples reached here.  /* #neg=718 #pos=190 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.05830670181790332;  // std dev = 12,263, 911,000 (wgt'ed) examples reached here.  /* #neg=721 #pos=190 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.05978770606494085;  // std dev = 12,192, 873,000 (wgt'ed) examples reached here.  /* #neg=683 #pos=190 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583091;  // std dev = 4,42e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.04033348695792765;  // std dev = 12,280, 921,000 (wgt'ed) examples reached here.  /* #neg=731 #pos=190 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 3,15e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.04404157470390475;  // std dev = 12,208, 881,000 (wgt'ed) examples reached here.  /* #neg=691 #pos=190 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.031276507567541655;  // std dev = 12,257, 908,000 (wgt'ed) examples reached here.  /* #neg=718 #pos=190 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,63e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.02236573392756981;  // std dev = 12,291, 927,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=190 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.015526189478206867;  // std dev = 12,317, 943,000 (wgt'ed) examples reached here.  /* #neg=753 #pos=190 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.027834496997412014;  // std dev = 12,204, 879,000 (wgt'ed) examples reached here.  /* #neg=689 #pos=190 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.02883338053393532;  // std dev = 12,162, 858,000 (wgt'ed) examples reached here.  /* #neg=668 #pos=190 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.241228
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 3.504 seconds
Total inference time: 1.991 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.729345
   AUC PR    = 0.492294
   CLL	      = -0.23653
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.458689
   F1        = 0.628906


Total scoring time: 3.525 seconds
Parameter learned model CLL: -0.23653


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.97e-07, 0, 161], 'false': [12.257, 718, 190]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 161], 'false': [12.263, 721, 190]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.53e-07, 0, 161], 'false': [12.192, 683, 190]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.42e-07, 0, 161], 'false': [12.28, 731, 190]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.15e-07, 0, 161], 'false': [12.208, 691, 190]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 161], 'false': [12.257, 718, 190]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.63e-07, 0, 161], 'false': [12.291, 737, 190]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 161], 'false': [12.317, 753, 190]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 161], 'false': [12.204, 689, 190]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.42e-08, 0, 161], 'false': [12.162, 668, 190]}]]
[{'': [6.178632484870436e-15, 0.1654650779172911]}, {'': [-2.7362515290140504e-15, 0.1650639036727576]}, {'': [1.897722834638777e-15, 0.1702730115242852]}, {'': [1.2136599523852642e-15, 0.16373884308823028]}, {'': [6.178632484870436e-16, 0.16915304943175416]}, {'': [-2.3169871818264136e-16, 0.16546507791729947]}, {'': [4.3029761948204827e-16, 0.16295272241481698]}, {'': [-3.1444826039072757e-16, 0.16088857001807685]}, {'': [-2.372153543298471e-16, 0.16943185774505795]}, {'': [5.516636147205747e-17, 0.17240723534429828]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995097;  // std dev = 9,97e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.44289469781137775;  // std dev = 5,353, 118,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=69 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.10561918084251663;  // std dev = 2,195, 138,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=5 */
%   | | | else return 0.39148226843284567;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.09003759339789706;  // std dev = 3,079, 193,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=10 */
%   | | | else return 0.11842290770225082;  // std dev = 8,383, 365,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=95 */
%   | | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.22288540435358462;  // std dev = 1,436, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.4051693561406234;  // std dev = 5,156, 111,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=68 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0910122763586679;  // std dev = 2,193, 130,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=5 */
%   | | | else return 0.184484426670315;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10285073415213505;  // std dev = 2,414, 214,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=6 */
%   | | | else return 0.11948425995147892;  // std dev = 1,730, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.08859128738752883;  // std dev = 8,466, 387,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=95 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.30188022241793583;  // std dev = 5,480, 124,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=72 */
%   | | | else return -0.045038258386750435;  // std dev = 3,268, 147,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=13 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07200888403624438;  // std dev = 3,058, 199,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=10 */
%   | | | else return 0.07843160363836883;  // std dev = 8,456, 384,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=95 */
%   | else return -0.1281679050937379;  // std dev = 0,237, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583091;  // std dev = 4,42e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.06490856095811116;  // std dev = 1,653, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.2509197515797538;  // std dev = 5,256, 114,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=68 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06576295084393866;  // std dev = 3,065, 200,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=10 */
%   | | | else return 0.05070216054672841;  // std dev = 9,048, 501,000 (wgt'ed) examples reached here.  /* #neg=393 #pos=108 */
%   | else return -0.11151702389417686;  // std dev = 0,222, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 3,15e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.14486975973098876;  // std dev = 1,189, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12426174643764436;  // std dev = 5,707, 134,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=69 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06046093068139607;  // std dev = 3,067, 208,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=10 */
%   | | | else return 0.03812709493020319;  // std dev = 9,079, 513,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=108 */
%   | else return -0.09710123010841844;  // std dev = 0,134, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 7.207805299618841E-4;  // std dev = 1,554, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.17992471737108845;  // std dev = 5,125, 111,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=68 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05775035831113187;  // std dev = 3,078, 217,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=10 */
%   | | | else return 0.051554530360211064;  // std dev = 8,956, 472,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=108 */
%   | else return -0.09113945535749776;  // std dev = 0,150, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,63e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09338235265341066;  // std dev = 0,495, 128,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=72 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05195757336005638;  // std dev = 3,073, 218,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=10 */
%   | | | else return 0.029632500554185502;  // std dev = 9,054, 497,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=108 */
%   | else return -0.08543505958606908;  // std dev = 0,159, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.22677959441958506;  // std dev = 0,972, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08082837681134851;  // std dev = 5,416, 120,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=69 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.047202570746921794;  // std dev = 3,074, 215,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=10 */
%   | | | else return 0.024473870775083836;  // std dev = 9,041, 505,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=108 */
%   | else return -0.07580586063367103;  // std dev = 0,110, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.08947660487313948;  // std dev = 5,314, 120,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=72 */
%   | | | else return -0.04481425992514456;  // std dev = 3,075, 224,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=10 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.062446051652256473;  // std dev = 3,228, 157,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=13 */
%   | | | else return 0.023760262829675877;  // std dev = 8,527, 405,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=95 */
%   | else return -0.07151545846153594;  // std dev = 0,124, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.15120029691740713;  // std dev = 0,968, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06189464994065271;  // std dev = 5,221, 117,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=69 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04200035231594156;  // std dev = 3,080, 226,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=10 */
%   | | | else return 0.016282719355582297;  // std dev = 9,040, 520,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=108 */
%   | else return -0.07033384462946676;  // std dev = 0,131, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */


Results
   AUC ROC   = 0.866403
   AUC PR    = 0.539617
   CLL	      = -0.231641
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 69.263 seconds
Total inference time: 2.925 seconds
AUC ROC: 0.866403


Results scoring model
   AUC ROC   = 0.885062
   AUC PR    = 0.551407
   CLL	      = -0.225289
   Precision = 0.187805 at threshold = 0.5
   Recall    = 0.65812
   F1        = 0.29222


Total scoring time: 11.306 seconds
Refined model CLL: -0.225289


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.866403
   AUC PR    = 0.539617
   CLL	      = -0.231641
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 87.598 seconds
Total inference time: 2.925 seconds
AUC ROC: 0.866403
Total revision time: 87.598
Best scored revision CLL: -0.225289


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 12:59:49
{'F1': 0.305499, 'Inference time': 2.925, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.866403, 'AUC PR': 0.539617, 'parameter_0.6': {'F1': 0.604938, 'Inference time': 1.991, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 3.504, 'CLL': -0.241228}, 'Recall': 0.663717, 'Learning time': 87.598, 'CLL': -0.231641}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.573232733982191;  // std dev = 0,451, 179,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=128 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11027211753206691;  // std dev = 2,411, 190,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=6 */
%   | | | else return 0.0399671169176941;  // std dev = 1,809, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04696055395158255;  // std dev = 3,430, 137,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=13 */
%   | | | else return 0.2671468901097329;  // std dev = 10,872, 489,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=200 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.46142431243487547;  // std dev = 0,463, 186,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=128 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09524241907652559;  // std dev = 2,408, 178,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=6 */
%   | | | else return 0.10321377852455527;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.038485797004857;  // std dev = 3,425, 133,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=13 */
%   | | | else return 0.2107728893571345;  // std dev = 11,060, 515,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=200 */
%   else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6825126211622248;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3174873788377752;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.3566699245330145;  // std dev = 0,469, 178,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=120 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08687911405341145;  // std dev = 2,410, 189,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=6 */
%   | | | else return 0.07510466107618402;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.036874035038379695;  // std dev = 3,430, 137,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=13 */
%   | | | else return 0.18478450980906247;  // std dev = 10,998, 506,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=200 */
%   else return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.2888752412721611;  // std dev = 0,453, 187,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=128 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.0037867491859323804;  // std dev = 1,834, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return -0.08608133571676613;  // std dev = 2,390, 204,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0872804558602886;  // std dev = 2,191, 124,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=5 */
%   | | | else return 0.5996696907672774;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.20865005093371236;  // std dev = 0,498, 443,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=200 */
%   else return -0.10159632948783626;  // std dev = 2,58e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.22928590683028907;  // std dev = 0,452, 183,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=128 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07376546279060413;  // std dev = 2,410, 207,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=6 */
%   | | | else return 0.12538179008330602;  // std dev = 1,681, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07355571765060147;  // std dev = 2,186, 112,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=5 */
%   | | | else return 0.516895102360524;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.15443719995261007;  // std dev = 0,496, 457,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=200 */
%   else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2878043976303375;  // std dev = 0,309, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.060339033020708734;  // std dev = 0,827, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.15265528135303602;  // std dev = 6,171, 175,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=119 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.017662735265739644;  // std dev = 1,812, 29,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return -0.07064834284679332;  // std dev = 2,386, 182,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=6 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.033763649954869066;  // std dev = 3,080, 138,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=13 */
%   | | | else return 0.10023097999431559;  // std dev = 10,809, 481,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=200 */
%   else return -0.08518475138839679;  // std dev = 1,97e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.33745439781246167;  // std dev = 0,070, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.5980369846917297;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.18022783769616055;  // std dev = 0,428, 164,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=121 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.05844100233046695;  // std dev = 1,751, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return -0.06523153516429679;  // std dev = 2,387, 189,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=6 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.02410432375116678;  // std dev = 3,075, 128,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=13 */
%   | | | else return 0.07905987722743166;  // std dev = 10,801, 480,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=200 */
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16530168743750606;  // std dev = 0,408, 165,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=128 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05674667596541427;  // std dev = 2,401, 197,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=6 */
%   | | | else return 0.08191764894637688;  // std dev = 1,709, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.020719511118866413;  // std dev = 3,069, 129,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=13 */
%   | | | else return 0.06732565586114034;  // std dev = 10,744, 473,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=200 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.04908627960582594;  // std dev = 0,450, 184,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=128 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05029569398352162;  // std dev = 2,397, 190,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=6 */
%   | | | else return -0.002457991491836884;  // std dev = 1,787, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06899229966338438;  // std dev = 2,197, 146,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=5 */
%   | | | else return 0.3743880710622036;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0.05445321176880821;  // std dev = 0,494, 470,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=200 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.24294577247008228;  // std dev = 0,120, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.4426553304881705;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.073740620864789;  // std dev = 0,441, 164,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=120 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.044107628646402545;  // std dev = 2,394, 176,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=6 */
%   | | | else return 0.01586662959004883;  // std dev = 1,765, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.021540981925124904;  // std dev = 2,958, 128,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=13 */
%   | | | else return 0.04256561571871708;  // std dev = 10,710, 469,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=200 */
%   else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 0.836431
   AUC PR    = 0.098603
   CLL	      = -0.363026
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 228.874 seconds
Total inference time: 4.049 seconds
AUC ROC: 0.836431


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 13:03:42
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 4.049, 'Precision': [0.119186, 0.5], 'Learning time': 228.874, 'AUC PR': 0.098603, 'CLL': -0.363026, 'AUC ROC': 0.836431}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5614456383962128;  // std dev = 0,457, 182,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=128 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10716898397563232;  // std dev = 2,407, 173,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=6 */
%   | | | else return 0.058148935099512286;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06306318611260886;  // std dev = 3,461, 165,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=13 */
%   | | | else return 0.28549936244993535;  // std dev = 10,702, 468,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=200 */
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.833652
   AUC PR    = 0.098313
   CLL	      = -0.210472
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 12.48 seconds
Total inference time: 1.794 seconds
AUC ROC: 0.833652


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 13:03:57
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.794, 'Precision': [nan, 0.5], 'Learning time': 12.48, 'AUC PR': 0.098313, 'CLL': -0.210472, 'AUC ROC': 0.833652}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.07456684554726861;  // std dev = 14,301, 1.206,000 (wgt'ed) examples reached here.  /* #neg=945 #pos=261 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.07382733804727197;  // std dev = 14,222, 1.160,000 (wgt'ed) examples reached here.  /* #neg=899 #pos=261 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,42e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.060669932446717915;  // std dev = 14,254, 1.178,000 (wgt'ed) examples reached here.  /* #neg=917 #pos=261 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583102;  // std dev = 2,38e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.047705340626883405;  // std dev = 14,296, 1.203,000 (wgt'ed) examples reached here.  /* #neg=942 #pos=261 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014917;  // std dev = 3,91e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.03928039516606186;  // std dev = 14,311, 1.212,000 (wgt'ed) examples reached here.  /* #neg=951 #pos=261 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,53e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.03566288787002405;  // std dev = 14,291, 1.200,000 (wgt'ed) examples reached here.  /* #neg=939 #pos=261 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,04e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.027258709730198418;  // std dev = 14,319, 1.217,000 (wgt'ed) examples reached here.  /* #neg=956 #pos=261 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527783;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.023960412508218905;  // std dev = 14,311, 1.212,000 (wgt'ed) examples reached here.  /* #neg=951 #pos=261 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.029105185577074935;  // std dev = 14,229, 1.164,000 (wgt'ed) examples reached here.  /* #neg=903 #pos=261 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,19e-08, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.019963810678151533;  // std dev = 14,271, 1.188,000 (wgt'ed) examples reached here.  /* #neg=927 #pos=261 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.247808
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 4.21 seconds
Total inference time: 2.102 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.721154
   AUC PR    = 0.476309
   CLL	      = -0.243815
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.442308
   F1        = 0.613333


Total scoring time: 4.044 seconds
Parameter learned model CLL: -0.243815


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 207], 'false': [14.301, 945, 261]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 207], 'false': [14.222, 899, 261]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.42e-07, 0, 207], 'false': [14.254, 917, 261]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.38e-07, 0, 207], 'false': [14.296, 942, 261]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.91e-07, 0, 207], 'false': [14.311, 951, 261]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.53e-07, 0, 207], 'false': [14.291, 939, 261]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 207], 'false': [14.319, 956, 261]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 207], 'false': [14.311, 951, 261]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 207], 'false': [14.229, 903, 261]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.19e-08, 0, 207], 'false': [14.271, 927, 261]}]]
[{'': [5.6294207084375085e-15, 0.1695811984851873]}, {'': [-3.775830962976378e-15, 0.17437499999999695]}, {'': [1.990892689569363e-15, 0.1724722631377221]}, {'': [2.7460588821646383e-16, 0.1698870031902763]}, {'': [7.380033245817466e-16, 0.16897240466620742]}, {'': [3.089316242435218e-16, 0.17019375000000825]}, {'': [4.4623456835175375e-16, 0.16846793136672197]}, {'': [-5.577932104396922e-17, 0.16897240466621966]}, {'': [-1.244307930980852e-16, 0.17394914443616785]}, {'': [4.0761811532131354e-17, 0.17143021120293916]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.451697322196284;  // std dev = 6,115, 155,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=92 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09240051544993824;  // std dev = 2,925, 182,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=9 */
%   | | | else return 0.16849376268571928;  // std dev = 2,491, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10548742853685186;  // std dev = 3,104, 275,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=10 */
%   | | | else return 0.15814893509951236;  // std dev = 2,049, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.12659155805032785;  // std dev = 9,789, 488,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=131 */
%   | | | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.33280307041152957;  // std dev = 0,498, 179,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=96 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07864542501277913;  // std dev = 2,920, 172,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=9 */
%   | | | else return 0.28637587372079554;  // std dev = 2,225, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09027297911861597;  // std dev = 3,100, 255,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=10 */
%   | | | else return 0.11051392751025176;  // std dev = 2,089, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.09492547894610884;  // std dev = 9,893, 518,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=131 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,42e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3262660216764737;  // std dev = 0,491, 163,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=96 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06933541041125574;  // std dev = 2,920, 170,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=9 */
%   | | | else return 0.2670165724159002;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08443750353926491;  // std dev = 3,106, 284,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=10 */
%   | | | else return 0.09492914186951568;  // std dev = 2,089, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.0974321841847897;  // std dev = 9,789, 488,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=131 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583102;  // std dev = 2,38e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.028696589143456117;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.2517836735436466;  // std dev = 6,172, 157,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=92 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0600284953417573;  // std dev = 3,803, 279,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=16 */
%   | | | else return 0.0450366348106268;  // std dev = 10,642, 691,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=149 */
%   | else return -0.11744655474226585;  // std dev = 0,260, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014917;  // std dev = 3,91e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19598723372827248;  // std dev = 0,492, 165,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=96 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05951775691107389;  // std dev = 3,833, 291,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=16 */
%   | | | else return 0.02983805512630539;  // std dev = 10,679, 733,000 (wgt'ed) examples reached here.  /* #neg=584 #pos=149 */
%   | else return -0.11001142888021641;  // std dev = 0,326, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,53e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.07634460204507683;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.19021105813362454;  // std dev = 5,833, 146,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=92 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05390036034488641;  // std dev = 3,838, 292,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=16 */
%   | | | else return 0.0391272706342502;  // std dev = 10,595, 678,000 (wgt'ed) examples reached here.  /* #neg=529 #pos=149 */
%   | else return -0.09826564679006804;  // std dev = 0,260, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,04e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.0020959458034888277;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.09142645334664674;  // std dev = 6,226, 159,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=92 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.048022386195853584;  // std dev = 3,842, 281,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=16 */
%   | | | else return 0.030912907537523453;  // std dev = 10,612, 684,000 (wgt'ed) examples reached here.  /* #neg=535 #pos=149 */
%   | else return -0.10034231806905866;  // std dev = 0,342, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527783;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.1187296651000934;  // std dev = 1,455, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.03335082619605419;  // std dev = 6,490, 173,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=92 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return 0.06433238759676226;  // std dev = 1,973, 30,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return -0.05674051213734876;  // std dev = 3,225, 276,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=11 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.048001298426953866;  // std dev = 3,774, 194,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=18 */
%   | | | else return 0.051259715756169166;  // std dev = 9,850, 505,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=131 */
%   | | else return -0.0763255099076857;  // std dev = 0,110, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.06885463998199809;  // std dev = 1,716, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.05957435830450456;  // std dev = 6,230, 159,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=92 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03610970980323957;  // std dev = 3,807, 279,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=16 */
%   | | | else return 0.01677084176295652;  // std dev = 10,623, 702,000 (wgt'ed) examples reached here.  /* #neg=553 #pos=149 */
%   | else return -0.07882078227042591;  // std dev = 0,229, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,19e-08, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.05869241266443557;  // std dev = 0,494, 165,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=96 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03256579758972151;  // std dev = 3,811, 273,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=16 */
%   | | | else return 0.030099269179451806;  // std dev = 10,509, 651,000 (wgt'ed) examples reached here.  /* #neg=502 #pos=149 */
%   | else return -0.07371786405820664;  // std dev = 0,207, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */


Results
   AUC ROC   = 0.86546
   AUC PR    = 0.539556
   CLL	      = -0.256497
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 68.15 seconds
Total inference time: 2.927 seconds
AUC ROC: 0.86546


Results scoring model
   AUC ROC   = 0.877264
   AUC PR    = 0.535124
   CLL	      = -0.228111
   Precision = 0.182987 at threshold = 0.5
   Recall    = 0.638889
   F1        = 0.284491


Total scoring time: 14.098 seconds
Refined model CLL: -0.228111


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.86546
   AUC PR    = 0.539556
   CLL	      = -0.256497
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 90.50200000000001 seconds
Total inference time: 2.927 seconds
AUC ROC: 0.86546
Total revision time: 90.50200000000001
Best scored revision CLL: -0.228111


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 13:05:33
{'F1': 0.305499, 'Inference time': 2.927, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.86546, 'parameter_0.8': {'F1': 0.604938, 'Inference time': 2.102, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 4.21, 'CLL': -0.247808}, 'AUC PR': 0.539556, 'Recall': 0.663717, 'Learning time': 90.50200000000001, 'CLL': -0.256497}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5939979917032827;  // std dev = 6,419, 212,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=156 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08859662703066516;  // std dev = 2,919, 169,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=9 */
%   | | | else return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( haswordtitle(A, K), haswordauthor(L, K) )
%   | | | then return -0.08388005040773434;  // std dev = 3,882, 276,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=16 */
%   | | | else return 0.27236840959718933;  // std dev = 12,530, 647,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=268 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.47733530665322105;  // std dev = 0,448, 236,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=166 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09635074727062087;  // std dev = 3,111, 271,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=10 */
%   | | | else return 0.08247669457785425;  // std dev = 2,171, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else return 0.17636584151472606;  // std dev = 0,471, 826,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=286 */
%   else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3420917657482862;  // std dev = 0,465, 250,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=166 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1001915634427771;  // std dev = 2,919, 174,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=9 */
%   | | | else return 0.26275507234998485;  // std dev = 2,140, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.06677578123213736;  // std dev = 3,862, 286,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=16 */
%   | | | else return 0.22382366509952675;  // std dev = 12,365, 624,000 (wgt'ed) examples reached here.  /* #neg=356 #pos=268 */
%   else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.26180395654395194;  // std dev = 0,467, 250,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=166 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07404300448365167;  // std dev = 3,103, 243,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=10 */
%   | | | else return 0.11733663493364777;  // std dev = 2,118, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05295915268165041;  // std dev = 3,813, 184,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=18 */
%   | | | else return 0.17874726255333653;  // std dev = 12,431, 633,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=268 */
%   else return -0.10159632948783619;  // std dev = 4,34e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.46521131009793754;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.29720981865465074;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.2748614703294215;  // std dev = 0,436, 213,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=158 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0682255870250603;  // std dev = 3,107, 250,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=10 */
%   | | | else return 0.03560176583329592;  // std dev = 2,211, 33,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.045681809691271565;  // std dev = 3,796, 191,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=18 */
%   | | | else return 0.1428998643889252;  // std dev = 12,446, 635,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=268 */
%   else return -0.09269127618926105;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1891629413717167;  // std dev = 0,434, 231,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=166 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06205000768417957;  // std dev = 3,105, 254,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=10 */
%   | | | else return 0.1489736807380533;  // std dev = 2,045, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.045163244728815166;  // std dev = 3,836, 192,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=18 */
%   | | | else return 0.1132599560565028;  // std dev = 12,446, 635,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=268 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10525559002089338;  // std dev = 0,454, 243,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=166 */
%   | else return 0.03265988489739899;  // std dev = 0,418, 1.088,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=302 */
%   else return -0.07877675473109169;  // std dev = 3,33e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.2892540251382345;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2966271155540543;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.10671497627423704;  // std dev = 0,451, 221,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=158 */
%   | else return -0.05593524218412579;  // std dev = 0,210, 333,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=16 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then return -0.07561757011954484;  // std dev = 0,216, 183,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=9 */
%   | | else if ( author(J, H), title(J, B) )
%   | | | then return 0.3876313365995913;  // std dev = 1,008, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.21868709441453907;  // std dev = 1,747, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.11346962254658559;  // std dev = 0,498, 590,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=268 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08331862636232296;  // std dev = 0,434, 236,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=166 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.058531490765880344;  // std dev = 1,971, 30,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return -0.053044904060356134;  // std dev = 3,215, 224,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=11 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03469973834084479;  // std dev = 3,722, 184,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=18 */
%   | | | else return 0.05074671947276593;  // std dev = 12,495, 642,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=268 */
%   else return -0.06920457433146844;  // std dev = 0,021, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.03833676962933433;  // std dev = 0,448, 244,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=166 */
%   | else if ( author(E, D), title(E, B) )
%   | | then if ( haswordvenue(F, C) )
%   | | | then return -0.013603213787408688;  // std dev = 1,352, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.16554791156979032;  // std dev = 1,395, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.051838063890255866;  // std dev = 0,196, 268,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=11 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then return -0.06694684523331264;  // std dev = 0,212, 191,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=9 */
%   | | else if ( author(J, H), title(J, A) )
%   | | | then return 0.37530977055344417;  // std dev = 0,839, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13647151248589598;  // std dev = 1,856, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.05721094362084529;  // std dev = 0,496, 615,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=268 */
%   | | else return -0.06414514471740417;  // std dev = 3,73e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.835677
   AUC PR    = 0.098512
   CLL	      = -0.349248
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 182.865 seconds
Total inference time: 3.522 seconds
AUC ROC: 0.835677


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 13:08:40
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 3.522, 'Precision': [0.119186, 0.5], 'Learning time': 182.865, 'AUC PR': 0.098512, 'CLL': -0.349248, 'AUC ROC': 0.835677}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.5730810617963416;  // std dev = 0,451, 221,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=158 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10425707993808217;  // std dev = 3,102, 266,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=10 */
%   | | | else return 0.07243464938522666;  // std dev = 2,171, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04185106490048764;  // std dev = 4,025, 180,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=18 */
%   | | | else return 0.2835457604963331;  // std dev = 12,409, 630,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=268 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 0.833652
   AUC PR    = 0.098313
   CLL	      = -0.211491
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.659 seconds
Total inference time: 2.012 seconds
AUC ROC: 0.833652


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 13:09:03
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.012, 'Precision': [nan, 0.5], 'Learning time': 20.659, 'AUC PR': 0.098313, 'CLL': -0.211491, 'AUC ROC': 0.833652}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.07432930645229252;  // std dev = 15,985, 1.508,000 (wgt'ed) examples reached here.  /* #neg=1.182 #pos=326 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.07108003863901802;  // std dev = 15,923, 1.467,000 (wgt'ed) examples reached here.  /* #neg=1.141 #pos=326 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.05356174042742748;  // std dev = 16,007, 1.523,000 (wgt'ed) examples reached here.  /* #neg=1.197 #pos=326 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.047913299174444486;  // std dev = 15,990, 1.511,000 (wgt'ed) examples reached here.  /* #neg=1.185 #pos=326 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.04197456372779987;  // std dev = 15,981, 1.505,000 (wgt'ed) examples reached here.  /* #neg=1.179 #pos=326 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.03714468757249863;  // std dev = 15,967, 1.496,000 (wgt'ed) examples reached here.  /* #neg=1.170 #pos=326 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.03771903668467723;  // std dev = 15,905, 1.455,000 (wgt'ed) examples reached here.  /* #neg=1.129 #pos=326 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.017254519267241714;  // std dev = 16,054, 1.557,000 (wgt'ed) examples reached here.  /* #neg=1.231 #pos=326 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.021940496979045678;  // std dev = 15,979, 1.504,000 (wgt'ed) examples reached here.  /* #neg=1.178 #pos=326 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.018475806297257116;  // std dev = 15,979, 1.504,000 (wgt'ed) examples reached here.  /* #neg=1.178 #pos=326 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.245864
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 4.514 seconds
Total inference time: 1.723 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.721368
   AUC PR    = 0.476703
   CLL	      = -0.241819
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.442735
   F1        = 0.613744


Total scoring time: 4.032 seconds
Parameter learned model CLL: -0.241819


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 259], 'false': [15.985, 1182, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.923, 1141, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.13e-07, 0, 259], 'false': [16.007, 1197, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.99, 1185, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 259], 'false': [15.981, 1179, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.26e-07, 0, 259], 'false': [15.967, 1170, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 259], 'false': [15.905, 1129, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 259], 'false': [16.054, 1231, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.979, 1178, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.979, 1178, 326]}]]
[{'': [4.499189523731908e-15, 0.16944641839455066]}, {'': [-4.499189523731908e-15, 0.17283950617284194]}, {'': [6.584179790827183e-16, 0.16823329218991884]}, {'': [-4.1151123692669897e-16, 0.16920259592023223]}, {'': [8.230224738533979e-17, 0.16969084226443265]}, {'': [4.1151123692669897e-16, 0.17042773599472907]}, {'': [3.154919483104692e-16, 0.17385434749234752]}, {'': [6.858520615444983e-18, 0.16553827597742263]}, {'': [-1.7146301538612456e-16, 0.16977245076957795]}, {'': [-3.086334276950242e-17, 0.16977245076957112]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.10814893509951232;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.48248755943813365;  // std dev = 6,658, 189,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=118 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09497606490048804;  // std dev = 3,382, 256,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=12 */
%   | | | else return 0.14847151574467365;  // std dev = 2,527, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.1082376195223367;  // std dev = 3,405, 357,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=12 */
%   | | | else return 0.08891816586874314;  // std dev = 2,631, 39,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.12156356924584923;  // std dev = 10,924, 615,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=162 */
%   | | | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.39905808467993636;  // std dev = 0,487, 201,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=122 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06334309860787717;  // std dev = 4,389, 306,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=21 */
%   | | | else return 0.058624053398107556;  // std dev = 11,957, 874,000 (wgt'ed) examples reached here.  /* #neg=691 #pos=183 */
%   | else return -0.13179206196113347;  // std dev = 0,083, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.29888851000703504;  // std dev = 7,116, 211,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=122 */
%   | | | else return -0.05335254935901943;  // std dev = 4,326, 246,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=21 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06296016281802014;  // std dev = 4,404, 344,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=21 */
%   | | | else return 0.09273103616792788;  // std dev = 10,964, 628,000 (wgt'ed) examples reached here.  /* #neg=466 #pos=162 */
%   | else return -0.11613389672131556;  // std dev = 0,082, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.015572723857617052;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.2521606168841636;  // std dev = 6,853, 196,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06403420005622248;  // std dev = 4,425, 392,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=21 */
%   | | | else return 0.0508818173467041;  // std dev = 11,850, 847,000 (wgt'ed) examples reached here.  /* #neg=664 #pos=183 */
%   | else return -0.10419627175274981;  // std dev = 0,053, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.09041343660484717;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.16364737578105656;  // std dev = 7,100, 206,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0508623493738816;  // std dev = 4,411, 348,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=21 */
%   | | | else return 0.049115202203514736;  // std dev = 11,816, 820,000 (wgt'ed) examples reached here.  /* #neg=637 #pos=183 */
%   | else return -0.09852869812760816;  // std dev = 0,086, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.024872935288481498;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.14672354897319542;  // std dev = 6,905, 198,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.042859009033456665;  // std dev = 4,406, 329,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=21 */
%   | | | else return 0.036755421677728044;  // std dev = 11,851, 841,000 (wgt'ed) examples reached here.  /* #neg=658 #pos=183 */
%   | else return -0.08662239414500761;  // std dev = 0,048, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08162293324662395;  // std dev = 0,490, 221,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=122 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06319607912655545;  // std dev = 4,322, 246,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=21 */
%   | | | else return 0.024734809019578037;  // std dev = 11,910, 956,000 (wgt'ed) examples reached here.  /* #neg=773 #pos=183 */
%   | else return -0.08191429375278446;  // std dev = 0,067, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.06464666184226177;  // std dev = 7,286, 218,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=122 */
%   | | | else return -0.044921806950954574;  // std dev = 4,415, 351,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=21 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.04385283636248843;  // std dev = 4,300, 212,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=21 */
%   | | | else return 0.04064328354681649;  // std dev = 11,067, 664,000 (wgt'ed) examples reached here.  /* #neg=502 #pos=162 */
%   | else return -0.07648510221239052;  // std dev = 0,067, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.05351071872063968;  // std dev = 0,487, 219,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=122 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04312233888139271;  // std dev = 4,420, 368,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=21 */
%   | | | else return 0.022688772980986937;  // std dev = 11,836, 866,000 (wgt'ed) examples reached here.  /* #neg=683 #pos=183 */
%   | else return -0.06880541976594833;  // std dev = 0,040, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.0621646966855484;  // std dev = 7,008, 211,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=122 */
%   | | | else return -0.03654757361199545;  // std dev = 4,413, 353,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=21 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.04159797890206655;  // std dev = 4,298, 215,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=21 */
%   | | | else return 0.04792787299891135;  // std dev = 10,936, 619,000 (wgt'ed) examples reached here.  /* #neg=457 #pos=162 */
%   | else return -0.06592629333192837;  // std dev = 0,051, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */


Results
   AUC ROC   = 0.902856
   AUC PR    = 0.551083
   CLL	      = -0.215137
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 97.783 seconds
Total inference time: 2.576 seconds
AUC ROC: 0.902856


Results scoring model
   AUC ROC   = 0.870884
   AUC PR    = 0.537199
   CLL	      = -0.228194
   Precision = 0.184172 at threshold = 0.5
   Recall    = 0.644444
   F1        = 0.286474


Total scoring time: 16.298 seconds
Refined model CLL: -0.228194


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902856
   AUC PR    = 0.551083
   CLL	      = -0.215137
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 122.62700000000001 seconds
Total inference time: 2.576 seconds
AUC ROC: 0.902856
Total revision time: 122.62700000000001
Best scored revision CLL: -0.228194


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 13:11:11
{'parameter_1.0': {'F1': 0.604938, 'Inference time': 1.723, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 4.514, 'CLL': -0.245864}, 'F1': 0.305499, 'Inference time': 2.576, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.902856, 'AUC PR': 0.551083, 'Recall': 0.663717, 'Learning time': 122.62700000000001, 'CLL': -0.215137}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5971195233348028;  // std dev = 0,439, 272,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10736830627979835;  // std dev = 3,404, 348,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=12 */
%   | | | else return 0.1308762078267851;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0532434699637789;  // std dev = 4,375, 237,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=21 */
%   | | | else return 0.2775444010944699;  // std dev = 13,905, 794,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=333 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7304875001395946;  // std dev = 0,062, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.23096319211016397;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.4811710288443723;  // std dev = 0,450, 283,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09508876383495148;  // std dev = 3,404, 351,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=12 */
%   | | | else return 0.06645896494019377;  // std dev = 2,641, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.035014057153789135;  // std dev = 4,346, 209,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=21 */
%   | | | else return 0.23871660848341447;  // std dev = 13,924, 797,000 (wgt'ed) examples reached here.  /* #neg=464 #pos=333 */
%   else return -0.1254446385283914;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5667128101121208;  // std dev = 0,079, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1925005024869727;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.38934043505527505;  // std dev = 0,449, 281,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08035997769642984;  // std dev = 3,397, 311,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=12 */
%   | | | else return 0.04169282761556551;  // std dev = 2,668, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else return 0.14615001834053182;  // std dev = 0,468, 1.024,000 (wgt'ed) examples reached here.  /* #neg=670 #pos=354 */
%   else return -0.11231637819360625;  // std dev = 5,58e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4263862158120447;  // std dev = 0,080, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16433178879224794;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.29134459432888443;  // std dev = 0,452, 284,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07339498759262723;  // std dev = 3,399, 321,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=12 */
%   | | | else return 0.08363564149951763;  // std dev = 2,586, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.055295439552340286;  // std dev = 4,362, 224,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=21 */
%   | | | else return 0.18361313686320366;  // std dev = 13,821, 781,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=333 */
%   else return -0.10159632948783617;  // std dev = 4,83e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.0920048503964085;  // std dev = 1,000, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.23273361702343479;  // std dev = 7,432, 279,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=201 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0662521570517409;  // std dev = 3,399, 320,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=12 */
%   | | | else return 0.0641699161809122;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08712162487242768;  // std dev = 3,367, 218,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=12 */
%   | | | else return 0.35783250356793944;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.1371260173248231;  // std dev = 0,493, 802,000 (wgt'ed) examples reached here.  /* #neg=469 #pos=333 */
%   else return -0.09269127618926107;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.19405053822741955;  // std dev = 0,420, 288,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=210 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06105400927283755;  // std dev = 3,400, 327,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=12 */
%   | | | else return 0.0542648943152981;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.041162706729342226;  // std dev = 4,265, 219,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=21 */
%   | | | else return 0.10518651808963775;  // std dev = 13,998, 809,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=333 */
%   else return -0.08518475138839679;  // std dev = 2,98e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11937313306687375;  // std dev = 0,437, 298,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=210 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07142754208565714;  // std dev = 3,373, 210,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=12 */
%   | | | else return 0.17868704341735075;  // std dev = 2,366, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03703055206039814;  // std dev = 4,296, 310,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=21 */
%   | | | else return 0.09282181597923356;  // std dev = 13,873, 789,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=333 */
%   else return -0.07877675473109165;  // std dev = 4,15e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.08678735043995787;  // std dev = 0,431, 305,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=210 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.0380012026204392;  // std dev = 1,958, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return -0.051833250642885055;  // std dev = 3,827, 323,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=16 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.056348285435719195;  // std dev = 3,353, 190,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=12 */
%   | | | else return 0.21475056685317173;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return 0.08468086488766365;  // std dev = 0,496, 766,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=333 */
%   else return -0.07324622576333704;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.0625812057160383;  // std dev = 0,441, 302,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=210 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.050710816835880135;  // std dev = 3,402, 336,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=12 */
%   | | | else return 0.09984196792101213;  // std dev = 2,511, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03851430981544965;  // std dev = 4,175, 248,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=21 */
%   | | | else return 0.059024414951278116;  // std dev = 13,794, 777,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=333 */
%   else return -0.06842697784420265;  // std dev = 4,15e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(B, C) )
%   | | then return -0.0018773024946976454;  // std dev = 0,463, 316,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=204 */
%   | | else return -0.04718462328479588;  // std dev = 0,181, 352,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=12 */
%   | else if ( author(F, D), title(F, B) )
%   | | then return 0.29189206966975767;  // std dev = 0,442, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.18161145988659608;  // std dev = 0,129, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.09063131690091057;  // std dev = 2,209, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then if ( haswordvenue(J, H) )
%   | | then return -0.05087759124828767;  // std dev = 0,229, 215,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=12 */
%   | | else return 0.14292864708482705;  // std dev = 0,451, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.030777808778382328;  // std dev = 0,493, 804,000 (wgt'ed) examples reached here.  /* #neg=471 #pos=333 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */


Results
   AUC ROC   = 0.83411
   AUC PR    = 0.098302
   CLL	      = -0.360125
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 354.124 seconds
Total inference time: 4.181 seconds
AUC ROC: 0.83411


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 13:17:10
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 4.181, 'Precision': [0.119186, 0.5], 'Learning time': 354.124, 'AUC PR': 0.098302, 'CLL': -0.360125, 'AUC ROC': 0.83411}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.6166395011372445;  // std dev = 0,428, 265,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10504124894956791;  // std dev = 3,400, 326,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=12 */
%   | | | else return 0.08314893509951238;  // std dev = 2,641, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else return 0.21073857653377048;  // std dev = 0,478, 1.004,000 (wgt'ed) examples reached here.  /* #neg=650 #pos=354 */
%   else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */


Results
   AUC ROC   = 0.796491
   AUC PR    = 0.087747
   CLL	      = -0.2161
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 28.488 seconds
Total inference time: 1.498 seconds
AUC ROC: 0.796491


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 13:17:40
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.498, 'Precision': [nan, 0.5], 'Learning time': 28.488, 'AUC PR': 0.087747, 'CLL': -0.2161, 'AUC ROC': 0.796491}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 569
Target train neg examples: 23251

Target test facts examples: 8129
Target test pos	 examples: 129
Target test neg examples: 4745

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 8,43e-08, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else return 0.09097336258042904;  // std dev = 6,841, 262,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=61 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else return 0.07180224293515788;  // std dev = 6,875, 271,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=61 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 5,96e-08, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else return 0.04323798747616854;  // std dev = 6,959, 296,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=61 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else return 0.03383403094177942;  // std dev = 6,974, 301,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=61 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014955;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else return 0.032456297948194296;  // std dev = 6,959, 296,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=61 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else return 0.03421252683860144;  // std dev = 6,931, 287,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=61 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 2,11e-08, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else return 0.02198776433986844;  // std dev = 6,962, 297,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=61 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else return 0.026571345109742246;  // std dev = 6,927, 286,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=61 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else return 0.009873966089566366;  // std dev = 6,983, 304,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=61 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,16e-08, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else return 0.02632501170715798;  // std dev = 6,904, 279,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=61 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.23905
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 2.11 seconds
Total inference time: 2.024 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.730088
   AUC PR    = 0.494676
   CLL	      = -0.235737
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.460177
   F1        = 0.630303


Total scoring time: 2.435 seconds
Parameter learned model CLL: -0.235737


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 52], 'false': [6.841, 201, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 52], 'false': [6.875, 210, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.96e-08, 0, 52], 'false': [6.959, 235, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 52], 'false': [6.974, 240, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 52], 'false': [6.959, 235, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 52], 'false': [6.931, 226, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 52], 'false': [6.962, 236, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 52], 'false': [6.927, 225, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 52], 'false': [6.983, 243, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.16e-08, 0, 52], 'false': [6.904, 218, 61]}]]
[{'': [1.3664283380001927e-16, 0.17861721344910045]}, {'': [-4.099285014000578e-16, 0.1744257294971478]}, {'': [6.832141690000964e-17, 0.16361166910153135]}, {'': [-3.75767792950053e-16, 0.16158762044569264]}, {'': [-5.124106267500723e-17, 0.16361166910153563]}, {'': [-2.5620531337503614e-17, 0.16736879165705695]}, {'': [8.540177112501205e-18, 0.16320330125043864]}, {'': [-5.124106267500723e-17, 0.16779549122206475]}, {'': [-2.9890619893754213e-17, 0.16039430401661806]}, {'': [1.921539850312771e-17, 0.1708354209221379]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 8,43e-08, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4945125714631477;  // std dev = 3,191, 44,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=28 */
%   | | else return -0.1218510649004877;  // std dev = 0,140, 50,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.12851773156715435;  // std dev = 0,115, 75,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=1 */
%   | | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | | then return 0.15406730244644984;  // std dev = 4,519, 98,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.35628315353791445;  // std dev = 0,495, 53,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.1097116608652264;  // std dev = 0,991, 58,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   | | | else return 0.04854182221688088;  // std dev = 4,847, 150,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=30 */
%   | else return -0.12638539681367478;  // std dev = 0,004, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 5,96e-08, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3254543560076151;  // std dev = 0,488, 50,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09709011366298852;  // std dev = 0,991, 55,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=1 */
%   | | | else return 0.0577140501649893;  // std dev = 4,802, 138,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=30 */
%   | else return -0.11269742452209038;  // std dev = 0,005, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.38529597433413054;  // std dev = 0,445, 41,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=30 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.19337007849143803;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13354050192920877;  // std dev = 0,086, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.10537625925482107;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0895032433818052;  // std dev = 0,992, 63,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.11933610754712076;  // std dev = 4,519, 98,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | | else return -0.10147574593064568;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014955;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.11652337752307573;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14266594646355155;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.10921996129666331;  // std dev = 0,958, 53,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
%   | | | else return 0.0027547577212443065;  // std dev = 4,856, 187,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=30 */
%   | else return -0.09278847435683062;  // std dev = 0,005, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.07803922046607807;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.13262435835050201;  // std dev = 3,310, 46,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08257570068081294;  // std dev = 0,992, 68,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=1 */
%   | | | else return 0.03782696825612944;  // std dev = 4,761, 141,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=30 */
%   | else return -0.08506823772302517;  // std dev = 0,006, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 2,11e-08, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.044725992021250216;  // std dev = 3,694, 55,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=30 */
%   | | | else return -0.07755833011801269;  // std dev = 0,993, 79,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09868209381130448;  // std dev = 0,957, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | | else return 0.080505688521004;  // std dev = 4,565, 103,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
%   | else return -0.07876327578550185;  // std dev = 0,005, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.003330404149899313;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.051049279760991814;  // std dev = 3,464, 49,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=28 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06957315525072466;  // std dev = 0,992, 69,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=1 */
%   | | | else return 0.006170780004395429;  // std dev = 4,814, 150,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=30 */
%   | else return -0.0734517463036942;  // std dev = 0,005, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.042788061593436656;  // std dev = 0,496, 53,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08953928224606979;  // std dev = 0,959, 54,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1 */
%   | | | else return 0.01028026682067809;  // std dev = 4,762, 174,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=30 */
%   | else return -0.06872656758623928;  // std dev = 0,005, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,16e-08, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06149721802572397;  // std dev = 0,495, 50,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08169530345841289;  // std dev = 0,963, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | | else return 9.072582064753215E-4;  // std dev = 4,802, 176,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=30 */
%   | else return -0.06424136293482781;  // std dev = 0,004, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.827326
   AUC PR    = 0.521113
   CLL	      = -0.218233
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 24.143 seconds
Total inference time: 2.718 seconds
AUC ROC: 0.827326


Results scoring model
   AUC ROC   = 0.913422
   AUC PR    = 0.568005
   CLL	      = -0.210692
   Precision = 0.1766 at threshold = 0.5
   Recall    = 0.707965
   F1        = 0.282686


Total scoring time: 5.486 seconds
Refined model CLL: -0.210692


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.827326
   AUC PR    = 0.521113
   CLL	      = -0.218233
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 34.174 seconds
Total inference time: 2.718 seconds
AUC ROC: 0.827326
Total revision time: 34.174
Best scored revision CLL: -0.210692


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:18:20
{'parameter_0.2': {'F1': 0.597826, 'Inference time': 2.024, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 2.11, 'CLL': -0.23905}, 'F1': 0.422018, 'Inference time': 2.718, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.827326, 'AUC PR': 0.521113, 'Recall': 0.534884, 'Learning time': 34.174, 'CLL': -0.218233}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6237739350995126;  // std dev = 0,424, 64,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=49 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12815243476350138;  // std dev = 0,993, 73,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.12262029566971845;  // std dev = 0,990, 52,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1 */
%   | | | else return 0.3107036796250609;  // std dev = 5,826, 137,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=62 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.2642685618243781;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.4309352284910448;  // std dev = 0,471, 69,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=46 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.1268041606849019;  // std dev = 0,001, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11118860181098865;  // std dev = 0,992, 64,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.10484238141131354;  // std dev = 0,989, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | | else return 0.33263929729536656;  // std dev = 5,474, 120,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=62 */
%   else return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.39136177455282406;  // std dev = 0,452, 69,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=49 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.11355250217543404;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09782066363860092;  // std dev = 0,991, 58,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.09362226356845706;  // std dev = 0,989, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | | else return 0.20044105999763567;  // std dev = 5,894, 141,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=62 */
%   else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.2272870570116207;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.2845397377794555;  // std dev = 0,460, 66,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=46 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.08964398076574252;  // std dev = 0,124, 64,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.08380849031060927;  // std dev = 0,988, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | | else return 0.22236353859053543;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   else return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2298968485481945;  // std dev = 0,455, 69,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=49 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.09527485638644899;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08192896932153781;  // std dev = 0,992, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07550239345887791;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | | | else return 0.1032362975503202;  // std dev = 5,957, 145,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=62 */
%   else return -0.09269127618926098;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.015847645736459803;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.10784636941391869;  // std dev = 4,025, 71,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return -0.08785733943241968;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07304700054484585;  // std dev = 0,991, 58,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.05009750582744892;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.09275963702969393;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( haswordvenue(K, C) )
%   | | | then return 0.13650012171909703;  // std dev = 5,565, 124,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=60 */
%   | | | else return 0.15262915397716148;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.5118888030041919;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17524674010203126;  // std dev = 0,438, 62,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=46 */
%   | else if ( author(F, D), title(F, B) )
%   | | then return 0.07748399202962515;  // std dev = 0,904, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.08484932725248101;  // std dev = 0,027, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then if ( author(I, H), title(I, B) )
%   | | then return -0.08067756044451661;  // std dev = 0,003, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( author(J, H), title(J, A) )
%   | | | then return -0.0825021284227974;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06930113870427676;  // std dev = 0,992, 67,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.05761494732540403;  // std dev = 0,496, 142,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=62 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.1140395948155516;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.10963334548022508;  // std dev = 0,450, 64,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=46 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return -0.07646833902832582;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06560393294531514;  // std dev = 0,993, 72,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.0554020964390694;  // std dev = 0,965, 38,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
%   | | | else return 0.08428879213080653;  // std dev = 5,694, 130,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=62 */
%   else return -0.07335241225056816;  // std dev = 0,002, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.040969113812031055;  // std dev = 0,468, 73,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.06988789146474088;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return -0.05904231251896633;  // std dev = 0,992, 67,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1 */
%   | | | else return -0.07301224153861424;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then return -0.051922119129575894;  // std dev = 0,153, 40,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return 0.06034672711549952;  // std dev = 0,499, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   | | else return -0.06842020932579994;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return -0.2950808230618561;  // std dev = 0,855, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.08439057825582738;  // std dev = 0,446, 66,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=48 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.06586603812224476;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.05399545543912235;  // std dev = 0,992, 60,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04606746265949423;  // std dev = 0,966, 36,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
%   | | | else return 0.04208987526019239;  // std dev = 5,733, 132,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=62 */
%   else return -0.06453241182468294;  // std dev = 0,002, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */


Results
   AUC ROC   = 0.71886
   AUC PR    = 0.076767
   CLL	      = -0.406464
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 117.91499999999999 seconds
Total inference time: 4.075 seconds
AUC ROC: 0.71886


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 13:20:22
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 4.075, 'Precision': [0.167742, 0.5], 'Learning time': 117.91499999999999, 'AUC PR': 0.076767, 'CLL': -0.406464, 'AUC ROC': 0.71886}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5482897801699353;  // std dev = 0,462, 71,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.12518439823382102;  // std dev = 0,992, 60,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
%   | | else if ( haswordvenue(J, C) )
%   | | | then return 0.33058987998140316;  // std dev = 5,626, 127,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=60 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 0.718858
   AUC PR    = 0.076768
   CLL	      = -0.220135
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 41.015 seconds
Total inference time: 1.8 seconds
AUC ROC: 0.718858


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 13:21:05
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.8, 'Precision': [nan, 0.5], 'Learning time': 41.015, 'AUC PR': 0.076768, 'CLL': -0.220135, 'AUC ROC': 0.718858}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.07668040363097811;  // std dev = 9,883, 572,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=125 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.05247109864330032;  // std dev = 9,976, 613,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=125 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.05870280403201568;  // std dev = 9,893, 576,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=125 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,60e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.05893429991767546;  // std dev = 9,841, 555,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=125 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.04622512954186119;  // std dev = 9,869, 566,000 (wgt'ed) examples reached here.  /* #neg=441 #pos=125 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.03376044130866907;  // std dev = 9,905, 581,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=125 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.036363599437950964;  // std dev = 9,856, 561,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=125 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 5,58e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.0331935036548228;  // std dev = 9,841, 555,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=125 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.017911713125570272;  // std dev = 9,905, 581,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=125 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.015060308917455701;  // std dev = 9,905, 581,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=125 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.245972
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 2.675 seconds
Total inference time: 1.978 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.72467
   AUC PR    = 0.483577
   CLL	      = -0.243203
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.449339
   F1        = 0.620061


Total scoring time: 2.801 seconds
Parameter learned model CLL: -0.243203


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.3e-07, 0, 102], 'false': [9.883, 447, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.976, 488, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.3e-07, 0, 102], 'false': [9.893, 451, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.6e-07, 0, 102], 'false': [9.841, 430, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.869, 441, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.905, 456, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 102], 'false': [9.856, 436, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.58e-08, 0, 102], 'false': [9.841, 430, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.905, 456, 125]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.66e-08, 0, 102], 'false': [9.905, 456, 125]}]]
[{'': [1.8111873656630004e-15, 0.17077546579294986]}, {'': [-2.7864421010200007e-16, 0.16233377420702336]}, {'': [1.8111873656630004e-15, 0.16991886091821365]}, {'': [6.617799989922502e-16, 0.1744988231474764]}, {'': [-2.612289469706251e-16, 0.1720741924608843]}, {'': [-4.353815782843751e-17, 0.16885836930214582]}, {'': [2.0898315757650005e-16, 0.17316925149576937]}, {'': [3.047671047990626e-17, 0.17449882314746665]}, {'': [-1.2190684191962504e-16, 0.1688583693021454]}, {'': [4.353815782843751e-17, 0.1688583693021386]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5010060779566559;  // std dev = 0,479, 84,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=54 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.11621003925946202;  // std dev = 1,710, 117,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=3 */
%   | | | else return 0.09102564742828048;  // std dev = 7,222, 292,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=68 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.1189989464114507;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.34480539802435295;  // std dev = 4,788, 93,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=52 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.10572840158880564;  // std dev = 1,712, 133,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=3 */
%   | | | else return 0.06326371527931135;  // std dev = 7,299, 314,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=68 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.16494690036780532;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3196578928205174;  // std dev = 4,574, 87,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=52 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09291870067420187;  // std dev = 1,711, 125,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=3 */
%   | | | else return 0.07279324639279494;  // std dev = 7,215, 290,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=68 */
%   | else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,60e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15557493515301446;  // std dev = 0,497, 109,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=54 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.12921449127688098;  // std dev = 1,698, 84,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=3 */
%   | | | else return 0.055462076373725876;  // std dev = 7,202, 328,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=68 */
%   | else return -0.1015963294878362;  // std dev = 3,94e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.22025391972968772;  // std dev = 0,484, 91,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09239359837990378;  // std dev = 1,714, 149,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=3 */
%   | | | else return 0.054022029494164216;  // std dev = 7,201, 299,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=68 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.13433878376767106;  // std dev = 4,820, 96,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=54 */
%   | | | else return -0.08405965545976576;  // std dev = 1,714, 154,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.1218908878380901;  // std dev = 1,698, 76,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=3 */
%   | | | else return 0.12011409725339166;  // std dev = 6,706, 211,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=65 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.09933541543434511;  // std dev = 4,839, 96,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=54 */
%   | | | else return -0.10917197324217308;  // std dev = 1,701, 86,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0674509561658527;  // std dev = 1,707, 103,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=3 */
%   | | | else return 0.09963902433835513;  // std dev = 6,713, 212,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=65 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 5,58e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.10001917898381396;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04792323436630833;  // std dev = 4,882, 96,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=52 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09564777936596085;  // std dev = 1,702, 91,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=3 */
%   | | | else return 0.016437683906035214;  // std dev = 7,114, 355,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=68 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.08193366563383439;  // std dev = 4,718, 93,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=54 */
%   | | | else return -0.0700292215231178;  // std dev = 1,713, 143,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08291102119740677;  // std dev = 1,698, 77,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=3 */
%   | | | else return 0.11364971543532094;  // std dev = 6,548, 191,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=65 */
%   | else return -0.06842697784420268;  // std dev = 2,11e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.04433367554101255;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.004428887603228589;  // std dev = 4,940, 98,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=52 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0704773666583918;  // std dev = 1,404, 143,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=2 */
%   | | | else return 0.07242093325820097;  // std dev = 0,909, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return 0.11440225522670705;  // std dev = 1,239, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.09267727164542877;  // std dev = 0,996, 70,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=1 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.06680796865577253;  // std dev = 6,678, 207,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=65 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */


Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.249131
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 50.297 seconds
Total inference time: 3.22 seconds
AUC ROC: 0.826968


Results scoring model
   AUC ROC   = 0.900782
   AUC PR    = 0.549534
   CLL	      = -0.228087
   Precision = 0.170166 at threshold = 0.5
   Recall    = 0.678414
   F1        = 0.272085


Total scoring time: 10.183 seconds
Refined model CLL: -0.228087


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.249131
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 65.95599999999999 seconds
Total inference time: 3.22 seconds
AUC ROC: 0.826968
Total revision time: 65.95599999999999
Best scored revision CLL: -0.228087


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:22:17
{'F1': 0.422018, 'Inference time': 3.22, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826968, 'AUC PR': 0.521103, 'parameter_0.4': {'F1': 0.597826, 'Inference time': 1.978, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 2.675, 'CLL': -0.245972}, 'Recall': 0.534884, 'Learning time': 65.95599999999999, 'CLL': -0.249131}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5883076652582406;  // std dev = 0,444, 126,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=92 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.12766666773736726;  // std dev = 1,404, 141,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=2 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.22997992101500123;  // std dev = 0,483, 355,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=132 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.770598251197217;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.22940174880278283;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.4769474575464213;  // std dev = 0,455, 126,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=89 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.10613706250757766;  // std dev = 0,143, 141,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.13221352933465783;  // std dev = 1,697, 75,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | | else return 0.25493878854613894;  // std dev = 8,596, 302,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=129 */
%   else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6085196980535098;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19137598063204161;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.39942287413265926;  // std dev = 0,447, 123,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=89 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G), haswordvenue(J, C) )
%   | | | then return -0.10054766707313967;  // std dev = 1,403, 132,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=2 */
%   | | | else return -0.023618271157426173;  // std dev = 0,930, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.11667376809594987;  // std dev = 1,699, 80,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=3 */
%   | | | else return 0.2507277888094937;  // std dev = 8,328, 279,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=129 */
%   else return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.45824109731788876;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16349226810721232;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.23746550061325955;  // std dev = 0,476, 136,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=89 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09183103079937471;  // std dev = 1,405, 141,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=2 */
%   | | | else return 0.06075877050130056;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.10206503078341042;  // std dev = 1,699, 80,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=3 */
%   | | | else return 0.17352162572651494;  // std dev = 8,575, 300,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=129 */
%   else return -0.10159632948783624;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2350857741443259;  // std dev = 0,437, 132,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=92 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.0978389811157723;  // std dev = 1,242, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.11411581868217499;  // std dev = 0,994, 80,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.09779103647648177;  // std dev = 0,007, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07220381718187276;  // std dev = 1,682, 117,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=3 */
%   | | else return 0.14634994830743056;  // std dev = 0,496, 295,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=129 */
%   else return -0.09269127618926105;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.1373138197172259;  // std dev = 0,454, 140,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=92 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07550682090020681;  // std dev = 1,403, 128,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=2 */
%   | | | else return 0.11533153137029611;  // std dev = 0,862, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.16343489203102696;  // std dev = 1,167, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.10190541318278264;  // std dev = 0,998, 56,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
%   | | else return 0.14200392888304622;  // std dev = 0,499, 278,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=129 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.15346541739759353;  // std dev = 0,401, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.17345878115695643;  // std dev = 0,438, 120,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=89 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.03627360722912531;  // std dev = 1,246, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.09410299993586897;  // std dev = 1,001, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.06567730518928643;  // std dev = 1,681, 145,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=3 */
%   | | | else return 0.10858861983638592;  // std dev = 8,328, 279,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=129 */
%   else return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07235957680344489;  // std dev = 0,453, 137,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=92 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06365770815217493;  // std dev = 1,403, 120,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=2 */
%   | | | else return 0.19508196814318468;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07100136963665697;  // std dev = 1,640, 93,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=3 */
%   | | | else return 0.07049959356411815;  // std dev = 8,427, 287,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=129 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.05970404761675657;  // std dev = 0,629, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.11443438528632957;  // std dev = 4,795, 120,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=89 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07637988605168744;  // std dev = 1,325, 83,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=2 */
%   | | | else return 0.1741182762134951;  // std dev = 0,849, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06010074963017266;  // std dev = 1,403, 130,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=2 */
%   | | | else return 0.031093648576197987;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(K, C) )
%   | | | then return 0.09067543345955945;  // std dev = 8,013, 257,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=125 */
%   | | | else return 0.10429411050236137;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.06830730110647666;  // std dev = 0,650, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03634637424016385;  // std dev = 5,253, 129,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=89 */
%   | | else if ( haswordvenue(G, D), haswordvenue(H, C) )
%   | | | then return -0.05741359667759379;  // std dev = 1,405, 137,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=2 */
%   | | | else return 0.1062866287104449;  // std dev = 0,834, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.015742671027316173;  // std dev = 0,448, 366,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=132 */
%   else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */


Results
   AUC ROC   = 0.71886
   AUC PR    = 0.076767
   CLL	      = -0.394486
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 245.29 seconds
Total inference time: 4.217 seconds
AUC ROC: 0.71886


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 13:26:27
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 4.217, 'Precision': [0.167742, 0.5], 'Learning time': 245.29, 'AUC PR': 0.076767, 'CLL': -0.394486, 'AUC ROC': 0.71886}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5296817818148386;  // std dev = 0,470, 137,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=92 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.12824562272361714;  // std dev = 1,405, 147,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=2 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.22893545195344087;  // std dev = 0,483, 356,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=132 */
%   else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */


Results
   AUC ROC   = 0.655126
   AUC PR    = 0.069585
   CLL	      = -0.220593
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 15.004 seconds
Total inference time: 1.684 seconds
AUC ROC: 0.655126


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 13:26:44
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.684, 'Precision': [nan, 0.5], 'Learning time': 15.004, 'AUC PR': 0.069585, 'CLL': -0.220593, 'AUC ROC': 0.655126}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 9,23e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.08297329107140453;  // std dev = 12,200, 854,000 (wgt'ed) examples reached here.  /* #neg=662 #pos=192 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.060605771558551166;  // std dev = 12,294, 902,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=192 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,26e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.06121025842686603;  // std dev = 12,226, 867,000 (wgt'ed) examples reached here.  /* #neg=675 #pos=192 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,50e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.04780792410302208;  // std dev = 12,265, 887,000 (wgt'ed) examples reached here.  /* #neg=695 #pos=192 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,73e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.048575631888133394;  // std dev = 12,206, 857,000 (wgt'ed) examples reached here.  /* #neg=665 #pos=192 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694904;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.03533364630242613;  // std dev = 12,254, 881,000 (wgt'ed) examples reached here.  /* #neg=689 #pos=192 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,46e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.03610375106158681;  // std dev = 12,206, 857,000 (wgt'ed) examples reached here.  /* #neg=665 #pos=192 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.015872686787164803;  // std dev = 12,321, 917,000 (wgt'ed) examples reached here.  /* #neg=725 #pos=192 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.025970428136974106;  // std dev = 12,222, 865,000 (wgt'ed) examples reached here.  /* #neg=673 #pos=192 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.02158934001671959;  // std dev = 12,224, 866,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=192 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.247223
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 3.741 seconds
Total inference time: 1.843 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.718475
   AUC PR    = 0.471415
   CLL	      = -0.244926
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.43695
   F1        = 0.608163


Total scoring time: 3.399 seconds
Parameter learned model CLL: -0.244926


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.23e-07, 0, 149], 'false': [12.2, 662, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 149], 'false': [12.294, 710, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.26e-07, 0, 149], 'false': [12.226, 675, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.5e-07, 0, 149], 'false': [12.265, 695, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.73e-07, 0, 149], 'false': [12.206, 665, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 149], 'false': [12.254, 689, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.46e-07, 0, 149], 'false': [12.206, 665, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 149], 'false': [12.321, 725, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 149], 'false': [12.222, 673, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.66e-08, 0, 149], 'false': [12.224, 674, 192]}]]
[{'': [5.7224918316249676e-15, 0.17427836493372062]}, {'': [-2.3843715965104034e-15, 0.16755079866862985]}, {'': [1.8598098452781147e-15, 0.17241172878676858]}, {'': [1.3590918100109299e-15, 0.16960505561351868]}, {'': [5.007180352671847e-16, 0.17384461004099927]}, {'': [-1.6690601175572824e-16, 0.17043886513235673]}, {'': [4.0534317140676857e-16, 0.17384461004099058]}, {'': [-2.9804644956380043e-16, 0.16553909017717994]}, {'': [-3.576557394765605e-17, 0.1726967155601649]}, {'': [2.980464495638004e-17, 0.17255412317521968]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 9,23e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.38314893509951065;  // std dev = 0,499, 160,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=84 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.10576859067368381;  // std dev = 2,598, 194,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=7 */
%   | | | else return 0.0866557224298277;  // std dev = 8,827, 442,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=101 */
%   | else return -0.14185106490048766;  // std dev = 7,45e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.40916083480009136;  // std dev = 0,489, 139,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=84 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09903214124095563;  // std dev = 2,380, 120,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=6 */
%   | | | else return 0.11723236631419154;  // std dev = 1,192, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10711669474497851;  // std dev = 1,977, 183,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=4 */
%   | | | else return 0.47054302428132644;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.1077737511177543;  // std dev = 8,293, 357,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=93 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,26e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2888592710587196;  // std dev = 0,497, 151,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=84 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08817968022513559;  // std dev = 2,529, 219,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=7 */
%   | | | else return 0.05744091614898097;  // std dev = 8,829, 465,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=101 */
%   | else return -0.11575222007830455;  // std dev = 0,091, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,50e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.04193617993384014;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2842898328593363;  // std dev = 5,641, 134,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=82 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0764607853870306;  // std dev = 2,530, 200,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=7 */
%   | | | else return 0.049946954763703984;  // std dev = 8,827, 463,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=101 */
%   | else return -0.10314432867046439;  // std dev = 0,041, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,73e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16818684501873565;  // std dev = 0,494, 151,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=84 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06860973156017348;  // std dev = 2,534, 195,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=7 */
%   | | | else return 0.05356775030532585;  // std dev = 8,759, 443,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=101 */
%   | else return -0.09535552236290346;  // std dev = 0,080, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694904;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.10604303431286821;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.21699131911486666;  // std dev = 5,351, 126,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=82 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09282320741249231;  // std dev = 2,708, 121,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=8 */
%   | | | else return 0.04327944835582517;  // std dev = 8,659, 506,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=100 */
%   | else return -0.08624997754461657;  // std dev = 0,035, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,46e-07, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11593673273024258;  // std dev = 0,483, 142,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=84 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06864009519097024;  // std dev = 2,536, 216,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=7 */
%   | | | else return 0.042515678044978876;  // std dev = 8,732, 446,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=101 */
%   | else return -0.07964243272764578;  // std dev = 0,032, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.10831464263644539;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.03369827214722733;  // std dev = 6,072, 149,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=82 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07429310509502707;  // std dev = 1,981, 227,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=4 */
%   | | | else return 0.28800504110290376;  // std dev = 1,277, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10467662236162742;  // std dev = 2,395, 142,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=6 */
%   | | | else return 0.27172102968366507;  // std dev = 0,993, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.08894320821786579;  // std dev = 8,107, 317,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=93 */
%   | | | else return -0.07259864435854638;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.04644197716819456;  // std dev = 5,991, 151,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=84 */
%   | | | else return -0.08388639967012744;  // std dev = 2,686, 141,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=8 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05470490492657183;  // std dev = 2,492, 194,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=7 */
%   | | | else return 0.07134661810479284;  // std dev = 8,122, 320,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=93 */
%   | else return -0.07120213202405903;  // std dev = 0,124, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.05058965208692491;  // std dev = 5,896, 146,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=84 */
%   | | | else return -0.05240546129161819;  // std dev = 2,498, 208,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06716215533342061;  // std dev = 2,682, 121,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=8 */
%   | | | else return 0.06634009007567311;  // std dev = 8,080, 312,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=93 */
%   | else return -0.06781686314846035;  // std dev = 0,130, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.242325
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 63.554 seconds
Total inference time: 3.23 seconds
AUC ROC: 0.826968


Results scoring model
   AUC ROC   = 0.895212
   AUC PR    = 0.54006
   CLL	      = -0.227602
   Precision = 0.172646 at threshold = 0.5
   Recall    = 0.677419
   F1        = 0.275164


Total scoring time: 10.01 seconds
Refined model CLL: -0.227602


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.242325
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 80.70400000000001 seconds
Total inference time: 3.23 seconds
AUC ROC: 0.826968
Total revision time: 80.70400000000001
Best scored revision CLL: -0.227602


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:28:11
{'F1': 0.422018, 'Inference time': 3.23, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826968, 'AUC PR': 0.521103, 'parameter_0.6': {'F1': 0.597826, 'Inference time': 1.843, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 3.741, 'CLL': -0.247223}, 'Recall': 0.534884, 'Learning time': 80.70400000000001, 'CLL': -0.242325}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5655957436101476;  // std dev = 0,455, 188,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=133 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11700634440359346;  // std dev = 1,975, 161,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=4 */
%   | | | else return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0877970108464336;  // std dev = 2,751, 148,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=8 */
%   | | | else return 0.286394948766934;  // std dev = 10,368, 439,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=188 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4782841982073905;  // std dev = 0,454, 196,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=138 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10858792672827494;  // std dev = 1,980, 204,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=4 */
%   | | | else return 0.17111998811631224;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05742178289153627;  // std dev = 2,722, 108,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=8 */
%   | | | else return 0.2537749994112186;  // std dev = 10,314, 433,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=188 */
%   else return -0.12544463852839155;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.6138599942120253;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0793384058288704;  // std dev = 0,655, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.37684584286976763;  // std dev = 0,460, 191,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=133 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07315320175601893;  // std dev = 2,388, 114,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=6 */
%   | | | else return 0.3791912971085328;  // std dev = 0,991, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.08227088646038222;  // std dev = 2,525, 194,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=7 */
%   | | | else return 0.22239307717514767;  // std dev = 10,229, 424,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=188 */
%   else return -0.11231637819360622;  // std dev = 6,83e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3034009410614385;  // std dev = 0,450, 194,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=138 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08889700659272969;  // std dev = 1,981, 203,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=4 */
%   | | | else return 0.3253468857754775;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04927874542415879;  // std dev = 2,692, 116,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=8 */
%   | | | else return 0.20485640664845386;  // std dev = 10,015, 403,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=188 */
%   else return -0.10159632948783617;  // std dev = 5,05e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4319749600233898;  // std dev = 0,151, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.4810407758633626;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.21858318175347136;  // std dev = 0,457, 189,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=132 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07671590148724965;  // std dev = 1,979, 165,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=4 */
%   | | | else return 0.10674122781345503;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04758544809951777;  // std dev = 2,698, 122,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=8 */
%   | | | else return 0.12127953321684803;  // std dev = 10,403, 443,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=188 */
%   else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16668140743939583;  // std dev = 0,445, 198,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=138 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0744893412105235;  // std dev = 1,983, 207,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=4 */
%   | | | else return 0.05348044027362475;  // std dev = 1,451, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04688242436156866;  // std dev = 2,705, 130,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=8 */
%   | | | else return 0.10587376236072436;  // std dev = 10,305, 432,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=188 */
%   else return -0.08518475138839679;  // std dev = 2,11e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.10067635484709019;  // std dev = 0,457, 205,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=138 */
%   | | else if ( haswordvenue(F, D), haswordvenue(G, C) )
%   | | | then return -0.06870494183651725;  // std dev = 1,983, 211,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=4 */
%   | | | else return 0.15240363299027393;  // std dev = 1,270, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.049632773756793654;  // std dev = 2,383, 112,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=6 */
%   | | | else return 0.34680698355477046;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.08309189238424167;  // std dev = 0,496, 431,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=188 */
%   else return -0.0787767547310917;  // std dev = 2,98e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1255696067879601;  // std dev = 0,435, 191,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=138 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05182681661683277;  // std dev = 2,400, 125,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=6 */
%   | | | else return 0.21219593822442193;  // std dev = 1,068, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.043166697970294876;  // std dev = 0,428, 601,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=195 */
%   else return -0.07324622576333704;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.061221485675647946;  // std dev = 0,453, 200,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=138 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.06912763408262984;  // std dev = 1,300, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.06951244961016619;  // std dev = 2,030, 179,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=5 */
%   | else return 0.04407528495212336;  // std dev = 0,453, 544,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=196 */
%   else return -0.06842697784420267;  // std dev = 3,87e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.04846989599668237;  // std dev = 0,452, 200,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=138 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06050412641224103;  // std dev = 1,976, 184,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=4 */
%   | | | else return 0.10075439019484804;  // std dev = 1,355, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.050622392318170784;  // std dev = 0,455, 521,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=196 */
%   else return -0.06419184008202625;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */


Results
   AUC ROC   = 0.718784
   AUC PR    = 0.076771
   CLL	      = -0.383136
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 260.942 seconds
Total inference time: 3.652 seconds
AUC ROC: 0.718784


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 13:32:36
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 3.652, 'Precision': [0.167742, 0.5], 'Learning time': 260.942, 'AUC PR': 0.076771, 'CLL': -0.383136, 'AUC ROC': 0.718784}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5481489350995092;  // std dev = 0,462, 200,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=138 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.12214663140295125;  // std dev = 1,980, 203,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=4 */
%   | | | else return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.2217852987358715;  // std dev = 0,481, 539,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=196 */
%   else return -0.14185106490048766;  // std dev = 6,50e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */


Results
   AUC ROC   = 0.655126
   AUC PR    = 0.069585
   CLL	      = -0.219968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.011 seconds
Total inference time: 1.64 seconds
AUC ROC: 0.655126


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 13:32:58
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.64, 'Precision': [nan, 0.5], 'Learning time': 20.011, 'AUC PR': 0.069585, 'CLL': -0.219968, 'AUC ROC': 0.655126}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.07324000188181447;  // std dev = 13,952, 1.153,000 (wgt'ed) examples reached here.  /* #neg=905 #pos=248 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.06096333112172136;  // std dev = 13,980, 1.170,000 (wgt'ed) examples reached here.  /* #neg=922 #pos=248 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,42e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.05298041477284776;  // std dev = 13,980, 1.170,000 (wgt'ed) examples reached here.  /* #neg=922 #pos=248 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583102;  // std dev = 2,38e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.04833489092644232;  // std dev = 13,957, 1.156,000 (wgt'ed) examples reached here.  /* #neg=908 #pos=248 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014917;  // std dev = 3,91e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.03805928877690639;  // std dev = 13,988, 1.175,000 (wgt'ed) examples reached here.  /* #neg=927 #pos=248 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,53e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.028148884131806398;  // std dev = 14,027, 1.200,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=248 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,04e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.042566560051677485;  // std dev = 13,861, 1.101,000 (wgt'ed) examples reached here.  /* #neg=853 #pos=248 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527783;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.03171217995374365;  // std dev = 13,901, 1.123,000 (wgt'ed) examples reached here.  /* #neg=875 #pos=248 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.022557742704130676;  // std dev = 13,939, 1.145,000 (wgt'ed) examples reached here.  /* #neg=897 #pos=248 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,19e-08, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else return 0.018063946989912573;  // std dev = 13,947, 1.150,000 (wgt'ed) examples reached here.  /* #neg=902 #pos=248 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.243639
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 4.013 seconds
Total inference time: 1.997 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.727473
   AUC PR    = 0.488898
   CLL	      = -0.240682
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.454945
   F1        = 0.625378


Total scoring time: 3.807 seconds
Parameter learned model CLL: -0.240682


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 207], 'false': [13.952, 905, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 207], 'false': [13.98, 922, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.42e-07, 0, 207], 'false': [13.98, 922, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.38e-07, 0, 207], 'false': [13.957, 908, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.91e-07, 0, 207], 'false': [13.988, 927, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.53e-07, 0, 207], 'false': [14.027, 952, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 207], 'false': [13.861, 853, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 207], 'false': [13.901, 875, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 207], 'false': [13.939, 897, 248]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.19e-08, 0, 207], 'false': [13.947, 902, 248]}]]
[{'': [5.6294207084375085e-15, 0.16882689977275753]}, {'': [-3.775830962976378e-15, 0.16703630652347776]}, {'': [1.990892689569363e-15, 0.16703630652348805]}, {'': [2.7460588821646383e-16, 0.1685085188156193]}, {'': [7.380033245817466e-16, 0.16651588954278612]}, {'': [3.089316242435218e-16, 0.16395555555556376]}, {'': [4.4623456835175375e-16, 0.17451231272702228]}, {'': [-5.577932104396922e-17, 0.1720680437924966]}, {'': [-1.244307930980852e-16, 0.1696809748097785]}, {'': [4.0761811532131354e-17, 0.16914631379962097]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4503277060492301;  // std dev = 0,491, 179,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=106 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10018439823382118;  // std dev = 2,769, 192,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=8 */
%   | | | else return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.039967116917694;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.11276015580957921;  // std dev = 2,787, 275,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=8 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.11559574361014732;  // std dev = 9,479, 470,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=121 */
%   | | | else return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.33766579069617375;  // std dev = 6,956, 195,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=106 */
%   | | | else return -0.06306456324757864;  // std dev = 3,179, 162,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=11 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09081153902522963;  // std dev = 3,093, 256,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=10 */
%   | | | else return 0.10883772406934449;  // std dev = 9,428, 456,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=121 */
%   | else return -0.12954951218039887;  // std dev = 0,095, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,42e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.28549597484600525;  // std dev = 0,497, 192,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=106 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08286696252276117;  // std dev = 3,095, 273,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=10 */
%   | | | else return 0.06228816794097125;  // std dev = 10,026, 600,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=132 */
%   | else return -0.11537293942045357;  // std dev = 0,070, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583102;  // std dev = 2,38e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2378688527027423;  // std dev = 0,496, 188,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=106 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07440108298228885;  // std dev = 3,097, 270,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=10 */
%   | | | else return 0.06496274305931278;  // std dev = 9,945, 572,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=132 */
%   | else return -0.10367375080228995;  // std dev = 0,064, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014917;  // std dev = 3,91e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.22898179598732293;  // std dev = 6,436, 174,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=106 */
%   | | | else return -0.06796426286721191;  // std dev = 3,171, 160,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=11 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06561162218968432;  // std dev = 3,095, 258,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=10 */
%   | | | else return 0.08164918346376887;  // std dev = 9,386, 445,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=121 */
%   | else return -0.09495221654365532;  // std dev = 0,066, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,53e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.10211398579972032;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1336134543476089;  // std dev = 6,662, 181,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=103 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06169505162578079;  // std dev = 3,098, 272,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=10 */
%   | | | else return 0.03545935092553244;  // std dev = 9,985, 610,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=132 */
%   | else return -0.08691832858040165;  // std dev = 0,059, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,04e-07, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.17976100027539188;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.0943114819928455;  // std dev = 6,710, 183,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=103 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.056282997487563755;  // std dev = 3,099, 270,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=10 */
%   | | | else return 0.04039123634029679;  // std dev = 9,920, 579,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=132 */
%   | else return -0.08007025398912185;  // std dev = 0,047, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527783;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1486150496745415;  // std dev = 0,479, 167,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=106 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05108649441602716;  // std dev = 3,098, 268,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=10 */
%   | | | else return 0.026599760911459033;  // std dev = 9,964, 601,000 (wgt'ed) examples reached here.  /* #neg=469 #pos=132 */
%   | else return -0.07409841721904002;  // std dev = 0,040, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06016331311815568;  // std dev = 0,490, 182,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08207410793211083;  // std dev = 3,190, 188,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=11 */
%   | | | else return 0.009135975272510612;  // std dev = 10,001, 740,000 (wgt'ed) examples reached here.  /* #neg=609 #pos=131 */
%   | else return -0.06876033690121298;  // std dev = 0,021, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,19e-08, 207,000 (wgt'ed) examples reached here.  /* #pos=207 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.018780605971169935;  // std dev = 6,814, 191,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=106 */
%   | | | else return -0.06525956664138374;  // std dev = 3,177, 170,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=11 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04196492368133316;  // std dev = 3,088, 234,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=10 */
%   | | | else return 0.02817801434081443;  // std dev = 9,526, 484,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=121 */
%   | else return -0.06588851401815381;  // std dev = 0,053, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */


Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.230992
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 75.36 seconds
Total inference time: 2.727 seconds
AUC ROC: 0.826968


Results scoring model
   AUC ROC   = 0.893556
   AUC PR    = 0.554012
   CLL	      = -0.222249
   Precision = 0.173864 at threshold = 0.5
   Recall    = 0.681319
   F1        = 0.277033


Total scoring time: 13.277 seconds
Refined model CLL: -0.222249


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.230992
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 96.45700000000001 seconds
Total inference time: 2.727 seconds
AUC ROC: 0.826968
Total revision time: 96.45700000000001
Best scored revision CLL: -0.222249


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:34:40
{'F1': 0.422018, 'Inference time': 2.727, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826968, 'parameter_0.8': {'F1': 0.597826, 'Inference time': 1.997, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 4.013, 'CLL': -0.243639}, 'AUC PR': 0.521103, 'Recall': 0.534884, 'Learning time': 96.45700000000001, 'CLL': -0.230992}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5612739350995087;  // std dev = 0,457, 256,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=180 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.12158079463021786;  // std dev = 2,425, 296,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=6 */
%   | | | else return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07598280142743376;  // std dev = 3,206, 167,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=11 */
%   | | | else return 0.30850354502858585;  // std dev = 11,816, 564,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=254 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.46764988189200174;  // std dev = 0,462, 260,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=180 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.10289200243578367;  // std dev = 2,419, 242,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=6 */
%   | | | else return 0.3429827707072774;  // std dev = 1,387, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07495624220290344;  // std dev = 3,219, 190,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=11 */
%   | | | else return 0.2468112506244361;  // std dev = 12,027, 590,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=254 */
%   else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6837536477406269;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3162463522593732;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.34784631183329373;  // std dev = 0,472, 259,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=172 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09391085193022956;  // std dev = 2,423, 259,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=6 */
%   | | | else return 0.27997744879015757;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.06230410847902545;  // std dev = 3,212, 177,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=11 */
%   | | | else return 0.22043443291880876;  // std dev = 11,883, 572,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=254 */
%   else return -0.11231637819360618;  // std dev = 8,56e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3361453465841699;  // std dev = 0,435, 247,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=180 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07234560604513025;  // std dev = 2,774, 171,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=8 */
%   | | | else return 0.38218052711089184;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.0698277580732197;  // std dev = 2,915, 238,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=10 */
%   | | | else return 0.17830848157566448;  // std dev = 11,900, 574,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=254 */
%   else return -0.10159632948783626;  // std dev = 4,59e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.22233857251640088;  // std dev = 0,450, 258,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=180 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06729119330977967;  // std dev = 2,777, 179,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=8 */
%   | | | else return 0.2688548680981308;  // std dev = 1,300, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.06689883837971555;  // std dev = 2,940, 251,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=10 */
%   | | | else return 0.15902809209206922;  // std dev = 11,719, 553,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=254 */
%   else return -0.09269127618926083;  // std dev = 7,45e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.11710001454660852;  // std dev = 1,350, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.16559537516948086;  // std dev = 7,149, 249,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=173 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.072002213117137;  // std dev = 2,423, 256,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=6 */
%   | | | else return 0.1181954548310621;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05528192124016217;  // std dev = 2,759, 164,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=8 */
%   | | | else return 0.3961182817694378;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.10701925391830443;  // std dev = 0,497, 575,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=254 */
%   else return -0.08518475138839682;  // std dev = 4,94e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.12208305330805509;  // std dev = 0,454, 259,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=180 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06982291249408477;  // std dev = 2,432, 294,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=6 */
%   | | | else return 0.23200437518825687;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G), haswordvenue(J, C) )
%   | | | then return -0.04307588492119725;  // std dev = 2,748, 143,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=8 */
%   | | | else return 0.5184995358689405;  // std dev = 0,713, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06937375532163668;  // std dev = 0,495, 593,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=254 */
%   else return -0.0787767547310916;  // std dev = 5,77e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.32686660219491304;  // std dev = 0,013, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.44000046055297687;  // std dev = 3,65e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.1126275899240163;  // std dev = 0,450, 240,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=172 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06323387987446195;  // std dev = 2,432, 275,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=6 */
%   | | | else return 0.12848589427969517;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.037148050404085635;  // std dev = 2,988, 171,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=11 */
%   | | | else return 0.07850007384595596;  // std dev = 11,781, 560,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=254 */
%   else return -0.07324622576333707;  // std dev = 4,71e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.06235514611934298;  // std dev = 0,447, 264,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=180 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05958436716439239;  // std dev = 2,436, 283,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=6 */
%   | | | else return 0.1557306325222498;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.271546941628161;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.05122353450805061;  // std dev = 2,315, 143,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=7 */
%   | | else if ( haswordvenue(J, C) )
%   | | | then return 0.060901643083926905;  // std dev = 11,560, 539,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=245 */
%   | | | else return 0.24921333139561344;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   else return -0.06842697784420265;  // std dev = 5,11e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.05902264449269566;  // std dev = 0,448, 257,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=180 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05392746536238355;  // std dev = 2,427, 281,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=6 */
%   | | | else return 0.06435319211182788;  // std dev = 1,490, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.12358542241538593;  // std dev = 1,755, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.058543813361468515;  // std dev = 2,373, 181,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=7 */
%   | | else return 0.0319003857703003;  // std dev = 0,496, 576,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=254 */
%   else return -0.06419184008202626;  // std dev = 2,89e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 0.718503
   AUC PR    = 0.076756
   CLL	      = -0.39003
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 421.505 seconds
Total inference time: 3.957 seconds
AUC ROC: 0.718503


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 13:41:46
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 3.957, 'Precision': [0.167742, 0.5], 'Learning time': 421.505, 'AUC PR': 0.076756, 'CLL': -0.39003, 'AUC ROC': 0.718503}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.5379908323327104;  // std dev = 0,467, 253,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=172 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11895030154170971;  // std dev = 2,421, 262,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=6 */
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.07394983033258642;  // std dev = 3,202, 162,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=11 */
%   | | | else return 0.292336969287542;  // std dev = 11,988, 585,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=254 */
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 0.718659
   AUC PR    = 0.076768
   CLL	      = -0.21797
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 29.271 seconds
Total inference time: 2.062 seconds
AUC ROC: 0.718659


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 13:42:17
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.062, 'Precision': [nan, 0.5], 'Learning time': 29.271, 'AUC PR': 0.076768, 'CLL': -0.21797, 'AUC ROC': 0.718659}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,07e-06, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.07123052646835432;  // std dev = 15,769, 1.483,000 (wgt'ed) examples reached here.  /* #neg=1.167 #pos=316 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.07147717696960258;  // std dev = 15,677, 1.422,000 (wgt'ed) examples reached here.  /* #neg=1.106 #pos=316 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,46e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.06414672485545078;  // std dev = 15,657, 1.409,000 (wgt'ed) examples reached here.  /* #neg=1.093 #pos=316 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.04959208940788761;  // std dev = 15,714, 1.446,000 (wgt'ed) examples reached here.  /* #neg=1.130 #pos=316 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601501;  // std dev = 1,88e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.048412521533696816;  // std dev = 15,655, 1.408,000 (wgt'ed) examples reached here.  /* #neg=1.092 #pos=316 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,21e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.03403077971484882;  // std dev = 15,728, 1.455,000 (wgt'ed) examples reached here.  /* #neg=1.139 #pos=316 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.02392538379473332;  // std dev = 15,778, 1.489,000 (wgt'ed) examples reached here.  /* #neg=1.173 #pos=316 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.030084380189370666;  // std dev = 15,679, 1.423,000 (wgt'ed) examples reached here.  /* #neg=1.107 #pos=316 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.019894903651550527;  // std dev = 15,734, 1.459,000 (wgt'ed) examples reached here.  /* #neg=1.143 #pos=316 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801112;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.018982309615377967;  // std dev = 15,711, 1.444,000 (wgt'ed) examples reached here.  /* #neg=1.128 #pos=316 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.24643
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 4.893 seconds
Total inference time: 2.03 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.72232
   AUC PR    = 0.478862
   CLL	      = -0.243874
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44464
   F1        = 0.615572


Total scoring time: 4.59 seconds
Parameter learned model CLL: -0.243874


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.07e-06, 0, 253], 'false': [15.769, 1167, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.677, 1106, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.46e-07, 0, 253], 'false': [15.657, 1093, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.714, 1130, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.88e-07, 0, 253], 'false': [15.655, 1092, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.21e-07, 0, 253], 'false': [15.728, 1139, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 253], 'false': [15.778, 1173, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.679, 1107, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.734, 1143, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.711, 1128, 316]}]]
[{'': [4.49355089808759e-15, 0.16767782678856746]}, {'': [-4.3812121256354e-15, 0.17283950617285004]}, {'': [7.863714071653283e-16, 0.1739743643343252]}, {'': [-3.3701631735656924e-16, 0.17077682699830438]}, {'': [1.404234655652372e-16, 0.1740621771694097]}, {'': [4.0722805013918787e-16, 0.17001405273909545]}, {'': [3.2297397080004555e-16, 0.16718438010375536]}, {'': [-1.4042346556523718e-17, 0.17275272367574515]}, {'': [-1.6148698540002277e-16, 0.16967690320908244]}, {'': [-1.0531759917392789e-17, 0.17094712287350966]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,07e-06, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4235497789813654;  // std dev = 0,496, 237,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=134 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.09624417319475045;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.08685106490048772;  // std dev = 3,224, 200,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=11 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.1079527598157422;  // std dev = 3,405, 354,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=12 */
%   | | | else return 0.14386322081379804;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.12988806553429044;  // std dev = 10,452, 552,000 (wgt'ed) examples reached here.  /* #neg=402 #pos=150 */
%   | | | else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.5984202850603547;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3290325299583168;  // std dev = 7,812, 245,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=130 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08416394369963841;  // std dev = 3,881, 346,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=16 */
%   | | | else return 0.0633588883043399;  // std dev = 11,353, 770,000 (wgt'ed) examples reached here.  /* #neg=604 #pos=166 */
%   | else return -0.1287179075881678;  // std dev = 0,069, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,46e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -3.9106350327641575E-4;  // std dev = 1,666, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.3072434763397245;  // std dev = 7,495, 229,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=130 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07565953705697698;  // std dev = 3,883, 354,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=16 */
%   | | | else return 0.05601969589276881;  // std dev = 11,340, 768,000 (wgt'ed) examples reached here.  /* #neg=602 #pos=166 */
%   | else return -0.11485411092804379;  // std dev = 0,052, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.24096768587061249;  // std dev = 7,622, 239,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=134 */
%   | | | else return -0.07414760938246108;  // std dev = 3,829, 217,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=16 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06519215471037834;  // std dev = 3,879, 334,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=16 */
%   | | | else return 0.09239930430548916;  // std dev = 10,483, 561,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=150 */
%   | else return -0.10486789221365461;  // std dev = 0,070, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601501;  // std dev = 1,88e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.20817936715370738;  // std dev = 0,492, 229,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.061341860960315825;  // std dev = 3,885, 352,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=16 */
%   | | | else return 0.04096456855634048;  // std dev = 11,291, 767,000 (wgt'ed) examples reached here.  /* #neg=601 #pos=166 */
%   | else return -0.09484464157526694;  // std dev = 0,058, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,21e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19771771442101357;  // std dev = 0,482, 215,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.056069850049349175;  // std dev = 3,887, 356,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=16 */
%   | | | else return 0.030443537004241666;  // std dev = 11,317, 786,000 (wgt'ed) examples reached here.  /* #neg=620 #pos=166 */
%   | else return -0.08807881929148202;  // std dev = 0,074, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10463580079575217;  // std dev = 0,490, 232,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.048557577573339415;  // std dev = 3,883, 336,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=16 */
%   | | | else return 0.04741626472646585;  // std dev = 11,162, 710,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=166 */
%   | else return -0.08019700958254622;  // std dev = 0,052, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.12242904147547999;  // std dev = 1,201, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.06918952194749772;  // std dev = 7,447, 229,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=130 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07868902221436776;  // std dev = 3,825, 216,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=16 */
%   | | | else return 0.013230708840956208;  // std dev = 11,337, 940,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=166 */
%   | else return -0.074911579161174;  // std dev = 0,043, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.05789508985768345;  // std dev = 0,491, 233,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=134 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06721576222641895;  // std dev = 3,823, 214,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=16 */
%   | | | else return 0.02512500555224719;  // std dev = 11,248, 853,000 (wgt'ed) examples reached here.  /* #neg=687 #pos=166 */
%   | else return -0.06918910533918265;  // std dev = 0,035, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801112;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.005978041525911972;  // std dev = 0,496, 249,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=134 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.057861228683820196;  // std dev = 3,399, 359,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=12 */
%   | | | else return 0.23018146961632635;  // std dev = 1,597, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0755350765660222;  // std dev = 3,337, 227,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=12 */
%   | | | else return 0.2500984623847527;  // std dev = 1,548, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05875640150502846;  // std dev = 10,445, 550,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=150 */
%   | | | else return -0.06312031925259831;  // std dev = 2,30e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */


Results
   AUC ROC   = 0.826677
   AUC PR    = 0.521087
   CLL	      = -0.230815
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 86.679 seconds
Total inference time: 3.183 seconds
AUC ROC: 0.826677


Results scoring model
   AUC ROC   = 0.889136
   AUC PR    = 0.542936
   CLL	      = -0.22428
   Precision = 0.172723 at threshold = 0.5
   Recall    = 0.676626
   F1        = 0.275197


Total scoring time: 15.215 seconds
Refined model CLL: -0.22428


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826677
   AUC PR    = 0.521087
   CLL	      = -0.230815
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 111.37700000000001 seconds
Total inference time: 3.183 seconds
AUC ROC: 0.826677
Total revision time: 111.37700000000001
Best scored revision CLL: -0.22428


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:44:15
{'parameter_1.0': {'F1': 0.597826, 'Inference time': 2.03, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 4.893, 'CLL': -0.24643}, 'F1': 0.422018, 'Inference time': 3.183, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826677, 'AUC PR': 0.521087, 'Recall': 0.534884, 'Learning time': 111.37700000000001, 'CLL': -0.230815}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5601356900663959;  // std dev = 0,457, 302,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=212 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08779701084643379;  // std dev = 3,369, 222,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=12 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.09231546118531789;  // std dev = 3,900, 323,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=16 */
%   | | | else return 0.3070125714631441;  // std dev = 13,197, 704,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=316 */
%   else return -0.14185106490048813;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4720465209366297;  // std dev = 0,457, 317,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09745580874375705;  // std dev = 3,410, 350,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=12 */
%   | | | else return 0.2688132447831081;  // std dev = 1,550, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05990574731079028;  // std dev = 3,776, 215,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=16 */
%   | | | else return 0.25299033431027396;  // std dev = 13,345, 724,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=316 */
%   else return -0.1254446385283911;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.35123739123126085;  // std dev = 0,467, 331,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(H, C) )
%   | | | then return -0.08669808678912849;  // std dev = 3,412, 345,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=12 */
%   | | | else return 0.14316806156430414;  // std dev = 1,639, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0.16297405005168367;  // std dev = 0,468, 912,000 (wgt'ed) examples reached here.  /* #neg=580 #pos=332 */
%   else return -0.11231637819360617;  // std dev = 9,42e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2753616259472242;  // std dev = 0,466, 328,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07666961495222802;  // std dev = 3,409, 333,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=12 */
%   | | | else return 0.17807305333667356;  // std dev = 1,596, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.08054847693661699;  // std dev = 3,788, 243,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=16 */
%   | | | else return 0.19352227679161185;  // std dev = 13,212, 706,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=316 */
%   else return -0.10159632948783635;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.20898483602264795;  // std dev = 0,465, 328,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06714414112417734;  // std dev = 3,403, 318,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=12 */
%   | | | else return 0.23049073300468942;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.09037206807605237;  // std dev = 0,458, 961,000 (wgt'ed) examples reached here.  /* #neg=629 #pos=332 */
%   else return -0.09269127618926079;  // std dev = 7,88e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15794530668677223;  // std dev = 0,464, 328,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=221 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(H, C) )
%   | | | then return -0.09296976210279208;  // std dev = 3,373, 239,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=12 */
%   | | | else return 0.2967431196246529;  // std dev = 1,318, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.05236487524765014;  // std dev = 3,775, 323,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=16 */
%   | | | else return 0.1471384318060007;  // std dev = 13,079, 689,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=316 */
%   else return -0.0851847513883968;  // std dev = 6,66e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16382930275468574;  // std dev = 0,445, 307,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.054328809360548944;  // std dev = 3,396, 306,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=12 */
%   | | | else return 0.11959459894218981;  // std dev = 1,592, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.05818890614929936;  // std dev = 0,457, 935,000 (wgt'ed) examples reached here.  /* #neg=603 #pos=332 */
%   else return -0.07877675473109154;  // std dev = 7,52e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3499664240785045;  // std dev = 0,086, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.5961721209396166;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.043970176893842194;  // std dev = 0,757, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11569228584004691;  // std dev = 7,779, 295,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=210 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09088110635428902;  // std dev = 3,383, 243,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=12 */
%   | | | else return 0.23067156087175156;  // std dev = 1,307, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordauthor(L, K) )
%   | | | then return -0.04901211187398183;  // std dev = 3,770, 367,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=16 */
%   | | | else return 0.08420129915786717;  // std dev = 13,287, 716,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=316 */
%   else return -0.07324622576333711;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08666597161589581;  // std dev = 0,444, 313,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(H, C) )
%   | | | then return -0.04930923723094177;  // std dev = 3,402, 337,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=12 */
%   | | | else return 0.18761135172014842;  // std dev = 1,442, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.06133800527692979;  // std dev = 3,682, 208,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=16 */
%   | | | else return 0.0766765779915835;  // std dev = 13,143, 697,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=316 */
%   else return -0.06842697784420264;  // std dev = 6,14e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.2583954291133317;  // std dev = 0,074, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.47004454832732895;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.24344131727215038;  // std dev = 0,928, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.08790658712178952;  // std dev = 7,506, 287,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=210 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.03477080708016662;  // std dev = 1,628, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return -0.05249959240682075;  // std dev = 3,422, 324,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=13 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.05230584246006711;  // std dev = 3,672, 206,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=16 */
%   | | | else return 0.05916177458486234;  // std dev = 13,135, 696,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=316 */
%   else return -0.06419184008202626;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */


Results
   AUC ROC   = 0.718784
   AUC PR    = 0.076771
   CLL	      = -0.390751
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 277.391 seconds
Total inference time: 3.56 seconds
AUC ROC: 0.718784


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 13:48:56
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 3.56, 'Precision': [0.167742, 0.5], 'Learning time': 277.391, 'AUC PR': 0.076771, 'CLL': -0.390751, 'AUC ROC': 0.718784}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5531174885586279;  // std dev = 0,460, 318,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=221 */
%   | else return 0.12481560176617408;  // std dev = 0,442, 1.305,000 (wgt'ed) examples reached here.  /* #neg=957 #pos=348 */
%   else return -0.14185106490048802;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */


Results
   AUC ROC   = 0.587182
   AUC PR    = 0.064459
   CLL	      = -0.216287
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.613 seconds
Total inference time: 1.137 seconds
AUC ROC: 0.587182


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 13:49:08
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.137, 'Precision': [nan, 0.5], 'Learning time': 10.613, 'AUC PR': 0.064459, 'CLL': -0.216287, 'AUC ROC': 0.587182}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 544
Target train neg examples: 22302

Target test facts examples: 8644
Target test pos	 examples: 154
Target test neg examples: 5694

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.08861768509951287;  // std dev = 6,738, 256,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=59 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.06553400939670519;  // std dev = 6,790, 270,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=59 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.0609706567142674;  // std dev = 6,772, 265,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=59 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.03911406132014246;  // std dev = 6,831, 282,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=59 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.043631874810549365;  // std dev = 6,787, 269,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=59 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.03804145209379912;  // std dev = 6,783, 268,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=59 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.017732385347000758;  // std dev = 6,846, 287,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=59 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.039009258921815004;  // std dev = 6,742, 257,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=59 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.02349666771407854;  // std dev = 6,783, 268,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=59 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.02058271041189211;  // std dev = 6,780, 267,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=59 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.245665
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 1.729 seconds
Total inference time: 2.442 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.726852
   AUC PR    = 0.488373
   CLL	      = -0.244317
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.453704
   F1        = 0.624204


Total scoring time: 2.143 seconds
Parameter learned model CLL: -0.244317


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.69e-07, 0, 49], 'false': [6.738, 197, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [6.79, 211, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [6.772, 206, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [6.831, 223, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 49], 'false': [6.787, 210, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [6.783, 209, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 49], 'false': [6.846, 228, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [6.742, 198, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [6.783, 209, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 49], 'false': [6.78, 208, 59]}]]
[{'': [5.800348863347756e-16, 0.17735290527343828]}, {'': [-5.800348863347756e-16, 0.17076817558299057]}, {'': [0.0, 0.1730722677109275]}, {'': [-3.625218039592348e-16, 0.16544690910919704]}, {'': [1.8126090197961738e-17, 0.1712248310554046]}, {'': [-2.718913529694261e-17, 0.17168355981287392]}, {'': [3.6252180395923476e-17, 0.16331386808144002]}, {'': [-6.797283824235652e-17, 0.1768686883980074]}, {'': [-3.6252180395923476e-17, 0.17168355981287658]}, {'': [1.8126090197961738e-17, 0.17214437009917335]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.41370449065506687;  // std dev = 0,497, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07802127766644519;  // std dev = 1,676, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.1229831403721858;  // std dev = 0,991, 53,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
%   | | | else return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.06782635445435037;  // std dev = 4,533, 124,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.45789492055804903;  // std dev = 0,474, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.1326163190345998;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.04118274646408124;  // std dev = 1,891, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11113583394000924;  // std dev = 0,992, 61,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=1 */
%   | | | else return 0.4332054912315484;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.08183309937187085;  // std dev = 4,468, 112,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=26 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.28324931299663003;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.39242636267904507;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | else if ( author(G, E), title(G, A) )
%   | | | then return -0.11809055901577634;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0050252968028459445;  // std dev = 1,858, 32,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10074155946870622;  // std dev = 0,993, 67,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1 */
%   | | | else return 0.3641038854897841;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.08192772510541046;  // std dev = 4,436, 107,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=26 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2754835094548293;  // std dev = 0,475, 39,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.04971542846504928;  // std dev = 1,904, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return 0.03434142405559891;  // std dev = 4,789, 156,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=30 */
%   | else return -0.12054144588645685;  // std dev = 0,198, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.20972019185641927;  // std dev = 0,475, 39,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.10170303318740778;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.008871202748828933;  // std dev = 1,868, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08762296596582929;  // std dev = 0,989, 48,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
%   | | | else return -0.04226825398205414;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07022027503996937;  // std dev = 4,423, 105,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=26 */
%   | | | else return -0.09111024673119418;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3243458740666052;  // std dev = 0,385, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.09278061124893143;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0367598553271758;  // std dev = 1,899, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08517994083988498;  // std dev = 0,992, 69,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=1 */
%   | | | else return 0.027386066341562914;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordvenue(K, J) )
%   | | | then return 0.019921524553936257;  // std dev = 4,352, 119,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=24 */
%   | | | else return 0.21481279051492796;  // std dev = 1,035, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.03726518760835744;  // std dev = 3,355, 110,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=26 */
%   | | | else return 0.17238688044153141;  // std dev = 1,198, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.02941428370800703;  // std dev = 0,403, 145,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=30 */
%   | else return -0.08979202152130412;  // std dev = 0,052, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.3918921649433547;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2224458527494269;  // std dev = 2,339, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.052234148426949574;  // std dev = 1,686, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | | else return 0.045223098372071335;  // std dev = 4,778, 134,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=30 */
%   | else return -0.0857578214447353;  // std dev = 0,052, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, A), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.6174408707892168;  // std dev = 1,501, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1667037887795556;  // std dev = 2,060, 221,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=2 */
%   | | else if ( haswordauthor(H, D), haswordtitle(A, D) )
%   | | | then return -0.46986188386628275;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.09290009243925453;  // std dev = 1,310, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return 0.4306062532157828;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.0833049265249234;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return -0.09924896354471159;  // std dev = 2,774, 46,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | | | else return -0.06405230987015596;  // std dev = 0,923, 90,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=1 */
%   | | else return 0.06718183425653927;  // std dev = 0,438, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then if ( title(I, B), venue(I, H) )
%   | | | then return 0.003911447562540349;  // std dev = 3,816, 135,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=25 */
%   | | | else return 0.11435772448839639;  // std dev = 1,422, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.17448714697042353;  // std dev = 0,940, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.962746
   AUC PR    = 0.767123
   CLL	      = -0.19901
   Precision = 0.188356 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.298103


Total learning time: 85.31 seconds
Total inference time: 8.117 seconds
AUC ROC: 0.962746


Results scoring model
   AUC ROC   = 0.965715
   AUC PR    = 0.733125
   CLL	      = -0.190953
   Precision = 0.223881 at threshold = 0.5
   Recall    = 0.694444
   F1        = 0.3386


Total scoring time: 24.068 seconds
Refined model CLL: -0.190953


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.962746
   AUC PR    = 0.767123
   CLL	      = -0.19901
   Precision = 0.188356 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.298103


Total learning time: 113.25 seconds
Total inference time: 8.117 seconds
AUC ROC: 0.962746
Total revision time: 113.25
Best scored revision CLL: -0.190953


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 13:51:13
{'parameter_0.2': {'F1': 0.637168, 'Inference time': 2.442, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 1.729, 'CLL': -0.245665}, 'F1': 0.298103, 'Inference time': 8.117, 'Precision': [0.188356, 0.5], 'AUC ROC': 0.962746, 'AUC PR': 0.767123, 'Recall': 0.714286, 'Learning time': 113.25, 'CLL': -0.19901}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5658412427918204;  // std dev = 0,455, 65,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=46 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.12430720525136488;  // std dev = 0,991, 57,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=1 */
%   | | | else return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02756535061477346;  // std dev = 1,882, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return 0.2672398441904225;  // std dev = 5,649, 132,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=54 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.10787895840750955;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5245456250741756;  // std dev = 0,433, 60,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=45 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.10815125715337007;  // std dev = 0,990, 52,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1 */
%   | | | else return 0.2663580833544075;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04550530890806054;  // std dev = 1,905, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | | else return 0.2578936700465462;  // std dev = 5,521, 124,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=54 */
%   else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.42719554020169714;  // std dev = 0,429, 61,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=46 */
%   | else if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return -0.1255427467340589;  // std dev = 0,021, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.03750447101163487;  // std dev = 1,650, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else return 0.20014651205010212;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then if ( author(J, H), venue(J, I) )
%   | | | then return 0.009163108373005687;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.11540454787201683;  // std dev = 0,009, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0.39826617782378326;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.1875897093762511;  // std dev = 0,491, 133,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=54 */
%   | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.31523063147690644;  // std dev = 0,436, 62,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=46 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08727357409462824;  // std dev = 0,980, 55,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=1 */
%   | | | else return 0.1112676925285216;  // std dev = 1,350, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.1298193180841764;  // std dev = 0,464, 165,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   else return -0.10410850345644483;  // std dev = 0,032, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.21215692509425021;  // std dev = 0,451, 64,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=46 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08153355427178838;  // std dev = 0,981, 63,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=1 */
%   | | | else return 0.0646447702961708;  // std dev = 1,360, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04409761720533556;  // std dev = 1,884, 39,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | | else return 0.158096328208492;  // std dev = 5,521, 124,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=54 */
%   else return -0.09310164526388158;  // std dev = 0,006, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.20918718326579766;  // std dev = 0,421, 60,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=46 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.12865633250336908;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.006934170672019212;  // std dev = 0,339, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( haswordvenue(H, F) )
%   | | then if ( author(I, G), title(I, B) )
%   | | | then return -0.08975172549731959;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06813598628130092;  // std dev = 0,978, 46,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
%   | | else return 0.11882698973788752;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( haswordtitle(B, J), haswordvenue(K, J) )
%   | | then if ( title(L, A), venue(L, K) )
%   | | | then return 0.06542237643968678;  // std dev = 5,468, 129,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=48 */
%   | | | else return 0.3799197710535883;  // std dev = 0,849, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.30244026279792974;  // std dev = 0,949, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.33606326363445893;  // std dev = 0,955, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.061540817554956745;  // std dev = 3,827, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06934331685098877;  // std dev = 1,674, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | | else return 0.10641866417441724;  // std dev = 0,838, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06139602846919834;  // std dev = 0,978, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | | else return 0.1642936221182639;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0973140606962651;  // std dev = 0,492, 127,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=54 */
%   else return -0.09200408192539462;  // std dev = 0,048, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08916555132985528;  // std dev = 0,451, 65,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=46 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06489248231723961;  // std dev = 0,988, 55,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=1 */
%   | | | else return -0.10054742443081532;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.03555534970552727;  // std dev = 0,451, 174,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return -0.09081511374798026;  // std dev = 0,061, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.27568229401481265;  // std dev = 0,956, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09584772415783846;  // std dev = 3,375, 61,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06002492809928735;  // std dev = 0,984, 64,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=1 */
%   | | | else return 0.04423840396386629;  // std dev = 1,334, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.02085903341896948;  // std dev = 0,446, 180,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   else return -0.07932431975865692;  // std dev = 0,053, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.02250969593587636;  // std dev = 0,468, 67,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=46 */
%   | else if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), venue(F, E) )
%   | | | then return 0.17058056861488533;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.06952201317451627;  // std dev = 0,023, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.11731190762961732;  // std dev = 0,417, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then return -0.06910093178797413;  // std dev = 0,242, 62,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=4 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then if ( haswordvenue(J, I) )
%   | | | then return 0.07882935753842134;  // std dev = 5,324, 116,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=51 */
%   | | | else return 0.5849657917368901;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.08850743719298385;  // std dev = 0,029, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.805012
   AUC PR    = 0.082422
   CLL	      = -0.330754
   Precision = 0.107527 at threshold = 0.5
   Recall    = 0.38961
   F1        = 0.168539


Total learning time: 110.19 seconds
Total inference time: 4.941 seconds
AUC ROC: 0.805012


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 13:53:08
{'F1': 0.168539, 'Recall': 0.38961, 'Inference time': 4.941, 'Precision': [0.107527, 0.5], 'Learning time': 110.19, 'AUC PR': 0.082422, 'CLL': -0.330754, 'AUC ROC': 0.805012}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5551186320692096;  // std dev = 0,460, 66,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=46 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( author(F, D), title(F, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.030739953789376637;  // std dev = 1,886, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then return -0.12622606490048768;  // std dev = 0,124, 64,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=1 */
%   | | else return 0.28672036367094084;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then if ( haswordvenue(K, J) )
%   | | | then return 0.23314893509951337;  // std dev = 5,646, 136,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=51 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.799693
   AUC PR    = 0.082836
   CLL	      = -0.207267
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.189 seconds
Total inference time: 1.472 seconds
AUC ROC: 0.799693


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 13:53:16
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.472, 'Precision': [nan, 0.5], 'Learning time': 6.189, 'AUC PR': 0.082836, 'CLL': -0.207267, 'AUC ROC': 0.799693}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,58e-07, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.07167206677210781;  // std dev = 9,715, 562,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=120 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,69e-07, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.07433913255471483;  // std dev = 9,643, 533,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=120 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,13e-07, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.0710896514217012;  // std dev = 9,602, 518,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=120 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,23e-07, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.05391378184288823;  // std dev = 9,648, 535,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=120 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.04083591504184064;  // std dev = 9,681, 548,000 (wgt'ed) examples reached here.  /* #neg=428 #pos=120 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.025957971244228804;  // std dev = 9,736, 571,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=120 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.023135232931319433;  // std dev = 9,729, 568,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=120 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.019576069153795363;  // std dev = 9,729, 568,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=120 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.02747913416863811;  // std dev = 9,661, 540,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=120 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.016738844551957944;  // std dev = 9,701, 556,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=120 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.243432
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 2.61 seconds
Total inference time: 2.028 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.723502
   AUC PR    = 0.481238
   CLL	      = -0.242377
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.447005
   F1        = 0.617834


Total scoring time: 2.914 seconds
Parameter learned model CLL: -0.242377


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.58e-07, 0, 97], 'false': [9.715, 442, 120]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.69e-07, 0, 97], 'false': [9.643, 413, 120]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.13e-07, 0, 97], 'false': [9.602, 398, 120]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.23e-07, 0, 97], 'false': [9.648, 415, 120]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 97], 'false': [9.681, 428, 120]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 97], 'false': [9.736, 451, 120]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.26e-07, 0, 97], 'false': [9.729, 448, 120]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.6e-08, 0, 97], 'false': [9.729, 448, 120]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 97], 'false': [9.661, 420, 120]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.65e-08, 0, 97], 'false': [9.701, 436, 120]}]]
[{'': [1.3185329117197736e-15, 0.16793100391332572]}, {'': [2.9300731371550523e-16, 0.17445237231994618]}, {'': [1.7580438822930315e-15, 0.1779937687273592]}, {'': [5.127627990021341e-16, 0.17398899467202392]}, {'': [1.8312957107219077e-17, 0.17102669295114503]}, {'': [-4.578239276804769e-17, 0.16599139372042052]}, {'': [1.648166139649717e-16, 0.16663360444356656]}, {'': [5.9517110598462e-17, 0.1666336044435613]}, {'': [-5.493887132165723e-17, 0.1728395061728347]}, {'': [1.3734717830414308e-17, 0.16924589824543074]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,58e-07, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.48828592140088267;  // std dev = 0,483, 73,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07443533456340903;  // std dev = 2,365, 89,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=6 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11381368172291757;  // std dev = 1,708, 107,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=3 */
%   | | | else return 0.1914822684328457;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.11375431626543227;  // std dev = 6,514, 223,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=57 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,69e-07, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.01220015810347247;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4495645477788815;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.053029351004741335;  // std dev = 2,349, 75,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=6 */
%   | | | else return 0.29279418357704884;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.065617607963479;  // std dev = 2,678, 118,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=8 */
%   | | | else return 0.12872979246290092;  // std dev = 6,384, 200,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=57 */
%   | | else return -0.12642622975906934;  // std dev = 0,006, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,13e-07, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.039832196370284456;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.28003263413364704;  // std dev = 4,363, 78,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07960061168632096;  // std dev = 2,723, 169,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=8 */
%   | | | else return 0.05662935641233135;  // std dev = 7,092, 300,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=66 */
%   | else return -0.12073431046947695;  // std dev = 0,146, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,23e-07, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2624391303792378;  // std dev = 0,482, 75,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=46 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0653650959687683;  // std dev = 2,719, 147,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=8 */
%   | | | else return 0.051370565111970884;  // std dev = 7,078, 296,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=66 */
%   | else return -0.10608858536490344;  // std dev = 0,044, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.09804083848812206;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.14886597248643132;  // std dev = 4,401, 79,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=45 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.043056365679703536;  // std dev = 2,693, 115,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=8 */
%   | | | else return 0.030981757364506562;  // std dev = 7,135, 315,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=66 */
%   | else return -0.095821074555941;  // std dev = 0,041, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.20740057698488318;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1677225994797112;  // std dev = 4,127, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03923963318318057;  // std dev = 2,686, 119,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=8 */
%   | | | else return 0.033533763994770795;  // std dev = 7,101, 304,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=66 */
%   | else return -0.08645704598013923;  // std dev = 0,025, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0879675232931905;  // std dev = 0,490, 80,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=46 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.044353304968539134;  // std dev = 2,708, 133,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=8 */
%   | | | else return 0.026622735498088974;  // std dev = 7,108, 307,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=66 */
%   | else return -0.08002452749742699;  // std dev = 0,024, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.025871733645834963;  // std dev = 4,872, 209,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=49 */
%   | | | else return 0.13946590608870554;  // std dev = 1,916, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.053113677374843134;  // std dev = 2,729, 83,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=9 */
%   | | | else return 0.0643638315721595;  // std dev = 6,456, 212,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=57 */
%   | else return -0.0776599142976844;  // std dev = 0,106, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.05940737195961331;  // std dev = 4,452, 82,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=46 */
%   | | | else return -0.04256965958152749;  // std dev = 2,684, 142,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=8 */
%   | | else return 0.018153788380606422;  // std dev = 0,408, 302,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=66 */
%   | else return -0.07004275471479397;  // std dev = 0,022, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.06588495878182071;  // std dev = 4,314, 80,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=46 */
%   | | | else return -0.04333599372832162;  // std dev = 2,696, 152,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.026508829368170818;  // std dev = 2,691, 69,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | | else return 0.0584432777996705;  // std dev = 6,421, 206,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=57 */
%   | else return -0.06655588730085611;  // std dev = 0,032, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 0.899527
   AUC PR    = 0.576835
   CLL	      = -0.231959
   Precision = 0.188679 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.298507


Total learning time: 43.948 seconds
Total inference time: 3.74 seconds
AUC ROC: 0.899527


Results scoring model
   AUC ROC   = 0.879071
   AUC PR    = 0.545181
   CLL	      = -0.228071
   Precision = 0.189771 at threshold = 0.5
   Recall    = 0.64977
   F1        = 0.29375


Total scoring time: 7.152 seconds
Refined model CLL: -0.228071


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899527
   AUC PR    = 0.576835
   CLL	      = -0.231959
   Precision = 0.188679 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.298507


Total learning time: 56.624 seconds
Total inference time: 3.74 seconds
AUC ROC: 0.899527
Total revision time: 56.624
Best scored revision CLL: -0.228071


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 13:54:20
{'F1': 0.298507, 'Inference time': 3.74, 'Precision': [0.188679, 0.5], 'AUC ROC': 0.899527, 'AUC PR': 0.576835, 'parameter_0.4': {'F1': 0.637168, 'Inference time': 2.028, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 2.61, 'CLL': -0.243432}, 'Recall': 0.714286, 'Learning time': 56.624, 'CLL': -0.231959}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5635060779566542;  // std dev = 0,456, 112,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=79 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.11621003925946202;  // std dev = 1,710, 117,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=3 */
%   | | | else return 0.15226658215833588;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.02022944327886606;  // std dev = 2,812, 74,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=9 */
%   | | | else return 0.25814893509950854;  // std dev = 8,414, 295,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=118 */
%   else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.07852134958333629;  // std dev = 1,466, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.5134376368091331;  // std dev = 4,548, 107,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=79 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08101207352991088;  // std dev = 2,378, 102,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=6 */
%   | | | else return 0.16281796639418128;  // std dev = 1,445, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09858182226921938;  // std dev = 1,706, 101,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=3 */
%   | | | else return 0.17191781335185655;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.2656812200271742;  // std dev = 0,497, 267,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=118 */
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.06469105385264824;  // std dev = 1,467, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3988848022812902;  // std dev = 4,654, 109,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=79 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06063945389793055;  // std dev = 2,363, 87,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=6 */
%   | | | else return 0.4423882010018582;  // std dev = 1,089, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09346504992482156;  // std dev = 1,711, 124,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=3 */
%   | | | else return 0.26848517492612395;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.23916143507702717;  // std dev = 0,498, 258,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=118 */
%   else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.34428565749997275;  // std dev = 0,426, 109,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=82 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08634173604095008;  // std dev = 1,717, 131,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=3 */
%   | | | else return 0.14561745721493002;  // std dev = 1,745, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.025788619328699695;  // std dev = 2,752, 88,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=9 */
%   | | | else return 0.15523349516034254;  // std dev = 8,294, 283,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=118 */
%   else return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6939729452720772;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.32104013701703454;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.21339277335967444;  // std dev = 0,450, 110,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=79 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07632378228891909;  // std dev = 1,715, 120,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=3 */
%   | | | else return 0.06739640643688088;  // std dev = 1,826, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.014518000552365731;  // std dev = 2,741, 81,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=9 */
%   | | | else return 0.11408644367243137;  // std dev = 8,366, 290,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=118 */
%   else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.19025387731638527;  // std dev = 0,437, 110,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=82 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06941114436993104;  // std dev = 1,717, 116,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=3 */
%   | | | else return 0.13734359190902262;  // std dev = 1,695, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.020500856851003363;  // std dev = 2,772, 82,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=9 */
%   | | | else return 0.07635398493302833;  // std dev = 8,461, 300,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=118 */
%   else return -0.0851847513883968;  // std dev = 1,67e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.1270504367388069;  // std dev = 0,444, 113,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=82 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06692012526575722;  // std dev = 1,720, 134,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=3 */
%   | | | else return 0.0023970208025758145;  // std dev = 1,865, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.039918208778079015;  // std dev = 2,353, 78,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=6 */
%   | | | else return 0.28173924258104527;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09225650381853118;  // std dev = 0,494, 277,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=118 */
%   else return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11371474461201884;  // std dev = 0,437, 110,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=82 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06095614569126847;  // std dev = 1,718, 130,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=3 */
%   | | | else return 0.17541819788986898;  // std dev = 1,598, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02632788874578942;  // std dev = 2,733, 95,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=9 */
%   | | | else return 0.0523418864925715;  // std dev = 8,366, 290,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=118 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(B, C) )
%   | | then return 0.006264017339261775;  // std dev = 0,468, 122,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=80 */
%   | | else return -0.05498770532502107;  // std dev = 0,153, 126,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=3 */
%   | else return 0.11017722418028235;  // std dev = 0,444, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | then if ( title(H, B), venue(H, G) )
%   | | then if ( samebib(H, I), title(I, A) )
%   | | | then return 0.6411548957866088;  // std dev = 0,448, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | | | else return -0.2810503971249897;  // std dev = 2,499, 245,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=2 */
%   | | else if ( haswordauthor(J, F) )
%   | | | then return -0.018460314474382143;  // std dev = 0,943, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.31810253647008585;  // std dev = 1,588, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.6333780092698665;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.4082392471154869;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.19639288876396185;  // std dev = 0,673, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11786281617285013;  // std dev = 4,140, 100,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=78 */
%   | else if ( haswordvenue(G, C) )
%   | | then return -0.026650798223315633;  // std dev = 0,234, 93,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=6 */
%   | | else return 0.06471613779560746;  // std dev = 0,420, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.05216294165764116;  // std dev = 0,221, 134,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=8 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then if ( haswordvenue(K, J) )
%   | | | then return 0.0210445159397583;  // std dev = 6,440, 273,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=114 */
%   | | | else return 0.09208038517172167;  // std dev = 1,190, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.06969426265572591;  // std dev = 0,035, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.907911
   AUC PR    = 0.137644
   CLL	      = -0.291827
   Precision = 0.219243 at threshold = 0.5
   Recall    = 0.902597
   F1        = 0.352792


Total learning time: 443.531 seconds
Total inference time: 6.463 seconds
AUC ROC: 0.907911


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 14:01:50
{'F1': 0.352792, 'Recall': 0.902597, 'Inference time': 6.463, 'Precision': [0.219243, 0.5], 'Learning time': 443.531, 'AUC PR': 0.137644, 'CLL': -0.291827, 'AUC ROC': 0.907911}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5829195773013461;  // std dev = 0,447, 109,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=79 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.11457833762776039;  // std dev = 1,708, 110,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=3 */
%   | | | else return 0.13592671287729013;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.02792701426757629;  // std dev = 2,824, 79,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=9 */
%   | | | else return 0.2721840228188068;  // std dev = 8,315, 285,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=118 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */


Results
   AUC ROC   = 0.805004
   AUC PR    = 0.077929
   CLL	      = -0.209206
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 13.366 seconds
Total inference time: 2.108 seconds
AUC ROC: 0.805004


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 14:02:06
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.108, 'Precision': [nan, 0.5], 'Learning time': 13.366, 'AUC PR': 0.077929, 'CLL': -0.209206, 'AUC ROC': 0.805004}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.06556492582951959;  // std dev = 11,911, 863,000 (wgt'ed) examples reached here.  /* #neg=684 #pos=179 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.0674757984982486;  // std dev = 11,835, 823,000 (wgt'ed) examples reached here.  /* #neg=644 #pos=179 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.05325530053031576;  // std dev = 11,876, 844,000 (wgt'ed) examples reached here.  /* #neg=665 #pos=179 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.03943590678680958;  // std dev = 11,925, 871,000 (wgt'ed) examples reached here.  /* #neg=692 #pos=179 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.036530739087063106;  // std dev = 11,906, 860,000 (wgt'ed) examples reached here.  /* #neg=681 #pos=179 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.036484783976937205;  // std dev = 11,866, 839,000 (wgt'ed) examples reached here.  /* #neg=660 #pos=179 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.036855461821353505;  // std dev = 11,823, 817,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=179 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.03907373117871551;  // std dev = 11,764, 789,000 (wgt'ed) examples reached here.  /* #neg=610 #pos=179 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.008889600664548724;  // std dev = 11,946, 883,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=179 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,32e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.014135457465672786;  // std dev = 11,896, 855,000 (wgt'ed) examples reached here.  /* #neg=676 #pos=179 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.238481
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 3.461 seconds
Total inference time: 2.058 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.72546
   AUC PR    = 0.484935
   CLL	      = -0.237278
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.45092
   F1        = 0.621564


Total scoring time: 3.461 seconds
Parameter learned model CLL: -0.237278


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9e-07, 0, 147], 'false': [11.911, 684, 179]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [11.835, 644, 179]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.2e-07, 0, 147], 'false': [11.876, 665, 179]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.42e-07, 0, 147], 'false': [11.925, 692, 179]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.63e-07, 0, 147], 'false': [11.906, 681, 179]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [11.866, 660, 179]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.42e-07, 0, 147], 'false': [11.823, 638, 179]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [11.764, 610, 179]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [11.946, 704, 179]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.32e-08, 0, 147], 'false': [11.896, 676, 179]}]]
[{'': [5.5103314201803686e-15, 0.16439459751950117]}, {'': [-2.3201395453391025e-15, 0.17019203370887037]}, {'': [1.836777140060123e-15, 0.1671051301632979]}, {'': [1.3292466145171943e-15, 0.16327617410607262]}, {'': [4.712783451470053e-16, 0.16481746890211257]}, {'': [-1.570927817156684e-16, 0.1678313333456394]}, {'': [3.9877398435515827e-16, 0.17109195806972244]}, {'': [-3.021015032993623e-16, 0.17539970539146138]}, {'': [-3.6252180395923476e-17, 0.1616234165160701]}, {'': [2.718913529694261e-17, 0.16552648678225715]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.3875606998053957;  // std dev = 5,445, 119,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=63 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06629550934493209;  // std dev = 3,964, 225,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=17 */
%   | | | else return 0.07353355048412677;  // std dev = 8,769, 455,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=98 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.3847657119850413;  // std dev = 5,169, 111,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=64 */
%   | | | else return -0.04165285113861266;  // std dev = 3,652, 139,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=15 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04257309569785796;  // std dev = 3,930, 186,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=17 */
%   | | | else return 0.0930775292135908;  // std dev = 7,921, 340,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=83 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.14055936330372507;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2890962028089109;  // std dev = 5,309, 114,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=63 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04930212258640624;  // std dev = 3,955, 213,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=17 */
%   | | | else return 0.056483259519856145;  // std dev = 8,748, 456,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=98 */
%   | else return -0.11231637819360625;  // std dev = 5,48e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.09059463324612615;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.2883351767336786;  // std dev = 4,946, 103,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=63 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03604142964965687;  // std dev = 3,938, 194,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=17 */
%   | | | else return 0.0529541729750176;  // std dev = 8,725, 447,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=98 */
%   | else return -0.10159632948783626;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.13061012419132167;  // std dev = 0,493, 126,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=64 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.036889381763131196;  // std dev = 3,948, 205,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=17 */
%   | | | else return 0.05614645679165627;  // std dev = 8,665, 426,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=98 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.162958068240757;  // std dev = 5,170, 111,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=64 */
%   | | | else return -0.04109313882971615;  // std dev = 3,966, 227,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=17 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.04567633488588275;  // std dev = 3,629, 123,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=15 */
%   | | | else return 0.09031550553101442;  // std dev = 7,743, 299,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=83 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16055641433565326;  // std dev = 0,479, 105,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=64 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.04584585220418044;  // std dev = 3,637, 135,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=15 */
%   | | | else return 0.017781288027478886;  // std dev = 8,874, 540,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=100 */
%   | else return -0.07877675473109172;  // std dev = 2,58e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.021547257266349283;  // std dev = 6,217, 299,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=73 */
%   | | | else return 0.15388124411375487;  // std dev = 2,419, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.009611903495266685;  // std dev = 3,580, 103,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=15 */
%   | | | else return 0.05427925275944502;  // std dev = 7,845, 321,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=83 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.01697418748096994;  // std dev = 6,164, 313,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=73 */
%   | | | else return 0.3413554270599369;  // std dev = 2,055, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.005587853607645612;  // std dev = 3,551, 94,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=15 */
%   | | | else return 0.03674725437943369;  // std dev = 7,890, 332,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=83 */
%   | else return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,32e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.05278052492374612;  // std dev = 0,493, 120,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=64 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03638288260241212;  // std dev = 3,857, 217,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=17 */
%   | | | else return 0.023261974845920463;  // std dev = 8,646, 436,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=98 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */


Results
   AUC ROC   = 0.900314
   AUC PR    = 0.575702
   CLL	      = -0.229302
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 59.034 seconds
Total inference time: 3.787 seconds
AUC ROC: 0.900314


Results scoring model
   AUC ROC   = 0.866273
   AUC PR    = 0.542548
   CLL	      = -0.228403
   Precision = 0.186667 at threshold = 0.5
   Recall    = 0.644172
   F1        = 0.289456


Total scoring time: 8.962 seconds
Refined model CLL: -0.228403


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900314
   AUC PR    = 0.575702
   CLL	      = -0.229302
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 74.918 seconds
Total inference time: 3.787 seconds
AUC ROC: 0.900314
Total revision time: 74.918
Best scored revision CLL: -0.228403


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:03:28
{'F1': 0.293725, 'Inference time': 3.787, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.900314, 'AUC PR': 0.575702, 'parameter_0.6': {'F1': 0.637168, 'Inference time': 2.058, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 3.461, 'CLL': -0.238481}, 'Recall': 0.714286, 'Learning time': 74.918, 'CLL': -0.229302}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.510082636756968;  // std dev = 0,476, 181,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=118 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09939823471180868;  // std dev = 2,936, 212,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=9 */
%   | | | else return 0.1340110040650296;  // std dev = 2,407, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.016851064900487663;  // std dev = 3,623, 120,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=15 */
%   | | | else return 0.2674512606809034;  // std dev = 10,196, 430,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=176 */
%   else return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5216332017205921;  // std dev = 0,440, 160,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=118 */
%   | else if ( haswordvenue(E, C) )
%   | | then return -0.0591203121849768;  // std dev = 0,271, 125,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=10 */
%   | | else return 0.5758500723218581;  // std dev = 0,450, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( haswordvenue(H, F) )
%   | | then if ( author(I, G), title(I, A) )
%   | | | then return 0.03649006919101302;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.0994433890865085;  // std dev = 2,411, 198,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=6 */
%   | | else return 0.3155714989127951;  // std dev = 0,496, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then return 0.20582118498459814;  // std dev = 0,486, 459,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=176 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.28314960659256483;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.11685039340743511;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4092642562740935;  // std dev = 5,588, 157,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=114 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06841069730251698;  // std dev = 2,910, 172,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=9 */
%   | | | else return 0.20511545588831023;  // std dev = 2,153, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.14826553994705466;  // std dev = 0,468, 556,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=191 */
%   else return -0.11436819251548247;  // std dev = 0,018, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6486014252616271;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.29211490401931167;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.2866866882461796;  // std dev = 0,459, 165,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=115 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06323027955513612;  // std dev = 2,919, 174,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=9 */
%   | | | else return 0.026697867384306198;  // std dev = 2,407, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else return 0.14044125778106886;  // std dev = 0,471, 532,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=191 */
%   else return -0.1047008498935659;  // std dev = 0,050, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.22350570191635166;  // std dev = 0,449, 169,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=118 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06146518464318251;  // std dev = 2,924, 192,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=9 */
%   | | | else return 0.08968149462020293;  // std dev = 2,301, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05503317002984444;  // std dev = 3,509, 126,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=15 */
%   | | | else return 0.16256431477927338;  // std dev = 10,068, 415,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=176 */
%   else return -0.09753133740610599;  // std dev = 0,096, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return -0.036027319281925894;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.19886792313699747;  // std dev = 0,430, 159,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=115 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.05610636634457464;  // std dev = 2,926, 193,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=9 */
%   | | | else return 0.0920569299927891;  // std dev = 2,237, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.039199666759909095;  // std dev = 3,503, 116,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=15 */
%   | | | else return 0.11999744728901433;  // std dev = 10,155, 425,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=176 */
%   else return -0.0872366529704544;  // std dev = 0,056, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11976482294120609;  // std dev = 0,447, 170,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=118 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.19296227060059798;  // std dev = 1,447, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.04230136902763097;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=14 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05022765756281223;  // std dev = 3,551, 130,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=15 */
%   | | | else return 0.1075514874843065;  // std dev = 10,041, 412,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=176 */
%   else return -0.08120732945698673;  // std dev = 0,067, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordauthor(E, C) )
%   | | | then return 0.0515850120208768;  // std dev = 6,086, 178,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=115 */
%   | | | else return -0.04718137862256049;  // std dev = 2,905, 185,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=9 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.3846623438566992;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16227279191090052;  // std dev = 2,102, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06489697141799262;  // std dev = 3,024, 117,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=10 */
%   | | | else return 0.46393725266069;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.08791131839027763;  // std dev = 0,495, 408,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=176 */
%   else return -0.07345379982764673;  // std dev = 0,013, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10121688448356402;  // std dev = 0,432, 165,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=118 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.043833095475583846;  // std dev = 2,907, 188,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=9 */
%   | | | else return 0.09551419796811605;  // std dev = 2,154, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.018919708436911882;  // std dev = 3,402, 110,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=15 */
%   | | | else return 0.03554462893292756;  // std dev = 10,284, 441,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=176 */
%   else return -0.06932848498636883;  // std dev = 0,034, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.1419771215448555;  // std dev = 0,819, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.04320223671557436;  // std dev = 0,455, 167,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=115 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.05679197613929957;  // std dev = 3,037, 118,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=10 */
%   | | | else return 0.30601742777440627;  // std dev = 1,292, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.020305421005404115;  // std dev = 3,644, 187,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=17 */
%   | | | else return 0.0026561844167643906;  // std dev = 10,493, 470,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=176 */
%   else return -0.06480336898328187;  // std dev = 0,015, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */


Results
   AUC ROC   = 0.807153
   AUC PR    = 0.101129
   CLL	      = -0.323991
   Precision = 0.106814 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.166428


Total learning time: 156.3 seconds
Total inference time: 4.46 seconds
AUC ROC: 0.807153


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 14:06:09
{'F1': 0.166428, 'Recall': 0.376623, 'Inference time': 4.46, 'Precision': [0.106814, 0.5], 'Learning time': 156.3, 'AUC PR': 0.101129, 'CLL': -0.323991, 'AUC ROC': 0.807153}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.564735761446815;  // std dev = 0,455, 167,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=118 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06372606490048767;  // std dev = 3,036, 128,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=10 */
%   | | | else return 0.21529179224236947;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.059725461035753345;  // std dev = 3,950, 207,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=17 */
%   | | | else return 0.28846678351026606;  // std dev = 10,013, 409,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=176 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 0.804113
   AUC PR    = 0.07772
   CLL	      = -0.21048
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 11.275 seconds
Total inference time: 1.901 seconds
AUC ROC: 0.804113


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 14:06:22
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.901, 'Precision': [nan, 0.5], 'Learning time': 11.275, 'AUC PR': 0.07772, 'CLL': -0.21048, 'AUC ROC': 0.804113}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.07093352354083844;  // std dev = 13,831, 1.142,000 (wgt'ed) examples reached here.  /* #neg=899 #pos=243 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.06548514422677332;  // std dev = 13,801, 1.124,000 (wgt'ed) examples reached here.  /* #neg=881 #pos=243 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,14e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.06283882683291822;  // std dev = 13,749, 1.094,000 (wgt'ed) examples reached here.  /* #neg=851 #pos=243 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 3,15e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.0492803118660507;  // std dev = 13,792, 1.119,000 (wgt'ed) examples reached here.  /* #neg=876 #pos=243 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,95e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.047652290213730505;  // std dev = 13,745, 1.092,000 (wgt'ed) examples reached here.  /* #neg=849 #pos=243 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949106;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.03666720223605393;  // std dev = 13,780, 1.112,000 (wgt'ed) examples reached here.  /* #neg=869 #pos=243 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 2,92e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.031344574333285004;  // std dev = 13,779, 1.111,000 (wgt'ed) examples reached here.  /* #neg=868 #pos=243 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452776;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.02791181947153558;  // std dev = 13,766, 1.104,000 (wgt'ed) examples reached here.  /* #neg=861 #pos=243 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.01885787665047108;  // std dev = 13,808, 1.128,000 (wgt'ed) examples reached here.  /* #neg=885 #pos=243 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,03e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.024606834034245358;  // std dev = 13,731, 1.084,000 (wgt'ed) examples reached here.  /* #neg=841 #pos=243 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.245449
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 3.769 seconds
Total inference time: 2.37 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.72069
   AUC PR    = 0.475615
   CLL	      = -0.244641
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.441379
   F1        = 0.61244


Total scoring time: 3.582 seconds
Parameter learned model CLL: -0.244641


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 192], 'false': [13.831, 899, 243]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 192], 'false': [13.801, 881, 243]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.14e-07, 0, 192], 'false': [13.749, 851, 243]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.15e-07, 0, 192], 'false': [13.792, 876, 243]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.95e-07, 0, 192], 'false': [13.745, 849, 243]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 192], 'false': [13.78, 869, 243]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 192], 'false': [13.779, 868, 243]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 192], 'false': [13.766, 861, 243]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 192], 'false': [13.808, 885, 243]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 192], 'false': [13.731, 841, 243]}]]
[{'': [6.069219201284189e-15, 0.16750730736318575]}, {'': [-3.552713678800501e-15, 0.16945311609528854]}, {'': [1.96139401017111e-15, 0.17278307136483112]}, {'': [5.181040781584064e-16, 0.17000050313017873]}, {'': [8.141635513917814e-16, 0.1730089964980055]}, {'': [-3.515706244646329e-16, 0.17077192562497262]}, {'': [4.440892098500626e-16, 0.17088261481413317]}, {'': [-1.3415194880887307e-16, 0.1716608577504656]}, {'': [-2.7292982688701767e-16, 0.16901737211407947]}, {'': [5.551115123125783e-17, 0.17391766860473096]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.477867244958665;  // std dev = 0,485, 142,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=88 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07481195875523625;  // std dev = 3,346, 179,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=12 */
%   | | | else return 0.42957750652808374;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10403593885006793;  // std dev = 2,943, 238,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=9 */
%   | | | else return 0.14386322081379807;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.10449549042310025;  // std dev = 9,430, 479,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=118 */
%   | | | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.38953632253766857;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3839419169432647;  // std dev = 5,872, 143,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=85 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07411610236555435;  // std dev = 3,958, 287,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=17 */
%   | | | else return 0.06556136580456472;  // std dev = 10,334, 639,000 (wgt'ed) examples reached here.  /* #neg=501 #pos=138 */
%   | else return -0.12917129956498155;  // std dev = 0,041, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,14e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.28643947929652375;  // std dev = 6,168, 155,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=88 */
%   | | | else return -0.02811080821582939;  // std dev = 4,092, 171,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=20 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05566073999111131;  // std dev = 3,934, 248,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=17 */
%   | | | else return 0.10434366807644108;  // std dev = 9,293, 440,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=118 */
%   | else return -0.11463665756772534;  // std dev = 0,038, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 3,15e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.24014471746500557;  // std dev = 0,493, 151,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=88 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0589797547777319;  // std dev = 3,959, 283,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=17 */
%   | | | else return 0.04453542337005533;  // std dev = 10,328, 645,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=138 */
%   | else return -0.10430079264175965;  // std dev = 0,076, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,95e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.13478199644477395;  // std dev = 0,499, 165,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=88 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.038391716143767;  // std dev = 4,107, 186,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=20 */
%   | | | else return 0.021414712423639515;  // std dev = 10,333, 743,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=135 */
%   | else return -0.09582552056946447;  // std dev = 0,087, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949106;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09252807190969994;  // std dev = 0,499, 168,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=88 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.050234252843222325;  // std dev = 3,950, 262,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=17 */
%   | | | else return 0.049245720167555865;  // std dev = 10,229, 613,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=138 */
%   | else return -0.08605548619394149;  // std dev = 0,018, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 2,92e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11000227909294534;  // std dev = 0,496, 156,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=88 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.040879107435803495;  // std dev = 4,112, 188,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=20 */
%   | | | else return 0.027390634976338122;  // std dev = 10,224, 699,000 (wgt'ed) examples reached here.  /* #neg=564 #pos=135 */
%   | else return -0.08045885480866044;  // std dev = 0,035, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452776;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.13389104267195925;  // std dev = 0,487, 143,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=88 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04204966625466106;  // std dev = 3,936, 242,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=17 */
%   | | | else return 0.024272351078648696;  // std dev = 10,330, 657,000 (wgt'ed) examples reached here.  /* #neg=519 #pos=138 */
%   | else return -0.07481451069801416;  // std dev = 0,050, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.0027111846395184804;  // std dev = 6,515, 170,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=88 */
%   | | | else return -0.06993195484014801;  // std dev = 2,949, 266,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=9 */
%   | | else return 0.13185329828560569;  // std dev = 0,435, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06870379479633057;  // std dev = 3,334, 179,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=12 */
%   | | | else return 0.33174414661951757;  // std dev = 1,880, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05432687127803526;  // std dev = 9,352, 456,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=118 */
%   | | | else return -0.06741365258727353;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,03e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.023646224500101107;  // std dev = 7,041, 390,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=97 */
%   | | | else return 0.16596506229119448;  // std dev = 2,336, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.027312290063784623;  // std dev = 3,997, 173,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=20 */
%   | | | else return 0.0298758439184122;  // std dev = 9,449, 485,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=118 */
%   | else return -0.06566717763641851;  // std dev = 0,050, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 0.897934
   AUC PR    = 0.566618
   CLL	      = -0.225478
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 64.666 seconds
Total inference time: 3.249 seconds
AUC ROC: 0.897934


Results scoring model
   AUC ROC   = 0.876333
   AUC PR    = 0.534894
   CLL	      = -0.222824
   Precision = 0.171779 at threshold = 0.5
   Recall    = 0.643678
   F1        = 0.271186


Total scoring time: 8.793 seconds
Refined model CLL: -0.222824


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.897934
   AUC PR    = 0.566618
   CLL	      = -0.225478
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 80.81 seconds
Total inference time: 3.249 seconds
AUC ROC: 0.897934
Total revision time: 80.81
Best scored revision CLL: -0.222824


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:07:50
{'F1': 0.272277, 'Inference time': 3.249, 'Precision': [0.168196, 0.5], 'AUC ROC': 0.897934, 'parameter_0.8': {'F1': 0.637168, 'Inference time': 2.37, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 3.769, 'CLL': -0.245449}, 'AUC PR': 0.566618, 'Recall': 0.714286, 'Learning time': 80.81, 'CLL': -0.225478}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.5637564117350231;  // std dev = 0,456, 214,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=151 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09919703646446897;  // std dev = 2,935, 211,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=9 */
%   | | | else return 0.12481560176617904;  // std dev = 2,422, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else return 0.2145174987851445;  // std dev = 0,479, 738,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=263 */
%   else return -0.14185106490048766;  // std dev = 6,50e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4923061094747745;  // std dev = 0,445, 217,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=155 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09571662235867326;  // std dev = 2,948, 261,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=9 */
%   | | | else return 0.20590217622746418;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05638406333178188;  // std dev = 4,210, 176,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=20 */
%   | | | else return 0.2686077318766257;  // std dev = 11,680, 554,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=243 */
%   else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.6374611320224113;  // std dev = 0,074, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3221437263127153;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return -0.1172895490348027;  // std dev = 0,763, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.3907749339743648;  // std dev = 6,540, 209,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=149 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08208108665425556;  // std dev = 2,943, 239,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=9 */
%   | | | else return 0.12064057048975509;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.037211238823411895;  // std dev = 4,183, 160,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=20 */
%   | | | else return 0.2378294866886103;  // std dev = 11,569, 541,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=243 */
%   else return -0.11231637819360624;  // std dev = 6,32e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4993771445450288;  // std dev = 0,160, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17266812649158597;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.31702140784266;  // std dev = 0,443, 207,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=151 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07535300003964536;  // std dev = 2,946, 250,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=9 */
%   | | | else return 0.09020376241565796;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04025855721103182;  // std dev = 4,202, 171,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=20 */
%   | | | else return 0.18813145124665223;  // std dev = 11,646, 550,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=243 */
%   else return -0.10159632948783616;  // std dev = 5,58e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3801910802031303;  // std dev = 0,158, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14937612066177322;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.20588648999860118;  // std dev = 0,458, 217,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=151 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06796746057140252;  // std dev = 2,945, 249,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=9 */
%   | | | else return 0.05461915084763818;  // std dev = 2,407, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.026956664353835764;  // std dev = 4,183, 160,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=20 */
%   | | | else return 0.11885949500019151;  // std dev = 11,976, 593,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=243 */
%   else return -0.09269127618926108;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17981581884460898;  // std dev = 0,430, 220,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=155 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.060750870131281075;  // std dev = 2,944, 242,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=9 */
%   | | | else return 0.004497536736440842;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else return 0.07953445951136294;  // std dev = 0,470, 725,000 (wgt'ed) examples reached here.  /* #neg=462 #pos=263 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11734409991944651;  // std dev = 0,444, 224,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=155 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05551316454648701;  // std dev = 2,944, 242,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=9 */
%   | | | else return 0.10173734034607979;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.062187605565861385;  // std dev = 0,467, 734,000 (wgt'ed) examples reached here.  /* #neg=471 #pos=263 */
%   else return -0.0787767547310917;  // std dev = 2,79e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.10049820288094136;  // std dev = 0,438, 221,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=155 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.04722936350912293;  // std dev = 2,938, 220,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=9 */
%   | | | else return 0.11344348390691118;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0894216514544233;  // std dev = 3,326, 154,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=12 */
%   | | | else return 0.49932293729016547;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0.060968161233657725;  // std dev = 0,492, 595,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=243 */
%   else return -0.07324622576333704;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.05208462652273895;  // std dev = 0,444, 232,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=155 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.07347900336249956;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.04762277713392758;  // std dev = 3,396, 253,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=14 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04520768099111814;  // std dev = 4,073, 169,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=20 */
%   | | | else return 0.04839720964458814;  // std dev = 11,976, 593,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=243 */
%   else return -0.06842697784420267;  // std dev = 3,25e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.21442985896868025;  // std dev = 0,120, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19167917903480872;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.03848087031722782;  // std dev = 0,631, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0697046470535959;  // std dev = 6,461, 207,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=149 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.04474370866284549;  // std dev = 2,938, 243,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=9 */
%   | | | else return 0.15831020885333794;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.02227188608445597;  // std dev = 4,032, 148,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=20 */
%   | | | else return 0.04924883216628714;  // std dev = 11,853, 576,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=243 */
%   else return -0.06419184008202625;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */


Results
   AUC ROC   = 0.813551
   AUC PR    = 0.095408
   CLL	      = -0.326919
   Precision = 0.109228 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.169343


Total learning time: 220.071 seconds
Total inference time: 4.639 seconds
AUC ROC: 0.813551


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 14:11:35
{'F1': 0.169343, 'Recall': 0.376623, 'Inference time': 4.639, 'Precision': [0.109228, 0.5], 'Learning time': 220.071, 'AUC PR': 0.095408, 'CLL': -0.326919, 'AUC ROC': 0.813551}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5824480005200698;  // std dev = 0,447, 214,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=155 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10851773156715491;  // std dev = 2,950, 270,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=9 */
%   | | | else return 0.17814893509951235;  // std dev = 2,332, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.011980935030357883;  // std dev = 4,172, 154,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=20 */
%   | | | else return 0.26792971081620254;  // std dev = 11,976, 593,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=243 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 0.804917
   AUC PR    = 0.077769
   CLL	      = -0.209669
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 22.48 seconds
Total inference time: 1.791 seconds
AUC ROC: 0.804917


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 14:12:00
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.791, 'Precision': [nan, 0.5], 'Learning time': 22.48, 'AUC PR': 0.077769, 'CLL': -0.209669, 'AUC ROC': 0.804917}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.07368427449768794;  // std dev = 15,544, 1.429,000 (wgt'ed) examples reached here.  /* #neg=1.121 #pos=308 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.07624682731277574;  // std dev = 15,427, 1.355,000 (wgt'ed) examples reached here.  /* #neg=1.047 #pos=308 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.05921509732926794;  // std dev = 15,497, 1.398,000 (wgt'ed) examples reached here.  /* #neg=1.090 #pos=308 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.0565426445705097;  // std dev = 15,442, 1.364,000 (wgt'ed) examples reached here.  /* #neg=1.056 #pos=308 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.05011036307867976;  // std dev = 15,425, 1.354,000 (wgt'ed) examples reached here.  /* #neg=1.046 #pos=308 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.04084727304858489;  // std dev = 15,444, 1.365,000 (wgt'ed) examples reached here.  /* #neg=1.057 #pos=308 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.03183883857907377;  // std dev = 15,471, 1.382,000 (wgt'ed) examples reached here.  /* #neg=1.074 #pos=308 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527747;  // std dev = 9,88e-08, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.013243869199983814;  // std dev = 15,606, 1.472,000 (wgt'ed) examples reached here.  /* #neg=1.164 #pos=308 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.035066048681639185;  // std dev = 15,368, 1.321,000 (wgt'ed) examples reached here.  /* #neg=1.013 #pos=308 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.019954717165800585;  // std dev = 15,463, 1.377,000 (wgt'ed) examples reached here.  /* #neg=1.069 #pos=308 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.249444
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 4.256 seconds
Total inference time: 2.161 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.716912
   AUC PR    = 0.468238
   CLL	      = -0.248927
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433824
   F1        = 0.605128


Total scoring time: 4.325 seconds
Parameter learned model CLL: -0.248927


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 236], 'false': [15.544, 1121, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.427, 1047, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.33e-07, 0, 236], 'false': [15.497, 1090, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.442, 1056, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 236], 'false': [15.425, 1046, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.95e-07, 0, 236], 'false': [15.444, 1057, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.89e-07, 0, 236], 'false': [15.471, 1074, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.88e-08, 0, 236], 'false': [15.606, 1164, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.368, 1013, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 236], 'false': [15.463, 1069, 308]}]]
[{'': [4.937669858671883e-15, 0.1690798568686927]}, {'': [-4.215084025695509e-15, 0.17563813128905303]}, {'': [1.2043097216272884e-15, 0.17177615272993482]}, {'': [-1.5053871520341105e-16, 0.1748178980228994]}, {'': [3.6129291648818656e-16, 0.1757296614440664]}, {'': [3.688198522483571e-16, 0.17472715318869744]}, {'': [3.53765980728016e-16, 0.1731964203811194]}, {'': [4.139814668093804e-17, 0.16545811672967306]}, {'': [-1.6559258672375216e-16, 0.17879465296231314]}, {'': [4.516161456102332e-17, 0.1736443037367202]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.43709630352056195;  // std dev = 0,494, 190,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=110 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08388005040773411;  // std dev = 3,362, 207,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=12 */
%   | | | else return 0.2929315437951645;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.1055972884654428;  // std dev = 3,401, 331,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=12 */
%   | | | else return 0.24276431971489695;  // std dev = 2,481, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.13217028741267509;  // std dev = 10,574, 562,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=154 */
%   | | | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3813376021806382;  // std dev = 0,493, 188,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06333008194841087;  // std dev = 4,448, 314,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=22 */
%   | | | else return 0.06942281916337324;  // std dev = 11,626, 791,000 (wgt'ed) examples reached here.  /* #neg=615 #pos=176 */
%   | else return -0.12784679233887253;  // std dev = 0,026, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.1718632975776815;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.31630774202212714;  // std dev = 6,601, 180,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05967821521283979;  // std dev = 4,463, 327,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=22 */
%   | | | else return 0.06533483230325608;  // std dev = 11,582, 774,000 (wgt'ed) examples reached here.  /* #neg=598 #pos=176 */
%   | else return -0.11491473186092785;  // std dev = 0,047, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.25302791909595423;  // std dev = 6,704, 186,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=110 */
%   | | | else return -0.04475872276556066;  // std dev = 4,332, 207,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=22 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04856085297815487;  // std dev = 4,453, 307,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=22 */
%   | | | else return 0.0821518075525448;  // std dev = 10,677, 593,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=154 */
%   | else return -0.1045097526702592;  // std dev = 0,076, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.08544507997358103;  // std dev = 1,693, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.24099751985136933;  // std dev = 6,187, 166,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.046984265265835295;  // std dev = 4,465, 321,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=22 */
%   | | | else return 0.04336988994454322;  // std dev = 11,588, 794,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=176 */
%   | else return -0.0960358295533482;  // std dev = 0,083, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.2705911284639855;  // std dev = 1,202, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.15417545910630656;  // std dev = 6,426, 174,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04378481733757367;  // std dev = 4,472, 327,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=22 */
%   | | | else return 0.035232846315771456;  // std dev = 11,604, 797,000 (wgt'ed) examples reached here.  /* #neg=621 #pos=176 */
%   | else return -0.08710330906134645;  // std dev = 0,062, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09947298697478062;  // std dev = 0,491, 186,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03380517126208987;  // std dev = 4,456, 305,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=22 */
%   | | | else return 0.044074002733787886;  // std dev = 11,492, 749,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=176 */
%   | else return -0.080144134226358;  // std dev = 0,053, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527747;  // std dev = 9,88e-08, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.041439034857371104;  // std dev = 6,967, 197,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=110 */
%   | | | else return -0.04022499551046362;  // std dev = 4,482, 350,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=22 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05059780342537639;  // std dev = 4,314, 198,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=22 */
%   | | | else return 0.051566892227705545;  // std dev = 10,668, 590,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=154 */
%   | else return -0.07405801038221606;  // std dev = 0,033, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.16282185702144134;  // std dev = 1,696, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.10019459320266262;  // std dev = 6,254, 168,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05866569834386483;  // std dev = 4,357, 234,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=22 */
%   | | | else return 0.018441663756650212;  // std dev = 11,615, 893,000 (wgt'ed) examples reached here.  /* #neg=717 #pos=176 */
%   | else return -0.07003325916677532;  // std dev = 0,062, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.30953481553109935;  // std dev = 0,971, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.041227989178808;  // std dev = 6,530, 180,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03323780642721997;  // std dev = 4,470, 326,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=22 */
%   | | | else return 0.019868511977728927;  // std dev = 11,554, 790,000 (wgt'ed) examples reached here.  /* #neg=614 #pos=176 */
%   | else return -0.06510687153422968;  // std dev = 0,041, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */


Results
   AUC ROC   = 0.900054
   AUC PR    = 0.571728
   CLL	      = -0.237727
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 82.124 seconds
Total inference time: 3.811 seconds
AUC ROC: 0.900054


Results scoring model
   AUC ROC   = 0.868394
   AUC PR    = 0.525936
   CLL	      = -0.232336
   Precision = 0.186885 at threshold = 0.5
   Recall    = 0.628676
   F1        = 0.288121


Total scoring time: 14.014 seconds
Refined model CLL: -0.232336


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900054
   AUC PR    = 0.571728
   CLL	      = -0.237727
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 104.719 seconds
Total inference time: 3.811 seconds
AUC ROC: 0.900054
Total revision time: 104.719
Best scored revision CLL: -0.232336


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:13:51
{'parameter_1.0': {'F1': 0.637168, 'Inference time': 2.161, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 4.256, 'CLL': -0.249444}, 'F1': 0.293725, 'Inference time': 3.811, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.900054, 'AUC PR': 0.571728, 'Recall': 0.714286, 'Learning time': 104.719, 'CLL': -0.237727}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return 0.0803711573217344;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.5513307532813269;  // std dev = 7,493, 264,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=183 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10504124894956791;  // std dev = 3,400, 326,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=12 */
%   | | | else return 0.13592671287729013;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return 0.21191237595972262;  // std dev = 0,478, 930,000 (wgt'ed) examples reached here.  /* #neg=601 #pos=329 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7516253148481158;  // std dev = 0,158, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15191897724039985;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.21252258176734692;  // std dev = 0,926, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4836331229709016;  // std dev = 7,328, 259,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=183 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09006528346330114;  // std dev = 3,395, 304,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=12 */
%   | | | else return 0.12649832160510774;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else return 0.18834469875037757;  // std dev = 0,479, 919,000 (wgt'ed) examples reached here.  /* #neg=590 #pos=329 */
%   else return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3761049327363557;  // std dev = 0,454, 279,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08137900473247583;  // std dev = 3,397, 313,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=12 */
%   | | | else return 0.1172295670588579;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else return 0.14556689109798115;  // std dev = 0,475, 958,000 (wgt'ed) examples reached here.  /* #neg=629 #pos=329 */
%   else return -0.11231637819360621;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5011978197875094;  // std dev = 0,233, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.18310618490504693;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.3055325747298378;  // std dev = 0,453, 261,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=185 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.15139157411678403;  // std dev = 3,342, 179,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=12 */
%   | | | else return 0.35814962360811126;  // std dev = 1,998, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.05013944009783879;  // std dev = 4,400, 317,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=22 */
%   | | | else return 0.18790175527220565;  // std dev = 13,460, 749,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=307 */
%   else return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.38167763319314746;  // std dev = 0,230, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15728769125869396;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.2431747250636673;  // std dev = 0,446, 257,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=185 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.13516157130564624;  // std dev = 3,358, 210,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=12 */
%   | | | else return 0.3609663927751697;  // std dev = 1,811, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.039584529595178164;  // std dev = 4,381, 301,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=22 */
%   | | | else return 0.16559103795171048;  // std dev = 13,324, 728,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=307 */
%   else return -0.09269127618926101;  // std dev = 3,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.18827449358219142;  // std dev = 0,431, 268,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=193 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11140599938032893;  // std dev = 3,351, 195,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=12 */
%   | | | else return 0.13037717284515674;  // std dev = 2,199, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03940153235797546;  // std dev = 4,407, 305,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=22 */
%   | | | else return 0.11771240517100486;  // std dev = 13,497, 755,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=307 */
%   else return -0.08518475138839682;  // std dev = 5,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13488407460892352;  // std dev = 0,435, 271,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06453707370263986;  // std dev = 3,415, 336,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=12 */
%   | | | else return 0.11765663820623819;  // std dev = 2,647, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06641292960408422;  // std dev = 4,042, 195,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=22 */
%   | | | else return 0.08762723314118276;  // std dev = 13,557, 765,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=307 */
%   else return -0.07877675473109162;  // std dev = 4,94e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2426193152991512;  // std dev = 0,075, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.09203856737598949;  // std dev = 0,447, 264,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=185 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08828827195515075;  // std dev = 3,353, 198,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=12 */
%   | | | else return 0.157833795829894;  // std dev = 2,065, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.033038749252999176;  // std dev = 4,377, 314,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=22 */
%   | | | else return 0.09894079825473098;  // std dev = 13,208, 711,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=307 */
%   else return -0.07324622576333707;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.040770747345390185;  // std dev = 0,452, 288,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=193 */
%   | else if ( haswordvenue(E, C) )
%   | | then return -0.05542145974323975;  // std dev = 0,182, 352,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=12 */
%   | | else return 0.09623533480867145;  // std dev = 0,444, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( haswordvenue(H, F) )
%   | | then if ( author(I, G), title(I, A) )
%   | | | then return -0.027559680236214665;  // std dev = 1,627, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return -0.07786546230888897;  // std dev = 2,905, 154,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=9 */
%   | | else return 0.1332368283515723;  // std dev = 0,497, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then return 0.07122178290940612;  // std dev = 0,495, 720,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=307 */
%   | | else return -0.06842697784420271;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.06543041007783906;  // std dev = 0,683, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.0941888378152427;  // std dev = 6,874, 249,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=185 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.05218783919314152;  // std dev = 3,424, 334,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=12 */
%   | | | else return 0.1258563769814022;  // std dev = 2,581, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06799586668548889;  // std dev = 3,348, 186,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=12 */
%   | | | else return 0.21155179597396198;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0.044347622050975;  // std dev = 0,493, 738,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=307 */
%   else return -0.06448404827103937;  // std dev = 0,006, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 0.814892
   AUC PR    = 0.095544
   CLL	      = -0.323917
   Precision = 0.109228 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.169343


Total learning time: 294.197 seconds
Total inference time: 4.644 seconds
AUC ROC: 0.814892


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 14:18:50
{'F1': 0.169343, 'Recall': 0.376623, 'Inference time': 4.644, 'Precision': [0.109228, 0.5], 'Learning time': 294.197, 'AUC PR': 0.095544, 'CLL': -0.323917, 'AUC ROC': 0.814892}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6091216977454231;  // std dev = 0,432, 257,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09974580174259344;  // std dev = 3,390, 285,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=12 */
%   | | | else return 0.1020513741239026;  // std dev = 2,750, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02482978830474318;  // std dev = 4,407, 188,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=22 */
%   | | | else return 0.2724539283518694;  // std dev = 13,409, 741,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=307 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */


Results
   AUC ROC   = 0.804917
   AUC PR    = 0.077769
   CLL	      = -0.210156
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 22.249 seconds
Total inference time: 1.526 seconds
AUC ROC: 0.804917


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 14:19:15
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.526, 'Precision': [nan, 0.5], 'Learning time': 22.249, 'AUC PR': 0.077769, 'CLL': -0.210156, 'AUC ROC': 0.804917}


