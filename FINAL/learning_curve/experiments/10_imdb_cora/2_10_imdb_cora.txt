Starting experiment #2 for 10_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.14185106490048885;  // std dev = 0,000, 658,000 (wgt'ed) examples reached here.  /* #neg=658 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.12544463852839235;  // std dev = 0,000, 694,000 (wgt'ed) examples reached here.  /* #neg=694 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360626;  // std dev = 5,05e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.11231637819360644;  // std dev = 0,000, 688,000 (wgt'ed) examples reached here.  /* #neg=688 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783626;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.10159632948783501;  // std dev = 4,92e-07, 746,000 (wgt'ed) examples reached here.  /* #neg=746 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.09269127618926196;  // std dev = 0,000, 667,000 (wgt'ed) examples reached here.  /* #neg=667 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.08518475138839675;  // std dev = 1,69e-07, 701,000 (wgt'ed) examples reached here.  /* #neg=701 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109284;  // std dev = 0,000, 734,000 (wgt'ed) examples reached here.  /* #neg=734 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333624;  // std dev = 3,17e-07, 779,000 (wgt'ed) examples reached here.  /* #neg=779 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06842697784420249;  // std dev = 1,93e-07, 687,000 (wgt'ed) examples reached here.  /* #neg=687 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06419184008202543;  // std dev = 2,42e-07, 675,000 (wgt'ed) examples reached here.  /* #neg=675 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 536
Target train neg examples: 18889

Target test facts examples: 7463
Target test pos	 examples: 162
Target test neg examples: 9107

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,06e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.10506251534642667;  // std dev = 6,722, 243,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=60 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.0721451113718039;  // std dev = 6,809, 264,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=60 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.04423910572483849;  // std dev = 6,889, 287,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=60 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.04176548523632893;  // std dev = 6,873, 282,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=60 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.051134160136207675;  // std dev = 6,805, 263,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=60 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.024484242090931894;  // std dev = 6,889, 287,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=60 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,71e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.029102767617152327;  // std dev = 6,852, 276,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=60 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.03449584098599266;  // std dev = 6,809, 264,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=60 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.0325673544606148;  // std dev = 6,794, 260,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=60 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,79e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else return 0.03561550550608156;  // std dev = 6,757, 251,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=60 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.247787
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 2.11 seconds
Total inference time: 2.367 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.719626
   AUC PR    = 0.478791
   CLL	      = -0.254018
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.439252
   F1        = 0.61039


Total scoring time: 2.37 seconds
Parameter learned model CLL: -0.254018


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.06e-07, 0, 47], 'false': [6.722, 183, 60]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [6.809, 204, 60]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [6.889, 227, 60]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [6.873, 222, 60]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 47], 'false': [6.805, 203, 60]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [6.889, 227, 60]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.71e-08, 0, 47], 'false': [6.852, 216, 60]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [6.809, 204, 60]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 47], 'false': [6.794, 200, 60]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.79e-08, 0, 47], 'false': [6.757, 191, 60]}]]
[{'': [9.070758328852342e-16, 0.18594726413656523]}, {'': [-7.558965274043619e-16, 0.17561983471074616]}, {'': [0.0, 0.16535347035899398]}, {'': [-4.1574309007239905e-16, 0.16749660479855347]}, {'': [1.8897413185109047e-17, 0.17609044514161182]}, {'': [-1.8897413185109047e-17, 0.1653534703589968]}, {'': [4.724353296277262e-17, 0.17013232514177593]}, {'': [-7.558965274043619e-17, 0.1756198347107422]}, {'': [-3.7794826370218094e-17, 0.17751479289940983]}, {'': [1.6535236536970416e-17, 0.18190187457341794]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,06e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5355682899382214;  // std dev = 0,467, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08551303673147362;  // std dev = 1,943, 71,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=4 */
%   | | | else return 0.07027014722072328;  // std dev = 5,251, 165,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=35 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.29198318049172345;  // std dev = 3,201, 41,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | | else return -0.0672407881129556;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.1256221377981634;  // std dev = 0,987, 40,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
%   | | | else return 0.15568416850814362;  // std dev = 4,856, 111,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.32560727255976685;  // std dev = 2,898, 35,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return -0.10792161833219766;  // std dev = 0,986, 37,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06271493041488638;  // std dev = 1,937, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | | | else return 0.12146303622318076;  // std dev = 4,902, 116,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.6562982945480309;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25629829454803105;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09721230495637524;  // std dev = 0,987, 39,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
%   | | | else return 0.05527506091338153;  // std dev = 5,336, 174,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=38 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.10317914750801942;  // std dev = 1,041, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.29280024099887947;  // std dev = 2,393, 27,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.059638949668913754;  // std dev = 1,935, 63,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=4 */
%   | | | else return 0.07464960399485696;  // std dev = 4,992, 142,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=35 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14476086456183582;  // std dev = 0,477, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09847583541591257;  // std dev = 0,989, 45,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
%   | | | else return 0.02201967078993079;  // std dev = 5,385, 192,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=38 */
%   | else return -0.08518475138839682;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,71e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.026215090529479946;  // std dev = 3,156, 89,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | | | else return 0.25556726289391246;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.08563097422905389;  // std dev = 0,987, 40,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
%   | | | else return 0.10975191417496617;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.4613044693263461;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0754445856998484;  // std dev = 2,747, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.052734997278763095;  // std dev = 1,890, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | | else return 0.04702498546336659;  // std dev = 4,991, 138,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=35 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.07203281509809907;  // std dev = 1,162, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04460791646021661;  // std dev = 2,770, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return -0.10688917435330064;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07891124259020962;  // std dev = 0,987, 47,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09224293062262703;  // std dev = 0,992, 59,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=1 */
%   | | | else return 0.28610826947090057;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.08531097034991517;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,79e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.36791189104101374;  // std dev = 0,074, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16785183008532695;  // std dev = 0,993, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordtitle(A, D) )
%   | | | then return -0.12804642498068364;  // std dev = 3,170, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return -0.07274527668776433;  // std dev = 0,987, 41,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08218040486086407;  // std dev = 0,990, 51,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
%   | | | else return 0.06889404211892486;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.0662229593271849;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | | else return -0.06419184008202619;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.844101
   AUC PR    = 0.484035
   CLL	      = -0.279998
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 35.269 seconds
Total inference time: 4.17 seconds
AUC ROC: 0.844101


Results scoring model
   AUC ROC   = 0.886367
   AUC PR    = 0.558832
   CLL	      = -0.234193
   Precision = 0.214744 at threshold = 0.5
   Recall    = 0.626168
   F1        = 0.319809


Total scoring time: 6.016 seconds
Refined model CLL: -0.234193


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.844101
   AUC PR    = 0.484035
   CLL	      = -0.279998
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 45.76499999999999 seconds
Total inference time: 4.17 seconds
AUC ROC: 0.844101
Total revision time: 45.76499999999999
Best scored revision CLL: -0.234193


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 02:44:41
{'parameter_0.2': {'F1': 0.578947, 'Inference time': 2.367, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 2.11, 'CLL': -0.247787}, 'F1': 0.216769, 'Inference time': 4.17, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.844101, 'AUC PR': 0.484035, 'Recall': 0.654321, 'Learning time': 45.76499999999999, 'CLL': -0.279998}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.47353355048412754;  // std dev = 0,487, 65,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=40 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1264664495158723;  // std dev = 0,992, 65,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=1 */
%   | | | else return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.22656998773109255;  // std dev = 0,482, 171,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=63 */
%   else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.7902555434157744;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5774895859689662;  // std dev = 0,409, 47,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return -0.16058152618950397;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1481654792178872;  // std dev = 0,988, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | else return 0.17669140976656666;  // std dev = 0,466, 196,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=66 */
%   else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.476074210997756;  // std dev = 0,399, 50,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=40 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1323712023631768;  // std dev = 0,992, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | | else return 0.15464279741990372;  // std dev = 1,404, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.12989205994077174;  // std dev = 0,989, 46,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
%   | | | else return 0.27858892085862225;  // std dev = 5,695, 130,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=62 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2650296445870022;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.21692816970253684;  // std dev = 0,477, 57,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return -0.13424870424861693;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11371705771233938;  // std dev = 0,990, 45,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.07251230421566779;  // std dev = 1,830, 62,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=4 */
%   | | | else return 0.22692778286600473;  // std dev = 5,715, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.21232147236708587;  // std dev = 0,455, 57,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10926592354793434;  // std dev = 0,993, 70,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=1 */
%   | | | else return 0.10895692507606866;  // std dev = 1,439, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.11261786580603997;  // std dev = 0,451, 177,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=63 */
%   else return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2269437116253905;  // std dev = 1,081, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2352006554760862;  // std dev = 2,916, 49,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=38 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09541155517073739;  // std dev = 0,991, 58,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   | | | else return 0.10304692581078148;  // std dev = 1,416, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then return -0.10885210119720674;  // std dev = 0,160, 38,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
%   | | else return 0.14126152606777473;  // std dev = 0,498, 136,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=62 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.1385057145526818;  // std dev = 0,435, 55,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | else if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return -0.09934781244675772;  // std dev = 0,039, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08719717844610055;  // std dev = 0,992, 63,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=1 */
%   | | else return 0.08352201258098084;  // std dev = 0,450, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then return -0.09623708642944909;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return 0.13477263889766813;  // std dev = 0,500, 129,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=62 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.38301590898709464;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09820100815344264;  // std dev = 3,163, 51,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07455569542249359;  // std dev = 0,989, 49,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
%   | | | else return 0.09320517484385664;  // std dev = 1,401, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0873866891352293;  // std dev = 0,987, 39,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
%   | | | else return -0.11218987763875587;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.03639640272523721;  // std dev = 0,492, 150,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=62 */
%   else return -0.07362427566207666;  // std dev = 0,012, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.10611467725460122;  // std dev = 0,871, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07437714009245905;  // std dev = 0,446, 52,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=38 */
%   | else return -0.08547362751766115;  // std dev = 0,134, 56,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( haswordvenue(H, F) )
%   | | then return -0.06824280229698555;  // std dev = 0,132, 56,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
%   | | else return 0.11027846921585553;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return 0.09140074491434355;  // std dev = 0,499, 130,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=62 */
%   | | else return -0.06840288308828059;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.16777827520111022;  // std dev = 0,951, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.13283094778468693;  // std dev = 2,760, 47,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=38 */
%   | | else if ( haswordvenue(G, C), haswordvenue(G, D) )
%   | | | then return -0.07478758390063021;  // std dev = 0,999, 39,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
%   | | | else return -0.09489991896832733;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06387822121115887;  // std dev = 0,990, 50,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
%   | | | else return 0.013264551200195396;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.04849408350418354;  // std dev = 0,498, 136,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=62 */
%   else return -0.06454297940703792;  // std dev = 0,024, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */


Results
   AUC ROC   = 0.759565
   AUC PR    = 0.051109
   CLL	      = -0.426736
   Precision = 0.075521 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.124731


Total learning time: 266.112 seconds
Total inference time: 5.376 seconds
AUC ROC: 0.759565


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 02:49:13
{'F1': 0.124731, 'Recall': 0.358025, 'Inference time': 5.376, 'Precision': [0.075521, 0.5], 'Learning time': 266.112, 'AUC PR': 0.051109, 'CLL': -0.426736, 'AUC ROC': 0.759565}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6128659162315878;  // std dev = 0,430, 53,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11327963632905916;  // std dev = 0,986, 35,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.06341969235146812;  // std dev = 1,920, 51,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | | else return 0.2687449615895797;  // std dev = 6,045, 151,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=62 */
%   else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


Results
   AUC ROC   = 0.75848
   AUC PR    = 0.049934
   CLL	      = -0.198026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.405 seconds
Total inference time: 2.258 seconds
AUC ROC: 0.75848


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 02:49:22
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.258, 'Precision': [nan, 0.5], 'Learning time': 6.405, 'AUC PR': 0.049934, 'CLL': -0.198026, 'AUC ROC': 0.75848}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995118;  // std dev = 1,69e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.07607512139124956;  // std dev = 9,848, 569,000 (wgt'ed) examples reached here.  /* #neg=445 #pos=124 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.06579656717269586;  // std dev = 9,853, 571,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=124 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,95e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.06300817384048159;  // std dev = 9,816, 556,000 (wgt'ed) examples reached here.  /* #neg=432 #pos=124 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583101;  // std dev = 1,84e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.0725803877868541;  // std dev = 9,700, 514,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=124 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.04473888204711009;  // std dev = 9,810, 554,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=124 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.035668756391626595;  // std dev = 9,826, 560,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=124 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253578;  // std dev = 1,05e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.029818472068142553;  // std dev = 9,828, 561,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=124 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,66e-08, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.011835801467279592;  // std dev = 9,912, 597,000 (wgt'ed) examples reached here.  /* #neg=473 #pos=124 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.02812491272944581;  // std dev = 9,798, 549,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=124 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080109;  // std dev = 6,14e-08, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.028672514754712882;  // std dev = 9,766, 537,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=124 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.244983
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 2.882 seconds
Total inference time: 2.549 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.71028
   AUC PR    = 0.459957
   CLL	      = -0.252044
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.420561
   F1        = 0.592105


Total scoring time: 2.725 seconds
Parameter learned model CLL: -0.252044


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.69e-07, 0, 90], 'false': [9.848, 445, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.8e-07, 0, 90], 'false': [9.853, 447, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.95e-07, 0, 90], 'false': [9.816, 432, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.84e-07, 0, 90], 'false': [9.7, 390, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 90], 'false': [9.81, 430, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 90], 'false': [9.826, 436, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-07, 0, 90], 'false': [9.828, 437, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.66e-08, 0, 90], 'false': [9.912, 473, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 90], 'false': [9.798, 425, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.14e-08, 0, 90], 'false': [9.766, 413, 124]}]]
[{'': [3.1579677144893343e-16, 0.1704343636200793]}, {'': [8.684411214845669e-16, 0.17000315911189035]}, {'': [1.7368822429691337e-15, 0.17328295636871358]}, {'': [3.7500866609560843e-16, 0.1830459204530009]}, {'': [-3.3553406966449175e-16, 0.1737283165426397]}, {'': [-4.9343245538895844e-17, 0.1723979591836745]}, {'': [1.2335811384723962e-16, 0.17217789724867796]}, {'': [1.0362081563168128e-16, 0.16456374558442796]}, {'': [-7.894919286223336e-17, 0.17485011662204367]}, {'': [4.194175870806147e-17, 0.17759190481639575]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995118;  // std dev = 1,69e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4438632208137981;  // std dev = 4,121, 70,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=41 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07821470126412403;  // std dev = 2,560, 110,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=7 */
%   | | | else return 0.09457066033913028;  // std dev = 7,517, 313,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=74 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.0897187297348978;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.4070714041820128;  // std dev = 3,989, 67,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07747596101170084;  // std dev = 2,572, 127,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=7 */
%   | | | else return 0.08041972352870586;  // std dev = 7,528, 316,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=74 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,95e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.04949459542131088;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.37172082934166767;  // std dev = 3,784, 63,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=41 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06924667398480111;  // std dev = 2,572, 128,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=7 */
%   | | | else return 0.07040549376483167;  // std dev = 7,524, 315,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=74 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583101;  // std dev = 1,84e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.7602087170484978;  // std dev = 0,147, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.27387625954152484;  // std dev = 3,797, 64,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05573985888487823;  // std dev = 2,564, 115,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=7 */
%   | | | else return 0.09466862477772021;  // std dev = 7,354, 275,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=74 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.10943007048207477;  // std dev = 4,461, 83,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=43 */
%   | | | else return -0.1250955402408675;  // std dev = 2,165, 85,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=5 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05498912989403687;  // std dev = 2,571, 125,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=7 */
%   | | | else return 0.14166634978231074;  // std dev = 6,799, 209,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=69 */
%   | else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.08255088134141399;  // std dev = 4,498, 81,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return -0.1014119274208698;  // std dev = 2,158, 79,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=5 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04025770664813342;  // std dev = 2,558, 107,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=7 */
%   | | | else return 0.08759489238621664;  // std dev = 6,956, 231,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=69 */
%   | else return -0.0851847513883968;  // std dev = 1,67e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253578;  // std dev = 1,05e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.2724589637889774;  // std dev = 1,016, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1199088896962673;  // std dev = 3,999, 69,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.043995558909821784;  // std dev = 2,567, 122,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=7 */
%   | | | else return 0.03723364872276558;  // std dev = 7,358, 302,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=74 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,66e-08, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.05940719916324726;  // std dev = 0,937, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08140466200011713;  // std dev = 4,109, 70,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=41 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0886096679958931;  // std dev = 2,154, 75,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=5 */
%   | | | else return 0.04008948508725965;  // std dev = 7,429, 331,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=76 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.07383774806328988;  // std dev = 0,494, 72,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09684198005411611;  // std dev = 2,178, 104,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=5 */
%   | | | else return 0.01920614033318647;  // std dev = 7,496, 359,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=76 */
%   | else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080109;  // std dev = 6,14e-08, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.1745774757625996;  // std dev = 1,016, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.03718517137427748;  // std dev = 4,089, 70,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=40 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09605722221826436;  // std dev = 1,705, 99,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=3 */
%   | | | else return 0.08422083479887522;  // std dev = 1,221, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08060206420608684;  // std dev = 1,400, 100,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=2 */
%   | | | else return 0.19077502834877508;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.05660302929294873;  // std dev = 6,950, 230,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=69 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.853497
   AUC PR    = 0.484335
   CLL	      = -0.254006
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 50.052 seconds
Total inference time: 4.319 seconds
AUC ROC: 0.853497


Results scoring model
   AUC ROC   = 0.874002
   AUC PR    = 0.521888
   CLL	      = -0.241094
   Precision = 0.203988 at threshold = 0.5
   Recall    = 0.621495
   F1        = 0.307159


Total scoring time: 8.641 seconds
Refined model CLL: -0.241094


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853497
   AUC PR    = 0.484335
   CLL	      = -0.254006
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 64.3 seconds
Total inference time: 4.319 seconds
AUC ROC: 0.853497
Total revision time: 64.3
Best scored revision CLL: -0.241094


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 02:50:34
{'F1': 0.216769, 'Inference time': 4.319, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853497, 'AUC PR': 0.484335, 'parameter_0.4': {'F1': 0.578947, 'Inference time': 2.549, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 2.882, 'CLL': -0.244983}, 'Recall': 0.654321, 'Learning time': 64.3, 'CLL': -0.254006}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5836391311779445;  // std dev = 0,446, 102,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=74 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10696734397025512;  // std dev = 1,702, 86,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=3 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.12243358917233232;  // std dev = 1,400, 103,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=2 */
%   | | | else return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.3010555094939722;  // std dev = 0,497, 289,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=128 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.7714224959525476;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2285775040474524;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.48859421312426554;  // std dev = 0,450, 99,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=71 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11173116142103745;  // std dev = 1,403, 126,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=2 */
%   | | | else return 0.08547740819182786;  // std dev = 1,866, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.06798291370788938;  // std dev = 2,140, 80,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=5 */
%   | | | else return 0.23985924214936127;  // std dev = 8,598, 303,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=128 */
%   else return -0.12544463852839152;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.6094351149938853;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.41389832267839016;  // std dev = 0,439, 96,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=71 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09886890061062341;  // std dev = 1,402, 119,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=2 */
%   | | | else return 0.18209143216986456;  // std dev = 1,724, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.06815128458508272;  // std dev = 2,149, 92,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=5 */
%   | | | else return 0.23116541797478957;  // std dev = 8,373, 283,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=128 */
%   else return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.29281382943270085;  // std dev = 0,448, 103,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=74 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.088349150198846;  // std dev = 1,403, 109,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=2 */
%   | | | else return 0.020492575210086423;  // std dev = 1,899, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.11475129008174598;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.03235273110018869;  // std dev = 2,117, 60,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=5 */
%   | | else return 0.19365527000589539;  // std dev = 0,498, 280,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=128 */
%   else return -0.10159632948783634;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2426335419174078;  // std dev = 1,055, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.20999245688490378;  // std dev = 4,596, 102,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=72 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0781631550403175;  // std dev = 1,401, 100,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=2 */
%   | | | else return 0.03711964919046361;  // std dev = 1,879, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07533480764574359;  // std dev = 1,700, 86,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=3 */
%   | | | else return 0.36112001099685803;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12534953837264637;  // std dev = 0,495, 299,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=128 */
%   else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.20268573175089882;  // std dev = 0,428, 99,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=74 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0757611765083856;  // std dev = 1,404, 125,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=2 */
%   | | | else return 0.04720391719946279;  // std dev = 1,855, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.06401186987461704;  // std dev = 0,453, 386,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=133 */
%   else return -0.08518475138839682;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1672791923410049;  // std dev = 0,421, 97,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=74 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07833718606619174;  // std dev = 1,706, 92,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=3 */
%   | | | else return 0.22003776050038856;  // std dev = 1,065, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.05117630796148673;  // std dev = 2,361, 121,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=7 */
%   | | | else return 0.10030542670544396;  // std dev = 8,433, 288,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=128 */
%   else return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.23174109970010356;  // std dev = 1,021, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.06307085436289844;  // std dev = 0,456, 103,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=72 */
%   | else if ( haswordvenue(F, C) )
%   | | then return -0.0643279665030704;  // std dev = 0,126, 123,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=2 */
%   | | else return 0.03777909250893636;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then if ( author(J, H), venue(J, I) )
%   | | | then return 0.18278702304125863;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.08628702549084091;  // std dev = 0,992, 69,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=1 */
%   | | else return 0.12516698687021705;  // std dev = 1,117, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.08839733040921038;  // std dev = 0,498, 281,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=128 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.044141701046435604;  // std dev = 0,447, 109,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=74 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06830591459157202;  // std dev = 1,688, 97,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=3 */
%   | | | else return 0.09729875263716914;  // std dev = 1,122, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.028992048585014453;  // std dev = 0,438, 403,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=135 */
%   else return -0.06962662928665951;  // std dev = 0,023, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(B, C) )
%   | | then return -0.0068463085407034835;  // std dev = 0,472, 111,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=72 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.07692779630465976;  // std dev = 0,015, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.05837296994525072;  // std dev = 1,401, 100,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=2 */
%   | else return 0.056863046586273544;  // std dev = 0,428, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then if ( author(J, H), venue(J, I) )
%   | | | then return 0.1717258791003306;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07337213575426921;  // std dev = 0,993, 79,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=1 */
%   | | else return -0.0024347492434468165;  // std dev = 0,424, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.07753157393012179;  // std dev = 0,499, 271,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=128 */
%   | | else return -0.06411981318860051;  // std dev = 5,89e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.759265
   AUC PR    = 0.051638
   CLL	      = -0.450253
   Precision = 0.075521 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.124731


Total learning time: 322.462 seconds
Total inference time: 5.136 seconds
AUC ROC: 0.759265


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 02:56:02
{'F1': 0.124731, 'Recall': 0.358025, 'Inference time': 5.136, 'Precision': [0.075521, 0.5], 'Learning time': 322.462, 'AUC PR': 0.051638, 'CLL': -0.450253, 'AUC ROC': 0.759265}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5981489350995132;  // std dev = 0,439, 100,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=74 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.12366924671866948;  // std dev = 1,401, 110,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=2 */
%   | | | else return 0.24276431971489695;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.21281560176617487;  // std dev = 0,478, 375,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=133 */
%   else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.599276
   AUC PR    = 0.03828
   CLL	      = -0.214809
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 12.232 seconds
Total inference time: 2.131 seconds
AUC ROC: 0.599276


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 02:56:16
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.131, 'Precision': [nan, 0.5], 'Learning time': 12.232, 'AUC PR': 0.03828, 'CLL': -0.214809, 'AUC ROC': 0.599276}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 8,92e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.07597071727772559;  // std dev = 11,733, 808,000 (wgt'ed) examples reached here.  /* #neg=632 #pos=176 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.0622393387232223;  // std dev = 11,765, 824,000 (wgt'ed) examples reached here.  /* #neg=648 #pos=176 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,13e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.051762649239276266;  // std dev = 11,782, 833,000 (wgt'ed) examples reached here.  /* #neg=657 #pos=176 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.04752709804957135;  // std dev = 11,761, 822,000 (wgt'ed) examples reached here.  /* #neg=646 #pos=176 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,56e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.04319398707290558;  // std dev = 11,743, 813,000 (wgt'ed) examples reached here.  /* #neg=637 #pos=176 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694903;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.026766891604521604;  // std dev = 11,819, 853,000 (wgt'ed) examples reached here.  /* #neg=677 #pos=176 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253523;  // std dev = 2,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.02425131223904036;  // std dev = 11,808, 847,000 (wgt'ed) examples reached here.  /* #neg=671 #pos=176 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.029013248089873406;  // std dev = 11,745, 814,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=176 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.01836618473876506;  // std dev = 11,791, 838,000 (wgt'ed) examples reached here.  /* #neg=662 #pos=176 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.020114958813037417;  // std dev = 11,757, 820,000 (wgt'ed) examples reached here.  /* #neg=644 #pos=176 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.234104
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 3.522 seconds
Total inference time: 2.141 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.725857
   AUC PR    = 0.49005
   CLL	      = -0.240254
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451713
   F1        = 0.622318


Total scoring time: 3.298 seconds
Parameter learned model CLL: -0.240254


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.92e-07, 0, 145], 'false': [11.733, 632, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 145], 'false': [11.765, 648, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.13e-07, 0, 145], 'false': [11.782, 657, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.38e-07, 0, 145], 'false': [11.761, 646, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.56e-07, 0, 145], 'false': [11.743, 637, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 145], 'false': [11.819, 677, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.38e-07, 0, 145], 'false': [11.808, 671, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 145], 'false': [11.745, 638, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 145], 'false': [11.791, 662, 176]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.32e-08, 0, 145], 'false': [11.757, 644, 176]}]]
[{'': [5.488330096905601e-15, 0.1703754533869249]}, {'': [-2.2541355755148008e-15, 0.16797059100763018]}, {'': [1.8131090498706005e-15, 0.16664336803148228]}, {'': [1.3230795769326004e-15, 0.168268006938162]}, {'': [4.532772624676501e-16, 0.16961763713578368]}, {'': [-1.4700884188140004e-16, 0.16375828226423353]}, {'': [3.920235783504001e-16, 0.1646146061730446]}, {'': [-2.9401768376280007e-16, 0.1694667640613616]}, {'': [-3.675221047035001e-17, 0.16591384191249534]}, {'': [2.7564157852762507e-17, 0.16856632956573286]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 8,92e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4499856697933907;  // std dev = 0,491, 98,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09794862587609764;  // std dev = 2,933, 205,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=9 */
%   | | | else return 0.08957144040736592;  // std dev = 9,153, 471,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=109 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.34651292338353645;  // std dev = 0,497, 105,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=58 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0780152442462299;  // std dev = 2,920, 172,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=9 */
%   | | | else return 0.08488312849559199;  // std dev = 9,114, 458,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=109 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,13e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.06507977312475839;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.30906602742028993;  // std dev = 4,865, 97,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=56 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07310110104212536;  // std dev = 2,926, 185,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=9 */
%   | | | else return 0.050125422458342526;  // std dev = 9,253, 508,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=109 */
%   | else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.18422882257612502;  // std dev = 1,268, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1877765641531069;  // std dev = 5,124, 106,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=55 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.11117657459590795;  // std dev = 2,741, 147,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=8 */
%   | | | else return 0.05545804869684249;  // std dev = 9,181, 531,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=110 */
%   | else return -0.10159632948783621;  // std dev = 4,21e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,56e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.16621737969764183;  // std dev = 5,149, 108,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=58 */
%   | | | else return -0.07528174058075776;  // std dev = 2,931, 207,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08899705632161133;  // std dev = 2,732, 119,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=8 */
%   | | | else return 0.14321658500275952;  // std dev = 8,271, 313,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=101 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694903;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15748200301291285;  // std dev = 0,493, 102,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=58 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06480030302702283;  // std dev = 2,927, 193,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=9 */
%   | | | else return 0.0457097353536203;  // std dev = 9,040, 467,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=109 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253523;  // std dev = 2,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.06881597411155349;  // std dev = 5,255, 112,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=58 */
%   | | | else return -0.08743039437769276;  // std dev = 2,737, 137,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=8 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.050650570165802725;  // std dev = 2,916, 163,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=9 */
%   | | | else return 0.0723489374727176;  // std dev = 8,520, 359,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=101 */
%   | else return -0.07877675473109175;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.06237988458378165;  // std dev = 5,190, 110,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=58 */
%   | | | else return -0.053914969436273406;  // std dev = 2,928, 193,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07364074552883834;  // std dev = 2,733, 121,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=8 */
%   | | | else return 0.08486055408018298;  // std dev = 8,372, 330,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=101 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.20418177958058903;  // std dev = 1,248, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.09029414075543092;  // std dev = 4,865, 97,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=56 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0644000146979546;  // std dev = 2,731, 126,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=8 */
%   | | | else return 0.020136151165670076;  // std dev = 9,029, 523,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=110 */
%   | else return -0.06842697784420268;  // std dev = 2,58e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.021251099366799305;  // std dev = 5,232, 111,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=58 */
%   | | | else return -0.07924681329710284;  // std dev = 1,717, 178,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=3 */
%   | | else return 0.18231634656270057;  // std dev = 0,441, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08502948428402712;  // std dev = 1,963, 115,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=4 */
%   | | | else return 0.1929184259743857;  // std dev = 1,644, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05378891555171635;  // std dev = 8,447, 344,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=101 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */


Results
   AUC ROC   = 0.853931
   AUC PR    = 0.489198
   CLL	      = -0.251042
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 82.009 seconds
Total inference time: 4.434 seconds
AUC ROC: 0.853931


Results scoring model
   AUC ROC   = 0.883551
   AUC PR    = 0.552347
   CLL	      = -0.228355
   Precision = 0.212249 at threshold = 0.5
   Recall    = 0.626168
   F1        = 0.317035


Total scoring time: 10.8 seconds
Refined model CLL: -0.228355


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853931
   AUC PR    = 0.489198
   CLL	      = -0.251042
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 99.629 seconds
Total inference time: 4.434 seconds
AUC ROC: 0.853931
Total revision time: 99.629
Best scored revision CLL: -0.228355


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 02:58:03
{'F1': 0.216769, 'Inference time': 4.434, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853931, 'AUC PR': 0.489198, 'parameter_0.6': {'F1': 0.578947, 'Inference time': 2.141, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 3.522, 'CLL': -0.234104}, 'Recall': 0.654321, 'Learning time': 99.629, 'CLL': -0.251042}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.07243464938522651;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.5460470242714843;  // std dev = 5,806, 157,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=108 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.1082376195223364;  // std dev = 1,966, 119,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=4 */
%   | | | else return 0.16584124279182003;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.12237054541996839;  // std dev = 1,715, 154,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=3 */
%   | | | else return 0.14386322081379807;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0.29185680026804733;  // std dev = 0,496, 445,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=193 */
%   else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.2776721654900272;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.4838657429905191;  // std dev = 5,636, 153,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=108 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09556553053341502;  // std dev = 1,966, 119,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=4 */
%   | | | else return 0.5034052172989958;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.11045459569452581;  // std dev = 1,717, 175,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=3 */
%   | | | else return 0.2397187297348978;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.26762307540838026;  // std dev = 0,497, 430,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=193 */
%   else return -0.1254446385283916;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.809981994527341;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19001800547265896;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.3627850466460812;  // std dev = 0,467, 159,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=108 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10182967915640947;  // std dev = 1,736, 187,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=3 */
%   | | | else return 0.08558136300989394;  // std dev = 2,055, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.06034699380218153;  // std dev = 2,582, 124,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=8 */
%   | | | else return 0.20645810788810226;  // std dev = 10,481, 448,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=193 */
%   else return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.714606562826724;  // std dev = 0,207, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.055834968623279316;  // std dev = 1,231, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( haswordtitle(B, D) )
%   | | | then return 0.3196188998022723;  // std dev = 5,430, 146,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=105 */
%   | | | else return -0.07716411288556974;  // std dev = 2,616, 194,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=8 */
%   | else return 0.1307000768058262;  // std dev = 0,458, 564,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=201 */
%   else return -0.10159632948783617;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.48133483450234743;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1550216581111413;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.22499480096766056;  // std dev = 0,459, 154,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=108 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08194166975936952;  // std dev = 1,669, 164,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=3 */
%   | | | else return 0.15813413390458247;  // std dev = 1,940, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.06782412808755638;  // std dev = 2,580, 121,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=8 */
%   | | | else return 0.12848654424592917;  // std dev = 10,609, 463,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=193 */
%   else return -0.09269127618926107;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.3644664899016219;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13578277166257935;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.23367339966486456;  // std dev = 0,425, 141,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=108 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07516695581224926;  // std dev = 1,671, 167,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=3 */
%   | | | else return 0.0791262603918914;  // std dev = 2,029, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.06331876589886554;  // std dev = 2,603, 121,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=8 */
%   | | | else return 0.15075816967020056;  // std dev = 10,150, 414,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=193 */
%   else return -0.08518475138839679;  // std dev = 1,97e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.01324654303713361;  // std dev = 1,053, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08204197504810379;  // std dev = 5,892, 163,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=107 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06883456724075322;  // std dev = 1,670, 172,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=3 */
%   | | | else return -1.0773714454613162E-4;  // std dev = 2,119, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07134901449901597;  // std dev = 1,958, 97,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=4 */
%   | | | else return 0.21146142211106858;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.07533019134819174;  // std dev = 0,494, 455,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=193 */
%   else return -0.07877675473109173;  // std dev = 2,24e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08313190459400194;  // std dev = 0,451, 164,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=111 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0650460907898679;  // std dev = 1,683, 170,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=3 */
%   | | | else return 0.10269038220301974;  // std dev = 1,963, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06861518135943372;  // std dev = 1,963, 108,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=4 */
%   | | | else return 0.17156891694402562;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.08904280719781472;  // std dev = 0,498, 424,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=193 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return -0.007894822668090681;  // std dev = 1,056, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15562772742865763;  // std dev = 0,403, 139,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=107 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.057408933976669775;  // std dev = 1,676, 153,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=3 */
%   | | | else return 0.005879889670423137;  // std dev = 2,094, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.05088834937851817;  // std dev = 2,545, 122,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=8 */
%   | | | else return 0.049605081670784;  // std dev = 10,427, 442,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=193 */
%   else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.29716256532641133;  // std dev = 0,104, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.6128880913202108;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.027397007854648058;  // std dev = 0,453, 159,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=107 */
%   | else if ( haswordvenue(G, C) )
%   | | then return -0.05530888431586362;  // std dev = 0,127, 175,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=3 */
%   | | else return 0.009130705400366859;  // std dev = 0,426, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then if ( haswordvenue(J, H) )
%   | | then return -0.061112937525922055;  // std dev = 0,177, 123,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=4 */
%   | | else return 0.010853714760087563;  // std dev = 0,411, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.05955354689687171;  // std dev = 0,498, 421,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=193 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.773421
   AUC PR    = 0.070713
   CLL	      = -0.443483
   Precision = 0.077128 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.126915


Total learning time: 1080.828 seconds
Total inference time: 6.086 seconds
AUC ROC: 0.773421


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 03:16:11
{'F1': 0.126915, 'Recall': 0.358025, 'Inference time': 6.086, 'Precision': [0.077128, 0.5], 'Learning time': 1080.828, 'AUC PR': 0.070713, 'CLL': -0.443483, 'AUC ROC': 0.773421}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5696873966379713;  // std dev = 0,453, 156,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=111 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10581502886445163;  // std dev = 1,964, 111,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=4 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.1236692467186698;  // std dev = 1,716, 165,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=3 */
%   | | | else return 0.23314893509951234;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.3346921449760513;  // std dev = 0,499, 405,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=193 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */


Results
   AUC ROC   = 0.696098
   AUC PR    = 0.042668
   CLL	      = -0.225381
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 40.212 seconds
Total inference time: 2.21 seconds
AUC ROC: 0.696098


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 03:16:53
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.21, 'Precision': [nan, 0.5], 'Learning time': 40.212, 'AUC PR': 0.042668, 'CLL': -0.225381, 'AUC ROC': 0.696098}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.0702976205029526;  // std dev = 13,578, 1.103,000 (wgt'ed) examples reached here.  /* #neg=869 #pos=234 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.05793049710335463;  // std dev = 13,609, 1.122,000 (wgt'ed) examples reached here.  /* #neg=888 #pos=234 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.048525697038053116;  // std dev = 13,625, 1.132,000 (wgt'ed) examples reached here.  /* #neg=898 #pos=234 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.05620550483104952;  // std dev = 13,502, 1.059,000 (wgt'ed) examples reached here.  /* #neg=825 #pos=234 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.04105995470111629;  // std dev = 13,564, 1.095,000 (wgt'ed) examples reached here.  /* #neg=861 #pos=234 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.03453223924712466;  // std dev = 13,569, 1.098,000 (wgt'ed) examples reached here.  /* #neg=864 #pos=234 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.039152725812833404;  // std dev = 13,485, 1.050,000 (wgt'ed) examples reached here.  /* #neg=816 #pos=234 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.01761456702662826;  // std dev = 13,620, 1.129,000 (wgt'ed) examples reached here.  /* #neg=895 #pos=234 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.019778337668565363;  // std dev = 13,578, 1.103,000 (wgt'ed) examples reached here.  /* #neg=869 #pos=234 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else return 0.028890929586120797;  // std dev = 13,472, 1.043,000 (wgt'ed) examples reached here.  /* #neg=809 #pos=234 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.23687
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 4.287 seconds
Total inference time: 2.515 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.726636
   AUC PR    = 0.491508
   CLL	      = -0.24287
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.453271
   F1        = 0.623794


Total scoring time: 3.606 seconds
Parameter learned model CLL: -0.24287


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.09e-06, 0, 194], 'false': [13.578, 869, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 194], 'false': [13.609, 888, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.19e-07, 0, 194], 'false': [13.625, 898, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 194], 'false': [13.502, 825, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.95e-07, 0, 194], 'false': [13.564, 861, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 194], 'false': [13.569, 864, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 194], 'false': [13.485, 816, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 194], 'false': [13.62, 895, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 194], 'false': [13.578, 869, 234]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-07, 0, 194], 'false': [13.472, 809, 234]}]]
[{'': [6.15315358802561e-15, 0.16714162068503663]}, {'': [-3.516087764586063e-15, 0.165060482141326]}, {'': [1.9777993675796604e-15, 0.16398319369700323]}, {'': [4.76136884787696e-16, 0.17213844906867778]}, {'': [8.057701127176394e-16, 0.16803152561455656]}, {'': [-3.57102663590772e-16, 0.1676968556839562]}, {'': [4.3951097057325786e-16, 0.17319183673470168]}, {'': [-1.2361246047372877e-16, 0.16430508668714544]}, {'': [-2.7469435660828616e-16, 0.16714162068504096]}, {'': [5.722799096005961e-17, 0.17401863677772067]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.011995088945666036;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.4114822684328441;  // std dev = 6,089, 150,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=83 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09346396812629446;  // std dev = 3,379, 248,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=12 */
%   | | | else return 0.09977151005541678;  // std dev = 10,193, 567,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=137 */
%   | else return -0.14185106490048763;  // std dev = 8,56e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.36216003473782493;  // std dev = 0,495, 152,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=85 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08166968640007766;  // std dev = 3,378, 244,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=12 */
%   | | | else return 0.07659324245123521;  // std dev = 10,264, 593,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=137 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2825179602244684;  // std dev = 0,495, 157,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=85 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07722888439793593;  // std dev = 3,386, 269,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=12 */
%   | | | else return 0.05555309961431756;  // std dev = 10,336, 622,000 (wgt'ed) examples reached here.  /* #neg=485 #pos=137 */
%   | else return -0.11231637819360622;  // std dev = 6,32e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18398737168295273;  // std dev = 0,496, 170,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=85 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10387041611136767;  // std dev = 3,200, 168,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=11 */
%   | | | else return 0.04496269675861596;  // std dev = 10,349, 701,000 (wgt'ed) examples reached here.  /* #neg=563 #pos=138 */
%   | else return -0.10159632948783617;  // std dev = 4,83e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.21211730952190472;  // std dev = 0,492, 149,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=85 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09733790526211744;  // std dev = 3,214, 188,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=11 */
%   | | | else return 0.04479556741940707;  // std dev = 10,296, 687,000 (wgt'ed) examples reached here.  /* #neg=549 #pos=138 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.03571257723103703;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.21012837858891964;  // std dev = 5,586, 133,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=83 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07807423176778142;  // std dev = 3,385, 271,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=12 */
%   | | | else return 0.04865585710480184;  // std dev = 10,222, 613,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=137 */
%   | else return -0.08518475138839679;  // std dev = 3,16e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.15984155795916466;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.1357967624796723;  // std dev = 5,751, 138,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=83 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06713307482716074;  // std dev = 3,379, 259,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=12 */
%   | | | else return 0.045554698107207206;  // std dev = 10,192, 602,000 (wgt'ed) examples reached here.  /* #neg=465 #pos=137 */
%   | else return -0.07877675473109165;  // std dev = 4,15e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.13246470485662373;  // std dev = 0,472, 139,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=85 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05992484514459274;  // std dev = 3,379, 252,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=12 */
%   | | | else return 0.04769141240959934;  // std dev = 10,139, 575,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=137 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.1411574190389638;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.10584422759178799;  // std dev = 5,478, 130,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=83 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.10308615720299945;  // std dev = 3,217, 194,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=11 */
%   | | | else return 0.02775872450540462;  // std dev = 10,239, 687,000 (wgt'ed) examples reached here.  /* #neg=549 #pos=138 */
%   | else return -0.06842697784420267;  // std dev = 3,73e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.06187518660784134;  // std dev = 5,701, 141,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=85 */
%   | | | else return -0.05579163642555108;  // std dev = 3,376, 250,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=12 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0813444858103486;  // std dev = 3,200, 159,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=11 */
%   | | | else return 0.07043544089340355;  // std dev = 9,504, 445,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=126 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */


Results
   AUC ROC   = 0.853714
   AUC PR    = 0.488267
   CLL	      = -0.234331
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 82.313 seconds
Total inference time: 4.118 seconds
AUC ROC: 0.853714


Results scoring model
   AUC ROC   = 0.881558
   AUC PR    = 0.558438
   CLL	      = -0.230546
   Precision = 0.214895 at threshold = 0.5
   Recall    = 0.647196
   F1        = 0.322656


Total scoring time: 12.054 seconds
Refined model CLL: -0.230546


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853714
   AUC PR    = 0.488267
   CLL	      = -0.234331
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 102.26 seconds
Total inference time: 4.118 seconds
AUC ROC: 0.853714
Total revision time: 102.26
Best scored revision CLL: -0.230546


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 03:18:43
{'F1': 0.216769, 'Inference time': 4.118, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853714, 'parameter_0.8': {'F1': 0.578947, 'Inference time': 2.515, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 4.287, 'CLL': -0.23687}, 'AUC PR': 0.488267, 'Recall': 0.654321, 'Learning time': 102.26, 'CLL': -0.234331}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5854216623722364;  // std dev = 0,445, 209,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=152 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11040452401998463;  // std dev = 2,201, 159,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=5 */
%   | | | else return 0.1914822684328457;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.09012692696945343;  // std dev = 3,373, 232,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=12 */
%   | | | else return 0.2951092114380225;  // std dev = 11,935, 579,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=253 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4588908359011587;  // std dev = 0,463, 221,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=152 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11426835413984494;  // std dev = 1,983, 234,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=4 */
%   | | | else return 0.10440155866054214;  // std dev = 2,472, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05543853818631073;  // std dev = 3,128, 144,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=11 */
%   | | | else return 0.25906933782112973;  // std dev = 11,895, 574,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=253 */
%   else return -0.1254446385283914;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3500202365870394;  // std dev = 0,470, 227,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=152 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10359348583687206;  // std dev = 1,986, 260,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=4 */
%   | | | else return 0.12356420244771191;  // std dev = 2,420, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.054716198700181816;  // std dev = 3,141, 154,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=11 */
%   | | | else return 0.20538925557300575;  // std dev = 12,021, 590,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=253 */
%   else return -0.11231637819360622;  // std dev = 6,50e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.29095760761565914;  // std dev = 0,462, 220,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=152 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09200976510574362;  // std dev = 1,985, 238,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=4 */
%   | | | else return 0.057546609295367306;  // std dev = 2,501, 37,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else return 0.12746258521109977;  // std dev = 0,463, 739,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=264 */
%   else return -0.10159632948783615;  // std dev = 5,67e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.2559187374606361;  // std dev = 0,445, 209,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=152 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08472936937747609;  // std dev = 1,986, 261,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=4 */
%   | | | else return 0.10007737667985141;  // std dev = 2,420, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else return 0.10664080545321113;  // std dev = 0,466, 728,000 (wgt'ed) examples reached here.  /* #neg=464 #pos=264 */
%   else return -0.09269127618926108;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.18513542081930248;  // std dev = 0,449, 211,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=152 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07525124578531696;  // std dev = 1,983, 234,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=4 */
%   | | | else return 0.041221473237883305;  // std dev = 2,492, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07981734785363122;  // std dev = 3,142, 163,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=11 */
%   | | | else return 0.13674917875607978;  // std dev = 11,845, 568,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=253 */
%   else return -0.08518475138839682;  // std dev = 4,71e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10691313278083485;  // std dev = 0,463, 221,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=152 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06900564959770135;  // std dev = 1,983, 229,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=4 */
%   | | | else return 0.10879119599208187;  // std dev = 2,371, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06831819309143586;  // std dev = 3,139, 161,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=11 */
%   | | | else return 0.08237408222178019;  // std dev = 12,104, 601,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=253 */
%   else return -0.07877675473109176;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08425779855695253;  // std dev = 0,462, 220,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=152 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06418562832101014;  // std dev = 1,983, 237,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=4 */
%   | | | else return 7.549862925996598E-4;  // std dev = 2,519, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | else return 0.04649857109929363;  // std dev = 0,453, 754,000 (wgt'ed) examples reached here.  /* #neg=490 #pos=264 */
%   else return -0.07324622576333704;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.16510005872079134;  // std dev = 0,406, 192,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=152 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.1019390858321392;  // std dev = 2,217, 156,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=5 */
%   | | | else return 0.3080511743844204;  // std dev = 1,745, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.057107578410206784;  // std dev = 1,981, 208,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=4 */
%   | | | else return 0.09104151234772889;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.06224897105322952;  // std dev = 0,495, 588,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=253 */
%   else return -0.06842697784420268;  // std dev = 2,47e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.335677802365725;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.6643221976342751;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.09077984318205103;  // std dev = 0,430, 196,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=148 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09151901088128059;  // std dev = 2,212, 168,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=5 */
%   | | | else return 0.1257627148430946;  // std dev = 1,950, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.04032323424810971;  // std dev = 3,153, 254,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=12 */
%   | | | else return 0.05283979835090216;  // std dev = 11,951, 581,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=253 */
%   else return -0.06419184008202625;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */


Results
   AUC ROC   = 0.767042
   AUC PR    = 0.069277
   CLL	      = -0.411914
   Precision = 0.06988 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.116935


Total learning time: 341.166 seconds
Total inference time: 4.707 seconds
AUC ROC: 0.767042


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 03:24:29
{'F1': 0.116935, 'Recall': 0.358025, 'Inference time': 4.707, 'Precision': [0.06988, 0.5], 'Learning time': 341.166, 'AUC PR': 0.069277, 'CLL': -0.411914, 'AUC ROC': 0.767042}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.124815601766179;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.5595707360473764;  // std dev = 6,648, 211,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=148 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.11525532021963696;  // std dev = 2,206, 188,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=5 */
%   | | | else return 0.40360348055405776;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.12243358917233287;  // std dev = 1,980, 206,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=4 */
%   | | | else return 0.25814893509951237;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.3075272654725096;  // std dev = 0,497, 563,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=253 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */


Results
   AUC ROC   = 0.69104
   AUC PR    = 0.04315
   CLL	      = -0.225675
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 89.047 seconds
Total inference time: 2.587 seconds
AUC ROC: 0.69104


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 03:26:01
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.587, 'Precision': [nan, 0.5], 'Learning time': 89.047, 'AUC PR': 0.04315, 'CLL': -0.225675, 'AUC ROC': 0.69104}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.07903548656457125;  // std dev = 15,135, 1.331,000 (wgt'ed) examples reached here.  /* #neg=1.037 #pos=294 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.06379555204645844;  // std dev = 15,187, 1.364,000 (wgt'ed) examples reached here.  /* #neg=1.070 #pos=294 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.055716634488670265;  // std dev = 15,183, 1.362,000 (wgt'ed) examples reached here.  /* #neg=1.068 #pos=294 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.03999512157216284;  // std dev = 15,262, 1.415,000 (wgt'ed) examples reached here.  /* #neg=1.121 #pos=294 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.04662223326738834;  // std dev = 15,143, 1.336,000 (wgt'ed) examples reached here.  /* #neg=1.042 #pos=294 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.04066319584772934;  // std dev = 15,135, 1.331,000 (wgt'ed) examples reached here.  /* #neg=1.037 #pos=294 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.025353714455556783;  // std dev = 15,224, 1.389,000 (wgt'ed) examples reached here.  /* #neg=1.095 #pos=294 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.02472874659159278;  // std dev = 15,193, 1.368,000 (wgt'ed) examples reached here.  /* #neg=1.074 #pos=294 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.026038571898109195;  // std dev = 15,143, 1.336,000 (wgt'ed) examples reached here.  /* #neg=1.042 #pos=294 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.02226419384337227;  // std dev = 15,140, 1.334,000 (wgt'ed) examples reached here.  /* #neg=1.040 #pos=294 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.238803
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 4.699 seconds
Total inference time: 2.216 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.725746
   AUC PR    = 0.48982
   CLL	      = -0.244852
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451493
   F1        = 0.622108


Total scoring time: 3.98 seconds
Parameter learned model CLL: -0.244852


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 242], 'false': [15.135, 1037, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.187, 1070, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.92e-07, 0, 242], 'false': [15.183, 1068, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.262, 1121, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.67e-07, 0, 242], 'false': [15.143, 1042, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 242], 'false': [15.135, 1037, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 242], 'false': [15.224, 1095, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.23e-07, 0, 242], 'false': [15.193, 1074, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.143, 1042, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 242], 'false': [15.14, 1040, 294]}]]
[{'': [4.8152482919279514e-15, 0.17209568284693666]}, {'': [-4.2280228904733235e-15, 0.16908394320655143]}, {'': [9.98283182472868e-16, 0.16926390964311355]}, {'': [-2.055288905091199e-16, 0.16460387818551014]}, {'': [2.9361270072731413e-16, 0.17163352934848605]}, {'': [3.8169651094550837e-16, 0.17209568284693277]}, {'': [3.5233524087277696e-16, 0.16686181304199546]}, {'': [6.239269890455425e-17, 0.1687249923053245]}, {'': [-1.7249746167729704e-16, 0.17163352934847964]}, {'': [2.9361270072731413e-17, 0.1718181389065693]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3954623679353301;  // std dev = 0,499, 201,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=108 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09023816167468167;  // std dev = 3,895, 310,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=16 */
%   | | | else return 0.08944145210631037;  // std dev = 11,432, 735,000 (wgt'ed) examples reached here.  /* #neg=565 #pos=170 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.38668673880418447;  // std dev = 0,493, 185,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=108 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0831692687338339;  // std dev = 3,903, 333,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=16 */
%   | | | else return 0.08600857578078301;  // std dev = 11,373, 711,000 (wgt'ed) examples reached here.  /* #neg=541 #pos=170 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.27455376818549143;  // std dev = 0,498, 200,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=108 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07537613558623144;  // std dev = 3,906, 343,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=16 */
%   | | | else return 0.05793476007791607;  // std dev = 11,497, 764,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=170 */
%   | else return -0.1123163781936062;  // std dev = 8,16e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.014591266756225334;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.2587220121436451;  // std dev = 6,601, 179,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=104 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06222730093677135;  // std dev = 3,895, 308,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=16 */
%   | | | else return 0.04552904256807895;  // std dev = 11,528, 779,000 (wgt'ed) examples reached here.  /* #neg=609 #pos=170 */
%   | else return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16286202291236523;  // std dev = 0,497, 200,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=108 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10273502864653684;  // std dev = 3,843, 222,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=16 */
%   | | | else return 0.05558342380470392;  // std dev = 11,349, 816,000 (wgt'ed) examples reached here.  /* #neg=646 #pos=170 */
%   | else return -0.09269127618926098;  // std dev = 4,47e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15731074785212065;  // std dev = 0,494, 188,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=108 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09069675629933695;  // std dev = 3,848, 227,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=16 */
%   | | | else return 0.04082949958017045;  // std dev = 11,399, 846,000 (wgt'ed) examples reached here.  /* #neg=676 #pos=170 */
%   | else return -0.08518475138839682;  // std dev = 5,27e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.13376533302432977;  // std dev = 0,489, 184,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=108 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06876296066620285;  // std dev = 3,900, 337,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=16 */
%   | | | else return 0.041051552498768976;  // std dev = 11,385, 762,000 (wgt'ed) examples reached here.  /* #neg=592 #pos=170 */
%   | else return -0.07877675473109161;  // std dev = 5,37e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.1579254209248228;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.10881472260803439;  // std dev = 6,440, 173,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08430713145237646;  // std dev = 3,850, 235,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=16 */
%   | | | else return 0.03258338071425629;  // std dev = 11,365, 852,000 (wgt'ed) examples reached here.  /* #neg=682 #pos=170 */
%   | else return -0.07324622576333717;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2047227661742437;  // std dev = 1,809, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.09223022566558294;  // std dev = 6,354, 170,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=104 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0912929326265806;  // std dev = 2,427, 318,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=6 */
%   | | | else return 0.08993352224792052;  // std dev = 2,804, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.11663701237871262;  // std dev = 2,420, 223,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=6 */
%   | | | else return 0.25871893831276443;  // std dev = 2,400, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.08107772631504989;  // std dev = 10,480, 537,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=154 */
%   | | | else return -0.06842697784420272;  // std dev = 7,45e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.19191423398858087;  // std dev = 1,288, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.026692698707078733;  // std dev = 6,688, 187,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=104 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08191988288940741;  // std dev = 2,426, 315,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=6 */
%   | | | else return 0.1163179110185717;  // std dev = 2,738, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10216628100010126;  // std dev = 2,414, 206,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=6 */
%   | | | else return 0.20533393490925178;  // std dev = 2,423, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.048562087861982406;  // std dev = 10,619, 575,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=154 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.853497
   AUC PR    = 0.484335
   CLL	      = -0.258898
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 87.239 seconds
Total inference time: 4.074 seconds
AUC ROC: 0.853497


Results scoring model
   AUC ROC   = 0.886139
   AUC PR    = 0.554756
   CLL	      = -0.226539
   Precision = 0.21504 at threshold = 0.5
   Recall    = 0.645522
   F1        = 0.322611


Total scoring time: 13.335 seconds
Refined model CLL: -0.226539


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853497
   AUC PR    = 0.484335
   CLL	      = -0.258898
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 109.25300000000001 seconds
Total inference time: 4.074 seconds
AUC ROC: 0.853497
Total revision time: 109.25300000000001
Best scored revision CLL: -0.226539


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 03:27:58
{'parameter_1.0': {'F1': 0.578947, 'Inference time': 2.216, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 4.699, 'CLL': -0.238803}, 'F1': 0.216769, 'Inference time': 4.074, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853497, 'AUC PR': 0.484335, 'Recall': 0.654321, 'Learning time': 109.25300000000001, 'CLL': -0.258898}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5837128448739448;  // std dev = 0,446, 266,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.12151208184964069;  // std dev = 2,424, 295,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=6 */
%   | | | else return 0.274815601766179;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07010218597672083;  // std dev = 3,854, 223,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=16 */
%   | | | else return 0.30952774496888363;  // std dev = 13,062, 689,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=311 */
%   else return -0.14185106490048766;  // std dev = 7,15e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.49697340754353697;  // std dev = 0,446, 266,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10714509921122266;  // std dev = 2,424, 292,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=6 */
%   | | | else return 0.13380064131695493;  // std dev = 2,622, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05548111871935962;  // std dev = 3,841, 205,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=16 */
%   | | | else return 0.2547951251488316;  // std dev = 13,213, 709,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=311 */
%   else return -0.12544463852839138;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.37941558867015435;  // std dev = 0,455, 273,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09323827709022739;  // std dev = 2,421, 261,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=6 */
%   | | | else return 0.07859083795479305;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05418088717508673;  // std dev = 3,851, 219,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=16 */
%   | | | else return 0.2235841086859248;  // std dev = 13,093, 693,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=311 */
%   else return -0.1123163781936062;  // std dev = 7,88e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.5841657843055349;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.41583421569446505;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.27819563505180644;  // std dev = 0,461, 268,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=186 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08593421063904813;  // std dev = 2,424, 285,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=6 */
%   | | | else return 0.03188257601670031;  // std dev = 2,750, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.042136056627107205;  // std dev = 3,838, 202,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=16 */
%   | | | else return 0.1677870989320624;  // std dev = 13,263, 716,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=311 */
%   else return -0.10159632948783626;  // std dev = 4,59e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4610023047078998;  // std dev = 0,091, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.4845792612127009;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.2711804838886444;  // std dev = 0,426, 247,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=186 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07769726921579756;  // std dev = 2,423, 281,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=6 */
%   | | | else return 0.00987742436053154;  // std dev = 2,780, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03652063399282292;  // std dev = 3,836, 199,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=16 */
%   | | | else return 0.12952346111229704;  // std dev = 13,313, 723,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=311 */
%   else return -0.09269127618926097;  // std dev = 4,47e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.35088363467826994;  // std dev = 0,085, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.3667274927356665;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.0036303038239166308;  // std dev = 0,755, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.18975665944893969;  // std dev = 6,891, 248,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=184 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07198974501481203;  // std dev = 2,424, 295,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=6 */
%   | | | else return 0.12574710147190854;  // std dev = 2,560, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.0377325612724903;  // std dev = 3,846, 212,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=16 */
%   | | | else return 0.11196696141999907;  // std dev = 13,191, 706,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=311 */
%   else return -0.08518475138839682;  // std dev = 5,67e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.29139442419991674;  // std dev = 0,140, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.3803218895662397;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.15410334007335189;  // std dev = 0,426, 249,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=186 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0669261840452903;  // std dev = 2,425, 307,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=6 */
%   | | | else return -0.003255962815420617;  // std dev = 2,760, 42,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.039602252999377294;  // std dev = 3,858, 229,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=16 */
%   | | | else return 0.08806154735338151;  // std dev = 13,176, 704,000 (wgt'ed) examples reached here.  /* #neg=393 #pos=311 */
%   else return -0.07877675473109161;  // std dev = 5,37e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.06722735339661211;  // std dev = 0,445, 278,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06159085315228254;  // std dev = 2,425, 304,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=6 */
%   | | | else return 0.022402361050411684;  // std dev = 2,714, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.030198123025496265;  // std dev = 3,846, 212,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=16 */
%   | | | else return 0.049625971025964825;  // std dev = 13,388, 734,000 (wgt'ed) examples reached here.  /* #neg=423 #pos=311 */
%   else return -0.07324622576333707;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.21808105454245538;  // std dev = 0,095, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.33365976789053015;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.09001880011296742;  // std dev = 0,436, 252,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=186 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05312767138465122;  // std dev = 2,420, 253,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=6 */
%   | | | else return 0.05815604206127331;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.015893260155384392;  // std dev = 3,822, 184,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=16 */
%   | | | else return 0.03909335657365129;  // std dev = 13,374, 732,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=311 */
%   else return -0.06842697784420265;  // std dev = 4,71e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08100983428846255;  // std dev = 0,418, 260,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.053677496205891614;  // std dev = 2,426, 308,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=6 */
%   | | | else return 0.02199099850656168;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.021392512669072765;  // std dev = 3,837, 200,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=16 */
%   | | | else return 0.04794632000491366;  // std dev = 13,161, 702,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=311 */
%   else return -0.06419184008202626;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 0.766052
   AUC PR    = 0.070633
   CLL	      = -0.404727
   Precision = 0.077128 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.126915


Total learning time: 358.856 seconds
Total inference time: 5.312 seconds
AUC ROC: 0.766052


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 03:34:02
{'F1': 0.126915, 'Recall': 0.358025, 'Inference time': 5.312, 'Precision': [0.077128, 0.5], 'Learning time': 358.856, 'AUC PR': 0.070633, 'CLL': -0.404727, 'AUC ROC': 0.766052}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5809953770470742;  // std dev = 0,448, 267,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1218510649004881;  // std dev = 2,425, 300,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=6 */
%   | | | else return 0.12130682983635446;  // std dev = 2,714, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07042249347191622;  // std dev = 3,854, 224,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=16 */
%   | | | else return 0.2912965674114854;  // std dev = 13,277, 718,000 (wgt'ed) examples reached here.  /* #neg=407 #pos=311 */
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */


Results
   AUC ROC   = 0.759501
   AUC PR    = 0.049948
   CLL	      = -0.207217
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.795 seconds
Total inference time: 2.342 seconds
AUC ROC: 0.759501


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 03:34:26
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.342, 'Precision': [nan, 0.5], 'Learning time': 20.795, 'AUC PR': 0.049948, 'CLL': -0.207217, 'AUC ROC': 0.759501}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 558
Target train neg examples: 23373

Target test facts examples: 9016
Target test pos	 examples: 140
Target test neg examples: 4623

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.06467067422994731;  // std dev = 6,725, 276,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=57 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.06277939797169808;  // std dev = 6,699, 268,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=57 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.03448306425089477;  // std dev = 6,784, 296,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=57 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.044544450828628145;  // std dev = 6,722, 275,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=57 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.04066992840698319;  // std dev = 6,712, 272,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=57 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.028896765999947314;  // std dev = 6,738, 280,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=57 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.035405956096071854;  // std dev = 6,692, 266,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=57 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.017273927603815326;  // std dev = 6,747, 283,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=57 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.004526396943171789;  // std dev = 6,790, 298,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=57 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.019084552855900393;  // std dev = 6,725, 276,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=57 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.232491
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 2.248 seconds
Total inference time: 2.199 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.743243
   AUC PR    = 0.519625
   CLL	      = -0.227461
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.486486
   F1        = 0.654545


Total scoring time: 2.066 seconds
Parameter learned model CLL: -0.227461


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.725, 219, 57]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.699, 211, 57]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 54], 'false': [6.784, 239, 57]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.722, 218, 57]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.712, 215, 57]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.738, 223, 57]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.692, 209, 57]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.747, 226, 57]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.79, 241, 57]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.05e-08, 0, 54], 'false': [6.725, 219, 57]}]]
[{'': [0.0, 0.16387051039697634]}, {'': [-3.289549702593056e-16, 0.16745099131209776]}, {'': [1.3158198810372225e-16, 0.1554852994886789]}, {'': [-3.618504672852362e-16, 0.16431074380165206]}, {'': [-8.22387425648264e-17, 0.16564392301038222]}, {'': [-3.289549702593056e-17, 0.16213010204081812]}, {'': [0.0, 0.16836734693877653]}, {'': [-4.5231308410654523e-17, 0.1608460587596289]}, {'': [-2.05596856412066e-17, 0.1546889779739623]}, {'': [4.7287276974775186e-17, 0.16387051039697464]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3966104735610501;  // std dev = 0,499, 39,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.04751144225897829;  // std dev = 2,128, 53,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11200031863183098;  // std dev = 1,393, 67,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07633075328132997;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=24 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.25924294347888927;  // std dev = 0,498, 46,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.03812613135579473;  // std dev = 2,124, 51,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
%   | | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.49040032115077253;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10135903322432456;  // std dev = 1,395, 73,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.051990685521910655;  // std dev = 4,372, 118,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=24 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4584401429456359;  // std dev = 0,458, 30,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.04083358023964514;  // std dev = 2,132, 55,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
%   | | | else return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.40772005114416693;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0793458573894398;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.06821458298136773;  // std dev = 4,309, 106,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=24 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordvenue(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.24834445666112406;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | | else return 0.011994893776090167;  // std dev = 5,162, 215,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=34 */
%   | | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | | then return 0.17928741656249722;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09692451024679578;  // std dev = 0,851, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.11800869698050458;  // std dev = 0,185, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14609180344424486;  // std dev = 0,499, 39,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05036371311013882;  // std dev = 1,740, 53,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=4 */
%   | | | else return 0.025114619594534707;  // std dev = 5,017, 173,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=32 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then return -0.20150710156941504;  // std dev = 0,188, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09686571131424235;  // std dev = 0,045, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.019115576165741777;  // std dev = 3,408, 47,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   | | | else return -0.057522318950282356;  // std dev = 1,763, 62,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.03888698099158769;  // std dev = 2,418, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return 0.03541170304501388;  // std dev = 4,352, 115,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=24 */
%   | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then return -0.1295994281654805;  // std dev = 0,051, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08312209414706204;  // std dev = 0,003, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.07981690233636403;  // std dev = 3,201, 41,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | | else return -0.02230306884434502;  // std dev = 2,104, 45,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | else return 0.6901244259651493;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.09979235344271678;  // std dev = 0,943, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.07475280923138226;  // std dev = 1,454, 55,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.01684898913366907;  // std dev = 4,389, 123,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=24 */
%   | | | else return -0.0774428854493798;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.10056831519967674;  // std dev = 3,065, 38,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | | else return 0.009590647110473147;  // std dev = 2,360, 45,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -8.116193155277733E-4;  // std dev = 4,564, 165,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=26 */
%   | | | else return 0.2538547311512933;  // std dev = 0,998, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | then return -0.07523197592087831;  // std dev = 0,034, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.2705444780099637;  // std dev = 0,345, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.020237085034179102;  // std dev = 3,764, 94,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
%   | | | else return -0.10270866211785759;  // std dev = 0,023, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.03246899118588373;  // std dev = 0,398, 152,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=32 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then return -0.12295423784906344;  // std dev = 0,205, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06612031661611865;  // std dev = 0,011, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.12797238008277953;  // std dev = 2,898, 35,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return -0.05265193008100765;  // std dev = 1,789, 69,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=4 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return 0.09468609550184669;  // std dev = 4,559, 106,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | | | else return 0.27111541373805426;  // std dev = 0,961, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then return -0.15533137752446813;  // std dev = 0,216, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.08498354158342836;  // std dev = 0,147, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0582837500363061;  // std dev = 0,019, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.888579
   AUC PR    = 0.567929
   CLL	      = -0.237101
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 30.534 seconds
Total inference time: 4.875 seconds
AUC ROC: 0.888579


Results scoring model
   AUC ROC   = 0.891389
   AUC PR    = 0.588384
   CLL	      = -0.218965
   Precision = 0.164557 at threshold = 0.5
   Recall    = 0.702703
   F1        = 0.266667


Total scoring time: 6.581 seconds
Refined model CLL: -0.218965


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.888579
   AUC PR    = 0.567929
   CLL	      = -0.237101
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 41.429 seconds
Total inference time: 4.875 seconds
AUC ROC: 0.888579
Total revision time: 41.429
Best scored revision CLL: -0.218965


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 03:35:16
{'parameter_0.2': {'F1': 0.640777, 'Inference time': 2.199, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 2.248, 'CLL': -0.232491}, 'F1': 0.277457, 'Inference time': 4.875, 'Precision': [0.173913, 0.5], 'AUC ROC': 0.888579, 'AUC PR': 0.567929, 'Recall': 0.685714, 'Learning time': 41.429, 'CLL': -0.237101}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4700892336069752;  // std dev = 0,487, 67,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.05296217601159886;  // std dev = 1,909, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.23529179224237076;  // std dev = 0,485, 175,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=66 */
%   else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5644107797793716;  // std dev = 0,419, 53,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.19780785473090445;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.10077286503683248;  // std dev = 1,389, 59,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02482393944600479;  // std dev = 2,611, 54,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
%   | | | else return 0.19411652000078297;  // std dev = 6,059, 158,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.44180590679906806;  // std dev = 0,428, 54,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.19709771129141263;  // std dev = 1,113, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.08901962592365698;  // std dev = 1,390, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | else return 0.15819915315216118;  // std dev = 0,475, 187,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=66 */
%   else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.4197757370463767;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.40022426295362373;  // std dev = 0,384, 50,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=41 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.05529760461939669;  // std dev = 2,075, 37,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.3331437739525041;  // std dev = 1,163, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.03381205000362233;  // std dev = 1,849, 46,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | | | else return 0.2003516363150831;  // std dev = 5,752, 135,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=58 */
%   else return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.21653531103805332;  // std dev = 0,438, 56,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08971664004581585;  // std dev = 2,126, 55,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
%   | | | else return 0.7499206662535659;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.05292547271959415;  // std dev = 1,877, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | | | else return 0.12268111129211261;  // std dev = 5,952, 149,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=58 */
%   else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15362247237523136;  // std dev = 0,439, 57,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.24950345926095707;  // std dev = 1,049, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0756448019671871;  // std dev = 1,409, 55,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.01848637485022323;  // std dev = 2,389, 46,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | | else return 0.10064992930197748;  // std dev = 5,939, 148,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=58 */
%   else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12950960961542346;  // std dev = 0,432, 56,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.04097106927117868;  // std dev = 1,859, 53,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=4 */
%   | | | else return -0.08984293688768019;  // std dev = 0,006, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02094628095302099;  // std dev = 2,417, 46,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | | else return 0.09033202268286912;  // std dev = 5,885, 144,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=58 */
%   else return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.07016735300831206;  // std dev = 0,451, 58,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.12933501589394183;  // std dev = 1,111, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.058732457621125556;  // std dev = 1,414, 44,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=2 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.04950862713686531;  // std dev = 2,102, 43,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | | | else return 0.1957291900523738;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.09745764886559459;  // std dev = 0,495, 135,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=58 */
%   else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( author(F, D), title(F, B) )
%   | | then return 0.058929551143086865;  // std dev = 0,356, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordtitle(B, C) )
%   | | | then return -0.03714322183143143;  // std dev = 3,854, 63,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | | | else return -0.043851750896201025;  // std dev = 1,379, 46,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | else return 0.018045802764714333;  // std dev = 0,174, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.007538201077889242;  // std dev = 2,060, 33,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.14784615452424035;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.04312707605932431;  // std dev = 0,489, 146,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=58 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.04103412287047944;  // std dev = 0,457, 60,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.2841739587582116;  // std dev = 0,952, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06256305566336401;  // std dev = 1,412, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.027139640151061385;  // std dev = 2,362, 51,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | | | else return -0.003809797863984018;  // std dev = 6,091, 161,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
%   else return -0.06507600431813845;  // std dev = 0,009, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.824897
   AUC PR    = 0.106808
   CLL	      = -0.344917
   Precision = 0.143564 at threshold = 0.5
   Recall    = 0.414286
   F1        = 0.213235


Total learning time: 45.872 seconds
Total inference time: 7.33 seconds
AUC ROC: 0.824897


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 03:36:09
{'F1': 0.213235, 'Recall': 0.414286, 'Inference time': 7.33, 'Precision': [0.143564, 0.5], 'Learning time': 45.872, 'AUC PR': 0.106808, 'CLL': -0.344917, 'AUC ROC': 0.824897}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4700892336069752;  // std dev = 0,487, 67,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.039967116917694;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.10338952643894926;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.053270886319024574;  // std dev = 2,538, 41,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return 0.28461952333480756;  // std dev = 5,768, 136,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=58 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.218776
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.062 seconds
Total inference time: 2.732 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 03:36:18
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.732, 'Precision': [nan, 0.5], 'Learning time': 6.062, 'AUC PR': 0.097917, 'CLL': -0.218776, 'AUC ROC': 0.821572}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995111;  // std dev = 4,92e-07, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return 0.07322246451127479;  // std dev = 9,583, 544,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=117 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return 0.06134096526801986;  // std dev = 9,600, 551,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=117 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,38e-07, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return 0.05139810337613639;  // std dev = 9,611, 556,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=117 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830964;  // std dev = 2,80e-07, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return 0.0343137854881291;  // std dev = 9,673, 584,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=117 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return 0.0446351358694815;  // std dev = 9,581, 543,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=117 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return 0.04185087904542445;  // std dev = 9,559, 534,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=117 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 1,55e-07, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return 0.025120030887837944;  // std dev = 9,623, 561,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=117 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527733;  // std dev = 3,65e-08, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return 0.013113725221919236;  // std dev = 9,673, 584,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=117 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return 0.02157831053305592;  // std dev = 9,609, 555,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=117 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,99e-08, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return 0.03774961893373062;  // std dev = 9,490, 508,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=117 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.241651
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 2.934 seconds
Total inference time: 2.352 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.737668
   AUC PR    = 0.508219
   CLL	      = -0.237289
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.475336
   F1        = 0.644377


Total scoring time: 2.615 seconds
Parameter learned model CLL: -0.237289


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.92e-07, 0, 106], 'false': [9.583, 427, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 106], 'false': [9.6, 434, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.38e-07, 0, 106], 'false': [9.611, 439, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.8e-07, 0, 106], 'false': [9.673, 467, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 106], 'false': [9.581, 426, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 106], 'false': [9.559, 417, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.55e-07, 0, 106], 'false': [9.623, 444, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.65e-08, 0, 106], 'false': [9.673, 467, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 106], 'false': [9.609, 438, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.99e-08, 0, 106], 'false': [9.49, 391, 117]}]]
[{'': [2.2790993411173024e-15, 0.16881690635813287]}, {'': [-6.032910020604624e-16, 0.16725241352959758]}, {'': [1.8098730061813873e-15, 0.16615017338647353]}, {'': [7.373556691850097e-16, 0.16020536216926756]}, {'': [-1.6758083390568402e-16, 0.16904245902140053]}, {'': [-5.02742501717052e-17, 0.17109582123468878]}, {'': [2.262341257726734e-16, 0.16506048214132812]}, {'': [1.25685625429263e-17, 0.16020536216926662]}, {'': [-1.340646671245472e-16, 0.16636961285609833]}, {'': [4.6084729324063104e-17, 0.17726997953995594]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995111;  // std dev = 4,92e-07, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5010060779566556;  // std dev = 0,479, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05001433020661012;  // std dev = 2,859, 98,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=9 */
%   | | | else return 0.44148226843284566;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09773341784166412;  // std dev = 2,395, 136,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=6 */
%   | | | else return 0.024815601766178853;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.09003299307052656;  // std dev = 6,072, 207,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=48 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.34816561307811655;  // std dev = 0,496, 80,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.04763592036984874;  // std dev = 2,865, 102,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=9 */
%   | | | else return 0.26218535131015386;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.15534906385046945;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.0811189192192042;  // std dev = 2,379, 118,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05735832062266947;  // std dev = 6,156, 228,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=48 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,38e-07, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.36413886999076084;  // std dev = 0,479, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.04855646901922389;  // std dev = 2,875, 110,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=9 */
%   | | | else return 0.28803381202545686;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.08890603913508814;  // std dev = 1,507, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.08022808619735175;  // std dev = 2,180, 116,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=5 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.037590417647345165;  // std dev = 6,203, 242,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=48 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830964;  // std dev = 2,80e-07, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16586100322700884;  // std dev = 0,499, 86,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=45 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05761389431394286;  // std dev = 2,715, 131,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=8 */
%   | | | else return 0.05303268600002427;  // std dev = 6,971, 302,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=64 */
%   | else return -0.11409146393901132;  // std dev = 0,206, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.17330172342287978;  // std dev = 0,495, 79,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=45 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.054771107918357056;  // std dev = 2,738, 129,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=8 */
%   | | | else return 0.04193697059147589;  // std dev = 7,001, 305,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=64 */
%   | else return -0.1062549205501636;  // std dev = 0,265, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0729312835367179;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03316504960585186;  // std dev = 2,689, 109,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=8 */
%   | | | else return 0.01015717167044567;  // std dev = 7,089, 356,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=64 */
%   | else return -0.09567945249773994;  // std dev = 0,180, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 1,55e-07, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1685383131024414;  // std dev = 0,484, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04584573530598404;  // std dev = 2,732, 129,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=8 */
%   | | | else return 0.04028913613860444;  // std dev = 6,957, 300,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=64 */
%   | else return -0.09894274209241219;  // std dev = 0,270, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527733;  // std dev = 3,65e-08, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.024770088245122522;  // std dev = 4,632, 86,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=45 */
%   | | | else return -0.03889178875080749;  // std dev = 2,724, 128,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.007051098582869999;  // std dev = 3,405, 107,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=16 */
%   | | | else return 0.028243567484049464;  // std dev = 6,137, 223,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=48 */
%   | else return -0.0828064436017308;  // std dev = 0,262, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return 0.004566855816392137;  // std dev = 5,293, 175,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=54 */
%   | | | else return 0.36148831390533936;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.01780937956064433;  // std dev = 2,683, 104,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=8 */
%   | | | else return 0.021998304765014753;  // std dev = 6,145, 225,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=48 */
%   | else return -0.07529726756374941;  // std dev = 0,205, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,99e-08, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.056680305735742606;  // std dev = 0,496, 80,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.010519771728920957;  // std dev = 3,350, 100,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */
%   | | | else return 0.010299731297280616;  // std dev = 6,683, 334,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=56 */
%   | else return -0.08150803128801135;  // std dev = 0,339, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */


Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.230471
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 35.726 seconds
Total inference time: 3.95 seconds
AUC ROC: 0.899184


Results scoring model
   AUC ROC   = 0.88195
   AUC PR    = 0.565926
   CLL	      = -0.216284
   Precision = 0.169473 at threshold = 0.5
   Recall    = 0.67713
   F1        = 0.271095


Total scoring time: 6.133 seconds
Refined model CLL: -0.216284


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.230471
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 47.408 seconds
Total inference time: 3.95 seconds
AUC ROC: 0.899184
Total revision time: 47.408
Best scored revision CLL: -0.216284


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 03:37:13
{'F1': 0.277457, 'Inference time': 3.95, 'Precision': [0.173913, 0.5], 'AUC ROC': 0.899184, 'AUC PR': 0.571454, 'parameter_0.4': {'F1': 0.640777, 'Inference time': 2.352, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 2.934, 'CLL': -0.241651}, 'Recall': 0.685714, 'Learning time': 47.408, 'CLL': -0.230471}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.5684293089312883;  // std dev = 4,692, 107,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=76 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0956972187466415;  // std dev = 2,392, 130,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=6 */
%   | | | else return -0.024204006076958388;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return 0.039967116917694195;  // std dev = 3,618, 88,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=16 */
%   | | | else return 0.2658144403259894;  // std dev = 8,325, 287,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=117 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.475566233772765;  // std dev = 0,458, 110,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=77 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07452147346224176;  // std dev = 2,380, 107,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=6 */
%   | | | else return 0.0039269530427704135;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.010076523622594482;  // std dev = 3,673, 102,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
%   | | | else return 0.24348119573986804;  // std dev = 8,232, 278,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=117 */
%   else return -0.1254446385283914;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.35096637020022126;  // std dev = 0,471, 115,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=77 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.06513460093396542;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.073430937806842;  // std dev = 2,168, 98,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.01521260365868206;  // std dev = 3,659, 98,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
%   | | | else return 0.15926638621964476;  // std dev = 8,551, 312,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=117 */
%   else return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.054177295480435005;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.3036012142857629;  // std dev = 4,745, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   | | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.08475157737685017;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.0678741983292255;  // std dev = 2,171, 103,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return 9.615896203599975E-4;  // std dev = 3,686, 106,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=16 */
%   | | | else return 0.1754590138596632;  // std dev = 8,242, 279,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=117 */
%   else return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( haswordvenue(F, C) )
%   | | | then return 0.1522560507903594;  // std dev = 5,364, 124,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=77 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0658588503950429;  // std dev = 2,365, 132,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=6 */
%   | | | else return 0.030550233453727198;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else return 0.1218367832390676;  // std dev = 0,473, 361,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=133 */
%   else return -0.09269127618926105;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.23856362528532615;  // std dev = 4,395, 103,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=77 */
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.04835648767139499;  // std dev = 2,352, 105,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=6 */
%   | | | else return -0.00898934340252051;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06741759899565365;  // std dev = 2,848, 91,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=9 */
%   | | | else return 0.6114590798810253;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordvenue(K, C) )
%   | | | then return 0.08959117021783168;  // std dev = 8,286, 288,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=113 */
%   | | | else return 0.14167450355116554;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.16520569507475083;  // std dev = 0,441, 105,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=77 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.041204881319402656;  // std dev = 2,350, 100,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=6 */
%   | | | else return -6.455166027166115E-4;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 6.623313005649176E-4;  // std dev = 3,490, 95,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | | else return 0.10016578321102186;  // std dev = 8,218, 277,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=117 */
%   else return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.08724901493557469;  // std dev = 0,458, 111,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=77 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.2893774460061933;  // std dev = 1,075, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.04656717843944807;  // std dev = 2,365, 111,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.003438064602166146;  // std dev = 3,480, 94,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | | else return 0.06462779816912247;  // std dev = 8,312, 286,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=117 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2708614658856715;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.056768148325609454;  // std dev = 4,900, 116,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=81 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return 0.07787083994363307;  // std dev = 1,509, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.04973782753319297;  // std dev = 2,173, 108,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=5 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.03443612888305103;  // std dev = 2,809, 73,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=9 */
%   | | | else return 0.6053474117513779;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.05716690698914723;  // std dev = 0,493, 281,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=117 */
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then return 0.11016535414396507;  // std dev = 0,405, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.02554261118858198;  // std dev = 5,544, 222,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=80 */
%   | | | else return 0.07606583350201888;  // std dev = 1,311, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.047320444966237815;  // std dev = 2,837, 85,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=9 */
%   | | | else return 0.1798660042404355;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0.03810770986887004;  // std dev = 0,492, 285,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=117 */
%   else return -0.06419184008202625;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */


Results
   AUC ROC   = 0.831421
   AUC PR    = 0.101473
   CLL	      = -0.343174
   Precision = 0.143564 at threshold = 0.5
   Recall    = 0.414286
   F1        = 0.213235


Total learning time: 97.95 seconds
Total inference time: 9.71 seconds
AUC ROC: 0.831421


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 03:39:01
{'F1': 0.213235, 'Recall': 0.414286, 'Inference time': 9.71, 'Precision': [0.143564, 0.5], 'Learning time': 97.95, 'AUC PR': 0.101473, 'CLL': -0.343174, 'AUC ROC': 0.831421}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.5456489350995122;  // std dev = 0,464, 112,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=77 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08244512430642827;  // std dev = 2,376, 101,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.02656998773109133;  // std dev = 3,648, 95,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | | else return 0.23556828993821813;  // std dev = 8,535, 310,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=117 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */


Results
   AUC ROC   = 0.803254
   AUC PR    = 0.092881
   CLL	      = -0.218594
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.838 seconds
Total inference time: 2.555 seconds
AUC ROC: 0.803254


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 03:39:13
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.555, 'Precision': [nan, 0.5], 'Learning time': 8.838, 'AUC PR': 0.092881, 'CLL': -0.218594, 'AUC ROC': 0.803254}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,68e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.07081321227991408;  // std dev = 11,838, 837,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=178 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.06532778940678287;  // std dev = 11,813, 824,000 (wgt'ed) examples reached here.  /* #neg=646 #pos=178 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.05625171579731298;  // std dev = 11,817, 826,000 (wgt'ed) examples reached here.  /* #neg=648 #pos=178 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,58e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.04273734567853234;  // std dev = 11,861, 849,000 (wgt'ed) examples reached here.  /* #neg=671 #pos=178 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,98e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.041508878296251696;  // std dev = 11,825, 830,000 (wgt'ed) examples reached here.  /* #neg=652 #pos=178 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694905;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.029220014941830075;  // std dev = 11,872, 855,000 (wgt'ed) examples reached here.  /* #neg=677 #pos=178 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,53e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.01897173446498009;  // std dev = 11,916, 880,000 (wgt'ed) examples reached here.  /* #neg=702 #pos=178 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.021543107902906578;  // std dev = 11,876, 857,000 (wgt'ed) examples reached here.  /* #neg=679 #pos=178 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.015389024168821907;  // std dev = 11,897, 869,000 (wgt'ed) examples reached here.  /* #neg=691 #pos=178 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.024463415268610768;  // std dev = 11,811, 823,000 (wgt'ed) examples reached here.  /* #neg=645 #pos=178 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.238415
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 3.198 seconds
Total inference time: 2.239 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.733533
   AUC PR    = 0.500011
   CLL	      = -0.23425
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467066
   F1        = 0.636735


Total scoring time: 3.235 seconds
Parameter learned model CLL: -0.23425


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.68e-07, 0, 156], 'false': [11.838, 659, 178]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 156], 'false': [11.813, 646, 178]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.4e-07, 0, 156], 'false': [11.817, 648, 178]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.58e-07, 0, 156], 'false': [11.861, 671, 178]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-07, 0, 156], 'false': [11.825, 652, 178]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 156], 'false': [11.872, 677, 178]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.53e-07, 0, 156], 'false': [11.916, 702, 178]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 156], 'false': [11.876, 679, 178]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 156], 'false': [11.897, 691, 178]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.19e-08, 0, 156], 'false': [11.811, 645, 178]}]]
[{'': [6.012284687200848e-15, 0.16743818239174352]}, {'': [-2.6417614534670392e-15, 0.16935502874917555]}, {'': [1.8674520619335967e-15, 0.16905768340085536]}, {'': [1.343654532366856e-15, 0.16570176789433166]}, {'': [5.693451408334137e-16, 0.16846566990854403]}, {'': [-2.1635115351669717e-16, 0.16484525153037957]}, {'': [4.099285014000578e-16, 0.1613584710743772]}, {'': [-3.0744637605004334e-16, 0.16456146036007932]}, {'': [-2.3627823344586665e-16, 0.16287652566803978]}, {'': [5.408778837917429e-17, 0.16950403718133467]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,68e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3959640611499335;  // std dev = 0,499, 119,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=64 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07555272235905118;  // std dev = 3,347, 181,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=12 */
%   | | | else return 0.06338032342949107;  // std dev = 9,004, 497,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=102 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.19717644989544156;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.3846417319227387;  // std dev = 5,173, 110,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=64 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07492951817142325;  // std dev = 3,362, 207,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=12 */
%   | | | else return 0.07151532689274778;  // std dev = 8,912, 461,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=102 */
%   | else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3255824047701569;  // std dev = 0,488, 109,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06327629449108481;  // std dev = 3,356, 196,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=12 */
%   | | | else return 0.05298022392459515;  // std dev = 8,965, 481,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=102 */
%   | else return -0.11231637819360625;  // std dev = 5,58e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,58e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2225002281603752;  // std dev = 0,493, 116,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=64 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0595134883628166;  // std dev = 3,362, 206,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=12 */
%   | | | else return 0.03811490216459157;  // std dev = 9,008, 499,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=102 */
%   | else return -0.10159632948783616;  // std dev = 5,96e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,98e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12158545246619723;  // std dev = 0,495, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04889468464615939;  // std dev = 3,354, 191,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=12 */
%   | | | else return 0.039972661167514856;  // std dev = 8,967, 482,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=102 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694905;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.28261151389391076;  // std dev = 1,29e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.1479546712987179;  // std dev = 5,298, 114,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=64 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04278980659399861;  // std dev = 3,351, 187,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=12 */
%   | | | else return 0.05761918548054392;  // std dev = 8,833, 434,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=102 */
%   | else return -0.08518475138839682;  // std dev = 4,34e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,53e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08832039802883342;  // std dev = 0,491, 121,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=64 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06123925096555678;  // std dev = 4,179, 169,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=20 */
%   | | | else return 0.01962454223639874;  // std dev = 8,636, 540,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=94 */
%   | else return -0.0787767547310917;  // std dev = 3,25e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.16648559111686131;  // std dev = 4,793, 101,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=64 */
%   | | | else return -0.042135352096773306;  // std dev = 3,353, 193,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=12 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0379873014882526;  // std dev = 4,150, 144,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=20 */
%   | | | else return 0.05728790328996858;  // std dev = 7,862, 333,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=82 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08589948518787294;  // std dev = 0,485, 108,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=64 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03731254419288183;  // std dev = 3,352, 190,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=12 */
%   | | | else return 0.03602004753137585;  // std dev = 8,859, 451,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=102 */
%   | else return -0.06842697784420267;  // std dev = 3,07e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.017923050900196028;  // std dev = 5,986, 280,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=72 */
%   | | | else return 0.0939133453439191;  // std dev = 1,797, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0347459863086207;  // std dev = 4,143, 141,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=20 */
%   | | | else return 0.04709002491167198;  // std dev = 7,838, 327,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=82 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */


Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.235641
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 55.068 seconds
Total inference time: 3.664 seconds
AUC ROC: 0.900324


Results scoring model
   AUC ROC   = 0.869643
   AUC PR    = 0.55467
   CLL	      = -0.224516
   Precision = 0.178427 at threshold = 0.5
   Recall    = 0.658683
   F1        = 0.280791


Total scoring time: 7.407 seconds
Refined model CLL: -0.224516


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.235641
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 68.908 seconds
Total inference time: 3.664 seconds
AUC ROC: 0.900324
Total revision time: 68.908
Best scored revision CLL: -0.224516


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 03:40:28
{'F1': 0.318339, 'Inference time': 3.664, 'Precision': [0.210046, 0.5], 'AUC ROC': 0.900324, 'AUC PR': 0.576646, 'parameter_0.6': {'F1': 0.640777, 'Inference time': 2.239, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 3.198, 'CLL': -0.238415}, 'Recall': 0.657143, 'Learning time': 68.908, 'CLL': -0.235641}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5901750788903596;  // std dev = 5,478, 153,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=112 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0643862761680933;  // std dev = 3,186, 142,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=11 */
%   | | | else return 0.5504566274072047;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.06999477747533796;  // std dev = 3,337, 167,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=12 */
%   | | | else return 0.2792015666784554;  // std dev = 10,321, 437,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=184 */
%   else return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.44869190875221104;  // std dev = 0,466, 167,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=113 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09494499437860338;  // std dev = 2,788, 191,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=8 */
%   | | | else return 0.08857151412716782;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.011918815595642373;  // std dev = 3,969, 129,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=20 */
%   | | | else return 0.2360059110015221;  // std dev = 10,372, 443,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=184 */
%   else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.35646904770949334;  // std dev = 0,467, 168,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=113 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.17694535684258642;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.08205849892892984;  // std dev = 2,917, 205,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=9 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.0022861977872456556;  // std dev = 3,990, 136,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=20 */
%   | | | else return 0.19582051920194782;  // std dev = 10,397, 446,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=184 */
%   else return -0.11231637819360625;  // std dev = 5,27e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.25234790974367477;  // std dev = 0,475, 174,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=113 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07029445855357115;  // std dev = 2,742, 170,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=8 */
%   | | | else return 0.19892669433214186;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.02379110516085835;  // std dev = 3,935, 118,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=20 */
%   | | | else return 0.1721512273087691;  // std dev = 10,295, 434,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=184 */
%   else return -0.10159632948783617;  // std dev = 5,58e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.23767472138657614;  // std dev = 5,828, 162,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=113 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.049499679765260624;  // std dev = 3,167, 123,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=11 */
%   | | | else return 0.42007693117321704;  // std dev = 1,760, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06149746295096039;  // std dev = 2,737, 167,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=8 */
%   | | | else return 0.17418185282338675;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.11094559836787471;  // std dev = 0,489, 464,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=184 */
%   else return -0.09269127618926107;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.1487231440826029;  // std dev = 0,470, 169,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=113 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.06306973018208253;  // std dev = 1,796, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return -0.06240948733824508;  // std dev = 2,680, 171,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=8 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.010059351511568965;  // std dev = 3,890, 141,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=20 */
%   | | | else return 0.10011872268747861;  // std dev = 10,429, 450,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=184 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.27166286660352085;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.10446720030873503;  // std dev = 6,146, 169,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=112 */
%   | | | else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.1430082199555459;  // std dev = 1,709, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.061239524430752264;  // std dev = 2,697, 182,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.008886807208327133;  // std dev = 3,878, 144,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=20 */
%   | | | else return 0.07474915793152109;  // std dev = 10,461, 454,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=184 */
%   else return -0.07877675473109166;  // std dev = 3,87e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.17294408809044998;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.11181415658430575;  // std dev = 5,838, 161,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=112 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05160893302881365;  // std dev = 2,711, 177,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=8 */
%   | | | else return 0.0018208510961531066;  // std dev = 1,817, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.004282626866914309;  // std dev = 3,871, 140,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=20 */
%   | | | else return 0.07963198172436736;  // std dev = 10,269, 431,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=184 */
%   else return -0.07324622576333704;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.11148353231097156;  // std dev = 5,608, 158,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=113 */
%   | | | else return -0.04343486667149567;  // std dev = 3,171, 126,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=11 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3480442066153483;  // std dev = 1,735, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.21157183915704988;  // std dev = 1,363, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.04212041696772085;  // std dev = 2,842, 166,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=9 */
%   | | else return 0.06136876885408989;  // std dev = 0,495, 431,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=184 */
%   else return -0.06842697784420267;  // std dev = 3,49e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.10868694013861595;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.09514642058210003;  // std dev = 5,478, 153,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=112 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05058468890348148;  // std dev = 2,710, 188,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=8 */
%   | | | else return 0.11893350673452625;  // std dev = 1,683, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.009954603856926716;  // std dev = 3,779, 144,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=20 */
%   | | | else return 0.028996863358554004;  // std dev = 10,429, 450,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=184 */
%   else return -0.06419184008202625;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */


Results
   AUC ROC   = 0.821656
   AUC PR    = 0.105661
   CLL	      = -0.341642
   Precision = 0.143564 at threshold = 0.5
   Recall    = 0.414286
   F1        = 0.213235


Total learning time: 143.243 seconds
Total inference time: 7.408 seconds
AUC ROC: 0.821656


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 03:42:59
{'F1': 0.213235, 'Recall': 0.414286, 'Inference time': 7.408, 'Precision': [0.143564, 0.5], 'Learning time': 143.243, 'AUC PR': 0.105661, 'CLL': -0.341642, 'AUC ROC': 0.821656}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.5778941580294461;  // std dev = 0,449, 157,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=113 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.058148935099512286;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.08815978973270241;  // std dev = 2,751, 149,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=8 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.0030764713313963105;  // std dev = 4,135, 138,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=20 */
%   | | | else return 0.2811374408466345;  // std dev = 10,304, 435,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=184 */
%   else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.219281
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 14.846 seconds
Total inference time: 2.42 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 03:43:17
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.42, 'Precision': [nan, 0.5], 'Learning time': 14.846, 'AUC PR': 0.097917, 'CLL': -0.219281, 'AUC ROC': 0.821572}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else return 0.07143564838622073;  // std dev = 13,855, 1.144,000 (wgt'ed) examples reached here.  /* #neg=900 #pos=244 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else return 0.0553097740389185;  // std dev = 13,918, 1.184,000 (wgt'ed) examples reached here.  /* #neg=940 #pos=244 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else return 0.050022898839614076;  // std dev = 13,901, 1.173,000 (wgt'ed) examples reached here.  /* #neg=929 #pos=244 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else return 0.048340772404585855;  // std dev = 13,857, 1.145,000 (wgt'ed) examples reached here.  /* #neg=901 #pos=244 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else return 0.04810169044939831;  // std dev = 13,799, 1.111,000 (wgt'ed) examples reached here.  /* #neg=867 #pos=244 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else return 0.03784810912223921;  // std dev = 13,828, 1.128,000 (wgt'ed) examples reached here.  /* #neg=884 #pos=244 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else return 0.04268508456124199;  // std dev = 13,736, 1.076,000 (wgt'ed) examples reached here.  /* #neg=832 #pos=244 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else return 0.026310452196703717;  // std dev = 13,823, 1.125,000 (wgt'ed) examples reached here.  /* #neg=881 #pos=244 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else return 0.024951845556186528;  // std dev = 13,799, 1.111,000 (wgt'ed) examples reached here.  /* #neg=867 #pos=244 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else return 0.015235768458066155;  // std dev = 13,850, 1.141,000 (wgt'ed) examples reached here.  /* #neg=897 #pos=244 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.244539
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 3.783 seconds
Total inference time: 2.018 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.726457
   AUC PR    = 0.486244
   CLL	      = -0.241011
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.452915
   F1        = 0.623457


Total scoring time: 3.493 seconds
Parameter learned model CLL: -0.241011


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 202], 'false': [13.855, 900, 244]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 202], 'false': [13.918, 940, 244]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.36e-07, 0, 202], 'false': [13.901, 929, 244]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.67e-07, 0, 202], 'false': [13.857, 901, 244]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.04e-07, 0, 202], 'false': [13.799, 867, 244]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.42e-07, 0, 202], 'false': [13.828, 884, 244]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.01e-07, 0, 202], 'false': [13.736, 832, 244]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 202], 'false': [13.823, 881, 244]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 202], 'false': [13.799, 867, 244]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.38e-07, 0, 202], 'false': [13.85, 897, 244]}]]
[{'': [5.768762805181012e-15, 0.167795491222066]}, {'': [-3.728590593592605e-15, 0.16361166910154568]}, {'': [2.0049968286299855e-15, 0.1647439657133486]}, {'': [3.5175382958420803e-16, 0.1676886405675061]}, {'': [8.090338080436785e-16, 0.17138815591730738]}, {'': [9.673230313565721e-16, 0.16952115084754482]}, {'': [4.484861327198652e-16, 0.1753430715440529]}, {'': [-8.35415345262494e-17, 0.1698480987654353]}, {'': [-1.187169174846702e-16, 0.1713881559173127]}, {'': [9.45338417007559e-17, 0.16811674799771006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4568750497491913;  // std dev = 6,142, 157,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=94 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07042249347191622;  // std dev = 3,474, 182,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=13 */
%   | | | else return 0.3343394112899885;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.1041152158438844;  // std dev = 3,102, 265,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=10 */
%   | | | else return 0.12285481745245355;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.09603439765457635;  // std dev = 9,072, 454,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=108 */
%   | | | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4429665133458009;  // std dev = 0,475, 145,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=94 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06245459272104316;  // std dev = 3,475, 183,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=13 */
%   | | | else return 0.2290635873669229;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08578377259581302;  // std dev = 3,092, 228,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=10 */
%   | | | else return 0.20252613606398268;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.09489988223853978;  // std dev = 9,007, 434,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=108 */
%   | | | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.23502298817982953;  // std dev = 6,662, 181,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=94 */
%   | | | else return -0.010727881466837046;  // std dev = 4,322, 186,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=23 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05035292056362023;  // std dev = 4,084, 251,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=19 */
%   | | | else return 0.0732816335410626;  // std dev = 9,060, 450,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=108 */
%   | else return -0.11995437041670952;  // std dev = 0,204, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.23300158596392442;  // std dev = 0,492, 165,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=94 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.048267826274524764;  // std dev = 4,099, 259,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=19 */
%   | | | else return 0.0483907393558282;  // std dev = 10,035, 613,000 (wgt'ed) examples reached here.  /* #neg=482 #pos=131 */
%   | else return -0.10939194353223304;  // std dev = 0,175, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1708226146807384;  // std dev = 0,494, 167,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=94 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04475282215264543;  // std dev = 4,111, 260,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=19 */
%   | | | else return 0.034970176550377215;  // std dev = 10,071, 635,000 (wgt'ed) examples reached here.  /* #neg=504 #pos=131 */
%   | else return -0.1013848368430392;  // std dev = 0,230, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.1503058771078202;  // std dev = 6,213, 162,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=94 */
%   | | | else return -0.023138386755514228;  // std dev = 4,333, 190,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=23 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.036805881000255676;  // std dev = 4,097, 256,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=19 */
%   | | | else return 0.04773371955667092;  // std dev = 9,076, 455,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=108 */
%   | else return -0.0945336869320852;  // std dev = 0,222, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12146246015885209;  // std dev = 0,486, 160,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=94 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.031036515167303186;  // std dev = 4,113, 234,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=19 */
%   | | | else return 0.029963520868578803;  // std dev = 10,036, 619,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=131 */
%   | else return -0.08827060607740014;  // std dev = 0,220, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.07764543569144557;  // std dev = 0,490, 163,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=94 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.028744730288108214;  // std dev = 4,105, 245,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=19 */
%   | | | else return 0.025492841924367005;  // std dev = 10,034, 619,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=131 */
%   | else return -0.08141533092872881;  // std dev = 0,238, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.37504735291302477;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.08837821513348829;  // std dev = 6,052, 154,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=94 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.026295246754376635;  // std dev = 4,102, 250,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=19 */
%   | | | else return 0.02693850451305972;  // std dev = 9,985, 610,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=131 */
%   | else return -0.07320366187556207;  // std dev = 0,183, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06638358177864233;  // std dev = 0,488, 154,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=94 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03189109347871782;  // std dev = 4,124, 277,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=19 */
%   | | | else return 0.03142798884746777;  // std dev = 9,937, 581,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=131 */
%   | else return -0.06987367342653489;  // std dev = 0,198, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */


Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.23601
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 65.956 seconds
Total inference time: 3.731 seconds
AUC ROC: 0.900324


Results scoring model
   AUC ROC   = 0.880196
   AUC PR    = 0.550094
   CLL	      = -0.225494
   Precision = 0.181373 at threshold = 0.5
   Recall    = 0.663677
   F1        = 0.284889


Total scoring time: 9.258 seconds
Refined model CLL: -0.225494


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.23601
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 82.49 seconds
Total inference time: 3.731 seconds
AUC ROC: 0.900324
Total revision time: 82.49
Best scored revision CLL: -0.225494


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 03:44:46
{'F1': 0.318339, 'Inference time': 3.731, 'Precision': [0.210046, 0.5], 'AUC ROC': 0.900324, 'parameter_0.8': {'F1': 0.640777, 'Inference time': 2.018, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 3.783, 'CLL': -0.244539}, 'AUC PR': 0.576646, 'Recall': 0.657143, 'Learning time': 82.49, 'CLL': -0.23601}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5425933795439534;  // std dev = 0,465, 225,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=154 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09856102161044472;  // std dev = 3,093, 231,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=10 */
%   | | | else return 0.23314893509951237;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.014779241696068047;  // std dev = 4,481, 181,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=23 */
%   | | | else return 0.27831700232639855;  // std dev = 12,040, 595,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=250 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4754119280853746;  // std dev = 0,460, 221,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=154 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08502255623687902;  // std dev = 3,090, 221,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=10 */
%   | | | else return 0.077334239218108;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.009379684407809777;  // std dev = 4,472, 176,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=23 */
%   | | | else return 0.2704264646416013;  // std dev = 11,730, 556,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=250 */
%   else return -0.12544463852839136;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.37980355019862044;  // std dev = 0,461, 222,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=154 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0619509686267053;  // std dev = 3,470, 165,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=13 */
%   | | | else return 0.4514171511529022;  // std dev = 2,019, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07820230179628467;  // std dev = 3,094, 234,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=10 */
%   | | | else return 0.13743431111320203;  // std dev = 2,471, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else return 0.2430666454971972;  // std dev = 0,499, 537,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=250 */
%   else return -0.1123163781936062;  // std dev = 8,16e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2836584359853791;  // std dev = 0,465, 225,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=154 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06633938993293961;  // std dev = 3,090, 212,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=10 */
%   | | | else return 0.22742070538134299;  // std dev = 2,251, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return 0.12270758504178497;  // std dev = 0,465, 764,000 (wgt'ed) examples reached here.  /* #neg=491 #pos=273 */
%   else return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2704014702922176;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2445518007358206;  // std dev = 6,604, 214,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=153 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07131809975667454;  // std dev = 3,474, 170,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=13 */
%   | | | else return 0.3783654664333403;  // std dev = 1,967, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0623402341436473;  // std dev = 3,092, 227,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=10 */
%   | | | else return 0.28426417467348575;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else return 0.13824959830723363;  // std dev = 0,495, 581,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=250 */
%   else return -0.09269127618926089;  // std dev = 6,58e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.18386072859410035;  // std dev = 0,450, 216,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=154 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.05714581064838418;  // std dev = 1,590, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.05473169463406052;  // std dev = 3,578, 237,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=16 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.010670799909298232;  // std dev = 4,185, 165,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=23 */
%   | | | else return 0.10519658093579956;  // std dev = 11,973, 586,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=250 */
%   else return -0.08518475138839682;  // std dev = 5,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.20087413815630406;  // std dev = 0,921, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09812485174841995;  // std dev = 7,017, 228,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=153 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.05604588341728601;  // std dev = 3,100, 238,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=10 */
%   | | | else return 0.14632913074030604;  // std dev = 2,207, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06378923216401994;  // std dev = 3,472, 179,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=13 */
%   | | | else return 0.4215925074154386;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0.08110796210092085;  // std dev = 0,494, 587,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=250 */
%   else return -0.0787767547310916;  // std dev = 5,58e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07858705821224267;  // std dev = 0,465, 228,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=154 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.09907024546653007;  // std dev = 1,550, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.05659973458004901;  // std dev = 3,601, 262,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=16 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.029825613310536406;  // std dev = 4,150, 185,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=23 */
%   | | | else return 0.07603458272282107;  // std dev = 11,839, 569,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=250 */
%   else return -0.07324622576333707;  // std dev = 4,28e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.313905573240389;  // std dev = 0,980, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.08903012960032032;  // std dev = 0,455, 216,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=153 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.057333517685747064;  // std dev = 1,817, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return -0.046819797421890574;  // std dev = 3,439, 230,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=15 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.018774185108911556;  // std dev = 4,114, 177,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=23 */
%   | | | else return 0.029411785496919373;  // std dev = 12,140, 609,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=250 */
%   else return -0.06842697784420267;  // std dev = 4,71e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.1476842533951796;  // std dev = 0,927, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.06827395729470469;  // std dev = 0,455, 216,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=153 */
%   | else return 0.017840318347593063;  // std dev = 0,414, 1.012,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=292 */
%   else return -0.06419184008202626;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */


Results
   AUC ROC   = 0.822663
   AUC PR    = 0.110501
   CLL	      = -0.344104
   Precision = 0.143564 at threshold = 0.5
   Recall    = 0.414286
   F1        = 0.213235


Total learning time: 185.024 seconds
Total inference time: 7.091 seconds
AUC ROC: 0.822663


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 03:47:59
{'F1': 0.213235, 'Recall': 0.414286, 'Inference time': 7.091, 'Precision': [0.143564, 0.5], 'Learning time': 185.024, 'AUC PR': 0.110501, 'CLL': -0.344104, 'AUC ROC': 0.822663}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5599837974848302;  // std dev = 0,457, 218,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=153 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09468125357973317;  // std dev = 3,087, 212,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=10 */
%   | | | else return 0.1795775065280838;  // std dev = 2,471, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 1.2424374148735083E-4;  // std dev = 4,442, 162,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=23 */
%   | | | else return 0.29293154379516;  // std dev = 11,887, 575,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=250 */
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */


Results
   AUC ROC   = 0.821656
   AUC PR    = 0.105661
   CLL	      = -0.216956
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 16.426 seconds
Total inference time: 1.841 seconds
AUC ROC: 0.821656


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 03:48:17
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.841, 'Precision': [nan, 0.5], 'Learning time': 16.426, 'AUC PR': 0.105661, 'CLL': -0.216956, 'AUC ROC': 0.821656}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.07592977589895604;  // std dev = 15,722, 1.451,000 (wgt'ed) examples reached here.  /* #neg=1.135 #pos=316 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.05613759088845473;  // std dev = 15,825, 1.523,000 (wgt'ed) examples reached here.  /* #neg=1.207 #pos=316 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.06013655791230547;  // std dev = 15,711, 1.444,000 (wgt'ed) examples reached here.  /* #neg=1.128 #pos=316 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.05865835188601584;  // std dev = 15,644, 1.401,000 (wgt'ed) examples reached here.  /* #neg=1.085 #pos=316 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.05034233371765274;  // std dev = 15,644, 1.401,000 (wgt'ed) examples reached here.  /* #neg=1.085 #pos=316 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.03134193435587379;  // std dev = 15,760, 1.477,000 (wgt'ed) examples reached here.  /* #neg=1.161 #pos=316 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.03181009839983149;  // std dev = 15,708, 1.442,000 (wgt'ed) examples reached here.  /* #neg=1.126 #pos=316 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.025409947536149984;  // std dev = 15,724, 1.452,000 (wgt'ed) examples reached here.  /* #neg=1.136 #pos=316 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.02791623099177926;  // std dev = 15,658, 1.410,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=316 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.02003328249901891;  // std dev = 15,693, 1.432,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=316 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.247757
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 4.249 seconds
Total inference time: 2.3 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.716846
   AUC PR    = 0.467514
   CLL	      = -0.244958
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.605


Total scoring time: 3.83 seconds
Parameter learned model CLL: -0.244958


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 242], 'false': [15.722, 1135, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.825, 1207, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.92e-07, 0, 242], 'false': [15.711, 1128, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.644, 1085, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.67e-07, 0, 242], 'false': [15.644, 1085, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 242], 'false': [15.76, 1161, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 242], 'false': [15.708, 1126, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.23e-07, 0, 242], 'false': [15.724, 1136, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.658, 1094, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 242], 'false': [15.693, 1116, 316]}]]
[{'': [4.8152482919279514e-15, 0.17035234618013487]}, {'': [-4.2280228904733235e-15, 0.16443510729979668]}, {'': [9.98283182472868e-16, 0.1709471228735283]}, {'': [-2.055288905091199e-16, 0.17467894096242656]}, {'': [2.9361270072731413e-16, 0.17467894096242256]}, {'': [3.8169651094550837e-16, 0.16817379003441432]}, {'': [3.5233524087277696e-16, 0.1711177071450731]}, {'': [6.239269890455425e-17, 0.1702676653841284]}, {'': [-1.7249746167729704e-16, 0.17388662542126038]}, {'': [2.9361270072731413e-17, 0.1719749695702345]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4511137592201122;  // std dev = 0,491, 199,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=118 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08279594679025166;  // std dev = 3,757, 254,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=15 */
%   | | | else return 0.2285193054698827;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09482912132682048;  // std dev = 3,781, 319,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=15 */
%   | | | else return 0.21529179224236947;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.1011702815691303;  // std dev = 10,585, 609,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=148 */
%   | | | else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4117485296671863;  // std dev = 0,486, 191,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05242004875051101;  // std dev = 4,730, 306,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=25 */
%   | | | else return 0.0639166395777049;  // std dev = 11,604, 812,000 (wgt'ed) examples reached here.  /* #neg=639 #pos=173 */
%   | else return -0.13211989878040745;  // std dev = 0,133, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2814788740183523;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.323649331109855;  // std dev = 6,826, 195,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.050263581537399564;  // std dev = 4,743, 321,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=25 */
%   | | | else return 0.06368716156244075;  // std dev = 11,542, 782,000 (wgt'ed) examples reached here.  /* #neg=609 #pos=173 */
%   | else return -0.120255831287639;  // std dev = 0,152, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.21264453044727893;  // std dev = 0,492, 211,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.044995583361167386;  // std dev = 4,747, 320,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=25 */
%   | | | else return 0.05901667010361844;  // std dev = 11,508, 769,000 (wgt'ed) examples reached here.  /* #neg=596 #pos=173 */
%   | else return -0.10482276938476043;  // std dev = 0,103, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1812435463732121;  // std dev = 0,490, 204,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04191618491022506;  // std dev = 4,753, 327,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=25 */
%   | | | else return 0.042929590412788314;  // std dev = 11,563, 797,000 (wgt'ed) examples reached here.  /* #neg=624 #pos=173 */
%   | else return -0.09615686826943258;  // std dev = 0,113, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.14000201010640848;  // std dev = 6,950, 204,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=118 */
%   | | | else return -0.06005007660762823;  // std dev = 4,652, 248,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=25 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.031437276039318146;  // std dev = 4,737, 304,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=25 */
%   | | | else return 0.0777063700359024;  // std dev = 10,431, 559,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=148 */
%   | else return -0.08664316684568019;  // std dev = 0,071, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08859007036277704;  // std dev = 0,494, 208,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03235393730216851;  // std dev = 4,747, 322,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=25 */
%   | | | else return 0.03748312520484549;  // std dev = 11,478, 770,000 (wgt'ed) examples reached here.  /* #neg=597 #pos=173 */
%   | else return -0.08162093706220189;  // std dev = 0,089, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08337827223399887;  // std dev = 0,489, 203,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03197710961051169;  // std dev = 4,758, 331,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=25 */
%   | | | else return 0.03822838619809124;  // std dev = 11,435, 744,000 (wgt'ed) examples reached here.  /* #neg=571 #pos=173 */
%   | else return -0.07552876039565011;  // std dev = 0,084, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.07286505022543854;  // std dev = 0,486, 200,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=118 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05238484940323709;  // std dev = 4,621, 228,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=25 */
%   | | | else return 0.025284042498231834;  // std dev = 11,522, 866,000 (wgt'ed) examples reached here.  /* #neg=693 #pos=173 */
%   | else return -0.07061171493205276;  // std dev = 0,093, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.05775776390390446;  // std dev = 0,485, 199,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=118 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0409227772635449;  // std dev = 4,612, 220,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=25 */
%   | | | else return 0.020526836528246918;  // std dev = 11,519, 878,000 (wgt'ed) examples reached here.  /* #neg=705 #pos=173 */
%   | else return -0.06658879838507918;  // std dev = 0,086, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */


Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.246321
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 78.59 seconds
Total inference time: 3.513 seconds
AUC ROC: 0.900324


Results scoring model
   AUC ROC   = 0.869371
   AUC PR    = 0.529436
   CLL	      = -0.230021
   Precision = 0.181178 at threshold = 0.5
   Recall    = 0.645161
   F1        = 0.282908


Total scoring time: 9.695 seconds
Refined model CLL: -0.230021


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.246321
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 96.364 seconds
Total inference time: 3.513 seconds
AUC ROC: 0.900324
Total revision time: 96.364
Best scored revision CLL: -0.230021


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 03:50:00
{'parameter_1.0': {'F1': 0.640777, 'Inference time': 2.3, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 4.249, 'CLL': -0.247757}, 'F1': 0.318339, 'Inference time': 3.513, 'Precision': [0.210046, 0.5], 'AUC ROC': 0.900324, 'AUC PR': 0.576646, 'Recall': 0.657143, 'Learning time': 96.364, 'CLL': -0.246321}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5611564538965012;  // std dev = 0,457, 266,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09408036426354549;  // std dev = 3,779, 314,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=15 */
%   | | | else return 0.17064893509951234;  // std dev = 2,622, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03024392204334513;  // std dev = 4,713, 224,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=25 */
%   | | | else return 0.2942902394473338;  // std dev = 13,454, 736,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=321 */
%   else return -0.1418510649004877;  // std dev = 5,16e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4480245230865109;  // std dev = 0,469, 278,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07958538929205243;  // std dev = 3,773, 293,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=15 */
%   | | | else return 0.1586613669412194;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.025087045735164577;  // std dev = 4,709, 221,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=25 */
%   | | | else return 0.2599651007614669;  // std dev = 13,389, 727,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=321 */
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.34185331749295544;  // std dev = 0,476, 286,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07199569350375822;  // std dev = 3,775, 300,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=15 */
%   | | | else return 0.10727984114868869;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.010248194457758658;  // std dev = 4,677, 200,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=25 */
%   | | | else return 0.20116554688955177;  // std dev = 13,591, 756,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=321 */
%   else return -0.1123163781936062;  // std dev = 8,94e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.6103932930484091;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.38960670695159094;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.3376660203211335;  // std dev = 0,445, 253,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=184 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06092007394117109;  // std dev = 3,768, 280,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=15 */
%   | | | else return 0.09934363294677714;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.017775009735272383;  // std dev = 4,700, 215,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=25 */
%   | | | else return 0.17234713742942473;  // std dev = 13,496, 742,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=321 */
%   else return -0.10159632948783667;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.21015130220491285;  // std dev = 0,462, 275,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05878990185850331;  // std dev = 3,776, 302,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=15 */
%   | | | else return 0.04999556159928562;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.01352066894008006;  // std dev = 4,694, 211,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=25 */
%   | | | else return 0.1605290622697878;  // std dev = 13,223, 705,000 (wgt'ed) examples reached here.  /* #neg=384 #pos=321 */
%   else return -0.09269127618926087;  // std dev = 6,83e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.19030349604405372;  // std dev = 0,449, 262,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04498847516777105;  // std dev = 3,759, 259,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=15 */
%   | | | else return 0.11584599942278916;  // std dev = 2,560, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.014183519969905382;  // std dev = 4,700, 215,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=25 */
%   | | | else return 0.10870366227825032;  // std dev = 13,432, 733,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=321 */
%   else return -0.0851847513883968;  // std dev = 6,91e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10945982360452107;  // std dev = 0,464, 275,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05496436768985874;  // std dev = 3,787, 342,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=15 */
%   | | | else return 0.07250795827592542;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.00981437844760541;  // std dev = 4,693, 210,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=25 */
%   | | | else return 0.05578096293253977;  // std dev = 13,768, 784,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=321 */
%   else return -0.07877675473109157;  // std dev = 6,50e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.07508021257082352;  // std dev = 0,465, 279,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=187 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return -0.04137157342877591;  // std dev = 4,681, 336,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=25 */
%   | | | else return -0.09403579696443;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05044468852552959;  // std dev = 3,720, 194,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=15 */
%   | | | else return 0.4972357238456044;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else return 0.08752108947979757;  // std dev = 0,498, 707,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=321 */
%   else return -0.07324622576333724;  // std dev = 0,000, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.10362504036445193;  // std dev = 0,445, 261,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=187 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.043197750517136;  // std dev = 3,780, 317,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=15 */
%   | | | else return 0.05654279256063436;  // std dev = 2,622, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05467988491147129;  // std dev = 3,740, 222,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=15 */
%   | | | else return 0.43090795258429015;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else return 0.06441913400090774;  // std dev = 0,498, 711,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=321 */
%   else return -0.06842697784420262;  // std dev = 6,99e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.060580752486532774;  // std dev = 0,456, 267,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.12721148341366711;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.03193238134177979;  // std dev = 4,316, 289,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=22 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.014977618718832832;  // std dev = 4,474, 222,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=25 */
%   | | | else return 0.045876659908976096;  // std dev = 13,307, 716,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=321 */
%   else return -0.06419184008202626;  // std dev = 0,000, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */


Results
   AUC ROC   = 0.827376
   AUC PR    = 0.148647
   CLL	      = -0.358116
   Precision = 0.151961 at threshold = 0.5
   Recall    = 0.442857
   F1        = 0.226277


Total learning time: 217.952 seconds
Total inference time: 5.041 seconds
AUC ROC: 0.827376


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 03:53:44
{'F1': 0.226277, 'Recall': 0.442857, 'Inference time': 5.041, 'Precision': [0.151961, 0.5], 'Learning time': 217.952, 'AUC PR': 0.148647, 'CLL': -0.358116, 'AUC ROC': 0.827376}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.5741022424925049;  // std dev = 0,451, 257,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=184 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08994795071363686;  // std dev = 3,771, 289,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=15 */
%   | | | else return 0.274815601766179;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.01685106490048803;  // std dev = 4,677, 200,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=25 */
%   | | | else return 0.2996895128161514;  // std dev = 13,389, 727,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=321 */
%   else return -0.14185106490048777;  // std dev = 2,98e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */


Results
   AUC ROC   = 0.827416
   AUC PR    = 0.150916
   CLL	      = -0.215815
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.311 seconds
Total inference time: 2.203 seconds
AUC ROC: 0.827416


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 03:54:07
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.203, 'Precision': [nan, 0.5], 'Learning time': 20.311, 'AUC PR': 0.150916, 'CLL': -0.215815, 'AUC ROC': 0.827416}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 585
Target train neg examples: 24169

Target test facts examples: 9306
Target test pos	 examples: 113
Target test neg examples: 3827

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.09234967859393692;  // std dev = 6,946, 269,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=63 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.05514054322409003;  // std dev = 7,061, 302,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=63 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.044441692057514685;  // std dev = 7,076, 307,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=63 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.06391222356705405;  // std dev = 6,961, 273,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=63 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.019114493057229235;  // std dev = 7,121, 323,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=63 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.04547893686797727;  // std dev = 6,991, 281,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=63 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.03174785895429791;  // std dev = 7,022, 290,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=63 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.025415291526251577;  // std dev = 7,029, 292,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=63 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.00959776777165247;  // std dev = 7,082, 309,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=63 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.015616835964809466;  // std dev = 7,048, 298,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=63 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.242501
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 2.338 seconds
Total inference time: 1.753 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.730769
   AUC PR    = 0.49584
   CLL	      = -0.237731
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.461538
   F1        = 0.631579


Total scoring time: 2.527 seconds
Parameter learned model CLL: -0.237731


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.946, 206, 63]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [7.061, 239, 63]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 54], 'false': [7.076, 244, 63]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.961, 210, 63]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [7.121, 260, 63]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.991, 218, 63]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [7.022, 227, 63]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [7.029, 229, 63]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [7.082, 246, 63]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.05e-08, 0, 54], 'false': [7.048, 235, 63]}]]
[{'': [0.0, 0.1793507552410836]}, {'': [-3.289549702593056e-16, 0.16509144335774822]}, {'': [1.3158198810372225e-16, 0.1630998737387143]}, {'': [-3.618504672852362e-16, 0.17751479289940905]}, {'': [-8.22387425648264e-17, 0.15700332601673503]}, {'': [-3.289549702593056e-17, 0.17393396740162984]}, {'': [0.0, 0.1700475624256819]}, {'': [-4.5231308410654523e-17, 0.16920388440607773]}, {'': [-2.05596856412066e-17, 0.1623150155528333]}, {'': [4.7287276974775186e-17, 0.16671546326742176]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.39148226843284467;  // std dev = 3,347, 45,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | | | else return -0.0585177315671544;  // std dev = 1,915, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | else return 0.04139500839794065;  // std dev = 0,387, 191,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=35 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.38889789937647046;  // std dev = 0,493, 41,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10603502233063175;  // std dev = 0,985, 35,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
%   | | | else return 0.2936955125995545;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09908136730391798;  // std dev = 1,690, 64,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=3 */
%   | | | else return 0.05303485914974475;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(B, J), haswordvenue(K, J) )
%   | | | then return 0.140271160097169;  // std dev = 4,700, 108,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return -0.132618139302346;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2348985407711497;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0769587402561681;  // std dev = 1,934, 67,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=4 */
%   | | | else return 0.043843785716063885;  // std dev = 5,232, 177,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=35 */
%   | else return -0.11846556174995056;  // std dev = 0,045, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.3133032328029999;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.20843589763178305;  // std dev = 3,388, 46,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08933374768035172;  // std dev = 1,700, 83,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=3 */
%   | | | else return -0.01535637050245139;  // std dev = 0,932, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09778427380492875;  // std dev = 0,985, 35,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
%   | | | else return 0.3206825146775554;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.15820999208380587;  // std dev = 4,558, 94,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | | else return -0.10954332947023095;  // std dev = 0,039, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3099254936229472;  // std dev = 0,467, 36,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09494765620665369;  // std dev = 0,989, 46,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
%   | | | else return 0.368577421585129;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07953955610032608;  // std dev = 1,699, 83,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=3 */
%   | | | else return 0.004357342220008299;  // std dev = 0,922, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07431980111079753;  // std dev = 4,759, 115,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return -0.09932233048370194;  // std dev = 0,036, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.17226024652129618;  // std dev = 3,056, 40,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | | | else return -0.04915873785844276;  // std dev = 1,665, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05674590321940333;  // std dev = 1,934, 73,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=4 */
%   | | | else return 0.05114545277040753;  // std dev = 4,795, 120,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | else return -0.10959356311930825;  // std dev = 0,177, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16170567429228194;  // std dev = 0,474, 38,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=24 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.044203757044997224;  // std dev = 1,928, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | | | else return 0.013390939531804116;  // std dev = 5,119, 175,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=35 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then return -0.15966482477601698;  // std dev = 0,153, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0839131428242123;  // std dev = 0,027, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.07160533272565837;  // std dev = 0,489, 41,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03604830045738318;  // std dev = 1,926, 60,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=4 */
%   | | | else return 0.04066997024988075;  // std dev = 5,032, 148,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=35 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then return -0.1403240882014965;  // std dev = 0,099, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0793461282391457;  // std dev = 0,023, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1355096302865301;  // std dev = 0,467, 36,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04250006833077166;  // std dev = 1,932, 73,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=4 */
%   | | | else return 0.006014291310608449;  // std dev = 5,125, 170,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=35 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then return -0.08782692459430597;  // std dev = 0,046, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06863115475359743;  // std dev = 0,017, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( author(G, E), title(G, A) )
%   | | | then return -0.18449159885944053;  // std dev = 0,828, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.09105313875057044;  // std dev = 3,632, 99,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   | | else return 0.1944065630859555;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return -0.020158551061209746;  // std dev = 0,935, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.029763580157330483;  // std dev = 1,675, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.02394799512981276;  // std dev = 4,822, 124,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=31 */
%   | | | else return -0.07140003425274498;  // std dev = 0,024, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.862246
   AUC PR    = 0.539142
   CLL	      = -0.281261
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 23.62 seconds
Total inference time: 2.965 seconds
AUC ROC: 0.862246


Results scoring model
   AUC ROC   = 0.886937
   AUC PR    = 0.559173
   CLL	      = -0.226754
   Precision = 0.186603 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.291589


Total scoring time: 5.243 seconds
Refined model CLL: -0.226754


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.862246
   AUC PR    = 0.539142
   CLL	      = -0.281261
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 33.728 seconds
Total inference time: 2.965 seconds
AUC ROC: 0.862246
Total revision time: 33.728
Best scored revision CLL: -0.226754


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 03:54:46
{'parameter_0.2': {'F1': 0.604938, 'Inference time': 1.753, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 2.338, 'CLL': -0.242501}, 'F1': 0.305499, 'Inference time': 2.965, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.862246, 'AUC PR': 0.539142, 'Recall': 0.663717, 'Learning time': 33.728, 'CLL': -0.281261}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5188632208137969;  // std dev = 0,473, 56,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=37 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.09773341784166417;  // std dev = 1,693, 68,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0716756263039965;  // std dev = 1,929, 57,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=4 */
%   | | | else return 0.3138451376311591;  // std dev = 6,260, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.569877261811627;  // std dev = 0,409, 47,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.11092851085344152;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.08998837257237065;  // std dev = 1,698, 72,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.019062243350805693;  // std dev = 1,882, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return 0.249235376661907;  // std dev = 6,385, 166,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=72 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.368792614898662;  // std dev = 0,459, 53,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=37 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.015611754503211395;  // std dev = 0,919, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.07901694706656859;  // std dev = 1,698, 69,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02305225279478829;  // std dev = 1,889, 37,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.20876229079021402;  // std dev = 6,385, 166,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=72 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.23391244532427213;  // std dev = 0,477, 57,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.006297394213497188;  // std dev = 0,907, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.07311125258563782;  // std dev = 1,701, 72,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04855565005984226;  // std dev = 1,918, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return 0.17827626509556183;  // std dev = 6,340, 163,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=72 */
%   else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.18782628109174931;  // std dev = 0,473, 56,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=37 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05953920891307135;  // std dev = 1,695, 62,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=3 */
%   | | | else return 0.010398713806977926;  // std dev = 0,893, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03230431441712296;  // std dev = 1,907, 44,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=4 */
%   | | | else return 0.1395665544340277;  // std dev = 6,355, 164,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=72 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.10731105960473175;  // std dev = 0,484, 59,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.055168107473826666;  // std dev = 1,697, 62,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=3 */
%   | | | else return 0.07870822216506126;  // std dev = 0,856, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09198799611647501;  // std dev = 0,986, 36,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
%   | | | else return 0.6302342261057472;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.0990420501271439;  // std dev = 0,495, 168,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=72 */
%   else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.11420341917048014;  // std dev = 0,473, 56,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=37 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.018999402541712136;  // std dev = 0,898, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.052480691252553203;  // std dev = 1,702, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0865928044817974;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | | | else return 0.7964764535282377;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1127471110460064;  // std dev = 0,499, 155,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=72 */
%   else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.07448808323223374;  // std dev = 0,477, 57,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   | else if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return -0.11178466456928708;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.040089350669360244;  // std dev = 1,690, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | else return 0.07498709892863063;  // std dev = 0,851, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then return -0.08102289134117877;  // std dev = 0,140, 50,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
%   | | else return 0.46040411979265206;  // std dev = 0,616, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then return 0.09270092382027367;  // std dev = 0,499, 153,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=72 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.03884610879131528;  // std dev = 3,642, 57,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=36 */
%   | | | else return -0.07144377930069158;  // std dev = 0,989, 41,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
%   | | else return 0.3029397883788347;  // std dev = 0,874, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.01663328857256459;  // std dev = 0,451, 221,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=76 */
%   else return -0.07242579207955169;  // std dev = 0,042, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.2687421500897104;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.10260560442561913;  // std dev = 0,455, 51,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.043422393393481265;  // std dev = 1,698, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | | | else return 0.005806331313705083;  // std dev = 0,884, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.03498487769092004;  // std dev = 1,404, 40,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | | else return 0.03245157065848156;  // std dev = 6,370, 165,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=72 */
%   else return -0.06881658385640678;  // std dev = 0,054, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.75423
   AUC PR    = 0.077166
   CLL	      = -0.406511
   Precision = 0.046973 at threshold = 0.5
   Recall    = 0.39823
   F1        = 0.084034


Total learning time: 120.69 seconds
Total inference time: 4.041 seconds
AUC ROC: 0.75423


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 03:56:51
{'F1': 0.084034, 'Recall': 0.39823, 'Inference time': 4.041, 'Precision': [0.046973, 0.5], 'Learning time': 120.69, 'AUC PR': 0.077166, 'CLL': -0.406511, 'AUC ROC': 0.75423}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.5373942181183792;  // std dev = 0,467, 53,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=36 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09569721874664155;  // std dev = 1,692, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   | | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.06341969235146812;  // std dev = 1,920, 51,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | | else return 0.3196873966379751;  // std dev = 6,226, 156,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=72 */
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.833652
   AUC PR    = 0.098313
   CLL	      = -0.210013
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.02 seconds
Total inference time: 1.715 seconds
AUC ROC: 0.833652


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 03:57:01
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.715, 'Precision': [nan, 0.5], 'Learning time': 8.02, 'AUC PR': 0.098313, 'CLL': -0.210013, 'AUC ROC': 0.833652}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.07208734676887726;  // std dev = 10,186, 617,000 (wgt'ed) examples reached here.  /* #neg=485 #pos=132 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.0819494637519902;  // std dev = 10,063, 567,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=132 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.06207353084884081;  // std dev = 10,123, 590,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=132 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,60e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.04721761576841879;  // std dev = 10,163, 607,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=132 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.053346909437020806;  // std dev = 10,079, 573,000 (wgt'ed) examples reached here.  /* #neg=441 #pos=132 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.05078858292284264;  // std dev = 10,044, 560,000 (wgt'ed) examples reached here.  /* #neg=428 #pos=132 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.0344907243265111;  // std dev = 10,100, 581,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=132 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 5,58e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.020416653914817826;  // std dev = 10,156, 604,000 (wgt'ed) examples reached here.  /* #neg=472 #pos=132 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.026983667427557378;  // std dev = 10,092, 578,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=132 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.03777757572740175;  // std dev = 9,993, 542,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=132 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.258208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 2.934 seconds
Total inference time: 1.804 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.717949
   AUC PR    = 0.470245
   CLL	      = -0.254623
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.435897
   F1        = 0.607143


Total scoring time: 2.773 seconds
Parameter learned model CLL: -0.254623


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.3e-07, 0, 102], 'false': [10.186, 485, 132]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [10.063, 435, 132]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.3e-07, 0, 102], 'false': [10.123, 458, 132]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.6e-07, 0, 102], 'false': [10.163, 475, 132]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [10.079, 441, 132]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [10.044, 428, 132]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 102], 'false': [10.1, 449, 132]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.58e-08, 0, 102], 'false': [10.156, 472, 132]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [10.092, 446, 132]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.66e-08, 0, 102], 'false': [9.993, 410, 132]}]]
[{'': [1.8111873656630004e-15, 0.16816876768175756]}, {'': [-2.7864421010200007e-16, 0.17860642199266813]}, {'': [1.8111873656630004e-15, 0.17367423154266115]}, {'': [6.617799989922502e-16, 0.17017280546289792]}, {'': [-2.612289469706251e-16, 0.17729777144266815]}, {'': [-4.353815782843751e-17, 0.18015306122448665]}, {'': [2.0898315757650005e-16, 0.17557715494384735]}, {'': [3.047671047990626e-17, 0.17078198324635302]}, {'': [-1.2190684191962504e-16, 0.17621915446414735]}, {'': [4.353815782843751e-17, 0.18422951757193345]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.45365455307704117;  // std dev = 0,491, 89,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=53 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11715970687579633;  // std dev = 1,397, 81,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=2 */
%   | | | else return 0.274815601766179;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09929787341112595;  // std dev = 2,397, 141,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=6 */
%   | | | else return 0.07243464938522651;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.12285481745245463;  // std dev = 6,806, 238,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=63 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.39580423851116925;  // std dev = 0,489, 88,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=53 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0627295335873403;  // std dev = 2,882, 128,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=9 */
%   | | | else return 0.04587936775213132;  // std dev = 7,431, 357,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=70 */
%   | else return -0.13401263723023804;  // std dev = 0,100, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.26761575895762124;  // std dev = 0,498, 97,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=53 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06481893072461783;  // std dev = 2,895, 149,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=9 */
%   | | | else return 0.0547511475667555;  // std dev = 7,362, 331,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=70 */
%   | else return -0.11725422099532956;  // std dev = 0,070, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,60e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.228221101570896;  // std dev = 0,496, 94,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=53 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06487109409633549;  // std dev = 2,905, 170,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=9 */
%   | | | else return 0.035379761171347494;  // std dev = 7,413, 352,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=70 */
%   | else return -0.10570553836365129;  // std dev = 0,058, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1638404842211381;  // std dev = 0,497, 96,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=53 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07775801476737054;  // std dev = 2,455, 100,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=7 */
%   | | | else return 0.03606989845847435;  // std dev = 7,520, 379,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=72 */
%   | else return -0.09463127760864574;  // std dev = 0,043, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12429094122639313;  // std dev = 0,497, 96,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=53 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04990846761884071;  // std dev = 2,887, 139,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=9 */
%   | | | else return 0.035947339894087924;  // std dev = 7,368, 338,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=70 */
%   | else return -0.09197851038366539;  // std dev = 0,077, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10537699630230961;  // std dev = 0,496, 94,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=53 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.038911746592918496;  // std dev = 2,879, 126,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=9 */
%   | | | else return 0.03537083644861815;  // std dev = 7,341, 332,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=70 */
%   | else return -0.08170579801759227;  // std dev = 0,058, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 5,58e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.09138116536002346;  // std dev = 4,740, 92,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=53 */
%   | | | else return -0.05086694142985117;  // std dev = 2,903, 162,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06203764970760936;  // std dev = 2,434, 82,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=7 */
%   | | | else return 0.05649630195524418;  // std dev = 6,878, 253,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=63 */
%   | else return -0.07357603257204946;  // std dev = 0,032, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.5075457368746736;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.074871845542908;  // std dev = 4,704, 91,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=53 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.05931950874376665;  // std dev = 2,399, 152,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=6 */
%   | | | else return 0.13730569896887626;  // std dev = 1,493, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10821902634601756;  // std dev = 1,398, 82,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=2 */
%   | | | else return 0.3667287873922189;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.055691917324565264;  // std dev = 6,841, 245,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=63 */
%   | | | else return -0.06656359181768191;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.3828755986856395;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2098709698307861;  // std dev = 3,740, 72,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=53 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09541644519922872;  // std dev = 1,396, 80,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=2 */
%   | | | else return 0.4064677293997141;  // std dev = 1,254, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.04661267399954648;  // std dev = 2,389, 129,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=6 */
%   | | | else return 0.013077420646235833;  // std dev = 1,600, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.0336269485726452;  // std dev = 6,900, 258,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=63 */
%   | | | else return -0.06254522205200698;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.866403
   AUC PR    = 0.539617
   CLL	      = -0.268881
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 41.608 seconds
Total inference time: 3.077 seconds
AUC ROC: 0.866403


Results scoring model
   AUC ROC   = 0.882551
   AUC PR    = 0.540537
   CLL	      = -0.227206
   Precision = 0.188107 at threshold = 0.5
   Recall    = 0.662393
   F1        = 0.293006


Total scoring time: 6.598 seconds
Refined model CLL: -0.227206


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.866403
   AUC PR    = 0.539617
   CLL	      = -0.268881
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 53.913 seconds
Total inference time: 3.077 seconds
AUC ROC: 0.866403
Total revision time: 53.913
Best scored revision CLL: -0.227206


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 03:58:01
{'F1': 0.305499, 'Inference time': 3.077, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.866403, 'AUC PR': 0.539617, 'parameter_0.4': {'F1': 0.604938, 'Inference time': 1.804, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 2.934, 'CLL': -0.258208}, 'Recall': 0.663717, 'Learning time': 53.913, 'CLL': -0.268881}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.10814893509951218;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.5635060779566542;  // std dev = 0,456, 112,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=79 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09673828294560044;  // std dev = 2,394, 133,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=6 */
%   | | | else return 0.058148935099512224;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.06893439823382101;  // std dev = 2,547, 96,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=7 */
%   | | | else return 0.2771091797478264;  // std dev = 8,922, 327,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=137 */
%   else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4483961169299977;  // std dev = 0,467, 121,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=81 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08502353648733194;  // std dev = 2,393, 132,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=6 */
%   | | | else return 0.08169126328278502;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04033173635684099;  // std dev = 2,519, 75,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=7 */
%   | | | else return 0.26147824363930294;  // std dev = 8,755, 311,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=137 */
%   else return -0.12544463852839136;  // std dev = 1,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.48179378597958544;  // std dev = 0,920, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3917244056711795;  // std dev = 0,455, 111,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=78 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07195082432035706;  // std dev = 2,388, 122,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=6 */
%   | | | else return 0.09025945335576128;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.05614665388692441;  // std dev = 2,547, 96,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=7 */
%   | | | else return 0.22407437393656873;  // std dev = 8,721, 308,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=137 */
%   else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.300016928117744;  // std dev = 0,456, 116,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=81 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06716614857642508;  // std dev = 2,392, 129,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=6 */
%   | | | else return 0.12776940165896433;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.12355022433755565;  // std dev = 0,467, 403,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=144 */
%   else return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13415592878921043;  // std dev = 0,485, 134,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=81 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11331493632007998;  // std dev = 1,399, 84,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=2 */
%   | | | else return 0.5817041471966571;  // std dev = 1,178, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.04771230207641005;  // std dev = 2,845, 136,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=9 */
%   | | | else return 0.12767195541872248;  // std dev = 8,961, 331,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=137 */
%   else return -0.09269127618926103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.19271342453132737;  // std dev = 0,457, 116,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=81 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10105238577210982;  // std dev = 1,399, 85,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=2 */
%   | | | else return 0.2834825105399238;  // std dev = 1,568, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.06442266094393173;  // std dev = 1,242, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.052149866179711325;  // std dev = 2,538, 121,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=7 */
%   | | else return 0.11246259609886723;  // std dev = 0,494, 322,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=137 */
%   else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2270883317090298;  // std dev = 0,936, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06707083971477334;  // std dev = 0,479, 126,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=78 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.056337327774961275;  // std dev = 2,408, 131,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=6 */
%   | | | else return 0.12199752955850211;  // std dev = 1,441, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.041528740017487374;  // std dev = 2,262, 84,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=7 */
%   | | | else return 0.058274496499583245;  // std dev = 9,097, 346,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=137 */
%   else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.2731230069058803;  // std dev = 0,375, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.10512263914007741;  // std dev = 0,468, 116,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=79 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.051827731745791715;  // std dev = 2,411, 131,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=6 */
%   | | | else return 0.03864935763583143;  // std dev = 1,502, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.0443965848290949;  // std dev = 2,286, 91,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=7 */
%   | | | else return 0.05569502013196996;  // std dev = 9,017, 337,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=137 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.0926495213341636;  // std dev = 0,456, 119,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=81 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.001037817292839553;  // std dev = 1,271, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return -0.0414991616043552;  // std dev = 2,541, 116,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=7 */
%   | | else return 0.050730026065220805;  // std dev = 0,453, 403,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=144 */
%   else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.04093093437751281;  // std dev = 1,028, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.0893206446716768;  // std dev = 0,454, 111,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=79 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.045028074766916094;  // std dev = 2,400, 141,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=6 */
%   | | | else return 0.07774191030144592;  // std dev = 1,461, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.03418410316471515;  // std dev = 2,263, 80,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=7 */
%   | | | else return 0.050027046995985536;  // std dev = 8,872, 322,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=137 */
%   else return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.822048
   AUC PR    = 0.092703
   CLL	      = -0.345937
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 133.992 seconds
Total inference time: 3.741 seconds
AUC ROC: 0.822048


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 04:00:19
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 3.741, 'Precision': [0.119186, 0.5], 'Learning time': 133.992, 'AUC PR': 0.092703, 'CLL': -0.345937, 'AUC ROC': 0.822048}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5564247971684763;  // std dev = 0,459, 116,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=81 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08730561035503312;  // std dev = 2,382, 110,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=6 */
%   | | | else return 0.088918165868743;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05435106490048769;  // std dev = 2,527, 80,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=7 */
%   | | | else return 0.27456230895969075;  // std dev = 8,942, 329,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=137 */
%   else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 0.833652
   AUC PR    = 0.098313
   CLL	      = -0.211461
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.925 seconds
Total inference time: 1.706 seconds
AUC ROC: 0.833652


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 04:00:32
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.706, 'Precision': [nan, 0.5], 'Learning time': 10.925, 'AUC PR': 0.098313, 'CLL': -0.211461, 'AUC ROC': 0.833652}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,39e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.08505885528194769;  // std dev = 12,403, 877,000 (wgt'ed) examples reached here.  /* #neg=678 #pos=199 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.07132309476097286;  // std dev = 12,428, 889,000 (wgt'ed) examples reached here.  /* #neg=690 #pos=199 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,33e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.05670796374022205;  // std dev = 12,469, 910,000 (wgt'ed) examples reached here.  /* #neg=711 #pos=199 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,62e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.050557452335523875;  // std dev = 12,456, 903,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=199 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,83e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.048301943243900414;  // std dev = 12,416, 883,000 (wgt'ed) examples reached here.  /* #neg=684 #pos=199 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.03616203433120041;  // std dev = 12,456, 903,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=199 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,49e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.03090977243000545;  // std dev = 12,454, 902,000 (wgt'ed) examples reached here.  /* #neg=703 #pos=199 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.027590042937808805;  // std dev = 12,442, 896,000 (wgt'ed) examples reached here.  /* #neg=697 #pos=199 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.01814469688019073;  // std dev = 12,483, 917,000 (wgt'ed) examples reached here.  /* #neg=718 #pos=199 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.015475011032581261;  // std dev = 12,481, 916,000 (wgt'ed) examples reached here.  /* #neg=717 #pos=199 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.24933
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 3.281 seconds
Total inference time: 2.105 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.716524
   AUC PR    = 0.467333
   CLL	      = -0.245685
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433048
   F1        = 0.604374


Total scoring time: 3.289 seconds
Parameter learned model CLL: -0.245685


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.39e-07, 0, 152], 'false': [12.403, 678, 199]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.428, 690, 199]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.33e-07, 0, 152], 'false': [12.469, 711, 199]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.62e-07, 0, 152], 'false': [12.456, 704, 199]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.83e-07, 0, 152], 'false': [12.416, 684, 199]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.456, 704, 199]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.49e-07, 0, 152], 'false': [12.454, 703, 199]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.442, 697, 199]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.483, 718, 199]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.66e-08, 0, 152], 'false': [12.481, 717, 199]}]]
[{'': [5.796532844358712e-15, 0.17542180830524065]}, {'': [-2.4308040960213954e-15, 0.1737395311525252]}, {'': [1.8698493046318425e-15, 0.170859799541125]}, {'': [1.402386978473882e-15, 0.17181071094382536]}, {'': [5.258951169277057e-16, 0.174577299410411]}, {'': [-1.8698493046318425e-16, 0.17181071094383063]}, {'': [4.0902953538821556e-16, 0.17194728639484888]}, {'': [-3.0385051200267443e-16, 0.17277059749681892]}, {'': [-3.7981314000334304e-17, 0.16991778938719562]}, {'': [2.921639538487254e-17, 0.17005182014072034]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,39e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.49814893509951125;  // std dev = 5,367, 125,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=80 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.11084331296250316;  // std dev = 1,969, 129,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=4 */
%   | | | else return 0.10814893509951237;  // std dev = 2,291, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09134601439543727;  // std dev = 3,081, 198,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=10 */
%   | | | else return 0.17633075328133055;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.10954558314420447;  // std dev = 8,208, 358,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=90 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.38007779516865803;  // std dev = 0,486, 138,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=81 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.1016752556128511;  // std dev = 1,973, 147,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=4 */
%   | | | else return 0.1944674378357557;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08231058609657603;  // std dev = 3,084, 205,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=10 */
%   | | | else return 0.20372159496653117;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.088849128157214;  // std dev = 8,246, 368,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=90 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,33e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.27849196207193905;  // std dev = 0,493, 145,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=81 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.050129003310268365;  // std dev = 3,874, 213,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=17 */
%   | | | else return 0.05125549526603675;  // std dev = 8,834, 489,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=101 */
%   | else return -0.12715576955414015;  // std dev = 0,187, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,62e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.22605579956265162;  // std dev = 5,870, 144,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=81 */
%   | | | else return -0.04901581317323814;  // std dev = 3,063, 135,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=11 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.035308864609697226;  // std dev = 3,848, 195,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=17 */
%   | | | else return 0.06432594926055067;  // std dev = 8,274, 376,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=90 */
%   | else return -0.11075889912239734;  // std dev = 0,136, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,83e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.18247342536747507;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.18252929300176282;  // std dev = 5,799, 138,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=80 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03860687419541873;  // std dev = 3,874, 206,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=17 */
%   | | | else return 0.032241794761875414;  // std dev = 8,855, 504,000 (wgt'ed) examples reached here.  /* #neg=403 #pos=101 */
%   | else return -0.10391887250033359;  // std dev = 0,158, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then return 0.03417957314313799;  // std dev = 0,383, 867,000 (wgt'ed) examples reached here.  /* #neg=668 #pos=199 */
%   | else return -0.09224451435505214;  // std dev = 0,133, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,49e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14974211385909603;  // std dev = 0,482, 138,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=81 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.061508668732374414;  // std dev = 3,075, 160,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=11 */
%   | | | else return 0.02366988552755632;  // std dev = 9,130, 560,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=107 */
%   | else return -0.08455752709112938;  // std dev = 0,100, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.08939521396669423;  // std dev = 5,825, 144,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=81 */
%   | | | else return -0.04965839342419485;  // std dev = 3,886, 240,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=17 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05314519084168679;  // std dev = 3,078, 155,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=11 */
%   | | | else return 0.04610287613457544;  // std dev = 8,246, 368,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=90 */
%   | else return -0.07832855661440644;  // std dev = 0,131, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08380389843491949;  // std dev = 0,482, 140,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=81 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03745860854202812;  // std dev = 3,872, 218,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=17 */
%   | | | else return 0.009011793968547335;  // std dev = 8,883, 528,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=101 */
%   | else return -0.07215739462386714;  // std dev = 0,070, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11887902846713075;  // std dev = 0,471, 127,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=81 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03046284701099724;  // std dev = 3,870, 207,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=17 */
%   | | | else return 0.027707301405827296;  // std dev = 8,763, 478,000 (wgt'ed) examples reached here.  /* #neg=377 #pos=101 */
%   | else return -0.07091206200954482;  // std dev = 0,123, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */


Results
   AUC ROC   = 0.902856
   AUC PR    = 0.551083
   CLL	      = -0.235838
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 61.282 seconds
Total inference time: 3.01 seconds
AUC ROC: 0.902856


Results scoring model
   AUC ROC   = 0.874
   AUC PR    = 0.535875
   CLL	      = -0.225226
   Precision = 0.190164 at threshold = 0.5
   Recall    = 0.660969
   F1        = 0.295353


Total scoring time: 8.58 seconds
Refined model CLL: -0.225226


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902856
   AUC PR    = 0.551083
   CLL	      = -0.235838
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 76.432 seconds
Total inference time: 3.01 seconds
AUC ROC: 0.902856
Total revision time: 76.432
Best scored revision CLL: -0.225226


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:01:54
{'F1': 0.305499, 'Inference time': 3.01, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.902856, 'AUC PR': 0.551083, 'parameter_0.6': {'F1': 0.604938, 'Inference time': 2.105, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 3.281, 'CLL': -0.24933}, 'Recall': 0.663717, 'Learning time': 76.432, 'CLL': -0.235838}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.5756630593932948;  // std dev = 0,450, 177,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=127 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0869060099554327;  // std dev = 3,074, 182,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=10 */
%   | | | else return 0.29564893509951234;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.06492798797741074;  // std dev = 3,187, 143,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=11 */
%   | | | else return 0.27231202522826337;  // std dev = 10,633, 466,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=193 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2550417172307946;  // std dev = 1,182, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.4975816907228484;  // std dev = 0,443, 176,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=127 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08305395754632876;  // std dev = 3,085, 206,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=10 */
%   | | | else return 0.12257035168449938;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.05079635482514293;  // std dev = 3,175, 132,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=11 */
%   | | | else return 0.25635247013737406;  // std dev = 10,445, 444,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=193 */
%   else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3810038019045341;  // std dev = 0,451, 185,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=130 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07566421480995149;  // std dev = 3,088, 214,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=10 */
%   | | | else return 0.14927683833398256;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04804714593844912;  // std dev = 3,181, 137,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=11 */
%   | | | else return 0.2089091943074763;  // std dev = 10,508, 451,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=193 */
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.555844449006649;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2566858943336117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.2802031797511809;  // std dev = 0,461, 183,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=127 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06710191565726686;  // std dev = 3,086, 211,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=10 */
%   | | | else return 0.07860433654124092;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04559467653578671;  // std dev = 3,186, 142,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=11 */
%   | | | else return 0.1720428321515723;  // std dev = 10,499, 450,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=193 */
%   else return -0.10159632948783627;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.41830469536660364;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.210826368282967;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.23087621377064285;  // std dev = 0,451, 178,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=127 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09155943155909342;  // std dev = 1,996, 128,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=4 */
%   | | | else return 0.3832565325972403;  // std dev = 1,865, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.035758181690825806;  // std dev = 3,800, 201,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=17 */
%   | | | else return 0.12853452005144236;  // std dev = 10,584, 460,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=193 */
%   else return -0.09269127618926105;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3215182456607158;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17787990776297183;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2291925871614898;  // std dev = 0,421, 165,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=127 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05436296775913971;  // std dev = 3,084, 197,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=10 */
%   | | | else return 0.009415422173583043;  // std dev = 2,300, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else return 0.07050948465567167;  // std dev = 0,454, 598,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=204 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12401891432943515;  // std dev = 0,431, 186,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=130 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08987744653154003;  // std dev = 1,989, 137,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=4 */
%   | | | else return 0.33007086249150286;  // std dev = 1,855, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03303123952891403;  // std dev = 3,811, 215,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=17 */
%   | | | else return 0.08583005041408627;  // std dev = 10,584, 460,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=193 */
%   else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09944846060284324;  // std dev = 0,440, 180,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=130 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08118283625982693;  // std dev = 1,984, 143,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=4 */
%   | | | else return 0.28376129316315934;  // std dev = 1,831, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.02695150115510794;  // std dev = 3,804, 208,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=17 */
%   | | | else return 0.04567609209686736;  // std dev = 10,772, 484,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=193 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.03987044543899316;  // std dev = 0,414, 966,000 (wgt'ed) examples reached here.  /* #neg=615 #pos=351 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.20911843587930345;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19072287969761914;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.09750906139791748;  // std dev = 0,430, 168,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=127 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07561777793865956;  // std dev = 1,985, 131,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=4 */
%   | | | else return 0.3477029293211984;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.019323452951522296;  // std dev = 3,767, 193,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=17 */
%   | | | else return 0.02838648891250023;  // std dev = 10,750, 481,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=193 */
%   else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */


Results
   AUC ROC   = 0.822992
   AUC PR    = 0.092775
   CLL	      = -0.386019
   Precision = 0.094688 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.150183


Total learning time: 161.476 seconds
Total inference time: 3.817 seconds
AUC ROC: 0.822992


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 04:04:40
{'F1': 0.150183, 'Recall': 0.362832, 'Inference time': 3.817, 'Precision': [0.094688, 0.5], 'Learning time': 161.476, 'AUC PR': 0.092775, 'CLL': -0.386019, 'AUC ROC': 0.822992}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.5716320811669252;  // std dev = 0,452, 178,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=127 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09056901361843647;  // std dev = 3,080, 195,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=10 */
%   | | | else return 0.1914822684328457;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.06546217601159877;  // std dev = 3,187, 144,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=11 */
%   | | | else return 0.31013956741800924;  // std dev = 10,284, 427,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=193 */
%   else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.833652
   AUC PR    = 0.098313
   CLL	      = -0.21654
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 22.008 seconds
Total inference time: 1.838 seconds
AUC ROC: 0.833652


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 04:05:04
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.838, 'Precision': [nan, 0.5], 'Learning time': 22.008, 'AUC PR': 0.098313, 'CLL': -0.21654, 'AUC ROC': 0.833652}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995091;  // std dev = 1,08e-06, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else return 0.0828876110576956;  // std dev = 14,143, 1.148,000 (wgt'ed) examples reached here.  /* #neg=890 #pos=258 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else return 0.0573422224730032;  // std dev = 14,280, 1.231,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=258 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,31e-07, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else return 0.057745090891327455;  // std dev = 14,208, 1.186,000 (wgt'ed) examples reached here.  /* #neg=928 #pos=258 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 2,06e-07, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else return 0.0375518237654217;  // std dev = 14,319, 1.257,000 (wgt'ed) examples reached here.  /* #neg=999 #pos=258 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601492;  // std dev = 3,82e-07, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else return 0.049599993294727265;  // std dev = 14,162, 1.159,000 (wgt'ed) examples reached here.  /* #neg=901 #pos=258 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,56e-07, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else return 0.0380564125406453;  // std dev = 14,202, 1.182,000 (wgt'ed) examples reached here.  /* #neg=924 #pos=258 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,04e-07, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else return 0.04080483509955043;  // std dev = 14,125, 1.138,000 (wgt'ed) examples reached here.  /* #neg=880 #pos=258 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452778;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else return 0.01506524435450123;  // std dev = 14,302, 1.245,000 (wgt'ed) examples reached here.  /* #neg=987 #pos=258 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else return 0.02247586306708653;  // std dev = 14,213, 1.189,000 (wgt'ed) examples reached here.  /* #neg=931 #pos=258 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 8,94e-08, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else return 0.016583394802551273;  // std dev = 14,235, 1.202,000 (wgt'ed) examples reached here.  /* #neg=944 #pos=258 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.245266
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 3.993 seconds
Total inference time: 2.023 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.724359
   AUC PR    = 0.48255
   CLL	      = -0.241
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.448718
   F1        = 0.619469


Total scoring time: 3.791 seconds
Parameter learned model CLL: -0.241


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 210], 'false': [14.143, 890, 258]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 210], 'false': [14.28, 973, 258]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.31e-07, 0, 210], 'false': [14.208, 928, 258]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.06e-07, 0, 210], 'false': [14.319, 999, 258]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.82e-07, 0, 210], 'false': [14.162, 901, 258]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.56e-07, 0, 210], 'false': [14.202, 924, 258]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 210], 'false': [14.125, 880, 258]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 210], 'false': [14.302, 987, 258]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 210], 'false': [14.213, 931, 258]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.94e-08, 0, 210], 'false': [14.235, 944, 258]}]]
[{'': [5.549000412602687e-15, 0.17423120348675]}, {'': [-3.857231994126258e-15, 0.16565953591255528]}, {'': [1.8947806286936005e-15, 0.17021518616574094]}, {'': [2.0301221021717148e-16, 0.16312278922995108]}, {'': [6.936250515753359e-16, 0.17305239931182706]}, {'': [3.129771574181394e-16, 0.1706305238475527]}, {'': [4.3985978880387156e-16, 0.1753145066885726]}, {'': [-4.229421046191072e-17, 0.1642850921759276]}, {'': [-1.3111205243192325e-16, 0.1699048114868518]}, {'': [3.8064789415719653e-17, 0.1685709618744187]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995091;  // std dev = 1,08e-06, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.001006077956655051;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.4816057252229665;  // std dev = 6,167, 162,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=101 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.10401322706265002;  // std dev = 2,595, 185,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=7 */
%   | | | else return 0.16584124279182005;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10065256302782896;  // std dev = 3,248, 267,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=11 */
%   | | | else return 0.2059750220560341;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.11836398886294983;  // std dev = 9,461, 465,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=121 */
%   | | | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.38642918946446236;  // std dev = 0,487, 174,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=103 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09447905076294609;  // std dev = 2,599, 199,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=7 */
%   | | | else return 0.15673855063232942;  // std dev = 2,332, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08756359246508;  // std dev = 3,245, 259,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=11 */
%   | | | else return 0.1790077228829523;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07991165109701308;  // std dev = 9,610, 511,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=121 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,31e-07, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2566413833399353;  // std dev = 0,498, 192,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=103 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06519003868145717;  // std dev = 4,127, 305,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=19 */
%   | | | else return 0.051899924692454656;  // std dev = 10,258, 654,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=136 */
%   | else return -0.12987439040713172;  // std dev = 0,211, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 2,06e-07, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.03940882282773932;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.29002339082235756;  // std dev = 6,135, 161,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=101 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.058669845111182596;  // std dev = 3,610, 213,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=15 */
%   | | | else return 0.04095529418532105;  // std dev = 10,438, 708,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=140 */
%   | else return -0.11327345824152826;  // std dev = 0,177, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601492;  // std dev = 3,82e-07, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.17340936697944676;  // std dev = 6,574, 182,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=103 */
%   | | | else return -0.045601029066666736;  // std dev = 3,600, 194,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=15 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05103956960530285;  // std dev = 4,095, 261,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=19 */
%   | | | else return 0.08193703141591974;  // std dev = 9,443, 460,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=121 */
%   | else return -0.10287420284924605;  // std dev = 0,164, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,56e-07, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.22239447892525838;  // std dev = 0,467, 156,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=103 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07393082932511646;  // std dev = 2,591, 184,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=7 */
%   | | | else return 0.18330044170308196;  // std dev = 2,238, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0723309283081234;  // std dev = 3,248, 287,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=11 */
%   | | | else return 0.06844814065402405;  // std dev = 2,442, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.04697951285503181;  // std dev = 9,586, 503,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=121 */
%   | | | else return -0.08216277232641317;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,04e-07, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.08790420129750277;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.13661464678179197;  // std dev = 6,036, 158,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=101 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05251820663585046;  // std dev = 4,117, 308,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=19 */
%   | | | else return 0.01611650896268699;  // std dev = 10,272, 709,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=136 */
%   | else return -0.08688214129121051;  // std dev = 0,175, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452778;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06446185227143778;  // std dev = 0,486, 175,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=103 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04349785367080949;  // std dev = 4,111, 288,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=19 */
%   | | | else return 0.015791253124208014;  // std dev = 10,268, 693,000 (wgt'ed) examples reached here.  /* #neg=557 #pos=136 */
%   | else return -0.07658320675111598;  // std dev = 0,126, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.15128727827005772;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.07855143749981922;  // std dev = 6,103, 160,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=101 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03801678730896483;  // std dev = 4,110, 283,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=19 */
%   | | | else return 0.018033258994835544;  // std dev = 10,229, 681,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=136 */
%   | else return -0.07652900133995642;  // std dev = 0,176, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 8,94e-08, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.11867650428421175;  // std dev = 2,468, 42,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return -0.01697034484435304;  // std dev = 7,174, 395,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=108 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.032016978895537875;  // std dev = 3,519, 173,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=15 */
%   | | | else return 0.04774276186934784;  // std dev = 9,482, 471,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=121 */
%   | else return -0.07668719074364524;  // std dev = 0,202, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */


Results
   AUC ROC   = 0.901866
   AUC PR    = 0.551003
   CLL	      = -0.249021
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 75.51 seconds
Total inference time: 3.1 seconds
AUC ROC: 0.901866


Results scoring model
   AUC ROC   = 0.877762
   AUC PR    = 0.556885
   CLL	      = -0.225013
   Precision = 0.188828 at threshold = 0.5
   Recall    = 0.66453
   F1        = 0.29409


Total scoring time: 24.925 seconds
Refined model CLL: -0.225013


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.901866
   AUC PR    = 0.551003
   CLL	      = -0.249021
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 108.21900000000001 seconds
Total inference time: 3.1 seconds
AUC ROC: 0.901866
Total revision time: 108.21900000000001
Best scored revision CLL: -0.225013


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:06:59
{'F1': 0.305499, 'Inference time': 3.1, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.901866, 'parameter_0.8': {'F1': 0.604938, 'Inference time': 2.023, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 3.993, 'CLL': -0.245266}, 'AUC PR': 0.551003, 'Recall': 0.663717, 'Learning time': 108.21900000000001, 'CLL': -0.249021}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.5786729525667579;  // std dev = 0,449, 229,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=165 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09749622619081062;  // std dev = 3,242, 248,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=11 */
%   | | | else return 0.17814893509951235;  // std dev = 2,332, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.05564416834876351;  // std dev = 3,702, 174,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=15 */
%   | | | else return 0.2771965541471268;  // std dev = 12,384, 630,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=264 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.49805848566648997;  // std dev = 0,441, 235,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=170 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08512462495804336;  // std dev = 3,241, 243,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=11 */
%   | | | else return 0.08505025609950073;  // std dev = 2,449, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04749226967308715;  // std dev = 3,699, 171,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=15 */
%   | | | else return 0.22155791161260951;  // std dev = 12,579, 659,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=264 */
%   else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.609162354488838;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19095873289202173;  // std dev = 1,29e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.4034148657452671;  // std dev = 0,444, 226,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=165 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08230733644394234;  // std dev = 3,252, 284,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=11 */
%   | | | else return 0.0810636917313066;  // std dev = 2,436, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04595502045654333;  // std dev = 3,707, 179,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=15 */
%   | | | else return 0.18909796490074535;  // std dev = 12,554, 655,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=264 */
%   else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2773174279022902;  // std dev = 0,449, 246,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=170 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08084944615048119;  // std dev = 2,594, 153,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=7 */
%   | | | else return 0.49073215619657834;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06574412896239715;  // std dev = 3,238, 235,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=11 */
%   | | | else return 0.19183219287860928;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.18179756060683044;  // std dev = 0,495, 615,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=264 */
%   else return -0.10159632948783617;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.39110084913797527;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20465767987426783;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.2472396067953126;  // std dev = 0,440, 224,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=165 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06410275562216183;  // std dev = 3,249, 257,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=11 */
%   | | | else return 0.029989170079024068;  // std dev = 2,438, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03236281671217517;  // std dev = 3,569, 167,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=15 */
%   | | | else return 0.1443307553007407;  // std dev = 12,297, 618,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=264 */
%   else return -0.09269127618926105;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3028447027102885;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17334672602121845;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.1452046550064406;  // std dev = 0,460, 237,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=165 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.058064074956160984;  // std dev = 3,248, 258,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=11 */
%   | | | else return -0.00801472706245013;  // std dev = 2,493, 38,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else return 0.05231513579254931;  // std dev = 0,447, 876,000 (wgt'ed) examples reached here.  /* #neg=597 #pos=279 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.03435433932564842;  // std dev = 0,738, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.09805203545733283;  // std dev = 7,213, 241,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=165 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.05552936209492219;  // std dev = 3,254, 272,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=11 */
%   | | | else return 0.014492744507556148;  // std dev = 2,454, 35,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07722249463895352;  // std dev = 2,591, 171,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=7 */
%   | | | else return 0.3082078424392725;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.09400110702372143;  // std dev = 0,493, 631,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=264 */
%   else return -0.07877675473109172;  // std dev = 2,69e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.0801488670572338;  // std dev = 0,446, 254,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=170 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.048295654876101386;  // std dev = 3,249, 257,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=11 */
%   | | | else return 0.00825872883928605;  // std dev = 2,466, 35,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.030939584083867187;  // std dev = 3,470, 167,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=15 */
%   | | | else return 0.07109010815396387;  // std dev = 12,412, 634,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=264 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.23461604504482492;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15582269458022716;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.06423537679326725;  // std dev = 0,461, 238,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=165 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0690549127279133;  // std dev = 2,603, 174,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=7 */
%   | | | else return 0.3843574299995197;  // std dev = 1,722, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.019356303910578822;  // std dev = 3,995, 247,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=19 */
%   | | | else return 0.04774537364611907;  // std dev = 12,488, 645,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=264 */
%   else return -0.06842697784420268;  // std dev = 2,58e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.032802447015696484;  // std dev = 0,615, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.05524969255980214;  // std dev = 7,046, 236,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=165 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.04795393760819351;  // std dev = 3,265, 285,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=11 */
%   | | | else return 0.03970213506991125;  // std dev = 2,406, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06425611600081367;  // std dev = 2,597, 191,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=7 */
%   | | | else return 0.4122587223166461;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.05801944294076985;  // std dev = 0,495, 613,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=264 */
%   else return -0.06419184008202625;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */


Results
   AUC ROC   = 0.755173
   AUC PR    = 0.077237
   CLL	      = -0.387688
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 337.805 seconds
Total inference time: 4.467 seconds
AUC ROC: 0.755173


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 04:12:41
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 4.467, 'Precision': [0.119186, 0.5], 'Learning time': 337.805, 'AUC PR': 0.077237, 'CLL': -0.387688, 'AUC ROC': 0.755173}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5784879181503564;  // std dev = 0,449, 236,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=170 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10461702234729639;  // std dev = 2,596, 188,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=7 */
%   | | | else return 0.25814893509951237;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0936054508654002;  // std dev = 3,236, 228,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=11 */
%   | | | else return 0.2059750220560341;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.2785311007046033;  // std dev = 0,494, 628,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=264 */
%   else return -0.14185106490048766;  // std dev = 7,15e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */


Results
   AUC ROC   = 0.836575
   AUC PR    = 0.098591
   CLL	      = -0.223967
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 33.561 seconds
Total inference time: 1.863 seconds
AUC ROC: 0.836575


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 04:13:17
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.863, 'Precision': [nan, 0.5], 'Learning time': 33.561, 'AUC PR': 0.098591, 'CLL': -0.223967, 'AUC ROC': 0.836575}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.0741860457688248;  // std dev = 15,987, 1.509,000 (wgt'ed) examples reached here.  /* #neg=1.183 #pos=326 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.06974340426155273;  // std dev = 15,937, 1.476,000 (wgt'ed) examples reached here.  /* #neg=1.150 #pos=326 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.05489133381744322;  // std dev = 15,995, 1.515,000 (wgt'ed) examples reached here.  /* #neg=1.189 #pos=326 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.047791597942174295;  // std dev = 15,991, 1.512,000 (wgt'ed) examples reached here.  /* #neg=1.186 #pos=326 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.05401397143510509;  // std dev = 15,858, 1.426,000 (wgt'ed) examples reached here.  /* #neg=1.100 #pos=326 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.03409233493060011;  // std dev = 15,981, 1.505,000 (wgt'ed) examples reached here.  /* #neg=1.179 #pos=326 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.032758311124026496;  // std dev = 15,942, 1.479,000 (wgt'ed) examples reached here.  /* #neg=1.153 #pos=326 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.025939328697358127;  // std dev = 15,960, 1.491,000 (wgt'ed) examples reached here.  /* #neg=1.165 #pos=326 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.020270481190669418;  // std dev = 15,976, 1.502,000 (wgt'ed) examples reached here.  /* #neg=1.176 #pos=326 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.016902547001764155;  // std dev = 15,978, 1.503,000 (wgt'ed) examples reached here.  /* #neg=1.177 #pos=326 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.247549
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 4.91 seconds
Total inference time: 1.753 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.721368
   AUC PR    = 0.476703
   CLL	      = -0.243535
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.442735
   F1        = 0.613744


Total scoring time: 4.251 seconds
Parameter learned model CLL: -0.243535


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 259], 'false': [15.987, 1183, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.937, 1150, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.13e-07, 0, 259], 'false': [15.995, 1189, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.991, 1186, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 259], 'false': [15.858, 1100, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.26e-07, 0, 259], 'false': [15.981, 1179, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 259], 'false': [15.942, 1153, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 259], 'false': [15.96, 1165, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.976, 1176, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.978, 1177, 326]}]]
[{'': [4.499189523731908e-15, 0.1693650774829641]}, {'': [-4.499189523731908e-15, 0.17208488480548717]}, {'': [6.584179790827183e-16, 0.16887843239769573]}, {'': [-4.1151123692669897e-16, 0.16912145516642907]}, {'': [8.230224738533979e-17, 0.17634828244838288]}, {'': [4.1151123692669897e-16, 0.1696908422644312]}, {'': [3.154919483104692e-16, 0.17183457748117117]}, {'': [6.858520615444983e-18, 0.17083947908330552]}, {'': [-1.7146301538612456e-16, 0.1699358689080254]}, {'': [-3.086334276950242e-17, 0.169854126300507]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.024815601766178936;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.40444523139580535;  // std dev = 7,317, 216,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07475841314329952;  // std dev = 4,426, 313,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=21 */
%   | | | else return 0.0799671169176894;  // std dev = 11,933, 825,000 (wgt'ed) examples reached here.  /* #neg=642 #pos=183 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.36480027925349473;  // std dev = 0,494, 218,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=122 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0991316186113868;  // std dev = 3,369, 237,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=12 */
%   | | | else return 0.2029979033504866;  // std dev = 2,394, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09652161810959504;  // std dev = 3,400, 334,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=12 */
%   | | | else return 0.12501332952840286;  // std dev = 2,583, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.10568474115983616;  // std dev = 10,967, 629,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=162 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2689579740371533;  // std dev = 0,498, 231,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=122 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06650222847886413;  // std dev = 4,409, 361,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=21 */
%   | | | else return 0.05327792338071603;  // std dev = 11,930, 857,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=183 */
%   | else return -0.11736238677923852;  // std dev = 0,087, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.3738095612772656;  // std dev = 1,201, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.24301992577738393;  // std dev = 7,183, 212,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0560221760079773;  // std dev = 4,403, 340,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=21 */
%   | | | else return 0.0507517386634096;  // std dev = 11,888, 840,000 (wgt'ed) examples reached here.  /* #neg=657 #pos=183 */
%   | else return -0.10557102594118518;  // std dev = 0,089, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2282329565359928;  // std dev = 0,489, 204,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=122 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05177068308636665;  // std dev = 4,408, 348,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=21 */
%   | | | else return 0.04852762660469212;  // std dev = 11,846, 822,000 (wgt'ed) examples reached here.  /* #neg=639 #pos=183 */
%   | else return -0.09624251300121216;  // std dev = 0,081, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.05701132154804164;  // std dev = 1,665, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.17937843118739555;  // std dev = 6,807, 194,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0487025763302171;  // std dev = 4,414, 359,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=21 */
%   | | | else return 0.029030914934310502;  // std dev = 11,940, 870,000 (wgt'ed) examples reached here.  /* #neg=687 #pos=183 */
%   | else return -0.0892644716665302;  // std dev = 0,084, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.21167306430785016;  // std dev = 1,250, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.11337218926545753;  // std dev = 6,970, 205,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.039634244575524336;  // std dev = 4,404, 334,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=21 */
%   | | | else return 0.03695858722255236;  // std dev = 11,844, 822,000 (wgt'ed) examples reached here.  /* #neg=639 #pos=183 */
%   | else return -0.08252219874352766;  // std dev = 0,078, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.17426262239792026;  // std dev = 1,761, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.08134860162515695;  // std dev = 7,028, 202,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=118 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06942352445971012;  // std dev = 4,260, 218,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=21 */
%   | | | else return 0.024405200862969028;  // std dev = 11,920, 968,000 (wgt'ed) examples reached here.  /* #neg=785 #pos=183 */
%   | else return -0.07450354025661775;  // std dev = 0,056, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.005710326608852331;  // std dev = 7,882, 547,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=134 */
%   | | | else return 0.15677685918230708;  // std dev = 2,543, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06600086996907772;  // std dev = 4,284, 220,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=21 */
%   | | | else return 0.06187969098546636;  // std dev = 10,917, 613,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=162 */
%   | else return -0.07096348472799825;  // std dev = 0,074, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0954308085840946;  // std dev = 0,484, 202,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=122 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.044339122079684073;  // std dev = 4,389, 366,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=21 */
%   | | | else return 0.018415777022692786;  // std dev = 11,850, 848,000 (wgt'ed) examples reached here.  /* #neg=665 #pos=183 */
%   | else return -0.06643676783253362;  // std dev = 0,065, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */


Results
   AUC ROC   = 0.902856
   AUC PR    = 0.551083
   CLL	      = -0.231614
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 104.033 seconds
Total inference time: 3.133 seconds
AUC ROC: 0.902856


Results scoring model
   AUC ROC   = 0.870599
   AUC PR    = 0.534175
   CLL	      = -0.229538
   Precision = 0.184172 at threshold = 0.5
   Recall    = 0.644444
   F1        = 0.286474


Total scoring time: 15.094 seconds
Refined model CLL: -0.229538


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902856
   AUC PR    = 0.551083
   CLL	      = -0.231614
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 128.288 seconds
Total inference time: 3.133 seconds
AUC ROC: 0.902856
Total revision time: 128.288
Best scored revision CLL: -0.229538


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:15:31
{'parameter_1.0': {'F1': 0.604938, 'Inference time': 1.753, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 4.91, 'CLL': -0.247549}, 'F1': 0.305499, 'Inference time': 3.133, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.902856, 'AUC PR': 0.551083, 'Recall': 0.663717, 'Learning time': 128.288, 'CLL': -0.231614}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.5634120929942454;  // std dev = 0,456, 285,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10185106490048824;  // std dev = 3,394, 300,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=12 */
%   | | | else return 0.11529179224236952;  // std dev = 2,586, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.051722309535680897;  // std dev = 4,371, 233,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=21 */
%   | | | else return 0.26080915275367933;  // std dev = 14,104, 827,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=333 */
%   else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4813332673558114;  // std dev = 0,450, 298,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=210 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09204422417530689;  // std dev = 3,398, 317,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=12 */
%   | | | else return 0.09352696936981619;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.045542049569311426;  // std dev = 4,371, 233,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=21 */
%   | | | else return 0.23907740451284076;  // std dev = 13,949, 801,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=333 */
%   else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.13950850889162328;  // std dev = 1,848, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.38558573712650485;  // std dev = 7,697, 285,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=201 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0742667764043094;  // std dev = 3,369, 210,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=12 */
%   | | | else return 0.3466046567237787;  // std dev = 2,163, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08175013088770083;  // std dev = 3,397, 315,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=12 */
%   | | | else return 0.22208657795759124;  // std dev = 2,341, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.21223051511070767;  // std dev = 0,495, 781,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=333 */
%   else return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.5821943743427362;  // std dev = 0,015, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.4086210288125216;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.29117993954841004;  // std dev = 0,448, 292,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07258650675534846;  // std dev = 3,399, 302,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=12 */
%   | | | else return 0.04328313482365868;  // std dev = 2,591, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else return 0.11630697603757756;  // std dev = 0,464, 1.030,000 (wgt'ed) examples reached here.  /* #neg=676 #pos=354 */
%   else return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.19279615215517767;  // std dev = 0,457, 316,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=210 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06801741490234121;  // std dev = 3,402, 325,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=12 */
%   | | | else return 0.038817101921766295;  // std dev = 2,583, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else return 0.09035638633455544;  // std dev = 0,457, 1.061,000 (wgt'ed) examples reached here.  /* #neg=707 #pos=354 */
%   else return -0.09269127618926108;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.20014987106416712;  // std dev = 0,427, 294,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=210 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09668908876714094;  // std dev = 3,379, 240,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=12 */
%   | | | else return 0.17093269197207736;  // std dev = 2,337, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.04506043031758012;  // std dev = 4,273, 339,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=21 */
%   | | | else return 0.11071124485260722;  // std dev = 14,092, 825,000 (wgt'ed) examples reached here.  /* #neg=492 #pos=333 */
%   else return -0.08518475138839679;  // std dev = 3,16e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.09627296809184983;  // std dev = 0,460, 314,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=210 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.055148124367343045;  // std dev = 3,400, 299,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=12 */
%   | | | else return 0.06014697642320311;  // std dev = 2,547, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07870773671637048;  // std dev = 3,366, 215,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=12 */
%   | | | else return 0.2931101027045209;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else return 0.11110196020342435;  // std dev = 0,495, 779,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=333 */
%   else return -0.07877675473109165;  // std dev = 4,28e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08398354706486758;  // std dev = 0,455, 309,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=210 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.054419930595612516;  // std dev = 3,407, 330,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=12 */
%   | | | else return 0.08644024751712841;  // std dev = 2,492, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06901501688015557;  // std dev = 3,365, 212,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=12 */
%   | | | else return 0.30681259445262987;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else return 0.0692255450662673;  // std dev = 0,492, 812,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=333 */
%   else return -0.07324622576333704;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07122094073620594;  // std dev = 0,448, 308,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=210 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.048743409069391515;  // std dev = 3,406, 317,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=12 */
%   | | | else return -0.015379820799881238;  // std dev = 2,633, 44,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04233518255045481;  // std dev = 4,016, 232,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=21 */
%   | | | else return 0.055025915070964;  // std dev = 13,998, 809,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=333 */
%   else return -0.06842697784420267;  // std dev = 3,49e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09524908034638327;  // std dev = 0,430, 290,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=210 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.045353328405522954;  // std dev = 3,406, 320,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=12 */
%   | | | else return 0.078020355944044;  // std dev = 2,479, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04067585120876832;  // std dev = 4,010, 248,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=21 */
%   | | | else return 0.0464149430189765;  // std dev = 13,949, 801,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=333 */
%   else return -0.06419184008202625;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */


Results
   AUC ROC   = 0.836986
   AUC PR    = 0.098646
   CLL	      = -0.37149
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 610.5 seconds
Total inference time: 4.071 seconds
AUC ROC: 0.836986


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 04:25:46
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 4.071, 'Precision': [0.119186, 0.5], 'Learning time': 610.5, 'AUC PR': 0.098646, 'CLL': -0.37149, 'AUC ROC': 0.836986}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.6081489350995086;  // std dev = 0,433, 268,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10185106490048824;  // std dev = 3,394, 300,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=12 */
%   | | | else return 0.07766113022146359;  // std dev = 2,650, 41,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.051333823521177414;  // std dev = 4,370, 232,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=21 */
%   | | | else return 0.3009680840356779;  // std dev = 13,621, 752,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=333 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 0.833652
   AUC PR    = 0.098313
   CLL	      = -0.212339
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 24.481 seconds
Total inference time: 1.984 seconds
AUC ROC: 0.833652


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 04:26:13
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.984, 'Precision': [nan, 0.5], 'Learning time': 24.481, 'AUC PR': 0.098313, 'CLL': -0.212339, 'AUC ROC': 0.833652}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 569
Target train neg examples: 23251

Target test facts examples: 8129
Target test pos	 examples: 129
Target test neg examples: 4745

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.08556326531758204;  // std dev = 7,510, 321,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=73 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.11383422164300656;  // std dev = 7,318, 274,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=73 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.07624973498673518;  // std dev = 7,428, 299,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=73 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.04930355521998595;  // std dev = 7,506, 320,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=73 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.05238572170112739;  // std dev = 7,456, 306,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=73 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.0474774841074674;  // std dev = 7,440, 302,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=73 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,96e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.03522972757694708;  // std dev = 7,463, 308,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=73 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.0334068455732787;  // std dev = 7,444, 303,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=73 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,94e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.03190162310666975;  // std dev = 7,424, 298,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=73 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080111;  // std dev = 1,83e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return 0.04132381680344927;  // std dev = 7,351, 281,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=73 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.272939
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 2.389 seconds
Total inference time: 2.134 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.676991
   AUC PR    = 0.390718
   CLL	      = -0.273488
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.353982
   F1        = 0.522876


Total scoring time: 2.182 seconds
Parameter learned model CLL: -0.273488


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.46e-07, 0, 40], 'false': [7.51, 248, 73]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 40], 'false': [7.318, 201, 73]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.4e-07, 0, 40], 'false': [7.428, 226, 73]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 40], 'false': [7.506, 247, 73]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 40], 'false': [7.456, 233, 73]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 40], 'false': [7.44, 229, 73]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.96e-08, 0, 40], 'false': [7.463, 235, 73]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 40], 'false': [7.444, 230, 73]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.94e-08, 0, 40], 'false': [7.424, 225, 73]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.83e-08, 0, 40], 'false': [7.351, 208, 73]}]]
[{'': [1.5099033134902129e-15, 0.17569705262953642]}, {'': [-8.881784197001252e-16, 0.19544195215514987]}, {'': [4.884981308350689e-16, 0.18453932282636448]}, {'': [-3.3306690738754696e-16, 0.17608398437500133]}, {'': [2.2204460492503132e-17, 0.18165022000085337]}, {'': [-2.2204460492503132e-17, 0.1832923994561663]}, {'': [8.881784197001253e-17, 0.18083783100016598]}, {'': [-7.216449660063518e-17, 0.18287967410602635]}, {'': [3.8857805861880476e-17, 0.18495788477996378]}, {'': [8.326672684688674e-18, 0.19229746330466865]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.524815601766178;  // std dev = 0,471, 45,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=30 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.043811849214213223;  // std dev = 2,124, 51,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
%   | | | else return 0.0803711573217333;  // std dev = 5,437, 171,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=38 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4066289395752954;  // std dev = 0,484, 48,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=30 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06810794460456088;  // std dev = 2,158, 73,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=5 */
%   | | | else return 0.11950959418817234;  // std dev = 5,262, 140,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=38 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.1526978270245793;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.2414820671553152;  // std dev = 3,664, 54,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=29 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05733675546113588;  // std dev = 2,155, 70,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=5 */
%   | | | else return 0.06095071374581402;  // std dev = 5,413, 166,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=38 */
%   | else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.30762517921276006;  // std dev = 0,475, 46,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=30 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09039687117276164;  // std dev = 1,911, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | | else return 0.03291872956674092;  // std dev = 5,543, 206,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=39 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14156107293887515;  // std dev = 0,493, 54,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=30 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05991994377054063;  // std dev = 2,161, 76,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=5 */
%   | | | else return 0.06502841449205872;  // std dev = 5,349, 157,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=38 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( author(G, E), title(G, A) )
%   | | | then return 0.30980050175221296;  // std dev = 1,242, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.04771271035328231;  // std dev = 3,830, 133,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=28 */
%   | | else return 0.6390065173268766;  // std dev = 0,836, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.21297989688605345;  // std dev = 1,348, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.13224059833089977;  // std dev = 0,986, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.10688933356369515;  // std dev = 4,885, 114,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,96e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.19732739347072106;  // std dev = 0,835, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1846599535837556;  // std dev = 3,265, 46,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06388581316990764;  // std dev = 2,038, 79,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=5 */
%   | | | else return 0.06818880584986861;  // std dev = 5,216, 144,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=38 */
%   | else return -0.08194259184044227;  // std dev = 0,040, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.15198000199878361;  // std dev = 0,905, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1507650987239954;  // std dev = 3,159, 44,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=28 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08645363639860408;  // std dev = 1,846, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | | else return 0.05002259383293109;  // std dev = 5,285, 167,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=39 */
%   | else return -0.07583045872404542;  // std dev = 0,038, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,94e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.1104116170346062;  // std dev = 0,793, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.19319063567224248;  // std dev = 2,840, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.053166651648529836;  // std dev = 2,020, 73,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=5 */
%   | | | else return 0.06809679228958924;  // std dev = 5,155, 135,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=38 */
%   | else return -0.06909661366920561;  // std dev = 0,023, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080111;  // std dev = 1,83e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.5385760568535343;  // std dev = 0,343, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23566428096882153;  // std dev = 1,192, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordtitle(A, D) )
%   | | | then return -0.06433961298440004;  // std dev = 3,407, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return -0.1282485230846061;  // std dev = 1,000, 45,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08014864188768946;  // std dev = 1,341, 78,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=2 */
%   | | | else return 0.5560086833237559;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.05480195667878528;  // std dev = 4,894, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return -0.0638072775731506;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.816509
   AUC PR    = 0.515461
   CLL	      = -0.260015
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 26.59 seconds
Total inference time: 3.17 seconds
AUC ROC: 0.816509


Results scoring model
   AUC ROC   = 0.889261
   AUC PR    = 0.490635
   CLL	      = -0.244855
   Precision = 0.167866 at threshold = 0.5
   Recall    = 0.619469
   F1        = 0.264151


Total scoring time: 6.967 seconds
Refined model CLL: -0.244855


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.816509
   AUC PR    = 0.515461
   CLL	      = -0.260015
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 38.128 seconds
Total inference time: 3.17 seconds
AUC ROC: 0.816509
Total revision time: 38.128
Best scored revision CLL: -0.244855


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:26:58
{'parameter_0.2': {'F1': 0.597826, 'Inference time': 2.134, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 2.389, 'CLL': -0.272939}, 'F1': 0.422018, 'Inference time': 3.17, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.816509, 'AUC PR': 0.515461, 'Recall': 0.534884, 'Learning time': 38.128, 'CLL': -0.260015}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4930695700201471;  // std dev = 0,481, 63,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=40 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.10851773156715437;  // std dev = 1,390, 60,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04429008929073166;  // std dev = 1,900, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.2969978559628228;  // std dev = 5,851, 139,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=61 */
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4772800698349443;  // std dev = 0,459, 62,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=43 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09929672261660961;  // std dev = 1,393, 67,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=2 */
%   | | | else return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0476558119768177;  // std dev = 1,909, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | | else return 0.21671461895837543;  // std dev = 6,056, 153,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=61 */
%   else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.6140979814571386;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4105667095256425;  // std dev = 0,452, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.13161510715096814;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.08932033984230511;  // std dev = 1,387, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.025759600290702827;  // std dev = 1,892, 38,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | | else return 0.25638636849213087;  // std dev = 5,671, 129,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.032975851087857166;  // std dev = 0,859, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.317629701839579;  // std dev = 0,452, 57,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08583062821156466;  // std dev = 1,369, 71,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=2 */
%   | | | else return 0.28224310467874486;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.052645953130046046;  // std dev = 1,923, 53,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=4 */
%   | | | else return 0.16347015910072552;  // std dev = 5,914, 143,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=61 */
%   else return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.4314301521192112;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2538872747266604;  // std dev = 0,443, 55,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07356161371597503;  // std dev = 1,366, 65,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=2 */
%   | | | else return 0.36818612599642586;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.0423511421382854;  // std dev = 1,918, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return 0.11616468269628046;  // std dev = 5,988, 148,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=61 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12071752677541277;  // std dev = 0,465, 65,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=43 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.4821243312436299;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.11953004744869287;  // std dev = 1,173, 37,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.04253083134798564;  // std dev = 1,807, 55,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
%   | | | else return 0.10881418985433941;  // std dev = 5,899, 142,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=61 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.2917994530534234;  // std dev = 0,356, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.1242189699922796;  // std dev = 0,459, 59,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=41 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.10278684886399776;  // std dev = 1,243, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.07853112507787827;  // std dev = 1,227, 68,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */
%   | | else return 0.04839831823694206;  // std dev = 0,463, 185,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=65 */
%   else return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.44812875411645675;  // std dev = 0,431, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03279106471338561;  // std dev = 1,767, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( haswordtitle(A, D) )
%   | | | then return 0.02680080460326221;  // std dev = 3,621, 59,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   | | | else return -0.09568716020806826;  // std dev = 1,043, 48,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.17941954851577702;  // std dev = 1,169, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.06320029253655705;  // std dev = 1,214, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | else return 0.07668963705335717;  // std dev = 0,495, 141,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=61 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D), haswordvenue(G, C) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.08623980303348897;  // std dev = 3,542, 62,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=43 */
%   | | | else return -0.05637725086531654;  // std dev = 1,312, 74,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=2 */
%   | | else return 0.40595732864982004;  // std dev = 0,582, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.29787039550267863;  // std dev = 1,197, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.07035459883534306;  // std dev = 0,984, 32,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=1 */
%   | | else return 0.08841840742364224;  // std dev = 0,499, 132,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=61 */
%   else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( title(E, A), venue(E, D) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.5078205544207904;  // std dev = 1,277, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | | | else return -0.23064987416839988;  // std dev = 3,281, 187,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=5 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.3573972302878624;  // std dev = 1,362, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.355383028881869;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.06704751691193336;  // std dev = 0,050, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | then return -0.2321179689441765;  // std dev = 0,297, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.9316
   AUC PR    = 0.436911
   CLL	      = -0.32544
   Precision = 0.451064 at threshold = 0.5
   Recall    = 0.821705
   F1        = 0.582418


Total learning time: 520.527 seconds
Total inference time: 8.85 seconds
AUC ROC: 0.9316


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 04:35:47
{'F1': 0.582418, 'Recall': 0.821705, 'Inference time': 8.85, 'Precision': [0.451064, 0.5], 'Learning time': 520.527, 'AUC PR': 0.436911, 'CLL': -0.32544, 'AUC ROC': 0.9316}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5096640866146642;  // std dev = 0,476, 66,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=43 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10851773156715437;  // std dev = 1,390, 60,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=2 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0585177315671544;  // std dev = 1,915, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | | else return 0.30017792060675985;  // std dev = 5,834, 138,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=61 */
%   else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 0.718659
   AUC PR    = 0.076768
   CLL	      = -0.219234
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.992 seconds
Total inference time: 1.78 seconds
AUC ROC: 0.718659


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 04:35:56
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.78, 'Precision': [nan, 0.5], 'Learning time': 6.992, 'AUC PR': 0.076768, 'CLL': -0.219234, 'AUC ROC': 0.718659}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.08440109399415506;  // std dev = 10,068, 579,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=131 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.07072973285302761;  // std dev = 10,088, 587,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=131 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.07212496961889396;  // std dev = 10,018, 560,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=131 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.03286196435370818;  // std dev = 10,207, 640,000 (wgt'ed) examples reached here.  /* #neg=509 #pos=131 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.052869672161031056;  // std dev = 10,047, 571,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=131 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.038798105947310924;  // std dev = 10,088, 587,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=131 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.029522143413389382;  // std dev = 10,110, 596,000 (wgt'ed) examples reached here.  /* #neg=465 #pos=131 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.027167229519466242;  // std dev = 10,095, 590,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=131 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.025921513827141914;  // std dev = 10,075, 582,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=131 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.016099401886945197;  // std dev = 10,112, 597,000 (wgt'ed) examples reached here.  /* #neg=466 #pos=131 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.24993
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 3.067 seconds
Total inference time: 2.217 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.711454
   AUC PR    = 0.457815
   CLL	      = -0.248122
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.422907
   F1        = 0.594427


Total scoring time: 2.771 seconds
Parameter learned model CLL: -0.248122


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.37e-07, 0, 96], 'false': [10.068, 448, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.88e-07, 0, 96], 'false': [10.088, 456, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.09e-07, 0, 96], 'false': [10.018, 429, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.23e-07, 0, 96], 'false': [10.207, 509, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 96], 'false': [10.047, 440, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 96], 'false': [10.088, 456, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.26e-07, 0, 96], 'false': [10.11, 465, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.6e-08, 0, 96], 'false': [10.095, 459, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 96], 'false': [10.075, 451, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.65e-08, 0, 96], 'false': [10.112, 466, 131]}]]
[{'': [1.1842378929335002e-15, 0.17506211949015954]}, {'': [3.7007434154171886e-16, 0.17336440596803138]}, {'': [1.7393494052460785e-15, 0.17920599489795386]}, {'': [5.181040781584064e-16, 0.16279052734374624]}, {'': [1.850371707708594e-17, 0.17678758192988278]}, {'': [-4.625929269271486e-17, 0.17336440596803757]}, {'': [1.6653345369377348e-16, 0.1714872077834301]}, {'': [6.013708050052931e-17, 0.17273484630853606]}, {'': [-6.013708050052931e-17, 0.17442224347846616]}, {'': [1.3877787807814457e-17, 0.17128074768032997]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.39148226843284656;  // std dev = 0,499, 105,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=56 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.08437980053267159;  // std dev = 2,171, 87,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10216852521794798;  // std dev = 2,191, 126,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=5 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.13645082189196617;  // std dev = 6,525, 212,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=59 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.42575426794015747;  // std dev = 4,600, 90,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   | | | else return -0.053501658843406734;  // std dev = 2,690, 99,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=8 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05945050612844273;  // std dev = 2,663, 111,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=8 */
%   | | | else return 0.1088956810371764;  // std dev = 6,571, 220,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=59 */
%   | else return -0.1305690119252548;  // std dev = 0,083, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.36401984002386617;  // std dev = 4,513, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   | | | else return -0.052866334256981805;  // std dev = 2,701, 105,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=8 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06785810857895787;  // std dev = 2,690, 139,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=8 */
%   | | | else return 0.07664865527514224;  // std dev = 6,647, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
%   | else return -0.11643759658408065;  // std dev = 0,076, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.27914623462220634;  // std dev = 0,483, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05596374815031452;  // std dev = 2,686, 128,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=8 */
%   | | | else return 0.059883637064266804;  // std dev = 7,106, 294,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=67 */
%   | else return -0.10656489765614108;  // std dev = 0,071, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14409272059152778;  // std dev = 0,496, 100,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=56 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05666027162148771;  // std dev = 2,697, 143,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=8 */
%   | | | else return 0.03657326808803455;  // std dev = 7,173, 315,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=67 */
%   | else return -0.09670412592451043;  // std dev = 0,089, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14446576164829278;  // std dev = 0,491, 94,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=56 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.049827729795263814;  // std dev = 2,695, 142,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=8 */
%   | | | else return 0.045518719267280495;  // std dev = 7,109, 293,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=67 */
%   | else return -0.08657664232610832;  // std dev = 0,065, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.10223064172505655;  // std dev = 4,795, 95,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=56 */
%   | | | else return -0.03601773207744915;  // std dev = 2,659, 78,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=8 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.029111366720248718;  // std dev = 2,674, 110,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=8 */
%   | | | else return 0.054058411494853895;  // std dev = 6,598, 225,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=59 */
%   | else return -0.08092366524449965;  // std dev = 0,051, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.10258947575515044;  // std dev = 4,641, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   | | | else return -0.042921988467650316;  // std dev = 2,700, 141,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.03471908774812253;  // std dev = 2,661, 81,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=8 */
%   | | | else return 0.07926747649828937;  // std dev = 6,443, 199,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=59 */
%   | else return -0.0744091903015621;  // std dev = 0,049, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2526554307233412;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1451745873598407;  // std dev = 4,134, 79,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=54 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.04995415607163384;  // std dev = 2,690, 102,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=8 */
%   | | | else return 0.026171063565497497;  // std dev = 7,049, 324,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=67 */
%   | else return -0.07025366927432311;  // std dev = 0,052, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.1895872772345845;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0611068844899686;  // std dev = 4,438, 85,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=54 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.038986254760610364;  // std dev = 2,696, 137,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=8 */
%   | | | else return 0.02092455381848111;  // std dev = 7,080, 297,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=67 */
%   | else return -0.06602659191523048;  // std dev = 0,054, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */


Results
   AUC ROC   = 0.826677
   AUC PR    = 0.521087
   CLL	      = -0.245347
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 47.846 seconds
Total inference time: 3.408 seconds
AUC ROC: 0.826677


Results scoring model
   AUC ROC   = 0.883929
   AUC PR    = 0.526488
   CLL	      = -0.236842
   Precision = 0.176263 at threshold = 0.5
   Recall    = 0.660793
   F1        = 0.278293


Total scoring time: 9.245 seconds
Refined model CLL: -0.236842


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826677
   AUC PR    = 0.521087
   CLL	      = -0.245347
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 62.928999999999995 seconds
Total inference time: 3.408 seconds
AUC ROC: 0.826677
Total revision time: 62.928999999999995
Best scored revision CLL: -0.236842


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:37:06
{'F1': 0.422018, 'Inference time': 3.408, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826677, 'AUC PR': 0.521087, 'parameter_0.4': {'F1': 0.597826, 'Inference time': 2.217, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 3.067, 'CLL': -0.24993}, 'Recall': 0.534884, 'Learning time': 62.928999999999995, 'CLL': -0.245347}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6081489350995106;  // std dev = 0,433, 120,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=90 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10278856490048766;  // std dev = 2,192, 128,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=5 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.056744681921764274;  // std dev = 2,705, 94,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=8 */
%   | | | else return 0.29340073366065966;  // std dev = 8,266, 278,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=121 */
%   else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.43373862890338855;  // std dev = 0,471, 135,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=90 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09356130521694235;  // std dev = 2,195, 138,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=5 */
%   | | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03251883461540151;  // std dev = 2,679, 78,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=8 */
%   | | | else return 0.2372417924532259;  // std dev = 8,387, 289,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=121 */
%   else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.32842579739161176;  // std dev = 0,478, 139,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=90 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08227326241272864;  // std dev = 2,194, 134,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=5 */
%   | | | else return 0.3564123687585864;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03494292345004299;  // std dev = 2,689, 83,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=8 */
%   | | | else return 0.22063273819674345;  // std dev = 8,232, 275,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=121 */
%   else return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.605798838142215;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3942011618577851;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.32246550480888053;  // std dev = 0,451, 120,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=86 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07387853453821942;  // std dev = 2,194, 134,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=5 */
%   | | | else return 0.2849679265205379;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03543920446434858;  // std dev = 2,695, 87,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=8 */
%   | | | else return 0.17113492045510437;  // std dev = 8,300, 281,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=121 */
%   else return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4560853942993959;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3049390115363779;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.23752343429929326;  // std dev = 0,453, 121,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=86 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06913264811232467;  // std dev = 2,197, 143,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=5 */
%   | | | else return 0.3705138051445933;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04269732127199693;  // std dev = 2,712, 99,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=8 */
%   | | | else return 0.1479283621630494;  // std dev = 8,220, 274,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=121 */
%   else return -0.09269127618926105;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11770513939379215;  // std dev = 0,469, 139,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=90 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05396482410667773;  // std dev = 2,186, 114,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=5 */
%   | | | else return 0.28026690624173045;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02700312205511944;  // std dev = 2,695, 87,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=8 */
%   | | | else return 0.12287912454114218;  // std dev = 8,172, 270,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=121 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16291453352847496;  // std dev = 0,432, 126,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=90 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(H, C) )
%   | | | then return -0.055285304853511984;  // std dev = 2,193, 132,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=5 */
%   | | | else return 0.18357837520694656;  // std dev = 0,678, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.037724665793455216;  // std dev = 2,715, 102,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=8 */
%   | | | else return 0.0747682962421211;  // std dev = 8,323, 283,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=121 */
%   else return -0.07877675473109179;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.05634998165106027;  // std dev = 0,465, 138,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=90 */
%   | | else if ( haswordvenue(F, D), haswordvenue(G, C) )
%   | | | then return -0.052365336329052915;  // std dev = 2,195, 138,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=5 */
%   | | | else return -0.14595036813142703;  // std dev = 1,311, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.38766119203264315;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.045672141300690194;  // std dev = 2,160, 75,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=5 */
%   | | else return 0.06835852749733462;  // std dev = 0,496, 276,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=121 */
%   else return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.2750465183794911;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.31177004087422616;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.13964810307713593;  // std dev = 0,430, 114,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=86 */
%   | else if ( author(G, D), title(G, B) )
%   | | then return 0.13473793890907676;  // std dev = 0,409, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return -0.05269297236874993;  // std dev = 2,161, 86,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=5 */
%   | | | else return 0.03977998118095516;  // std dev = 0,912, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | then return -0.04528557991846092;  // std dev = 0,202, 148,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=8 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.00801781222893067;  // std dev = 0,489, 307,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=121 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2559680513031315;  // std dev = 0,112, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.049285872754370644;  // std dev = 0,452, 125,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=86 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.11897754581713675;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.06076054507023123;  // std dev = 2,159, 136,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=6 */
%   | | else return 0.02548893619257413;  // std dev = 0,457, 368,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=129 */
%   else return -0.06516670631681551;  // std dev = 0,014, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */


Results
   AUC ROC   = 0.718503
   AUC PR    = 0.076756
   CLL	      = -0.375521
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 178.452 seconds
Total inference time: 3.825 seconds
AUC ROC: 0.718503


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 04:40:08
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 3.825, 'Precision': [0.167742, 0.5], 'Learning time': 178.452, 'AUC PR': 0.076756, 'CLL': -0.375521, 'AUC ROC': 0.718503}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5558233537041616;  // std dev = 0,459, 129,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=90 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.07243464938522651;  // std dev = 0,410, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return -0.07733493586822965;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=4 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then if ( author(I, H), title(I, A) )
%   | | then return 0.10814893509951218;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( author(J, H), title(J, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.09056901361843638;  // std dev = 2,386, 117,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=6 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.26283120934700016;  // std dev = 0,491, 299,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=121 */
%   | | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.71848
   AUC PR    = 0.076753
   CLL	      = -0.216408
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.233 seconds
Total inference time: 1.966 seconds
AUC ROC: 0.71848


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 04:40:21
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.966, 'Precision': [nan, 0.5], 'Learning time': 10.233, 'AUC PR': 0.076753, 'CLL': -0.216408, 'AUC ROC': 0.71848}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.07442541224554991;  // std dev = 12,331, 897,000 (wgt'ed) examples reached here.  /* #neg=703 #pos=194 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.07132255002099122;  // std dev = 12,282, 872,000 (wgt'ed) examples reached here.  /* #neg=678 #pos=194 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.06092608491566075;  // std dev = 12,290, 876,000 (wgt'ed) examples reached here.  /* #neg=682 #pos=194 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.05692753156057432;  // std dev = 12,255, 859,000 (wgt'ed) examples reached here.  /* #neg=665 #pos=194 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.05090764910578547;  // std dev = 12,238, 851,000 (wgt'ed) examples reached here.  /* #neg=657 #pos=194 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.04071989335321272;  // std dev = 12,259, 861,000 (wgt'ed) examples reached here.  /* #neg=667 #pos=194 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.03346981898101719;  // std dev = 12,267, 865,000 (wgt'ed) examples reached here.  /* #neg=671 #pos=194 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.042007883638091124;  // std dev = 12,158, 815,000 (wgt'ed) examples reached here.  /* #neg=621 #pos=194 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.01647497109079931;  // std dev = 12,307, 885,000 (wgt'ed) examples reached here.  /* #neg=691 #pos=194 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,32e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.002744494773726098;  // std dev = 12,394, 932,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=194 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.249822
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 3.413 seconds
Total inference time: 1.932 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.715543
   AUC PR    = 0.465697
   CLL	      = -0.247755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.431085
   F1        = 0.602459


Total scoring time: 3.179 seconds
Parameter learned model CLL: -0.247755


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9e-07, 0, 147], 'false': [12.331, 703, 194]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [12.282, 678, 194]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.2e-07, 0, 147], 'false': [12.29, 682, 194]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.42e-07, 0, 147], 'false': [12.255, 665, 194]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.63e-07, 0, 147], 'false': [12.238, 657, 194]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [12.259, 667, 194]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.42e-07, 0, 147], 'false': [12.267, 671, 194]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [12.158, 621, 194]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [12.307, 691, 194]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.32e-08, 0, 147], 'false': [12.394, 738, 194]}]]
[{'': [5.5103314201803686e-15, 0.16950096257934158]}, {'': [-2.3201395453391025e-15, 0.1729810201161508]}, {'': [1.836777140060123e-15, 0.1724161297721046]}, {'': [1.3292466145171943e-15, 0.1748384902172559]}, {'': [4.712783451470053e-16, 0.17599809997501484]}, {'': [-1.570927817156684e-16, 0.17455056581426984]}, {'': [3.9877398435515827e-16, 0.1739770790871668]}, {'': [-3.021015032993623e-16, 0.18137528698859842]}, {'': [-3.6252180395923476e-17, 0.17115643652845164]}, {'': [2.718913529694261e-17, 0.16482620788740865]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4257165026670779;  // std dev = 0,495, 148,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=84 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.088918165868743;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.07418189196815683;  // std dev = 2,897, 133,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=9 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11506535061477388;  // std dev = 2,416, 224,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=6 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.1185039646853107;  // std dev = 8,068, 338,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=88 */
%   | | | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.13140466883528776;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.45660792086780666;  // std dev = 5,259, 123,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=81 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.061143977447796025;  // std dev = 3,030, 136,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=10 */
%   | | | else return 0.03360808276428892;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return -0.0034128550606664955;  // std dev = 1,620, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return -0.09377155996102152;  // std dev = 2,507, 193,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=7 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.10116704536827845;  // std dev = 8,080, 341,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=88 */
%   | | | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2914352862156004;  // std dev = 0,491, 147,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=84 */
%   | | else return 0.016391321561518103;  // std dev = 0,363, 673,000 (wgt'ed) examples reached here.  /* #neg=563 #pos=110 */
%   | else return -0.11921443564469937;  // std dev = 0,097, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.07859460664718493;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.31017305675886386;  // std dev = 5,259, 123,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=81 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08093016164215659;  // std dev = 3,022, 237,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=10 */
%   | | | else return 0.056965418629272964;  // std dev = 8,765, 460,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=100 */
%   | else return -0.10899978434770273;  // std dev = 0,116, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.036923291732225486;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.19200187259249024;  // std dev = 5,594, 132,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=81 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.045219358391263856;  // std dev = 3,286, 131,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=12 */
%   | | | else return 0.037067356811097275;  // std dev = 8,689, 509,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=98 */
%   | else return -0.0985259611340155;  // std dev = 0,082, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.002429998488907509;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.17383376004484008;  // std dev = 5,379, 126,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=81 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06739612688779563;  // std dev = 3,009, 195,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=10 */
%   | | | else return 0.04942423563625116;  // std dev = 8,730, 455,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=100 */
%   | else return -0.08863616231227536;  // std dev = 0,061, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.08020392735513783;  // std dev = 5,915, 145,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=84 */
%   | | | else return -0.06491543440428424;  // std dev = 3,020, 213,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=10 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05036888065846609;  // std dev = 3,294, 138,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=12 */
%   | | | else return 0.06888681114383043;  // std dev = 8,051, 334,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=88 */
%   | else return -0.08301843872442166;  // std dev = 0,090, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.05871687169221049;  // std dev = 5,935, 145,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=84 */
%   | | | else return -0.05219440478394373;  // std dev = 3,011, 189,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=10 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.034480141350687256;  // std dev = 3,276, 124,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=12 */
%   | | | else return 0.07375515975179343;  // std dev = 7,963, 315,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=88 */
%   | else return -0.07830246192343653;  // std dev = 0,095, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.057505102369169885;  // std dev = 0,493, 141,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=84 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05293525563254716;  // std dev = 3,021, 214,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=10 */
%   | | | else return 0.022995923788288717;  // std dev = 8,740, 459,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=100 */
%   | else return -0.07274149873016544;  // std dev = 0,059, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,32e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.059263035063631175;  // std dev = 5,705, 139,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=84 */
%   | | | else return -0.04775436432565077;  // std dev = 3,025, 208,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=10 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.03538047825363747;  // std dev = 3,281, 126,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=12 */
%   | | | else return 0.040041802589657116;  // std dev = 8,059, 336,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=88 */
%   | else return -0.06523595691503886;  // std dev = 0,040, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */


Results
   AUC ROC   = 0.826319
   AUC PR    = 0.521075
   CLL	      = -0.236345
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 76.939 seconds
Total inference time: 3.41 seconds
AUC ROC: 0.826319


Results scoring model
   AUC ROC   = 0.88853
   AUC PR    = 0.533874
   CLL	      = -0.228762
   Precision = 0.174713 at threshold = 0.5
   Recall    = 0.668622
   F1        = 0.277035


Total scoring time: 14.354 seconds
Refined model CLL: -0.228762


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826319
   AUC PR    = 0.521075
   CLL	      = -0.236345
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 97.88499999999999 seconds
Total inference time: 3.41 seconds
AUC ROC: 0.826319
Total revision time: 97.88499999999999
Best scored revision CLL: -0.228762


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:42:05
{'F1': 0.422018, 'Inference time': 3.41, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826319, 'AUC PR': 0.521075, 'parameter_0.6': {'F1': 0.597826, 'Inference time': 1.932, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 3.413, 'CLL': -0.249822}, 'Recall': 0.534884, 'Learning time': 97.88499999999999, 'CLL': -0.236345}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.5516973221962835;  // std dev = 0,461, 186,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=129 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11043745233504294;  // std dev = 2,411, 191,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=6 */
%   | | | else return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.06131415214880981;  // std dev = 3,322, 149,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=12 */
%   | | | else return 0.3113509055428579;  // std dev = 10,030, 406,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=184 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.44888090829403215;  // std dev = 0,470, 192,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=129 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09937506438433188;  // std dev = 2,413, 203,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=6 */
%   | | | else return 0.464115071835801;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04883566462727782;  // std dev = 3,312, 140,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=12 */
%   | | | else return 0.2668558146262612;  // std dev = 10,051, 408,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=184 */
%   else return -0.12544463852839155;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.5822633050837747;  // std dev = 0,120, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.31014922156626495;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3651074097640115;  // std dev = 0,464, 193,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=130 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08847354390113721;  // std dev = 2,413, 202,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=6 */
%   | | | else return 0.21224395309050248;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0413727810713228;  // std dev = 3,309, 137,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=12 */
%   | | | else return 0.19247030358947326;  // std dev = 10,330, 438,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=184 */
%   else return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.428784168977595;  // std dev = 0,062, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.154179677410645;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.38928111991659814;  // std dev = 0,411, 165,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=129 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07768457130312051;  // std dev = 2,411, 190,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=6 */
%   | | | else return 0.16687025511385167;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03679618840360308;  // std dev = 3,309, 137,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=12 */
%   | | | else return 0.18230520071866327;  // std dev = 10,101, 413,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=184 */
%   else return -0.10159632948783616;  // std dev = 5,37e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17651664053618354;  // std dev = 0,454, 207,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=135 */
%   | else return 0.06702732814602093;  // std dev = 0,414, 734,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=206 */
%   else return -0.09269127618926107;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1745303174566362;  // std dev = 0,440, 193,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=135 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.05843605323541482;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.08196419663065929;  // std dev = 2,313, 171,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04608496810826363;  // std dev = 3,320, 147,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=12 */
%   | | | else return 0.09096439873791264;  // std dev = 10,461, 454,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=184 */
%   else return -0.08518475138839679;  // std dev = 2,58e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.25639370429477587;  // std dev = 0,049, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18163325424427917;  // std dev = 1,29e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.14540207174880154;  // std dev = 0,447, 179,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=129 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07167088867867112;  // std dev = 2,400, 196,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=6 */
%   | | | else return 0.07675223424916272;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03756458079308018;  // std dev = 3,313, 141,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=12 */
%   | | | else return 0.10805792371938475;  // std dev = 10,130, 416,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=184 */
%   else return -0.0787767547310917;  // std dev = 2,79e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.21070276833264515;  // std dev = 0,043, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.15617680366453696;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.1134612388091569;  // std dev = 0,446, 178,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=129 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.01889830065486356;  // std dev = 1,316, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return -0.06919966209588661;  // std dev = 2,534, 187,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.015236847421606933;  // std dev = 3,280, 116,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=12 */
%   | | | else return 0.08253714382762084;  // std dev = 10,140, 417,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=184 */
%   else return -0.07324622576333704;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.08492915245347939;  // std dev = 0,625, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.06073280622736705;  // std dev = 6,185, 190,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=130 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06169177889027318;  // std dev = 2,399, 205,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=6 */
%   | | | else return 0.07499455360699031;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.030893705049174363;  // std dev = 3,023, 116,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=10 */
%   | | | else return 0.5495660650657682;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.05605279929967228;  // std dev = 0,496, 424,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=184 */
%   else return -0.06842697784420267;  // std dev = 3,73e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07722709937264029;  // std dev = 0,420, 192,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=135 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.05412943921689421;  // std dev = 1,589, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return -0.05992273342318261;  // std dev = 2,281, 189,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.022758081572256252;  // std dev = 3,262, 130,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=12 */
%   | | | else return 0.02700737591872425;  // std dev = 10,347, 440,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=184 */
%   else return -0.06419184008202625;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */


Results
   AUC ROC   = 0.718292
   AUC PR    = 0.076755
   CLL	      = -0.380607
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 312.249 seconds
Total inference time: 4.184 seconds
AUC ROC: 0.718292


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 04:47:22
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 4.184, 'Precision': [0.167742, 0.5], 'Learning time': 312.249, 'AUC PR': 0.076755, 'CLL': -0.380607, 'AUC ROC': 0.718292}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5540252237593031;  // std dev = 0,460, 194,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=135 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10976550340316173;  // std dev = 2,410, 187,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=6 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0392869623363851;  // std dev = 3,282, 117,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=12 */
%   | | | else return 0.2931371147685388;  // std dev = 10,196, 423,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=184 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 0.718659
   AUC PR    = 0.076768
   CLL	      = -0.219125
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.161 seconds
Total inference time: 1.84 seconds
AUC ROC: 0.718659


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 04:47:44
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.84, 'Precision': [nan, 0.5], 'Learning time': 20.161, 'AUC PR': 0.076768, 'CLL': -0.219125, 'AUC ROC': 0.718659}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else return 0.07713952534758271;  // std dev = 14,140, 1.169,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=256 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else return 0.058677540720864674;  // std dev = 14,219, 1.218,000 (wgt'ed) examples reached here.  /* #neg=962 #pos=256 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,31e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else return 0.0685567204659372;  // std dev = 14,060, 1.124,000 (wgt'ed) examples reached here.  /* #neg=868 #pos=256 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831;  // std dev = 2,80e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else return 0.058155535812668496;  // std dev = 14,070, 1.129,000 (wgt'ed) examples reached here.  /* #neg=873 #pos=256 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 4,13e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else return 0.05289924877718278;  // std dev = 14,042, 1.114,000 (wgt'ed) examples reached here.  /* #neg=858 #pos=256 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694885;  // std dev = 4,32e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else return 0.043020082419886786;  // std dev = 14,060, 1.124,000 (wgt'ed) examples reached here.  /* #neg=868 #pos=256 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253498;  // std dev = 3,04e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else return 0.025643923915358607;  // std dev = 14,158, 1.180,000 (wgt'ed) examples reached here.  /* #neg=924 #pos=256 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.177096497745278;  // std dev = 0,000, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else return 0.027692543210961047;  // std dev = 14,104, 1.148,000 (wgt'ed) examples reached here.  /* #neg=892 #pos=256 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else return 0.01911052468184361;  // std dev = 14,142, 1.170,000 (wgt'ed) examples reached here.  /* #neg=914 #pos=256 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 1,38e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else return 0.011103413387224096;  // std dev = 14,186, 1.197,000 (wgt'ed) examples reached here.  /* #neg=941 #pos=256 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.248334
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 4.299 seconds
Total inference time: 2.279 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.718681
   AUC PR    = 0.471787
   CLL	      = -0.246047
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.437363
   F1        = 0.608563


Total scoring time: 4.208 seconds
Parameter learned model CLL: -0.246047


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 199], 'false': [14.14, 913, 256]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 199], 'false': [14.219, 962, 256]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.31e-07, 0, 199], 'false': [14.06, 868, 256]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.8e-07, 0, 199], 'false': [14.07, 873, 256]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.13e-07, 0, 199], 'false': [14.042, 858, 256]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.32e-07, 0, 199], 'false': [14.06, 868, 256]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 199], 'false': [14.158, 924, 256]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 199], 'false': [14.104, 892, 256]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 199], 'false': [14.142, 914, 256]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.38e-07, 0, 199], 'false': [14.186, 941, 256]}]]
[{'': [5.855729078625951e-15, 0.1710337116308762]}, {'': [-3.641977841584433e-15, 0.16600472927973856]}, {'': [1.999517246360081e-15, 0.17588429731133431]}, {'': [3.9276231624930163e-16, 0.1753340744570503]}, {'': [8.569359627257489e-16, 0.17699331827015988]}, {'': [9.372737092312879e-16, 0.1758842973113316]}, {'': [4.641736464764474e-16, 0.16988221775351897]}, {'': [-9.372737092312879e-17, 0.17326906967427294]}, {'': [-1.1158020347991522e-16, 0.1709284827233534]}, {'': [9.59589749927271e-17, 0.16812848048832105]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.48672036367093807;  // std dev = 0,483, 175,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08423789617620804;  // std dev = 3,632, 243,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=14 */
%   | | | else return 0.08573514199606076;  // std dev = 10,097, 580,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=132 */
%   | else return -0.14185106490048763;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.37316782319841524;  // std dev = 0,493, 188,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07742814977725822;  // std dev = 3,638, 257,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=14 */
%   | | | else return 0.05791495380837216;  // std dev = 10,208, 627,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=132 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,31e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3476936711658485;  // std dev = 0,483, 175,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07566780864153567;  // std dev = 3,651, 294,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=14 */
%   | | | else return 0.05938135583320656;  // std dev = 10,149, 601,000 (wgt'ed) examples reached here.  /* #neg=469 #pos=132 */
%   | else return -0.11231637819360622;  // std dev = 6,23e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831;  // std dev = 2,80e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2228671556167292;  // std dev = 0,494, 190,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=110 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09064324388197056;  // std dev = 3,461, 174,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=13 */
%   | | | else return 0.038703196685087066;  // std dev = 10,241, 707,000 (wgt'ed) examples reached here.  /* #neg=574 #pos=133 */
%   | else return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 4,13e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1554530405529868;  // std dev = 0,496, 195,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06642768361579754;  // std dev = 3,641, 267,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=14 */
%   | | | else return 0.07191897324552933;  // std dev = 9,970, 548,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=132 */
%   | else return -0.09269127618926104;  // std dev = 2,79e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694885;  // std dev = 4,32e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.13842734796983802;  // std dev = 0,493, 188,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06272711655437313;  // std dev = 3,646, 285,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=14 */
%   | | | else return 0.040634414901630556;  // std dev = 10,109, 599,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=132 */
%   | else return -0.08518475138839682;  // std dev = 5,05e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253498;  // std dev = 3,04e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.21442470564496385;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.11777868418554392;  // std dev = 6,521, 177,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=106 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09795909736222969;  // std dev = 3,471, 182,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=13 */
%   | | | else return 0.03810688129750732;  // std dev = 10,078, 683,000 (wgt'ed) examples reached here.  /* #neg=550 #pos=133 */
%   | else return -0.07877675473109155;  // std dev = 6,75e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.177096497745278;  // std dev = 0,000, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.016989510600543618;  // std dev = 1,294, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.028189055478978917;  // std dev = 7,025, 200,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=107 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09706214308381193;  // std dev = 3,072, 201,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=10 */
%   | | | else return 0.1391944612591549;  // std dev = 1,409, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.07171411798290082;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.05952244857679808;  // std dev = 3,374, 254,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=12 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.07507742512501572;  // std dev = 9,310, 438,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=119 */
%   | | | else return -0.07324622576333707;  // std dev = 1,29e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08721582624795161;  // std dev = 0,489, 183,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04912419562648768;  // std dev = 3,631, 252,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=14 */
%   | | | else return 0.025389862551655176;  // std dev = 10,037, 609,000 (wgt'ed) examples reached here.  /* #neg=477 #pos=132 */
%   | else return -0.06973462361613696;  // std dev = 0,041, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 1,38e-07, 199,000 (wgt'ed) examples reached here.  /* #pos=199 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.2162777083724028;  // std dev = 2,000, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return -0.03728459014030062;  // std dev = 7,380, 353,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=109 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.04805629428596299;  // std dev = 3,639, 265,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=14 */
%   | | | else return 0.07378079915310447;  // std dev = 9,213, 415,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=119 */
%   | else return -0.06483519302419535;  // std dev = 0,032, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */


Results
   AUC ROC   = 0.826664
   AUC PR    = 0.520286
   CLL	      = -0.237056
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 83.561 seconds
Total inference time: 3.24 seconds
AUC ROC: 0.826664


Results scoring model
   AUC ROC   = 0.886224
   AUC PR    = 0.546935
   CLL	      = -0.228429
   Precision = 0.173643 at threshold = 0.5
   Recall    = 0.674725
   F1        = 0.276203


Total scoring time: 21.125 seconds
Refined model CLL: -0.228429


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826664
   AUC PR    = 0.520286
   CLL	      = -0.237056
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 113.19300000000001 seconds
Total inference time: 3.24 seconds
AUC ROC: 0.826664
Total revision time: 113.19300000000001
Best scored revision CLL: -0.228429


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:49:44
{'F1': 0.422018, 'Inference time': 3.24, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826664, 'parameter_0.8': {'F1': 0.597826, 'Inference time': 2.279, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 4.299, 'CLL': -0.248334}, 'AUC PR': 0.520286, 'Recall': 0.534884, 'Learning time': 113.19300000000001, 'CLL': -0.237056}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.519439257680154;  // std dev = 0,473, 248,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=164 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10535471453552472;  // std dev = 3,104, 274,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=10 */
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.05851773156715433;  // std dev = 3,452, 156,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=13 */
%   | | | else return 0.3176083945589673;  // std dev = 11,740, 555,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=255 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.48640787299816624;  // std dev = 0,457, 233,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=164 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06877677503395069;  // std dev = 3,058, 150,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=10 */
%   | | | else return 0.2944629826197857;  // std dev = 1,308, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.15910201831642584;  // std dev = 0,459, 822,000 (wgt'ed) examples reached here.  /* #neg=553 #pos=269 */
%   else return -0.1254446385283913;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3811104225793169;  // std dev = 0,450, 251,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=173 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06328720669811404;  // std dev = 3,062, 155,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=10 */
%   | | | else return 0.4282545616550536;  // std dev = 1,092, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G), haswordvenue(J, C) )
%   | | | then return -0.11049765249317531;  // std dev = 3,102, 263,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=10 */
%   | | | else return 0.15517859805450768;  // std dev = 1,562, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.2410559210840269;  // std dev = 0,498, 565,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=255 */
%   else return -0.11231637819360625;  // std dev = 6,32e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4603999199046043;  // std dev = 2,58e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.15627817181255962;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.3087137273662466;  // std dev = 0,455, 232,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=164 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0987919666365635;  // std dev = 3,110, 267,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=10 */
%   | | | else return 0.17962694235840151;  // std dev = 1,515, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03844100557130444;  // std dev = 3,362, 153,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=13 */
%   | | | else return 0.18809292170695105;  // std dev = 11,937, 578,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=255 */
%   else return -0.10159632948783637;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3499787332824144;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.13676020478601206;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.17944500216494771;  // std dev = 0,476, 251,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=164 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08343961213477381;  // std dev = 3,103, 240,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=10 */
%   | | | else return 0.24152452852014153;  // std dev = 1,388, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.10992665309531678;  // std dev = 0,462, 741,000 (wgt'ed) examples reached here.  /* #neg=473 #pos=268 */
%   else return -0.09269127618926089;  // std dev = 6,32e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.17773751868204873;  // std dev = 0,449, 248,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=173 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07790744373145343;  // std dev = 3,109, 260,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=10 */
%   | | | else return 0.2784163101127116;  // std dev = 1,234, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07361457454949547;  // std dev = 3,075, 184,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=10 */
%   | | | else return 0.3435141957375126;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.1493825539590572;  // std dev = 0,499, 551,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=255 */
%   else return -0.0851847513883968;  // std dev = 6,14e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13438059859261886;  // std dev = 0,449, 248,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=173 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07041014863098204;  // std dev = 3,107, 266,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=10 */
%   | | | else return 0.20408314814544534;  // std dev = 1,269, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05530136820373554;  // std dev = 3,346, 185,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=13 */
%   | | | else return 0.09476066051054399;  // std dev = 11,937, 578,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=255 */
%   else return -0.07877675473109158;  // std dev = 5,96e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.21734100129274792;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.15881046712021815;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.09345886973877741;  // std dev = 0,463, 238,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=164 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.014536339862653746;  // std dev = 1,923, 31,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return -0.06709854861291195;  // std dev = 2,794, 230,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03819648920644727;  // std dev = 3,313, 163,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=13 */
%   | | | else return 0.09211771398912252;  // std dev = 11,731, 554,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=255 */
%   else return -0.07324622576333707;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09848691454055818;  // std dev = 0,434, 245,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=173 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05828252189011182;  // std dev = 3,101, 260,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=10 */
%   | | | else return 0.1865496285434683;  // std dev = 1,223, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04072313557944331;  // std dev = 3,327, 178,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=13 */
%   | | | else return 0.05595666580192272;  // std dev = 11,888, 572,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=255 */
%   else return -0.06842697784420264;  // std dev = 6,05e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.09321025656884944;  // std dev = 0,427, 238,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=173 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05164359709216463;  // std dev = 3,110, 171,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=10 */
%   | | | else return -0.0356232615701765;  // std dev = 1,458, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.010518251281473632;  // std dev = 1,894, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return -0.05623207416905404;  // std dev = 2,810, 208,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=10 */
%   | | else return 0.03566167371601267;  // std dev = 0,496, 581,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=255 */
%   else return -0.06419184008202626;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 0.718427
   AUC PR    = 0.076759
   CLL	      = -0.391971
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 379.535 seconds
Total inference time: 4.245 seconds
AUC ROC: 0.718427


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 04:56:08
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 4.245, 'Precision': [0.167742, 0.5], 'Learning time': 379.535, 'AUC PR': 0.076759, 'CLL': -0.391971, 'AUC ROC': 0.718427}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5235335504841241;  // std dev = 0,472, 260,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=173 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10368312596919046;  // std dev = 3,101, 262,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=10 */
%   | | | else return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07586121718475161;  // std dev = 3,485, 197,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=13 */
%   | | | else return 0.3063035923930052;  // std dev = 11,863, 569,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=255 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */


Results
   AUC ROC   = 0.718659
   AUC PR    = 0.076768
   CLL	      = -0.219501
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 27.804 seconds
Total inference time: 1.905 seconds
AUC ROC: 0.718659


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 04:56:38
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.905, 'Precision': [nan, 0.5], 'Learning time': 27.804, 'AUC PR': 0.076768, 'CLL': -0.219501, 'AUC ROC': 0.718659}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,07e-06, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.08005904745905795;  // std dev = 15,680, 1.424,000 (wgt'ed) examples reached here.  /* #neg=1.108 #pos=316 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.06833028973492906;  // std dev = 15,698, 1.435,000 (wgt'ed) examples reached here.  /* #neg=1.119 #pos=316 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,46e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.052766494241929016;  // std dev = 15,763, 1.479,000 (wgt'ed) examples reached here.  /* #neg=1.163 #pos=316 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.05935857960636481;  // std dev = 15,624, 1.389,000 (wgt'ed) examples reached here.  /* #neg=1.073 #pos=316 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601501;  // std dev = 1,88e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.03704780949415208;  // std dev = 15,763, 1.479,000 (wgt'ed) examples reached here.  /* #neg=1.163 #pos=316 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,21e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.026106423860910624;  // std dev = 15,818, 1.518,000 (wgt'ed) examples reached here.  /* #neg=1.202 #pos=316 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.03392038884673014;  // std dev = 15,701, 1.437,000 (wgt'ed) examples reached here.  /* #neg=1.121 #pos=316 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.027664290921276327;  // std dev = 15,711, 1.444,000 (wgt'ed) examples reached here.  /* #neg=1.128 #pos=316 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.01977239526018607;  // std dev = 15,747, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.152 #pos=316 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801112;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.028559865927453226;  // std dev = 15,627, 1.391,000 (wgt'ed) examples reached here.  /* #neg=1.075 #pos=316 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.246766
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 4.919 seconds
Total inference time: 1.932 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.72232
   AUC PR    = 0.478862
   CLL	      = -0.244214
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44464
   F1        = 0.615572


Total scoring time: 4.196 seconds
Parameter learned model CLL: -0.244214


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.07e-06, 0, 253], 'false': [15.68, 1108, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.698, 1119, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.46e-07, 0, 253], 'false': [15.763, 1163, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.624, 1073, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.88e-07, 0, 253], 'false': [15.763, 1163, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.21e-07, 0, 253], 'false': [15.818, 1202, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 253], 'false': [15.701, 1121, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.711, 1128, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.747, 1152, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.627, 1075, 316]}]]
[{'': [4.49355089808759e-15, 0.17266601439212323]}, {'': [-4.3812121256354e-15, 0.17171702946496634]}, {'': [7.863714071653283e-16, 0.1680081885637241]}, {'': [-3.3701631735656924e-16, 0.17574473091829498]}, {'': [1.404234655652372e-16, 0.16800818856371585]}, {'': [4.0722805013918787e-16, 0.16483445904307467]}, {'': [3.2297397080004555e-16, 0.1715454324011539]}, {'': [-1.4042346556523718e-17, 0.1709471228735167]}, {'': [-1.6148698540002277e-16, 0.1689224806777181]}, {'': [-1.0531759917392789e-17, 0.17556635265940443]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,07e-06, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.42117414518354246;  // std dev = 0,496, 238,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=134 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08551303673147369;  // std dev = 3,365, 213,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=12 */
%   | | | else return 0.16584124279182003;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.04185106490048773;  // std dev = 2,121, 50,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | | else return -0.10693042997985328;  // std dev = 3,258, 315,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=11 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.12505284969025515;  // std dev = 10,486, 562,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=150 */
%   | | | else return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.13213569451975377;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.4062789967004371;  // std dev = 7,143, 214,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=130 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0837415731521211;  // std dev = 3,901, 342,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=16 */
%   | | | else return 0.06805427405049808;  // std dev = 11,314, 759,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=166 */
%   | else return -0.13058746494075654;  // std dev = 0,108, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,46e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.012020503902813293;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.269559903865855;  // std dev = 7,700, 239,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=130 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07749590378277314;  // std dev = 3,907, 366,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=16 */
%   | | | else return 0.05547138980996561;  // std dev = 11,332, 775,000 (wgt'ed) examples reached here.  /* #neg=609 #pos=166 */
%   | else return -0.1150527682289966;  // std dev = 0,071, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.27050258330805294;  // std dev = 1,383, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.24254054499632957;  // std dev = 7,430, 229,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=130 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06541504100420402;  // std dev = 3,898, 337,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=16 */
%   | | | else return 0.06394091507671087;  // std dev = 11,220, 717,000 (wgt'ed) examples reached here.  /* #neg=551 #pos=166 */
%   | else return -0.10477842098922516;  // std dev = 0,090, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601501;  // std dev = 1,88e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.3122962867708466;  // std dev = 1,228, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.21692481730794452;  // std dev = 7,154, 218,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=130 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06171143374193213;  // std dev = 3,905, 354,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=16 */
%   | | | else return 0.042328635514841347;  // std dev = 11,311, 757,000 (wgt'ed) examples reached here.  /* #neg=591 #pos=166 */
%   | else return -0.09474552961845817;  // std dev = 0,053, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,21e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1299830594566243;  // std dev = 0,491, 239,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=134 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08753935222329515;  // std dev = 3,815, 226,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=16 */
%   | | | else return 0.02521314492479611;  // std dev = 11,353, 919,000 (wgt'ed) examples reached here.  /* #neg=753 #pos=166 */
%   | else return -0.08760574744996087;  // std dev = 0,072, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.09921857276633969;  // std dev = 7,583, 238,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=134 */
%   | | | else return -0.05232897516944972;  // std dev = 3,892, 315,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=16 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07744457030591102;  // std dev = 3,821, 221,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=16 */
%   | | | else return 0.07608694332210648;  // std dev = 10,459, 554,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=150 */
%   | else return -0.08130577431157393;  // std dev = 0,074, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.13492007163369837;  // std dev = 1,724, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.09097885116354977;  // std dev = 7,323, 221,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=130 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06809728506499121;  // std dev = 3,822, 227,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=16 */
%   | | | else return 0.02702969652619519;  // std dev = 11,232, 861,000 (wgt'ed) examples reached here.  /* #neg=695 #pos=166 */
%   | else return -0.07504550483455319;  // std dev = 0,063, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.05770965113924956;  // std dev = 7,558, 236,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=134 */
%   | | | else return -0.054823672553091854;  // std dev = 3,902, 351,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=16 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.060158894345703734;  // std dev = 3,825, 222,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=16 */
%   | | | else return 0.07007840058353529;  // std dev = 10,382, 533,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=150 */
%   | else return -0.07012840864320335;  // std dev = 0,066, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801112;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.0861867632400747;  // std dev = 1,689, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.05667355070737272;  // std dev = 7,297, 220,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=130 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.047040639962343034;  // std dev = 3,896, 329,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=16 */
%   | | | else return 0.023473098598180104;  // std dev = 11,161, 765,000 (wgt'ed) examples reached here.  /* #neg=599 #pos=166 */
%   | else return -0.06567954210021566;  // std dev = 0,062, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 0.826611
   AUC PR    = 0.521091
   CLL	      = -0.234082
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 112.613 seconds
Total inference time: 3.363 seconds
AUC ROC: 0.826611


Results scoring model
   AUC ROC   = 0.887177
   AUC PR    = 0.540362
   CLL	      = -0.225555
   Precision = 0.17198 at threshold = 0.5
   Recall    = 0.673111
   F1        = 0.273963


Total scoring time: 22.304 seconds
Refined model CLL: -0.225555


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826611
   AUC PR    = 0.521091
   CLL	      = -0.234082
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 144.03199999999998 seconds
Total inference time: 3.363 seconds
AUC ROC: 0.826611
Total revision time: 144.03199999999998
Best scored revision CLL: -0.225555


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:59:09
{'parameter_1.0': {'F1': 0.597826, 'Inference time': 1.932, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 4.919, 'CLL': -0.246766}, 'F1': 0.422018, 'Inference time': 3.363, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826611, 'AUC PR': 0.521091, 'Recall': 0.534884, 'Learning time': 144.03199999999998, 'CLL': -0.234082}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.23314893509951237;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.5578189020962081;  // std dev = 7,979, 303,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=212 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08680519334085478;  // std dev = 3,367, 218,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=12 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10592292118791324;  // std dev = 3,401, 334,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=12 */
%   | | | else return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.3001069770575497;  // std dev = 0,497, 715,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=316 */
%   else return -0.1418510649004878;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.468816785297427;  // std dev = 0,462, 320,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=221 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07630962941722433;  // std dev = 3,367, 217,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=12 */
%   | | | else return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09217250324814026;  // std dev = 3,399, 322,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=12 */
%   | | | else return 0.2776499356759928;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordvenue(J, C) )
%   | | | then return 0.25203145487593237;  // std dev = 13,133, 702,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=305 */
%   | | | else return 0.4286696315141147;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.12544463852839124;  // std dev = 6,32e-08, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.37394595748129955;  // std dev = 0,461, 323,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0836886412059729;  // std dev = 3,405, 332,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=12 */
%   | | | else return 0.16242827947886995;  // std dev = 1,578, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05314074028045828;  // std dev = 3,746, 220,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=16 */
%   | | | else return 0.2201185144575325;  // std dev = 13,246, 712,000 (wgt'ed) examples reached here.  /* #neg=396 #pos=316 */
%   else return -0.11231637819360617;  // std dev = 9,77e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3103658291162404;  // std dev = 0,452, 313,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07463371327664144;  // std dev = 3,406, 324,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=12 */
%   | | | else return 0.14383913550295635;  // std dev = 1,556, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.043942020677253724;  // std dev = 3,745, 208,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=16 */
%   | | | else return 0.20303646806518075;  // std dev = 12,965, 676,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=316 */
%   else return -0.10159632948783628;  // std dev = 2,98e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1927141950929522;  // std dev = 0,470, 332,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.011417047950279587;  // std dev = 2,114, 42,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | | else return -0.0727721986733561;  // std dev = 3,123, 287,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=11 */
%   | | else return 0.09904316610426334;  // std dev = 0,460, 918,000 (wgt'ed) examples reached here.  /* #neg=586 #pos=332 */
%   else return -0.09269127618926079;  // std dev = 7,60e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.16572059252370241;  // std dev = 0,461, 322,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=221 */
%   | | else if ( haswordvenue(F, D), haswordvenue(G, C) )
%   | | | then return -0.06034430887157759;  // std dev = 3,390, 318,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=12 */
%   | | | else return 0.08348357078729665;  // std dev = 1,555, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else return 0.10095907899228011;  // std dev = 0,462, 871,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=332 */
%   else return -0.0851847513883968;  // std dev = 6,14e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.14860355704458778;  // std dev = 0,451, 311,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=221 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.04294560279378667;  // std dev = 0,377, 29,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return -0.09215062598983376;  // std dev = 2,593, 205,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=7 */
%   | | | else return 0.09114719774369752;  // std dev = 1,528, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then if ( author(I, H), title(I, B) )
%   | | then if ( haswordvenue(J, G) )
%   | | | then return 0.06018077982744519;  // std dev = 2,047, 32,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return -0.14520005399648692;  // std dev = 0,159, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.060243538986114294;  // std dev = 0,171, 324,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=11 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.07904898078207505;  // std dev = 0,495, 737,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=316 */
%   | | else return -0.0787767547310918;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08515680157931708;  // std dev = 0,464, 323,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(H, C) )
%   | | | then return -0.05676736439784198;  // std dev = 3,398, 361,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=12 */
%   | | | else return 0.12208767393607324;  // std dev = 1,508, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.05968513572261744;  // std dev = 3,713, 229,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=16 */
%   | | | else return 0.08618665779507535;  // std dev = 13,124, 696,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=316 */
%   else return -0.07474613148632245;  // std dev = 0,037, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.04625772574895163;  // std dev = 0,471, 332,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=221 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.04751501256690425;  // std dev = 3,391, 314,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=12 */
%   | | | else return 0.14287802908642305;  // std dev = 1,499, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.060071268529583846;  // std dev = 3,343, 203,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=12 */
%   | | | else return 0.302237061526185;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.06664392624887915;  // std dev = 0,497, 695,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=316 */
%   else return -0.0695363565599859;  // std dev = 0,034, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.18094733023681098;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.0347732605804868;  // std dev = 8,380, 317,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=212 */
%   | | else if ( author(G, E), title(G, A) )
%   | | | then return 0.028209080189442265;  // std dev = 1,610, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return -0.049752671566819444;  // std dev = 3,382, 319,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=13 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.048003820002629864;  // std dev = 3,334, 184,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=12 */
%   | | | else return 0.3340760610920717;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(K, C) )
%   | | | then return 0.05560913771367651;  // std dev = 12,850, 665,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=305 */
%   | | | else return 0.20089595584209233;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   else return -0.06493424000777101;  // std dev = 0,033, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */


Results
   AUC ROC   = 0.718012
   AUC PR    = 0.07674
   CLL	      = -0.394508
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 727.36 seconds
Total inference time: 4.445 seconds
AUC ROC: 0.718012


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 05:11:21
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 4.445, 'Precision': [0.167742, 0.5], 'Learning time': 727.36, 'AUC PR': 0.07674, 'CLL': -0.394508, 'AUC ROC': 0.718012}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.5719536489042223;  // std dev = 0,452, 297,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=212 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10726893233564652;  // std dev = 3,404, 347,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=12 */
%   | | | else return 0.14386322081379804;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.07167562630399643;  // std dev = 3,857, 228,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=16 */
%   | | | else return 0.2789212386947141;  // std dev = 13,529, 751,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=316 */
%   else return -0.14185106490048796;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */


Results
   AUC ROC   = 0.718659
   AUC PR    = 0.076768
   CLL	      = -0.217205
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 38.811 seconds
Total inference time: 1.978 seconds
AUC ROC: 0.718659


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 05:12:02
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.978, 'Precision': [nan, 0.5], 'Learning time': 38.811, 'AUC PR': 0.076768, 'CLL': -0.217205, 'AUC ROC': 0.718659}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 544
Target train neg examples: 22302

Target test facts examples: 8644
Target test pos	 examples: 154
Target test neg examples: 5694

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else return 0.08382986895165284;  // std dev = 6,702, 257,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=58 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else return 0.04626500403007417;  // std dev = 6,818, 292,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=58 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 4,21e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else return 0.05324200383070343;  // std dev = 6,762, 274,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=58 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else return 0.04296751297762607;  // std dev = 6,775, 278,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=58 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601495;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else return 0.04553827312180267;  // std dev = 6,738, 267,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=58 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else return 0.04226887004413563;  // std dev = 6,724, 263,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=58 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 3,65e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else return 0.032688816252983637;  // std dev = 6,738, 267,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=58 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else return 0.03794135537076487;  // std dev = 6,694, 255,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=58 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else return 0.010267749185810441;  // std dev = 6,788, 282,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=58 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,16e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else return -0.005606239321399432;  // std dev = 6,848, 303,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=58 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.236984
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 2.235 seconds
Total inference time: 2.42 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.731481
   AUC PR    = 0.497368
   CLL	      = -0.23524
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.462963
   F1        = 0.632911


Total scoring time: 2.51 seconds
Parameter learned model CLL: -0.23524


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 50], 'false': [6.702, 199, 58]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 50], 'false': [6.818, 234, 58]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 50], 'false': [6.762, 216, 58]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 50], 'false': [6.775, 220, 58]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 50], 'false': [6.738, 209, 58]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 50], 'false': [6.724, 205, 58]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.65e-08, 0, 50], 'false': [6.738, 209, 58]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 50], 'false': [6.694, 197, 58]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 50], 'false': [6.788, 224, 58]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.16e-08, 0, 50], 'false': [6.848, 245, 58]}]]
[{'': [4.263256414560601e-16, 0.17474904994776688]}, {'': [-5.684341886080802e-16, 0.15917620566710527]}, {'': [3.552713678800501e-17, 0.16687090415045913]}, {'': [-3.552713678800501e-16, 0.165105325811296]}, {'': [-1.7763568394002505e-17, 0.17004025866543254]}, {'': [-2.6645352591003756e-17, 0.17189781549538272]}, {'': [2.6645352591003756e-17, 0.1700402586654318]}, {'': [-5.773159728050814e-17, 0.17571703191080176]}, {'': [-3.552713678800501e-17, 0.16337206377949035]}, {'': [1.9984014443252817e-17, 0.1547778540230241]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4867203636709401;  // std dev = 0,483, 35,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07208362304002264;  // std dev = 1,671, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.12572203264242315;  // std dev = 0,992, 62,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.09252393509951129;  // std dev = 4,793, 128,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=30 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2119385597803108;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.4351202637491009;  // std dev = 2,787, 34,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.11243867713755715;  // std dev = 0,993, 67,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1 */
%   | | | else return 0.07439204255101434;  // std dev = 5,181, 157,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=35 */
%   | else return -0.12705070184646847;  // std dev = 0,012, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 4,21e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2486291868148103;  // std dev = 0,493, 41,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07991020356711276;  // std dev = 1,676, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | | else return 0.4636359768418181;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.11343673223525133;  // std dev = 0,001, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09883642112490114;  // std dev = 0,992, 61,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07281215347015685;  // std dev = 4,787, 127,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=30 */
%   | | | else return -0.11215635109161992;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.20885720887888262;  // std dev = 0,491, 40,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09220304435998122;  // std dev = 0,993, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
%   | | | else return 0.08019479993189246;  // std dev = 5,068, 143,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=35 */
%   | else return -0.10400391764361305;  // std dev = 0,015, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601495;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11641891715940433;  // std dev = 0,489, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08347351229092544;  // std dev = 1,004, 62,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=1 */
%   | | | else return 0.029804574809934887;  // std dev = 5,199, 170,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=35 */
%   | else return -0.09482289619667739;  // std dev = 0,013, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.22254094980535868;  // std dev = 0,478, 34,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07637356459781128;  // std dev = 0,993, 72,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=1 */
%   | | | else return 0.06335282390812408;  // std dev = 5,078, 142,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=35 */
%   | else return -0.08683237868107807;  // std dev = 0,014, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 3,65e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2079169183757229;  // std dev = 0,464, 32,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06739202186055711;  // std dev = 0,992, 59,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=1 */
%   | | | else return 0.04381305116627383;  // std dev = 5,102, 149,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=35 */
%   | else return -0.0808572675250658;  // std dev = 0,014, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08842734820286788;  // std dev = 0,478, 36,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.07761160622866749;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06324375243301902;  // std dev = 1,000, 56,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09490702807982046;  // std dev = 1,676, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | | else return 0.3318896914819633;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07337419138001797;  // std dev = 4,646, 107,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   | | | else return -0.07258959645059282;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.05410719567105203;  // std dev = 2,902, 37,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return -0.06143078028219429;  // std dev = 1,000, 69,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0472448779639076;  // std dev = 1,931, 42,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | | else return 0.04618366616685763;  // std dev = 4,694, 113,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=30 */
%   | else return -0.06899746868070768;  // std dev = 0,008, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,16e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0802756774073037;  // std dev = 0,478, 34,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06075560991165002;  // std dev = 1,008, 83,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=1 */
%   | | | else return 0.022111579166615353;  // std dev = 5,070, 152,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=35 */
%   | else return -0.0737091387946152;  // std dev = 0,161, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.897621
   AUC PR    = 0.575575
   CLL	      = -0.239195
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 25.687 seconds
Total inference time: 3.585 seconds
AUC ROC: 0.897621


Results scoring model
   AUC ROC   = 0.894612
   AUC PR    = 0.563588
   CLL	      = -0.227349
   Precision = 0.196185 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.303158


Total scoring time: 4.835 seconds
Refined model CLL: -0.227349


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.897621
   AUC PR    = 0.575575
   CLL	      = -0.239195
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 35.267 seconds
Total inference time: 3.585 seconds
AUC ROC: 0.897621
Total revision time: 35.267
Best scored revision CLL: -0.227349


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:12:44
{'parameter_0.2': {'F1': 0.637168, 'Inference time': 2.42, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 2.235, 'CLL': -0.236984}, 'F1': 0.293725, 'Inference time': 3.585, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.897621, 'AUC PR': 0.575575, 'Recall': 0.714286, 'Learning time': 35.267, 'CLL': -0.239195}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6032469743151979;  // std dev = 0,436, 51,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=38 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.1236692467186695;  // std dev = 0,991, 55,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02821470126412409;  // std dev = 2,105, 44,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | | | else return 0.2737333506839291;  // std dev = 6,116, 154,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=64 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5279466612665707;  // std dev = 0,427, 50,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=38 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.11086197401043095;  // std dev = 0,992, 61,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=1 */
%   | | | else return -0.12725212430955452;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0134510904411398;  // std dev = 2,092, 40,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | | else return 0.2568335733000924;  // std dev = 6,011, 147,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=64 */
%   else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.35214492363391114;  // std dev = 0,462, 55,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=38 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.0965826732068071;  // std dev = 0,990, 53,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
%   | | | else return -0.11377701302404394;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.028158749240713415;  // std dev = 2,111, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return 0.2073123510955864;  // std dev = 6,058, 150,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=64 */
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.25708183348167674;  // std dev = 0,467, 56,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=38 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.10439705450085114;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08854271184885237;  // std dev = 0,991, 58,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.011610806400718583;  // std dev = 2,095, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return 0.18145177434337792;  // std dev = 5,995, 146,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=64 */
%   else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2904007013979353;  // std dev = 0,417, 49,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=38 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.09347726752989;  // std dev = 0,005, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07735189793720319;  // std dev = 0,990, 49,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -6.451461954005385E-4;  // std dev = 2,084, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | | else return 0.16739247958320033;  // std dev = 5,876, 139,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=64 */
%   else return -0.09269127618926101;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.173318803165874;  // std dev = 0,444, 52,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=38 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.0749799021666114;  // std dev = 0,992, 63,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=1 */
%   | | | else return -0.08739962642486986;  // std dev = 0,007, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.025767107758692055;  // std dev = 2,114, 47,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | | | else return 0.09496579509880611;  // std dev = 6,072, 151,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=64 */
%   else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.11729922478618973;  // std dev = 0,450, 53,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=38 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.08116136204800907;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06544966395169002;  // std dev = 0,990, 51,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.025774580234529488;  // std dev = 1,640, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.37077714390340155;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12042247604099676;  // std dev = 0,499, 136,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=64 */
%   else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.5432177196812453;  // std dev = 1,184, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | | | else return 0.5627840536380078;  // std dev = 0,699, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( haswordtitle(A, C) )
%   | | | then return -0.2531209247893638;  // std dev = 2,421, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | | | else return -0.09600507236563953;  // std dev = 0,070, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordauthor(G, C) )
%   | | then return -0.18320447033312792;  // std dev = 0,465, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return 0.4171257609839601;  // std dev = 1,297, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | then return -0.2263934397490009;  // std dev = 0,303, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.04302785940308826;  // std dev = 0,374, 52,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=38 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.0629105974543247;  // std dev = 0,004, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return -0.05033288681764458;  // std dev = 0,931, 61,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=1 */
%   | | | else return -0.060850010424901256;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.03443826266687184;  // std dev = 0,393, 176,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=69 */
%   | else return -0.06794811645554387;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return -0.1272792400631002;  // std dev = 0,177, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( haswordtitle(B, C) )
%   | | then return -0.01985781806449396;  // std dev = 0,398, 57,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return -0.0473209201232666;  // std dev = 0,934, 58,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   | | | else return -0.05746412081782736;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.030164808696685492;  // std dev = 1,489, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.40602459247268946;  // std dev = 0,807, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0011819804409635034;  // std dev = 0,402, 156,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=64 */
%   | else return -0.06331903268800856;  // std dev = 0,006, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.923566
   AUC PR    = 0.4626
   CLL	      = -0.283282
   Precision = 0.2 at threshold = 0.5
   Recall    = 0.883117
   F1        = 0.326139


Total learning time: 261.64300000000003 seconds
Total inference time: 12.041 seconds
AUC ROC: 0.923566


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 05:17:18
{'F1': 0.326139, 'Recall': 0.883117, 'Inference time': 12.041, 'Precision': [0.2, 0.5], 'Learning time': 261.64300000000003, 'AUC PR': 0.4626, 'CLL': -0.283282, 'AUC ROC': 0.923566}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.502216731709681;  // std dev = 0,479, 59,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=38 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.12399392204334482;  // std dev = 0,991, 56,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.033155412726574685;  // std dev = 2,111, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return 0.305701382651961;  // std dev = 5,946, 143,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=64 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.804963
   AUC PR    = 0.077771
   CLL	      = -0.209293
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.603 seconds
Total inference time: 1.91 seconds
AUC ROC: 0.804963


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 05:17:27
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.91, 'Precision': [nan, 0.5], 'Learning time': 6.603, 'AUC PR': 0.077771, 'CLL': -0.209293, 'AUC ROC': 0.804963}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,13e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.07807374712958519;  // std dev = 9,553, 532,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=117 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.045678638502658124;  // std dev = 9,691, 593,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=117 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,21e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.06357903651558713;  // std dev = 9,546, 529,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=117 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.039044711685067846;  // std dev = 9,643, 570,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=117 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.03501338646887487;  // std dev = 9,634, 566,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=117 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.0371566061563953;  // std dev = 9,590, 547,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=117 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 1,37e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.03938212525520775;  // std dev = 9,543, 528,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=117 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,66e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.027716497462521965;  // std dev = 9,578, 542,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=117 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367133;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.004548704363377477;  // std dev = 9,693, 594,000 (wgt'ed) examples reached here.  /* #neg=477 #pos=117 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else return 0.023137345427426632;  // std dev = 9,576, 541,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=117 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.237691
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 2.689 seconds
Total inference time: 2.087 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.730415
   AUC PR    = 0.494677
   CLL	      = -0.236105
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.460829
   F1        = 0.630915


Total scoring time: 2.711 seconds
Parameter learned model CLL: -0.236105


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.13e-07, 0, 100], 'false': [9.553, 415, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 100], 'false': [9.691, 476, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-07, 0, 100], 'false': [9.546, 412, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.46e-07, 0, 100], 'false': [9.643, 453, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 100], 'false': [9.634, 449, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 100], 'false': [9.59, 430, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.37e-07, 0, 100], 'false': [9.543, 411, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.66e-08, 0, 100], 'false': [9.578, 425, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 100], 'false': [9.693, 477, 117]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.65e-08, 0, 100], 'false': [9.576, 424, 117]}]]
[{'': [1.7053025658242404e-15, 0.17155788908361272]}, {'': [-1.4210854715202004e-16, 0.15837383299824154]}, {'': [1.7763568394002505e-15, 0.1722549590660424]}, {'': [6.039613253960852e-16, 0.16313019390582117]}, {'': [1.7763568394002505e-17, 0.16398319369700945]}, {'': [-4.4408920985006264e-17, 0.16814333793435696]}, {'': [1.865174681370263e-16, 0.17248837809917797]}, {'': [4.4408920985006264e-17, 0.1692685284786445]}, {'': [-5.329070518200751e-17, 0.1581726354453672]}, {'': [1.3322676295501878e-17, 0.16949511584284724]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,13e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.05851773156715445;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.4404274161121711;  // std dev = 4,384, 79,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=46 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09185106490048765;  // std dev = 2,387, 120,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=6 */
%   | | | else return 0.07291403577065392;  // std dev = 7,089, 298,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=64 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4645076455733889;  // std dev = 0,466, 71,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=47 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08557901077870529;  // std dev = 2,393, 132,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=6 */
%   | | | else return 0.05549091639925357;  // std dev = 7,127, 310,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,21e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3042815936940341;  // std dev = 0,487, 80,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=47 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07320596325128059;  // std dev = 2,389, 124,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=6 */
%   | | | else return 0.07622060102178048;  // std dev = 7,000, 273,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=64 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3408851982126897;  // std dev = 0,457, 68,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07735389846154558;  // std dev = 2,333, 69,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=6 */
%   | | | else return 0.233752111342647;  // std dev = 1,705, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08889266060280403;  // std dev = 1,710, 123,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=3 */
%   | | | else return 0.06321138875037013;  // std dev = 1,570, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05128791950607541;  // std dev = 6,430, 241,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=53 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2035987378671546;  // std dev = 0,477, 74,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=47 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06423318558105486;  // std dev = 2,382, 141,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=6 */
%   | | | else return 0.03996903254108708;  // std dev = 7,066, 301,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=64 */
%   | else return -0.09339107050284767;  // std dev = 0,005, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.11696841042669803;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.15946010883354048;  // std dev = 4,025, 71,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.060190942391880775;  // std dev = 2,385, 149,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=6 */
%   | | | else return 0.039909607571413305;  // std dev = 7,036, 294,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=64 */
%   | else return -0.08653572649090922;  // std dev = 0,029, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 1,37e-07, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.04245529357267579;  // std dev = 4,494, 84,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=47 */
%   | | | else return -0.049816838429173144;  // std dev = 2,379, 132,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=6 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.020228081034313148;  // std dev = 2,990, 72,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return 0.056415047981305894;  // std dev = 6,329, 217,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=53 */
%   | else return -0.07980156997780552;  // std dev = 0,013, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,66e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.10296011685539193;  // std dev = 4,087, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return -0.054360534277469855;  // std dev = 3,057, 99,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=11 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04149782273144348;  // std dev = 2,374, 121,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=6 */
%   | | | else return 0.03186585887766809;  // std dev = 6,395, 232,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=53 */
%   | else return -0.07494864314078456;  // std dev = 0,027, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367133;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.0230230796654134;  // std dev = 0,491, 81,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=47 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06516067493432938;  // std dev = 1,714, 139,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=3 */
%   | | | else return 0.07118883948696607;  // std dev = 1,574, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then return 0.031421378811196714;  // std dev = 0,415, 285,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=64 */
%   | | else return -0.06904461555811271;  // std dev = 0,004, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( author(G, E), title(G, B) )
%   | | | then return -0.1795080282565641;  // std dev = 0,923, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.06489033762892425;  // std dev = 5,209, 179,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=52 */
%   | | else return 0.35687937820608484;  // std dev = 0,485, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05628729574684412;  // std dev = 1,710, 125,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=3 */
%   | | | else return 0.16863672702018154;  // std dev = 1,473, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.02774318388450425;  // std dev = 6,370, 226,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=53 */
%   | | | else return -0.06386847842732554;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.899855
   AUC PR    = 0.575688
   CLL	      = -0.227015
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 41.765 seconds
Total inference time: 3.845 seconds
AUC ROC: 0.899855


Results scoring model
   AUC ROC   = 0.890116
   AUC PR    = 0.563701
   CLL	      = -0.21884
   Precision = 0.195973 at threshold = 0.5
   Recall    = 0.672811
   F1        = 0.303534


Total scoring time: 7.415 seconds
Refined model CLL: -0.21884


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899855
   AUC PR    = 0.575688
   CLL	      = -0.227015
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 54.58 seconds
Total inference time: 3.845 seconds
AUC ROC: 0.899855
Total revision time: 54.58
Best scored revision CLL: -0.21884


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:18:28
{'F1': 0.293725, 'Inference time': 3.845, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.899855, 'AUC PR': 0.575688, 'parameter_0.4': {'F1': 0.637168, 'Inference time': 2.087, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 2.689, 'CLL': -0.237691}, 'Recall': 0.714286, 'Learning time': 54.58, 'CLL': -0.227015}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5920938892279514;  // std dev = 0,442, 109,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=80 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11482403787346064;  // std dev = 1,708, 111,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=3 */
%   | | | else return 0.088918165868743;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.018255559282510152;  // std dev = 3,105, 89,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=11 */
%   | | | else return 0.3059101291293594;  // std dev = 8,141, 268,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=120 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.45958342221554305;  // std dev = 0,463, 116,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=80 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06606270939067074;  // std dev = 2,357, 82,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=6 */
%   | | | else return 0.6955572525959859;  // std dev = 0,903, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0978276210290353;  // std dev = 1,705, 98,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=3 */
%   | | | else return 0.34697655044517944;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(J, C) )
%   | | | then return 0.2468384052451518;  // std dev = 8,165, 272,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=117 */
%   | | | else return 0.245262774993054;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.12544463852839124;  // std dev = 4,34e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.12118688837854133;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.44580340288359455;  // std dev = 0,423, 103,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=79 */
%   | else if ( haswordvenue(F, C) )
%   | | then if ( author(G, D), venue(G, F) )
%   | | | then return 0.0678970333116759;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.07274963017479932;  // std dev = 1,939, 69,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=4 */
%   | | else return 0.3100444371020728;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then if ( haswordvenue(J, H) )
%   | | then return -0.09516411323623952;  // std dev = 0,147, 135,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=3 */
%   | | else return 0.06915337653436845;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.158992797497678;  // std dev = 0,486, 314,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=120 */
%   | | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.27521775279409233;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=80 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08334130329734993;  // std dev = 1,721, 112,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=3 */
%   | | | else return -0.024581033413753603;  // std dev = 1,550, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else return 0.1265643767306299;  // std dev = 0,465, 370,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=131 */
%   else return -0.10395434681924128;  // std dev = 0,045, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.2596296068886964;  // std dev = 0,429, 107,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=80 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06381189206745301;  // std dev = 2,342, 81,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=6 */
%   | | | else return 0.22781840033454615;  // std dev = 1,468, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07654740203680792;  // std dev = 1,711, 125,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=3 */
%   | | | else return 0.003389703793903629;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.12480291048296172;  // std dev = 0,490, 299,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=120 */
%   else return -0.09417556174855035;  // std dev = 0,017, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15387824499616695;  // std dev = 0,452, 113,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=80 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.003455614578717199;  // std dev = 0,954, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.07440978437128064;  // std dev = 2,133, 140,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.007606475805405472;  // std dev = 2,759, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
%   | | | else return 0.08491008980810892;  // std dev = 8,576, 310,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=120 */
%   else return -0.08588723341501847;  // std dev = 0,006, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.3120695575654623;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.12940152697725313;  // std dev = 0,447, 109,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=79 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.0643769605232332;  // std dev = 1,724, 116,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=3 */
%   | | | else return -0.02360357129188021;  // std dev = 1,568, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.031327870319059876;  // std dev = 2,833, 90,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=11 */
%   | | | else return 0.097734701416296;  // std dev = 8,356, 287,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=120 */
%   else return -0.07934696456651717;  // std dev = 0,006, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return -0.3143955161216878;  // std dev = 1,080, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.06942413691022478;  // std dev = 0,453, 115,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=79 */
%   | else if ( haswordvenue(F, C) )
%   | | then return -0.0617033054165628;  // std dev = 0,150, 132,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=3 */
%   | | else return 0.1313901562698702;  // std dev = 0,442, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then if ( author(J, H), venue(J, I) )
%   | | | then return 0.35724612736000466;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0751400033034358;  // std dev = 1,948, 83,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=4 */
%   | | else return 0.621802374512911;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.08350246907164074;  // std dev = 0,494, 282,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=120 */
%   | | else return -0.0728997707112514;  // std dev = 3,73e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.0890702542612342;  // std dev = 0,436, 112,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=80 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05991612328202034;  // std dev = 1,751, 127,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=3 */
%   | | | else return -0.013168567520786524;  // std dev = 1,535, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03134948519433831;  // std dev = 2,669, 89,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=11 */
%   | | | else return 0.07850062366605126;  // std dev = 8,201, 273,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=120 */
%   else return -0.07231165715950198;  // std dev = 0,112, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.03857535594890196;  // std dev = 0,455, 116,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=80 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05101341559651658;  // std dev = 1,722, 119,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=3 */
%   | | | else return -0.0032800783113286825;  // std dev = 1,531, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.04633416696342843;  // std dev = 2,313, 82,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=6 */
%   | | | else return 0.19099072849884363;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.04169393902067327;  // std dev = 0,494, 285,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=120 */
%   else return -0.06492712008831274;  // std dev = 0,006, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 0.801216
   AUC PR    = 0.080679
   CLL	      = -0.327347
   Precision = 0.105166 at threshold = 0.5
   Recall    = 0.37013
   F1        = 0.163793


Total learning time: 140.668 seconds
Total inference time: 4.401 seconds
AUC ROC: 0.801216


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 05:20:54
{'F1': 0.163793, 'Recall': 0.37013, 'Inference time': 4.401, 'Precision': [0.105166, 0.5], 'Learning time': 140.668, 'AUC PR': 0.080679, 'CLL': -0.327347, 'AUC ROC': 0.801216}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5988896758402518;  // std dev = 0,438, 108,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=80 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11979224137107591;  // std dev = 1,713, 136,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=3 */
%   | | | else return 0.088918165868743;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.01243930019460532;  // std dev = 3,095, 85,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=11 */
%   | | | else return 0.31791905004203747;  // std dev = 8,052, 261,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=120 */
%   else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 0.804917
   AUC PR    = 0.077769
   CLL	      = -0.211822
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 13.746 seconds
Total inference time: 2.035 seconds
AUC ROC: 0.804917


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 05:21:10
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.035, 'Precision': [nan, 0.5], 'Learning time': 13.746, 'AUC PR': 0.077769, 'CLL': -0.211822, 'AUC ROC': 0.804917}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 8,92e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.06246221546273168;  // std dev = 11,968, 881,000 (wgt'ed) examples reached here.  /* #neg=701 #pos=180 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.06829172377505992;  // std dev = 11,865, 826,000 (wgt'ed) examples reached here.  /* #neg=646 #pos=180 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,20e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.05274288122891827;  // std dev = 11,915, 852,000 (wgt'ed) examples reached here.  /* #neg=672 #pos=180 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.05490054607313131;  // std dev = 11,845, 816,000 (wgt'ed) examples reached here.  /* #neg=636 #pos=180 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,60e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.02815094934293031;  // std dev = 11,988, 893,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=180 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.04122280476118846;  // std dev = 11,859, 823,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=180 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,40e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.029430330991609313;  // std dev = 11,902, 845,000 (wgt'ed) examples reached here.  /* #neg=665 #pos=180 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.0328192280391882;  // std dev = 11,843, 815,000 (wgt'ed) examples reached here.  /* #neg=635 #pos=180 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.025079911795302133;  // std dev = 11,863, 825,000 (wgt'ed) examples reached here.  /* #neg=645 #pos=180 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.01775733583811494;  // std dev = 11,889, 838,000 (wgt'ed) examples reached here.  /* #neg=658 #pos=180 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.241242
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 3.457 seconds
Total inference time: 2.061 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.723926
   AUC PR    = 0.481951
   CLL	      = -0.240167
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.447853
   F1        = 0.618644


Total scoring time: 3.15 seconds
Parameter learned model CLL: -0.240167


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.92e-07, 0, 146], 'false': [11.968, 701, 180]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 146], 'false': [11.865, 646, 180]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.2e-07, 0, 146], 'false': [11.915, 672, 180]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.42e-07, 0, 146], 'false': [11.845, 636, 180]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.6e-07, 0, 146], 'false': [11.988, 713, 180]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 146], 'false': [11.859, 643, 180]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.4e-07, 0, 146], 'false': [11.902, 665, 180]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 146], 'false': [11.843, 635, 180]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 146], 'false': [11.863, 645, 180]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.32e-08, 0, 146], 'false': [11.889, 658, 180]}]]
[{'': [5.450738794872001e-15, 0.1625693638304442]}, {'': [-2.2386962907510005e-15, 0.1704295622299393]}, {'': [1.8493578054030004e-15, 0.16663360444355493]}, {'': [1.3383510433837504e-15, 0.17192906574394437]}, {'': [4.623394513507501e-16, 0.1609381916586494]}, {'': [-1.5816875967262503e-16, 0.17087707746162226]}, {'': [3.954218991815626e-16, 0.1676411890339981]}, {'': [-2.980872778445626e-16, 0.17208024389326323]}, {'': [-3.650048300137501e-17, 0.1705785123966958]}, {'': [2.7375362251031256e-17, 0.1686593263879833]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 8,92e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.49366295379110203;  // std dev = 0,481, 107,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=68 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06290369647943503;  // std dev = 2,879, 114,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=9 */
%   | | | else return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11659853964796284;  // std dev = 2,208, 198,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=5 */
%   | | | else return 0.08542166237223962;  // std dev = 1,966, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.12666745361803045;  // std dev = 7,977, 324,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=87 */
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.33974509410388803;  // std dev = 0,497, 123,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=68 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08516416539528773;  // std dev = 3,071, 208,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=10 */
%   | | | else return 0.06318346334780159;  // std dev = 8,869, 473,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=102 */
%   | else return -0.12809216149004532;  // std dev = 0,023, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,20e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3157440284699202;  // std dev = 0,492, 115,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=68 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0748372812046869;  // std dev = 2,894, 141,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=9 */
%   | | | else return 0.3763742056313822;  // std dev = 1,527, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09514065162588958;  // std dev = 2,209, 212,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=5 */
%   | | | else return 0.09621282536682545;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07781410608610273;  // std dev = 8,108, 356,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=87 */
%   | | | else return -0.11205268722972676;  // std dev = 1,83e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.29271553357164065;  // std dev = 0,481, 107,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=68 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06645174055880823;  // std dev = 3,060, 194,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=10 */
%   | | | else return 0.05190323016474083;  // std dev = 8,794, 462,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=102 */
%   | else return -0.10654900672303323;  // std dev = 0,161, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,60e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.19573112043911162;  // std dev = 5,169, 112,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=68 */
%   | | | else return -0.02367868778836585;  // std dev = 3,431, 113,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=15 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05391602458823049;  // std dev = 3,022, 193,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=10 */
%   | | | else return 0.08315630316943644;  // std dev = 7,977, 324,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=87 */
%   | else return -0.09867326312774333;  // std dev = 0,149, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2928220145223356;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0988446521443321;  // std dev = 5,440, 120,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=67 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0548223075316232;  // std dev = 3,040, 212,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=10 */
%   | | | else return 0.02992284413188011;  // std dev = 8,818, 473,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=102 */
%   | else return -0.0860521220637872;  // std dev = 0,024, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,40e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2214529368679445;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10880416190001752;  // std dev = 5,222, 113,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04889220007025618;  // std dev = 3,048, 198,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=10 */
%   | | | else return 0.03659620935046604;  // std dev = 8,750, 448,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=102 */
%   | else return -0.08156870630640314;  // std dev = 0,054, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.02798273924623409;  // std dev = 5,577, 129,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=68 */
%   | | | else return -0.06741456006622408;  // std dev = 2,211, 235,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=5 */
%   | | else return 0.1523603498165076;  // std dev = 0,447, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0672016708846878;  // std dev = 2,881, 125,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=9 */
%   | | | else return 0.28968439796019413;  // std dev = 1,505, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.041686184154580475;  // std dev = 8,074, 347,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=87 */
%   | | | else return -0.07210206810449236;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09665664969814028;  // std dev = 0,483, 112,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=68 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04190885143826031;  // std dev = 3,022, 206,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=10 */
%   | | | else return 0.029416410200483342;  // std dev = 8,712, 439,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=102 */
%   | else return -0.07141965390034405;  // std dev = 0,058, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.02692673019401671;  // std dev = 5,412, 121,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=68 */
%   | | | else return -0.0395619910064879;  // std dev = 3,029, 205,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=10 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.023064049243022283;  // std dev = 3,307, 111,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=15 */
%   | | | else return 0.031140417937116308;  // std dev = 8,066, 345,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=87 */
%   | else return -0.0652906261113565;  // std dev = 0,022, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */


Results
   AUC ROC   = 0.899133
   AUC PR    = 0.575629
   CLL	      = -0.231464
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 51.736 seconds
Total inference time: 3.615 seconds
AUC ROC: 0.899133


Results scoring model
   AUC ROC   = 0.883005
   AUC PR    = 0.549837
   CLL	      = -0.223238
   Precision = 0.197955 at threshold = 0.5
   Recall    = 0.653374
   F1        = 0.303852


Total scoring time: 8.179 seconds
Refined model CLL: -0.223238


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899133
   AUC PR    = 0.575629
   CLL	      = -0.231464
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 66.52199999999999 seconds
Total inference time: 3.615 seconds
AUC ROC: 0.899133
Total revision time: 66.52199999999999
Best scored revision CLL: -0.223238


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:22:23
{'F1': 0.293725, 'Inference time': 3.615, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.899133, 'AUC PR': 0.575629, 'parameter_0.6': {'F1': 0.637168, 'Inference time': 2.061, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 3.457, 'CLL': -0.241242}, 'Recall': 0.714286, 'Learning time': 66.52199999999999, 'CLL': -0.231464}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5286691663133823;  // std dev = 0,470, 173,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=116 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1120891601385831;  // std dev = 2,203, 168,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=5 */
%   | | | else return 0.12130682983635446;  // std dev = 1,919, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02088332296500379;  // std dev = 3,631, 124,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=15 */
%   | | | else return 0.29862512557569854;  // std dev = 10,174, 420,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=185 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.580970479574008;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4680870439911867;  // std dev = 0,464, 163,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=112 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.10112201836237604;  // std dev = 2,205, 181,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=5 */
%   | | | else return 0.06012271209712772;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.010017570138875416;  // std dev = 3,614, 116,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=15 */
%   | | | else return 0.2723248988550272;  // std dev = 10,045, 407,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=185 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.466047084523602;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.30933206874092417;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.35733459792574146;  // std dev = 6,110, 168,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=112 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08957420863343582;  // std dev = 2,204, 177,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=5 */
%   | | | else return 0.12871553119615664;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.013130986143734246;  // std dev = 3,623, 120,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=15 */
%   | | | else return 0.17495377295974673;  // std dev = 10,524, 461,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=185 */
%   else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2802274851281449;  // std dev = 0,464, 174,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=116 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06598964800401001;  // std dev = 2,895, 126,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=9 */
%   | | | else return 0.41392462703354643;  // std dev = 1,633, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08165247789566864;  // std dev = 2,205, 184,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=5 */
%   | | | else return 0.12855649689945098;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.16201525185883295;  // std dev = 0,494, 440,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=185 */
%   else return -0.10159632948783623;  // std dev = 3,33e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.4860250868556346;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3031487480784851;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.2607189235578964;  // std dev = 0,449, 157,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=113 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07113914643684419;  // std dev = 2,205, 161,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=5 */
%   | | | else return 0.08036745047767095;  // std dev = 1,884, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0035604498613501685;  // std dev = 3,530, 115,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=15 */
%   | | | else return 0.110620939444165;  // std dev = 10,524, 461,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=185 */
%   else return -0.09269127618926105;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.36773656653264375;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.24314805390322908;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.19956442030851912;  // std dev = 0,448, 156,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=113 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06872498221407962;  // std dev = 2,208, 189,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=5 */
%   | | | else return 0.025172052842159114;  // std dev = 1,941, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.008439791660577107;  // std dev = 3,544, 119,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=15 */
%   | | | else return 0.09169644885104504;  // std dev = 10,485, 456,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=185 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.28706616906972604;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.20122667867966748;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.19003217244420928;  // std dev = 0,425, 148,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=113 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06099753150083584;  // std dev = 2,206, 174,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=5 */
%   | | | else return 0.009897468598342717;  // std dev = 1,955, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.006444859783884323;  // std dev = 3,542, 118,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=15 */
%   | | | else return 0.09218160908498631;  // std dev = 10,302, 434,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=185 */
%   else return -0.07877675473109173;  // std dev = 2,36e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12760834899984488;  // std dev = 0,425, 157,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=116 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.052591516859661645;  // std dev = 2,887, 123,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=9 */
%   | | | else return 0.6669183969398101;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.04566192367916974;  // std dev = 2,944, 194,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=10 */
%   | | | else return 0.0743372393694934;  // std dev = 10,276, 431,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=185 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.0835996170921972;  // std dev = 0,429, 162,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=116 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05746639683522071;  // std dev = 2,227, 195,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=5 */
%   | | | else return 0.027089174058609;  // std dev = 1,941, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 3.631195771176158E-5;  // std dev = 3,369, 111,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=15 */
%   | | | else return 0.052218102020055585;  // std dev = 10,320, 436,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=185 */
%   else return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07665641160076338;  // std dev = 0,423, 159,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=116 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05075530608590497;  // std dev = 2,218, 182,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=5 */
%   | | | else return 0.10045009601739027;  // std dev = 1,833, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02576403467895974;  // std dev = 3,420, 141,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=15 */
%   | | | else return 0.027653438936248474;  // std dev = 10,430, 449,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=185 */
%   else return -0.06419184008202625;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */


Results
   AUC ROC   = 0.81281
   AUC PR    = 0.088685
   CLL	      = -0.328946
   Precision = 0.106814 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.166428


Total learning time: 184.456 seconds
Total inference time: 4.528 seconds
AUC ROC: 0.81281


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 05:25:32
{'F1': 0.166428, 'Recall': 0.376623, 'Inference time': 4.528, 'Precision': [0.106814, 0.5], 'Learning time': 184.456, 'AUC PR': 0.088685, 'CLL': -0.328946, 'AUC ROC': 0.81281}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5429974199479946;  // std dev = 0,465, 165,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=113 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11482403787346096;  // std dev = 2,206, 185,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=5 */
%   | | | else return 0.09624417319475045;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.2084116321222749;  // std dev = 0,477, 571,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=200 */
%   else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */


Results
   AUC ROC   = 0.75708
   AUC PR    = 0.085097
   CLL	      = -0.211865
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 14.49 seconds
Total inference time: 2.135 seconds
AUC ROC: 0.75708


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 05:25:49
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.135, 'Precision': [nan, 0.5], 'Learning time': 14.49, 'AUC PR': 0.085097, 'CLL': -0.211865, 'AUC ROC': 0.75708}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else return 0.08127449968848668;  // std dev = 13,852, 1.107,000 (wgt'ed) examples reached here.  /* #neg=860 #pos=247 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else return 0.06830358294015075;  // std dev = 13,877, 1.121,000 (wgt'ed) examples reached here.  /* #neg=874 #pos=247 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,08e-07, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else return 0.05504605335954605;  // std dev = 13,915, 1.143,000 (wgt'ed) examples reached here.  /* #neg=896 #pos=247 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 3,37e-07, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else return 0.05409427977097501;  // std dev = 13,856, 1.109,000 (wgt'ed) examples reached here.  /* #neg=862 #pos=247 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,82e-07, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else return 0.04127209800334387;  // std dev = 13,901, 1.135,000 (wgt'ed) examples reached here.  /* #neg=888 #pos=247 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.255172242569491;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else return 0.04314666728375103;  // std dev = 13,831, 1.095,000 (wgt'ed) examples reached here.  /* #neg=848 #pos=247 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253504;  // std dev = 2,92e-07, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else return 0.0315880963983066;  // std dev = 13,875, 1.120,000 (wgt'ed) examples reached here.  /* #neg=873 #pos=247 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527766;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else return 0.019095029407482304;  // std dev = 13,943, 1.160,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=247 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else return 0.023109253298638013;  // std dev = 13,881, 1.123,000 (wgt'ed) examples reached here.  /* #neg=876 #pos=247 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,03e-07, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else return 0.022006196187808212;  // std dev = 13,858, 1.110,000 (wgt'ed) examples reached here.  /* #neg=863 #pos=247 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.246078
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 3.948 seconds
Total inference time: 2.415 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.716092
   AUC PR    = 0.466653
   CLL	      = -0.245593
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.432184
   F1        = 0.603531


Total scoring time: 3.459 seconds
Parameter learned model CLL: -0.245593


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 188], 'false': [13.852, 860, 247]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 188], 'false': [13.877, 874, 247]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.08e-07, 0, 188], 'false': [13.915, 896, 247]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.37e-07, 0, 188], 'false': [13.856, 862, 247]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.82e-07, 0, 188], 'false': [13.901, 888, 247]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 188], 'false': [13.831, 848, 247]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 188], 'false': [13.875, 873, 247]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 188], 'false': [13.943, 913, 247]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 188], 'false': [13.881, 876, 247]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 188], 'false': [13.858, 863, 247]}]]
[{'': [6.198351524715768e-15, 0.17334054701582988]}, {'': [-3.4771240260600646e-15, 0.17178971559896464]}, {'': [1.965330971251341e-15, 0.1693996474412688]}, {'': [6.047172219234895e-16, 0.17311756178037532]}, {'': [7.74793940589471e-16, 0.17026218246037123]}, {'': [-3.307047307394083e-16, 0.1746886011551163]}, {'': [4.535379164426171e-16, 0.17189971301019755]}, {'': [-1.5590365877714964e-16, 0.1675914090368561]}, {'': [-2.6928813788780395e-16, 0.17157007728789148]}, {'': [5.669223955532714e-17, 0.17300624949272592]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.477196554147129;  // std dev = 5,888, 147,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=91 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09030467314791042;  // std dev = 3,080, 194,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=10 */
%   | | | else return 0.27920156667845974;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10152848425532682;  // std dev = 3,098, 248,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=10 */
%   | | | else return 0.14386322081379807;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.11472788246793035;  // std dev = 9,326, 456,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=117 */
%   | | | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.5832054912315484;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4172339556245432;  // std dev = 5,821, 145,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=91 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07439155288612269;  // std dev = 3,071, 176,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=10 */
%   | | | else return 0.26510046831278866;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08878331452893201;  // std dev = 3,097, 243,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=10 */
%   | | | else return 0.1474110374272055;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.10245094248632916;  // std dev = 9,312, 452,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=117 */
%   | | | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,08e-07, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.036006067049707075;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3440371329604459;  // std dev = 5,787, 144,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=91 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06890565219879397;  // std dev = 3,076, 185,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=10 */
%   | | | else return 0.39366926290738063;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08085380083415504;  // std dev = 3,099, 254,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=10 */
%   | | | else return 0.1825086486976696;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.08506220944619794;  // std dev = 9,333, 458,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=117 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 3,37e-07, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2337972021594671;  // std dev = 0,489, 159,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=94 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.055998552185647976;  // std dev = 4,004, 261,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=18 */
%   | | | else return 0.04053748613523435;  // std dev = 10,150, 649,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=135 */
%   | else return -0.1092409331910025;  // std dev = 0,112, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,82e-07, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.10533639605176628;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.17211729427399966;  // std dev = 6,101, 154,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=91 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04681855894274381;  // std dev = 3,964, 271,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=18 */
%   | | | else return 0.05178507425638876;  // std dev = 10,032, 600,000 (wgt'ed) examples reached here.  /* #neg=465 #pos=135 */
%   | else return -0.10170482215224638;  // std dev = 0,203, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.255172242569491;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.20180644845761556;  // std dev = 0,467, 145,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=94 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04669523929361503;  // std dev = 3,993, 278,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=18 */
%   | | | else return 0.033109936027250125;  // std dev = 10,109, 629,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=135 */
%   | else return -0.08848334467447806;  // std dev = 0,044, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253504;  // std dev = 2,92e-07, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.1261967668605765;  // std dev = 5,882, 149,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=94 */
%   | | | else return -0.03764133594452958;  // std dev = 3,978, 263,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=18 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.02274493960838512;  // std dev = 3,690, 149,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=18 */
%   | | | else return 0.07176045346797633;  // std dev = 9,216, 427,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=117 */
%   | else return -0.09000734657154591;  // std dev = 0,318, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527766;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06845292431759255;  // std dev = 0,487, 156,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=94 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.036212444132164005;  // std dev = 3,987, 271,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=18 */
%   | | | else return 0.019220402650028105;  // std dev = 10,101, 631,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=135 */
%   | else return -0.07891703834796303;  // std dev = 0,136, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.03893403121828542;  // std dev = 6,183, 159,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=94 */
%   | | | else return -0.040350278968851544;  // std dev = 4,013, 300,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=18 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.023835575462775642;  // std dev = 3,686, 153,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=18 */
%   | | | else return 0.03321407438498746;  // std dev = 9,364, 467,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=117 */
%   | else return -0.07374781902350962;  // std dev = 0,174, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,03e-07, 188,000 (wgt'ed) examples reached here.  /* #pos=188 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.08840081431576965;  // std dev = 5,703, 145,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=94 */
%   | | | else return -0.036998928041762;  // std dev = 4,009, 309,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=18 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.03320489416057749;  // std dev = 3,723, 171,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=18 */
%   | | | else return 0.035254399696334954;  // std dev = 9,316, 453,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=117 */
%   | else return -0.06835278809273293;  // std dev = 0,150, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 0.899089
   AUC PR    = 0.575624
   CLL	      = -0.239044
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 77.76 seconds
Total inference time: 3.746 seconds
AUC ROC: 0.899089


Results scoring model
   AUC ROC   = 0.877388
   AUC PR    = 0.533209
   CLL	      = -0.232319
   Precision = 0.190054 at threshold = 0.5
   Recall    = 0.641379
   F1        = 0.293221


Total scoring time: 12.353 seconds
Refined model CLL: -0.232319


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899089
   AUC PR    = 0.575624
   CLL	      = -0.239044
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 97.52 seconds
Total inference time: 3.746 seconds
AUC ROC: 0.899089
Total revision time: 97.52
Best scored revision CLL: -0.232319


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:27:34
{'F1': 0.293725, 'Inference time': 3.746, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.899089, 'parameter_0.8': {'F1': 0.637168, 'Inference time': 2.415, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 3.948, 'CLL': -0.246078}, 'AUC PR': 0.575624, 'Recall': 0.714286, 'Learning time': 97.52, 'CLL': -0.239044}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.5664822684328423;  // std dev = 0,455, 216,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=153 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08404759669239517;  // std dev = 3,070, 173,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=10 */
%   | | | else return 0.4735335504841277;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.07262029566971855;  // std dev = 4,093, 260,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=18 */
%   | | | else return 0.2680128806777391;  // std dev = 11,926, 588,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=241 */
%   else return -0.14185106490048766;  // std dev = 7,45e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.46969939520317844;  // std dev = 0,459, 227,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=158 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09186355170212529;  // std dev = 3,098, 240,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=10 */
%   | | | else return 0.2003135387960011;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.18471597519715893;  // std dev = 0,473, 731,000 (wgt'ed) examples reached here.  /* #neg=472 #pos=259 */
%   else return -0.1254446385283915;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.6291507531756837;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.31781783872691105;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.46249141521193227;  // std dev = 0,409, 197,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=153 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08105064116384576;  // std dev = 3,097, 237,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=10 */
%   | | | else return 0.1181109410802526;  // std dev = 2,406, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04818279903772312;  // std dev = 3,854, 161,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
%   | | | else return 0.2035470811433784;  // std dev = 11,926, 588,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=241 */
%   else return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.311546271033943;  // std dev = 0,433, 215,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=158 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07099485025780915;  // std dev = 3,095, 227,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=10 */
%   | | | else return 0.14584688035657709;  // std dev = 2,331, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.017786651128906948;  // std dev = 3,802, 132,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=18 */
%   | | | else return 0.17103395803698826;  // std dev = 11,897, 584,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=241 */
%   else return -0.10159632948783617;  // std dev = 5,27e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.39914752849847285;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3164596585316393;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.22464245591530338;  // std dev = 0,443, 211,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=153 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06982688694174796;  // std dev = 3,107, 257,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=10 */
%   | | | else return 0.04625653706521332;  // std dev = 2,461, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03303989742313862;  // std dev = 3,847, 151,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=18 */
%   | | | else return 0.16304193779653064;  // std dev = 11,644, 551,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=241 */
%   else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.3085571679525854;  // std dev = 0,057, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2522685749312332;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.20036028167847553;  // std dev = 0,426, 202,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=153 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05963407265742497;  // std dev = 3,098, 239,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=10 */
%   | | | else return 0.09301207377732378;  // std dev = 2,371, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03744862590213531;  // std dev = 3,865, 165,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=18 */
%   | | | else return 0.1025967063659166;  // std dev = 11,919, 587,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=241 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.07650298871545672;  // std dev = 0,625, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.08342808603845882;  // std dev = 6,809, 224,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=153 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0528288838248375;  // std dev = 3,095, 232,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=10 */
%   | | | else return 0.03896445128232991;  // std dev = 2,435, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07132484557085754;  // std dev = 3,056, 151,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=10 */
%   | | | else return 0.5821446602902116;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.094793405099266;  // std dev = 0,494, 567,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=241 */
%   else return -0.0787767547310917;  // std dev = 3,07e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1279830861266612;  // std dev = 0,421, 210,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=158 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06208225613570781;  // std dev = 3,058, 150,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=10 */
%   | | | else return 0.19230689126933562;  // std dev = 1,867, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03584395504439931;  // std dev = 3,929, 269,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=18 */
%   | | | else return 0.061126955753002754;  // std dev = 11,897, 584,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=241 */
%   else return -0.07324622576333704;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.05230678020933793;  // std dev = 0,446, 224,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=158 */
%   | else if ( haswordvenue(E, C) )
%   | | then return -0.05029003548474105;  // std dev = 0,190, 266,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=10 */
%   | | else return 0.08828101181317659;  // std dev = 0,451, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   else if ( haswordtitle(A, F), haswordtitle(B, F) )
%   | then if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.046717619926827464;  // std dev = 3,040, 132,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=10 */
%   | | | else return 0.51223069761935;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.07257979318455982;  // std dev = 0,496, 550,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=241 */
%   | else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.058253159898951766;  // std dev = 0,438, 218,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=158 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.043432291329853726;  // std dev = 3,100, 241,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=10 */
%   | | | else return 0.07402985243125162;  // std dev = 2,347, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return 0.014932938147964332;  // std dev = 0,449, 764,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=259 */
%   else return -0.06473856769768788;  // std dev = 0,014, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */


Results
   AUC ROC   = 0.808767
   AUC PR    = 0.093838
   CLL	      = -0.33078
   Precision = 0.098305 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.155914


Total learning time: 257.321 seconds
Total inference time: 4.627 seconds
AUC ROC: 0.808767


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 05:31:56
{'F1': 0.155914, 'Recall': 0.376623, 'Inference time': 4.627, 'Precision': [0.098305, 0.5], 'Learning time': 257.321, 'AUC PR': 0.093838, 'CLL': -0.33078, 'AUC ROC': 0.808767}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5473381242886982;  // std dev = 0,463, 222,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=153 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.1018510649004881;  // std dev = 3,098, 250,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=10 */
%   | | | else return 0.17814893509951235;  // std dev = 2,332, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.02935106490048765;  // std dev = 3,997, 160,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=18 */
%   | | | else return 0.2694117337343201;  // std dev = 11,912, 586,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=241 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 0.806931
   AUC PR    = 0.089652
   CLL	      = -0.208718
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 22.623 seconds
Total inference time: 2.187 seconds
AUC ROC: 0.806931


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 05:32:21
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.187, 'Precision': [nan, 0.5], 'Learning time': 22.623, 'AUC PR': 0.089652, 'CLL': -0.208718, 'AUC ROC': 0.806931}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.07973166891245703;  // std dev = 15,484, 1.390,000 (wgt'ed) examples reached here.  /* #neg=1.082 #pos=308 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.06629370746766547;  // std dev = 15,518, 1.412,000 (wgt'ed) examples reached here.  /* #neg=1.104 #pos=308 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.06690165952499766;  // std dev = 15,425, 1.354,000 (wgt'ed) examples reached here.  /* #neg=1.046 #pos=308 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.04335267993929724;  // std dev = 15,568, 1.445,000 (wgt'ed) examples reached here.  /* #neg=1.137 #pos=308 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.04337811377590532;  // std dev = 15,506, 1.404,000 (wgt'ed) examples reached here.  /* #neg=1.096 #pos=308 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.045604778757748037;  // std dev = 15,420, 1.351,000 (wgt'ed) examples reached here.  /* #neg=1.043 #pos=308 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.027780716202749165;  // std dev = 15,529, 1.419,000 (wgt'ed) examples reached here.  /* #neg=1.111 #pos=308 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527747;  // std dev = 9,88e-08, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.016809201272834303;  // std dev = 15,595, 1.464,000 (wgt'ed) examples reached here.  /* #neg=1.156 #pos=308 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.027463858183699494;  // std dev = 15,463, 1.377,000 (wgt'ed) examples reached here.  /* #neg=1.069 #pos=308 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.018638736776724552;  // std dev = 15,507, 1.405,000 (wgt'ed) examples reached here.  /* #neg=1.097 #pos=308 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.24552
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 4.406 seconds
Total inference time: 2.249 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.716912
   AUC PR    = 0.468238
   CLL	      = -0.244982
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433824
   F1        = 0.605128


Total scoring time: 4.208 seconds
Parameter learned model CLL: -0.244982


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 236], 'false': [15.484, 1082, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.518, 1104, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.33e-07, 0, 236], 'false': [15.425, 1046, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.568, 1137, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 236], 'false': [15.506, 1096, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.95e-07, 0, 236], 'false': [15.42, 1043, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.89e-07, 0, 236], 'false': [15.529, 1111, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.88e-08, 0, 236], 'false': [15.595, 1156, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.463, 1069, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 236], 'false': [15.507, 1097, 308]}]]
[{'': [4.937669858671883e-15, 0.17248382588893021]}, {'': [-4.215084025695509e-15, 0.17054947876959392]}, {'': [1.2043097216272884e-15, 0.17572966144408278]}, {'': [-1.5053871520341105e-16, 0.16771638270615172]}, {'': [3.6129291648818656e-16, 0.1712486099950534]}, {'': [3.688198522483571e-16, 0.17600472495906253]}, {'': [3.53765980728016e-16, 0.16994171023376337]}, {'': [4.139814668093804e-17, 0.16612171160680284]}, {'': [-1.6559258672375216e-16, 0.17364430373671222]}, {'': [4.516161456102332e-17, 0.17116095287547814]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.437383907777105;  // std dev = 6,678, 183,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07133824438766749;  // std dev = 4,522, 312,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=22 */
%   | | | else return 0.08321287371843344;  // std dev = 11,679, 782,000 (wgt'ed) examples reached here.  /* #neg=606 #pos=176 */
%   | else return -0.14185106490048763;  // std dev = 8,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.38711286584856774;  // std dev = 0,492, 186,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=110 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0860722832609343;  // std dev = 3,343, 192,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=12 */
%   | | | else return 0.3074141292545017;  // std dev = 2,314, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09644569323977825;  // std dev = 3,399, 330,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=12 */
%   | | | else return 0.20047586849413482;  // std dev = 2,580, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.10480969348490905;  // std dev = 10,696, 599,000 (wgt'ed) examples reached here.  /* #neg=445 #pos=154 */
%   | | | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.298670177639945;  // std dev = 0,494, 192,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0612380083271313;  // std dev = 4,478, 340,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=22 */
%   | | | else return 0.06363057759618046;  // std dev = 11,603, 785,000 (wgt'ed) examples reached here.  /* #neg=609 #pos=176 */
%   | else return -0.1150321917007003;  // std dev = 0,071, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.22375079333046363;  // std dev = 0,496, 196,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05485605024372354;  // std dev = 4,479, 343,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=22 */
%   | | | else return 0.049482623709021366;  // std dev = 11,641, 804,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=176 */
%   | else return -0.10279176993441685;  // std dev = 0,016, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.1059087873641505;  // std dev = 1,673, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.17754408797520613;  // std dev = 6,781, 187,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=106 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06384063478972238;  // std dev = 4,345, 239,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=22 */
%   | | | else return 0.04429738932036652;  // std dev = 11,631, 869,000 (wgt'ed) examples reached here.  /* #neg=693 #pos=176 */
%   | else return -0.09436038306046668;  // std dev = 0,032, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1530329234225751;  // std dev = 0,492, 189,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05148597572937611;  // std dev = 4,473, 333,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=22 */
%   | | | else return 0.052812801058761655;  // std dev = 11,515, 758,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=176 */
%   | else return -0.0863901322479645;  // std dev = 0,030, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12032063988070571;  // std dev = 0,490, 188,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.049508318651904124;  // std dev = 4,482, 352,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=22 */
%   | | | else return 0.03750432549748621;  // std dev = 11,573, 781,000 (wgt'ed) examples reached here.  /* #neg=605 #pos=176 */
%   | else return -0.07932506288649198;  // std dev = 0,011, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527747;  // std dev = 9,88e-08, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0963052735630822;  // std dev = 0,489, 186,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=110 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05590751686221974;  // std dev = 4,317, 213,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=22 */
%   | | | else return 0.023804855046480146;  // std dev = 11,661, 898,000 (wgt'ed) examples reached here.  /* #neg=722 #pos=176 */
%   | else return -0.07379854719915083;  // std dev = 0,011, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.23300106626230038;  // std dev = 1,745, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.10306260150772019;  // std dev = 6,290, 169,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05004041748567904;  // std dev = 4,494, 366,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=22 */
%   | | | else return 0.026914540936446893;  // std dev = 11,581, 797,000 (wgt'ed) examples reached here.  /* #neg=621 #pos=176 */
%   | else return -0.06943130228476066;  // std dev = 0,033, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.038826469814436826;  // std dev = 6,737, 191,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=110 */
%   | | | else return -0.06355723865602363;  // std dev = 3,396, 333,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=12 */
%   | | else return 0.14542476481402164;  // std dev = 0,439, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08063011361517496;  // std dev = 3,337, 189,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=12 */
%   | | | else return 0.36110128874525904;  // std dev = 2,020, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07703388808705068;  // std dev = 10,464, 533,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=154 */
%   | | | else return -0.06365982974868122;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */


Results
   AUC ROC   = 0.899647
   AUC PR    = 0.57171
   CLL	      = -0.237251
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 90.23 seconds
Total inference time: 3.738 seconds
AUC ROC: 0.899647


Results scoring model
   AUC ROC   = 0.876471
   AUC PR    = 0.528321
   CLL	      = -0.232134
   Precision = 0.186885 at threshold = 0.5
   Recall    = 0.628676
   F1        = 0.288121


Total scoring time: 11.57 seconds
Refined model CLL: -0.232134


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899647
   AUC PR    = 0.57171
   CLL	      = -0.237251
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 110.41400000000002 seconds
Total inference time: 3.738 seconds
AUC ROC: 0.899647
Total revision time: 110.41400000000002
Best scored revision CLL: -0.232134


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:34:19
{'parameter_1.0': {'F1': 0.637168, 'Inference time': 2.249, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 4.406, 'CLL': -0.24552}, 'F1': 0.293725, 'Inference time': 3.738, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.899647, 'AUC PR': 0.57171, 'Recall': 0.714286, 'Learning time': 110.41400000000002, 'CLL': -0.237251}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5499052075009423;  // std dev = 0,462, 279,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1043510649004882;  // std dev = 3,399, 320,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=12 */
%   | | | else return 0.17064893509951234;  // std dev = 2,622, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03347668066403464;  // std dev = 4,429, 203,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=22 */
%   | | | else return 0.2899351516958509;  // std dev = 13,208, 711,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=307 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4894933915499348;  // std dev = 0,453, 271,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09152157368252467;  // std dev = 3,397, 315,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=12 */
%   | | | else return 0.13019836883875263;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.038277110949006904;  // std dev = 4,451, 221,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=22 */
%   | | | else return 0.24077411386749967;  // std dev = 13,324, 728,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=307 */
%   else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6814842902009466;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.31851570979905336;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.4041405402009438;  // std dev = 0,448, 256,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=185 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07825763969083166;  // std dev = 3,392, 290,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=12 */
%   | | | else return 0.1507814031446267;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03195643614216521;  // std dev = 4,446, 217,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=22 */
%   | | | else return 0.20174613770012326;  // std dev = 13,331, 729,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=307 */
%   else return -0.1123163781936062;  // std dev = 7,74e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5197689667470512;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2536731316145108;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.07848322758834296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3260866648847734;  // std dev = 6,926, 248,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=183 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07216308062336975;  // std dev = 3,395, 304,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=12 */
%   | | | else return 0.07957751267681204;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.028306637331857665;  // std dev = 4,446, 217,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=22 */
%   | | | else return 0.16874932603269777;  // std dev = 13,291, 723,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=307 */
%   else return -0.1015963294878363;  // std dev = 2,11e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3915856559834845;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.20869820095155572;  // std dev = 1,67e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.21290590600228498;  // std dev = 0,456, 263,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=185 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06413756251241512;  // std dev = 3,393, 296,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=12 */
%   | | | else return 0.103116838219566;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else return 0.09059856090092075;  // std dev = 0,460, 962,000 (wgt'ed) examples reached here.  /* #neg=633 #pos=329 */
%   else return -0.09269127618926097;  // std dev = 4,47e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16068853371420297;  // std dev = 0,443, 277,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.061317691804495436;  // std dev = 3,399, 320,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=12 */
%   | | | else return 0.1327330843248601;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.024063125752689225;  // std dev = 4,418, 195,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=22 */
%   | | | else return 0.11811398991623352;  // std dev = 13,270, 720,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=307 */
%   else return -0.08518475138839682;  // std dev = 5,27e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1518748991571083;  // std dev = 0,426, 266,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.052949372138259995;  // std dev = 3,393, 296,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=12 */
%   | | | else return 0.01526400364273726;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return 0.058290775843236345;  // std dev = 0,464, 937,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=329 */
%   else return -0.07877675473109161;  // std dev = 5,58e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.30042602682531466;  // std dev = 0,289, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.5226158703258664;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.11416245287603762;  // std dev = 0,430, 256,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=185 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.04713999411664789;  // std dev = 3,391, 286,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=12 */
%   | | | else return 0.11913580146354219;  // std dev = 2,481, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.02639467016664646;  // std dev = 4,414, 192,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=22 */
%   | | | else return 0.06720066221072679;  // std dev = 13,409, 741,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=307 */
%   else return -0.07324622576333707;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.06658130461010842;  // std dev = 0,438, 274,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=193 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.04663587684113369;  // std dev = 3,396, 310,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=12 */
%   | | | else return -0.003635501169354871;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07811022022221596;  // std dev = 3,359, 201,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=12 */
%   | | | else return 0.5288549539071373;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0.07545999904057414;  // std dev = 0,496, 701,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=307 */
%   else return -0.06842697784420265;  // std dev = 5,05e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.034850918072024166;  // std dev = 0,446, 281,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=193 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.0432252230937221;  // std dev = 1,620, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return -0.04750359831419992;  // std dev = 4,026, 313,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=19 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05861504775825426;  // std dev = 3,340, 171,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=12 */
%   | | | else return 0.37486531428839803;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else return 0.035890923318684556;  // std dev = 0,493, 738,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=307 */
%   else return -0.06419184008202626;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */


Results
   AUC ROC   = 0.813551
   AUC PR    = 0.095408
   CLL	      = -0.325889
   Precision = 0.109228 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.169343


Total learning time: 338.759 seconds
Total inference time: 4.318 seconds
AUC ROC: 0.813551


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 05:40:02
{'F1': 0.169343, 'Recall': 0.376623, 'Inference time': 4.318, 'Precision': [0.109228, 0.5], 'Learning time': 338.759, 'AUC PR': 0.095408, 'CLL': -0.325889, 'AUC ROC': 0.813551}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5651086420592156;  // std dev = 0,455, 273,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1033895264389498;  // std dev = 3,397, 312,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=12 */
%   | | | else return 0.09070707463439608;  // std dev = 2,770, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.022932145981568945;  // std dev = 4,403, 185,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=22 */
%   | | | else return 0.2730137999643725;  // std dev = 13,403, 740,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=307 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */


Results
   AUC ROC   = 0.804917
   AUC PR    = 0.077769
   CLL	      = -0.209519
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 24.122 seconds
Total inference time: 1.764 seconds
AUC ROC: 0.804917


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 05:40:28
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.764, 'Precision': [nan, 0.5], 'Learning time': 24.122, 'AUC PR': 0.077769, 'CLL': -0.209519, 'AUC ROC': 0.804917}


