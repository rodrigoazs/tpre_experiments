Starting experiment #3 for 10_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048907;  // std dev = 0,000, 707,000 (wgt'ed) examples reached here.  /* #neg=707 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.12544463852839238;  // std dev = 0,000, 741,000 (wgt'ed) examples reached here.  /* #neg=741 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.11231637819360664;  // std dev = 0,000, 711,000 (wgt'ed) examples reached here.  /* #neg=711 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783617;  // std dev = 4,47e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.10159632948783523;  // std dev = 4,19e-07, 687,000 (wgt'ed) examples reached here.  /* #neg=687 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.09269127618926204;  // std dev = 0,000, 708,000 (wgt'ed) examples reached here.  /* #neg=708 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839675;  // std dev = 1,23e-07, 664,000 (wgt'ed) examples reached here.  /* #neg=664 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109172;  // std dev = 2,69e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07877675473109289;  // std dev = 0,000, 741,000 (wgt'ed) examples reached here.  /* #neg=741 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07324622576333654;  // std dev = 2,32e-07, 679,000 (wgt'ed) examples reached here.  /* #neg=679 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420265;  // std dev = 1,72e-07, 752,000 (wgt'ed) examples reached here.  /* #neg=752 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06419184008202536;  // std dev = 2,21e-07, 679,000 (wgt'ed) examples reached here.  /* #neg=679 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 536
Target train neg examples: 18889

Target test facts examples: 7463
Target test pos	 examples: 162
Target test neg examples: 9107

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,06e-07, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.06777092822666053;  // std dev = 6,944, 291,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=61 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.07151550276680166;  // std dev = 6,890, 275,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=61 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.04572097333792287;  // std dev = 6,962, 297,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=61 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.06342669760089509;  // std dev = 6,856, 266,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=61 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.03917486882783792;  // std dev = 6,924, 285,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=61 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.03420401935615819;  // std dev = 6,921, 284,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=61 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325355;  // std dev = 5,16e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.034515189569806703;  // std dev = 6,897, 277,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=61 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.03246583338730502;  // std dev = 6,883, 273,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=61 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.03242050922640604;  // std dev = 6,860, 267,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=61 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,79e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else return 0.0467633514879181;  // std dev = 6,773, 246,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=61 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.247268
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 2.338 seconds
Total inference time: 2.821 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.714953
   AUC PR    = 0.469722
   CLL	      = -0.253885
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.429907
   F1        = 0.601307


Total scoring time: 3.147 seconds
Parameter learned model CLL: -0.253885


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.06e-07, 0, 46], 'false': [6.944, 230, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [6.89, 214, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [6.962, 236, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [6.856, 205, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 46], 'false': [6.924, 224, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [6.921, 223, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 46], 'false': [6.897, 216, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [6.883, 212, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 46], 'false': [6.86, 206, 61]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.79e-08, 0, 46], 'false': [6.773, 185, 61]}]]
[{'': [9.267948727305654e-16, 0.1656806131245506]}, {'': [-9.267948727305654e-16, 0.17261487603305492]}, {'': [-3.8616453030440226e-17, 0.16320330125044027]}, {'': [-3.8616453030440226e-16, 0.17673412855446988]}, {'': [1.9308226515220113e-17, 0.16822406894428857]}, {'': [-1.9308226515220113e-17, 0.168654532830785]}, {'': [5.792467954566034e-17, 0.17172125272061647]}, {'': [-7.723290606088045e-17, 0.17351634934052723]}, {'': [-3.8616453030440226e-17, 0.17626842850930724]}, {'': [1.68946982008176e-17, 0.18647960869852603]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,06e-07, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5010060779566542;  // std dev = 0,479, 42,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=27 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09837280403092252;  // std dev = 1,383, 46,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.0970869881968566;  // std dev = 4,533, 113,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=27 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.47797330538580934;  // std dev = 0,462, 39,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0.19744840516913434;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09580999307724605;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=2 */
%   | | | else return -0.01697357824080592;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.10063178930074748;  // std dev = 4,486, 106,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462839;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.42418267546721905;  // std dev = 0,444, 37,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07584083111578904;  // std dev = 1,689, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | | else return 0.05584150476725027;  // std dev = 4,819, 148,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=31 */
%   | else return -0.13074502930665793;  // std dev = 0,198, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.29023539729696307;  // std dev = 0,462, 39,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06087332564261102;  // std dev = 1,684, 54,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=3 */
%   | | | else return 0.06116632727187166;  // std dev = 4,788, 136,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=31 */
%   | else return -0.11034855535060449;  // std dev = 0,152, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2371517420314145;  // std dev = 0,454, 38,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=27 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06512383669594203;  // std dev = 1,687, 71,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=3 */
%   | | | else return 0.05420032296357289;  // std dev = 4,780, 135,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=31 */
%   | else return -0.10997826881010668;  // std dev = 0,212, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14240897497896934;  // std dev = 0,468, 40,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07377395698237194;  // std dev = 1,677, 57,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=4 */
%   | | | else return 0.024685366534800544;  // std dev = 4,833, 161,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=30 */
%   | else return -0.09190612364702354;  // std dev = 0,131, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325355;  // std dev = 5,16e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return 0.03258425947263446;  // std dev = 2,988, 65,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=27 */
%   | | | else return 0.42300430596265914;  // std dev = 1,119, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.043760103287466864;  // std dev = 1,672, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | | else return 0.0509019860129075;  // std dev = 4,507, 109,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=27 */
%   | else return -0.08660553645200655;  // std dev = 0,146, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.06706029458605932;  // std dev = 3,105, 42,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=27 */
%   | | | else return -0.05906664748013411;  // std dev = 1,690, 73,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=3 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -3.38649181235012E-4;  // std dev = 4,674, 151,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
%   | | | else return 0.31478195021183175;  // std dev = 0,962, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.09324919817944871;  // std dev = 0,142, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08291226094859516;  // std dev = 0,468, 40,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07887108324570952;  // std dev = 1,576, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return 0.01795262904725281;  // std dev = 4,813, 158,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=30 */
%   | else return -0.07106139759548045;  // std dev = 0,106, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 2,79e-08, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.5939051185927772;  // std dev = 1,528, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return -0.19209000234002446;  // std dev = 1,849, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.08826670086549131;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.18650167634965328;  // std dev = 1,542, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then return 0.45873369839559547;  // std dev = 0,678, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.06016159264551116;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.935405
   AUC PR    = 0.651128
   CLL	      = -0.276117
   Precision = 0.120181 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.203065


Total learning time: 84.437 seconds
Total inference time: 7.667 seconds
AUC ROC: 0.935405


Results scoring model
   AUC ROC   = 0.970242
   AUC PR    = 0.757433
   CLL	      = -0.191011
   Precision = 0.22884 at threshold = 0.5
   Recall    = 0.682243
   F1        = 0.342723


Total scoring time: 26.693 seconds
Refined model CLL: -0.191011


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.935405
   AUC PR    = 0.651128
   CLL	      = -0.276117
   Precision = 0.120181 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.203065


Total learning time: 116.615 seconds
Total inference time: 7.667 seconds
AUC ROC: 0.935405
Total revision time: 116.615
Best scored revision CLL: -0.191011


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 06:04:59
{'parameter_0.2': {'F1': 0.578947, 'Inference time': 2.821, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 2.338, 'CLL': -0.247268}, 'F1': 0.203065, 'Inference time': 7.667, 'Precision': [0.120181, 0.5], 'AUC ROC': 0.935405, 'AUC PR': 0.651128, 'Recall': 0.654321, 'Learning time': 116.615, 'CLL': -0.276117}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6850720120225892;  // std dev = 0,378, 52,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=43 */
%   | else if ( haswordvenue(E, C) )
%   | | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0.30259337954395676;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( haswordvenue(H, F) )
%   | | then if ( author(I, G), venue(I, H) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.050941973991396876;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then return 0.2652917922423706;  // std dev = 0,491, 140,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=57 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.08638003211238239;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6101895559219056;  // std dev = 0,350, 49,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=42 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09135225725461084;  // std dev = 1,320, 54,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=2 */
%   | | | else return 0.0070948064526716315;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.052934484469994526;  // std dev = 1,811, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return 0.21852747046783116;  // std dev = 5,868, 144,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=57 */
%   else return -0.13064486472792475;  // std dev = 0,056, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.3279262516312296;  // std dev = 0,866, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.37108245169197485;  // std dev = 0,432, 55,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=41 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08843777912640369;  // std dev = 1,330, 66,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=2 */
%   | | | else return 0.2001936906998926;  // std dev = 0,812, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.11875844090590273;  // std dev = 0,456, 194,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=61 */
%   else return -0.11795171856714451;  // std dev = 0,069, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.43484375082617494;  // std dev = 0,300, 48,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=43 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.13284587488662922;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.4797119887073899;  // std dev = 1,135, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.06521652128220315;  // std dev = 1,620, 62,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=3 */
%   | | | else return 0.19663733555768534;  // std dev = 5,707, 133,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=57 */
%   else return -0.1075366438351154;  // std dev = 0,077, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2443556125178991;  // std dev = 0,384, 53,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=43 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11827445887529456;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0.5308083877743922;  // std dev = 0,853, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06433862408859044;  // std dev = 1,330, 50,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=2 */
%   | | | else return 0.04668966035225457;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.17307334841738364;  // std dev = 0,497, 129,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=57 */
%   else return -0.09932054328409042;  // std dev = 0,080, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.16850370714289734;  // std dev = 0,825, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.15954202969425701;  // std dev = 0,406, 53,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=42 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.10716363421931902;  // std dev = 0,020, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.048181862422684844;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.05371045291879915;  // std dev = 1,622, 61,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=3 */
%   | | | else return 0.11809306721773323;  // std dev = 5,739, 135,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=57 */
%   else return -0.0907903558523812;  // std dev = 0,052, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.07598401460814037;  // std dev = 0,913, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0048068323433615385;  // std dev = 3,604, 59,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | | else return -0.09501427746390687;  // std dev = 0,051, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0.1514052326152286;  // std dev = 0,444, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05066893537396184;  // std dev = 1,331, 48,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=2 */
%   | | | else return 0.04759878673292943;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.05286720233269717;  // std dev = 0,486, 149,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=57 */
%   | else return -0.07706867378644836;  // std dev = 0,007, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05520227126860322;  // std dev = 0,423, 269,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=107 */
%   else return -0.07401017811509226;  // std dev = 0,059, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.22827359179301976;  // std dev = 0,858, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.11068336696001246;  // std dev = 0,405, 53,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=42 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.054168956400367084;  // std dev = 1,334, 51,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=2 */
%   | | | else return 0.16717324671448527;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.03290531643291192;  // std dev = 1,270, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return 0.06823285159759052;  // std dev = 5,739, 135,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=57 */
%   else return -0.07271167602243639;  // std dev = 0,075, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.013519909621223382;  // std dev = 0,448, 61,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   | else if ( haswordvenue(E, C) )
%   | | then return -0.053872716390153765;  // std dev = 0,176, 58,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=2 */
%   | | else return -0.07199124285071902;  // std dev = 0,312, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | then if ( haswordauthor(H, F) )
%   | | then return -0.08761187404191485;  // std dev = 0,056, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( title(I, B), venue(I, G) )
%   | | | then return 0.03068917374664398;  // std dev = 5,506, 131,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=51 */
%   | | | else return 0.19741464372450063;  // std dev = 1,595, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then return 0.6302562349480565;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06227563937878773;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.696499
   AUC PR    = 0.044104
   CLL	      = -0.466111
   Precision = 0.063666 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.108108


Total learning time: 100.041 seconds
Total inference time: 5.137 seconds
AUC ROC: 0.696499


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 06:06:44
{'F1': 0.108108, 'Recall': 0.358025, 'Inference time': 5.137, 'Precision': [0.063666, 0.5], 'Learning time': 100.041, 'AUC PR': 0.044104, 'CLL': -0.466111, 'AUC ROC': 0.696499}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.59952824544434;  // std dev = 0,438, 58,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=43 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1067633456022421;  // std dev = 1,389, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | | else return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03374295679237964;  // std dev = 1,889, 37,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.2932634389163073;  // std dev = 5,674, 131,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=57 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.759501
   AUC PR    = 0.049948
   CLL	      = -0.202764
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.667 seconds
Total inference time: 2.226 seconds
AUC ROC: 0.759501


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 06:06:55
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.226, 'Precision': [nan, 0.5], 'Learning time': 8.667, 'AUC PR': 0.049948, 'CLL': -0.202764, 'AUC ROC': 0.759501}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995116;  // std dev = 2,38e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.08688239445678748;  // std dev = 9,660, 529,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=121 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,38e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.073831975192475;  // std dev = 9,674, 534,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=121 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,00e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.050841589653176956;  // std dev = 9,756, 567,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=121 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 1,98e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.05530414106481246;  // std dev = 9,684, 538,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=121 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.04246525460357533;  // std dev = 9,715, 550,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=121 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.037791233125728976;  // std dev = 9,705, 546,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=121 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 1,15e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.017988967078675262;  // std dev = 9,792, 583,000 (wgt'ed) examples reached here.  /* #neg=462 #pos=121 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527716;  // std dev = 8,69e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.026074333979583586;  // std dev = 9,725, 554,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=121 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.02723966653267419;  // std dev = 9,692, 541,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=121 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080109;  // std dev = 6,14e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else return 0.018447605143071807;  // std dev = 9,720, 552,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=121 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.241219
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 2.773 seconds
Total inference time: 2.358 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.71729
   AUC PR    = 0.473581
   CLL	      = -0.247842
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.434579
   F1        = 0.605863


Total scoring time: 2.595 seconds
Parameter learned model CLL: -0.247842


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.38e-07, 0, 93], 'false': [9.66, 408, 121]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.38e-07, 0, 93], 'false': [9.674, 413, 121]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4e-07, 0, 93], 'false': [9.756, 446, 121]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.98e-07, 0, 93], 'false': [9.684, 417, 121]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 93], 'false': [9.715, 429, 121]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 93], 'false': [9.705, 425, 121]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.15e-07, 0, 93], 'false': [9.792, 462, 121]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.69e-08, 0, 93], 'false': [9.725, 433, 121]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 93], 'false': [9.692, 420, 121]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.14e-08, 0, 93], 'false': [9.72, 431, 121]}]]
[{'': [6.11219557643097e-16, 0.17641446392773197]}, {'': [6.11219557643097e-16, 0.17524793446393813]}, {'': [1.7190550058712102e-15, 0.1678626640413767]}, {'': [4.2021344587962916e-16, 0.17432387612111397]}, {'': [-3.2471038999789525e-16, 0.17159999999999467]}, {'': [-3.820122235269356e-17, 0.17249996645601232]}, {'': [1.4325458382260084e-16, 0.1644713421146369]}, {'': [8.117759749947381e-17, 0.1707079461481329]}, {'': [-9.072790308764721e-17, 0.1736361431046088]}, {'': [4.0588798749736907e-17, 0.17115298781768015]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995116;  // std dev = 2,38e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5387044906550683;  // std dev = 0,466, 72,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=49 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.10052875085090088;  // std dev = 2,189, 121,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=5 */
%   | | | else return 0.07152473127785704;  // std dev = 7,260, 314,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=67 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,38e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.39174904188147275;  // std dev = 4,357, 80,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=49 */
%   | | | else return -0.07870930634969647;  // std dev = 2,547, 100,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=7 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08767576055212885;  // std dev = 2,188, 118,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=5 */
%   | | | else return 0.11588395315679002;  // std dev = 6,633, 225,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=60 */
%   | else return -0.12544463852839124;  // std dev = 4,08e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,00e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.30221229415850703;  // std dev = 0,490, 82,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=49 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08473946842531425;  // std dev = 2,196, 140,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=5 */
%   | | | else return 0.05892079630874129;  // std dev = 7,200, 307,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=67 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 1,98e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2828846643905467;  // std dev = 0,479, 76,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=49 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08114288656192908;  // std dev = 2,554, 108,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=7 */
%   | | | else return 0.037632128724629184;  // std dev = 7,130, 338,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=65 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.4293632589267131;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.22397007440662003;  // std dev = 4,121, 75,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=49 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0805429147708941;  // std dev = 2,196, 145,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=5 */
%   | | | else return 0.05008537971133366;  // std dev = 7,166, 310,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=67 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.3287569058996885;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.12005352318000201;  // std dev = 4,400, 81,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=49 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07037874000398675;  // std dev = 2,194, 135,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=5 */
%   | | | else return 0.04092420466379285;  // std dev = 7,179, 311,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=67 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 1,15e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12807801464621546;  // std dev = 0,474, 77,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=49 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06100808568560689;  // std dev = 2,191, 126,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=5 */
%   | | | else return 0.04411107353562891;  // std dev = 7,139, 297,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=67 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527716;  // std dev = 8,69e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2860815849249061;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.12445703142897348;  // std dev = 4,014, 73,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06067626288834777;  // std dev = 2,197, 144,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=5 */
%   | | | else return 0.031369488775229167;  // std dev = 7,164, 306,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.04375067511292799;  // std dev = 4,286, 80,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=49 */
%   | | | else return -0.0474389542807789;  // std dev = 2,187, 117,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=5 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06846178649939015;  // std dev = 2,523, 77,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=7 */
%   | | | else return 0.06311405774694032;  // std dev = 6,622, 223,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=60 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080109;  // std dev = 6,14e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return -0.03268179549863708;  // std dev = 4,621, 92,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=49 */
%   | | | else return -0.12959823440979346;  // std dev = 1,016, 93,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=1 */
%   | | else return 0.32126982637824614;  // std dev = 0,458, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05705844064052439;  // std dev = 1,706, 109,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=3 */
%   | | | else return 0.059423229520776354;  // std dev = 1,305, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.09123533436520447;  // std dev = 6,445, 195,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=60 */
%   | | | else return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.852988
   AUC PR    = 0.488246
   CLL	      = -0.264422
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 46.935 seconds
Total inference time: 4.298 seconds
AUC ROC: 0.852988


Results scoring model
   AUC ROC   = 0.889661
   AUC PR    = 0.556512
   CLL	      = -0.224275
   Precision = 0.235099 at threshold = 0.5
   Recall    = 0.663551
   F1        = 0.347188


Total scoring time: 7.135 seconds
Refined model CLL: -0.224275


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.852988
   AUC PR    = 0.488246
   CLL	      = -0.264422
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 59.438 seconds
Total inference time: 4.298 seconds
AUC ROC: 0.852988
Total revision time: 59.438
Best scored revision CLL: -0.224275


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 06:08:02
{'F1': 0.216769, 'Inference time': 4.298, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.852988, 'AUC PR': 0.488246, 'parameter_0.4': {'F1': 0.578947, 'Inference time': 2.358, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 2.773, 'CLL': -0.241219}, 'Recall': 0.654321, 'Learning time': 59.438, 'CLL': -0.264422}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.6181489350995125;  // std dev = 0,427, 100,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=76 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.11432812912067115;  // std dev = 1,708, 109,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=3 */
%   | | | else return 0.011995088945666036;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.06230561035503313;  // std dev = 2,538, 88,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=7 */
%   | | | else return 0.2802942638192317;  // std dev = 8,396, 289,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=122 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.015280466914243087;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.47681892845270385;  // std dev = 4,620, 104,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=74 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10071761192550974;  // std dev = 1,708, 108,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=3 */
%   | | | else return -0.03220639032352004;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03298526520368858;  // std dev = 2,508, 69,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
%   | | | else return 0.245582252676384;  // std dev = 8,375, 287,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=122 */
%   else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.09585790923014621;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4093025157901018;  // std dev = 4,386, 100,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=74 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0846652113877181;  // std dev = 1,703, 91,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=3 */
%   | | | else return 0.00344862245314164;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04314238329890987;  // std dev = 2,527, 80,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=7 */
%   | | | else return 0.22347678859925402;  // std dev = 8,251, 276,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=122 */
%   else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.3252152829489781;  // std dev = 0,433, 102,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=76 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.0843315298332027;  // std dev = 1,710, 121,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=3 */
%   | | | else return 0.026843887235758524;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04148273101651464;  // std dev = 2,532, 83,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=7 */
%   | | | else return 0.19612294361377;  // std dev = 8,152, 268,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=122 */
%   else return -0.1015963294878363;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.03608889833797314;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.29697694452939355;  // std dev = 3,805, 92,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=74 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07262123141730983;  // std dev = 1,707, 105,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=3 */
%   | | | else return 0.010763473701476227;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.029222530546677485;  // std dev = 2,521, 76,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=7 */
%   | | | else return 0.15504683921708376;  // std dev = 8,165, 269,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=122 */
%   else return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.08602189805789107;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.232288386698606;  // std dev = 3,718, 91,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=74 */
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06620478595964009;  // std dev = 1,707, 105,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=3 */
%   | | | else return 0.10559253345398467;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03589382880998032;  // std dev = 2,534, 85,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=7 */
%   | | | else return 0.11825628848477548;  // std dev = 8,190, 271,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=122 */
%   else return -0.0851847513883968;  // std dev = 1,29e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.1359711891968705;  // std dev = 4,238, 100,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=76 */
%   | | | else return -0.10229330713016146;  // std dev = 0,998, 73,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=1 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5577355176037677;  // std dev = 1,391, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06315967149837044;  // std dev = 1,709, 115,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=3 */
%   | | | else return 0.12776454066254087;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.08178143641430662;  // std dev = 0,496, 277,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=122 */
%   else return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.027792549014942127;  // std dev = 0,405, 609,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=214 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.07941536186672915;  // std dev = 0,433, 103,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=76 */
%   | | else return 0.17308247851025937;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.05990129321828213;  // std dev = 1,711, 111,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=3 */
%   | | | else return 0.007783488604693512;  // std dev = 1,271, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04037741793829736;  // std dev = 2,378, 95,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=7 */
%   | | | else return 0.05304940510114753;  // std dev = 8,286, 279,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=122 */
%   else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( haswordtitle(A, C), haswordauthor(E, C) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return -0.13879378807418366;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.05708755206882558;  // std dev = 0,434, 99,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=74 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05562928888479037;  // std dev = 1,709, 119,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=3 */
%   | | | else return -0.002834076255885935;  // std dev = 1,326, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordauthor(J, C) )
%   | | | then return -0.09011141779934412;  // std dev = 0,995, 87,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=1 */
%   | | | else return 0.038716320001046856;  // std dev = 8,441, 295,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=123 */
%   else if ( haswordtitle(A, K), haswordvenue(L, K) )
%   | then if ( haswordtitle(A, M), haswordauthor(N, M) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.12647655176354228;  // std dev = 0,301, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0.4897836353561601;  // std dev = 0,393, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 0.770851
   AUC PR    = 0.087465
   CLL	      = -0.453714
   Precision = 0.072115 at threshold = 0.5
   Recall    = 0.37037
   F1        = 0.120724


Total learning time: 257.187 seconds
Total inference time: 11.507 seconds
AUC ROC: 0.770851


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 06:12:31
{'F1': 0.120724, 'Recall': 0.37037, 'Inference time': 11.507, 'Precision': [0.072115, 0.5], 'Learning time': 257.187, 'AUC PR': 0.087465, 'CLL': -0.453714, 'AUC ROC': 0.770851}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.6032469743151988;  // std dev = 4,401, 102,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=76 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.1140732871227099;  // std dev = 1,708, 108,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=3 */
%   | | | else return -0.0168510649004878;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.13035681202692445;  // std dev = 0,994, 87,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=1 */
%   | | | else return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordvenue(K, C) )
%   | | | then return 0.277503773809186;  // std dev = 8,242, 279,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=117 */
%   | | | else return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */


Results
   AUC ROC   = 0.706149
   AUC PR    = 0.04372
   CLL	      = -0.218935
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 68.73 seconds
Total inference time: 2.346 seconds
AUC ROC: 0.706149


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 06:13:43
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.346, 'Precision': [nan, 0.5], 'Learning time': 68.73, 'AUC PR': 0.04372, 'CLL': -0.218935, 'AUC ROC': 0.706149}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.06357986780316816;  // std dev = 11,758, 847,000 (wgt'ed) examples reached here.  /* #neg=673 #pos=174 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.05961806624571432;  // std dev = 11,729, 831,000 (wgt'ed) examples reached here.  /* #neg=657 #pos=174 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.05186688901731333;  // std dev = 11,729, 831,000 (wgt'ed) examples reached here.  /* #neg=657 #pos=174 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.04188032087778218;  // std dev = 11,751, 843,000 (wgt'ed) examples reached here.  /* #neg=669 #pos=174 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.04632414726085299;  // std dev = 11,675, 803,000 (wgt'ed) examples reached here.  /* #neg=629 #pos=174 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.028906123559093326;  // std dev = 11,755, 845,000 (wgt'ed) examples reached here.  /* #neg=671 #pos=174 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.03276072691775966;  // std dev = 11,694, 813,000 (wgt'ed) examples reached here.  /* #neg=639 #pos=174 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.026539784109631315;  // std dev = 11,704, 818,000 (wgt'ed) examples reached here.  /* #neg=644 #pos=174 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.024056897924442038;  // std dev = 11,692, 812,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=174 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,32e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.01244346758047124;  // std dev = 11,751, 843,000 (wgt'ed) examples reached here.  /* #neg=669 #pos=174 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.232026
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 3.385 seconds
Total inference time: 2.241 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.728972
   AUC PR    = 0.496077
   CLL	      = -0.237983
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.457944
   F1        = 0.628205


Total scoring time: 3.227 seconds
Parameter learned model CLL: -0.237983


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9e-07, 0, 147], 'false': [11.758, 673, 174]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [11.729, 657, 174]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.2e-07, 0, 147], 'false': [11.729, 657, 174]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.42e-07, 0, 147], 'false': [11.751, 669, 174]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.63e-07, 0, 147], 'false': [11.675, 629, 174]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [11.755, 671, 174]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.42e-07, 0, 147], 'false': [11.694, 639, 174]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [11.704, 644, 174]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 147], 'false': [11.692, 638, 174]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.32e-08, 0, 147], 'false': [11.751, 669, 174]}]]
[{'': [5.5103314201803686e-15, 0.16322906459216618]}, {'': [-2.3201395453391025e-15, 0.16554366667101578]}, {'': [1.836777140060123e-15, 0.16554366667101775]}, {'': [1.3292466145171943e-15, 0.16380238345511947]}, {'': [4.712783451470053e-16, 0.16973398324154643]}, {'': [-1.570927817156684e-16, 0.1635152830783277]}, {'': [3.9877398435515827e-16, 0.16821666371645827]}, {'': [-3.021015032993623e-16, 0.16746671767863355]}, {'': [-3.6252180395923476e-17, 0.16836734693877747]}, {'': [2.718913529694261e-17, 0.1638023834551178]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.0803711573217344;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.4282423930434385;  // std dev = 5,121, 107,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=61 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06271437425300565;  // std dev = 3,183, 139,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=11 */
%   | | | else return 0.051199128149704315;  // std dev = 8,983, 518,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=100 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.5147476894262668;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.34230683013838786;  // std dev = 5,270, 112,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=61 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08596489926529788;  // std dev = 3,491, 210,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=13 */
%   | | | else return 0.08189331707410372;  // std dev = 8,683, 433,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=98 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,20e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.14332591792123686;  // std dev = 1,114, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3183824049727026;  // std dev = 5,055, 105,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=61 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06461092905478455;  // std dev = 3,471, 179,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=13 */
%   | | | else return 0.05888344158333941;  // std dev = 8,749, 460,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=98 */
%   | else return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.2530643565031425;  // std dev = 5,132, 109,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=63 */
%   | | | else return -0.06751386397145967;  // std dev = 3,172, 134,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=11 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06676440171887527;  // std dev = 3,489, 205,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=13 */
%   | | | else return 0.12508318850319752;  // std dev = 7,849, 298,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=87 */
%   | else return -0.10159632948783623;  // std dev = 3,33e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,63e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.12030526588657657;  // std dev = 1,272, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.16856701097734803;  // std dev = 5,204, 110,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=61 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05458851844823246;  // std dev = 3,479, 193,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=13 */
%   | | | else return 0.04106882207448224;  // std dev = 8,711, 455,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=98 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1126393913485932;  // std dev = 0,497, 118,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=63 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07378338388005638;  // std dev = 3,190, 150,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=11 */
%   | | | else return 0.05179919014226375;  // std dev = 8,680, 467,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=100 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11426125041325845;  // std dev = 0,489, 113,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=63 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05805421168365447;  // std dev = 3,486, 205,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=13 */
%   | | | else return 0.03760954962630076;  // std dev = 8,647, 445,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=98 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09429158559640236;  // std dev = 0,489, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.056150657906949564;  // std dev = 3,166, 129,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=11 */
%   | | | else return 0.02055564315389639;  // std dev = 8,809, 511,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=100 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.014592862191724643;  // std dev = 1,118, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.14844675664238113;  // std dev = 4,585, 93,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=61 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05397056132959768;  // std dev = 3,486, 205,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=13 */
%   | | | else return 0.03643655304113382;  // std dev = 8,604, 435,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=98 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,32e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( author(G, E), venue(G, F) )
%   | | | then return 0.34002623134812215;  // std dev = 1,297, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.06391009486844047;  // std dev = 5,635, 304,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=64 */
%   | | else return 0.13452567293746814;  // std dev = 0,426, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.12028308500829762;  // std dev = 1,413, 128,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=2 */
%   | | | else return 0.4586679973082028;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.059519750699192436;  // std dev = 7,945, 317,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=87 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 0.853931
   AUC PR    = 0.489198
   CLL	      = -0.258197
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 64.224 seconds
Total inference time: 4.305 seconds
AUC ROC: 0.853931


Results scoring model
   AUC ROC   = 0.883305
   AUC PR    = 0.563346
   CLL	      = -0.225253
   Precision = 0.225 at threshold = 0.5
   Recall    = 0.64486
   F1        = 0.333602


Total scoring time: 15.019 seconds
Refined model CLL: -0.225253


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853931
   AUC PR    = 0.489198
   CLL	      = -0.258197
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 85.855 seconds
Total inference time: 4.305 seconds
AUC ROC: 0.853931
Total revision time: 85.855
Best scored revision CLL: -0.225253


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 06:15:16
{'F1': 0.216769, 'Inference time': 4.305, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853931, 'AUC PR': 0.489198, 'parameter_0.6': {'F1': 0.578947, 'Inference time': 2.241, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 3.385, 'CLL': -0.232026}, 'Recall': 0.654321, 'Learning time': 85.855, 'CLL': -0.258197}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.5676083945589694;  // std dev = 5,523, 148,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=105 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10829401792062189;  // std dev = 2,198, 149,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=5 */
%   | | | else return 0.221785298735876;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.05723568028510305;  // std dev = 3,173, 130,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=11 */
%   | | | else return 0.32046049288845285;  // std dev = 9,947, 398,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=184 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.4885226013049564;  // std dev = 5,477, 147,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=105 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10108274404825902;  // std dev = 2,204, 178,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=5 */
%   | | | else return 0.19258789115538322;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.04486164697349717;  // std dev = 3,164, 122,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=11 */
%   | | | else return 0.28509125119535517;  // std dev = 9,870, 391,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=184 */
%   else return -0.1254446385283916;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.28327054548500724;  // std dev = 1,054, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return 0.4149008967331165;  // std dev = 5,177, 144,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=105 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09176690566146586;  // std dev = 2,206, 189,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=5 */
%   | | | else return 0.0665598371145971;  // std dev = 2,422, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.05073459176919372;  // std dev = 3,183, 139,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=11 */
%   | | | else return 0.2185160792619684;  // std dev = 10,051, 408,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=184 */
%   else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.47659043543766066;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1607855472331908;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.31111450055495343;  // std dev = 5,330, 144,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=105 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07587312966119227;  // std dev = 2,199, 151,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=5 */
%   | | | else return 0.12235976659223473;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.04510820377675375;  // std dev = 3,183, 139,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=11 */
%   | | | else return 0.16335495785932166;  // std dev = 10,178, 421,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=184 */
%   else return -0.10159632948783617;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.361253746463041;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1402541903234564;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.20960205191066403;  // std dev = 5,566, 149,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=105 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07058345785798052;  // std dev = 2,201, 160,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=5 */
%   | | | else return 0.16793849595995405;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.09791159273514374;  // std dev = 0,461, 541,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=195 */
%   else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13627970674331977;  // std dev = 0,439, 170,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=113 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06777888528132536;  // std dev = 2,205, 180,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=5 */
%   | | | else return 0.11762949599729519;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03843857868975517;  // std dev = 3,161, 120,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=11 */
%   | | | else return 0.0983454249105533;  // std dev = 10,269, 431,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=184 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.1744684599253846;  // std dev = 0,413, 147,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=109 */
%   | | else return 0.23014477290053248;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.01773363218208142;  // std dev = 1,382, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return -0.060588778361200475;  // std dev = 2,977, 174,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=11 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.045524386528396604;  // std dev = 3,181, 137,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=11 */
%   | | | else return 0.10938117384135111;  // std dev = 9,968, 400,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=184 */
%   else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.09503163423274641;  // std dev = 0,440, 153,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=109 */
%   | | else return 0.19191127651894946;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.0052688836538752806;  // std dev = 0,411, 766,000 (wgt'ed) examples reached here.  /* #neg=558 #pos=208 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.062262157788547046;  // std dev = 5,519, 158,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=109 */
%   | | | else return -0.05519879480415117;  // std dev = 2,199, 163,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=5 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.16389201993770386;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10536554178799241;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10083651741025766;  // std dev = 1,400, 97,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=2 */
%   | | | else return 0.5708526181964036;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return 0.06515943311947761;  // std dev = 0,497, 416,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=184 */
%   else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.1295418947904768;  // std dev = 1,154, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.05012689251554498;  // std dev = 5,495, 155,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=109 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return -0.010400876031505631;  // std dev = 1,361, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | | else return -0.05338182099602717;  // std dev = 2,952, 178,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=11 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09291767989352734;  // std dev = 1,401, 110,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=2 */
%   | | | else return 0.3659297682972103;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else return 0.06742728957063708;  // std dev = 0,498, 400,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=184 */
%   else return -0.06419184008202625;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */


Results
   AUC ROC   = 0.766285
   AUC PR    = 0.05253
   CLL	      = -0.508655
   Precision = 0.075521 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.124731


Total learning time: 273.21 seconds
Total inference time: 6.002 seconds
AUC ROC: 0.766285


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 06:19:56
{'F1': 0.124731, 'Recall': 0.358025, 'Inference time': 6.002, 'Precision': [0.075521, 0.5], 'Learning time': 273.21, 'AUC PR': 0.05253, 'CLL': -0.508655, 'AUC ROC': 0.766285}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5724346493852243;  // std dev = 5,477, 147,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=105 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11079516427936978;  // std dev = 2,201, 161,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=5 */
%   | | | else return 0.09344305274657119;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.05242017059154457;  // std dev = 3,165, 123,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=11 */
%   | | | else return 0.28506308823175863;  // std dev = 10,269, 431,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=184 */
%   else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */


Results
   AUC ROC   = 0.759501
   AUC PR    = 0.049948
   CLL	      = -0.210588
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 27.362 seconds
Total inference time: 2.104 seconds
AUC ROC: 0.759501


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 06:20:25
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.104, 'Precision': [nan, 0.5], 'Learning time': 27.362, 'AUC PR': 0.049948, 'CLL': -0.210588, 'AUC ROC': 0.759501}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else return 0.07983799460046717;  // std dev = 13,409, 1.042,000 (wgt'ed) examples reached here.  /* #neg=811 #pos=231 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else return 0.06383597699452961;  // std dev = 13,460, 1.071,000 (wgt'ed) examples reached here.  /* #neg=840 #pos=231 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,25e-07, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else return 0.046919087266266986;  // std dev = 13,533, 1.115,000 (wgt'ed) examples reached here.  /* #neg=884 #pos=231 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831;  // std dev = 2,92e-07, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else return 0.0541703319113306;  // std dev = 13,416, 1.046,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=231 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 4,04e-07, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else return 0.03701369673589454;  // std dev = 13,497, 1.093,000 (wgt'ed) examples reached here.  /* #neg=862 #pos=231 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948856;  // std dev = 4,24e-07, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else return 0.03516036727689587;  // std dev = 13,467, 1.075,000 (wgt'ed) examples reached here.  /* #neg=844 #pos=231 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 3,04e-07, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else return 0.02408448824465651;  // std dev = 13,517, 1.105,000 (wgt'ed) examples reached here.  /* #neg=874 #pos=231 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527797;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else return 0.030958070549464322;  // std dev = 13,427, 1.052,000 (wgt'ed) examples reached here.  /* #neg=821 #pos=231 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else return 0.010656223473722104;  // std dev = 13,560, 1.132,000 (wgt'ed) examples reached here.  /* #neg=901 #pos=231 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else return 0.024298024286375723;  // std dev = 13,429, 1.053,000 (wgt'ed) examples reached here.  /* #neg=822 #pos=231 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.235546
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 4.265 seconds
Total inference time: 2.583 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.73014
   AUC PR    = 0.498286
   CLL	      = -0.241299
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.46028
   F1        = 0.6304


Total scoring time: 4.005 seconds
Parameter learned model CLL: -0.241299


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 197], 'false': [13.409, 811, 231]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 197], 'false': [13.46, 840, 231]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.25e-07, 0, 197], 'false': [13.533, 884, 231]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 197], 'false': [13.416, 815, 231]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.04e-07, 0, 197], 'false': [13.497, 862, 231]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.24e-07, 0, 197], 'false': [13.467, 844, 231]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 197], 'false': [13.517, 874, 231]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 197], 'false': [13.427, 821, 231]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 197], 'false': [13.56, 901, 231]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 197], 'false': [13.429, 822, 231]}]]
[{'': [5.915178104804895e-15, 0.17254302039854116]}, {'': [-3.60681591756396e-15, 0.16916570549787807]}, {'': [1.9837487546601782e-15, 0.1642534537191609]}, {'': [4.3281791010767526e-16, 0.17207042032107336]}, {'': [8.295676610397109e-16, 0.1666782460789712]}, {'': [9.107210191849e-16, 0.1687087074093999]}, {'': [4.688860692833149e-16, 0.16534796584837314]}, {'': [-9.918743773300891e-17, 0.17136560453381894]}, {'': [-1.0820447752691881e-16, 0.16242164966475428]}, {'': [3.60681591756396e-17, 0.17124860999505723]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.42866175561233033;  // std dev = 6,183, 156,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=89 */
%   | | | else return -0.0696861164468794;  // std dev = 3,604, 194,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=14 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08399982523106637;  // std dev = 3,632, 242,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=14 */
%   | | | else return 0.1059750220560314;  // std dev = 9,260, 460,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=114 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.39894763239002545;  // std dev = 5,956, 148,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=89 */
%   | | | else return -0.04266895474391935;  // std dev = 3,568, 154,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=14 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07431695180627679;  // std dev = 3,632, 243,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=14 */
%   | | | else return 0.12280153104452438;  // std dev = 9,072, 410,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=114 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,25e-07, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.08923210457810232;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2739828377159345;  // std dev = 6,196, 155,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=85 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.069680363794977;  // std dev = 3,640, 258,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=14 */
%   | | | else return 0.06688969283883421;  // std dev = 9,860, 566,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=128 */
%   | else return -0.11231637819360625;  // std dev = 5,27e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831;  // std dev = 2,92e-07, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.6876554871727678;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2532846596082534;  // std dev = 5,928, 146,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=85 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06046766552641518;  // std dev = 3,636, 250,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=14 */
%   | | | else return 0.04033706299735274;  // std dev = 9,974, 611,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=128 */
%   | else return -0.10159632948783623;  // std dev = 4,83e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 4,04e-07, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.07664488360369083;  // std dev = 1,606, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.19200353393488342;  // std dev = 5,952, 145,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=85 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07421180878894412;  // std dev = 3,611, 216,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=14 */
%   | | | else return 0.04112229624857438;  // std dev = 9,906, 638,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=128 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948856;  // std dev = 4,24e-07, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.05847063425559251;  // std dev = 1,388, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.15766726779725673;  // std dev = 5,879, 144,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=85 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05270772242650303;  // std dev = 3,624, 228,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=14 */
%   | | | else return 0.05398885357495854;  // std dev = 9,796, 559,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=128 */
%   | else return -0.08518475138839679;  // std dev = 2,79e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 3,04e-07, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.02536585356119772;  // std dev = 7,033, 399,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=95 */
%   | | | else return 0.27311030668145225;  // std dev = 2,221, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06144493472453126;  // std dev = 3,594, 181,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=14 */
%   | | | else return 0.07457229908821554;  // std dev = 9,076, 411,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=114 */
%   | else return -0.07877675473109162;  // std dev = 4,71e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527797;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.06491933303780152;  // std dev = 1,599, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.12282059635751325;  // std dev = 5,870, 143,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=85 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05046299369403833;  // std dev = 3,572, 238,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=14 */
%   | | | else return 0.02473822015770844;  // std dev = 9,877, 589,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=128 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.028051644086709248;  // std dev = 7,007, 379,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=95 */
%   | | | else return 0.1111516982782178;  // std dev = 2,457, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05063102198487553;  // std dev = 3,581, 167,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=14 */
%   | | | else return 0.04517115009876401;  // std dev = 9,157, 431,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=114 */
%   | else return -0.06842697784420265;  // std dev = 4,15e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 197,000 (wgt'ed) examples reached here.  /* #pos=197 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.28689674448470087;  // std dev = 0,978, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16125855175727014;  // std dev = 5,439, 131,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=85 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05722010303379905;  // std dev = 3,605, 199,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=14 */
%   | | | else return 0.009974872479293306;  // std dev = 9,862, 660,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=128 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 0.846567
   AUC PR    = 0.484091
   CLL	      = -0.262908
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 104.40100000000001 seconds
Total inference time: 4.337 seconds
AUC ROC: 0.846567


Results scoring model
   AUC ROC   = 0.886032
   AUC PR    = 0.566216
   CLL	      = -0.225463
   Precision = 0.221698 at threshold = 0.5
   Recall    = 0.658879
   F1        = 0.331765


Total scoring time: 13.991 seconds
Refined model CLL: -0.225463


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.846567
   AUC PR    = 0.484091
   CLL	      = -0.262908
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 126.662 seconds
Total inference time: 4.337 seconds
AUC ROC: 0.846567
Total revision time: 126.662
Best scored revision CLL: -0.225463


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 06:22:40
{'F1': 0.216769, 'Inference time': 4.337, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.846567, 'parameter_0.8': {'F1': 0.578947, 'Inference time': 2.583, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 4.265, 'CLL': -0.235546}, 'AUC PR': 0.484091, 'Recall': 0.654321, 'Learning time': 126.662, 'CLL': -0.262908}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.3966104735610508;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.5684293089312847;  // std dev = 6,636, 214,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=152 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.11426485800393599;  // std dev = 1,972, 145,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=4 */
%   | | | else return 0.5724346493852266;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.11327963632905952;  // std dev = 2,414, 210,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=6 */
%   | | | else return 0.2059750220560341;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.26455702953458365;  // std dev = 0,491, 593,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=241 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8027212043484538;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1972787956515462;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.4618761691331343;  // std dev = 0,463, 221,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=152 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10335149849404436;  // std dev = 2,428, 222,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=6 */
%   | | | else return 0.08460112075898162;  // std dev = 2,428, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.05190490404515963;  // std dev = 3,355, 161,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=14 */
%   | | | else return 0.246351378326224;  // std dev = 11,787, 569,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=241 */
%   else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6458091928991561;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16788822836197023;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.3970698324663767;  // std dev = 0,452, 213,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=152 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09536010252887049;  // std dev = 2,429, 259,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=6 */
%   | | | else return 0.1558712948735999;  // std dev = 2,298, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04624180586376051;  // std dev = 3,351, 168,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=14 */
%   | | | else return 0.22946474138768483;  // std dev = 11,560, 541,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=241 */
%   else return -0.11231637819360624;  // std dev = 5,77e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.5182527968413904;  // std dev = 0,124, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.40790695662953286;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3050827741933817;  // std dev = 0,448, 214,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=152 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07880204810499124;  // std dev = 2,416, 203,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=6 */
%   | | | else return 0.03410890193845239;  // std dev = 2,452, 35,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else return 0.1305178059376146;  // std dev = 0,460, 720,000 (wgt'ed) examples reached here.  /* #neg=465 #pos=255 */
%   else return -0.10159632948783615;  // std dev = 5,96e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2417005151477257;  // std dev = 0,431, 222,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=159 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07072867436312308;  // std dev = 2,413, 201,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=6 */
%   | | | else return 0.03738037253584259;  // std dev = 2,444, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.057628522698979126;  // std dev = 3,346, 169,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=14 */
%   | | | else return 0.13312938278501898;  // std dev = 11,861, 579,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=241 */
%   else return -0.09269127618926107;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17779448866508876;  // std dev = 0,434, 223,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=159 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06836515750436163;  // std dev = 2,426, 216,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=6 */
%   | | | else return 0.04885550664082414;  // std dev = 2,412, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05941498397905341;  // std dev = 3,380, 185,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=14 */
%   | | | else return 0.1257080385821209;  // std dev = 11,653, 552,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=241 */
%   else return -0.08518475138839679;  // std dev = 2,36e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12227275090447935;  // std dev = 0,442, 226,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=159 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.060535672631727024;  // std dev = 2,418, 208,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=6 */
%   | | | else return 0.08201617094620142;  // std dev = 2,337, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04779894299470639;  // std dev = 3,374, 175,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=14 */
%   | | | else return 0.10951936790304007;  // std dev = 11,534, 538,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=241 */
%   else return -0.07877675473109168;  // std dev = 3,57e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10457326739990493;  // std dev = 0,437, 222,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=159 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.058233712899244824;  // std dev = 2,419, 231,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=6 */
%   | | | else return -0.0383210861447334;  // std dev = 2,513, 42,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04157072476889784;  // std dev = 3,375, 175,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=14 */
%   | | | else return 0.07964128570852658;  // std dev = 11,586, 544,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=241 */
%   else return -0.07324622576333704;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11487046666465682;  // std dev = 0,419, 211,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=159 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08672902487911267;  // std dev = 1,990, 150,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=4 */
%   | | | else return 0.4759240300312877;  // std dev = 1,789, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.029928457087817998;  // std dev = 3,396, 214,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=14 */
%   | | | else return 0.03787080695533741;  // std dev = 11,824, 574,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=241 */
%   else return -0.06842697784420267;  // std dev = 2,98e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.020995062281683505;  // std dev = 6,807, 228,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=155 */
%   | | | else return -0.0808439086577963;  // std dev = 1,984, 189,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=4 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.3332172561209398;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1738097815488047;  // std dev = 2,323, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.04691630378324415;  // std dev = 2,412, 197,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=6 */
%   | | | else return 0.007259305514810517;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else return 0.042484062707194965;  // std dev = 0,496, 556,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=241 */
%   else return -0.06419184008202625;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */


Results
   AUC ROC   = 0.760409
   AUC PR    = 0.0686
   CLL	      = -0.451497
   Precision = 0.075521 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.124731


Total learning time: 627.504 seconds
Total inference time: 5.163 seconds
AUC ROC: 0.760409


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 06:33:13
{'F1': 0.124731, 'Recall': 0.358025, 'Inference time': 5.163, 'Precision': [0.075521, 0.5], 'Learning time': 627.504, 'AUC PR': 0.0686, 'CLL': -0.451497, 'AUC ROC': 0.760409}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5717639585736874;  // std dev = 0,452, 213,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=152 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.11576410837874908;  // std dev = 2,417, 230,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=6 */
%   | | | else return 0.15444523139580865;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0696861164468794;  // std dev = 3,604, 194,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=14 */
%   | | | else return 0.3154544379458077;  // std dev = 11,436, 527,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=241 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */


Results
   AUC ROC   = 0.765572
   AUC PR    = 0.069853
   CLL	      = -0.20914
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 28.674 seconds
Total inference time: 2.292 seconds
AUC ROC: 0.765572


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 06:33:44
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.292, 'Precision': [nan, 0.5], 'Learning time': 28.674, 'AUC PR': 0.069853, 'CLL': -0.20914, 'AUC ROC': 0.765572}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.06592278668961338;  // std dev = 15,262, 1.415,000 (wgt'ed) examples reached here.  /* #neg=1.121 #pos=294 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.06344082316114333;  // std dev = 15,206, 1.377,000 (wgt'ed) examples reached here.  /* #neg=1.083 #pos=294 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.05241333821106514;  // std dev = 15,233, 1.395,000 (wgt'ed) examples reached here.  /* #neg=1.101 #pos=294 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.044400028208422815;  // std dev = 15,242, 1.401,000 (wgt'ed) examples reached here.  /* #neg=1.107 #pos=294 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.05430794313393215;  // std dev = 15,085, 1.301,000 (wgt'ed) examples reached here.  /* #neg=1.007 #pos=294 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.037281221938384734;  // std dev = 15,174, 1.356,000 (wgt'ed) examples reached here.  /* #neg=1.062 #pos=294 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.036462128557788256;  // std dev = 15,128, 1.327,000 (wgt'ed) examples reached here.  /* #neg=1.033 #pos=294 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.02239032429982522;  // std dev = 15,211, 1.380,000 (wgt'ed) examples reached here.  /* #neg=1.086 #pos=294 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.01616839609278028;  // std dev = 15,237, 1.398,000 (wgt'ed) examples reached here.  /* #neg=1.104 #pos=294 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.02809663212736715;  // std dev = 15,097, 1.308,000 (wgt'ed) examples reached here.  /* #neg=1.014 #pos=294 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.238172
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 5.032 seconds
Total inference time: 2.549 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.725746
   AUC PR    = 0.48982
   CLL	      = -0.24424
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451493
   F1        = 0.622108


Total scoring time: 4.549 seconds
Parameter learned model CLL: -0.24424


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 242], 'false': [15.262, 1121, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.206, 1083, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.92e-07, 0, 242], 'false': [15.233, 1101, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.242, 1107, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.67e-07, 0, 242], 'false': [15.085, 1007, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 242], 'false': [15.174, 1062, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 242], 'false': [15.128, 1033, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.23e-07, 0, 242], 'false': [15.211, 1086, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.237, 1104, 294]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 242], 'false': [15.097, 1014, 294]}]]
[{'': [4.8152482919279514e-15, 0.16460387818551966]}, {'': [-4.2280228904733235e-15, 0.16792211922290598]}, {'': [9.98283182472868e-16, 0.16633599260030618]}, {'': [-2.055288905091199e-16, 0.1658130396306169]}, {'': [2.9361270072731413e-16, 0.17491304802489796]}, {'': [3.8169651094550837e-16, 0.169805779622527]}, {'': [3.5233524087277696e-16, 0.17246691944990555]}, {'': [6.239269890455425e-17, 0.16765595463138383]}, {'': [-1.7249746167729704e-16, 0.1660741586693519]}, {'': [2.9361270072731413e-17, 0.17424880060601466]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.3981489350995092;  // std dev = 7,048, 200,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=108 */
%   | | | else return -0.0840893320485024;  // std dev = 3,883, 277,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=16 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07105460472349649;  // std dev = 3,856, 226,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=16 */
%   | | | else return 0.14175851152676383;  // std dev = 10,504, 543,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=154 */
%   | else return -0.14185106490048763;  // std dev = 8,69e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3739060317344402;  // std dev = 0,495, 189,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=108 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08144668401915993;  // std dev = 3,898, 317,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=16 */
%   | | | else return 0.0705745355919518;  // std dev = 11,421, 763,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=170 */
%   | else return -0.12544463852839144;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2847406539873324;  // std dev = 0,498, 197,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=108 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.073024934689217;  // std dev = 3,899, 321,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=16 */
%   | | | else return 0.07805588669257285;  // std dev = 11,293, 709,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=170 */
%   | else return -0.1123163781936062;  // std dev = 8,16e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.24611722058060165;  // std dev = 6,827, 190,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=108 */
%   | | | else return -0.07169998675089738;  // std dev = 3,833, 209,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=16 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06360044318364812;  // std dev = 3,895, 310,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=16 */
%   | | | else return 0.10053920871951842;  // std dev = 10,519, 547,000 (wgt'ed) examples reached here.  /* #neg=393 #pos=154 */
%   | else return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.02177455888208496;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.21268364979117751;  // std dev = 6,523, 176,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=104 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0605177853410905;  // std dev = 3,902, 331,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=16 */
%   | | | else return 0.04064229462685193;  // std dev = 11,375, 764,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=170 */
%   | else return -0.09269127618926101;  // std dev = 3,33e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.1833595957698647;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.13278763269176125;  // std dev = 6,748, 185,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=104 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05326621277942988;  // std dev = 3,899, 321,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=16 */
%   | | | else return 0.0324965718369073;  // std dev = 11,399, 765,000 (wgt'ed) examples reached here.  /* #neg=595 #pos=170 */
%   | else return -0.08518475138839682;  // std dev = 4,83e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15758196327403104;  // std dev = 0,482, 177,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=108 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07669078748758572;  // std dev = 3,845, 224,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=16 */
%   | | | else return 0.037108423961759916;  // std dev = 11,280, 831,000 (wgt'ed) examples reached here.  /* #neg=661 #pos=170 */
%   | else return -0.07877675473109157;  // std dev = 6,32e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.026796294758822465;  // std dev = 7,520, 484,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=114 */
%   | | | else return 0.1867741997331121;  // std dev = 2,663, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05657269109739399;  // std dev = 3,825, 187,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=16 */
%   | | | else return 0.0572420314081795;  // std dev = 10,591, 567,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=154 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.08600668420194386;  // std dev = 6,722, 190,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=108 */
%   | | | else return -0.04899657189047446;  // std dev = 3,851, 305,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=16 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0602574418640843;  // std dev = 3,847, 213,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=16 */
%   | | | else return 0.05583935737031565;  // std dev = 10,530, 550,000 (wgt'ed) examples reached here.  /* #neg=396 #pos=154 */
%   | else return -0.06842697784420265;  // std dev = 5,05e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.0874200438908669;  // std dev = 6,550, 182,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=108 */
%   | | | else return -0.04990799889931223;  // std dev = 3,863, 341,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=16 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.047667366472309465;  // std dev = 3,835, 198,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=16 */
%   | | | else return 0.05063691141610647;  // std dev = 10,496, 541,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=154 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */


Results
   AUC ROC   = 0.853714
   AUC PR    = 0.488267
   CLL	      = -0.248095
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 141.2 seconds
Total inference time: 4.475 seconds
AUC ROC: 0.853714


Results scoring model
   AUC ROC   = 0.881613
   AUC PR    = 0.556956
   CLL	      = -0.230057
   Precision = 0.21504 at threshold = 0.5
   Recall    = 0.645522
   F1        = 0.322611


Total scoring time: 16.151 seconds
Refined model CLL: -0.230057


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853714
   AUC PR    = 0.488267
   CLL	      = -0.248095
   Precision = 0.129902 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216769


Total learning time: 166.932 seconds
Total inference time: 4.475 seconds
AUC ROC: 0.853714
Total revision time: 166.932
Best scored revision CLL: -0.230057


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 06:36:39
{'parameter_1.0': {'F1': 0.578947, 'Inference time': 2.549, 'Precision': [1.0, 0.5], 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'Learning time': 5.032, 'CLL': -0.238172}, 'F1': 0.216769, 'Inference time': 4.475, 'Precision': [0.129902, 0.5], 'AUC ROC': 0.853714, 'AUC PR': 0.488267, 'Recall': 0.654321, 'Learning time': 166.932, 'CLL': -0.248095}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5449816753130318;  // std dev = 0,464, 281,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1180415410909645;  // std dev = 2,420, 252,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=6 */
%   | | | else return 0.11455919150976876;  // std dev = 2,727, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06492798797741071;  // std dev = 3,843, 208,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=16 */
%   | | | else return 0.2961771041135922;  // std dev = 13,220, 710,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=311 */
%   else return -0.14185106490048763;  // std dev = 8,56e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.49034446997313474;  // std dev = 0,453, 271,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10641946931617276;  // std dev = 2,423, 277,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=6 */
%   | | | else return 0.03970207180924819;  // std dev = 2,835, 51,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06301857704736495;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=16 */
%   | | | else return 0.24948930915493564;  // std dev = 13,299, 721,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=311 */
%   else return -0.12544463852839133;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3643464155858428;  // std dev = 0,466, 283,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=193 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09410205401447444;  // std dev = 2,413, 175,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=6 */
%   | | | else return 0.3122913259511682;  // std dev = 2,359, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.06701589510335375;  // std dev = 3,799, 296,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=16 */
%   | | | else return 0.20524692641631453;  // std dev = 13,347, 728,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=311 */
%   else return -0.11231637819360624;  // std dev = 5,87e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.598766328338724;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.4012336716612759;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.3281780930446081;  // std dev = 0,444, 255,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=186 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08614502119194;  // std dev = 2,421, 249,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=6 */
%   | | | else return 0.0858674045378988;  // std dev = 2,758, 42,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0476067216541669;  // std dev = 3,741, 221,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=16 */
%   | | | else return 0.1887262754807728;  // std dev = 13,101, 694,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=311 */
%   else return -0.10159632948783626;  // std dev = 4,71e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.45055243346414475;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.01802951610319116;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21602249998519596;  // std dev = 0,452, 269,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=186 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08173223886971234;  // std dev = 2,427, 290,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=6 */
%   | | | else return 0.08657180164614639;  // std dev = 2,736, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else return 0.08833891694860165;  // std dev = 0,456, 951,000 (wgt'ed) examples reached here.  /* #neg=624 #pos=327 */
%   else return -0.09269127618926107;  // std dev = 1,49e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.21712993099067265;  // std dev = 0,424, 257,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07572754276899543;  // std dev = 2,430, 303,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=6 */
%   | | | else return 0.15736421332835343;  // std dev = 2,580, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.048104208080067136;  // std dev = 3,729, 210,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=16 */
%   | | | else return 0.12634777370048772;  // std dev = 13,169, 703,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=311 */
%   else return -0.08518475138839682;  // std dev = 5,96e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.09085418964654482;  // std dev = 0,456, 287,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=193 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06823962274372793;  // std dev = 2,429, 284,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=6 */
%   | | | else return 0.0943423146632882;  // std dev = 2,654, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else return 0.07271022281688688;  // std dev = 0,457, 900,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=327 */
%   else return -0.07877675473109161;  // std dev = 5,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.29159003355967644;  // std dev = 0,059, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.43105342706462524;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.1134010370011726;  // std dev = 0,447, 257,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=186 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09534929778321681;  // std dev = 2,421, 206,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=6 */
%   | | | else return 0.25134883649489764;  // std dev = 2,377, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.041947278803071655;  // std dev = 3,657, 293,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=16 */
%   | | | else return 0.07809267937584748;  // std dev = 13,213, 709,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=311 */
%   else return -0.07324622576333707;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.0691092976689849;  // std dev = 0,442, 277,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=193 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08984770652492949;  // std dev = 2,440, 214,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=6 */
%   | | | else return 0.35657850931984303;  // std dev = 2,038, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.035142066758365426;  // std dev = 3,642, 286,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=16 */
%   | | | else return 0.04962784897258681;  // std dev = 13,333, 726,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=311 */
%   else return -0.06842697784420265;  // std dev = 4,71e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.03806665979694787;  // std dev = 0,451, 282,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=193 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07726902673170498;  // std dev = 2,425, 203,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=6 */
%   | | | else return 0.2503790621944742;  // std dev = 2,157, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else return 0.006638374336174612;  // std dev = 0,425, 1.080,000 (wgt'ed) examples reached here.  /* #neg=753 #pos=327 */
%   else return -0.06419184008202626;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 0.764023
   AUC PR    = 0.069244
   CLL	      = -0.42318
   Precision = 0.075521 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.124731


Total learning time: 326.212 seconds
Total inference time: 4.77 seconds
AUC ROC: 0.764023


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 06:42:10
{'F1': 0.124731, 'Recall': 0.358025, 'Inference time': 4.77, 'Precision': [0.075521, 0.5], 'Learning time': 326.212, 'AUC PR': 0.069244, 'CLL': -0.42318, 'AUC ROC': 0.764023}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.58188434365982;  // std dev = 0,447, 257,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=186 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.12003288308230649;  // std dev = 2,423, 275,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=6 */
%   | | | else return 0.09624417319475045;  // std dev = 2,760, 42,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.06418116198786629;  // std dev = 3,842, 206,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=16 */
%   | | | else return 0.30498801555927785;  // std dev = 13,116, 696,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=311 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */


Results
   AUC ROC   = 0.765572
   AUC PR    = 0.069853
   CLL	      = -0.206237
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 35.898 seconds
Total inference time: 2.401 seconds
AUC ROC: 0.765572


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 06:42:49
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.401, 'Precision': [nan, 0.5], 'Learning time': 35.898, 'AUC PR': 0.069853, 'CLL': -0.206237, 'AUC ROC': 0.765572}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 558
Target train neg examples: 23373

Target test facts examples: 9016
Target test pos	 examples: 140
Target test neg examples: 4623

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else return 0.11269438964496825;  // std dev = 7,224, 275,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=70 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else return 0.09934394525228826;  // std dev = 7,219, 274,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=70 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462842;  // std dev = 1,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else return 0.05834215965236422;  // std dev = 7,351, 307,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=70 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else return 0.04138637317653343;  // std dev = 7,392, 319,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=70 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else return 0.042350144117857966;  // std dev = 7,358, 309,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=70 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else return 0.0381221830047052;  // std dev = 7,348, 306,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=70 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253545;  // std dev = 5,96e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else return 0.03989901006535008;  // std dev = 7,311, 296,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=70 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else return 0.05157992927119429;  // std dev = 7,224, 275,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=70 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else return 0.06199994075484324;  // std dev = 7,132, 256,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=70 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801106;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else return 0.030747783931696464;  // std dev = 7,233, 277,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=70 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.275079
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 2.128 seconds
Total inference time: 2.354 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.684685
   AUC PR    = 0.405273
   CLL	      = -0.274661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.369369
   F1        = 0.539474


Total scoring time: 2.127 seconds
Parameter learned model CLL: -0.274661


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.46e-07, 0, 41], 'false': [7.224, 205, 70]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 41], 'false': [7.219, 204, 70]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 41], 'false': [7.351, 237, 70]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 41], 'false': [7.392, 249, 70]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 41], 'false': [7.358, 239, 70]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 41], 'false': [7.348, 236, 70]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.96e-08, 0, 41], 'false': [7.311, 226, 70]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 41], 'false': [7.224, 205, 70]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 41], 'false': [7.132, 186, 70]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.83e-08, 0, 41], 'false': [7.233, 207, 70]}]]
[{'': [1.4730764034050857e-15, 0.18975206611570294]}, {'': [-9.53167084556232e-16, 0.19020725664660093]}, {'': [5.199093188488538e-16, 0.17602308777811937]}, {'': [-3.682691008512714e-16, 0.17128369414608488]}, {'': [2.166288828536891e-17, 0.1752181062200842]}, {'': [-2.166288828536891e-17, 0.17642786962279344]}, {'': [8.665155314147564e-17, 0.18056062819576524]}, {'': [-7.040438692744895e-17, 0.1897520661156997]}, {'': [-4.603363760640893e-17, 0.1986694335937527]}, {'': [8.12358310701334e-18, 0.1888464596176173]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.46280009789020904;  // std dev = 3,206, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | | else return -0.1155352754268035;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.027096966539831964;  // std dev = 2,489, 61,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=7 */
%   | | | else return 0.18247325942383524;  // std dev = 4,932, 111,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210955;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.34522057859135563;  // std dev = 0,497, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10613804663012778;  // std dev = 0,989, 45,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
%   | | | else return 0.08307884002706484;  // std dev = 5,683, 180,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=43 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462842;  // std dev = 1,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.49418458083690003;  // std dev = 0,424, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09694607662975128;  // std dev = 0,990, 50,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
%   | | | else return 0.09468933094045937;  // std dev = 5,601, 163,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=43 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.17513243712574406;  // std dev = 0,497, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08806947309662748;  // std dev = 0,990, 52,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1 */
%   | | | else return 0.057771424412235706;  // std dev = 5,682, 180,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=43 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -8.109254736284332E-4;  // std dev = 3,853, 102,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | | else return 0.4558351014699732;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07589561831825324;  // std dev = 0,988, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | | else return 0.09199288169631036;  // std dev = 5,046, 123,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14538786247669064;  // std dev = 0,496, 46,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06596279215201968;  // std dev = 2,377, 63,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
%   | | | else return 0.04366131786583974;  // std dev = 5,189, 163,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=37 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253545;  // std dev = 5,96e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.26662627236537245;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return -0.07785790623362074;  // std dev = 0,991, 55,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06255457181320236;  // std dev = 2,388, 66,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=7 */
%   | | | else return 0.1162870725791806;  // std dev = 4,876, 106,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16208974977837584;  // std dev = 0,465, 38,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0654367652774354;  // std dev = 0,990, 38,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
%   | | | else return 0.06220888383807705;  // std dev = 5,428, 155,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=43 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return -0.17957035548245598;  // std dev = 0,428, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(A, D) )
%   | | | then return -0.009140230775670668;  // std dev = 3,408, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | | else return -0.06220792375406014;  // std dev = 0,992, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10253559341199746;  // std dev = 1,381, 46,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | | | else return 0.3425177540957166;  // std dev = 1,437, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.032185353403334914;  // std dev = 5,063, 125,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801106;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.05997440899799126;  // std dev = 3,139, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | | else return -0.10703634357374277;  // std dev = 1,396, 67,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=2 */
%   | | else return 0.15839966104587896;  // std dev = 0,436, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.07430856580897567;  // std dev = 0,018, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.051994128107754986;  // std dev = 0,986, 37,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05379958897243052;  // std dev = 4,963, 114,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.275939
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 22.935 seconds
Total inference time: 3.844 seconds
AUC ROC: 0.900324


Results scoring model
   AUC ROC   = 0.878847
   AUC PR    = 0.473358
   CLL	      = -0.257374
   Precision = 0.156909 at threshold = 0.5
   Recall    = 0.603604
   F1        = 0.249071


Total scoring time: 4.202 seconds
Refined model CLL: -0.257374


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.275939
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 31.391999999999996 seconds
Total inference time: 3.844 seconds
AUC ROC: 0.900324
Total revision time: 31.391999999999996
Best scored revision CLL: -0.257374


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:43:28
{'parameter_0.2': {'F1': 0.640777, 'Inference time': 2.354, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 2.128, 'CLL': -0.275079}, 'F1': 0.277457, 'Inference time': 3.844, 'Precision': [0.173913, 0.5], 'AUC ROC': 0.900324, 'AUC PR': 0.576646, 'Recall': 0.685714, 'Learning time': 31.391999999999996, 'CLL': -0.275939}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4945125714631476;  // std dev = 0,481, 55,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=35 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11060106490048774;  // std dev = 0,984, 32,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=1 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return 0.017239844190421426;  // std dev = 2,426, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | | else return 0.3303711573217357;  // std dev = 5,991, 144,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=68 */
%   else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.12009039302268572;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.45342372635601974;  // std dev = 0,471, 51,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.10748914060049433;  // std dev = 0,144, 47,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.025318577474197208;  // std dev = 2,484, 59,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=7 */
%   | | | else return 0.2852231876148767;  // std dev = 5,991, 144,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=68 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3294775653360581;  // std dev = 0,482, 56,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11216556324384193;  // std dev = 1,394, 74,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=2 */
%   | | | else return 0.3614848990902441;  // std dev = 1,574, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.09437132496444502;  // std dev = 0,988, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | | else return 0.18291694152893323;  // std dev = 6,295, 163,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=68 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.34657199357501706;  // std dev = 0,448, 49,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=35 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07873786508401835;  // std dev = 1,378, 43,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | | | else return 0.36839679162705896;  // std dev = 1,480, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.084497504411899;  // std dev = 0,151, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | else return 0.17006085419345252;  // std dev = 0,496, 155,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=68 */
%   else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2764220812411181;  // std dev = 0,443, 48,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=35 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.08140494671744297;  // std dev = 0,144, 48,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03363369832599632;  // std dev = 2,313, 66,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=7 */
%   | | | else return 0.14110120294343517;  // std dev = 6,146, 153,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=68 */
%   else return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.20185739896564397;  // std dev = 3,057, 47,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=34 */
%   | | | else return -0.08489989911206497;  // std dev = 1,392, 67,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=2 */
%   | | else return 0.5699629495732882;  // std dev = 0,347, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.09293076888914226;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0651529911113645;  // std dev = 0,986, 36,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
%   | | else if ( haswordvenue(J, C) )
%   | | | then return 0.1378705750694699;  // std dev = 5,949, 142,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=67 */
%   | | | else return -0.08396041084602257;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11282605434702044;  // std dev = 0,462, 51,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=35 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06010316405558149;  // std dev = 0,986, 37,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
%   | | | else return -0.08591135918250874;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03175642589269687;  // std dev = 2,137, 65,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
%   | | | else return 0.09483688552604579;  // std dev = 6,064, 148,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=68 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.07072691785084712;  // std dev = 0,469, 52,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=35 */
%   | else if ( haswordvenue(E, C) )
%   | | then return -0.06878638092746894;  // std dev = 0,178, 61,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */
%   | | else return 0.13170584856288994;  // std dev = 0,470, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( haswordvenue(H, F) )
%   | | then if ( author(I, G), title(I, B) )
%   | | | then return -0.08055203070638632;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.05497469491572353;  // std dev = 0,986, 37,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
%   | | else return -0.07513520877536072;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then return 0.13591974486044225;  // std dev = 0,500, 130,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=68 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12725953955307084;  // std dev = 0,434, 47,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | else return -0.0035782448512475798;  // std dev = 0,412, 258,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=76 */
%   else return -0.0686480795530864;  // std dev = 0,002, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.05136659130303538;  // std dev = 0,459, 50,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=35 */
%   | else if ( haswordvenue(E, C) )
%   | | then return -0.0637178250752294;  // std dev = 0,175, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | else return -0.06153351349451651;  // std dev = 0,453, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.05446439355713376;  // std dev = 0,146, 46,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then return 0.05650401392000284;  // std dev = 0,500, 143,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=68 */
%   | | else return -0.06417855950623699;  // std dev = 5,89e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.824897
   AUC PR    = 0.106808
   CLL	      = -0.371492
   Precision = 0.123077 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.193939


Total learning time: 43.413 seconds
Total inference time: 4.146 seconds
AUC ROC: 0.824897


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 06:44:16
{'F1': 0.193939, 'Recall': 0.457143, 'Inference time': 4.146, 'Precision': [0.123077, 0.5], 'Learning time': 43.413, 'AUC PR': 0.106808, 'CLL': -0.371492, 'AUC ROC': 0.824897}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.4945125714631476;  // std dev = 0,481, 55,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=35 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10959300038435871;  // std dev = 0,984, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.1115480345974574;  // std dev = 1,393, 66,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=2 */
%   | | | else return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.2581489350995136;  // std dev = 0,490, 170,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=68 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.212521
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.15 seconds
Total inference time: 2.12 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 06:44:26
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.12, 'Precision': [nan, 0.5], 'Learning time': 8.15, 'AUC PR': 0.097917, 'CLL': -0.212521, 'AUC ROC': 0.821572}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.10196518951646952;  // std dev = 10,215, 566,000 (wgt'ed) examples reached here.  /* #neg=428 #pos=138 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.07643367444434457;  // std dev = 10,301, 597,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=138 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,72e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.08321726653287932;  // std dev = 10,186, 556,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=138 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 1,33e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.0683451175086395;  // std dev = 10,207, 563,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=138 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.04577828450491457;  // std dev = 10,290, 593,000 (wgt'ed) examples reached here.  /* #neg=455 #pos=138 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.041902890448718616;  // std dev = 10,269, 585,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=138 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325358;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.03247747867487035;  // std dev = 10,287, 592,000 (wgt'ed) examples reached here.  /* #neg=454 #pos=138 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.03245199397039264;  // std dev = 10,252, 579,000 (wgt'ed) examples reached here.  /* #neg=441 #pos=138 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.016852665423417443;  // std dev = 10,321, 605,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=138 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.025515145883895276;  // std dev = 10,244, 576,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=138 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.264557
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 2.634 seconds
Total inference time: 2.221 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.690583
   AUC PR    = 0.416261
   CLL	      = -0.263724
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.381166
   F1        = 0.551948


Total scoring time: 2.78 seconds
Parameter learned model CLL: -0.263724


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 85], 'false': [10.215, 428, 138]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.8e-07, 0, 85], 'false': [10.301, 459, 138]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.72e-07, 0, 85], 'false': [10.186, 418, 138]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.33e-07, 0, 85], 'false': [10.207, 425, 138]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 85], 'false': [10.29, 455, 138]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 85], 'false': [10.269, 447, 138]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 85], 'false': [10.287, 454, 138]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 85], 'false': [10.252, 441, 138]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 85], 'false': [10.321, 467, 138]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.77e-08, 0, 85], 'false': [10.244, 438, 138]}]]
[{'': [-3.343730521224001e-16, 0.1843698884990468]}, {'': [9.195258933366003e-16, 0.17772278477816394]}, {'': [1.6300686290967004e-15, 0.18659748460224415]}, {'': [2.0898315757650005e-16, 0.18503386766529328]}, {'': [-3.343730521224001e-16, 0.1785587332823357]}, {'': [-5.224578939412501e-17, 0.18024983563445446]}, {'': [-1.2016531560648752e-16, 0.1787687180423682]}, {'': [2.0898315757650005e-17, 0.18153507476711192]}, {'': [-5.747036833353752e-17, 0.17606994057783024]}, {'': [3.918434204559376e-17, 0.1821831597222208]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4364621881115612;  // std dev = 0,494, 83,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06893439823382101;  // std dev = 2,547, 96,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=7 */
%   | | | else return 0.12850724128843757;  // std dev = 7,782, 307,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=83 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.36103996559277546;  // std dev = 0,496, 85,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=48 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04722321658257875;  // std dev = 3,398, 118,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=13 */
%   | | | else return 0.09705453762938723;  // std dev = 7,563, 310,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=77 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,72e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.33154940148610873;  // std dev = 0,490, 80,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=48 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05863670085930771;  // std dev = 3,429, 143,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=13 */
%   | | | else return 0.09007813409304208;  // std dev = 7,537, 301,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=77 */
%   | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 1,33e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.26931043603023896;  // std dev = 0,488, 79,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=48 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07596973341092005;  // std dev = 2,534, 90,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=7 */
%   | | | else return 0.06097685919263879;  // std dev = 7,913, 358,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=83 */
%   | else return -0.1015963294878363;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11521017788596001;  // std dev = 0,500, 93,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=48 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0704891705448754;  // std dev = 2,541, 94,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=7 */
%   | | | else return 0.055558225990093454;  // std dev = 7,893, 353,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=83 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.21977003139887988;  // std dev = 0,477, 74,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05720317283256666;  // std dev = 3,413, 131,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=13 */
%   | | | else return 0.06414893513402102;  // std dev = 7,494, 310,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=77 */
%   | else return -0.08518475138839679;  // std dev = 1,05e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325358;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.13204289762193136;  // std dev = 4,297, 78,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=48 */
%   | | | else return -0.055000224461058164;  // std dev = 3,423, 138,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=13 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06849834873989344;  // std dev = 2,541, 90,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=7 */
%   | | | else return 0.10903365411938849;  // std dev = 6,886, 217,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=70 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12365954662728233;  // std dev = 0,480, 75,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=48 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0444531182158722;  // std dev = 3,418, 131,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=13 */
%   | | | else return 0.042647864174503954;  // std dev = 7,476, 305,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=77 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.04547168133498725;  // std dev = 0,491, 81,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=48 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09880408330236899;  // std dev = 1,961, 114,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=4 */
%   | | | else return 0.2207070219964365;  // std dev = 1,352, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08493371785375536;  // std dev = 2,385, 129,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=6 */
%   | | | else return 0.23243698785192798;  // std dev = 2,091, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.06960955403670473;  // std dev = 6,951, 226,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=70 */
%   | | | else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.019951408238342568;  // std dev = 0,494, 83,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.042520926699059554;  // std dev = 3,371, 146,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=13 */
%   | | | else return -0.004291065669155164;  // std dev = 7,621, 348,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=77 */
%   | else return -0.06484584686830419;  // std dev = 0,035, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.272864
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 35.994 seconds
Total inference time: 3.472 seconds
AUC ROC: 0.899184


Results scoring model
   AUC ROC   = 0.857991
   AUC PR    = 0.47364
   CLL	      = -0.251419
   Precision = 0.158522 at threshold = 0.5
   Recall    = 0.596413
   F1        = 0.250471


Total scoring time: 5.26 seconds
Refined model CLL: -0.251419


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.272864
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 46.668 seconds
Total inference time: 3.472 seconds
AUC ROC: 0.899184
Total revision time: 46.668
Best scored revision CLL: -0.251419


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:45:19
{'F1': 0.277457, 'Inference time': 3.472, 'Precision': [0.173913, 0.5], 'AUC ROC': 0.899184, 'AUC PR': 0.571454, 'parameter_0.4': {'F1': 0.640777, 'Inference time': 2.221, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 2.634, 'CLL': -0.264557}, 'Recall': 0.685714, 'Learning time': 46.668, 'CLL': -0.272864}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5678263544543518;  // std dev = 0,454, 93,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=66 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09868559727458837;  // std dev = 2,396, 139,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=6 */
%   | | | else return 0.24703782398840124;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.052107475156897946;  // std dev = 2,524, 78,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=7 */
%   | | | else return 0.31329843676063807;  // std dev = 8,640, 301,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=137 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.17419878663178698;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4623708296425387;  // std dev = 0,463, 93,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=64 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07983714307800313;  // std dev = 2,387, 119,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=6 */
%   | | | else return 0.21423003928420992;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return 0.19602232855683824;  // std dev = 0,478, 388,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=144 */
%   else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2807226116700558;  // std dev = 0,490, 111,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=66 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.11582240596502306;  // std dev = 1,956, 95,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=4 */
%   | | | else return 0.5994147345570562;  // std dev = 0,832, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.029979361200106584;  // std dev = 3,294, 127,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=13 */
%   | | | else return 0.23197455280596552;  // std dev = 8,698, 306,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=137 */
%   else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.26256539445881677;  // std dev = 0,480, 103,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=66 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08808024565276266;  // std dev = 1,942, 71,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=4 */
%   | | | else return 0.1454507232982461;  // std dev = 1,308, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.02233487178015573;  // std dev = 3,281, 124,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=13 */
%   | | | else return 0.21001972232934205;  // std dev = 8,541, 293,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=137 */
%   else return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.23966684877930378;  // std dev = 0,465, 97,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=66 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08648349382200306;  // std dev = 1,953, 84,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=4 */
%   | | | else return 0.15930921514219623;  // std dev = 1,271, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.01421792022733412;  // std dev = 3,285, 113,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=13 */
%   | | | else return 0.11294181239912521;  // std dev = 8,970, 332,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=137 */
%   else return -0.09269127618926105;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.21721694431561483;  // std dev = 0,449, 92,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=66 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06636619186228414;  // std dev = 2,400, 120,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=6 */
%   | | | else return 0.2225546039482122;  // std dev = 2,003, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0.0970405927150204;  // std dev = 0,464, 379,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=144 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13966486756828536;  // std dev = 0,461, 95,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=66 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05650184274029619;  // std dev = 2,395, 114,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=6 */
%   | | | else return 0.12299240608454257;  // std dev = 2,109, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06891323292391272;  // std dev = 2,373, 86,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=7 */
%   | | | else return 0.12203690421339092;  // std dev = 8,541, 293,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=137 */
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.2704540307673349;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.04853284202434738;  // std dev = 0,480, 100,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=64 */
%   | else if ( haswordvenue(F, C) )
%   | | then return -0.08294602217066085;  // std dev = 0,191, 105,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=4 */
%   | | else return 0.011256114600373127;  // std dev = 0,373, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then if ( author(J, H), venue(J, I) )
%   | | | then return 0.23066510238710544;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06539884685209538;  // std dev = 2,193, 146,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=5 */
%   | | else return 0.2338521481935875;  // std dev = 0,479, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.09077453350889494;  // std dev = 0,499, 295,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=137 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1287344613549362;  // std dev = 0,444, 91,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=66 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07206026096275427;  // std dev = 1,969, 77,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=4 */
%   | | | else return 0.1868023668025293;  // std dev = 1,188, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.015223969983516435;  // std dev = 3,134, 123,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=13 */
%   | | | else return 0.07087847396783017;  // std dev = 8,553, 294,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=137 */
%   else return -0.06936397619602247;  // std dev = 0,023, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.08504002608830012;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.026284602635970593;  // std dev = 0,474, 97,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=64 */
%   | else if ( haswordvenue(F, C) )
%   | | then if ( author(G, D), title(G, A) )
%   | | | then return -0.11171415022902863;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06250087759462532;  // std dev = 1,958, 86,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=4 */
%   | | else return 0.06252416766736749;  // std dev = 0,419, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | then return 0.03763382237506711;  // std dev = 0,456, 402,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=150 */
%   | else return -0.06558664304263341;  // std dev = 0,029, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */


Results
   AUC ROC   = 0.824897
   AUC PR    = 0.106808
   CLL	      = -0.362958
   Precision = 0.143564 at threshold = 0.5
   Recall    = 0.414286
   F1        = 0.213235


Total learning time: 74.20400000000001 seconds
Total inference time: 4.019 seconds
AUC ROC: 0.824897


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 06:46:38
{'F1': 0.213235, 'Recall': 0.414286, 'Inference time': 4.019, 'Precision': [0.143564, 0.5], 'Learning time': 74.20400000000001, 'AUC PR': 0.106808, 'CLL': -0.362958, 'AUC ROC': 0.824897}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.531833145625829;  // std dev = 0,469, 95,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=64 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09246834885110497;  // std dev = 1,950, 81,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=4 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.031681573375063936;  // std dev = 3,401, 118,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=13 */
%   | | | else return 0.3388506894854735;  // std dev = 8,435, 285,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=137 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 0.821535
   AUC PR    = 0.097832
   CLL	      = -0.221244
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.996 seconds
Total inference time: 2.339 seconds
AUC ROC: 0.821535


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 06:46:50
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.339, 'Precision': [nan, 0.5], 'Learning time': 8.996, 'AUC PR': 0.097832, 'CLL': -0.221244, 'AUC ROC': 0.821535}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995101;  // std dev = 8,68e-07, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.08836476243763708;  // std dev = 12,157, 834,000 (wgt'ed) examples reached here.  /* #neg=642 #pos=192 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.06723174802183203;  // std dev = 12,236, 872,000 (wgt'ed) examples reached here.  /* #neg=680 #pos=192 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,06e-07, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.04865954653259878;  // std dev = 12,312, 912,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=192 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,26e-07, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.06585493604751683;  // std dev = 12,124, 819,000 (wgt'ed) examples reached here.  /* #neg=627 #pos=192 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,46e-07, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.042426354164871415;  // std dev = 12,234, 871,000 (wgt'ed) examples reached here.  /* #neg=679 #pos=192 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694902;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.046744056587647555;  // std dev = 12,151, 831,000 (wgt'ed) examples reached here.  /* #neg=639 #pos=192 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253523;  // std dev = 2,33e-07, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.035248314013303354;  // std dev = 12,185, 847,000 (wgt'ed) examples reached here.  /* #neg=655 #pos=192 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.027611908531619517;  // std dev = 12,202, 855,000 (wgt'ed) examples reached here.  /* #neg=663 #pos=192 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.009867947534956439;  // std dev = 12,306, 909,000 (wgt'ed) examples reached here.  /* #neg=717 #pos=192 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.006433690493045743;  // std dev = 12,321, 917,000 (wgt'ed) examples reached here.  /* #neg=725 #pos=192 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.247892
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 3.295 seconds
Total inference time: 2.27 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.712575
   AUC PR    = 0.459189
   CLL	      = -0.245348
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.42515
   F1        = 0.596639


Total scoring time: 3.249 seconds
Parameter learned model CLL: -0.245348


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.68e-07, 0, 142], 'false': [12.157, 642, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 142], 'false': [12.236, 680, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.06e-07, 0, 142], 'false': [12.312, 720, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.26e-07, 0, 142], 'false': [12.124, 627, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.46e-07, 0, 142], 'false': [12.234, 679, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 142], 'false': [12.151, 639, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.33e-07, 0, 142], 'false': [12.185, 655, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 142], 'false': [12.202, 663, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 142], 'false': [12.306, 717, 192]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.96e-08, 0, 142], 'false': [12.321, 725, 192]}]]
[{'': [5.304051407786663e-15, 0.177216500181152]}, {'': [-2.201681716439747e-15, 0.17170271862637154]}, {'': [1.8013759498143385e-15, 0.16620498614958]}, {'': [1.2759746311184898e-15, 0.17947376189134703]}, {'': [4.2532487703949657e-16, 0.1718441265367907]}, {'': [-1.2509555207044018e-16, 0.17766424689490481]}, {'': [3.815414338148425e-16, 0.17529749417696391]}, {'': [-2.939745473655344e-16, 0.17413357956294478]}, {'': [-3.752866562113205e-17, 0.1666067596858744]}, {'': [2.5019110414088035e-17, 0.16553909017718937]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995101;  // std dev = 8,68e-07, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.47218402281881156;  // std dev = 5,198, 114,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=70 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0724066204560432;  // std dev = 3,736, 216,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=15 */
%   | | | else return 0.08060215755273303;  // std dev = 9,121, 481,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=107 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.43862729047559024;  // std dev = 4,963, 108,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=70 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05554329474750631;  // std dev = 3,719, 193,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=15 */
%   | | | else return 0.07190063077368357;  // std dev = 9,113, 478,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=107 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,06e-07, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.27301777931300475;  // std dev = 0,492, 125,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=70 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08739930801159666;  // std dev = 3,188, 156,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=11 */
%   | | | else return 0.06304846636595914;  // std dev = 9,268, 523,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=111 */
%   | else return -0.11231637819360625;  // std dev = 5,67e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,26e-07, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.14254903791325976;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.2743471810947983;  // std dev = 5,123, 112,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=70 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07382432824333393;  // std dev = 3,185, 150,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=11 */
%   | | | else return 0.05756446734398994;  // std dev = 9,254, 514,000 (wgt'ed) examples reached here.  /* #neg=403 #pos=111 */
%   | else return -0.10159632948783615;  // std dev = 5,67e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,46e-07, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18725810492848877;  // std dev = 0,475, 120,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=70 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.060067227261195885;  // std dev = 3,711, 190,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=15 */
%   | | | else return 0.048443968403687664;  // std dev = 9,093, 492,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=107 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694902;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1663328000271544;  // std dev = 0,470, 115,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=70 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05217596904868033;  // std dev = 3,709, 188,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=15 */
%   | | | else return 0.05194800424110088;  // std dev = 9,033, 468,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=107 */
%   | else return -0.08518475138839679;  // std dev = 2,98e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253523;  // std dev = 2,33e-07, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.020320658746209485;  // std dev = 6,161, 297,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=77 */
%   | | | else return 0.28199137909118993;  // std dev = 2,155, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.059363499950978664;  // std dev = 3,157, 117,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=11 */
%   | | | else return 0.07526175090221056;  // std dev = 8,378, 357,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=96 */
%   | else return -0.07877675473109169;  // std dev = 3,33e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09923737954262088;  // std dev = 0,481, 120,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=70 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07009382093736856;  // std dev = 3,185, 153,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=11 */
%   | | | else return 0.04122361338541912;  // std dev = 9,124, 501,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=111 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.021790939916799926;  // std dev = 6,108, 276,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=77 */
%   | | | else return 0.16114625727641613;  // std dev = 2,301, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0440929867013606;  // std dev = 3,158, 118,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=11 */
%   | | | else return 0.05270768752657564;  // std dev = 8,399, 362,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=96 */
%   | else return -0.06842697784420268;  // std dev = 2,11e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.17856351179504215;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.04278356901964195;  // std dev = 5,550, 125,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=70 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08722231033743733;  // std dev = 2,596, 205,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=7 */
%   | | | else return 0.12746029971871042;  // std dev = 2,301, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0712785196245756;  // std dev = 2,565, 125,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=7 */
%   | | | else return 0.20689513299507542;  // std dev = 1,592, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.050515513197687247;  // std dev = 8,360, 353,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=96 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */


Results
   AUC ROC   = 0.89703
   AUC PR    = 0.575217
   CLL	      = -0.239725
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 59.859 seconds
Total inference time: 4.031 seconds
AUC ROC: 0.89703


Results scoring model
   AUC ROC   = 0.875192
   AUC PR    = 0.521768
   CLL	      = -0.228714
   Precision = 0.179509 at threshold = 0.5
   Recall    = 0.634731
   F1        = 0.279868


Total scoring time: 7.526 seconds
Refined model CLL: -0.228714


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.89703
   AUC PR    = 0.575217
   CLL	      = -0.239725
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 73.929 seconds
Total inference time: 4.031 seconds
AUC ROC: 0.89703
Total revision time: 73.929
Best scored revision CLL: -0.228714


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:48:11
{'F1': 0.318339, 'Inference time': 4.031, 'Precision': [0.210046, 0.5], 'AUC ROC': 0.89703, 'AUC PR': 0.575217, 'parameter_0.6': {'F1': 0.640777, 'Inference time': 2.27, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 3.295, 'CLL': -0.247892}, 'Recall': 0.657143, 'Learning time': 73.929, 'CLL': -0.239725}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.5387044906550655;  // std dev = 0,466, 144,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=98 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.10230304230161773;  // std dev = 2,593, 177,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=7 */
%   | | | else return 0.25814893509951237;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.03708916013858291;  // std dev = 3,138, 105,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=11 */
%   | | | else return 0.28642336337393626;  // std dev = 10,852, 481,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=206 */
%   else return -0.14185106490048763;  // std dev = 8,56e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.4369671626868409;  // std dev = 0,474, 149,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=98 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.09261399486007421;  // std dev = 2,596, 188,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=7 */
%   | | | else return 0.17155974144062758;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04796502200823698;  // std dev = 3,165, 123,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=11 */
%   | | | else return 0.26165074528292526;  // std dev = 10,721, 466,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=206 */
%   else return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.3757099102937851;  // std dev = 0,466, 144,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=98 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07856116375256873;  // std dev = 2,591, 170,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=7 */
%   | | | else return 0.17837959813130466;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.05323798904644187;  // std dev = 3,184, 140,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=11 */
%   | | | else return 0.21780400430652563;  // std dev = 10,739, 468,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=206 */
%   else return -0.11231637819360622;  // std dev = 6,50e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.0388821332224407;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.3433615368751113;  // std dev = 5,060, 134,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=99 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07215342773235056;  // std dev = 2,593, 177,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=7 */
%   | | | else return 0.3385113718441011;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05852790707149405;  // std dev = 2,555, 104,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=7 */
%   | | | else return 0.5408310672874804;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.20589604705795142;  // std dev = 0,499, 440,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=206 */
%   else return -0.10159632948783615;  // std dev = 5,67e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.21421774349808909;  // std dev = 0,464, 143,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=98 */
%   | | else return 0.33707635931726554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.0625714623344313;  // std dev = 2,589, 166,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=7 */
%   | | | else return 0.03461329072534917;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04866659075685792;  // std dev = 3,118, 143,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=11 */
%   | | | else return 0.1333469659943947;  // std dev = 10,766, 471,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=206 */
%   else return -0.09269127618926107;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.5487245206342193;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19971658132217263;  // std dev = 5,079, 131,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=95 */
%   | | else return 0.2663097796170596;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05734959697113794;  // std dev = 2,590, 168,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=7 */
%   | | | else return 0.041804893511949055;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04135178417237606;  // std dev = 3,113, 141,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=11 */
%   | | | else return 0.09004932291021117;  // std dev = 10,902, 487,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=206 */
%   else return -0.08518475138839679;  // std dev = 2,11e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.06994782347920751;  // std dev = 5,867, 152,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=98 */
%   | | | else return 0.21759508727742416;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.04540522766723221;  // std dev = 2,581, 144,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=7 */
%   | | | else return 0.15561757344196284;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0484357480879048;  // std dev = 2,562, 113,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=7 */
%   | | | else return 0.315699654714384;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.09556219545649854;  // std dev = 0,497, 459,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=206 */
%   else return -0.07877675473109166;  // std dev = 3,87e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.08887494006278403;  // std dev = 5,559, 144,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=98 */
%   | | | else return 0.18282385140179858;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( author(G, E), title(G, A) )
%   | | | then return -0.013296411261375438;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.05258397804404376;  // std dev = 3,377, 186,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=14 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.04738199955505345;  // std dev = 2,567, 120,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=7 */
%   | | | else return 0.43013324328122066;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.08755605813872845;  // std dev = 0,499, 445,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=206 */
%   else return -0.07324622576333704;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( haswordvenue(F, C) )
%   | | | then return 0.04966189405719293;  // std dev = 5,712, 148,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=98 */
%   | | | else return 0.15707489265316177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return -0.013538468846417897;  // std dev = 1,390, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return -0.04675540351405478;  // std dev = 3,197, 177,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=13 */
%   | else return 0.030695948711699783;  // std dev = 0,458, 592,000 (wgt'ed) examples reached here.  /* #neg=375 #pos=217 */
%   else return -0.06842697784420265;  // std dev = 4,28e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.05640832832828034;  // std dev = 0,463, 144,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=98 */
%   | | else return 0.13737919056287096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.0389320843406602;  // std dev = 0,933, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.048387804502231874;  // std dev = 3,415, 194,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=14 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.03393387446078132;  // std dev = 2,993, 131,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=11 */
%   | | | else return 0.04729296426068901;  // std dev = 10,637, 457,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=206 */
%   else return -0.06419184008202625;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */


Results
   AUC ROC   = 0.825769
   AUC PR    = 0.105453
   CLL	      = -0.357878
   Precision = 0.123077 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.193939


Total learning time: 131.5 seconds
Total inference time: 8.344 seconds
AUC ROC: 0.825769


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 06:50:31
{'F1': 0.193939, 'Recall': 0.457143, 'Inference time': 8.344, 'Precision': [0.123077, 0.5], 'Learning time': 131.5, 'AUC PR': 0.105453, 'CLL': -0.357878, 'AUC ROC': 0.825769}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.5482897801699326;  // std dev = 0,462, 142,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=98 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.10359969878026927;  // std dev = 2,595, 183,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=7 */
%   | | | else return 0.25814893509951237;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.05168713047425816;  // std dev = 3,164, 122,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=11 */
%   | | | else return 0.31390114748888853;  // std dev = 10,588, 452,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=206 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.217687
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 12.206 seconds
Total inference time: 2.122 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 06:50:46
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.122, 'Precision': [nan, 0.5], 'Learning time': 12.206, 'AUC PR': 0.097917, 'CLL': -0.217687, 'AUC ROC': 0.821572}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.07806235501292735;  // std dev = 14,076, 1.155,000 (wgt'ed) examples reached here.  /* #neg=901 #pos=254 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.06621701393988225;  // std dev = 14,095, 1.166,000 (wgt'ed) examples reached here.  /* #neg=912 #pos=254 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,14e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.060724504808620454;  // std dev = 14,066, 1.149,000 (wgt'ed) examples reached here.  /* #neg=895 #pos=254 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 3,15e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.05569948783291315;  // std dev = 14,036, 1.132,000 (wgt'ed) examples reached here.  /* #neg=878 #pos=254 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,95e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.04656104790470568;  // std dev = 14,047, 1.138,000 (wgt'ed) examples reached here.  /* #neg=884 #pos=254 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949106;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.03659250089802784;  // std dev = 14,075, 1.154,000 (wgt'ed) examples reached here.  /* #neg=900 #pos=254 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 2,92e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.04080631486994762;  // std dev = 13,986, 1.105,000 (wgt'ed) examples reached here.  /* #neg=851 #pos=254 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452776;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.02780492276404968;  // std dev = 14,047, 1.138,000 (wgt'ed) examples reached here.  /* #neg=884 #pos=254 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.02698363931717576;  // std dev = 14,014, 1.120,000 (wgt'ed) examples reached here.  /* #neg=866 #pos=254 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,03e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else return 0.011468476586614913;  // std dev = 14,115, 1.178,000 (wgt'ed) examples reached here.  /* #neg=924 #pos=254 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.25022
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 3.724 seconds
Total inference time: 2.227 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.715247
   AUC PR    = 0.464394
   CLL	      = -0.247557
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.430493
   F1        = 0.601881


Total scoring time: 3.835 seconds
Parameter learned model CLL: -0.247557


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 192], 'false': [14.076, 901, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 192], 'false': [14.095, 912, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.14e-07, 0, 192], 'false': [14.066, 895, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.15e-07, 0, 192], 'false': [14.036, 878, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.95e-07, 0, 192], 'false': [14.047, 884, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 192], 'false': [14.075, 900, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 192], 'false': [13.986, 851, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 192], 'false': [14.047, 884, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 192], 'false': [14.014, 866, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 192], 'false': [14.115, 924, 254]}]]
[{'': [6.069219201284189e-15, 0.17155150765540508]}, {'': [-3.552713678800501e-15, 0.17038503746811667]}, {'': [1.96139401017111e-15, 0.17219347659939452]}, {'': [5.181040781584064e-16, 0.17403451160584665]}, {'': [8.141635513917814e-16, 0.17338098165003732]}, {'': [-3.515706244646329e-16, 0.17165822142258189]}, {'': [4.440892098500626e-16, 0.17702667840544603]}, {'': [-1.3415194880887307e-16, 0.1733809816500403]}, {'': [-2.7292982688701767e-16, 0.17535395408163332]}, {'': [5.551115123125783e-17, 0.16912784178529996]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.43222300917358375;  // std dev = 0,494, 162,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=93 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05435106490048776;  // std dev = 4,377, 240,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=21 */
%   | | | else return 0.08579121152227291;  // std dev = 10,399, 615,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=140 */
%   | else return -0.1418510649004877;  // std dev = 5,58e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.35390698309584223;  // std dev = 0,497, 167,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=93 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05068542170982696;  // std dev = 4,384, 248,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=21 */
%   | | | else return 0.06960360912516078;  // std dev = 10,435, 630,000 (wgt'ed) examples reached here.  /* #neg=490 #pos=140 */
%   | else return -0.12544463852839108;  // std dev = 7,45e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,14e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.32613352056693573;  // std dev = 0,491, 157,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=93 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0560896883873477;  // std dev = 4,115, 187,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=19 */
%   | | | else return 0.04980675388678965;  // std dev = 10,574, 710,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=142 */
%   | else return -0.11231637819360624;  // std dev = 7,30e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 3,15e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.22234943557966938;  // std dev = 0,497, 167,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=93 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.04221626116091436;  // std dev = 4,103, 173,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=19 */
%   | | | else return 0.05760346694786387;  // std dev = 10,479, 661,000 (wgt'ed) examples reached here.  /* #neg=519 #pos=142 */
%   | else return -0.10159632948783662;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,95e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.184843501101429;  // std dev = 0,495, 163,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=93 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0433096525562991;  // std dev = 4,119, 183,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=19 */
%   | | | else return 0.04252996010326391;  // std dev = 10,528, 683,000 (wgt'ed) examples reached here.  /* #neg=541 #pos=142 */
%   | else return -0.09269127618926096;  // std dev = 4,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949106;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.22002912789073656;  // std dev = 0,477, 143,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=93 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06617681593226996;  // std dev = 4,391, 263,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=21 */
%   | | | else return 0.040279081706464444;  // std dev = 10,436, 658,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=140 */
%   | else return -0.08518475138839678;  // std dev = 3,94e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.209757715632535;  // std dev = 2,92e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11127783675153449;  // std dev = 0,491, 156,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=93 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05947121398968034;  // std dev = 4,392, 271,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=21 */
%   | | | else return 0.03780357881082014;  // std dev = 10,416, 646,000 (wgt'ed) examples reached here.  /* #neg=506 #pos=140 */
%   | else return -0.07877675473109158;  // std dev = 5,77e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452776;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.07591946597532741;  // std dev = 6,185, 158,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=93 */
%   | | | else return -0.05531199004574063;  // std dev = 4,400, 279,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=21 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.041640660126465556;  // std dev = 4,108, 170,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=19 */
%   | | | else return 0.07855773174867672;  // std dev = 9,374, 442,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=121 */
%   | else return -0.07324622576333709;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1279460359534378;  // std dev = 0,474, 141,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=93 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04839906296672133;  // std dev = 4,398, 277,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=21 */
%   | | | else return 0.013840540733510282;  // std dev = 10,466, 679,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=140 */
%   | else return -0.06842697784420265;  // std dev = 4,47e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,03e-07, 192,000 (wgt'ed) examples reached here.  /* #pos=192 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04307005094333204;  // std dev = 7,034, 352,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=103 */
%   | | | else return 0.3564704446888708;  // std dev = 2,096, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.0303274502645962;  // std dev = 4,370, 232,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=21 */
%   | | | else return 0.03681575921482006;  // std dev = 9,546, 490,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=121 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.254472
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 69.896 seconds
Total inference time: 3.921 seconds
AUC ROC: 0.899184


Results scoring model
   AUC ROC   = 0.864921
   AUC PR    = 0.522194
   CLL	      = -0.23133
   Precision = 0.169139 at threshold = 0.5
   Recall    = 0.639013
   F1        = 0.26748


Total scoring time: 8.259 seconds
Refined model CLL: -0.23133


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.254472
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 85.714 seconds
Total inference time: 3.921 seconds
AUC ROC: 0.899184
Total revision time: 85.714
Best scored revision CLL: -0.23133


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:52:19
{'F1': 0.277457, 'Inference time': 3.921, 'Precision': [0.173913, 0.5], 'AUC ROC': 0.899184, 'parameter_0.8': {'F1': 0.640777, 'Inference time': 2.227, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 3.724, 'CLL': -0.25022}, 'AUC PR': 0.571454, 'Recall': 0.685714, 'Learning time': 85.714, 'CLL': -0.254472}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4977885747391486;  // std dev = 0,480, 222,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=142 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09443727179703967;  // std dev = 3,237, 232,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=11 */
%   | | | else return 0.12841920536978263;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02310106490048767;  // std dev = 4,092, 160,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=19 */
%   | | | else return 0.29235946141529723;  // std dev = 12,222, 608,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=264 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.49239249404460933;  // std dev = 0,456, 194,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=137 */
%   | | else return 0.7862069270343008;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08004811763467871;  // std dev = 3,231, 217,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=11 */
%   | | | else return 0.13590411538780706;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.017267313872175165;  // std dev = 4,085, 156,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=19 */
%   | | | else return 0.28024973305793416;  // std dev = 11,923, 572,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=264 */
%   else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3389691395879583;  // std dev = 0,476, 219,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=142 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07645338179838918;  // std dev = 3,240, 242,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=11 */
%   | | | else return 0.1561686957978731;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else return 0.16048697894226646;  // std dev = 0,474, 769,000 (wgt'ed) examples reached here.  /* #neg=486 #pos=283 */
%   else return -0.11231637819360621;  // std dev = 7,45e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.30750406286021276;  // std dev = 0,462, 198,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=137 */
%   | | else return 0.5441436058706112;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07013285683845635;  // std dev = 3,243, 251,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=11 */
%   | | | else return 0.13224530194346004;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else return 0.13914272276195544;  // std dev = 0,475, 756,000 (wgt'ed) examples reached here.  /* #neg=473 #pos=283 */
%   else return -0.10159632948783631;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.26179850616890527;  // std dev = 0,448, 190,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=137 */
%   | | else return 0.4092399553501558;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.12123603317053606;  // std dev = 3,082, 179,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=10 */
%   | | | else return 0.3990775205136648;  // std dev = 1,927, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.023164088243292046;  // std dev = 4,166, 224,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=21 */
%   | | | else return 0.16483815881000347;  // std dev = 12,069, 589,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=264 */
%   else return -0.09269127618926094;  // std dev = 5,37e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.47540666760182954;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.5245933323981705;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.15285031460104445;  // std dev = 0,464, 204,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=139 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09740691137735233;  // std dev = 3,067, 163,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=10 */
%   | | | else return 0.37003796717344467;  // std dev = 1,843, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.019159048383233766;  // std dev = 4,162, 221,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=21 */
%   | | | else return 0.12494102025330521;  // std dev = 12,127, 596,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=264 */
%   else return -0.08518475138839682;  // std dev = 5,77e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12926732770023577;  // std dev = 0,450, 206,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=142 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08111880850120597;  // std dev = 3,059, 155,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=10 */
%   | | | else return 0.2601940840100008;  // std dev = 1,926, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.013629189074941294;  // std dev = 4,167, 207,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=21 */
%   | | | else return 0.08922299449078934;  // std dev = 12,214, 607,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=264 */
%   else return -0.07877675473109158;  // std dev = 5,96e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.049701848948098204;  // std dev = 6,954, 213,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=137 */
%   | | | else return -0.07426947569663461;  // std dev = 3,062, 165,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=10 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.2576027428742711;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2498558208763957;  // std dev = 1,787, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.04945185092300441;  // std dev = 3,229, 210,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=11 */
%   | | | else return 0.28637556624926835;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0.09700550017968891;  // std dev = 0,499, 570,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=264 */
%   else return -0.07324622576333707;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.04629710731571643;  // std dev = 0,469, 217,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=142 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07663748145018187;  // std dev = 3,085, 191,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=10 */
%   | | | else return 0.20963751347655032;  // std dev = 1,690, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.045511227060178155;  // std dev = 3,229, 212,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=11 */
%   | | | else return 0.21054698004123554;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else return 0.0348120659573403;  // std dev = 0,494, 623,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=264 */
%   else return -0.06842697784420264;  // std dev = 5,27e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.05076711506812733;  // std dev = 0,463, 212,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=142 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.04963626986483398;  // std dev = 3,266, 244,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=11 */
%   | | | else return 0.03268366579120022;  // std dev = 2,532, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.013225286053420798;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.05412980797557126;  // std dev = 3,506, 152,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=17 */
%   | | else return 0.04945162161649812;  // std dev = 0,497, 591,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=264 */
%   else return -0.06419184008202626;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 0.827376
   AUC PR    = 0.148647
   CLL	      = -0.351682
   Precision = 0.151961 at threshold = 0.5
   Recall    = 0.442857
   F1        = 0.226277


Total learning time: 160.36599999999999 seconds
Total inference time: 4.591 seconds
AUC ROC: 0.827376


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 06:55:04
{'F1': 0.226277, 'Recall': 0.442857, 'Inference time': 4.591, 'Precision': [0.151961, 0.5], 'Learning time': 160.36599999999999, 'AUC PR': 0.148647, 'CLL': -0.351682, 'AUC ROC': 0.827376}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.5634120929942461;  // std dev = 6,284, 190,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=134 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0950425542621901;  // std dev = 3,238, 235,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=11 */
%   | | | else return 0.16117923812981538;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.028755826805249574;  // std dev = 4,105, 168,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=19 */
%   | | | else return 0.28602575843824357;  // std dev = 12,290, 617,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=264 */
%   else return -0.14185106490048763;  // std dev = 8,56e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */


Results
   AUC ROC   = 0.827416
   AUC PR    = 0.150916
   CLL	      = -0.214515
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 17.948 seconds
Total inference time: 2.288 seconds
AUC ROC: 0.827416


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 06:55:25
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.288, 'Precision': [nan, 0.5], 'Learning time': 17.948, 'AUC PR': 0.150916, 'CLL': -0.214515, 'AUC ROC': 0.827416}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.07789858739436135;  // std dev = 15,702, 1.438,000 (wgt'ed) examples reached here.  /* #neg=1.122 #pos=316 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.06984290153005786;  // std dev = 15,685, 1.427,000 (wgt'ed) examples reached here.  /* #neg=1.111 #pos=316 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.06555709258259224;  // std dev = 15,636, 1.396,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=316 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.05732620397969435;  // std dev = 15,627, 1.391,000 (wgt'ed) examples reached here.  /* #neg=1.075 #pos=316 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.048763410605420755;  // std dev = 15,631, 1.393,000 (wgt'ed) examples reached here.  /* #neg=1.077 #pos=316 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.036419358253083546;  // std dev = 15,682, 1.425,000 (wgt'ed) examples reached here.  /* #neg=1.109 #pos=316 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.03305767833279903;  // std dev = 15,660, 1.411,000 (wgt'ed) examples reached here.  /* #neg=1.095 #pos=316 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.0275825149255774;  // std dev = 15,663, 1.413,000 (wgt'ed) examples reached here.  /* #neg=1.097 #pos=316 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.016444909898872727;  // std dev = 15,731, 1.457,000 (wgt'ed) examples reached here.  /* #neg=1.141 #pos=316 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else return 0.021503728255367328;  // std dev = 15,653, 1.407,000 (wgt'ed) examples reached here.  /* #neg=1.091 #pos=316 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.250873
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 4.423 seconds
Total inference time: 2.351 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.716846
   AUC PR    = 0.467514
   CLL	      = -0.248127
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.605


Total scoring time: 4.478 seconds
Parameter learned model CLL: -0.248127


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 242], 'false': [15.702, 1122, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.685, 1111, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.92e-07, 0, 242], 'false': [15.636, 1080, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.627, 1075, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.67e-07, 0, 242], 'false': [15.631, 1077, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.04e-07, 0, 242], 'false': [15.682, 1109, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 242], 'false': [15.66, 1095, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.23e-07, 0, 242], 'false': [15.663, 1097, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 242], 'false': [15.731, 1141, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 242], 'false': [15.653, 1091, 316]}]]
[{'': [4.8152482919279514e-15, 0.17145974261114577]}, {'': [-4.2280228904733235e-15, 0.172406325304011]}, {'': [9.98283182472868e-16, 0.17512171492843873]}, {'': [-2.055288905091199e-16, 0.17556635265942422]}, {'': [2.9361270072731413e-16, 0.17538827353875963]}, {'': [3.8169651094550837e-16, 0.17257937827024364]}, {'': [3.5233524087277696e-16, 0.17379896038064238]}, {'': [6.239269890455425e-17, 0.17362385171761377]}, {'': [-1.7249746167729704e-16, 0.1698453352075412]}, {'': [2.9361270072731413e-17, 0.17415006397599145]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.46954789883007925;  // std dev = 0,487, 193,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06323471269923017;  // std dev = 4,799, 318,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=25 */
%   | | | else return 0.08022852431645253;  // std dev = 11,601, 779,000 (wgt'ed) examples reached here.  /* #neg=606 #pos=173 */
%   | else return -0.1418510649004877;  // std dev = 5,16e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.4119680393672122;  // std dev = 6,687, 190,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=118 */
%   | | | else return -0.04150240845082845;  // std dev = 4,713, 229,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=25 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05763934860762854;  // std dev = 4,804, 326,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=25 */
%   | | | else return 0.10459853207568931;  // std dev = 10,490, 577,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=148 */
%   | else return -0.1254446385283911;  // std dev = 8,16e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.28478143135647815;  // std dev = 7,123, 207,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=118 */
%   | | | else return -0.031753950078130394;  // std dev = 4,701, 220,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=25 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.045796915717767714;  // std dev = 4,791, 305,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=25 */
%   | | | else return 0.101276357899589;  // std dev = 10,415, 554,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=148 */
%   | else return -0.11231637819360621;  // std dev = 8,82e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.25536936401501426;  // std dev = 6,853, 196,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=118 */
%   | | | else return -0.04206414243813922;  // std dev = 4,795, 309,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=25 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.027494529929591487;  // std dev = 4,703, 217,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=25 */
%   | | | else return 0.08066089054882662;  // std dev = 10,458, 567,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=148 */
%   | else return -0.10159632948783637;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.20805437758364698;  // std dev = 0,487, 192,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.042040720974095475;  // std dev = 4,806, 327,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=25 */
%   | | | else return 0.0451579962506797;  // std dev = 11,507, 776,000 (wgt'ed) examples reached here.  /* #neg=603 #pos=173 */
%   | else return -0.09269127618926078;  // std dev = 7,88e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,04e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.4575328391592005;  // std dev = 3,65e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.17348320362154893;  // std dev = 6,598, 187,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03579741939657648;  // std dev = 4,801, 319,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=25 */
%   | | | else return 0.04564475363492526;  // std dev = 11,458, 748,000 (wgt'ed) examples reached here.  /* #neg=575 #pos=173 */
%   | else return -0.0851847513883968;  // std dev = 6,05e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08854410891843402;  // std dev = 0,490, 201,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=118 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.036803940557790446;  // std dev = 4,813, 339,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=25 */
%   | | | else return 0.031914988871406355;  // std dev = 11,498, 776,000 (wgt'ed) examples reached here.  /* #neg=603 #pos=173 */
%   | else return -0.07877675473109157;  // std dev = 6,66e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,23e-07, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06216673059752093;  // std dev = 0,489, 203,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=118 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.046685492344541224;  // std dev = 4,717, 238,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=25 */
%   | | | else return 0.022361277787670938;  // std dev = 11,548, 879,000 (wgt'ed) examples reached here.  /* #neg=706 #pos=173 */
%   | else return -0.07324622576333711;  // std dev = 4,21e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.026129650197132908;  // std dev = 8,150, 520,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=133 */
%   | | | else return 0.16950254345850993;  // std dev = 2,685, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02619448413281;  // std dev = 4,684, 204,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=25 */
%   | | | else return 0.036394751455711055;  // std dev = 10,518, 586,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=148 */
%   | else return -0.06842697784420265;  // std dev = 5,27e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 8,43e-08, 242,000 (wgt'ed) examples reached here.  /* #pos=242 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06797382233805989;  // std dev = 0,487, 198,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=118 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.04196105816468644;  // std dev = 4,731, 246,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=25 */
%   | | | else return 0.015236934467968869;  // std dev = 11,528, 878,000 (wgt'ed) examples reached here.  /* #neg=705 #pos=173 */
%   | else return -0.06419184008202626;  // std dev = 3,80e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */


Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.246259
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 88.874 seconds
Total inference time: 3.788 seconds
AUC ROC: 0.900324


Results scoring model
   AUC ROC   = 0.867828
   AUC PR    = 0.529315
   CLL	      = -0.229789
   Precision = 0.181178 at threshold = 0.5
   Recall    = 0.645161
   F1        = 0.282908


Total scoring time: 12.117 seconds
Refined model CLL: -0.229789


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900324
   AUC PR    = 0.576646
   CLL	      = -0.246259
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total learning time: 109.892 seconds
Total inference time: 3.788 seconds
AUC ROC: 0.900324
Total revision time: 109.892
Best scored revision CLL: -0.229789


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:57:22
{'parameter_1.0': {'F1': 0.640777, 'Inference time': 2.351, 'Precision': [1.0, 0.5], 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'Learning time': 4.423, 'CLL': -0.250873}, 'F1': 0.318339, 'Inference time': 3.788, 'Precision': [0.210046, 0.5], 'AUC ROC': 0.900324, 'AUC PR': 0.576646, 'Recall': 0.657143, 'Learning time': 109.892, 'CLL': -0.246259}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5431306200811936;  // std dev = 0,465, 273,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09100360727336944;  // std dev = 3,773, 295,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=15 */
%   | | | else return 0.16117923812981538;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0.22662603840089202;  // std dev = 0,482, 939,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=346 */
%   else return -0.1418510649004878;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.45114858874072983;  // std dev = 0,469, 278,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08211047328079406;  // std dev = 3,777, 306,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=15 */
%   | | | else return 0.18220200062307576;  // std dev = 2,560, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06927692224236522;  // std dev = 4,737, 244,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=25 */
%   | | | else return 0.25683548993562033;  // std dev = 13,544, 749,000 (wgt'ed) examples reached here.  /* #neg=428 #pos=321 */
%   else return -0.12544463852839105;  // std dev = 8,16e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.38895807601782867;  // std dev = 0,459, 268,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06923789562807371;  // std dev = 3,769, 284,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=15 */
%   | | | else return 0.10513262536336321;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05340902687231238;  // std dev = 4,720, 230,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=25 */
%   | | | else return 0.2189001280869804;  // std dev = 13,523, 746,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=321 */
%   else return -0.11231637819360621;  // std dev = 8,16e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.6027083371129554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.39729166288704476;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.3271177859318548;  // std dev = 0,447, 254,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=184 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0600829300196411;  // std dev = 3,765, 274,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=15 */
%   | | | else return 0.12770582035945152;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04030166518640907;  // std dev = 4,705, 218,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=25 */
%   | | | else return 0.19196610116534513;  // std dev = 13,382, 726,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=321 */
%   else return -0.10159632948783634;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.18962448052448092;  // std dev = 0,466, 282,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0558568527956588;  // std dev = 3,769, 283,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=15 */
%   | | | else return 0.14309850080659386;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.046895013483400756;  // std dev = 4,736, 243,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=25 */
%   | | | else return 0.14356536687270074;  // std dev = 13,509, 744,000 (wgt'ed) examples reached here.  /* #neg=423 #pos=321 */
%   else return -0.09269127618926089;  // std dev = 6,58e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.4071957772271671;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.34877461204623367;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.16936553458198308;  // std dev = 0,461, 265,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=184 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.047956223759513764;  // std dev = 2,060, 33,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return -0.05088689538308541;  // std dev = 4,121, 283,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=20 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03179385358117424;  // std dev = 4,711, 223,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=25 */
%   | | | else return 0.12153701178900486;  // std dev = 13,411, 730,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=321 */
%   else return -0.08518475138839682;  // std dev = 5,58e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05106474279431711;  // std dev = 0,430, 1.563,000 (wgt'ed) examples reached here.  /* #neg=1.005 #pos=558 */
%   else return -0.07877675473109153;  // std dev = 7,67e-08, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.009156806093268207;  // std dev = 0,719, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12286594904741593;  // std dev = 0,457, 262,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=184 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.052362538870912655;  // std dev = 3,763, 286,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=15 */
%   | | | else return 0.023835128678210717;  // std dev = 2,689, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.03853324073227034;  // std dev = 4,723, 232,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=25 */
%   | | | else return 0.07068168261653203;  // std dev = 13,557, 751,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=321 */
%   else return -0.0732462257633372;  // std dev = 2,58e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.062462243594349535;  // std dev = 0,465, 280,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=187 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05339581841482002;  // std dev = 3,775, 322,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=15 */
%   | | | else return 0.027767727279041438;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05821137909255304;  // std dev = 3,708, 180,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=15 */
%   | | | else return 0.33464576376459;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else return 0.07457135048441198;  // std dev = 0,497, 717,000 (wgt'ed) examples reached here.  /* #neg=396 #pos=321 */
%   else return -0.06842697784420264;  // std dev = 5,48e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10720120066427846;  // std dev = 0,435, 259,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.09004959347909687;  // std dev = 1,551, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.04238417357435162;  // std dev = 4,330, 308,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=22 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03249162980106864;  // std dev = 4,642, 235,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=25 */
%   | | | else return 0.05387008840713748;  // std dev = 13,352, 722,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=321 */
%   else return -0.06419184008202626;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 0.834906
   AUC PR    = 0.151364
   CLL	      = -0.351086
   Precision = 0.151961 at threshold = 0.5
   Recall    = 0.442857
   F1        = 0.226277


Total learning time: 185.75 seconds
Total inference time: 5.713 seconds
AUC ROC: 0.834906


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 07:00:34
{'F1': 0.226277, 'Recall': 0.442857, 'Inference time': 5.713, 'Precision': [0.151961, 0.5], 'Learning time': 185.75, 'AUC PR': 0.151364, 'CLL': -0.351086, 'AUC ROC': 0.834906}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5585234669347147;  // std dev = 0,458, 267,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=187 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08827963632905944;  // std dev = 3,768, 280,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=15 */
%   | | | else return 0.16117923812981538;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.029743441582102337;  // std dev = 4,711, 223,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=25 */
%   | | | else return 0.2931082846930036;  // std dev = 13,468, 738,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=321 */
%   else return -0.14185106490048788;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.217856
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.48 seconds
Total inference time: 1.708 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 07:00:56
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.708, 'Precision': [nan, 0.5], 'Learning time': 20.48, 'AUC PR': 0.097917, 'CLL': -0.217856, 'AUC ROC': 0.821572}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 585
Target train neg examples: 24169

Target test facts examples: 9306
Target test pos	 examples: 113
Target test neg examples: 3827

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return 0.05680213375271122;  // std dev = 6,876, 297,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=59 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return 0.05245798626372165;  // std dev = 6,864, 293,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=59 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return 0.05731782640386451;  // std dev = 6,814, 277,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=59 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return 0.03938702757600224;  // std dev = 6,858, 291,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=59 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return 0.039663611223684433;  // std dev = 6,834, 283,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=59 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return 0.026909391166219526;  // std dev = 6,864, 293,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=59 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return 0.016998912870809384;  // std dev = 6,890, 302,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=59 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return 0.011940287210447374;  // std dev = 6,901, 306,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=59 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return 0.014020723869652526;  // std dev = 6,885, 300,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=59 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return 0.017306427934228534;  // std dev = 6,861, 292,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=59 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.230309
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 2.18 seconds
Total inference time: 1.927 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.747863
   AUC PR    = 0.528955
   CLL	      = -0.224022
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.495726
   F1        = 0.662857


Total scoring time: 2.349 seconds
Parameter learned model CLL: -0.224022


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 58], 'false': [6.876, 238, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 58], 'false': [6.864, 234, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.19e-07, 0, 58], 'false': [6.814, 218, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 58], 'false': [6.858, 232, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 58], 'false': [6.834, 224, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 58], 'false': [6.864, 234, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 58], 'false': [6.89, 243, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 58], 'false': [6.901, 247, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 58], 'false': [6.885, 241, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.94e-08, 0, 58], 'false': [6.861, 233, 59]}]]
[{'': [-3.675221047035001e-16, 0.15919010531805233]}, {'': [-1.2250736823450003e-16, 0.16081724889049404]}, {'': [2.4501473646900006e-16, 0.1676289277848022]}, {'': [-3.3689526264487507e-16, 0.1616419267604285]}, {'': [-1.5313421029312505e-16, 0.16501641923360205]}, {'': [-3.062684205862501e-17, 0.1608172488904916]}, {'': [-2.2970131543968756e-17, 0.1571970527608413]}, {'': [-3.062684205862501e-17, 0.15563458498867955]}, {'': [0.0, 0.15798888888888685]}, {'': [2.6798486801296883e-17, 0.16122865453180915]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3581489350995117;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return -0.08629550934493217;  // std dev = 1,683, 54,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.10185106490048769;  // std dev = 1,697, 75,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | | else return 0.1162134512285433;  // std dev = 4,873, 124,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=32 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.008741135785635113;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3492816763261753;  // std dev = 3,031, 37,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0800170015401951;  // std dev = 1,688, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | | | else return 0.05925525837382012;  // std dev = 5,234, 167,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=35 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.30611683782471844;  // std dev = 0,495, 38,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0735536725372613;  // std dev = 1,690, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | | else return 0.0853330395611941;  // std dev = 5,117, 144,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=35 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.13360533094190677;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.19988963017961764;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06737606953915198;  // std dev = 1,692, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   | | | else return 0.03636254493679302;  // std dev = 5,243, 170,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=35 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2722719826665149;  // std dev = 0,480, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09653244982901092;  // std dev = 1,681, 54,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=3 */
%   | | | else return 0.02666954862716582;  // std dev = 5,236, 194,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=35 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.06209056945593291;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18399288943167535;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08031620735088964;  // std dev = 1,677, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | | | else return 0.029998653915838225;  // std dev = 5,219, 184,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=35 */
%   | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.09483284584167098;  // std dev = 0,498, 38,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.11243269232307583;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06477789550812735;  // std dev = 1,689, 69,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.20119618639804746;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.11130381360195248;  // std dev = 0,990, 48,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.09769619645649227;  // std dev = 4,772, 111,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.04854139175330388;  // std dev = 0,485, 41,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05848832346098589;  // std dev = 1,689, 67,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=3 */
%   | | | else return -0.09688549173538409;  // std dev = 0,025, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09467992076330516;  // std dev = 0,958, 42,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | | | else return 0.28750437989095134;  // std dev = 1,049, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05404219483614853;  // std dev = 4,866, 123,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=32 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then return -0.174836909429108;  // std dev = 0,368, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(B, D) )
%   | | | then return -0.034384291961482495;  // std dev = 3,372, 46,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return -0.05490896676922601;  // std dev = 1,690, 71,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.1017172488835836;  // std dev = 1,190, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.09123046117406282;  // std dev = 0,956, 46,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.09258822652310367;  // std dev = 4,707, 104,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.4596477713931055;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13405180002395717;  // std dev = 2,830, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05897345370427964;  // std dev = 1,586, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | | else return 0.021719899793353356;  // std dev = 5,087, 175,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=35 */
%   | else return -0.06691437890798792;  // std dev = 0,035, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.90299
   AUC PR    = 0.551053
   CLL	      = -0.207134
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 27.198 seconds
Total inference time: 3.165 seconds
AUC ROC: 0.90299


Results scoring model
   AUC ROC   = 0.890374
   AUC PR    = 0.581361
   CLL	      = -0.224885
   Precision = 0.186158 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.291045


Total scoring time: 6.411 seconds
Refined model CLL: -0.224885


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.230309
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 38.138 seconds
Total inference time: 1.927 seconds
AUC ROC: 0.716814
Total revision time: 38.138
Best scored revision CLL: -0.224022


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:01:41
{'parameter_0.2': {'F1': 0.604938, 'Inference time': 1.927, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 2.18, 'CLL': -0.230309}, 'F1': 0.604938, 'Inference time': 1.927, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 38.138, 'CLL': -0.230309}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.48718119316402797;  // std dev = 0,483, 62,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.08524729131558208;  // std dev = 1,682, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.225795993923043;  // std dev = 0,482, 204,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=75 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.45465112864757024;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.460711734708177;  // std dev = 0,469, 55,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.12967309324753798;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08136447513519658;  // std dev = 1,687, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.10778811579750508;  // std dev = 1,676, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | | | else return 0.29289822600071197;  // std dev = 6,209, 155,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=72 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.31042360973479804;  // std dev = 0,488, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1324416153725162;  // std dev = 0,988, 41,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
%   | | | else return 0.35168778495815645;  // std dev = 0,983, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.07799682266484069;  // std dev = 1,692, 68,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */
%   | | | else return 0.19885693819983677;  // std dev = 6,483, 173,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=72 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3545043966000999;  // std dev = 0,448, 54,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.074504458722901;  // std dev = 1,699, 73,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=3 */
%   | | | else return -0.1082118671833031;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07360354372576798;  // std dev = 1,598, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | | | else return 0.160750227581722;  // std dev = 6,497, 174,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=72 */
%   else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.05183985347646949;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.24477182585398083;  // std dev = 0,459, 53,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=37 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.10182221006487475;  // std dev = 0,008, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.05458363761211878;  // std dev = 1,685, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.07672668362688162;  // std dev = 1,614, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | | else return 0.15441247385582096;  // std dev = 6,355, 164,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=72 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2547445677525731;  // std dev = 0,424, 51,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=39 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.09123802823387739;  // std dev = 0,009, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.04156732090838178;  // std dev = 1,678, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05263084070352984;  // std dev = 1,601, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | | else return 0.16615501575339617;  // std dev = 6,100, 149,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=72 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.06680920720024117;  // std dev = 0,479, 61,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=39 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.047024739908004216;  // std dev = 1,688, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | | else return -0.08826729825209255;  // std dev = 0,015, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0917476167422628;  // std dev = 0,987, 39,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
%   | | | else return 0.4891502463362996;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.06210001816953783;  // std dev = 0,493, 173,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=72 */
%   else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.185775916910376;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.1178712204619201;  // std dev = 0,453, 52,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=37 */
%   | else if ( haswordvenue(F, C) )
%   | | then if ( title(G, A), venue(G, F) )
%   | | | then return 0.034645746174385046;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.10623983965998247;  // std dev = 0,055, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0.1396432479178372;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), title(J, B) )
%   | | then return -0.08260206551999154;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(K, I), title(K, A) )
%   | | | then return -0.08896908273045337;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.031134613747637357;  // std dev = 1,675, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | else return 0.03939786228280927;  // std dev = 0,489, 178,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=72 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.1069790492426786;  // std dev = 3,133, 52,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=37 */
%   | | | else return -0.07574127557200705;  // std dev = 0,976, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | else return 0.5823188089469487;  // std dev = 0,280, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.03908208440212603;  // std dev = 1,685, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | | else return -0.07988251714450441;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.04840864132356278;  // std dev = 0,494, 169,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=72 */
%   else return -0.07401390546882981;  // std dev = 0,011, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, A) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then return 0.544341069076866;  // std dev = 0,431, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.04951836428586252;  // std dev = 0,247, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordtitle(A, C) )
%   | | then if ( author(G, D), title(G, B) )
%   | | | then return -0.29941934574981677;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.024587547331577524;  // std dev = 3,374, 52,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=35 */
%   | | else return -0.08740402042555823;  // std dev = 0,109, 49,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.03914910630719898;  // std dev = 0,206, 67,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=3 */
%   | else if ( haswordtitle(B, J), haswordvenue(K, J) )
%   | | then if ( title(L, A), venue(L, K) )
%   | | | then return 0.110930354783214;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.3306201487631676;  // std dev = 0,997, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.15046557230699287;  // std dev = 0,276, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.824698
   AUC PR    = 0.098512
   CLL	      = -0.375368
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 80.89099999999999 seconds
Total inference time: 4.248 seconds
AUC ROC: 0.824698


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 07:03:06
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 4.248, 'Precision': [0.119186, 0.5], 'Learning time': 80.89099999999999, 'AUC PR': 0.098512, 'CLL': -0.375368, 'AUC ROC': 0.824698}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5433341202846964;  // std dev = 0,464, 54,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=37 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09267073703163525;  // std dev = 1,689, 61,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=3 */
%   | | else return 0.1759455452690052;  // std dev = 0,466, 236,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=75 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.797458
   AUC PR    = 0.087811
   CLL	      = -0.207069
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.09 seconds
Total inference time: 1.935 seconds
AUC ROC: 0.797458


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 07:03:16
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.935, 'Precision': [nan, 0.5], 'Learning time': 8.09, 'AUC PR': 0.087811, 'CLL': -0.207069, 'AUC ROC': 0.797458}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.07980714152928926;  // std dev = 10,098, 591,000 (wgt'ed) examples reached here.  /* #neg=460 #pos=131 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.061161806145441214;  // std dev = 10,154, 615,000 (wgt'ed) examples reached here.  /* #neg=484 #pos=131 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.05807794039264052;  // std dev = 10,122, 601,000 (wgt'ed) examples reached here.  /* #neg=470 #pos=131 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.0640099606001043;  // std dev = 10,031, 565,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=131 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.03919152706538055;  // std dev = 10,133, 606,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=131 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.034846872882699546;  // std dev = 10,124, 602,000 (wgt'ed) examples reached here.  /* #neg=471 #pos=131 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.048866239539198664;  // std dev = 9,998, 553,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=131 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.020573758802434144;  // std dev = 10,133, 606,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=131 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.01803221243218483;  // std dev = 10,129, 604,000 (wgt'ed) examples reached here.  /* #neg=473 #pos=131 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.011959543914639704;  // std dev = 10,149, 613,000 (wgt'ed) examples reached here.  /* #neg=482 #pos=131 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.248644
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 2.75 seconds
Total inference time: 1.663 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.720085
   AUC PR    = 0.47441
   CLL	      = -0.244741
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.440171
   F1        = 0.611276


Total scoring time: 3.098 seconds
Parameter learned model CLL: -0.244741


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.46e-07, 0, 103], 'false': [10.098, 460, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 103], 'false': [10.154, 484, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.3e-07, 0, 103], 'false': [10.122, 470, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.6e-07, 0, 103], 'false': [10.031, 434, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 103], 'false': [10.133, 475, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 103], 'false': [10.124, 471, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 103], 'false': [9.998, 422, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 103], 'false': [10.133, 475, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 103], 'false': [10.129, 473, 131]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.83e-08, 0, 103], 'false': [10.149, 482, 131]}]]
[{'': [1.9315724855614373e-15, 0.17252584595211473]}, {'': [-3.4492365813597096e-16, 0.16763566660057042]}, {'': [1.793603022307049e-15, 0.17045910725606628]}, {'': [6.553549504583448e-16, 0.17810008614613598]}, {'': [-2.4144656069517967e-16, 0.16944144909540879]}, {'': [-5.1738548720395646e-17, 0.1702547433251244]}, {'': [2.0695419488158259e-16, 0.18077296613245528]}, {'': [2.5869274360197823e-17, 0.16944144909540376]}, {'': [-1.2503482607428947e-16, 0.169847265470809]}, {'': [4.527123013034619e-17, 0.1680340847701691]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.058148935099512175;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.4922952765629276;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=52 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08524729131558201;  // std dev = 2,379, 106,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=6 */
%   | | | else return 0.17064893509951234;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.09837280403092244;  // std dev = 2,396, 138,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=6 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.13464663095204796;  // std dev = 6,589, 217,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=60 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3249403647843588;  // std dev = 0,498, 101,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=54 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0838621435307363;  // std dev = 2,393, 128,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=6 */
%   | | | else return 0.07814264188416552;  // std dev = 7,342, 310,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=71 */
%   | else return -0.13111486539949133;  // std dev = 0,062, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.05485365476815618;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.311926043951163;  // std dev = 4,650, 89,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=52 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06974329501140485;  // std dev = 2,386, 117,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=6 */
%   | | | else return 0.05226990221720761;  // std dev = 7,419, 331,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=71 */
%   | else return -0.1173871477475328;  // std dev = 0,055, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.26766431187259576;  // std dev = 0,489, 90,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=54 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08666813586181017;  // std dev = 2,373, 102,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=6 */
%   | | | else return 0.1409903155126254;  // std dev = 1,826, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07507826955213144;  // std dev = 2,191, 133,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=5 */
%   | | | else return 0.03032293119988703;  // std dev = 0,924, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.040119370454318466;  // std dev = 6,852, 276,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=60 */
%   | | | else return -0.10062013700426899;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.24943848468573004;  // std dev = 4,382, 84,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=54 */
%   | | | else return -0.039592771985856506;  // std dev = 3,053, 109,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=11 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06259975853182193;  // std dev = 2,391, 136,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=6 */
%   | | | else return 0.06680084393777716;  // std dev = 6,708, 240,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=60 */
%   | else return -0.10060193737287763;  // std dev = 0,093, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11764474079495124;  // std dev = 0,486, 96,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=54 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05631243222927511;  // std dev = 2,391, 134,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=6 */
%   | | | else return 0.02990434250518572;  // std dev = 7,416, 341,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=71 */
%   | else return -0.09190876475595024;  // std dev = 0,084, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.007547918513442109;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1509970237350728;  // std dev = 4,315, 81,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=52 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05542953131809006;  // std dev = 2,396, 148,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=6 */
%   | | | else return 0.028414259563511825;  // std dev = 7,399, 337,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=71 */
%   | else return -0.0867039330959406;  // std dev = 0,087, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12027297628322715;  // std dev = 0,469, 86,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.048795603824983685;  // std dev = 2,395, 139,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=6 */
%   | | | else return 0.026314623699991015;  // std dev = 7,388, 333,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=71 */
%   | else return -0.0776904622105;  // std dev = 0,073, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.03952168470672461;  // std dev = 0,490, 92,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=54 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.042238603969972456;  // std dev = 2,392, 132,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=6 */
%   | | | else return 0.015089156370299566;  // std dev = 7,417, 347,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=71 */
%   | else return -0.07091696992818067;  // std dev = 0,043, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.14133288963971566;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.08175339512568297;  // std dev = 4,266, 80,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=52 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04222098819634527;  // std dev = 2,398, 140,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=6 */
%   | | | else return 0.014207420414025732;  // std dev = 7,413, 343,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=71 */
%   | else return -0.06454500699418489;  // std dev = 0,014, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */


Results
   AUC ROC   = 0.867347
   AUC PR    = 0.539669
   CLL	      = -0.224465
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 44.616 seconds
Total inference time: 3.037 seconds
AUC ROC: 0.867347


Results scoring model
   AUC ROC   = 0.882149
   AUC PR    = 0.543101
   CLL	      = -0.229235
   Precision = 0.186522 at threshold = 0.5
   Recall    = 0.662393
   F1        = 0.29108


Total scoring time: 8.205 seconds
Refined model CLL: -0.229235


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.867347
   AUC PR    = 0.539669
   CLL	      = -0.224465
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 58.669 seconds
Total inference time: 3.037 seconds
AUC ROC: 0.867347
Total revision time: 58.669
Best scored revision CLL: -0.229235


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:04:21
{'F1': 0.305499, 'Inference time': 3.037, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.867347, 'AUC PR': 0.539669, 'parameter_0.4': {'F1': 0.604938, 'Inference time': 1.663, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 2.75, 'CLL': -0.248644}, 'Recall': 0.663717, 'Learning time': 58.669, 'CLL': -0.224465}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.577447180713546;  // std dev = 0,449, 114,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=82 */
%   | else if ( haswordvenue(G, C) )
%   | | then return -0.07802127766644512;  // std dev = 0,244, 94,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=6 */
%   | | else if ( author(H, D), title(H, B) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | then if ( haswordvenue(K, I) )
%   | | then return -0.10453763206466676;  // std dev = 0,190, 134,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=5 */
%   | | else return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.26181865987015057;  // std dev = 0,491, 327,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=132 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.48555596442021925;  // std dev = 0,452, 115,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=82 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09211684073235951;  // std dev = 2,194, 133,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=5 */
%   | | | else return -0.04890305846946565;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.01964540815629291;  // std dev = 3,057, 93,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=11 */
%   | | | else return 0.23960397553928647;  // std dev = 8,777, 317,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=132 */
%   else return -0.1539727657123465;  // std dev = 0,154, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3601984997738906;  // std dev = 0,456, 125,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=85 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.1282421138737665;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07122379602566582;  // std dev = 2,385, 121,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.004898776713730107;  // std dev = 3,014, 79,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | | | else return 0.17043510861890976;  // std dev = 9,011, 343,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=132 */
%   else return -0.13929440349453923;  // std dev = 0,106, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.26935491989061705;  // std dev = 0,457, 127,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=85 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06588322462401941;  // std dev = 2,367, 94,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=6 */
%   | | | else return 0.45020489198304287;  // std dev = 1,352, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0686833894449542;  // std dev = 2,187, 115,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=5 */
%   | | | else return -0.05767476793365213;  // std dev = 0,964, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else return 0.16799589609012222;  // std dev = 0,492, 320,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=132 */
%   else return -0.1268223522866369;  // std dev = 0,115, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return -0.2549763357685788;  // std dev = 0,756, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.23056940878093554;  // std dev = 0,445, 121,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=84 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.11507872481744447;  // std dev = 0,129, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06020453127088227;  // std dev = 2,391, 127,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=6 */
%   | | else return 0.09617289325420031;  // std dev = 0,460, 420,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=143 */
%   else return -0.11063853597510735;  // std dev = 0,104, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13130030733766804;  // std dev = 0,452, 133,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=85 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.057112509676102007;  // std dev = 2,189, 117,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=5 */
%   | | | else return -0.06768888516071916;  // std dev = 0,974, 25,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.028224404589033913;  // std dev = 2,934, 97,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=11 */
%   | | | else return 0.12387232194398307;  // std dev = 8,747, 314,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=132 */
%   else return -0.09440470560141817;  // std dev = 0,078, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12313823962408525;  // std dev = 0,456, 125,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=85 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05480033388778696;  // std dev = 2,195, 123,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=5 */
%   | | | else return -0.036857630870023056;  // std dev = 0,963, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.003361608951794523;  // std dev = 2,902, 80,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return 0.10558940197140812;  // std dev = 8,685, 308,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=132 */
%   else return -0.09247799187476552;  // std dev = 0,077, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.17074670032218853;  // std dev = 0,411, 113,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=85 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05021568534125659;  // std dev = 2,192, 124,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=5 */
%   | | | else return -0.04063183920012188;  // std dev = 0,966, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06411509324219085;  // std dev = 2,366, 90,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=6 */
%   | | | else return 0.36777315138948014;  // std dev = 1,332, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.0584197565321533;  // std dev = 0,491, 326,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=132 */
%   else return -0.08432358456170591;  // std dev = 0,081, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11660229365423276;  // std dev = 0,420, 115,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=85 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05238912706382632;  // std dev = 2,198, 149,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=5 */
%   | | | else return 0.0013590960694995213;  // std dev = 0,948, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.030924221165834907;  // std dev = 2,890, 98,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=11 */
%   | | | else return 0.06735214355608843;  // std dev = 8,695, 309,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=132 */
%   else return -0.07779586081589492;  // std dev = 0,063, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.04437679326712187;  // std dev = 0,447, 122,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=85 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.040576482371982886;  // std dev = 2,188, 121,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=5 */
%   | | | else return -0.011264116079155806;  // std dev = 0,952, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.017228848038527686;  // std dev = 2,870, 90,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=11 */
%   | | | else return 0.03830412118157768;  // std dev = 8,797, 319,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=132 */
%   else return -0.07194477015020542;  // std dev = 0,064, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */


Results
   AUC ROC   = 0.83793
   AUC PR    = 0.098707
   CLL	      = -0.336569
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 145.569 seconds
Total inference time: 3.971 seconds
AUC ROC: 0.83793


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 07:06:51
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 3.971, 'Precision': [0.119186, 0.5], 'Learning time': 145.569, 'AUC PR': 0.098707, 'CLL': -0.336569, 'AUC ROC': 0.83793}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5972793698821195;  // std dev = 0,439, 115,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=85 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08415875720817997;  // std dev = 2,378, 104,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.01089868394810672;  // std dev = 3,092, 84,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=11 */
%   | | | else return 0.2909358203454101;  // std dev = 8,653, 305,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=132 */
%   else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */


Results
   AUC ROC   = 0.838364
   AUC PR    = 0.098744
   CLL	      = -0.206617
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.762 seconds
Total inference time: 1.884 seconds
AUC ROC: 0.838364


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 07:07:03
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.884, 'Precision': [nan, 0.5], 'Learning time': 9.762, 'AUC PR': 0.098744, 'CLL': -0.206617, 'AUC ROC': 0.838364}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,68e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.0787371703936252;  // std dev = 12,328, 884,000 (wgt'ed) examples reached here.  /* #neg=689 #pos=195 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.06519910046377977;  // std dev = 12,357, 899,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=195 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.05470338491983378;  // std dev = 12,372, 907,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=195 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,58e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.045323180236104314;  // std dev = 12,387, 915,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=195 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,98e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.03820227684748264;  // std dev = 12,393, 918,000 (wgt'ed) examples reached here.  /* #neg=723 #pos=195 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694905;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.03664562854522852;  // std dev = 12,361, 901,000 (wgt'ed) examples reached here.  /* #neg=706 #pos=195 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,53e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.040185670005167394;  // std dev = 12,290, 865,000 (wgt'ed) examples reached here.  /* #neg=670 #pos=195 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.03249061178743706;  // std dev = 12,302, 871,000 (wgt'ed) examples reached here.  /* #neg=676 #pos=195 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.012758762901226316;  // std dev = 12,418, 932,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=195 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.029313020231878328;  // std dev = 12,271, 856,000 (wgt'ed) examples reached here.  /* #neg=661 #pos=195 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.248095
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 3.73 seconds
Total inference time: 1.892 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.722222
   AUC PR    = 0.478439
   CLL	      = -0.244034
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.444444
   F1        = 0.615385


Total scoring time: 3.703 seconds
Parameter learned model CLL: -0.244034


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.68e-07, 0, 156], 'false': [12.328, 689, 195]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 156], 'false': [12.357, 704, 195]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.4e-07, 0, 156], 'false': [12.372, 712, 195]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.58e-07, 0, 156], 'false': [12.387, 720, 195]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-07, 0, 156], 'false': [12.393, 723, 195]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 156], 'false': [12.361, 706, 195]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.53e-07, 0, 156], 'false': [12.29, 670, 195]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 156], 'false': [12.302, 676, 195]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 156], 'false': [12.418, 737, 195]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.19e-08, 0, 156], 'false': [12.271, 661, 195]}]]
[{'': [6.012284687200848e-15, 0.17192906574394648]}, {'': [-2.6417614534670392e-15, 0.16985873563630619]}, {'': [1.8674520619335967e-15, 0.1687718577424902]}, {'': [1.343654532366856e-15, 0.1676968556839486]}, {'': [5.693451408334137e-16, 0.16729676620102205]}, {'': [-2.1635115351669717e-16, 0.16958589605088492]}, {'': [4.099285014000578e-16, 0.17461325136154585]}, {'': [-3.0744637605004334e-16, 0.17375807529516177]}, {'': [-2.3627823344586665e-16, 0.1654513345244851]}, {'': [5.408778837917429e-17, 0.17590919512620373]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,68e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.43666133179372824;  // std dev = 5,432, 121,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=70 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08302753548872295;  // std dev = 2,744, 136,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=8 */
%   | | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.1042923794544786;  // std dev = 2,775, 213,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=8 */
%   | | | else return 0.07243464938522651;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.11552158925500701;  // std dev = 8,443, 373,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=96 */
%   | | | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.11051392751025163;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.3895221219774915;  // std dev = 5,336, 118,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=70 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08060938872053161;  // std dev = 3,223, 211,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=11 */
%   | | | else return 0.07133924905980826;  // std dev = 9,225, 499,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=111 */
%   | else return -0.13193435316156626;  // std dev = 0,110, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.32080358224084177;  // std dev = 0,490, 124,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=73 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06862800774248769;  // std dev = 3,216, 203,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=11 */
%   | | | else return 0.048939362532141886;  // std dev = 9,300, 530,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=111 */
%   | else return -0.11703889737684703;  // std dev = 0,070, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,58e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.015320943847058859;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.2509094446485322;  // std dev = 5,336, 118,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=70 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.062112867514331704;  // std dev = 3,216, 207,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=11 */
%   | | | else return 0.05044702544852057;  // std dev = 9,251, 509,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=111 */
%   | else return -0.10576021260350689;  // std dev = 0,090, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,98e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15385904670105724;  // std dev = 0,490, 136,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=73 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06741650514913593;  // std dev = 3,598, 166,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=15 */
%   | | | else return 0.026062698115517476;  // std dev = 9,194, 586,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=107 */
%   | else return -0.09793261980675341;  // std dev = 0,095, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694905;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.1735476389962493;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.17044001088439498;  // std dev = 5,234, 115,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=70 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.058033923725466126;  // std dev = 3,217, 204,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=11 */
%   | | | else return 0.0453010301163404;  // std dev = 9,215, 505,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=111 */
%   | else return -0.09057129607134355;  // std dev = 0,087, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,53e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.07508386234637933;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.10277464237529206;  // std dev = 5,401, 120,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=70 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05618456752663517;  // std dev = 3,221, 223,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=11 */
%   | | | else return 0.03371275773404997;  // std dev = 9,250, 513,000 (wgt'ed) examples reached here.  /* #neg=402 #pos=111 */
%   | else return -0.08092178583988152;  // std dev = 0,072, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.15439430427927103;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.19375777918184536;  // std dev = 4,583, 100,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=70 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05040234243891498;  // std dev = 3,223, 216,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=11 */
%   | | | else return 0.04268874261621319;  // std dev = 9,161, 483,000 (wgt'ed) examples reached here.  /* #neg=372 #pos=111 */
%   | else return -0.07596335666873694;  // std dev = 0,078, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.3047613767754907;  // std dev = 1,117, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07044707735652671;  // std dev = 5,229, 118,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=72 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.10284000630901877;  // std dev = 2,755, 169,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=8 */
%   | | | else return 0.18486226504787717;  // std dev = 1,961, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.049163025099822975;  // std dev = 2,762, 178,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=8 */
%   | | | else return 0.16142166305948016;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.06715364274342635;  // std dev = 8,369, 355,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=96 */
%   | | | else return -0.06648543983396892;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.04625428218656946;  // std dev = 5,331, 123,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=73 */
%   | | | else return -0.040346884900356074;  // std dev = 3,202, 211,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=11 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.031351328937777874;  // std dev = 3,452, 120,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=15 */
%   | | | else return 0.04580126693576468;  // std dev = 8,428, 369,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=96 */
%   | else return -0.06871344033292627;  // std dev = 0,111, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 0.868179
   AUC PR    = 0.539734
   CLL	      = -0.245999
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 59.373 seconds
Total inference time: 3.133 seconds
AUC ROC: 0.868179


Results scoring model
   AUC ROC   = 0.876868
   AUC PR    = 0.542708
   CLL	      = -0.234131
   Precision = 0.192833 at threshold = 0.5
   Recall    = 0.643875
   F1        = 0.296783


Total scoring time: 10.995 seconds
Refined model CLL: -0.234131


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.868179
   AUC PR    = 0.539734
   CLL	      = -0.245999
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 77.801 seconds
Total inference time: 3.133 seconds
AUC ROC: 0.868179
Total revision time: 77.801
Best scored revision CLL: -0.234131


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:08:26
{'F1': 0.305499, 'Inference time': 3.133, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.868179, 'AUC PR': 0.539734, 'parameter_0.6': {'F1': 0.604938, 'Inference time': 1.892, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 3.73, 'CLL': -0.248095}, 'Recall': 0.663717, 'Learning time': 77.801, 'CLL': -0.245999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5482074146316733;  // std dev = 0,462, 171,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=118 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09996624814656113;  // std dev = 2,769, 191,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=8 */
%   | | | else return 0.0010060779566550774;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.02734724810659453;  // std dev = 3,645, 131,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=15 */
%   | | | else return 0.28138544962232953;  // std dev = 10,847, 482,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=204 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7427280521381978;  // std dev = 0,064, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.22238998797093718;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.4599629532055312;  // std dev = 6,070, 170,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=116 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09050833405817271;  // std dev = 2,772, 202,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=8 */
%   | | | else return -0.011538795632110316;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.03581486875135098;  // std dev = 3,669, 146,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=15 */
%   | | | else return 0.22670887747795088;  // std dev = 11,005, 502,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=204 */
%   else return -0.12544463852839155;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.43734563858087316;  // std dev = 0,425, 162,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=121 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07600776799268114;  // std dev = 2,765, 181,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=8 */
%   | | | else return 0.026092912356463646;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06821920456928329;  // std dev = 2,733, 121,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=8 */
%   | | | else return 0.36566509295137795;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.20682981787034818;  // std dev = 0,494, 483,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=204 */
%   else return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2686616961724665;  // std dev = 0,452, 180,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=121 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06770475880091194;  // std dev = 2,764, 179,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=8 */
%   | | | else return 0.022910893275995475;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.020849348383774242;  // std dev = 3,568, 136,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=15 */
%   | | | else return 0.180574358511814;  // std dev = 10,754, 471,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=204 */
%   else return -0.1015963294878362;  // std dev = 4,34e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.21391089259280713;  // std dev = 0,455, 175,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=121 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07091823103475539;  // std dev = 2,752, 149,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=8 */
%   | | | else return 0.3414054188122376;  // std dev = 1,794, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.056027202046030906;  // std dev = 3,205, 207,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=11 */
%   | | | else return 0.14044511096326565;  // std dev = 10,797, 476,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=204 */
%   else return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.19795982765838468;  // std dev = 0,433, 167,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=121 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05939060793126799;  // std dev = 2,771, 192,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=8 */
%   | | | else return -0.019157659469458483;  // std dev = 1,624, 25,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.026876319610305094;  // std dev = 3,516, 147,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=15 */
%   | | | else return 0.09435498251989577;  // std dev = 10,951, 495,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=204 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3120589374028785;  // std dev = 0,074, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.4118544312786034;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.12954897308487467;  // std dev = 0,448, 165,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=116 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.1162168889232172;  // std dev = 0,088, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.040594400973176174;  // std dev = 3,193, 191,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=11 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.010142386623391715;  // std dev = 3,477, 132,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=15 */
%   | | | else return 0.09090997933350524;  // std dev = 10,788, 475,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=204 */
%   else return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1576733135203695;  // std dev = 0,405, 159,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=121 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05185015633919808;  // std dev = 2,741, 130,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=8 */
%   | | | else return 0.27099881523446634;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.036613956059175196;  // std dev = 3,192, 191,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=11 */
%   | | | else return 0.06402578008051851;  // std dev = 10,847, 482,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=204 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.14721607984271848;  // std dev = 1,029, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.09134713550238639;  // std dev = 5,455, 158,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=116 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0493014719948175;  // std dev = 2,781, 192,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=8 */
%   | | | else return 0.05110458679657351;  // std dev = 1,566, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else return 0.057913700498894556;  // std dev = 0,459, 589,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=219 */
%   else return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.039705402083199955;  // std dev = 0,443, 173,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=121 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.04673856902076524;  // std dev = 2,775, 208,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=8 */
%   | | | else return 0.04680835197400892;  // std dev = 1,563, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else return 0.022898707987003598;  // std dev = 0,454, 628,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=219 */
%   else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.836986
   AUC PR    = 0.098646
   CLL	      = -0.337536
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 263.82 seconds
Total inference time: 4.095 seconds
AUC ROC: 0.836986


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 07:12:55
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 4.095, 'Precision': [0.119186, 0.5], 'Learning time': 263.82, 'AUC PR': 0.098646, 'CLL': -0.337536, 'AUC ROC': 0.836986}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5229840999346742;  // std dev = 0,472, 182,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=121 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08078236261041132;  // std dev = 2,741, 131,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=8 */
%   | | | else return 0.3966104735610508;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09479224137107588;  // std dev = 2,761, 170,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=8 */
%   | | | else return 0.01604367194161748;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else return 0.294979770217281;  // std dev = 0,496, 467,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=204 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 0.74159
   AUC PR    = 0.075339
   CLL	      = -0.221602
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 28.387 seconds
Total inference time: 1.984 seconds
AUC ROC: 0.74159


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 07:13:25
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.984, 'Precision': [nan, 0.5], 'Learning time': 28.387, 'AUC PR': 0.075339, 'CLL': -0.221602, 'AUC ROC': 0.74159}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995091;  // std dev = 1,08e-06, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.07745460825784782;  // std dev = 14,220, 1.181,000 (wgt'ed) examples reached here.  /* #neg=922 #pos=259 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.06411003040482303;  // std dev = 14,253, 1.201,000 (wgt'ed) examples reached here.  /* #neg=942 #pos=259 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,42e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.05785796644041927;  // std dev = 14,233, 1.189,000 (wgt'ed) examples reached here.  /* #neg=930 #pos=259 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 2,23e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.05121920392823611;  // std dev = 14,221, 1.182,000 (wgt'ed) examples reached here.  /* #neg=923 #pos=259 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601492;  // std dev = 3,86e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.04656759068408609;  // std dev = 14,197, 1.168,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=259 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,56e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.04126617759778278;  // std dev = 14,183, 1.160,000 (wgt'ed) examples reached here.  /* #neg=901 #pos=259 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,01e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.03162989711141847;  // std dev = 14,215, 1.178,000 (wgt'ed) examples reached here.  /* #neg=919 #pos=259 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452778;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.026005016461592666;  // std dev = 14,221, 1.182,000 (wgt'ed) examples reached here.  /* #neg=923 #pos=259 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.03180125373063105;  // std dev = 14,131, 1.131,000 (wgt'ed) examples reached here.  /* #neg=872 #pos=259 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 8,94e-08, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.014999212323956275;  // std dev = 14,238, 1.192,000 (wgt'ed) examples reached here.  /* #neg=933 #pos=259 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.249827
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 3.752 seconds
Total inference time: 2.038 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.723291
   AUC PR    = 0.48047
   CLL	      = -0.245725
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.446581
   F1        = 0.61743


Total scoring time: 3.858 seconds
Parameter learned model CLL: -0.245725


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 209], 'false': [14.22, 922, 259]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 209], 'false': [14.253, 942, 259]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.42e-07, 0, 209], 'false': [14.233, 930, 259]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.23e-07, 0, 209], 'false': [14.221, 923, 259]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.86e-07, 0, 209], 'false': [14.197, 909, 259]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.56e-07, 0, 209], 'false': [14.183, 901, 259]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.01e-07, 0, 209], 'false': [14.215, 919, 259]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 209], 'false': [14.221, 923, 259]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 209], 'false': [14.131, 872, 259]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.94e-08, 0, 209], 'false': [14.238, 933, 259]}]]
[{'': [5.575550653811312e-15, 0.1712106948789089]}, {'': [-3.807693129432116e-15, 0.16914713730786277]}, {'': [1.9718410848844886e-15, 0.17038015280241917]}, {'': [2.3798082058950725e-16, 0.17110650164195426]}, {'': [7.139424617685217e-16, 0.17257503166634802]}, {'': [3.144746557789917e-16, 0.17342375148632427]}, {'': [4.334650660737453e-16, 0.1715239204314596]}, {'': [-5.099589012632298e-17, 0.17110650164195404]}, {'': [-1.3173938282633436e-16, 0.17655947922113605]}, {'': [3.824691759474224e-17, 0.17007046416827676]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995091;  // std dev = 1,08e-06, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.45453447726818436;  // std dev = 0,491, 166,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=99 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09185106490048768;  // std dev = 2,924, 180,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=9 */
%   | | | else return 0.42957750652808374;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09658357518855386;  // std dev = 3,241, 243,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=11 */
%   | | | else return 0.09952824544433996;  // std dev = 2,304, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.11169863083987396;  // std dev = 9,660, 493,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=125 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109571;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.10107961557320734;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.4062905336873536;  // std dev = 6,064, 155,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=95 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08264645945905712;  // std dev = 2,927, 186,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=9 */
%   | | | else return 0.13078173850246747;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0888289684232231;  // std dev = 3,247, 264,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=11 */
%   | | | else return 0.0955963387295606;  // std dev = 2,291, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.10014818374165116;  // std dev = 9,643, 488,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=125 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 6,42e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2876288727940566;  // std dev = 0,492, 176,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=99 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.058600862941666644;  // std dev = 4,051, 267,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=18 */
%   | | | else return 0.06014271098232698;  // std dev = 10,403, 647,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=142 */
%   | else return -0.13567601782318064;  // std dev = 0,324, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 2,23e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.24855160525083997;  // std dev = 0,490, 169,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=99 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.052674590076722226;  // std dev = 4,049, 272,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=18 */
%   | | | else return 0.050967205761251924;  // std dev = 10,414, 646,000 (wgt'ed) examples reached here.  /* #neg=504 #pos=142 */
%   | else return -0.11413041818035276;  // std dev = 0,229, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601492;  // std dev = 3,86e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.17405269385916505;  // std dev = 0,492, 174,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=99 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04395695894624477;  // std dev = 4,048, 255,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=18 */
%   | | | else return 0.046903199077506445;  // std dev = 10,379, 641,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=142 */
%   | else return -0.10135999830207272;  // std dev = 0,182, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948834;  // std dev = 2,56e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12773860487674077;  // std dev = 0,494, 175,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=99 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06683108619752649;  // std dev = 3,779, 209,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=17 */
%   | | | else return 0.017181521205016276;  // std dev = 10,610, 793,000 (wgt'ed) examples reached here.  /* #neg=650 #pos=143 */
%   | else return -0.0970681946549392;  // std dev = 0,223, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253495;  // std dev = 3,01e-07, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12982156485465685;  // std dev = 0,488, 165,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=99 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04461026875967495;  // std dev = 4,052, 271,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=18 */
%   | | | else return 0.032202582998711426;  // std dev = 10,429, 659,000 (wgt'ed) examples reached here.  /* #neg=517 #pos=142 */
%   | else return -0.08913510834428318;  // std dev = 0,209, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452778;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.05773992120699869;  // std dev = 0,494, 177,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=99 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.041958546807183056;  // std dev = 4,060, 275,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=18 */
%   | | | else return 0.02073076768871564;  // std dev = 10,462, 686,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=142 */
%   | else return -0.07869390784193638;  // std dev = 0,171, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08998609571418299;  // std dev = 0,487, 163,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=99 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06027827384945074;  // std dev = 3,772, 198,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=17 */
%   | | | else return 0.020039329636001045;  // std dev = 10,514, 772,000 (wgt'ed) examples reached here.  /* #neg=629 #pos=143 */
%   | else return -0.07306675837755564;  // std dev = 0,164, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 8,94e-08, 209,000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.015481235346233052;  // std dev = 0,494, 179,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=99 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.1214557223456066;  // std dev = 1,804, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.07703400157691667;  // std dev = 3,250, 206,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=12 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05305901997764384;  // std dev = 3,236, 241,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=11 */
%   | | | else return 0.14125942085951285;  // std dev = 2,239, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05290428410653107;  // std dev = 9,615, 480,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=125 */
%   | | | else return -0.059724752091612494;  // std dev = 1,29e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.868674
   AUC PR    = 0.539482
   CLL	      = -0.24367
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 69.21000000000001 seconds
Total inference time: 2.837 seconds
AUC ROC: 0.868674


Results scoring model
   AUC ROC   = 0.878326
   AUC PR    = 0.543595
   CLL	      = -0.228456
   Precision = 0.185592 at threshold = 0.5
   Recall    = 0.649573
   F1        = 0.288699


Total scoring time: 9.827 seconds
Refined model CLL: -0.228456


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.868674
   AUC PR    = 0.539482
   CLL	      = -0.24367
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 86.647 seconds
Total inference time: 2.837 seconds
AUC ROC: 0.868674
Total revision time: 86.647
Best scored revision CLL: -0.228456


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:14:58
{'F1': 0.305499, 'Inference time': 2.837, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.868674, 'parameter_0.8': {'F1': 0.604938, 'Inference time': 2.038, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 3.752, 'CLL': -0.249827}, 'AUC PR': 0.539482, 'Recall': 0.663717, 'Learning time': 86.647, 'CLL': -0.24367}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.5882374306747302;  // std dev = 6,673, 226,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=165 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09473064605232023;  // std dev = 2,928, 191,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=9 */
%   | | | else return 0.3025933795439568;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09695310571681456;  // std dev = 3,241, 245,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=11 */
%   | | | else return 0.16249676118646889;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else return 0.26590087308400384;  // std dev = 0,491, 645,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=263 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7724650020180901;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22938933320882707;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.48994551112679036;  // std dev = 0,449, 228,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=164 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08951370446573059;  // std dev = 3,253, 261,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=11 */
%   | | | else return 0.028163139316863085;  // std dev = 2,371, 38,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.042253127344832525;  // std dev = 3,847, 181,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=17 */
%   | | | else return 0.2413950828836685;  // std dev = 12,364, 628,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=263 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6105980147836582;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19136703323283993;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.40519632557120133;  // std dev = 0,443, 224,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=164 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07807441868259414;  // std dev = 3,247, 255,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=11 */
%   | | | else return 0.11986792012377821;  // std dev = 2,225, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03230680506598595;  // std dev = 3,832, 175,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=17 */
%   | | | else return 0.20607888398739638;  // std dev = 12,335, 624,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=263 */
%   else return -0.11231637819360625;  // std dev = 5,58e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.12422880111731703;  // std dev = 1,120, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.28852382870322;  // std dev = 6,896, 231,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=164 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06844474601188912;  // std dev = 3,245, 246,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=11 */
%   | | | else return 0.15271684621269352;  // std dev = 2,150, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06758705731627758;  // std dev = 2,917, 164,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=9 */
%   | | | else return 0.3613971085715077;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else return 0.14086975045476413;  // std dev = 0,488, 669,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=263 */
%   else return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.42923081086878706;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18119233336274435;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.22957771535482;  // std dev = 0,448, 227,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=164 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06811182876194131;  // std dev = 3,256, 285,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=11 */
%   | | | else return 0.06138322145081028;  // std dev = 2,247, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.007465710907036744;  // std dev = 3,683, 148,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=17 */
%   | | | else return 0.13508725439681568;  // std dev = 12,406, 634,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=263 */
%   else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15683870861075674;  // std dev = 0,441, 245,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=170 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05876541772894175;  // std dev = 3,249, 268,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=11 */
%   | | | else return 0.021781870908919157;  // std dev = 2,298, 30,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else return 0.07686516746951497;  // std dev = 0,454, 825,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=280 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.14659704701684184;  // std dev = 0,424, 237,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=170 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05232563786463231;  // std dev = 3,248, 257,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=11 */
%   | | | else return 0.022257162356537023;  // std dev = 2,285, 30,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03929608850738805;  // std dev = 3,750, 181,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=17 */
%   | | | else return 0.09711361561249408;  // std dev = 12,335, 624,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=263 */
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.28922990499328083;  // std dev = 0,102, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.6198976407073945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return -0.0455484069869588;  // std dev = 0,535, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.13101558447342737;  // std dev = 6,324, 216,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=163 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05219825978471147;  // std dev = 3,255, 286,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=11 */
%   | | | else return 0.08567099196899662;  // std dev = 2,185, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.036557911553788465;  // std dev = 3,748, 189,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=17 */
%   | | | else return 0.06752671830041129;  // std dev = 12,419, 636,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=263 */
%   else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.03964093415779902;  // std dev = 0,707, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.055338895604221235;  // std dev = 6,882, 232,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=164 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.04184485203037442;  // std dev = 3,244, 247,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=11 */
%   | | | else return 0.02773790678383439;  // std dev = 2,249, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else return 0.04233674500806948;  // std dev = 0,460, 791,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=280 */
%   else return -0.06842697784420268;  // std dev = 2,58e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.002715291788731119;  // std dev = 0,768, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.060096481733008744;  // std dev = 6,689, 226,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=164 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return 0.019649654145521205;  // std dev = 1,590, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return -0.04035546539495181;  // std dev = 3,660, 236,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=15 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06140613972737329;  // std dev = 2,912, 156,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=9 */
%   | | | else return 0.49126393889838377;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.05778002221749404;  // std dev = 0,495, 613,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=263 */
%   else return -0.06419184008202625;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */


Results
   AUC ROC   = 0.836043
   AUC PR    = 0.098575
   CLL	      = -0.373213
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 438.671 seconds
Total inference time: 4.474 seconds
AUC ROC: 0.836043


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 07:22:21
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 4.474, 'Precision': [0.119186, 0.5], 'Learning time': 438.671, 'AUC PR': 0.098575, 'CLL': -0.373213, 'AUC ROC': 0.836043}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5635431259708782;  // std dev = 0,456, 241,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=170 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10126065899642912;  // std dev = 3,249, 271,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=11 */
%   | | | else return 0.1273797043302816;  // std dev = 2,262, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04895489003709967;  // std dev = 3,927, 183,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=17 */
%   | | | else return 0.26028960788238237;  // std dev = 12,539, 654,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=263 */
%   else return -0.14185106490048766;  // std dev = 7,15e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */


Results
   AUC ROC   = 0.833652
   AUC PR    = 0.098313
   CLL	      = -0.212745
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 16.375 seconds
Total inference time: 1.749 seconds
AUC ROC: 0.833652


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 07:22:40
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.749, 'Precision': [nan, 0.5], 'Learning time': 16.375, 'AUC PR': 0.098313, 'CLL': -0.212745, 'AUC ROC': 0.833652}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.06860729533191537;  // std dev = 16,043, 1.549,000 (wgt'ed) examples reached here.  /* #neg=1.223 #pos=326 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.073799554174814;  // std dev = 15,903, 1.454,000 (wgt'ed) examples reached here.  /* #neg=1.128 #pos=326 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.05885353266600824;  // std dev = 15,957, 1.489,000 (wgt'ed) examples reached here.  /* #neg=1.163 #pos=326 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.05122304390945348;  // std dev = 15,952, 1.486,000 (wgt'ed) examples reached here.  /* #neg=1.160 #pos=326 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.030362839294689095;  // std dev = 16,091, 1.584,000 (wgt'ed) examples reached here.  /* #neg=1.258 #pos=326 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.03673026677989158;  // std dev = 15,981, 1.505,000 (wgt'ed) examples reached here.  /* #neg=1.179 #pos=326 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.0353542054569771;  // std dev = 15,939, 1.477,000 (wgt'ed) examples reached here.  /* #neg=1.151 #pos=326 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.027590739317742207;  // std dev = 15,963, 1.493,000 (wgt'ed) examples reached here.  /* #neg=1.167 #pos=326 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.021123195368774553;  // std dev = 15,985, 1.508,000 (wgt'ed) examples reached here.  /* #neg=1.182 #pos=326 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else return 0.01792871923358557;  // std dev = 15,984, 1.507,000 (wgt'ed) examples reached here.  /* #neg=1.181 #pos=326 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.245897
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 4.753 seconds
Total inference time: 1.922 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.721368
   AUC PR    = 0.476703
   CLL	      = -0.241852
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.442735
   F1        = 0.613744


Total scoring time: 4.267 seconds
Parameter learned model CLL: -0.241852


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 259], 'false': [16.043, 1223, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.903, 1128, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.13e-07, 0, 259], 'false': [15.957, 1163, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.952, 1160, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 259], 'false': [16.091, 1258, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.26e-07, 0, 259], 'false': [15.981, 1179, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 259], 'false': [15.939, 1151, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 259], 'false': [15.963, 1167, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.985, 1182, 326]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 259], 'false': [15.984, 1181, 326]}]]
[{'': [4.499189523731908e-15, 0.166165638840687]}, {'': [-4.499189523731908e-15, 0.1739393675654529]}, {'': [6.584179790827183e-16, 0.17100464972367937]}, {'': [-4.1151123692669897e-16, 0.17125291414348584]}, {'': [8.230224738533979e-17, 0.16345111468216839]}, {'': [4.1151123692669897e-16, 0.16969084226444014]}, {'': [3.154919483104692e-16, 0.17200138068299406]}, {'': [6.858520615444983e-18, 0.1706745791590827]}, {'': [-1.7146301538612456e-16, 0.1694464183945506]}, {'': [-3.086334276950242e-17, 0.16952782612793182]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3664822684328422;  // std dev = 0,500, 240,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=122 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07990416224562086;  // std dev = 4,438, 339,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=21 */
%   | | | else return 0.07497357964927066;  // std dev = 11,972, 844,000 (wgt'ed) examples reached here.  /* #neg=661 #pos=183 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.0741154940990753;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.41569625011282185;  // std dev = 6,799, 194,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=118 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.10023329900686005;  // std dev = 3,372, 249,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=12 */
%   | | | else return 0.15878736133088098;  // std dev = 2,475, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.099318683442839;  // std dev = 3,406, 368,000 (wgt'ed) examples reached here.  /* #neg=356 #pos=12 */
%   | | | else return 0.11760011794823647;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.09238416128652496;  // std dev = 11,070, 665,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=162 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.1956625284663184;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.36220760776682076;  // std dev = 6,628, 188,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=118 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08117104176171369;  // std dev = 3,361, 214,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=12 */
%   | | | else return 0.11923288961686543;  // std dev = 2,506, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0851376991419091;  // std dev = 3,400, 335,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=12 */
%   | | | else return 0.12668450190086225;  // std dev = 2,557, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.10429987538083871;  // std dev = 10,891, 605,000 (wgt'ed) examples reached here.  /* #neg=443 #pos=162 */
%   | | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.012011575213408067;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.28261304320056424;  // std dev = 6,658, 189,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06096106208320775;  // std dev = 4,384, 366,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=21 */
%   | | | else return 0.048364196506244156;  // std dev = 11,862, 852,000 (wgt'ed) examples reached here.  /* #neg=669 #pos=183 */
%   | else return -0.11066113315193031;  // std dev = 0,158, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.21416182434413278;  // std dev = 6,789, 201,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=122 */
%   | | | else return -0.052265157151726985;  // std dev = 4,269, 250,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=21 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05005884236660138;  // std dev = 4,368, 348,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=21 */
%   | | | else return 0.07130462671539654;  // std dev = 10,973, 631,000 (wgt'ed) examples reached here.  /* #neg=469 #pos=162 */
%   | else return -0.09996348796618558;  // std dev = 0,134, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.2659535820475412;  // std dev = 1,271, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.13978652587010124;  // std dev = 6,877, 199,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=118 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.045649563395672006;  // std dev = 4,375, 346,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=21 */
%   | | | else return 0.03360227181620125;  // std dev = 11,838, 862,000 (wgt'ed) examples reached here.  /* #neg=679 #pos=183 */
%   | else return -0.09246674394506811;  // std dev = 0,144, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.09407829744232528;  // std dev = 7,119, 210,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=122 */
%   | | | else return -0.04155921610954323;  // std dev = 4,376, 348,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=21 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.04153901222317074;  // std dev = 4,252, 222,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=21 */
%   | | | else return 0.05698420349372599;  // std dev = 10,958, 626,000 (wgt'ed) examples reached here.  /* #neg=464 #pos=162 */
%   | else return -0.08533273075887612;  // std dev = 0,134, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08775165857802647;  // std dev = 0,488, 204,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=122 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05528915361648745;  // std dev = 4,306, 275,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=21 */
%   | | | else return 0.016410472593866014;  // std dev = 11,874, 978,000 (wgt'ed) examples reached here.  /* #neg=795 #pos=183 */
%   | else return -0.07839178862689966;  // std dev = 0,113, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.08788511442046702;  // std dev = 6,771, 197,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=122 */
%   | | | else return -0.038642760322511016;  // std dev = 4,371, 351,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=21 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.028509317877019824;  // std dev = 4,259, 214,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=21 */
%   | | | else return 0.05611701896313922;  // std dev = 10,875, 600,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=162 */
%   | else return -0.0721939738656283;  // std dev = 0,105, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.01019449099937392;  // std dev = 7,817, 481,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=134 */
%   | | | else return 0.12562718744058557;  // std dev = 2,563, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03140990884102462;  // std dev = 4,273, 230,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=21 */
%   | | | else return 0.04788704312444792;  // std dev = 10,865, 597,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=162 */
%   | else return -0.06893498078079673;  // std dev = 0,108, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */


Results
   AUC ROC   = 0.902856
   AUC PR    = 0.551083
   CLL	      = -0.239708
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 117.056 seconds
Total inference time: 2.999 seconds
AUC ROC: 0.902856


Results scoring model
   AUC ROC   = 0.872634
   AUC PR    = 0.534316
   CLL	      = -0.232504
   Precision = 0.184172 at threshold = 0.5
   Recall    = 0.644444
   F1        = 0.286474


Total scoring time: 18.512 seconds
Refined model CLL: -0.232504


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902856
   AUC PR    = 0.551083
   CLL	      = -0.239708
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 144.588 seconds
Total inference time: 2.999 seconds
AUC ROC: 0.902856
Total revision time: 144.588
Best scored revision CLL: -0.232504


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:25:10
{'parameter_1.0': {'F1': 0.604938, 'Inference time': 1.922, 'Precision': [1.0, 0.5], 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'Learning time': 4.753, 'CLL': -0.245897}, 'F1': 0.305499, 'Inference time': 2.999, 'Precision': [0.198413, 0.5], 'AUC ROC': 0.902856, 'AUC PR': 0.551083, 'Recall': 0.663717, 'Learning time': 144.588, 'CLL': -0.239708}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.5979258867723711;  // std dev = 7,196, 269,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=199 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10481402786345113;  // std dev = 3,399, 324,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=12 */
%   | | | else return 0.10814893509951237;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.03941204051024388;  // std dev = 4,342, 205,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=21 */
%   | | | else return 0.2733609051743206;  // std dev = 13,955, 802,000 (wgt'ed) examples reached here.  /* #neg=469 #pos=333 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4923422726554208;  // std dev = 0,444, 291,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=210 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0895645909675046;  // std dev = 3,394, 300,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=12 */
%   | | | else return 0.10917332018869692;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04737725460371707;  // std dev = 4,372, 234,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=21 */
%   | | | else return 0.2534206561746639;  // std dev = 13,754, 771,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=333 */
%   else return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.645614649733705;  // std dev = 0,197, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.23156261115551247;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.4205799697886092;  // std dev = 0,433, 268,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08397350001752414;  // std dev = 3,401, 335,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=12 */
%   | | | else return 0.04909561281226934;  // std dev = 2,650, 41,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.045896699863747684;  // std dev = 4,382, 245,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=21 */
%   | | | else return 0.21264034396231452;  // std dev = 13,761, 772,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=333 */
%   else return -0.11231637819360621;  // std dev = 7,45e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.08726700567048895;  // std dev = 1,596, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.2848069160124573;  // std dev = 7,596, 282,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=201 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0755691152842915;  // std dev = 3,382, 227,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=12 */
%   | | | else return 0.3504379630600368;  // std dev = 2,163, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07108497475740046;  // std dev = 3,394, 299,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=12 */
%   | | | else return 0.1037798184526616;  // std dev = 2,543, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else return 0.15391211555960296;  // std dev = 0,492, 810,000 (wgt'ed) examples reached here.  /* #neg=477 #pos=333 */
%   else return -0.10159632948783615;  // std dev = 5,96e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.47072886096919564;  // std dev = 0,231, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.2068851228944397;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.18740480179560945;  // std dev = 0,464, 293,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0687092720271033;  // std dev = 3,406, 326,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=12 */
%   | | | else return 0.1112743458545709;  // std dev = 2,495, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else return 0.09468975911782543;  // std dev = 0,459, 1.028,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=354 */
%   else return -0.09269127618926107;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3597162926494446;  // std dev = 0,223, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.17498670227477467;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.15030443766668874;  // std dev = 0,460, 289,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06011129003199211;  // std dev = 3,400, 311,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=12 */
%   | | | else return 0.06197225784732686;  // std dev = 2,544, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else return 0.0745117352663649;  // std dev = 0,458, 1.034,000 (wgt'ed) examples reached here.  /* #neg=680 #pos=354 */
%   else return -0.08518475138839679;  // std dev = 2,11e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.11843316453971404;  // std dev = 0,442, 306,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=210 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05502723203902861;  // std dev = 3,400, 311,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=12 */
%   | | | else return -0.03309602421867769;  // std dev = 2,696, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.080020401063697;  // std dev = 3,364, 210,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=12 */
%   | | | else return 0.36674601793083733;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else return 0.0825387212015868;  // std dev = 0,491, 820,000 (wgt'ed) examples reached here.  /* #neg=487 #pos=333 */
%   else return -0.07877675473109166;  // std dev = 4,01e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.041027239486864646;  // std dev = 1,557, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.07449344928302591;  // std dev = 7,888, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.051727883454705526;  // std dev = 3,401, 325,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=12 */
%   | | | else return 0.061181752252724056;  // std dev = 2,544, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else return 0.04633179280584958;  // std dev = 0,455, 1.038,000 (wgt'ed) examples reached here.  /* #neg=684 #pos=354 */
%   else return -0.07324622576333704;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11522588238317706;  // std dev = 0,420, 289,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=210 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07915961292797062;  // std dev = 3,373, 220,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=12 */
%   | | | else return 0.21241336182310372;  // std dev = 2,149, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03943316292998269;  // std dev = 4,293, 357,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=21 */
%   | | | else return 0.054710465668653355;  // std dev = 14,051, 818,000 (wgt'ed) examples reached here.  /* #neg=485 #pos=333 */
%   else return -0.06842697784420267;  // std dev = 3,49e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.046796920122702076;  // std dev = 0,441, 308,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=210 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06967920273718117;  // std dev = 3,374, 218,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=12 */
%   | | | else return 0.10726832627273698;  // std dev = 2,248, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.033423553447083164;  // std dev = 4,281, 346,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=21 */
%   | | | else return 0.04767552883985642;  // std dev = 13,985, 807,000 (wgt'ed) examples reached here.  /* #neg=474 #pos=333 */
%   else return -0.06419184008202625;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 0.836163
   AUC PR    = 0.098521
   CLL	      = -0.36157
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 488.823 seconds
Total inference time: 4.045 seconds
AUC ROC: 0.836163


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 07:33:24
{'F1': 0.179431, 'Recall': 0.362832, 'Inference time': 4.045, 'Precision': [0.119186, 0.5], 'Learning time': 488.823, 'AUC PR': 0.098521, 'CLL': -0.36157, 'AUC ROC': 0.836163}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.525923021478246;  // std dev = 0,471, 301,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=201 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10387638135618443;  // std dev = 3,398, 316,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=12 */
%   | | | else return 0.10814893509951237;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04088952643894932;  // std dev = 4,345, 208,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=21 */
%   | | | else return 0.285620051915939;  // std dev = 13,808, 779,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=333 */
%   else return -0.14185106490048766;  // std dev = 7,45e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 0.833652
   AUC PR    = 0.098313
   CLL	      = -0.212523
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 29.946 seconds
Total inference time: 1.93 seconds
AUC ROC: 0.833652


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 07:33:56
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.93, 'Precision': [nan, 0.5], 'Learning time': 29.946, 'AUC PR': 0.098313, 'CLL': -0.212523, 'AUC ROC': 0.833652}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 569
Target train neg examples: 23251

Target test facts examples: 8129
Target test pos	 examples: 129
Target test neg examples: 4745

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.06301004621062373;  // std dev = 6,849, 288,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=59 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.058784895317792706;  // std dev = 6,834, 283,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=59 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.04403189266767403;  // std dev = 6,864, 293,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=59 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.04160163005106619;  // std dev = 6,849, 288,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=59 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.037995136451351524;  // std dev = 6,840, 285,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=59 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.022240390219497107;  // std dev = 6,885, 300,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=59 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.025796119024842974;  // std dev = 6,855, 290,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=59 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.019913040229237396;  // std dev = 6,864, 293,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=59 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.0096503886815199;  // std dev = 6,896, 304,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=59 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return 0.015480646310325702;  // std dev = 6,864, 293,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=59 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.229817
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 2.425 seconds
Total inference time: 2.13 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.738938
   AUC PR    = 0.51184
   CLL	      = -0.225727
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.477876
   F1        = 0.646707


Total scoring time: 2.682 seconds
Parameter learned model CLL: -0.225727


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.849, 229, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.834, 224, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 54], 'false': [6.864, 234, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.849, 229, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.84, 226, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.885, 241, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.855, 231, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.864, 234, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 54], 'false': [6.896, 245, 59]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.05e-08, 0, 54], 'false': [6.864, 234, 59]}]]
[{'': [0.0, 0.16289303626543297]}, {'': [-3.289549702593056e-16, 0.1650164192336025]}, {'': [1.3158198810372225e-16, 0.16081724889049553]}, {'': [-3.618504672852362e-16, 0.16289303626543103]}, {'': [-8.22387425648264e-17, 0.1641612803939684]}, {'': [-3.289549702593056e-17, 0.15798888888888762]}, {'': [0.0, 0.16205707491082252]}, {'': [-4.5231308410654523e-17, 0.16081724889049295]}, {'': [-2.05596856412066e-17, 0.1564123095567871]}, {'': [4.7287276974775186e-17, 0.1608172488904939]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.4395442839367207;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return -0.0892194859531193;  // std dev = 1,686, 57,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0472564703058931;  // std dev = 2,518, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | | | else return 0.09115864383737582;  // std dev = 4,290, 103,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.33931201440336084;  // std dev = 0,498, 46,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.13133348876651293;  // std dev = 4,56e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06088129687835925;  // std dev = 1,669, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.16380465926659632;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.07828457629018855;  // std dev = 1,941, 70,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=4 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07745517317851104;  // std dev = 4,297, 104,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 8,43e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.13519531880779687;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.43216501577749394;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0583492546902731;  // std dev = 1,673, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | | | else return 0.02696480578778477;  // std dev = 5,006, 175,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=31 */
%   | else return -0.11904357629507994;  // std dev = 0,049, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.3747200205913577;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4097974411813211;  // std dev = 2,317, 30,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.042329775496730566;  // std dev = 2,499, 76,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=7 */
%   | | | else return 0.027866978401776942;  // std dev = 4,657, 150,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=27 */
%   | else return -0.1043664820594277;  // std dev = 0,030, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.10559263684981188;  // std dev = 3,344, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | | else return -0.05295961894020891;  // std dev = 2,522, 91,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.02636468460292201;  // std dev = 1,647, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | | else return 0.07871598315939592;  // std dev = 4,243, 96,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | else return -0.0948663181165241;  // std dev = 0,012, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10548086080581395;  // std dev = 0,495, 43,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03127788189910378;  // std dev = 2,499, 76,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=7 */
%   | | | else return 0.05927962112324298;  // std dev = 4,522, 121,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=27 */
%   | else return -0.08777229498106519;  // std dev = 0,033, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1542619683723926;  // std dev = 0,478, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05655944266498703;  // std dev = 1,671, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | | | else return 0.01113571344734511;  // std dev = 4,996, 177,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=31 */
%   | else return -0.08027477791571559;  // std dev = 0,023, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452774;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.14564701005597594;  // std dev = 0,890, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0049637920830213145;  // std dev = 3,580, 78,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.0065861288067283605;  // std dev = 2,470, 60,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=7 */
%   | | | else return 0.07922675710712862;  // std dev = 4,178, 88,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | else return -0.07555380747330769;  // std dev = 0,021, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.29362571755149924;  // std dev = 0,968, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12593279050080444;  // std dev = 2,802, 36,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.02890699580901375;  // std dev = 2,499, 77,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=7 */
%   | | | else return 0.0028625873149831556;  // std dev = 4,632, 146,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=27 */
%   | else return -0.06856036009805812;  // std dev = 0,008, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,05e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.06854976384495584;  // std dev = 1,175, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09786524543582198;  // std dev = 2,728, 34,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05449037378215263;  // std dev = 1,673, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | | else return 0.03406248222285137;  // std dev = 4,878, 153,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=31 */
%   | else return -0.06432151499559469;  // std dev = 0,008, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.826596
   AUC PR    = 0.521083
   CLL	      = -0.230396
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 32.315 seconds
Total inference time: 3.431 seconds
AUC ROC: 0.826596


Results scoring model
   AUC ROC   = 0.883829
   AUC PR    = 0.574473
   CLL	      = -0.230287
   Precision = 0.190594 at threshold = 0.5
   Recall    = 0.681416
   F1        = 0.297872


Total scoring time: 8.172 seconds
Refined model CLL: -0.230287


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.229817
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 45.593999999999994 seconds
Total inference time: 2.13 seconds
AUC ROC: 0.713178
Total revision time: 45.593999999999994
Best scored revision CLL: -0.225727


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 07:34:48
{'parameter_0.2': {'F1': 0.597826, 'Inference time': 2.13, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 2.425, 'CLL': -0.229817}, 'F1': 0.597826, 'Inference time': 2.13, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 45.593999999999994, 'CLL': -0.229817}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5302800826404962;  // std dev = 0,469, 61,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.08388005040773408;  // std dev = 1,941, 69,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=4 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.08730561035503319;  // std dev = 1,684, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   | | | else return 0.2836808499931305;  // std dev = 5,871, 141,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=60 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6239053194725893;  // std dev = 0,364, 51,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=43 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06376895351428129;  // std dev = 2,125, 71,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=5 */
%   | | | else return 0.2013894950386389;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06905198737276276;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | | else return 0.2395762366527722;  // std dev = 5,901, 143,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.37277440534375467;  // std dev = 0,451, 60,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06396480891231923;  // std dev = 2,137, 78,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=5 */
%   | | | else return 0.3432340401175964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.1238617799651826;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06386177996518258;  // std dev = 1,679, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | else return 0.2618948381845774;  // std dev = 0,500, 125,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=60 */
%   else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.03082041335419572;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2511724483526367;  // std dev = 3,603, 60,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return 0.2327659766034019;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.06340731220280316;  // std dev = 1,857, 70,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=4 */
%   | else return 0.13559210933739602;  // std dev = 0,466, 171,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=63 */
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.29109361606381745;  // std dev = 0,909, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.21097130394134875;  // std dev = 0,452, 57,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.12307358608881906;  // std dev = 1,149, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.039278205678821086;  // std dev = 2,065, 60,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.07263957965738428;  // std dev = 1,680, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | | | else return 0.12920322647899746;  // std dev = 5,886, 142,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=60 */
%   else return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1611802306733005;  // std dev = 0,454, 61,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.06141902899417306;  // std dev = 0,242, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.025725352635654567;  // std dev = 2,409, 72,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=7 */
%   | | | else return 0.1479401907078189;  // std dev = 5,646, 128,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=60 */
%   else return -0.08518475138839682;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.05200634039807692;  // std dev = 3,905, 66,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=42 */
%   | | | else return -0.04086616089541657;  // std dev = 2,076, 68,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=5 */
%   | | else return 0.46419849962688725;  // std dev = 0,814, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.11573764843427345;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.017052636521331897;  // std dev = 1,643, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else return 0.07779415146832878;  // std dev = 0,495, 139,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=60 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10664684154855948;  // std dev = 0,455, 61,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.10474807519106885;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0342584120426764;  // std dev = 1,660, 37,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else return 0.04284885023250592;  // std dev = 0,443, 201,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=67 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.06498937544796002;  // std dev = 0,980, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09249716171630376;  // std dev = 0,449, 57,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return -0.10621528354141212;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.031026325678743492;  // std dev = 1,659, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.028320428518152297;  // std dev = 2,356, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | | | else return 0.023500232188392187;  // std dev = 5,973, 148,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=60 */
%   else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.04896081001605146;  // std dev = 0,980, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(F, D), title(F, A) )
%   | | | then return -0.3307526581604309;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.00223829453307405;  // std dev = 3,760, 62,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=40 */
%   | else if ( author(G, D), title(G, B) )
%   | | then return -0.08759265961458122;  // std dev = 0,026, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.05363024304704877;  // std dev = 0,227, 57,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), title(J, B) )
%   | | then return 0.17851472435214163;  // std dev = 0,458, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.05643032226907041;  // std dev = 0,209, 75,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=4 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.023491234848040037;  // std dev = 0,492, 146,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=60 */
%   | | else return -0.06419184008202618;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.718517
   AUC PR    = 0.076753
   CLL	      = -0.379168
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 163.05599999999998 seconds
Total inference time: 3.955 seconds
AUC ROC: 0.718517


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 07:37:35
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 3.955, 'Precision': [0.167742, 0.5], 'Learning time': 163.05599999999998, 'AUC PR': 0.076753, 'CLL': -0.379168, 'AUC ROC': 0.718517}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5096640866146642;  // std dev = 0,476, 66,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=43 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07366924671866958;  // std dev = 1,672, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.030739953789376596;  // std dev = 2,494, 63,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
%   | | | else return 0.33058987998140316;  // std dev = 5,626, 127,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.718931
   AUC PR    = 0.076776
   CLL	      = -0.223284
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.332 seconds
Total inference time: 1.773 seconds
AUC ROC: 0.718931


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 07:37:44
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.773, 'Precision': [nan, 0.5], 'Learning time': 6.332, 'AUC PR': 0.076776, 'CLL': -0.223284, 'AUC ROC': 0.718931}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.07011474706532174;  // std dev = 9,885, 585,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=124 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.07322445705976538;  // std dev = 9,810, 554,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=124 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.06003791305795685;  // std dev = 9,833, 563,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=124 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.05062712913532032;  // std dev = 9,840, 566,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=124 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.030314708070747768;  // std dev = 9,923, 602,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=124 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.03406396080001706;  // std dev = 9,871, 579,000 (wgt'ed) examples reached here.  /* #neg=455 #pos=124 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.03351159293642868;  // std dev = 9,843, 567,000 (wgt'ed) examples reached here.  /* #neg=443 #pos=124 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.020950307680245868;  // std dev = 9,890, 587,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=124 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.01243773992468601;  // std dev = 9,923, 602,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=124 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.026731164563433125;  // std dev = 9,821, 558,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=124 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.242797
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 2.72 seconds
Total inference time: 2.158 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.726872
   AUC PR    = 0.48786
   CLL	      = -0.239834
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.453744
   F1        = 0.624242


Total scoring time: 3.017 seconds
Parameter learned model CLL: -0.239834


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.46e-07, 0, 103], 'false': [9.885, 461, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 103], 'false': [9.81, 430, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.3e-07, 0, 103], 'false': [9.833, 439, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.6e-07, 0, 103], 'false': [9.84, 442, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 103], 'false': [9.923, 478, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 103], 'false': [9.871, 455, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 103], 'false': [9.843, 443, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 103], 'false': [9.89, 463, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 103], 'false': [9.923, 478, 124]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.83e-08, 0, 103], 'false': [9.821, 434, 124]}]]
[{'': [1.9315724855614373e-15, 0.16703630652348747]}, {'': [-3.4492365813597096e-16, 0.17372831654263424]}, {'': [1.793603022307049e-15, 0.17173919216074568]}, {'': [6.553549504583448e-16, 0.17108466830650426]}, {'': [-2.4144656069517967e-16, 0.16355227867241653]}, {'': [-5.1738548720395646e-17, 0.16829683720069707]}, {'': [2.0695419488158259e-16, 0.1708674324782498]}, {'': [2.5869274360197823e-17, 0.16661974814913164]}, {'': [-1.2503482607428947e-16, 0.16355227867242053]}, {'': [4.527123013034619e-17, 0.1728395061728395]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.47771415249081745;  // std dev = 0,485, 92,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=57 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08921948595311925;  // std dev = 2,176, 95,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09394687328372117;  // std dev = 2,760, 167,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=8 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.10324697431519861;  // std dev = 6,144, 204,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=50 */
%   | | | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.21813318916059196;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.4401641702277187;  // std dev = 4,344, 83,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=54 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08416367744575827;  // std dev = 2,183, 106,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=5 */
%   | | | else return 0.05542771345377062;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0744570759126794;  // std dev = 2,748, 142,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=8 */
%   | | | else return 0.1570669878174392;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.07659166694509204;  // std dev = 6,199, 216,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=50 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.1260373797946101;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.314003264778214;  // std dev = 4,608, 89,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=54 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.046807775052185814;  // std dev = 2,993, 130,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=10 */
%   | | | else return 0.05158001001334079;  // std dev = 6,666, 279,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=57 */
%   | else return -0.12315380034135227;  // std dev = 0,152, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14901244873754133;  // std dev = 0,499, 113,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=57 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04976780343740993;  // std dev = 3,011, 143,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=10 */
%   | | | else return 0.02820332091827482;  // std dev = 6,734, 304,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=57 */
%   | else return -0.1124550206580159;  // std dev = 0,134, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19248528685590804;  // std dev = 0,491, 98,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=57 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04308156490311281;  // std dev = 3,014, 137,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=10 */
%   | | | else return 0.036690268307328945;  // std dev = 6,684, 284,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=57 */
%   | else return -0.09809470418420967;  // std dev = 0,087, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12753296408853831;  // std dev = 0,495, 101,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=57 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06326300495592611;  // std dev = 2,507, 96,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=7 */
%   | | | else return 0.0013149212040431085;  // std dev = 7,009, 381,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=60 */
%   | else return -0.09224782743707689;  // std dev = 0,116, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.05316328245240727;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1600457973931354;  // std dev = 4,438, 85,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=54 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.040767410405168694;  // std dev = 3,022, 138,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=10 */
%   | | | else return 0.01905387809448819;  // std dev = 6,747, 302,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=57 */
%   | else return -0.0797369264047803;  // std dev = 0,048, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1837802277745461;  // std dev = 0,457, 83,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=57 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.023872996372230122;  // std dev = 2,990, 122,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=10 */
%   | | | else return 0.02267394136419508;  // std dev = 6,711, 296,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=57 */
%   | else return -0.07653427001637414;  // std dev = 0,069, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.040900216734873006;  // std dev = 4,807, 96,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=57 */
%   | | | else return -0.04510901330791771;  // std dev = 3,032, 170,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=10 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.040732483764629276;  // std dev = 2,480, 75,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=7 */
%   | | | else return 0.04972654700743589;  // std dev = 6,172, 210,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=50 */
%   | else return -0.07232726457247338;  // std dev = 0,090, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.3573179359352195;  // std dev = 1,120, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.02336377906972738;  // std dev = 5,546, 240,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=63 */
%   | | else return 0.026494404494748297;  // std dev = 0,397, 281,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=57 */
%   | else return -0.0657121551305709;  // std dev = 0,052, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */


Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.218441
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 56.873 seconds
Total inference time: 3.239 seconds
AUC ROC: 0.826968


Results scoring model
   AUC ROC   = 0.888609
   AUC PR    = 0.553231
   CLL	      = -0.221474
   Precision = 0.178531 at threshold = 0.5
   Recall    = 0.696035
   F1        = 0.284173


Total scoring time: 17.592 seconds
Refined model CLL: -0.221474


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.218441
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 80.202 seconds
Total inference time: 3.239 seconds
AUC ROC: 0.826968
Total revision time: 80.202
Best scored revision CLL: -0.221474


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 07:39:10
{'F1': 0.422018, 'Inference time': 3.239, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826968, 'AUC PR': 0.521103, 'parameter_0.4': {'F1': 0.597826, 'Inference time': 2.158, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 2.72, 'CLL': -0.242797}, 'Recall': 0.534884, 'Learning time': 80.202, 'CLL': -0.218441}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5369810518878313;  // std dev = 0,467, 137,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=93 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08078236261041132;  // std dev = 2,741, 131,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=8 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2018989350995083;  // std dev = 0,475, 352,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=121 */
%   else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.4261880474613841;  // std dev = 1,122, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.4809183123709418;  // std dev = 5,239, 131,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=92 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.10930748029303265;  // std dev = 2,169, 87,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=5 */
%   | | | else return 0.24613207500263715;  // std dev = 1,070, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, C), haswordvenue(K, H) )
%   | | | then return -0.07556144695115645;  // std dev = 2,747, 141,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=8 */
%   | | | else return 0.14085316156428837;  // std dev = 1,143, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.23175281540681747;  // std dev = 0,490, 285,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=114 */
%   else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.35101435152439775;  // std dev = 0,472, 144,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=96 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09350298447631065;  // std dev = 2,167, 85,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=5 */
%   | | | else return 0.47523612704611823;  // std dev = 0,782, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03875590386201297;  // std dev = 2,983, 114,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=10 */
%   | | | else return 0.23864998270336754;  // std dev = 7,977, 258,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=114 */
%   else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5800949263589176;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3808795757652394;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.26215187511641397;  // std dev = 0,475, 140,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=92 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06445202354031965;  // std dev = 2,749, 145,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=8 */
%   | | | else return 0.20841652417781634;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.059944458439033774;  // std dev = 2,434, 80,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=7 */
%   | | | else return 0.15966919143417163;  // std dev = 8,241, 282,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=114 */
%   else return -0.1015963294878363;  // std dev = 2,24e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2811106472312128;  // std dev = 0,431, 130,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=96 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07737613048849436;  // std dev = 2,170, 90,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=5 */
%   | | | else return 0.21842800345575242;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.04087126959994225;  // std dev = 2,989, 130,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=10 */
%   | | | else return 0.09849696825107324;  // std dev = 8,449, 305,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=114 */
%   else return -0.09269127618926105;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.23137736585068666;  // std dev = 0,422, 126,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=96 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05173256579097046;  // std dev = 2,753, 136,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=8 */
%   | | | else return 0.19167917036790444;  // std dev = 1,077, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.08212175631180614;  // std dev = 0,454, 359,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=121 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3180705869434367;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.4123623382527441;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.14391054342553986;  // std dev = 0,445, 126,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=92 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08193522590437578;  // std dev = 2,177, 96,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=5 */
%   | | | else return 0.320544233458712;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.03631167935024007;  // std dev = 2,976, 138,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=10 */
%   | | | else return 0.08310834572308072;  // std dev = 8,299, 288,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=114 */
%   else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.0718288247089712;  // std dev = 0,451, 140,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=96 */
%   | else return 0.024716223688957695;  // std dev = 0,408, 504,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=131 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08360225279152722;  // std dev = 0,435, 135,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=96 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(H, C) )
%   | | | then return -0.044868617344410194;  // std dev = 2,745, 138,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=8 */
%   | | | else return 0.19933134470278124;  // std dev = 1,008, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.049574791305097204;  // std dev = 2,340, 81,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=7 */
%   | | | else return 0.06790156097995827;  // std dev = 8,241, 282,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=114 */
%   else return -0.0684269778442027;  // std dev = 1,39e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.056358217951167223;  // std dev = 0,437, 137,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=96 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.030670812215669533;  // std dev = 0,915, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.0762590220418442;  // std dev = 2,262, 91,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.18673517753709482;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.035916016833187916;  // std dev = 2,614, 120,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=8 */
%   | | else return 0.07369803405719248;  // std dev = 0,494, 268,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=114 */
%   else return -0.06419184008202625;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */


Results
   AUC ROC   = 0.718503
   AUC PR    = 0.076756
   CLL	      = -0.358727
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 217.95600000000002 seconds
Total inference time: 3.803 seconds
AUC ROC: 0.718503


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 07:42:52
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 3.803, 'Precision': [0.167742, 0.5], 'Learning time': 217.95600000000002, 'AUC PR': 0.076756, 'CLL': -0.358727, 'AUC ROC': 0.718503}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6081489350995104;  // std dev = 0,433, 128,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=96 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08214957236317422;  // std dev = 2,743, 134,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=8 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0640732871227099;  // std dev = 2,541, 90,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=7 */
%   | | | else return 0.2883376143447917;  // std dev = 8,060, 265,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=114 */
%   else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */


Results
   AUC ROC   = 0.718659
   AUC PR    = 0.076768
   CLL	      = -0.218893
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 12.915 seconds
Total inference time: 1.932 seconds
AUC ROC: 0.718659


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 07:43:07
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.932, 'Precision': [nan, 0.5], 'Learning time': 12.915, 'AUC PR': 0.076768, 'CLL': -0.218893, 'AUC ROC': 0.718659}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,39e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.0626943896449624;  // std dev = 12,261, 924,000 (wgt'ed) examples reached here.  /* #neg=735 #pos=189 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.06414540941975024;  // std dev = 12,190, 884,000 (wgt'ed) examples reached here.  /* #neg=695 #pos=189 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,33e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.061764145163190266;  // std dev = 12,143, 860,000 (wgt'ed) examples reached here.  /* #neg=671 #pos=189 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,62e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.04596467076157185;  // std dev = 12,201, 890,000 (wgt'ed) examples reached here.  /* #neg=701 #pos=189 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,83e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.03783368156861611;  // std dev = 12,214, 897,000 (wgt'ed) examples reached here.  /* #neg=708 #pos=189 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.04558820691456394;  // std dev = 12,111, 844,000 (wgt'ed) examples reached here.  /* #neg=655 #pos=189 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,49e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.03112305102511234;  // std dev = 12,171, 874,000 (wgt'ed) examples reached here.  /* #neg=685 #pos=189 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.016692198369609564;  // std dev = 12,246, 915,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=189 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.03228644831675048;  // std dev = 12,105, 841,000 (wgt'ed) examples reached here.  /* #neg=652 #pos=189 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.021743993499423932;  // std dev = 12,147, 862,000 (wgt'ed) examples reached here.  /* #neg=673 #pos=189 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.244228
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 3.735 seconds
Total inference time: 1.934 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.722874
   AUC PR    = 0.479983
   CLL	      = -0.241589
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.445748
   F1        = 0.616633


Total scoring time: 3.493 seconds
Parameter learned model CLL: -0.241589


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.39e-07, 0, 152], 'false': [12.261, 735, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.19, 695, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.33e-07, 0, 152], 'false': [12.143, 671, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.62e-07, 0, 152], 'false': [12.201, 701, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.83e-07, 0, 152], 'false': [12.214, 708, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.111, 655, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.49e-07, 0, 152], 'false': [12.171, 685, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.246, 726, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 152], 'false': [12.105, 652, 189]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.66e-08, 0, 152], 'false': [12.147, 673, 189]}]]
[{'': [5.796532844358712e-15, 0.16270661157024965]}, {'': [-2.4308040960213954e-15, 0.16809007800824105]}, {'': [1.8698493046318425e-15, 0.17146971335857894]}, {'': [1.402386978473882e-15, 0.1672629718469954]}, {'': [5.258951169277057e-16, 0.1663068645764535]}, {'': [-1.8698493046318425e-16, 0.173787370005176]}, {'': [4.0902953538821556e-16, 0.1694843142080656]}, {'': [-3.0385051200267443e-16, 0.16389142703573692]}, {'': [-3.7981314000334304e-17, 0.17422778216860987]}, {'': [2.921639538487254e-17, 0.1711836714918593]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,39e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.39607996958227093;  // std dev = 0,499, 145,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=78 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07781165603349258;  // std dev = 3,488, 203,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=13 */
%   | | | else return 0.06755064450122084;  // std dev = 8,802, 468,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=98 */
%   | else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.35994805854225853;  // std dev = 0,497, 140,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=78 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07354952441592696;  // std dev = 3,497, 220,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=13 */
%   | | | else return 0.05604124108271167;  // std dev = 8,819, 475,000 (wgt'ed) examples reached here.  /* #neg=377 #pos=98 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,33e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.31314508510242245;  // std dev = 5,768, 136,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=78 */
%   | | | else return -0.07239575373068481;  // std dev = 2,868, 108,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=9 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05841516343739321;  // std dev = 3,485, 197,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=13 */
%   | | | else return 0.1065232757249564;  // std dev = 8,093, 337,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=89 */
%   | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,62e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.017320991349512895;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.3074653334368117;  // std dev = 5,215, 117,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=74 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06113095908071342;  // std dev = 3,501, 228,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=13 */
%   | | | else return 0.047021939165557906;  // std dev = 8,738, 461,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=98 */
%   | else return -0.10159632948783616;  // std dev = 5,58e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,83e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.01353269507467156;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.19158894687674538;  // std dev = 5,526, 126,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=74 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08623524705876619;  // std dev = 2,896, 133,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=9 */
%   | | | else return 0.03730625713304228;  // std dev = 8,931, 531,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=102 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1654136518018085;  // std dev = 0,485, 131,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=78 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05228918944242106;  // std dev = 3,489, 206,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=13 */
%   | | | else return 0.04737911627899907;  // std dev = 8,664, 444,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=98 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,49e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.06948394127003418;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.09470865358610804;  // std dev = 5,587, 128,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=74 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07626668301827294;  // std dev = 2,887, 129,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=9 */
%   | | | else return 0.028388997615717955;  // std dev = 8,917, 533,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=102 */
%   | else return -0.07877675473109166;  // std dev = 3,80e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.09652198964092931;  // std dev = 5,615, 132,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=78 */
%   | | | else return -0.05105546571107066;  // std dev = 3,491, 211,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=13 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07110340387238989;  // std dev = 2,895, 131,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=9 */
%   | | | else return 0.09843457363920483;  // std dev = 7,923, 302,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.08926561618746358;  // std dev = 5,481, 129,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=78 */
%   | | | else return -0.054859597433786524;  // std dev = 3,508, 245,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=13 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06115924614106222;  // std dev = 2,893, 128,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=9 */
%   | | | else return 0.04571064781347955;  // std dev = 8,127, 345,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=89 */
%   | else return -0.06842697784420267;  // std dev = 3,65e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.012831127448266203;  // std dev = 5,853, 142,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=78 */
%   | | | else return -0.07685780153265223;  // std dev = 2,392, 146,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=6 */
%   | | else return 0.15598086908301725;  // std dev = 0,416, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.043159158398131614;  // std dev = 3,214, 192,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=11 */
%   | | | else return 0.2969158408303077;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05639355732767901;  // std dev = 8,025, 322,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=89 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */


Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.235442
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 82.229 seconds
Total inference time: 3.37 seconds
AUC ROC: 0.826968


Results scoring model
   AUC ROC   = 0.883739
   AUC PR    = 0.543306
   CLL	      = -0.227163
   Precision = 0.175466 at threshold = 0.5
   Recall    = 0.662757
   F1        = 0.277471


Total scoring time: 11.01 seconds
Refined model CLL: -0.227163


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.235442
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 100.467 seconds
Total inference time: 3.37 seconds
AUC ROC: 0.826968
Total revision time: 100.467
Best scored revision CLL: -0.227163


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 07:44:54
{'F1': 0.422018, 'Inference time': 3.37, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826968, 'AUC PR': 0.521103, 'parameter_0.6': {'F1': 0.597826, 'Inference time': 1.934, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 3.735, 'CLL': -0.244228}, 'Recall': 0.534884, 'Learning time': 100.467, 'CLL': -0.235442}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5031489350995092;  // std dev = 0,479, 200,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=129 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.05814893509951233;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return -0.0997458017425931;  // std dev = 2,768, 190,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=8 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06220504720137262;  // std dev = 2,878, 113,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=9 */
%   | | | else return 0.281311518618439;  // std dev = 10,469, 449,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=190 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.2468430069644927;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.45743569296701353;  // std dev = 6,350, 183,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=123 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07718405747467315;  // std dev = 3,205, 197,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=11 */
%   | | | else return 0.20319608604041592;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H), haswordvenue(K, C) )
%   | | | then return -0.08402607464808384;  // std dev = 2,387, 119,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=6 */
%   | | | else return 0.36555375728468925;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.25413522595241417;  // std dev = 0,496, 438,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=190 */
%   else return -0.12544463852839158;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3838005213113158;  // std dev = 0,464, 189,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=129 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.072144122946379;  // std dev = 3,212, 211,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=11 */
%   | | | else return 0.17478116105158656;  // std dev = 1,161, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.053458812145924704;  // std dev = 2,838, 121,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=9 */
%   | | | else return 0.203916072293325;  // std dev = 10,460, 448,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=190 */
%   else return -0.1123163781936062;  // std dev = 8,43e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.33215583154136785;  // std dev = 0,449, 180,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=129 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.07011076845655624;  // std dev = 2,389, 122,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=6 */
%   | | | else return 0.4249296334254523;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.053705592558127846;  // std dev = 3,442, 204,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=13 */
%   | | | else return 0.21194809546593857;  // std dev = 10,043, 405,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=190 */
%   else return -0.10159632948783615;  // std dev = 5,67e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.01725510871225563;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.28082561071749945;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | else if ( haswordvenue(G, D), haswordvenue(G, C) )
%   | | | then return -0.06741598337368537;  // std dev = 2,397, 132,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=6 */
%   | | | else return 0.2549483753409067;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return 0.053459242036630064;  // std dev = 2,027, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.07063641513563773;  // std dev = 2,736, 198,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=8 */
%   | | else return 0.13707368560872155;  // std dev = 0,496, 435,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=190 */
%   else return -0.09269127618926107;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.5869344419467495;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12740600704990093;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return -0.21306555805325048;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.12557450521839952;  // std dev = 6,368, 182,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=121 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05748896289432652;  // std dev = 2,400, 120,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=6 */
%   | | | else return 0.17298951681510008;  // std dev = 1,221, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.06946325734581862;  // std dev = 0,439, 620,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=203 */
%   else return -0.08518475138839679;  // std dev = 3,16e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.09789473734244616;  // std dev = 0,470, 195,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=129 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.051763188968276884;  // std dev = 2,390, 123,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=6 */
%   | | | else return 0.28763075526225823;  // std dev = 1,043, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.08112498869286182;  // std dev = 1,510, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.059438809540025006;  // std dev = 3,033, 188,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=10 */
%   | | else if ( haswordvenue(J, C) )
%   | | | then return 0.09514363985197591;  // std dev = 10,124, 416,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=183 */
%   | | | else return 0.2916034300617692;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.0787767547310917;  // std dev = 2,98e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.48310579054035235;  // std dev = 0,228, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.38545027839110124;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.09692415157969682;  // std dev = 0,462, 178,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=123 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.059161085585583355;  // std dev = 3,207, 219,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=11 */
%   | | | else return 0.1732142155278612;  // std dev = 1,150, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.044333490526250026;  // std dev = 2,711, 137,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=9 */
%   | | | else return 0.06539223122369081;  // std dev = 10,366, 439,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=190 */
%   else return -0.07324622576333704;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.07469618097837867;  // std dev = 0,452, 190,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=129 */
%   | | else if ( haswordvenue(F, D), haswordvenue(G, C) )
%   | | | then return -0.048454664670231705;  // std dev = 3,197, 201,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=11 */
%   | | | else return 0.09477227977051716;  // std dev = 1,175, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.047489745127915414;  // std dev = 2,408, 127,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=6 */
%   | | | else return 0.3615768566718629;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(K, C) )
%   | | | then return 0.06556222438533167;  // std dev = 10,056, 409,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=183 */
%   | | | else return 0.20717358492475715;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.06842697784420267;  // std dev = 3,25e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.05368509729548547;  // std dev = 0,453, 191,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=129 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return 0.10693529598691491;  // std dev = 1,960, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.04785834822922513;  // std dev = 2,707, 157,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=8 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return 0.19771339468773444;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.04746660294906337;  // std dev = 2,328, 111,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=7 */
%   | | else return 0.08165895033811782;  // std dev = 0,499, 395,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=190 */
%   else return -0.06419184008202625;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */


Results
   AUC ROC   = 0.718373
   AUC PR    = 0.07675
   CLL	      = -0.394397
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 592.641 seconds
Total inference time: 4.127 seconds
AUC ROC: 0.718373


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 07:54:51
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 4.127, 'Precision': [0.167742, 0.5], 'Learning time': 592.641, 'AUC PR': 0.07675, 'CLL': -0.394397, 'AUC ROC': 0.718373}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.5816783468642155;  // std dev = 0,447, 170,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=123 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0789939220433448;  // std dev = 3,211, 175,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=11 */
%   | | | else return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.0655798784598097;  // std dev = 2,883, 118,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=9 */
%   | | | else return 0.2969480113119792;  // std dev = 10,326, 433,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=190 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */


Results
   AUC ROC   = 0.718659
   AUC PR    = 0.076768
   CLL	      = -0.219636
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 24.9 seconds
Total inference time: 2.147 seconds
AUC ROC: 0.718659


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 07:55:19
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.147, 'Precision': [nan, 0.5], 'Learning time': 24.9, 'AUC PR': 0.076768, 'CLL': -0.219636, 'AUC ROC': 0.718659}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else return 0.07617468617246881;  // std dev = 14,093, 1.165,000 (wgt'ed) examples reached here.  /* #neg=911 #pos=254 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else return 0.0622457998954349;  // std dev = 14,133, 1.189,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=254 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,36e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else return 0.05680426419964939;  // std dev = 14,108, 1.174,000 (wgt'ed) examples reached here.  /* #neg=920 #pos=254 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583101;  // std dev = 2,67e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else return 0.04208292071540917;  // std dev = 14,171, 1.213,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=254 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 4,09e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else return 0.044205098704313724;  // std dev = 14,098, 1.168,000 (wgt'ed) examples reached here.  /* #neg=914 #pos=254 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694885;  // std dev = 4,38e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else return 0.03448087092256098;  // std dev = 14,128, 1.186,000 (wgt'ed) examples reached here.  /* #neg=932 #pos=254 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253498;  // std dev = 3,01e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else return 0.030431192413410264;  // std dev = 14,118, 1.180,000 (wgt'ed) examples reached here.  /* #neg=926 #pos=254 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527797;  // std dev = 0,000, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else return 0.030652032070586074;  // std dev = 14,075, 1.154,000 (wgt'ed) examples reached here.  /* #neg=900 #pos=254 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else return 0.009158952918542362;  // std dev = 14,225, 1.249,000 (wgt'ed) examples reached here.  /* #neg=995 #pos=254 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 1,38e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else return 0.01584939980473692;  // std dev = 14,152, 1.201,000 (wgt'ed) examples reached here.  /* #neg=947 #pos=254 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.240995
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 4.093 seconds
Total inference time: 2.004 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.720879
   AUC PR    = 0.476069
   CLL	      = -0.238474
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.441758
   F1        = 0.612805


Total scoring time: 3.908 seconds
Parameter learned model CLL: -0.238474


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 201], 'false': [14.093, 911, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 201], 'false': [14.133, 935, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.36e-07, 0, 201], 'false': [14.108, 920, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.67e-07, 0, 201], 'false': [14.171, 959, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.09e-07, 0, 201], 'false': [14.098, 914, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.38e-07, 0, 201], 'false': [14.128, 932, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.01e-07, 0, 201], 'false': [14.118, 926, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 201], 'false': [14.075, 900, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 201], 'false': [14.225, 995, 254]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.38e-07, 0, 201], 'false': [14.152, 947, 254]}]]
[{'': [5.797463117644598e-15, 0.1704905229420338]}, {'': [-3.676440025823404e-15, 0.16798929916156927]}, {'': [2.0149719372301348e-15, 0.1695451419019089]}, {'': [3.535038486368658e-16, 0.16555058588294252]}, {'': [8.307340442966345e-16, 0.17017439951210622]}, {'': [9.544603913195376e-16, 0.16829850219962947]}, {'': [4.507174070120039e-16, 0.16891985061762832]}, {'': [-8.395716405125562e-17, 0.17165822142258405]}, {'': [-1.1488875080698137e-16, 0.16200630640622046]}, {'': [9.500415932115767e-17, 0.1667622249291285]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995092;  // std dev = 1,08e-06, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.14386322081379804;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.4467203636709381;  // std dev = 6,510, 175,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=103 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08882076187018496;  // std dev = 3,641, 264,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=14 */
%   | | | else return 0.09026062794418603;  // std dev = 10,106, 573,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=133 */
%   | else return -0.14185106490048763;  // std dev = 8,69e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210957;  // std dev = 0,000, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3771837154638724;  // std dev = 0,491, 185,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=107 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07854879521267144;  // std dev = 3,641, 265,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=14 */
%   | | | else return 0.05173313909568393;  // std dev = 10,283, 649,000 (wgt'ed) examples reached here.  /* #neg=516 #pos=133 */
%   | else return -0.12544463852839133;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,36e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.27596145828627927;  // std dev = 0,496, 196,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=107 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0968993019639232;  // std dev = 3,352, 196,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=12 */
%   | | | else return 0.050105368804348724;  // std dev = 10,300, 686,000 (wgt'ed) examples reached here.  /* #neg=551 #pos=135 */
%   | else return -0.11231637819360621;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583101;  // std dev = 2,67e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.2686525233120298;  // std dev = 6,533, 180,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=107 */
%   | | | else return -0.08389615029863579;  // std dev = 3,350, 196,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=12 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07780724335008787;  // std dev = 3,646, 278,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=14 */
%   | | | else return 0.10937545277854652;  // std dev = 9,358, 438,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=121 */
%   | else return -0.1015963294878363;  // std dev = 2,11e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.320711847160149;  // std dev = 4,09e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15851103728480154;  // std dev = 0,497, 195,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=107 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06081733339972985;  // std dev = 3,629, 240,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=14 */
%   | | | else return 0.04536209962057051;  // std dev = 10,115, 618,000 (wgt'ed) examples reached here.  /* #neg=485 #pos=133 */
%   | else return -0.09269127618926094;  // std dev = 5,37e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694885;  // std dev = 4,38e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.16497278226870055;  // std dev = 6,566, 181,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=107 */
%   | | | else return -0.06395853718697052;  // std dev = 3,648, 284,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=14 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07813540870926507;  // std dev = 3,350, 186,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=12 */
%   | | | else return 0.08993052087791155;  // std dev = 9,337, 433,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=121 */
%   | else return -0.08518475138839682;  // std dev = 5,58e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253498;  // std dev = 3,01e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.03507069933608952;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.10562500326456123;  // std dev = 6,588, 178,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=103 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07174416676707598;  // std dev = 3,355, 198,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=12 */
%   | | | else return 0.017355067115450044;  // std dev = 10,227, 729,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=135 */
%   | else return -0.07877675473109158;  // std dev = 5,96e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527797;  // std dev = 0,000, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.10461555486468677;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.09596900137712819;  // std dev = 6,456, 173,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=103 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05818769317420568;  // std dev = 3,645, 278,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=14 */
%   | | | else return 0.048600490861424726;  // std dev = 9,943, 570,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=133 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367166;  // std dev = 0,000, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.06607409863723922;  // std dev = 6,656, 185,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=107 */
%   | | | else return -0.05068662166366096;  // std dev = 3,641, 269,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=14 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.04794876453917062;  // std dev = 3,318, 145,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=12 */
%   | | | else return 0.0841418212744184;  // std dev = 9,211, 405,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=121 */
%   | else return -0.06842697784420265;  // std dev = 4,53e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 1,38e-07, 201,000 (wgt'ed) examples reached here.  /* #pos=201 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.09548348015585763;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.09596956398645805;  // std dev = 6,125, 162,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=103 */
%   | | else return -0.005091406326857944;  // std dev = 0,361, 884,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=147 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.236256
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 97.34100000000001 seconds
Total inference time: 3.157 seconds
AUC ROC: 0.826968


Results scoring model
   AUC ROC   = 0.884616
   AUC PR    = 0.540885
   CLL	      = -0.229408
   Precision = 0.173417 at threshold = 0.5
   Recall    = 0.668132
   F1        = 0.275362


Total scoring time: 15.71 seconds
Refined model CLL: -0.229408


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.236256
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 121.05200000000002 seconds
Total inference time: 3.157 seconds
AUC ROC: 0.826968
Total revision time: 121.05200000000002
Best scored revision CLL: -0.229408


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 07:57:26
{'F1': 0.422018, 'Inference time': 3.157, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826968, 'parameter_0.8': {'F1': 0.597826, 'Inference time': 2.004, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 4.093, 'CLL': -0.240995}, 'AUC PR': 0.521103, 'Recall': 0.534884, 'Learning time': 121.05200000000002, 'CLL': -0.236256}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.324815601766179;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.552026486119917;  // std dev = 7,214, 245,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=170 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08524729131558198;  // std dev = 2,914, 159,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=9 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09802636370526893;  // std dev = 3,243, 251,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=11 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.3105726334837089;  // std dev = 0,498, 557,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=252 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.504626855722751;  // std dev = 0,445, 244,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=177 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08898932436588097;  // std dev = 3,252, 261,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=11 */
%   | | | else return 0.2176636542836508;  // std dev = 1,336, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.19709967161905015;  // std dev = 0,475, 714,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=264 */
%   else return -0.12544463852839133;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7252306138892421;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.274769386110758;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.3950268223762114;  // std dev = 0,450, 237,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=170 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.06844896514661912;  // std dev = 2,019, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return -0.08839073782916719;  // std dev = 2,886, 245,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.07694987573822347;  // std dev = 3,233, 146,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=12 */
%   | | | else return 0.24439492969571874;  // std dev = 11,667, 548,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=252 */
%   else return -0.1123163781936062;  // std dev = 8,02e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5610259665485405;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.22351011798187495;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.19156769351428737;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.27192436997777325;  // std dev = 7,266, 245,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=168 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H), haswordvenue(K, C) )
%   | | | then return -0.07209413305223346;  // std dev = 3,234, 260,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=11 */
%   | | | else return 0.21261970684116374;  // std dev = 1,306, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(B, L), haswordauthor(M, L) )
%   | | | then return -0.0729613321849749;  // std dev = 3,248, 158,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=12 */
%   | | | else return 0.19199063904339414;  // std dev = 11,756, 558,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=252 */
%   else return -0.1015963294878363;  // std dev = 1,49e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.48174198778406946;  // std dev = 0,251, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.3682137462041282;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.2181680494526938;  // std dev = 0,453, 245,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=170 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.005371362060338769;  // std dev = 2,095, 39,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | | else return -0.0725277211067817;  // std dev = 2,860, 237,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.07109096019301016;  // std dev = 3,264, 175,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=12 */
%   | | | else return 0.13405914986849932;  // std dev = 11,961, 583,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=252 */
%   else return -0.09269127618926107;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.3688472076606467;  // std dev = 0,092, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.156901567956032;  // std dev = 0,455, 248,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=170 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.05834669755065171;  // std dev = 3,226, 253,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=11 */
%   | | | else return 0.18481904109197275;  // std dev = 1,317, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.0646232482787302;  // std dev = 3,270, 180,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=12 */
%   | | | else return 0.1354068475409368;  // std dev = 11,640, 545,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=252 */
%   else return -0.08518475138839682;  // std dev = 4,71e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13622815006388356;  // std dev = 0,438, 253,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=177 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.06519937774840041;  // std dev = 1,556, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.05298830097653504;  // std dev = 3,123, 234,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=11 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.054204846361083074;  // std dev = 3,270, 170,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=12 */
%   | | | else return 0.08700064259938492;  // std dev = 11,832, 567,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=252 */
%   else return -0.07877675473109158;  // std dev = 5,87e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10348959231085351;  // std dev = 0,440, 252,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=177 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0703048421722041;  // std dev = 2,934, 195,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=9 */
%   | | | else return 0.30623478085880423;  // std dev = 1,189, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03892321647714578;  // std dev = 3,512, 251,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=14 */
%   | | | else return 0.06993819202351628;  // std dev = 11,798, 563,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=252 */
%   else return -0.07324622576333707;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.22142514384304227;  // std dev = 0,103, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2985840338996832;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.10129627690999851;  // std dev = 0,443, 232,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=170 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.03747856209044829;  // std dev = 2,066, 33,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return -0.055819369641575;  // std dev = 2,836, 264,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=9 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.043977240994398585;  // std dev = 3,234, 172,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=12 */
%   | | | else return 0.04326317313045833;  // std dev = 11,906, 576,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=252 */
%   else return -0.06842697784420265;  // std dev = 4,59e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.06003221973218521;  // std dev = 0,438, 251,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=177 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.2264935764759829;  // std dev = 1,384, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.050375552609388724;  // std dev = 3,167, 273,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=11 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.048094692950047084;  // std dev = 2,913, 158,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=9 */
%   | | | else return 0.4950386471483478;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06641348632218531;  // std dev = 0,499, 535,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=252 */
%   else return -0.06419184008202626;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */


Results
   AUC ROC   = 0.717672
   AUC PR    = 0.076724
   CLL	      = -0.399445
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 645.404 seconds
Total inference time: 4.186 seconds
AUC ROC: 0.717672


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 08:08:16
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 4.186, 'Precision': [0.167742, 0.5], 'Learning time': 645.404, 'AUC PR': 0.076724, 'CLL': -0.399445, 'AUC ROC': 0.717672}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.5552443707841561;  // std dev = 7,134, 241,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=168 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10095887159193796;  // std dev = 3,248, 269,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=11 */
%   | | | else return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.07167562630399642;  // std dev = 3,340, 171,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=12 */
%   | | | else return 0.3130225813088941;  // std dev = 11,721, 554,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=252 */
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 0.718659
   AUC PR    = 0.076768
   CLL	      = -0.220318
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 36.018 seconds
Total inference time: 1.847 seconds
AUC ROC: 0.718659


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 08:08:54
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.847, 'Precision': [nan, 0.5], 'Learning time': 36.018, 'AUC PR': 0.076768, 'CLL': -0.220318, 'AUC ROC': 0.718659}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,07e-06, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.07577978909399774;  // std dev = 15,724, 1.452,000 (wgt'ed) examples reached here.  /* #neg=1.136 #pos=316 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.06585375847318785;  // std dev = 15,728, 1.455,000 (wgt'ed) examples reached here.  /* #neg=1.139 #pos=316 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,46e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.059463041280922356;  // std dev = 15,705, 1.440,000 (wgt'ed) examples reached here.  /* #neg=1.124 #pos=316 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.04394560282479716;  // std dev = 15,779, 1.490,000 (wgt'ed) examples reached here.  /* #neg=1.174 #pos=316 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601501;  // std dev = 1,88e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.041328299003201;  // std dev = 15,743, 1.465,000 (wgt'ed) examples reached here.  /* #neg=1.149 #pos=316 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,21e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.03311199068023552;  // std dev = 15,765, 1.480,000 (wgt'ed) examples reached here.  /* #neg=1.164 #pos=316 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.03516713527773671;  // std dev = 15,694, 1.433,000 (wgt'ed) examples reached here.  /* #neg=1.117 #pos=316 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.020794539392115303;  // std dev = 15,785, 1.494,000 (wgt'ed) examples reached here.  /* #neg=1.178 #pos=316 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.02131049122467657;  // std dev = 15,747, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.152 #pos=316 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801112;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.017957227610686945;  // std dev = 15,747, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.152 #pos=316 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.243289
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 4.795 seconds
Total inference time: 1.832 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.72232
   AUC PR    = 0.478862
   CLL	      = -0.240698
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44464
   F1        = 0.615572


Total scoring time: 4.533 seconds
Parameter learned model CLL: -0.240698


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.07e-06, 0, 253], 'false': [15.724, 1136, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.728, 1139, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.46e-07, 0, 253], 'false': [15.705, 1124, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.779, 1174, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.88e-07, 0, 253], 'false': [15.743, 1149, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.21e-07, 0, 253], 'false': [15.765, 1164, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 253], 'false': [15.694, 1117, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.785, 1178, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.747, 1152, 316]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 253], 'false': [15.747, 1152, 316]}]]
[{'': [4.49355089808759e-15, 0.1702676653841202]}, {'': [-4.3812121256354e-15, 0.17001405273911055]}, {'': [7.863714071653283e-16, 0.17128858024692242]}, {'': [-3.3701631735656924e-16, 0.16710238277554088]}, {'': [1.404234655652372e-16, 0.16917331593845927]}, {'': [4.0722805013918787e-16, 0.167925493060634]}, {'': [3.2297397080004555e-16, 0.17188891686294977]}, {'': [-1.4042346556523718e-17, 0.16677508785699885]}, {'': [-1.6148698540002277e-16, 0.16892248067771815]}, {'': [-1.0531759917392789e-17, 0.16892248067770488]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,07e-06, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4617525387031126;  // std dev = 0,489, 222,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09665332478749376;  // std dev = 3,909, 354,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=16 */
%   | | | else return 0.07289667119265171;  // std dev = 11,417, 773,000 (wgt'ed) examples reached here.  /* #neg=607 #pos=166 */
%   | else return -0.14185106490048774;  // std dev = 4,71e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3347117108138265;  // std dev = 7,830, 247,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=134 */
%   | | | else return -0.07759545061321908;  // std dev = 3,849, 222,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=16 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08300997624217382;  // std dev = 3,904, 337,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=16 */
%   | | | else return 0.1386168187029635;  // std dev = 10,323, 518,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=150 */
%   | else return -0.12544463852839105;  // std dev = 8,43e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,46e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3068604773153437;  // std dev = 7,546, 233,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=134 */
%   | | | else return -0.0734042065729679;  // std dev = 3,860, 240,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=16 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07212396554220586;  // std dev = 3,900, 325,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=16 */
%   | | | else return 0.10664615300310362;  // std dev = 10,419, 543,000 (wgt'ed) examples reached here.  /* #neg=393 #pos=150 */
%   | else return -0.11231637819360621;  // std dev = 8,69e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.1674502256885973;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return -0.06261501001699397;  // std dev = 3,856, 232,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=16 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06736028456463437;  // std dev = 3,906, 344,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=16 */
%   | | | else return 0.08366759916221454;  // std dev = 10,473, 558,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=150 */
%   | else return -0.10159632948783666;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601501;  // std dev = 1,88e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.20195192111548574;  // std dev = 0,495, 234,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05729498698747075;  // std dev = 3,899, 320,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=16 */
%   | | | else return 0.03437466210194433;  // std dev = 11,285, 778,000 (wgt'ed) examples reached here.  /* #neg=612 #pos=166 */
%   | else return -0.09269127618926085;  // std dev = 7,22e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,21e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11709573893535488;  // std dev = 0,499, 250,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.059003667615691646;  // std dev = 3,913, 373,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=16 */
%   | | | else return 0.02167233978988922;  // std dev = 11,341, 806,000 (wgt'ed) examples reached here.  /* #neg=640 #pos=166 */
%   | else return -0.0851847513883968;  // std dev = 6,75e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.07578927067147347;  // std dev = 0,499, 256,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=134 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05011871969725377;  // std dev = 3,906, 344,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=16 */
%   | | | else return 0.0460916796640204;  // std dev = 11,111, 720,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=166 */
%   | else return -0.07877675473109154;  // std dev = 7,22e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.10375932230599591;  // std dev = 7,589, 235,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=134 */
%   | | | else return -0.04429992356834519;  // std dev = 3,903, 333,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=16 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05954949829046233;  // std dev = 3,842, 206,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=16 */
%   | | | else return 0.07813551797961532;  // std dev = 10,298, 512,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=150 */
%   | else return -0.07324622576333714;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.07305744393450306;  // std dev = 7,631, 237,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=134 */
%   | | | else return -0.04218889401352584;  // std dev = 3,906, 344,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=16 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.049918392392662575;  // std dev = 3,836, 199,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=16 */
%   | | | else return 0.04947130110047361;  // std dev = 10,408, 540,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=150 */
%   | else return -0.06842697784420264;  // std dev = 6,23e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801112;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.03633320409544522;  // std dev = 7,792, 245,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=134 */
%   | | | else return -0.055197598533953875;  // std dev = 3,857, 235,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=16 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03453506210618436;  // std dev = 3,897, 315,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=16 */
%   | | | else return 0.051877958489586734;  // std dev = 10,327, 519,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=150 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */


Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.242691
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 133.947 seconds
Total inference time: 3.383 seconds
AUC ROC: 0.826968


Results scoring model
   AUC ROC   = 0.885201
   AUC PR    = 0.539711
   CLL	      = -0.227753
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total scoring time: 17.5 seconds
Refined model CLL: -0.227753


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.242691
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 160.775 seconds
Total inference time: 3.383 seconds
AUC ROC: 0.826968
Total revision time: 160.775
Best scored revision CLL: -0.227753


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:11:41
{'parameter_1.0': {'F1': 0.597826, 'Inference time': 1.832, 'Precision': [1.0, 0.5], 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'Learning time': 4.795, 'CLL': -0.243289}, 'F1': 0.422018, 'Inference time': 3.383, 'Precision': [0.348485, 0.5], 'AUC ROC': 0.826968, 'AUC PR': 0.521103, 'Recall': 0.534884, 'Learning time': 160.775, 'CLL': -0.242691}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5487739350995084;  // std dev = 0,462, 320,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(H, C) )
%   | | | then return -0.1043510649004882;  // std dev = 3,399, 320,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=12 */
%   | | | else return 0.22178529873587588;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.06380228441268276;  // std dev = 3,841, 205,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=16 */
%   | | | else return 0.3051079167119547;  // std dev = 13,220, 707,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=316 */
%   else return -0.14185106490048796;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.44720899641485773;  // std dev = 0,470, 330,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=221 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E), haswordvenue(G, C) )
%   | | | then return -0.07813707143806428;  // std dev = 3,366, 213,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=12 */
%   | | | else return 0.5324061866633537;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.08510795200039052;  // std dev = 3,877, 339,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=16 */
%   | | | else return 0.2593884432106487;  // std dev = 13,272, 714,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=316 */
%   else return -0.12544463852839108;  // std dev = 7,74e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3946547706666054;  // std dev = 0,457, 314,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08648477291909386;  // std dev = 3,413, 339,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=12 */
%   | | | else return 0.14815986523676886;  // std dev = 1,665, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.16255085509595224;  // std dev = 0,471, 903,000 (wgt'ed) examples reached here.  /* #neg=571 #pos=332 */
%   else return -0.11231637819360617;  // std dev = 9,88e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6009349599756134;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.3990650400243866;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.2804221394627954;  // std dev = 0,467, 312,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=212 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07477978874482501;  // std dev = 3,402, 323,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=12 */
%   | | | else return 0.18336761917247982;  // std dev = 1,596, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.08090211713683733;  // std dev = 3,795, 236,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=16 */
%   | | | else return 0.2085011567060619;  // std dev = 13,022, 682,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=316 */
%   else return -0.1015963294878364;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4522527724938193;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.30822572168136764;  // std dev = 1,49e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.2160614209795372;  // std dev = 0,465, 310,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=212 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06641916161784907;  // std dev = 3,398, 316,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=12 */
%   | | | else return 0.0985633757835591;  // std dev = 1,665, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.06806454261217847;  // std dev = 3,790, 227,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=16 */
%   | | | else return 0.1455479291690423;  // std dev = 13,279, 715,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=316 */
%   else return -0.09269127618926085;  // std dev = 7,30e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16426785056073226;  // std dev = 0,451, 326,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06300251977416761;  // std dev = 3,405, 334,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=12 */
%   | | | else return 0.13779821550335175;  // std dev = 1,596, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0511452415427948;  // std dev = 3,775, 200,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=16 */
%   | | | else return 0.11247697908273947;  // std dev = 13,301, 718,000 (wgt'ed) examples reached here.  /* #neg=402 #pos=316 */
%   else return -0.08518475138839682;  // std dev = 5,87e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.14439739167843268;  // std dev = 0,444, 315,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.07382056070039861;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.05777652425715376;  // std dev = 3,417, 308,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=13 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05027080373917854;  // std dev = 3,793, 209,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=16 */
%   | | | else return 0.089083300312308;  // std dev = 13,279, 715,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=316 */
%   else return -0.07877675473109153;  // std dev = 7,67e-08, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.27838420269792086;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.30831944530729666;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.10664403387484747;  // std dev = 0,456, 301,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=212 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05435534610414633;  // std dev = 3,402, 337,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=12 */
%   | | | else return 0.09300561943906786;  // std dev = 1,634, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04468846903765706;  // std dev = 3,788, 213,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=16 */
%   | | | else return 0.0648065258942288;  // std dev = 13,323, 721,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=316 */
%   else return -0.07324622576333721;  // std dev = 0,000, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.04047969028573513;  // std dev = 0,464, 335,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=221 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.0067178793858903366;  // std dev = 2,136, 50,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | | else return -0.05670789466867272;  // std dev = 3,123, 317,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=11 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.053492466695701624;  // std dev = 3,374, 196,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=12 */
%   | | | else return 0.6121309497967846;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.06331662559978526;  // std dev = 0,498, 699,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=316 */
%   else return -0.06842697784420264;  // std dev = 5,77e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.055035645194878954;  // std dev = 0,452, 325,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=221 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.0464772770433855;  // std dev = 3,397, 341,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=12 */
%   | | | else return 0.1520886425283105;  // std dev = 1,553, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03594428659679892;  // std dev = 3,683, 213,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=16 */
%   | | | else return 0.0501179691663584;  // std dev = 13,135, 696,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=316 */
%   else return -0.06419184008202626;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */


Results
   AUC ROC   = 0.718177
   AUC PR    = 0.076752
   CLL	      = -0.39295
   Precision = 0.167742 at threshold = 0.5
   Recall    = 0.20155
   F1        = 0.183099


Total learning time: 374.587 seconds
Total inference time: 4.033 seconds
AUC ROC: 0.718177


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 08:18:00
{'F1': 0.183099, 'Recall': 0.20155, 'Inference time': 4.033, 'Precision': [0.167742, 0.5], 'Learning time': 374.587, 'AUC PR': 0.076752, 'CLL': -0.39295, 'AUC ROC': 0.718177}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.5333081707682983;  // std dev = 0,468, 314,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=212 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G), haswordvenue(J, C) )
%   | | | then return -0.10676334560224243;  // std dev = 3,403, 342,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=12 */
%   | | | else return 0.16584124279181994;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.06341969235146803;  // std dev = 3,840, 204,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=16 */
%   | | | else return 0.30134669106023704;  // std dev = 13,265, 713,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=316 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */


Results
   AUC ROC   = 0.718659
   AUC PR    = 0.076768
   CLL	      = -0.2193
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 39.376 seconds
Total inference time: 1.912 seconds
AUC ROC: 0.718659


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 08:18:42
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.912, 'Precision': [nan, 0.5], 'Learning time': 39.376, 'AUC PR': 0.076768, 'CLL': -0.2193, 'AUC ROC': 0.718659}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 544
Target train neg examples: 22302

Target test facts examples: 8644
Target test pos	 examples: 154
Target test neg examples: 5694

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 8,43e-08, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else return 0.06887690444817145;  // std dev = 6,589, 261,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=55 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else return 0.040528242340166644;  // std dev = 6,671, 288,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=55 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 5,96e-08, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else return 0.03661006515044926;  // std dev = 6,665, 286,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=55 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else return 0.04619579620335269;  // std dev = 6,605, 266,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=55 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014955;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else return 0.06227085735921352;  // std dev = 6,511, 240,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=55 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else return 0.02647135064403413;  // std dev = 6,624, 272,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=55 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else return 0.03608434629016423;  // std dev = 6,568, 255,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=55 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452774;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else return 0.013575579150281718;  // std dev = 6,639, 277,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=55 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else return 0.012964173642766594;  // std dev = 6,633, 275,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=55 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else return 0.0275203569633732;  // std dev = 6,564, 254,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=55 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.23372
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 2.006 seconds
Total inference time: 2.299 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.74537
   AUC PR    = 0.524279
   CLL	      = -0.230951
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.490741
   F1        = 0.658385


Total scoring time: 2.199 seconds
Parameter learned model CLL: -0.230951


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.43e-08, 0, 53], 'false': [6.589, 206, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 53], 'false': [6.671, 233, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.96e-08, 0, 53], 'false': [6.665, 231, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 53], 'false': [6.605, 211, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 53], 'false': [6.511, 185, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 53], 'false': [6.624, 217, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 53], 'false': [6.568, 200, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 53], 'false': [6.639, 222, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 53], 'false': [6.633, 220, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.49e-08, 0, 53], 'false': [6.564, 199, 55]}]]
[{'': [1.340646671245472e-16, 0.16632169228285054]}, {'': [-3.3516166781136804e-16, 0.15450183256172578]}, {'': [6.70323335622736e-17, 0.1553254437869814]}, {'': [-3.6867783459250483e-16, 0.16401435920628385]}, {'': [-6.70323335622736e-17, 0.17664930555555472]}, {'': [-3.35161667811368e-17, 0.1613186634948121]}, {'': [0.0, 0.1691657054978874]}, {'': [-4.6084729324063104e-17, 0.15913148874610905]}, {'': [-2.51371250858526e-17, 0.16000000000000184]}, {'': [2.3042364662031552e-17, 0.1696478392956799]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 8,43e-08, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.5033102254220925;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return -0.10263537862597792;  // std dev = 1,386, 51,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=2 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05361577078284073;  // std dev = 1,654, 34,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | | else return 0.11676962475468358;  // std dev = 4,716, 116,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=30 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.3735126445316049;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | | | else return -0.07101930249798379;  // std dev = 1,675, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09344685580997841;  // std dev = 1,388, 55,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=2 */
%   | | | else return 0.14636211539670746;  // std dev = 4,573, 99,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 5,96e-08, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1918795015071612;  // std dev = 0,499, 42,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09161360895028231;  // std dev = 1,394, 71,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=2 */
%   | | | else return 0.07548092225966563;  // std dev = 4,964, 137,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=33 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.41583070435689995;  // std dev = 0,438, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07596884241475721;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=2 */
%   | | | else return 0.03367966893761953;  // std dev = 5,056, 160,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=33 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014955;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.2678742837514582;  // std dev = 2,491, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | | else return -0.07282155167521115;  // std dev = 1,393, 66,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=2 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.054263500101754035;  // std dev = 1,656, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | | else return 0.0792711654216902;  // std dev = 4,671, 110,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=30 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.15477075188703127;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10564591477963539;  // std dev = 2,778, 32,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07498278212417556;  // std dev = 1,680, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | | | else return 0.023141531415004503;  // std dev = 4,946, 163,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=32 */
%   | else return -0.08518475138839682;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.04284987138504179;  // std dev = 2,992, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return -0.08434909497876794;  // std dev = 0,993, 88,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=1 */
%   | | else return 0.027256972676957474;  // std dev = 0,330, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.014019035878189519;  // std dev = 1,633, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.04868199260262607;  // std dev = 4,716, 116,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=30 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452774;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2752044052895877;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13445065973052517;  // std dev = 2,553, 29,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05730916517476571;  // std dev = 1,384, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | | else return 0.010226980373073905;  // std dev = 5,059, 159,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=33 */
%   | else return -0.0731833326149102;  // std dev = 0,000597, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return -0.010760214179749743;  // std dev = 0,500, 37,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.064823667170342;  // std dev = 0,989, 52,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1 */
%   | | | else return -0.010465015641097345;  // std dev = 0,955, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08929579634849472;  // std dev = 0,984, 33,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   | | | else return 0.2752843893892797;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05039373312488967;  // std dev = 4,679, 111,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   | | | else return -0.06843098705957164;  // std dev = 4,56e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.026115307133629508;  // std dev = 0,493, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06081465381324822;  // std dev = 0,989, 51,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
%   | | | else return 0.10624564222005903;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03859027990566098;  // std dev = 1,615, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | | | else return 0.06838719669739991;  // std dev = 4,592, 101,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
%   | | else return -0.06394695740294334;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.900122
   AUC PR    = 0.576882
   CLL	      = -0.230792
   Precision = 0.188679 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.298507


Total learning time: 24.766 seconds
Total inference time: 3.567 seconds
AUC ROC: 0.900122


Results scoring model
   AUC ROC   = 0.895687
   AUC PR    = 0.584724
   CLL	      = -0.220119
   Precision = 0.212575 at threshold = 0.5
   Recall    = 0.657407
   F1        = 0.321267


Total scoring time: 4.46 seconds
Refined model CLL: -0.220119


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900122
   AUC PR    = 0.576882
   CLL	      = -0.230792
   Precision = 0.188679 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.298507


Total learning time: 33.431 seconds
Total inference time: 3.567 seconds
AUC ROC: 0.900122
Total revision time: 33.431
Best scored revision CLL: -0.220119


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:19:22
{'parameter_0.2': {'F1': 0.637168, 'Inference time': 2.299, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 2.006, 'CLL': -0.23372}, 'F1': 0.298507, 'Inference time': 3.567, 'Precision': [0.188679, 0.5], 'AUC ROC': 0.900122, 'AUC PR': 0.576882, 'Recall': 0.714286, 'Learning time': 33.431, 'CLL': -0.230792}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5618526388032152;  // std dev = 3,355, 54,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.12622606490048768;  // std dev = 0,992, 64,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.045076871352100686;  // std dev = 1,646, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else return 0.23469214497605678;  // std dev = 0,485, 162,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=61 */
%   else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5837520093443552;  // std dev = 0,393, 47,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=38 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.11021973383545804;  // std dev = 0,991, 59,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=1 */
%   | | | else return -0.012675419307101535;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.15569331160700134;  // std dev = 0,460, 201,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=64 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.36290644193978394;  // std dev = 0,449, 59,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=42 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12022303863973065;  // std dev = 0,982, 30,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | | else return 0.5108097414496461;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09724732074781388;  // std dev = 0,991, 55,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=1 */
%   | | | else return 0.04612499555810905;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.2158673020557563;  // std dev = 0,492, 148,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=61 */
%   else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.46492550561963664;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.26326969450183274;  // std dev = 0,462, 55,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=38 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.11044827458852403;  // std dev = 0,984, 35,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
%   | | | else return 0.06659860253300577;  // std dev = 1,170, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.07968788161409199;  // std dev = 1,366, 64,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=2 */
%   | | | else return 0.1939840119403581;  // std dev = 5,914, 143,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=61 */
%   else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2084809455612096;  // std dev = 0,448, 59,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=42 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08250945085388012;  // std dev = 0,997, 57,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=1 */
%   | | | else return -0.03324924825788887;  // std dev = 0,938, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05120714574142061;  // std dev = 1,536, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | | else return 0.148820243340102;  // std dev = 5,959, 146,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=61 */
%   else return -0.09269127618926103;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.047721045359229164;  // std dev = 1,034, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.21209613003364317;  // std dev = 0,426, 50,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=38 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.07579771941076277;  // std dev = 1,001, 53,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
%   | | | else return -0.017523418836008563;  // std dev = 0,933, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.06521588660560468;  // std dev = 1,563, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | | | else return 0.11573090429886604;  // std dev = 5,974, 147,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=61 */
%   else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1731930685259945;  // std dev = 0,413, 54,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=42 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07190809647171248;  // std dev = 0,997, 69,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=1 */
%   | | | else return 0.11241982159564995;  // std dev = 0,860, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04526372182420592;  // std dev = 1,544, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | | else return 0.114796905205352;  // std dev = 5,851, 139,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=61 */
%   else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.0035762036536493595;  // std dev = 0,473, 65,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.07990810471792593;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.07990810471792595;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.062233203860589864;  // std dev = 1,378, 61,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then return -0.03746137084576529;  // std dev = 0,241, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | then if ( title(K, B), venue(K, J) )
%   | | | then return 0.037283738830575466;  // std dev = 5,843, 149,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=56 */
%   | | | else return 0.46942316964484343;  // std dev = 0,627, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2885333711754499;  // std dev = 0,724, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.055555788986594745;  // std dev = 0,454, 60,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=42 */
%   | else if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return -0.07382575843987488;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06236708741520493;  // std dev = 0,993, 80,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=1 */
%   | | else return -0.00662411615949248;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( haswordvenue(I, G) )
%   | | then if ( author(J, H), title(J, A) )
%   | | | then return -0.09142956019898438;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07022647003752949;  // std dev = 0,981, 28,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | else return 0.4543677373932297;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.10689851107704025;  // std dev = 0,497, 130,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=61 */
%   | | else return -0.09922575212636983;  // std dev = 0,052, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.05409327942926024;  // std dev = 0,450, 59,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=42 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.054682547297752834;  // std dev = 0,997, 54,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1 */
%   | | | else return 0.01802562139235121;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.10070375059935069;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.02257627949622096;  // std dev = 1,443, 34,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else return 0.0688041698523268;  // std dev = 0,495, 134,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=61 */
%   else return -0.07131208958782785;  // std dev = 0,051, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.796144
   AUC PR    = 0.078458
   CLL	      = -0.344142
   Precision = 0.069574 at threshold = 0.5
   Recall    = 0.435065
   F1        = 0.119964


Total learning time: 161.91 seconds
Total inference time: 4.921 seconds
AUC ROC: 0.796144


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 08:22:09
{'F1': 0.119964, 'Recall': 0.435065, 'Inference time': 4.921, 'Precision': [0.069574, 0.5], 'Learning time': 161.91, 'AUC PR': 0.078458, 'CLL': -0.344142, 'AUC ROC': 0.796144}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5949910403626704;  // std dev = 0,440, 57,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=42 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.12518439823382102;  // std dev = 0,992, 60,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06868033319317068;  // std dev = 1,667, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | | else return 0.28472236167294007;  // std dev = 5,914, 143,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=61 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.804917
   AUC PR    = 0.077769
   CLL	      = -0.208568
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.23 seconds
Total inference time: 1.947 seconds
AUC ROC: 0.804917


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 08:22:18
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.947, 'Precision': [nan, 0.5], 'Learning time': 6.23, 'AUC PR': 0.077769, 'CLL': -0.208568, 'AUC ROC': 0.804917}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.0711118980624732;  // std dev = 9,514, 540,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=115 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.06831776009016817;  // std dev = 9,477, 525,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=115 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.06104391640956381;  // std dev = 9,467, 521,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=115 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,60e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.04975521645278966;  // std dev = 9,484, 528,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=115 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.03246191228591535;  // std dev = 9,546, 554,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=115 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.020141919071499165;  // std dev = 9,592, 575,000 (wgt'ed) examples reached here.  /* #neg=460 #pos=115 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.014407195125872263;  // std dev = 9,608, 583,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=115 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 5,58e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.025611838644768996;  // std dev = 9,528, 546,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=115 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.029727312601757913;  // std dev = 9,479, 526,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=115 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.02765301064421214;  // std dev = 9,464, 520,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=115 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.238939
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 2.75 seconds
Total inference time: 2.191 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.735023
   AUC PR    = 0.503621
   CLL	      = -0.237037
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.470046
   F1        = 0.639498


Total scoring time: 2.722 seconds
Parameter learned model CLL: -0.237037


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.3e-07, 0, 102], 'false': [9.514, 425, 115]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.477, 410, 115]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.3e-07, 0, 102], 'false': [9.467, 406, 115]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.6e-07, 0, 102], 'false': [9.484, 413, 115]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.546, 439, 115]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.592, 460, 115]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.46e-07, 0, 102], 'false': [9.608, 468, 115]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.58e-08, 0, 102], 'false': [9.528, 431, 115]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 102], 'false': [9.479, 411, 115]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.66e-08, 0, 102], 'false': [9.464, 405, 115]}]]
[{'': [1.8111873656630004e-15, 0.16760973936899998]}, {'': [-2.7864421010200007e-16, 0.17106575963718856]}, {'': [1.8111873656630004e-15, 0.17200791332186552]}, {'': [6.617799989922502e-16, 0.17036487029384564]}, {'': [-2.612289469706251e-16, 0.16449126145265075]}, {'': [-4.353815782843751e-17, 0.16000000000000233]}, {'': [2.0898315757650005e-16, 0.15834581289774347]}, {'': [3.047671047990626e-17, 0.16626078439265307]}, {'': [-1.2190684191962504e-16, 0.1708315864043144]}, {'': [4.353815782843751e-17, 0.1722448224852098]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4757959939230421;  // std dev = 4,007, 68,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=42 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09707494549750258;  // std dev = 2,394, 134,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=6 */
%   | | | else return 0.08306242990920171;  // std dev = 7,098, 289,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=65 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3716780036563478;  // std dev = 0,493, 76,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=44 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08319579664278232;  // std dev = 2,391, 127,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=6 */
%   | | | else return 0.05213647107828134;  // std dev = 7,191, 318,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=65 */
%   | else return -0.1254446385283913;  // std dev = 2,79e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.060727729874579243;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.29696535942006236;  // std dev = 4,223, 73,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=42 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07441497958211152;  // std dev = 2,391, 128,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=6 */
%   | | | else return 0.053996195267534186;  // std dev = 7,152, 305,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=65 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,60e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.16424801067598901;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.29462608092380227;  // std dev = 3,908, 66,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=42 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06706814282000759;  // std dev = 2,392, 129,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=6 */
%   | | | else return 0.03921930926685246;  // std dev = 7,185, 316,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=65 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.13338477608635743;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2559333130100414;  // std dev = 3,742, 63,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=42 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06444717942797362;  // std dev = 2,397, 141,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=6 */
%   | | | else return 0.03768694918379937;  // std dev = 7,167, 310,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=65 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16252396748385753;  // std dev = 0,485, 70,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=44 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09604400854537025;  // std dev = 2,711, 103,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=8 */
%   | | | else return 0.017930858143219687;  // std dev = 7,090, 380,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=63 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.06642645107340422;  // std dev = 4,321, 78,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=44 */
%   | | | else return -0.08063556981699951;  // std dev = 2,707, 103,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=8 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05263624339165388;  // std dev = 2,387, 120,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=6 */
%   | | | else return 0.10352603869524171;  // std dev = 6,390, 201,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=57 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527728;  // std dev = 5,58e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.07380107333392937;  // std dev = 0,491, 74,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=44 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.055646443714047394;  // std dev = 2,397, 144,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=6 */
%   | | | else return 0.015986097367499653;  // std dev = 7,162, 324,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=65 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09552527532362147;  // std dev = 0,476, 70,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=44 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05228361960407343;  // std dev = 2,399, 149,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=6 */
%   | | | else return 0.02101118177583994;  // std dev = 7,124, 314,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=65 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.09388090069288628;  // std dev = 3,846, 68,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=44 */
%   | | | else return -0.04154920334509155;  // std dev = 2,391, 128,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=6 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06270923452185484;  // std dev = 2,690, 84,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=8 */
%   | | | else return 0.037754163751586446;  // std dev = 6,584, 238,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=57 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 0.900314
   AUC PR    = 0.575702
   CLL	      = -0.233728
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 44.278 seconds
Total inference time: 3.811 seconds
AUC ROC: 0.900314


Results scoring model
   AUC ROC   = 0.883054
   AUC PR    = 0.566581
   CLL	      = -0.222079
   Precision = 0.198621 at threshold = 0.5
   Recall    = 0.663594
   F1        = 0.305732


Total scoring time: 6.428 seconds
Refined model CLL: -0.222079


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900314
   AUC PR    = 0.575702
   CLL	      = -0.233728
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 56.178 seconds
Total inference time: 3.811 seconds
AUC ROC: 0.900314
Total revision time: 56.178
Best scored revision CLL: -0.222079


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:23:21
{'F1': 0.293725, 'Inference time': 3.811, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.900314, 'AUC PR': 0.575702, 'parameter_0.4': {'F1': 0.637168, 'Inference time': 2.191, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 2.75, 'CLL': -0.238939}, 'Recall': 0.714286, 'Learning time': 56.178, 'CLL': -0.233728}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5438632208137989;  // std dev = 4,757, 105,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=72 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10879321366081823;  // std dev = 1,967, 121,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=4 */
%   | | | else return 0.0803711573217344;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.03658790700575085;  // std dev = 2,675, 76,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=8 */
%   | | | else return 0.3005949782649762;  // std dev = 8,281, 278,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=123 */
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return 0.1783603590214425;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5291164328314264;  // std dev = 4,241, 97,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=73 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09881345871708636;  // std dev = 1,969, 132,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=4 */
%   | | | else return 0.014747689426266806;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return 0.20258558154169248;  // std dev = 0,478, 350,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=131 */
%   else return -0.12544463852839152;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.44463356325371556;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.36260523519044396;  // std dev = 4,748, 105,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=72 */
%   | | | else return 0.601743410696352;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09979075669580795;  // std dev = 1,935, 63,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=4 */
%   | | | else return 0.42096753394094305;  // std dev = 1,271, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordauthor(L, K) )
%   | | | then return -0.0726736048877329;  // std dev = 2,368, 125,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=6 */
%   | | | else return 0.1782704594170568;  // std dev = 8,641, 313,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=123 */
%   else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.287251001259285;  // std dev = 0,451, 110,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=77 */
%   | | else return 0.45288797565283256;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.08015513909427738;  // std dev = 1,970, 128,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=4 */
%   | | | else return 0.05639127354848374;  // std dev = 1,263, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.03189144414394512;  // std dev = 2,546, 65,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=8 */
%   | | | else return 0.16509070555810734;  // std dev = 8,509, 299,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=123 */
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.43494358474382094;  // std dev = 0,295, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.3946230816969711;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.200343436671993;  // std dev = 4,738, 104,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=71 */
%   | | | else return 0.3448179014431776;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.09965852433724963;  // std dev = 1,953, 87,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=4 */
%   | | | else return 0.2926022362783607;  // std dev = 1,370, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordauthor(L, K) )
%   | | | then return -0.06172207981852664;  // std dev = 2,369, 129,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=6 */
%   | | | else return 0.14741566932872846;  // std dev = 8,405, 289,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=123 */
%   else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.26771276992719806;  // std dev = 0,042, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15980656148739997;  // std dev = 4,706, 105,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=72 */
%   | | else return 0.27156148283904613;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.06539523875770217;  // std dev = 1,982, 111,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=4 */
%   | | | else return -0.024457274185873925;  // std dev = 1,326, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.037668667636464925;  // std dev = 2,520, 71,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=8 */
%   | | | else return 0.1213354971706684;  // std dev = 8,373, 286,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=123 */
%   else return -0.0851847513883968;  // std dev = 1,67e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.0070239104390951;  // std dev = 0,886, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.08718087210076386;  // std dev = 4,934, 111,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=72 */
%   | | else return 0.22127078810089273;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.060274944392008686;  // std dev = 1,971, 123,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=4 */
%   | | | else return 0.11192601152278235;  // std dev = 1,220, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.04121943230047918;  // std dev = 2,541, 76,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=8 */
%   | | | else return 0.0831558112074238;  // std dev = 8,458, 294,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=123 */
%   else return -0.07877675473109176;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.12020252165189464;  // std dev = 4,566, 108,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=77 */
%   | | | else return 0.18549586309724597;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.06177750644586899;  // std dev = 1,989, 139,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=4 */
%   | | | else return -0.00923145584435288;  // std dev = 1,305, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07185042277929178;  // std dev = 1,946, 75,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=4 */
%   | | | else return 0.3085793905079644;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.08529685268665169;  // std dev = 0,496, 280,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=123 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.07117871330499577;  // std dev = 4,745, 111,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=77 */
%   | | | else return 0.15908622331089128;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.05499585137916735;  // std dev = 1,983, 133,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=4 */
%   | | | else return 0.09924575532961914;  // std dev = 1,220, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.005031385017792664;  // std dev = 0,449, 403,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=131 */
%   else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.10947237403382305;  // std dev = 0,421, 103,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=77 */
%   | | else return 0.13893916136497775;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.04517521400525677;  // std dev = 1,974, 113,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=4 */
%   | | | else return -0.023104388686992196;  // std dev = 1,307, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.028170834486074093;  // std dev = 2,445, 75,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=8 */
%   | | | else return 0.05069868077567218;  // std dev = 8,405, 289,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=123 */
%   else return -0.06419184008202622;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */


Results
   AUC ROC   = 0.807805
   AUC PR    = 0.101158
   CLL	      = -0.323919
   Precision = 0.106814 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.166428


Total learning time: 152.151 seconds
Total inference time: 4.84 seconds
AUC ROC: 0.807805


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 08:25:58
{'F1': 0.166428, 'Recall': 0.376623, 'Inference time': 4.84, 'Precision': [0.106814, 0.5], 'Learning time': 152.151, 'AUC PR': 0.101158, 'CLL': -0.323919, 'AUC ROC': 0.807805}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.5985335504841275;  // std dev = 0,438, 104,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=77 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.1082376195223364;  // std dev = 1,966, 119,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=4 */
%   | | | else return 0.024815601766178853;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04546552273181298;  // std dev = 2,689, 83,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=8 */
%   | | | else return 0.27794415694251196;  // std dev = 8,448, 293,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=123 */
%   else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */


Results
   AUC ROC   = 0.805227
   AUC PR    = 0.088514
   CLL	      = -0.209405
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.651 seconds
Total inference time: 1.953 seconds
AUC ROC: 0.805227


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 08:26:11
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.953, 'Precision': [nan, 0.5], 'Learning time': 10.651, 'AUC PR': 0.088514, 'CLL': -0.209405, 'AUC ROC': 0.805227}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995101;  // std dev = 8,60e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.0879625996957809;  // std dev = 11,937, 805,000 (wgt'ed) examples reached here.  /* #neg=620 #pos=185 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.0732617269057597;  // std dev = 11,965, 818,000 (wgt'ed) examples reached here.  /* #neg=633 #pos=185 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,99e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.059724043472894284;  // std dev = 11,994, 832,000 (wgt'ed) examples reached here.  /* #neg=647 #pos=185 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,21e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.058030559751994504;  // std dev = 11,943, 808,000 (wgt'ed) examples reached here.  /* #neg=623 #pos=185 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,42e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.04304455838815353;  // std dev = 11,994, 832,000 (wgt'ed) examples reached here.  /* #neg=647 #pos=185 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694902;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.033721079975529165;  // std dev = 12,017, 843,000 (wgt'ed) examples reached here.  /* #neg=658 #pos=185 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253526;  // std dev = 2,31e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.027788887523326818;  // std dev = 12,023, 846,000 (wgt'ed) examples reached here.  /* #neg=661 #pos=185 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.03205661159304715;  // std dev = 11,956, 814,000 (wgt'ed) examples reached here.  /* #neg=629 #pos=185 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.02809338272169999;  // std dev = 11,948, 810,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=185 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else return 0.021876074630365238;  // std dev = 11,961, 816,000 (wgt'ed) examples reached here.  /* #neg=631 #pos=185 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.251128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 3.255 seconds
Total inference time: 2.475 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.716258
   AUC PR    = 0.46701
   CLL	      = -0.250644
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.432515
   F1        = 0.603854


Total scoring time: 3.222 seconds
Parameter learned model CLL: -0.250644


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [8.6e-07, 0, 141], 'false': [11.937, 620, 185]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 141], 'false': [11.965, 633, 185]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.99e-07, 0, 141], 'false': [11.994, 647, 185]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-07, 0, 141], 'false': [11.943, 623, 185]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.42e-07, 0, 141], 'false': [11.994, 647, 185]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 141], 'false': [12.017, 658, 185]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.31e-07, 0, 141], 'false': [12.023, 661, 185]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 141], 'false': [11.956, 629, 185]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 141], 'false': [11.948, 625, 185]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.96e-08, 0, 141], 'false': [11.961, 631, 185]}]]
[{'': [5.2408825900035755e-15, 0.17699934416110694]}, {'': [-2.2172964803861283e-15, 0.17501240427784184]}, {'': [1.763758563943511e-15, 0.1729136811205612]}, {'': [1.2598275456739365e-15, 0.17653753308498563]}, {'': [4.1574309007239905e-16, 0.17291368112056282]}, {'': [-1.2598275456739366e-16, 0.17129412691778467]}, {'': [3.7794826370218095e-16, 0.1708568761911176]}, {'': [-2.897603355050054e-16, 0.17561983471074416]}, {'': [-3.7794826370218094e-17, 0.17623075750647776]}, {'': [2.519655091347873e-17, 0.1753156838715931]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995101;  // std dev = 8,60e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.4065360318737069;  // std dev = 5,542, 124,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=68 */
%   | | | else return -0.03658790700575082;  // std dev = 3,539, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07752357952037069;  // std dev = 3,208, 171,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=11 */
%   | | | else return 0.11441634457026355;  // std dev = 8,272, 359,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=92 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109558;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.39244901799322635;  // std dev = 0,492, 115,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=68 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06815536668674653;  // std dev = 2,728, 117,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=8 */
%   | | | else return 0.3625446652259832;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.09217788053984918;  // std dev = 2,591, 175,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=7 */
%   | | | else return 0.10262053830882006;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.1166395169199936;  // std dev = 8,178, 337,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=92 */
%   | | | else return -0.1254446385283914;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,99e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3384009402771559;  // std dev = 0,488, 112,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=68 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.06061498459530113;  // std dev = 2,728, 118,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=8 */
%   | | | else return 0.4820528393180201;  // std dev = 1,407, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.0860255785628939;  // std dev = 2,597, 194,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=7 */
%   | | | else return 0.07815427799665892;  // std dev = 1,762, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.10642091355215422;  // std dev = 8,146, 330,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=92 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,21e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2563385728869097;  // std dev = 0,491, 114,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=68 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06634835457711298;  // std dev = 3,212, 206,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=11 */
%   | | | else return 0.06098237548406461;  // std dev = 8,862, 452,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=106 */
%   | else return -0.10760038777120377;  // std dev = 0,074, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,42e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.21837628133986642;  // std dev = 5,095, 110,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=68 */
%   | | | else return -0.03613062632252825;  // std dev = 3,371, 128,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=14 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05346267198331954;  // std dev = 3,185, 196,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=11 */
%   | | | else return 0.08725800561772208;  // std dev = 8,111, 323,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=92 */
%   | else return -0.09491165938874419;  // std dev = 0,025, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694902;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.10882053818217455;  // std dev = 5,458, 121,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=68 */
%   | | | else return -0.05826094676236275;  // std dev = 3,234, 211,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=11 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.014960272599809778;  // std dev = 3,323, 113,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=14 */
%   | | | else return 0.049592584491658015;  // std dev = 8,243, 352,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=92 */
%   | else return -0.08715315853949063;  // std dev = 0,028, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253526;  // std dev = 2,31e-07, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.08642602512474848;  // std dev = 5,428, 120,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=68 */
%   | | | else return -0.04554092076004928;  // std dev = 3,202, 198,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=11 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.013581061156667193;  // std dev = 3,348, 108,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=14 */
%   | | | else return 0.04045568252572595;  // std dev = 8,248, 353,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=92 */
%   | else return -0.08251027577933767;  // std dev = 0,121, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.06959172777252504;  // std dev = 5,398, 119,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=68 */
%   | | | else return -0.03940511087013197;  // std dev = 3,195, 193,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=11 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.010329282804157043;  // std dev = 3,318, 113,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=14 */
%   | | | else return 0.04580493027783533;  // std dev = 8,178, 337,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=92 */
%   | else return -0.07529348115468362;  // std dev = 0,039, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.08077469909177273;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08825133460579083;  // std dev = 5,051, 107,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=65 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.040116017857382925;  // std dev = 3,201, 210,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=11 */
%   | | | else return 0.0123824626216226;  // std dev = 8,921, 477,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=106 */
%   | else return -0.07012872820799836;  // std dev = 0,035, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801104;  // std dev = 5,96e-08, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.12608171358358125;  // std dev = 0,817, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06440284625962493;  // std dev = 5,102, 109,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=66 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03420748205851425;  // std dev = 3,212, 190,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=11 */
%   | | | else return 0.01059202369019722;  // std dev = 8,918, 477,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=106 */
%   | else return -0.06798172565873291;  // std dev = 0,104, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */


Results
   AUC ROC   = 0.898918
   AUC PR    = 0.571657
   CLL	      = -0.238453
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 73.101 seconds
Total inference time: 3.953 seconds
AUC ROC: 0.898918


Results scoring model
   AUC ROC   = 0.877372
   AUC PR    = 0.531254
   CLL	      = -0.23184
   Precision = 0.176223 at threshold = 0.5
   Recall    = 0.641104
   F1        = 0.276455


Total scoring time: 9.516 seconds
Refined model CLL: -0.23184


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.898918
   AUC PR    = 0.571657
   CLL	      = -0.238453
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 89.09400000000001 seconds
Total inference time: 3.953 seconds
AUC ROC: 0.898918
Total revision time: 89.09400000000001
Best scored revision CLL: -0.23184


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:27:47
{'F1': 0.272277, 'Inference time': 3.953, 'Precision': [0.168196, 0.5], 'AUC ROC': 0.898918, 'AUC PR': 0.571657, 'parameter_0.6': {'F1': 0.637168, 'Inference time': 2.475, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 3.255, 'CLL': -0.251128}, 'Recall': 0.714286, 'Learning time': 89.09400000000001, 'CLL': -0.238453}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.5306635549825505;  // std dev = 6,137, 171,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=115 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.08124500429442705;  // std dev = 2,741, 132,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=8 */
%   | | | else return 0.23314893509951234;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10296217601159893;  // std dev = 2,594, 180,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=7 */
%   | | | else return 0.018148935099512268;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else return 0.2559511329017058;  // std dev = 0,489, 455,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=181 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7806291370812783;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2193708629187216;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.5306291370812775;  // std dev = 5,196, 144,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=108 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0896162498641325;  // std dev = 2,593, 173,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=7 */
%   | | | else return 0.04809130069688497;  // std dev = 1,796, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.026538791269347106;  // std dev = 3,477, 129,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=14 */
%   | | | else return 0.24303402218174075;  // std dev = 10,255, 432,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=181 */
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6198018598820144;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18411583270438697;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.4215407016308655;  // std dev = 5,250, 145,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=108 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08028041747064331;  // std dev = 2,593, 175,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=7 */
%   | | | else return 0.08590707381155405;  // std dev = 1,747, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.019769393808331686;  // std dev = 3,470, 125,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=14 */
%   | | | else return 0.2049872117169659;  // std dev = 10,255, 432,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=181 */
%   else return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.18343337794522666;  // std dev = 1,287, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.28212130381327877;  // std dev = 5,652, 155,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=109 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.07610544423042125;  // std dev = 2,599, 194,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=7 */
%   | | | else return -0.0035518186935837946;  // std dev = 1,831, 26,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.012963572646364637;  // std dev = 3,461, 120,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=14 */
%   | | | else return 0.17741104510898079;  // std dev = 10,176, 423,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=181 */
%   else return -0.10159632948783619;  // std dev = 4,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordvenue(G, C) )
%   | | | then return 0.2465269984285844;  // std dev = 5,364, 157,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=115 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(H, D) )
%   | | | then return -0.06699160022734955;  // std dev = 2,597, 184,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=7 */
%   | | | else return 0.052338193573927036;  // std dev = 1,771, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return -0.061074966745164334;  // std dev = 2,736, 124,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=8 */
%   | | | else return 0.5856378118375916;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.15514943655592217;  // std dev = 0,496, 411,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=181 */
%   else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.36330340481466117;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1466800252857993;  // std dev = 0,475, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.17755221520995274;  // std dev = 5,397, 148,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=108 */
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06405692345945427;  // std dev = 2,602, 200,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=7 */
%   | | | else return 0.0570980002718963;  // std dev = 1,757, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else return 0.07146783979887131;  // std dev = 0,462, 557,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=195 */
%   else return -0.0851847513883968;  // std dev = 1,97e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.29109428536288445;  // std dev = 0,029, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.26943425602408555;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.14433260848084659;  // std dev = 5,293, 146,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=108 */
%   | | | else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05777702542487978;  // std dev = 2,601, 196,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=7 */
%   | | | else return 0.13359214529211982;  // std dev = 1,659, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.026259170700976303;  // std dev = 3,327, 129,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=14 */
%   | | | else return 0.09839244284556639;  // std dev = 10,140, 419,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=181 */
%   else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.031013094863107275;  // std dev = 0,419, 923,000 (wgt'ed) examples reached here.  /* #neg=597 #pos=326 */
%   else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.03418401346413308;  // std dev = 1,069, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.12356547706279072;  // std dev = 5,049, 144,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=109 */
%   | | else return 0.17262202328742093;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05328913530186203;  // std dev = 2,597, 185,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=7 */
%   | | | else return 0.0662681701387221;  // std dev = 1,710, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.026024335372993243;  // std dev = 3,325, 128,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=14 */
%   | | | else return 0.05896389878391902;  // std dev = 10,229, 429,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=181 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.049285599391701566;  // std dev = 0,744, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.04586692325035963;  // std dev = 5,583, 152,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=108 */
%   | | else return 0.1493409707525204;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.05757819728466279;  // std dev = 2,742, 116,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=8 */
%   | | | else return 0.26768087149796704;  // std dev = 1,610, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.04094820668704364;  // std dev = 3,133, 201,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=11 */
%   | | | else return 0.01255929723547871;  // std dev = 10,514, 465,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=181 */
%   else return -0.06419184008202625;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */


Results
   AUC ROC   = 0.81386
   AUC PR    = 0.103109
   CLL	      = -0.323834
   Precision = 0.106814 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.166428


Total learning time: 203.005 seconds
Total inference time: 4.825 seconds
AUC ROC: 0.81386


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 08:31:16
{'F1': 0.166428, 'Recall': 0.376623, 'Inference time': 4.825, 'Precision': [0.106814, 0.5], 'Learning time': 203.005, 'AUC PR': 0.103109, 'CLL': -0.323834, 'AUC ROC': 0.81386}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordvenue(E, C) )
%   | | then return 0.5768989350995097;  // std dev = 0,450, 160,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=115 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, F) )
%   | | | then return -0.10539273156715458;  // std dev = 2,597, 192,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=7 */
%   | | | else return 0.08037115732173453;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.038147361196783955;  // std dev = 3,542, 135,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=14 */
%   | | | else return 0.2830315642074893;  // std dev = 10,203, 426,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=181 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 0.805227
   AUC PR    = 0.088514
   CLL	      = -0.209618
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 17.734 seconds
Total inference time: 2.021 seconds
AUC ROC: 0.805227


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 08:31:36
{'F1': nan, 'Recall': 0.0, 'Inference time': 2.021, 'Precision': [nan, 0.5], 'Learning time': 17.734, 'AUC PR': 0.088514, 'CLL': -0.209618, 'AUC ROC': 0.805227}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.08669371121891045;  // std dev = 13,748, 1.072,000 (wgt'ed) examples reached here.  /* #neg=827 #pos=245 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.06818438099656625;  // std dev = 13,816, 1.109,000 (wgt'ed) examples reached here.  /* #neg=864 #pos=245 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,08e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.05035188406039842;  // std dev = 13,894, 1.155,000 (wgt'ed) examples reached here.  /* #neg=910 #pos=245 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,26e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.06329372976302335;  // std dev = 13,717, 1.056,000 (wgt'ed) examples reached here.  /* #neg=811 #pos=245 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,86e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.03808124180343464;  // std dev = 13,861, 1.135,000 (wgt'ed) examples reached here.  /* #neg=890 #pos=245 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.255172242569491;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.027249385416624892;  // std dev = 13,906, 1.163,000 (wgt'ed) examples reached here.  /* #neg=918 #pos=245 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253504;  // std dev = 2,92e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.0372414815513206;  // std dev = 13,782, 1.090,000 (wgt'ed) examples reached here.  /* #neg=845 #pos=245 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527764;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.0239290992639839;  // std dev = 13,849, 1.128,000 (wgt'ed) examples reached here.  /* #neg=883 #pos=245 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.014909889096451594;  // std dev = 13,895, 1.156,000 (wgt'ed) examples reached here.  /* #neg=911 #pos=245 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,03e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else return 0.02393902317316904;  // std dev = 13,794, 1.097,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=245 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.245131
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 3.958 seconds
Total inference time: 2.166 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.718391
   AUC PR    = 0.471136
   CLL	      = -0.244481
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.436782
   F1        = 0.608


Total scoring time: 4.018 seconds
Parameter learned model CLL: -0.244481


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 190], 'false': [13.748, 827, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 190], 'false': [13.816, 864, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.08e-07, 0, 190], 'false': [13.894, 910, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.26e-07, 0, 190], 'false': [13.717, 811, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.86e-07, 0, 190], 'false': [13.861, 890, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 190], 'false': [13.906, 918, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 190], 'false': [13.782, 845, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 190], 'false': [13.849, 883, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 190], 'false': [13.895, 911, 245]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 190], 'false': [13.794, 852, 245]}]]
[{'': [6.133105719192444e-15, 0.1763120614279364]}, {'': [-3.515316692707864e-15, 0.17211421267586857]}, {'': [1.9446432768171164e-15, 0.167125803489442]}, {'': [5.609547913895527e-16, 0.1781800605486789]}, {'': [7.853367079453739e-16, 0.16926390964312257]}, {'': [-3.4592212135689087e-16, 0.16628356852775084]}, {'': [4.487638331116422e-16, 0.17424880060601658]}, {'': [-1.4023869784738819e-16, 0.17002335772847965]}, {'': [-2.711281491716172e-16, 0.16702012068821484]}, {'': [5.609547913895528e-17, 0.1734572368995016]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995093;  // std dev = 1,08e-06, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.45255452950510444;  // std dev = 5,872, 143,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=85 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0879790110284342;  // std dev = 3,891, 297,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=16 */
%   | | | else return 0.09958729126389188;  // std dev = 10,342, 584,000 (wgt'ed) examples reached here.  /* #neg=443 #pos=141 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109568;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.35292335287124466;  // std dev = 0,496, 158,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=88 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07493797061053842;  // std dev = 3,885, 283,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=16 */
%   | | | else return 0.07118862936283447;  // std dev = 10,449, 625,000 (wgt'ed) examples reached here.  /* #neg=484 #pos=141 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462833;  // std dev = 6,08e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.15326677239627484;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.31217198018716175;  // std dev = 5,959, 146,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=85 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.061136205944374335;  // std dev = 3,874, 258,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=16 */
%   | | | else return 0.06130293431604558;  // std dev = 10,452, 626,000 (wgt'ed) examples reached here.  /* #neg=485 #pos=141 */
%   | else return -0.11231637819360622;  // std dev = 6,23e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,26e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.2322439875683181;  // std dev = 6,184, 156,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=88 */
%   | | | else return -0.05165988220178438;  // std dev = 3,868, 246,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=16 */
%   | | else return 0.06647009993279482;  // std dev = 0,426, 590,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=141 */
%   | else return -0.1015963294878362;  // std dev = 4,59e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014906;  // std dev = 3,86e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.0025732001044770497;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2472643699042193;  // std dev = 5,546, 135,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=85 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05287183092802817;  // std dev = 3,881, 273,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=16 */
%   | | | else return 0.04231308769863206;  // std dev = 10,457, 628,000 (wgt'ed) examples reached here.  /* #neg=487 #pos=141 */
%   | else return -0.09269127618926107;  // std dev = 1,05e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.255172242569491;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.1545976767577328;  // std dev = 5,924, 148,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=88 */
%   | | | else return -0.05283770100945691;  // std dev = 3,892, 299,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=16 */
%   | | else return 0.040669084895638814;  // std dev = 0,420, 615,000 (wgt'ed) examples reached here.  /* #neg=474 #pos=141 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253504;  // std dev = 2,92e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08920543634819049;  // std dev = 0,492, 155,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=88 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09440931312285279;  // std dev = 4,023, 194,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=18 */
%   | | | else return 0.03334424313231266;  // std dev = 10,361, 704,000 (wgt'ed) examples reached here.  /* #neg=565 #pos=139 */
%   | else return -0.07877675473109165;  // std dev = 4,08e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527764;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10336470728120022;  // std dev = 0,488, 145,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=88 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07872653826235497;  // std dev = 4,019, 188,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=18 */
%   | | | else return 0.0350432960412575;  // std dev = 10,296, 693,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=139 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.039240853814416554;  // std dev = 6,921, 329,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=97 */
%   | | | else return 0.3491648943962553;  // std dev = 2,047, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.04557951345174094;  // std dev = 3,873, 257,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=16 */
%   | | | else return 0.05146510062160297;  // std dev = 9,558, 478,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=123 */
%   | else return -0.06842697784420267;  // std dev = 3,80e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1340070300080108;  // std dev = 1,03e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.08799017177985151;  // std dev = 1,250, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.11087399532319116;  // std dev = 5,557, 134,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=85 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06510557696568149;  // std dev = 3,905, 182,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=18 */
%   | | | else return 0.02281921053269696;  // std dev = 10,303, 700,000 (wgt'ed) examples reached here.  /* #neg=561 #pos=139 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */


Results
   AUC ROC   = 0.900574
   AUC PR    = 0.576902
   CLL	      = -0.236812
   Precision = 0.188679 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.298507


Total learning time: 89.22 seconds
Total inference time: 3.774 seconds
AUC ROC: 0.900574


Results scoring model
   AUC ROC   = 0.869157
   AUC PR    = 0.532299
   CLL	      = -0.23086
   Precision = 0.193343 at threshold = 0.5
   Recall    = 0.627586
   F1        = 0.295615


Total scoring time: 11.162 seconds
Refined model CLL: -0.23086


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900574
   AUC PR    = 0.576902
   CLL	      = -0.236812
   Precision = 0.188679 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.298507


Total learning time: 108.358 seconds
Total inference time: 3.774 seconds
AUC ROC: 0.900574
Total revision time: 108.358
Best scored revision CLL: -0.23086


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:33:31
{'F1': 0.298507, 'Inference time': 3.774, 'Precision': [0.188679, 0.5], 'AUC ROC': 0.900574, 'parameter_0.8': {'F1': 0.637168, 'Inference time': 2.166, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 3.958, 'CLL': -0.245131}, 'AUC PR': 0.576902, 'Recall': 0.714286, 'Learning time': 108.358, 'CLL': -0.236812}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.601006077956652;  // std dev = 0,437, 210,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=156 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.10599449119530888;  // std dev = 2,946, 251,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=9 */
%   | | | else return 0.20814893509951235;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02720138337182523;  // std dev = 3,992, 157,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=18 */
%   | | | else return 0.2940919955977285;  // std dev = 11,756, 562,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=245 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4407595525776497;  // std dev = 0,469, 232,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=156 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09208712100240389;  // std dev = 2,943, 241,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=9 */
%   | | | else return 0.13522420165393148;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.020924946882228148;  // std dev = 3,985, 153,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=18 */
%   | | | else return 0.22341265906154723;  // std dev = 12,074, 605,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=245 */
%   else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6809702736044364;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.31902972639556365;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.40824300087716064;  // std dev = 6,267, 198,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=144 */
%   | | | else return 0.6809702736044364;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08266979374329557;  // std dev = 2,944, 245,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=9 */
%   | | | else return 0.04434955342563285;  // std dev = 2,317, 30,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else return 0.1451521216620418;  // std dev = 0,466, 766,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=263 */
%   else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5193064203941288;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2540241101917192;  // std dev = 2,58e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.3138882130936983;  // std dev = 6,267, 198,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=144 */
%   | | | else return 0.5193064203941289;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07348180768593945;  // std dev = 2,943, 240,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=9 */
%   | | | else return 0.022874886714868696;  // std dev = 2,339, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.03942753390180445;  // std dev = 3,992, 157,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=18 */
%   | | | else return 0.1855131961156965;  // std dev = 11,835, 572,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=245 */
%   else return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.20543953912829802;  // std dev = 0,449, 224,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=156 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06807973366022428;  // std dev = 2,946, 251,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=9 */
%   | | | else return 0.059756085527047496;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.041223694341955656;  // std dev = 4,007, 167,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=18 */
%   | | | else return 0.14316980937085372;  // std dev = 11,903, 581,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=245 */
%   else return -0.09269127618926107;  // std dev = 1,49e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3435572177414998;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2449280281499432;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.2077667750385993;  // std dev = 6,000, 192,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=144 */
%   | | | else return 0.34355721774149983;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06087935110029454;  // std dev = 2,944, 244,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=9 */
%   | | | else return 0.060012898089251435;  // std dev = 2,262, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.018856043132931318;  // std dev = 3,969, 144,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=18 */
%   | | | else return 0.1293239314604182;  // std dev = 11,739, 560,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=245 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.03876632900480934;  // std dev = 1,318, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.07227376458994998;  // std dev = 6,933, 226,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=149 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.05322325677713042;  // std dev = 2,940, 229,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=9 */
%   | | | else return 0.022059302684946783;  // std dev = 2,304, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.08073845354705418;  // std dev = 2,907, 148,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=9 */
%   | | | else return 0.5013078784992779;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else return 0.08096703801510051;  // std dev = 0,493, 587,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=245 */
%   else return -0.07877675473109162;  // std dev = 4,83e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.0751543231045203;  // std dev = 1,552, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.10476760568254745;  // std dev = 6,342, 212,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=149 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.04609553596158568;  // std dev = 2,936, 214,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=9 */
%   | | | else return -0.004370349823291502;  // std dev = 2,339, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.07969388153535918;  // std dev = 2,920, 172,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=9 */
%   | | | else return 0.47834012429757927;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return 0.07662115564291638;  // std dev = 0,495, 568,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=245 */
%   else return -0.07324622576333704;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.0467930894547558;  // std dev = 1,317, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.056694242111325954;  // std dev = 6,655, 217,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=149 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0496323510650852;  // std dev = 2,947, 258,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=9 */
%   | | | else return 0.08198410570041646;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.05172348033732944;  // std dev = 2,891, 126,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=9 */
%   | | | else return 0.2948374774194675;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else return 0.052903660223985835;  // std dev = 0,494, 576,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=245 */
%   else return -0.06842697784420267;  // std dev = 3,49e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.04299188320808777;  // std dev = 0,447, 229,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=156 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.043254210088522066;  // std dev = 2,943, 240,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=9 */
%   | | | else return 0.06748568040559268;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02799798057320109;  // std dev = 3,599, 164,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=18 */
%   | | | else return 0.028961564053500227;  // std dev = 11,984, 592,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=245 */
%   else return -0.06419184008202625;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */


Results
   AUC ROC   = 0.81386
   AUC PR    = 0.103109
   CLL	      = -0.323273
   Precision = 0.106814 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.166428


Total learning time: 411.322 seconds
Total inference time: 5.024 seconds
AUC ROC: 0.81386


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 08:40:28
{'F1': 0.166428, 'Recall': 0.376623, 'Inference time': 5.024, 'Precision': [0.106814, 0.5], 'Learning time': 411.322, 'AUC PR': 0.103109, 'CLL': -0.323273, 'AUC ROC': 0.81386}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5577005046062354;  // std dev = 0,458, 223,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=156 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1062779423708439;  // std dev = 2,946, 253,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=9 */
%   | | | else return 0.10814893509951237;  // std dev = 2,291, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03840278903841868;  // std dev = 4,017, 174,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=18 */
%   | | | else return 0.26177331730708603;  // std dev = 12,088, 607,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=245 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */


Results
   AUC ROC   = 0.804917
   AUC PR    = 0.077769
   CLL	      = -0.208416
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 15.909 seconds
Total inference time: 1.947 seconds
AUC ROC: 0.804917


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 08:40:46
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.947, 'Precision': [nan, 0.5], 'Learning time': 15.909, 'AUC PR': 0.077769, 'CLL': -0.208416, 'AUC ROC': 0.804917}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.07658865141156414;  // std dev = 15,515, 1.410,000 (wgt'ed) examples reached here.  /* #neg=1.102 #pos=308 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.0668526222651073;  // std dev = 15,517, 1.411,000 (wgt'ed) examples reached here.  /* #neg=1.103 #pos=308 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.05930509143230689;  // std dev = 15,504, 1.403,000 (wgt'ed) examples reached here.  /* #neg=1.095 #pos=308 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.06114238937156293;  // std dev = 15,405, 1.342,000 (wgt'ed) examples reached here.  /* #neg=1.034 #pos=308 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.03858497799805322;  // std dev = 15,542, 1.428,000 (wgt'ed) examples reached here.  /* #neg=1.120 #pos=308 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.03958790936801191;  // std dev = 15,476, 1.385,000 (wgt'ed) examples reached here.  /* #neg=1.077 #pos=308 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.030590368874315262;  // std dev = 15,506, 1.404,000 (wgt'ed) examples reached here.  /* #neg=1.096 #pos=308 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527747;  // std dev = 9,88e-08, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.024927481743375647;  // std dev = 15,515, 1.410,000 (wgt'ed) examples reached here.  /* #neg=1.102 #pos=308 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.01795232100745661;  // std dev = 15,545, 1.430,000 (wgt'ed) examples reached here.  /* #neg=1.122 #pos=308 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.019080871356246643;  // std dev = 15,506, 1.404,000 (wgt'ed) examples reached here.  /* #neg=1.096 #pos=308 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.245269
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 4.617 seconds
Total inference time: 2.476 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.716912
   AUC PR    = 0.468238
   CLL	      = -0.24473
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433824
   F1        = 0.605128


Total scoring time: 4.021 seconds
Parameter learned model CLL: -0.24473


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.08e-06, 0, 236], 'false': [15.515, 1102, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.517, 1103, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.33e-07, 0, 236], 'false': [15.504, 1095, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.405, 1034, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.92e-07, 0, 236], 'false': [15.542, 1120, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.95e-07, 0, 236], 'false': [15.476, 1077, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.89e-07, 0, 236], 'false': [15.506, 1096, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [9.88e-08, 0, 236], 'false': [15.515, 1102, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 236], 'false': [15.545, 1122, 308]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 236], 'false': [15.506, 1096, 308]}]]
[{'': [4.937669858671883e-15, 0.17072380664956593]}, {'': [-4.215084025695509e-15, 0.17063660486779714]}, {'': [1.2043097216272884e-15, 0.17133634320915364]}, {'': [-1.5053871520341105e-16, 0.1768341843590377]}, {'': [3.6129291648818656e-16, 0.16916570549788063]}, {'': [3.688198522483571e-16, 0.17292861890550734]}, {'': [3.53765980728016e-16, 0.17124860999504793]}, {'': [4.139814668093804e-17, 0.17072380664955872]}, {'': [-1.6559258672375216e-16, 0.1689940828402267]}, {'': [4.516161456102332e-17, 0.1712486099950429]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.5124699227538307;  // std dev = 6,053, 162,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=106 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.09185106490048796;  // std dev = 3,376, 240,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=12 */
%   | | | else return 0.41370449065506787;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.10686564215996326;  // std dev = 3,403, 343,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=12 */
%   | | | else return 0.13592671287729013;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.13764076813036083;  // std dev = 10,534, 551,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=154 */
%   | | | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.11466581323330528;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.36296380840702946;  // std dev = 6,678, 183,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07137222106890276;  // std dev = 4,498, 360,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=22 */
%   | | | else return 0.08639086643903424;  // std dev = 11,483, 731,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=176 */
%   | else return -0.1286879473589383;  // std dev = 0,081, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.33801319649367095;  // std dev = 0,482, 179,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06405505623000282;  // std dev = 4,503, 363,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=22 */
%   | | | else return 0.06470519190478213;  // std dev = 11,542, 769,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=176 */
%   | else return -0.1140159059300813;  // std dev = 0,022, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.08834741943004538;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.24828815590605294;  // std dev = 6,465, 175,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.052424354236505655;  // std dev = 4,493, 336,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=22 */
%   | | | else return 0.05358864928516504;  // std dev = 11,558, 774,000 (wgt'ed) examples reached here.  /* #neg=598 #pos=176 */
%   | else return -0.10324854764719717;  // std dev = 0,032, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.11608212599414242;  // std dev = 7,198, 211,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=110 */
%   | | | else return -0.04424463656492291;  // std dev = 4,486, 323,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=22 */
%   | | else return 0.048336124851098866;  // std dev = 0,418, 762,000 (wgt'ed) examples reached here.  /* #neg=586 #pos=176 */
%   | else return -0.09362469970765615;  // std dev = 0,017, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16357586924228404;  // std dev = 0,486, 184,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=110 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.047527255928764264;  // std dev = 4,509, 360,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=22 */
%   | | | else return 0.04763221000814588;  // std dev = 11,479, 745,000 (wgt'ed) examples reached here.  /* #neg=569 #pos=176 */
%   | else return -0.08697895748761077;  // std dev = 0,055, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.08519788119842531;  // std dev = 6,916, 196,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=110 */
%   | | | else return -0.046335814298595485;  // std dev = 4,519, 379,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=22 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0521656367822598;  // std dev = 4,242, 178,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=22 */
%   | | | else return 0.07860566560549859;  // std dev = 10,511, 545,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=154 */
%   | else return -0.08090805140781393;  // std dev = 0,085, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527747;  // std dev = 9,88e-08, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.06870005398526212;  // std dev = 6,868, 195,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=110 */
%   | | | else return -0.06701943064171262;  // std dev = 4,298, 230,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=22 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03429366240018084;  // std dev = 4,495, 342,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=22 */
%   | | | else return 0.03879104543858777;  // std dev = 10,705, 602,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=154 */
%   | else return -0.07404685782544783;  // std dev = 0,014, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.010123252043877823;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.05861283920116627;  // std dev = 6,653, 182,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03269898213088967;  // std dev = 4,502, 347,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=22 */
%   | | | else return 0.017085192631005334;  // std dev = 11,526, 788,000 (wgt'ed) examples reached here.  /* #neg=612 #pos=176 */
%   | else return -0.06915048843864834;  // std dev = 0,022, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.02217594429350595;  // std dev = 7,670, 392,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=122 */
%   | | | else return 0.2756633557798431;  // std dev = 2,198, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.022842395410514027;  // std dev = 4,484, 314,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=22 */
%   | | | else return 0.05538367219159798;  // std dev = 10,515, 546,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=154 */
%   | else return -0.06570760340031985;  // std dev = 0,051, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */


Results
   AUC ROC   = 0.89979
   AUC PR    = 0.575679
   CLL	      = -0.235384
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 103.42099999999999 seconds
Total inference time: 3.937 seconds
AUC ROC: 0.89979


Results scoring model
   AUC ROC   = 0.874031
   AUC PR    = 0.530488
   CLL	      = -0.231886
   Precision = 0.186885 at threshold = 0.5
   Recall    = 0.628676
   F1        = 0.288121


Total scoring time: 15.607 seconds
Refined model CLL: -0.231886


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.89979
   AUC PR    = 0.575679
   CLL	      = -0.235384
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total learning time: 127.666 seconds
Total inference time: 3.937 seconds
AUC ROC: 0.89979
Total revision time: 127.666
Best scored revision CLL: -0.231886


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:43:01
{'parameter_1.0': {'F1': 0.637168, 'Inference time': 2.476, 'Precision': [1.0, 0.5], 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'Learning time': 4.617, 'CLL': -0.245269}, 'F1': 0.293725, 'Inference time': 3.937, 'Precision': [0.184874, 0.5], 'AUC ROC': 0.89979, 'AUC PR': 0.575679, 'Recall': 0.714286, 'Learning time': 127.666, 'CLL': -0.235384}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.5808051850995087;  // std dev = 0,448, 256,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=185 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.08331447953463406;  // std dev = 3,361, 205,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=12 */
%   | | | else return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | | then return -0.07200979505921819;  // std dev = 4,524, 315,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=22 */
%   | | | else return 0.2905433012966908;  // std dev = 13,201, 710,000 (wgt'ed) examples reached here.  /* #neg=403 #pos=307 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4577426755786772;  // std dev = 0,460, 282,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09541927783806016;  // std dev = 3,401, 311,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=12 */
%   | | | else return 0.18952305262274236;  // std dev = 2,602, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02852212691771006;  // std dev = 4,322, 204,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=22 */
%   | | | else return 0.22886051545344538;  // std dev = 13,460, 749,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=307 */
%   else return -0.12544463852839133;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.43005357039777903;  // std dev = 0,427, 259,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08340253194108763;  // std dev = 3,399, 299,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=12 */
%   | | | else return 0.13770143792626213;  // std dev = 2,656, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.030315686658168483;  // std dev = 4,338, 214,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=22 */
%   | | | else return 0.21312627797605824;  // std dev = 13,222, 713,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=307 */
%   else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.02226464429210072;  // std dev = 1,742, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.30194398921944937;  // std dev = 7,199, 257,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=185 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0667912082547548;  // std dev = 3,365, 201,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=12 */
%   | | | else return 0.40692488626548096;  // std dev = 2,024, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.06968793639962802;  // std dev = 3,387, 271,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=12 */
%   | | | else return 0.136659291244185;  // std dev = 2,622, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else return 0.1448987538968168;  // std dev = 0,490, 766,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=307 */
%   else return -0.1015963294878362;  // std dev = 5,27e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.22370086143615295;  // std dev = 0,445, 272,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=193 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.070351876700728;  // std dev = 3,414, 310,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=12 */
%   | | | else return 0.16854353072202274;  // std dev = 2,505, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.058565612521737385;  // std dev = 3,359, 201,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=12 */
%   | | | else return 0.2490898430193979;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0.1497948429259103;  // std dev = 0,496, 707,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=307 */
%   else return -0.09269127618926107;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.21583217318849085;  // std dev = 0,415, 256,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.06414204399453764;  // std dev = 3,408, 320,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=12 */
%   | | | else return 0.09678477510656183;  // std dev = 2,590, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.013822144864381882;  // std dev = 4,128, 189,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=22 */
%   | | | else return 0.09786778950768744;  // std dev = 13,416, 742,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=307 */
%   else return -0.08518475138839682;  // std dev = 5,27e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12817948220266076;  // std dev = 0,439, 267,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.054379980222388595;  // std dev = 3,401, 288,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=12 */
%   | | | else return 0.051340968699269546;  // std dev = 2,646, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.007257261842959735;  // std dev = 4,092, 187,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=22 */
%   | | | else return 0.09077432871438425;  // std dev = 13,250, 717,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=307 */
%   else return -0.07877675473109162;  // std dev = 5,05e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.06170721875761073;  // std dev = 0,454, 282,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=193 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.05290475819261264;  // std dev = 3,405, 312,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=12 */
%   | | | else return 0.03983059965233209;  // std dev = 2,653, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.04569478517341291;  // std dev = 3,350, 186,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=12 */
%   | | | else return 0.47309210296728277;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0.06605127680921621;  // std dev = 0,494, 724,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=307 */
%   else return -0.07324622576333707;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07558166604151492;  // std dev = 0,441, 271,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=193 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05391625032867701;  // std dev = 3,392, 219,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=12 */
%   | | | else return 0.08489799476970399;  // std dev = 2,157, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03621659854257923;  // std dev = 4,295, 351,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=22 */
%   | | | else return 0.054872321011332846;  // std dev = 13,250, 717,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=307 */
%   else return -0.06842697784420267;  // std dev = 4,01e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.04440687234419623;  // std dev = 0,451, 275,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=193 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.044810059710054924;  // std dev = 3,408, 300,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=12 */
%   | | | else return 0.11248526550191691;  // std dev = 2,508, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.029386617789855365;  // std dev = 3,338, 168,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=12 */
%   | | | else return 0.29062496726262765;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0.04861973362528356;  // std dev = 0,496, 706,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=307 */
%   else return -0.06419184008202626;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */


Results
   AUC ROC   = 0.806592
   AUC PR    = 0.081096
   CLL	      = -0.329733
   Precision = 0.106814 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.166428


Total learning time: 449.847 seconds
Total inference time: 4.585 seconds
AUC ROC: 0.806592


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 08:50:36
{'F1': 0.166428, 'Recall': 0.376623, 'Inference time': 4.585, 'Precision': [0.106814, 0.5], 'Learning time': 449.847, 'AUC PR': 0.081096, 'CLL': -0.329733, 'AUC ROC': 0.806592}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5599671169176904;  // std dev = 0,457, 275,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=193 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.1015826085246493;  // std dev = 3,394, 298,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=12 */
%   | | | else return 0.24276431971489695;  // std dev = 2,481, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04363677918620211;  // std dev = 4,454, 224,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=22 */
%   | | | else return 0.275268500316899;  // std dev = 13,377, 736,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=307 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */


Results
   AUC ROC   = 0.804917
   AUC PR    = 0.077769
   CLL	      = -0.209049
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 24.148 seconds
Total inference time: 1.884 seconds
AUC ROC: 0.804917


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 08:51:02
{'F1': nan, 'Recall': 0.0, 'Inference time': 1.884, 'Precision': [nan, 0.5], 'Learning time': 24.148, 'AUC PR': 0.077769, 'CLL': -0.209049, 'AUC ROC': 0.804917}


