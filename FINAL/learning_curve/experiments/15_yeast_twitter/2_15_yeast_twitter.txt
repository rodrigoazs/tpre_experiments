Starting experiment #2 for 15_yeast_twitter

Start learning from source dataset

Source train facts examples: 15015
Source train pos examples: 369
Source train neg examples: 18799

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.8581489350995116;  // std dev = 2,06e-07, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(C, G), phenotype(G, H) )
%   | | | then return 0.5504566274072047;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( complex(A, J), location(A, K) )
%   | | | then return 0.06867525088898589;  // std dev = 3,974, 95,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | | else return 0.19916275998430627;  // std dev = 6,983, 217,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=74 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.2635543405049178;  // std dev = 2,986, 37,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.19591931779501723;  // std dev = 11,595, 601,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=203 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6300897499742097;  // std dev = 0,302, 56,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=50 */
%   | else if ( phenotype(C, E), interaction(C, F) )
%   | | then if ( recursion_proteinclass(F, B), interaction(F, D) )
%   | | | then return 0.7739491407508328;  // std dev = 1,374, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | | else return 0.017750203197462344;  // std dev = 5,839, 236,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=42 */
%   | | else return 0.031618698979073594;  // std dev = 0,394, 149,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=29 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6325879442884308;  // std dev = 0,400, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( location(I, J), phenotype(I, K) )
%   | | | then return 0.16192926165370206;  // std dev = 8,589, 334,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=110 */
%   | | | else return 0.0787417904422769;  // std dev = 3,473, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.42524815166745145;  // std dev = 1,422, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.16611664524885136;  // std dev = 6,732, 205,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=68 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.6049300221606796;  // std dev = 0,369, 369,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=308 */
%   | | else return -0.10000676255940093;  // std dev = 0,266, 532,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=44 */
%   | else return -0.18222205037276992;  // std dev = 0,323, 200,000 (wgt'ed) examples reached here.  /* #neg=200 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(A, H), interaction(F, H) )
%   | | then return 0.45012049516915403;  // std dev = 0,718, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.07744711694547365;  // std dev = 0,425, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8231355184129818;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17186569974499424;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.2948924804876845;  // std dev = 1,193, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.18313917288690953;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( complex(C, E), interaction(F, C) )
%   | then return 0.07145083841126562;  // std dev = 0,390, 613,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=191 */
%   | else if ( location(A, D) )
%   | | then return 0.1244188718986228;  // std dev = 0,399, 250,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=89 */
%   | | else return 0.07594203227907487;  // std dev = 0,394, 130,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=37 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.7766035885395577;  // std dev = 0,077, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.16449114083600994;  // std dev = 0,047, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5229015010369067;  // std dev = 2,039, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return -0.1736792433279306;  // std dev = 0,031, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.2953162090712549;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1589714292570124;  // std dev = 2,739, 37,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.37759950221013716;  // std dev = 0,332, 88,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | else if ( interaction(C, A) )
%   | | then return -0.165759742143125;  // std dev = 0,062, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( recursion_proteinclass(D, B), complex(C, E) )
%   | | | then return 0.27620753421075794;  // std dev = 1,460, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.0630585217118067;  // std dev = 6,950, 311,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=86 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.4478454333246976;  // std dev = 0,287, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6780231539891365;  // std dev = 0,181, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.1877721935639855;  // std dev = 0,161, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.05336653123752443;  // std dev = 4,620, 140,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
%   | | | else return 0.09678536963484208;  // std dev = 7,435, 326,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=108 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.3474012984974423;  // std dev = 0,258, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(A, F), interaction(C, G) )
%   | | | then return 0.36984774166362494;  // std dev = 0,116, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2891521786935544;  // std dev = 0,745, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.3099899097078909;  // std dev = 0,282, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( interaction(A, A) )
%   | then return -0.11714373019068945;  // std dev = 0,172, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.22783461779960365;  // std dev = 2,456, 44,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=28 */
%   | | | else return 0.012529120608720409;  // std dev = 6,242, 307,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=66 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.07007205010627779;  // std dev = 9,501, 601,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=196 */
%   | | | else return 0.17153367271019207;  // std dev = 3,143, 54,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.2133367774370817;  // std dev = 0,225, 33,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | else return 0.34915978648929374;  // std dev = 0,317, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1164816875312297;  // std dev = 0,066, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.1054683540340195;  // std dev = 3,698, 99,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=47 */
%   | | | else return 0.026434232069835577;  // std dev = 9,401, 650,000 (wgt'ed) examples reached here.  /* #neg=470 #pos=180 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, H), enzyme(H, I) )
%   | | | then return 0.03769535547654082;  // std dev = 1,999, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.1401460701562027;  // std dev = 4,648, 118,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=48 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.06366524551537604;  // std dev = 3,030, 58,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.14057542949400978;  // std dev = 1,856, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.14321589564034426;  // std dev = 0,326, 37,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | else return -0.02022265245749539;  // std dev = 0,351, 280,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=68 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.16054822898646984;  // std dev = 0,328, 68,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=48 */
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return -0.05101629093857235;  // std dev = 3,154, 117,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=18 */
%   | | | else return 0.04327425583579897;  // std dev = 8,577, 503,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=161 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.370320957806026;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.014206158726517766;  // std dev = 2,825, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.16720338590984732;  // std dev = 3,169, 51,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | | | else return 0.031785667651844485;  // std dev = 1,679, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), enzyme(E, D) )
%   | then return -0.03157075060678345;  // std dev = 0,321, 125,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   | else return 0.03355519663335977;  // std dev = 0,362, 185,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=60 */
%   else if ( enzyme(A, F), interaction(A, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.27059037525606994;  // std dev = 0,295, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( interaction(G, I), complex(A, J) )
%   | | | then return 0.1296790245559964;  // std dev = 2,322, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.01710169538687247;  // std dev = 3,179, 73,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.48476153095454216;  // std dev = 1,737, 53,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | | | else return -0.21148272876402485;  // std dev = 0,355, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.21398369332791325;  // std dev = 0,896, 34,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return 0.02531197655417835;  // std dev = 8,474, 505,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=148 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.11735249456399877;  // std dev = 0,245, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | else return -0.0308802024505354;  // std dev = 0,224, 192,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=43 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then return 0.5959566270980736;  // std dev = 0,053, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, F), complex(D, G) )
%   | | | then return 0.303933187570908;  // std dev = 0,358, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.04355860900716066;  // std dev = 1,512, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( enzyme(H, J), interaction(K, A) )
%   | | | then return 0.009500680016282823;  // std dev = 3,286, 64,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.06341130661681799;  // std dev = 5,422, 198,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=68 */
%   | | else if ( location(A, L) )
%   | | | then return 0.015067522942786085;  // std dev = 8,838, 586,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=176 */
%   | | | else return -0.0449105821780072;  // std dev = 2,307, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */


Starting fold 1

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 312

Target test facts examples: 1580
Target test pos	 examples: 126
Target test neg examples: 252

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,false;phenotype(A, E), complex(A, F).;false;true
0;false;interaction(A, A).;false;true
0;false,false,true;complex(A, J), location(A, K).;false;false
0;true,false,false;interaction(C, G), phenotype(G, H).;false;false
0;false,false;interaction(A, I), complex(I, J).;true;true
0;true;complex(C, D), complex(A, D).;false;true
0;false,false,false;enzyme(A, L), interaction(A, M).;false;false
1;;proteinclass(A, B) :- interaction(A, C), interaction(D, A).;true;true
1;true,false;phenotype(C, E), interaction(C, F).;true;false
1;true,false,true;recursion_proteinclass(F, B), interaction(F, D).;false;false
1;false;interaction(G, A), recursion_proteinclass(G, B).;false;true
1;false,false,true;location(I, J), phenotype(I, K).;false;false
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;true;recursion_proteinclass(C, B).;false;true
1;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
2;;proteinclass(A, B) :- location(A, C).;true;true
2;false;interaction(A, F), complex(F, G).;true;true
2;true,true;interaction(E, D), interaction(E, A).;false;false
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;false;false
2;false,false;interaction(A, I).;true;true
2;true;location(D, C), recursion_proteinclass(D, B).;true;false
2;false,false,false;interaction(K, A), interaction(L, K).;false;false
2;false,true;interaction(A, H), interaction(F, H).;false;false
3;;proteinclass(A, B) :- interaction(C, A), location(C, D).;true;true
3;true,false;location(A, D).;false;false
3;false;complex(A, G).;true;true
3;false,false,true;phenotype(K, I), recursion_proteinclass(K, B).;false;false
3;false,false;phenotype(A, I), location(A, J).;true;true
3;true;complex(C, E), interaction(F, C).;false;true
3;false,false,false;enzyme(A, L).;false;false
3;false,true;complex(H, G), recursion_proteinclass(H, B).;false;false
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;true,false;interaction(C, A).;false;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;false;true
4;false,false,true;enzyme(I, G), recursion_proteinclass(I, B).;false;false
4;true,false,false;recursion_proteinclass(D, B), complex(C, E).;false;false
4;false,false;enzyme(A, G), phenotype(A, H).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
4;false,false,false;complex(A, J).;false;false
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(E, A), interaction(A, E).;true;false
5;true,false,true;phenotype(A, F), interaction(C, G).;false;false
5;false;interaction(A, A).;false;true
5;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
5;false,false;interaction(A, H), complex(H, I).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;false;true
5;false,false,false;interaction(K, A), location(A, L).;false;false
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,false;interaction(J, A), phenotype(J, K).;false;false
6;false,false;interaction(A, H).;true;true
6;false;interaction(E, A), interaction(F, E).;true;true
6;false,false,true;interaction(H, H), enzyme(H, I).;false;false
6;false,true,false;interaction(G, F), recursion_proteinclass(G, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true;interaction(A, A).;false;true
7;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
7;false,false,false;interaction(A, K), interaction(K, L).;false;false
7;false,false;interaction(A, I), enzyme(I, J).;true;true
7;false;interaction(F, A).;true;true
7;false,false,true;recursion_proteinclass(I, B).;false;false
7;false,true,false;interaction(A, H), interaction(F, H).;false;false
7;true;interaction(E, C), recursion_proteinclass(E, B).;false;false
7;false,true;interaction(G, F), recursion_proteinclass(G, B).;false;true
8;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
8;false,false,false;interaction(A, N), recursion_proteinclass(N, B).;false;false
8;false,false;enzyme(A, K), location(A, L).;true;true
8;false;enzyme(A, F), interaction(A, G).;true;true
8;false,false,true;enzyme(M, K), recursion_proteinclass(M, B).;false;false
8;false,true,false;interaction(G, I), complex(A, J).;false;false
8;true;interaction(E, C), enzyme(E, D).;false;false
8;false,true;interaction(G, H), recursion_proteinclass(H, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;false,false,false;location(A, L).;false;false
9;false,false;interaction(A, H), phenotype(H, I).;true;true
9;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
9;false,false,true;enzyme(H, J), interaction(K, A).;false;false
9;false,true,false;complex(A, F), complex(D, G).;false;false
9;true;recursion_proteinclass(C, B).;false;false
9;false,true;phenotype(D, E), phenotype(A, E).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.15360348055405781;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( tweets(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( follows(C, F) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, G), tweets(G, H) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( follows(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13592671287729013;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(D, A) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.12534419858121462;  // std dev = 2,920, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( follows(C, E) )
%   | | then if ( recursion_accounttype(E, B), follows(E, D) )
%   | | | then return 0.25318558023007953;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.14207446911896834;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then return 0.17411736922415502;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( follows(G, A), follows(H, G) )
%   | | then return 0.04078403589082173;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | | then return 0.14409653342310152;  // std dev = 1,666, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.29036115583472216;  // std dev = 1,912, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(D, A) )
%   | then return 0.13035965027761082;  // std dev = 3,671, 63,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | else return 0.1636627641243298;  // std dev = 2,602, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( tweets(C, D), follows(E, C) )
%   | then return 0.08975761965462686;  // std dev = 3,635, 64,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | else return 0.7630396097166886;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( tweets(A, F) )
%   | then if ( tweets(G, F), recursion_accounttype(G, B) )
%   | | then return 0.23757887456781698;  // std dev = 1,902, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( recursion_accounttype(H, B) )
%   | | then return 0.07120598809785374;  // std dev = 1,642, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.14087028923179198;  // std dev = 3,798, 64,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | else if ( follows(C, A) )
%   | | then return -0.21683529318663264;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( recursion_accounttype(D, B), tweets(C, E) )
%   | | | then return -0.23991512962869188;  // std dev = 0,019, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.24178101893399498;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then return 0.11404845918689614;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.060761818343976204;  // std dev = 1,810, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.11647639082371997;  // std dev = 3,084, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | else if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(C, F) )
%   | | | then return -0.2344183722734236;  // std dev = 0,054, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.18915359230107084;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.030583102561978284;  // std dev = 0,800, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, G), tweets(G, H) )
%   | | then if ( follows(G, I), recursion_accounttype(I, B) )
%   | | | then return 0.18992616262975803;  // std dev = 1,929, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.17483821332690824;  // std dev = 0,982, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.04798469412226977;  // std dev = 1,470, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.017796015521616675;  // std dev = 1,192, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then return 0.14307736193735895;  // std dev = 2,638, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else return 0.09812234838496361;  // std dev = 1,276, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( follows(E, A), follows(F, E) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, F), recursion_accounttype(G, B) )
%   | | | then return -0.08308628495500905;  // std dev = 1,920, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, H) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12576659673333404;  // std dev = 2,152, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( follows(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.014295897284745087;  // std dev = 1,192, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.043442229076679606;  // std dev = 3,552, 64,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | else return -0.30323308857421283;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, F) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return 0.018840714792300255;  // std dev = 1,604, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.22942201803468976;  // std dev = 1,347, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.011463518278604843;  // std dev = 1,192, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C) )
%   | then return 0.030655425727299523;  // std dev = 3,561, 65,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, E) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then return 0.1480378745985534;  // std dev = 1,787, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( follows(E, G), tweets(A, H) )
%   | | | then return -0.23728021009581546;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0029455773623146666;  // std dev = 1,008, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( recursion_accounttype(I, B) )
%   | | then return 0.009179085628293107;  // std dev = 1,192, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.11458082858175471;  // std dev = 2,598, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else return -0.10366972896804515;  // std dev = 1,695, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   else if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), tweets(D, F) )
%   | | then return -0.08091300957158942;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.304091058678238;  // std dev = 0,738, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05691674628091713;  // std dev = 2,096, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return -0.001380399069924226;  // std dev = 0,430, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */


Results
   AUC ROC   = 0.638039
   AUC PR    = 0.42536
   CLL	      = -0.613067
   Precision = 0.454545 at threshold = 0.5
   Recall    = 0.039683
   F1        = 0.072993


Total learning time: 1.543 seconds
Total inference time: 1.055 seconds
AUC ROC: 0.638039


Results scoring model
   AUC ROC   = 0.780697
   AUC PR    = 0.613681
   CLL	      = -0.574387
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.064516
   F1        = 0.121212


Total scoring time: 0.745 seconds
Parameter learned model CLL: -0.574387


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'true,false': 'tweets(A, E)', 'false': 'follows(A, A)', 'true': 'tweets(C, D), tweets(A, D)', 'true,false,false': 'follows(C, F)', 'false,false': 'follows(A, G), tweets(G, H)', 'false,false,true': 'tweets(A, H)', 'false,false,false': 'follows(A, I)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false,false': [0.0, 1, 0], 'true,false,false,true': [1.414, 6, 3], 'false,false,true,false': [1.414, 4, 4], 'true,true': [3.026, 31, 13], 'false,false,true,true': [1.732, 6, 6], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.9, 13, 5]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(D, A)', 'true,false': 'follows(C, E)', 'true,false,true': 'recursion_accounttype(E, B), follows(E, D)', 'false': 'follows(F, A), recursion_accounttype(F, B)', 'false,false': 'follows(G, A), follows(H, G)', 'true': 'recursion_accounttype(C, B)', 'false,false,false': 'follows(A, I), recursion_accounttype(I, B)'}, {'true,false,true,false': [0.816, 2, 1], 'false,false,false,true': [1.666, 9, 4], 'true,true': [2.92, 30, 12], 'true,false,true,true': [1.491, 5, 4], 'false,false,true': [0.4, 4, 1], 'true,false,false': [0.0, 0, 0], 'false,true': [1.155, 4, 2], 'false,false,false,false': [1.912, 8, 7]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'true': 'follows(D, C), follows(D, A)'}, {'true,true': [3.671, 43, 20], 'true,false': [2.602, 19, 11], 'false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'tweets(A, F)', 'false,false': 'recursion_accounttype(H, B)', 'true': 'tweets(C, D), follows(E, C)', 'false,true': 'tweets(G, F), recursion_accounttype(G, B)'}, {'true,false': [0.0, 0, 1], 'true,true': [3.635, 45, 19], 'false,true,true': [1.902, 8, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.642, 9, 4], 'false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(C, D)', 'true,false': 'follows(C, A)', 'false': 'follows(F, A), recursion_accounttype(F, B)', 'true,false,false': 'recursion_accounttype(D, B), tweets(C, E)', 'false,false': 'recursion_accounttype(G, B)', 'true': 'follows(D, C), recursion_accounttype(D, B)'}, {'true,false,true': [0.004, 2, 0], 'true,true': [3.798, 40, 24], 'true,false,false,true': [0.019, 2, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true': [1.81, 11, 5], 'false,true': [1.155, 4, 2], 'true,false,false,false': [0.019, 3, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'true,false': 'follows(E, A), follows(A, E)', 'true,false,true': 'follows(C, F)', 'false': 'follows(A, A)', 'true': 'follows(C, D), recursion_accounttype(D, B)', 'false,false': 'follows(A, G), tweets(G, H)', 'false,false,true': 'follows(G, I), recursion_accounttype(I, B)', 'false,false,false': 'follows(J, A)'}, {'true,false,true,false': [0.0, 1, 0], 'false,false,true,false': [0.982, 2, 2], 'true,true': [3.084, 27, 15], 'true,false,true,true': [0.054, 8, 0], 'false,false,true,true': [1.929, 8, 8], 'false,false,false,true': [1.47, 8, 3], 'true,false,false': [0.8, 3, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.192, 5, 2]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false': 'follows(E, A), follows(F, E)', 'false,true,false': 'follows(G, F), recursion_accounttype(G, B)', 'false,false,false': 'follows(I, A)', 'true': 'follows(A, D), follows(D, A)', 'false,false': 'follows(A, H)', 'false,false,true': 'follows(H, H)', 'false,true': 'follows(A, A)'}, {'true,false': [1.276, 5, 3], 'true,true': [2.638, 19, 12], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.92, 21, 5], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.152, 12, 9], 'false,false,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,false,false': [1.192, 5, 2]}], ['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(E, A)', 'false,false,false': 'follows(A, G), follows(G, H)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false,false': 'follows(A, F)', 'false,false,true': 'recursion_accounttype(F, B)'}, {'true,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [3.552, 44, 20], 'false,false,true,true': [1.604, 9, 4], 'false,false,true,false': [1.347, 3, 5], 'false,false,false,false': [1.192, 5, 2]}], ['accounttype(A, B)', {'': 'follows(C, A)', 'false,false': 'recursion_accounttype(I, B)', 'false': 'follows(A, E)', 'false,true,false': 'follows(E, G), tweets(A, H)', 'true': 'follows(D, C)', 'false,true': 'follows(E, F), recursion_accounttype(F, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [3.561, 45, 20], 'false,true,false,true': [0.0, 2, 0], 'false,true,true': [1.787, 7, 7], 'false,false,true': [1.192, 5, 2], 'false,false,false': [0.0, 0, 0], 'false,true,false,false': [1.008, 3, 2]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(C, A)', 'false': 'follows(D, A), recursion_accounttype(D, B)', 'true': 'recursion_accounttype(C, B)', 'false,false': 'follows(A, G)', 'false,false,true': 'follows(H, A)', 'false,true': 'tweets(A, E), tweets(D, F)'}, {'true,false': [1.695, 18, 4], 'true,true': [2.598, 18, 12], 'false,true,false': [0.738, 1, 2], 'false,false,true,false': [2.096, 12, 9], 'false,true,true': [0.893, 4, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.43, 9, 3]}]]
[{'': [0.20628099173553668, 0.2389196675900276], 'false,false,false': [nan, 0.20061728395061712], 'false': [nan, 0.2389196675900272], 'true': [0.20816115702479288, 0.1983471074380164], 'true,false,false': [0.2222222222222221, 0.0], 'false,false': [0.25, 0.20061728395061712], 'false,false,true': [0.25, 0.24999999999999986], 'true,false': [0.0, 0.20999999999999988]}, {'': [0.213592202000503, 0.22706253162924078], 'false,false,false': [0.21345474529318642, 0.24373274512463716], 'true,false,true': [0.24691358024691348, 0.22222222222222224], 'false': [0.2222222222222222, 0.22787596595219842], 'false,false': [0.16000000000000003, 0.23499614986487763], 'true': [0.202949051024847, 0.2430555555555555], 'true,false': [0.2430555555555555, nan]}, {'': [0.2179763371871457, nan], 'true': [0.21393609806680042, 0.2257095153002074]}, {'': [0.21012596316710386, 0.2323623119966825], 'false': [0.24116758706894756, 0.20737384135366307], 'false,false': [0.20737384135366307, nan], 'true': [0.20643520229325246, 0.0], 'false,true': [0.24116758706894756, nan]}, {'': [0.21568072677971858, 0.21005459936132562], 'true,false': [7.995331430789288e-06, 0.00014769590477975436], 'false': [0.2222222222222223, 0.20471734094512872], 'true,false,false': [0.00018646890773252323, 0.00012045461898471665], 'false,false': [0.20471734094512872, nan], 'true': [0.22538218623264586, 0.00022729360007158115]}, {'': [0.20083623749130558, 0.22341688520722228], 'false,false,false': [0.19646928120725746, 0.20300679649557965], 'true,false,true': [0.00036195775725762075, 0.0], 'false': [nan, 0.2234168852072222], 'true': [0.22648913616727626, 0.06397698688209436], 'false,false': [0.23443421936184894, 0.19922823603020168], 'false,false,true': [0.2326830744481994, 0.24125668204511497], 'true,false': [0.0005241007527174527, 0.15995604039069655]}, {'': [0.22052764537859568, 0.1897155857795932], 'false,false,false': [nan, 0.20300020098189017], 'false,true,false': [0.1417738420954699, nan], 'false': [0.1417738420954699, 0.2184616826757881], 'false,false,true': [nan, 0.22050908069819797], 'false,false': [0.22050908069819797, 0.20300020098189017], 'true': [0.22448787640442885, 0.20357535142148395], 'false,true': [nan, 0.1417738420954699]}, {'': [0.19597298873470578, 0.21679101787272087], 'false,false,false': [nan, 0.20299496361555702], 'false': [nan, 0.21679101787272087], 'true': [0.19718608551648023, 0.0], 'false,false': [0.21947132195753427, 0.20299496361555702], 'false,false,true': [0.1980123457762608, 0.2268908102245597]}, {'': [0.19505412873358427, 0.21264682817868827], 'false,true,false': [0.0, 0.20328098525520408], 'false': [0.21476944975888826, 0.20299080391696317], 'false,false': [0.20299080391696317, nan], 'true': [0.19505412873358427, nan], 'false,true': [0.22811842094652185, 0.15640738132480797]}, {'': [0.19665575857620968, 0.20165126223517033], 'false': [0.20255497054571636, 0.2012819715542052], 'true': [0.22490251966354852, 0.1306566946155661], 'false,false': [0.20924580766135398, 0.18518254017647673], 'false,false,true': [nan, 0.20924580766135398], 'false,true': [0.15965113492104255, 0.18141878039793224]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true,false;tweets(A, E).;true;true
0;true,false,false;follows(C, F).;true;true
0;true;tweets(C, D), tweets(A, D).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;tweets(C, D), follows(E, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true,false;follows(C, A).;true;true
4;true,false,false;recursion_accounttype(D, B), tweets(C, E).;true;true
4;true;follows(D, C), recursion_accounttype(D, B).;true;true
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true,false;follows(E, A), follows(A, E).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;true
5;true,false,true;follows(C, F).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(D, C), recursion_accounttype(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A).;true;true
8;false;follows(A, E).;true;true
8;false,true,false;follows(E, G), tweets(A, H).;true;true
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(E, A), recursion_accounttype(E, B) )
%   | | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | | then return 0.3343394112899885;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.03461952333480635;  // std dev = 0,381, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else return 0.13087620782678497;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( follows(A, G) )
%   | then if ( follows(H, A), follows(G, H) )
%   | | then if ( follows(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, I), follows(G, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.13592671287729013;  // std dev = 0,448, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( recursion_accounttype(C, B), follows(A, C) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then return 0.336663185416773;  // std dev = 0,502, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else return -0.13490075182308134;  // std dev = 0,040, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.04427004938891531;  // std dev = 0,387, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   else if ( follows(A, F), tweets(A, G) )
%   | then if ( recursion_accounttype(F, B) )
%   | | then if ( follows(A, H), follows(H, F) )
%   | | | then return 0.2538822470618342;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.18721558039516759;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5427588762258145;  // std dev = 0,842, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.041458964940193764;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.5183303882208612;  // std dev = 0,814, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08783445193331496;  // std dev = 1,230, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( recursion_accounttype(D, B), follows(A, D) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, C), tweets(D, C) )
%   | | | then return 0.46993954025341356;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.2443461740323008;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11137704096204612;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.02108965699128263;  // std dev = 0,375, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then if ( follows(A, F) )
%   | | then return 0.324942745560851;  // std dev = 0,933, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.42462046445953444;  // std dev = 0,741, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tweets(A, G), follows(A, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.19790613598071258;  // std dev = 1,368, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.4411540690359616;  // std dev = 0,836, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.09060005458681854;  // std dev = 0,424, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( tweets(C, D), follows(E, C) )
%   | then if ( follows(F, A), recursion_accounttype(F, B) )
%   | | then return 0.12997536523320563;  // std dev = 0,433, 38,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | else return 0.01848204143006886;  // std dev = 0,370, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else return 0.4997250530827362;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( tweets(A, G), follows(A, H) )
%   | then if ( follows(H, I), recursion_accounttype(I, B) )
%   | | then if ( tweets(I, G), follows(A, I) )
%   | | | then return 0.03811362232924464;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6922107524558706;  // std dev = 0,248, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.09498809144976741;  // std dev = 0,979, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( follows(A, J), recursion_accounttype(J, B) )
%   | | then return 0.02303762434178074;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.3332070190486909;  // std dev = 0,770, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.062121258288854175;  // std dev = 1,230, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.05908712929146705;  // std dev = 2,697, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.4548215422345702;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, G), recursion_accounttype(G, B) )
%   | | | then return 0.21130594565366262;  // std dev = 1,398, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.2944494993769308;  // std dev = 0,775, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.1921274510357287;  // std dev = 0,036, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( tweets(A, H), follows(A, I) )
%   | then return 0.26979226060304123;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | then return 0.12313849330944852;  // std dev = 1,137, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.10494528722655098;  // std dev = 1,193, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.029798562969199832;  // std dev = 0,916, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), recursion_accounttype(E, B) )
%   | | then return 0.17704649728290275;  // std dev = 0,456, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return -0.03984546510131694;  // std dev = 0,339, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else return -0.09741512296277806;  // std dev = 0,210, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   else if ( follows(A, F), tweets(A, G) )
%   | then if ( follows(H, A), follows(H, F) )
%   | | then return -0.016121575497281427;  // std dev = 0,851, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.3789610982514681;  // std dev = 0,989, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.3154738688445728;  // std dev = 0,599, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.05386420183821927;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(K, A), recursion_accounttype(K, B) )
%   | | | then return 0.10211199669207864;  // std dev = 1,136, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.036263321852869596;  // std dev = 1,518, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(D, E), follows(E, A) )
%   | then return -0.010737905764929095;  // std dev = 0,360, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else if ( follows(A, F), recursion_accounttype(F, B) )
%   | | then return -0.05622183969154098;  // std dev = 0,309, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return 0.3958846143723727;  // std dev = 1,066, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( follows(G, A), recursion_accounttype(G, B) )
%   | then if ( follows(A, G) )
%   | | then return 0.227627108058287;  // std dev = 0,855, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21488123676898394;  // std dev = 0,708, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I), recursion_accounttype(I, B) )
%   | | | then return 0.11391605825719513;  // std dev = 1,219, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.12474291673697468;  // std dev = 1,157, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.04602872063842917;  // std dev = 0,729, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.045669522637645024;  // std dev = 1,476, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), recursion_accounttype(E, B) )
%   | | then return 0.06936941344384107;  // std dev = 0,413, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else return -0.011285874225185311;  // std dev = 0,316, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else return -0.3202784441394556;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( tweets(A, F) )
%   | then if ( follows(A, G), follows(G, H) )
%   | | then if ( recursion_accounttype(G, B), follows(H, G) )
%   | | | then return -0.07670467687244982;  // std dev = 0,887, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.4579766939237371;  // std dev = 0,344, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.08653143959598264;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.010892264822934506;  // std dev = 0,868, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.15845589998394463;  // std dev = 0,742, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.008044609412180059;  // std dev = 0,901, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.3820496655942183;  // std dev = 1,406, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.07816612675078852;  // std dev = 1,573, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return -0.1635411840216858;  // std dev = 0,064, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.01895911940361694;  // std dev = 0,314, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.15232596020119735;  // std dev = 1,036, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.07953590517039115;  // std dev = 1,133, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.07961016565945746;  // std dev = 0,332, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( tweets(A, I) )
%   | | then return 0.07812694348574185;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.04889909476575169;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( recursion_accounttype(D, B), follows(C, A) )
%   | | then return 0.2967899870820641;  // std dev = 0,327, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.0250728544216272;  // std dev = 0,348, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else return -0.20567892669318896;  // std dev = 0,130, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, E), follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then return -0.14734762804268833;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3068825988496267;  // std dev = 0,989, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( tweets(A, H), recursion_accounttype(G, B) )
%   | | | then return -0.05816993614243353;  // std dev = 0,841, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.030701733083654238;  // std dev = 1,047, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.12443600248483451;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.03352150979441632;  // std dev = 1,468, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */


Results
   AUC ROC   = 0.714632
   AUC PR    = 0.522038
   CLL	      = -0.580501
   Precision = 0.629213 at threshold = 0.5
   Recall    = 0.444444
   F1        = 0.52093


Total learning time: 8.166 seconds
Total inference time: 1.463 seconds
AUC ROC: 0.714632


Results scoring model
   AUC ROC   = 0.918835
   AUC PR    = 0.859811
   CLL	      = -0.426063
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.580645
   F1        = 0.705882


Total scoring time: 0.989 seconds
Refined model CLL: -0.426063


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.714632
   AUC PR    = 0.522038
   CLL	      = -0.580501
   Precision = 0.629213 at threshold = 0.5
   Recall    = 0.444444
   F1        = 0.52093


Total learning time: 11.443000000000001 seconds
Total inference time: 1.463 seconds
AUC ROC: 0.714632
Total revision time: 11.443000000000001
Best scored revision CLL: -0.426063


Dataset: 15_yeast_twitter, Fold: 1, Type: Transfer (trRDN-B), Time: 00:48:42
{'CLL': -0.580501, 'Precision': [0.629213, 0.5], 'Inference time': 1.463, 'Learning time': 11.443000000000001, 'AUC ROC': 0.714632, 'F1': 0.52093, 'AUC PR': 0.522038, 'parameter_0.2': {'CLL': -0.613067, 'Precision': [0.454545, 0.5], 'Inference time': 1.055, 'Learning time': 1.543, 'AUC ROC': 0.638039, 'F1': 0.072993, 'AUC PR': 0.42536, 'Recall': 0.039683}, 'Recall': 0.444444}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( recursion_accounttype(C, B), follows(A, C) )
%   | then return 0.24276431971489695;  // std dev = 0,487, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else return 0.04333412028469746;  // std dev = 0,388, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   else if ( follows(A, E), tweets(A, F) )
%   | then if ( recursion_accounttype(E, B) )
%   | | then if ( follows(A, G), follows(G, E) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.19148226843284555;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(C, A), follows(D, C) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.5716525338342496;  // std dev = 1,218, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.32595633318378786;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return -0.020688269342586788;  // std dev = 0,340, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else return -0.09154812004037251;  // std dev = 0,267, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   else if ( follows(A, E) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then if ( follows(E, A) )
%   | | | then return -0.15210493226299482;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5194582599054908;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(E, G), follows(A, G) )
%   | | | then return 0.8037779710687785;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2599578931237785;  // std dev = 1,466, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.11395747527297612;  // std dev = 0,445, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( recursion_accounttype(C, B), follows(A, C) )
%   | then return 0.17975802961846804;  // std dev = 0,465, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else return 0.03638248033836516;  // std dev = 0,383, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   else if ( follows(A, E), tweets(A, F) )
%   | then if ( recursion_accounttype(E, B) )
%   | | then if ( follows(A, G), follows(G, E) )
%   | | | then return 0.22671742899846295;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.17887666865249183;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4370490958159889;  // std dev = 0,837, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.059332569611069606;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4736230479929038;  // std dev = 0,795, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.15009508906325927;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.012188220518587544;  // std dev = 0,900, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( recursion_accounttype(C, B), follows(A, C) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, D), tweets(C, D) )
%   | | | then return 0.44111041896600794;  // std dev = 1,658, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.24710711264219612;  // std dev = 0,123, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.18709073718493932;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.020750945009964262;  // std dev = 0,374, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then if ( follows(A, F) )
%   | | then return 0.2303945931766862;  // std dev = 0,871, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.336406084844729;  // std dev = 0,735, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then if ( follows(G, I), recursion_accounttype(I, B) )
%   | | | then return 0.3239260073506915;  // std dev = 1,249, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.10103355508383853;  // std dev = 0,964, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.07988902025845018;  // std dev = 0,421, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then return 0.09173280046397086;  // std dev = 0,413, 47,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | else return -0.19041456736714857;  // std dev = 0,063, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( follows(E, A), follows(F, A) )
%   | | then return -0.1422290398162701;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( follows(A, F) )
%   | | | then return 0.4781388915240136;  // std dev = 0,851, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.15376493396074925;  // std dev = 1,093, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tweets(A, G) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.2638663337559645;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08903450547436552;  // std dev = 1,473, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.05790262036360031;  // std dev = 0,775, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0022539095346328086;  // std dev = 0,900, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, C) )
%   | then if ( recursion_accounttype(D, B), follows(C, A) )
%   | | then return 0.23856612711595782;  // std dev = 0,446, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else return -0.12160155225917935;  // std dev = 0,235, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | else return 0.4469395124682168;  // std dev = 0,702, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( follows(G, A), follows(G, E) )
%   | | then return -0.009489466186779972;  // std dev = 0,308, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.583756115016204;  // std dev = 0,358, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21044098703500075;  // std dev = 0,945, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( tweets(A, I), follows(A, J) )
%   | | then return 0.1991070785957514;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.07535446927229061;  // std dev = 1,473, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.016204760717854073;  // std dev = 1,189, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(A, C), recursion_accounttype(C, B) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( follows(A, E), follows(E, A) )
%   | | | then return 0.39605451901806393;  // std dev = 0,781, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.027916077367482674;  // std dev = 1,716, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return -0.1753784041590756;  // std dev = 0,112, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.004921300361900031;  // std dev = 0,348, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(G, F), recursion_accounttype(F, B) )
%   | | then if ( recursion_accounttype(G, B) )
%   | | | then return 0.1810205857872146;  // std dev = 1,120, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.16455244125604862;  // std dev = 0,109, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.3400622993359387;  // std dev = 0,341, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( tweets(A, H) )
%   | | then return 0.11650567037399628;  // std dev = 1,158, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.004512874693205898;  // std dev = 0,900, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, C) )
%   | then if ( recursion_accounttype(D, B), follows(C, A) )
%   | | then return 0.1445567791438117;  // std dev = 0,429, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else return -0.10024802462258238;  // std dev = 0,227, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | else return 0.30987027407263296;  // std dev = 0,604, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( follows(A, E), tweets(A, F) )
%   | then if ( follows(G, A), follows(G, E) )
%   | | then return -0.03758899399189697;  // std dev = 0,799, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.28442583002158145;  // std dev = 0,988, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then if ( tweets(A, I) )
%   | | | then return 0.05629406405320302;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.19528699374621342;  // std dev = 0,709, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.07084638088564499;  // std dev = 0,963, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.013627157129348184;  // std dev = 1,514, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( recursion_accounttype(D, B), follows(C, A) )
%   | | then return 0.22313221354174814;  // std dev = 0,342, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.015484205768579588;  // std dev = 0,346, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else return -0.16132090125783158;  // std dev = 0,101, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( follows(F, A), follows(E, A) )
%   | | then return -0.12349533177142308;  // std dev = 0,031, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tweets(A, G), follows(E, A) )
%   | | | then return 0.3559799989962635;  // std dev = 0,796, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07450286740903748;  // std dev = 0,987, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then return 0.07425815664543968;  // std dev = 1,122, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05458000301250661;  // std dev = 1,443, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.040820223493593405;  // std dev = 0,920, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(A, E), recursion_accounttype(E, B) )
%   | then return -0.027773761197425494;  // std dev = 0,312, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( follows(C, F), follows(F, A) )
%   | | then return -0.025490446701012786;  // std dev = 0,329, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return 0.12031870177265977;  // std dev = 0,445, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( recursion_accounttype(H, B), follows(H, G) )
%   | | then if ( follows(A, H), tweets(A, I) )
%   | | | then return -0.0078130278251001;  // std dev = 0,849, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20710992153261004;  // std dev = 1,187, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return -0.10149833477464967;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( follows(A, J) )
%   | | then return -0.02581328194542981;  // std dev = 0,846, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.04745240823869442;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.055375741108129144;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.702712
   AUC PR    = 0.504738
   CLL	      = -0.591033
   Precision = 0.522124 at threshold = 0.5
   Recall    = 0.468254
   F1        = 0.493724


Total learning time: 10.248 seconds
Total inference time: 1.401 seconds
AUC ROC: 0.702712


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN-B), Time: 00:48:54
{'CLL': -0.591033, 'Precision': [0.522124, 0.5], 'Inference time': 1.401, 'Learning time': 10.248, 'AUC ROC': 0.702712, 'F1': 0.493724, 'AUC PR': 0.504738, 'Recall': 0.468254}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( recursion_accounttype(C, B), follows(A, C) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, D), tweets(C, D) )
%   | | | then return 0.5724346493852266;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( follows(C, F), follows(A, F) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( follows(C, G), follows(G, A) )
%   | | | then return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( follows(H, A), recursion_accounttype(H, B) )
%   | then if ( follows(A, H) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tweets(A, I), follows(A, J) )
%   | | then if ( recursion_accounttype(J, B) )
%   | | | then return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(A, K), recursion_accounttype(K, B) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.19148226843284555;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */


Results
   AUC ROC   = 0.647093
   AUC PR    = 0.440547
   CLL	      = -0.687662
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.945 seconds
Total inference time: 1.126 seconds
AUC ROC: 0.647093


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN), Time: 00:48:58
{'CLL': -0.687662, 'Precision': [nan, 0.5], 'Inference time': 1.126, 'Learning time': 2.945, 'AUC ROC': 0.647093, 'F1': nan, 'AUC PR': 0.440547, 'Recall': 0.0}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,false;phenotype(A, E), complex(A, F).;false;true
0;false;interaction(A, A).;false;true
0;false,false,true;complex(A, J), location(A, K).;false;false
0;true,false,false;interaction(C, G), phenotype(G, H).;false;false
0;false,false;interaction(A, I), complex(I, J).;true;true
0;true;complex(C, D), complex(A, D).;false;true
0;false,false,false;enzyme(A, L), interaction(A, M).;false;false
1;;proteinclass(A, B) :- interaction(A, C), interaction(D, A).;true;true
1;true,false;phenotype(C, E), interaction(C, F).;true;false
1;true,false,true;recursion_proteinclass(F, B), interaction(F, D).;false;false
1;false;interaction(G, A), recursion_proteinclass(G, B).;false;true
1;false,false,true;location(I, J), phenotype(I, K).;false;false
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;true;recursion_proteinclass(C, B).;false;true
1;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
2;;proteinclass(A, B) :- location(A, C).;true;true
2;false;interaction(A, F), complex(F, G).;true;true
2;true,true;interaction(E, D), interaction(E, A).;false;false
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;false;false
2;false,false;interaction(A, I).;true;true
2;true;location(D, C), recursion_proteinclass(D, B).;true;false
2;false,false,false;interaction(K, A), interaction(L, K).;false;false
2;false,true;interaction(A, H), interaction(F, H).;false;false
3;;proteinclass(A, B) :- interaction(C, A), location(C, D).;true;true
3;true,false;location(A, D).;false;false
3;false;complex(A, G).;true;true
3;false,false,true;phenotype(K, I), recursion_proteinclass(K, B).;false;false
3;false,false;phenotype(A, I), location(A, J).;true;true
3;true;complex(C, E), interaction(F, C).;false;true
3;false,false,false;enzyme(A, L).;false;false
3;false,true;complex(H, G), recursion_proteinclass(H, B).;false;false
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;true,false;interaction(C, A).;false;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;false;true
4;false,false,true;enzyme(I, G), recursion_proteinclass(I, B).;false;false
4;true,false,false;recursion_proteinclass(D, B), complex(C, E).;false;false
4;false,false;enzyme(A, G), phenotype(A, H).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
4;false,false,false;complex(A, J).;false;false
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(E, A), interaction(A, E).;true;false
5;true,false,true;phenotype(A, F), interaction(C, G).;false;false
5;false;interaction(A, A).;false;true
5;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
5;false,false;interaction(A, H), complex(H, I).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;false;true
5;false,false,false;interaction(K, A), location(A, L).;false;false
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,false;interaction(J, A), phenotype(J, K).;false;false
6;false,false;interaction(A, H).;true;true
6;false;interaction(E, A), interaction(F, E).;true;true
6;false,false,true;interaction(H, H), enzyme(H, I).;false;false
6;false,true,false;interaction(G, F), recursion_proteinclass(G, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true;interaction(A, A).;false;true
7;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
7;false,false,false;interaction(A, K), interaction(K, L).;false;false
7;false,false;interaction(A, I), enzyme(I, J).;true;true
7;false;interaction(F, A).;true;true
7;false,false,true;recursion_proteinclass(I, B).;false;false
7;false,true,false;interaction(A, H), interaction(F, H).;false;false
7;true;interaction(E, C), recursion_proteinclass(E, B).;false;false
7;false,true;interaction(G, F), recursion_proteinclass(G, B).;false;true
8;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
8;false,false,false;interaction(A, N), recursion_proteinclass(N, B).;false;false
8;false,false;enzyme(A, K), location(A, L).;true;true
8;false;enzyme(A, F), interaction(A, G).;true;true
8;false,false,true;enzyme(M, K), recursion_proteinclass(M, B).;false;false
8;false,true,false;interaction(G, I), complex(A, J).;false;false
8;true;interaction(E, C), enzyme(E, D).;false;false
8;false,true;interaction(G, H), recursion_proteinclass(H, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;false,false,false;location(A, L).;false;false
9;false,false;interaction(A, H), phenotype(H, I).;true;true
9;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
9;false,false,true;enzyme(H, J), interaction(K, A).;false;false
9;false,true,false;complex(A, F), complex(D, G).;false;false
9;true;recursion_proteinclass(C, B).;false;false
9;false,true;phenotype(D, E), phenotype(A, E).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.08891816586874314;  // std dev = 3,721, 78,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | else if ( tweets(A, E) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( follows(C, F) )
%   | | | then return 0.14386322081379804;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, G), tweets(G, H) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.32873717039363;  // std dev = 2,910, 34,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.31968739663797385;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( follows(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25814893509951237;  // std dev = 3,098, 40,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(D, A) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.1124038221541291;  // std dev = 3,819, 75,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | else if ( follows(C, E) )
%   | | then if ( recursion_accounttype(E, B), follows(E, D) )
%   | | | then return 0.2897007852553732;  // std dev = 2,288, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.14681101051911663;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.18675074596801108;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then return 0.2354983603664588;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( follows(G, A), follows(H, G) )
%   | | then return -0.009599678849227494;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | | then return 0.010738561867359067;  // std dev = 1,829, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.3185047851172145;  // std dev = 2,998, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(D, A) )
%   | then return 0.14173985054607735;  // std dev = 5,122, 121,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | else return 0.13745543958904596;  // std dev = 3,717, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( tweets(C, D), follows(E, C) )
%   | then return 0.09021251922186693;  // std dev = 5,028, 123,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=37 */
%   | else return 0.7811850008908593;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( tweets(A, F) )
%   | then if ( tweets(G, F), recursion_accounttype(G, B) )
%   | | then return 0.11325330824382548;  // std dev = 2,645, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( recursion_accounttype(H, B) )
%   | | then return 0.1740334363088247;  // std dev = 2,487, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.1088399526170735;  // std dev = 5,148, 124,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | else if ( follows(C, A) )
%   | | then return -0.2219296997996716;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( recursion_accounttype(D, B), tweets(C, E) )
%   | | | then return 0.010798911121715223;  // std dev = 0,810, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.20788605320396436;  // std dev = 0,054, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then return 0.13778475291261827;  // std dev = 2,057, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.1367537715788841;  // std dev = 2,617, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.08518814011133871;  // std dev = 3,887, 72,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | else if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(C, F) )
%   | | | then return -0.21960510202625547;  // std dev = 0,055, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.20273088802206354;  // std dev = 0,026, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.02145515080048506;  // std dev = 1,159, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, G), tweets(G, H) )
%   | | then if ( follows(G, I), recursion_accounttype(I, B) )
%   | | | then return 0.16715711327863314;  // std dev = 3,098, 40,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.13719487422435234;  // std dev = 1,246, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.0785467491757359;  // std dev = 2,264, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.15979106619707897;  // std dev = 2,053, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then return 0.11303372590421322;  // std dev = 3,468, 55,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | else return 0.16753691091443845;  // std dev = 2,313, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   else if ( follows(E, A), follows(F, E) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, F), recursion_accounttype(G, B) )
%   | | | then return -0.061527827897072125;  // std dev = 2,626, 48,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, H) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05222072088858323;  // std dev = 2,921, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( follows(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12458031133475402;  // std dev = 2,053, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.04781070633083299;  // std dev = 4,903, 120,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | else return -0.004900539769781369;  // std dev = 0,962, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( follows(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, F) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return -0.05313096226871556;  // std dev = 1,805, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.16220396351298116;  // std dev = 2,183, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0958815599636696;  // std dev = 2,052, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C) )
%   | then return 0.02819636754484319;  // std dev = 4,940, 124,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   | else return 0.5477892470996336;  // std dev = 0,081, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( follows(A, E) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then return 0.04110267269121594;  // std dev = 2,597, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( follows(E, G), tweets(A, H) )
%   | | | then return -0.16304335490351982;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09003331148518291;  // std dev = 1,185, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( recursion_accounttype(I, B) )
%   | | then return 0.07316538176827728;  // std dev = 2,052, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.09214017078780112;  // std dev = 3,338, 51,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | else return -0.053002266225127555;  // std dev = 2,582, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   else if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), tweets(D, F) )
%   | | then return 0.157770014815424;  // std dev = 1,961, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else return -0.04491357645454328;  // std dev = 1,057, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, A) )
%   | | | then return -0.23149068352755545;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.02260498188785007;  // std dev = 2,875, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else return 0.018863569784250418;  // std dev = 0,472, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */


Results
   AUC ROC   = 0.678367
   AUC PR    = 0.456065
   CLL	      = -0.607162
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.007937
   F1        = 0.015748


Total learning time: 1.891 seconds
Total inference time: 1.036 seconds
AUC ROC: 0.678367


Results scoring model
   AUC ROC   = 0.744342
   AUC PR    = 0.558603
   CLL	      = -0.579503
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.048387
   F1        = 0.092308


Total scoring time: 0.905 seconds
Parameter learned model CLL: -0.579503


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'true,false': 'tweets(A, E)', 'false': 'follows(A, A)', 'true': 'tweets(C, D), tweets(A, D)', 'true,false,false': 'follows(C, F)', 'false,false': 'follows(A, G), tweets(G, H)', 'false,false,true': 'tweets(A, H)', 'false,false,false': 'follows(A, I)'}, {'true,false,true': [1.095, 3, 2], 'true,false,false,false': [0.0, 2, 0], 'true,false,false,true': [1.69, 10, 4], 'false,false,true,false': [1.797, 7, 6], 'true,true': [3.721, 60, 18], 'false,false,true,true': [2.91, 18, 16], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [3.098, 24, 16]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(D, A)', 'true,false': 'follows(C, E)', 'true,false,true': 'recursion_accounttype(E, B), follows(E, D)', 'false': 'follows(F, A), recursion_accounttype(F, B)', 'false,false': 'follows(G, A), follows(H, G)', 'true': 'recursion_accounttype(C, B)', 'false,false,false': 'follows(A, I), recursion_accounttype(I, B)'}, {'true,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.829, 20, 4], 'true,true': [3.819, 55, 20], 'true,false,true,true': [2.288, 11, 10], 'false,false,true': [0.373, 5, 1], 'true,false,false': [0.0, 1, 0], 'false,true': [2.029, 10, 7], 'false,false,false,false': [2.998, 18, 18]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'true': 'follows(D, C), follows(D, A)'}, {'true,true': [5.122, 81, 40], 'true,false': [3.717, 43, 22], 'false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'tweets(A, F)', 'false,false': 'recursion_accounttype(H, B)', 'true': 'tweets(C, D), follows(E, C)', 'false,true': 'tweets(G, F), recursion_accounttype(G, B)'}, {'true,false': [0.021, 0, 3], 'true,true': [5.028, 86, 37], 'false,true,true': [2.645, 22, 11], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.487, 16, 11], 'false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(C, D)', 'true,false': 'follows(C, A)', 'false': 'follows(F, A), recursion_accounttype(F, B)', 'true,false,false': 'recursion_accounttype(D, B), tweets(C, E)', 'false,false': 'recursion_accounttype(G, B)', 'true': 'follows(D, C), recursion_accounttype(D, B)'}, {'true,false,true': [0.066, 4, 0], 'true,true': [5.148, 82, 42], 'true,false,false,true': [0.81, 3, 1], 'false,false,false': [0.0, 0, 0], 'false,false,true': [2.617, 18, 12], 'false,true': [2.057, 11, 7], 'true,false,false,false': [0.054, 6, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'true,false': 'follows(E, A), follows(A, E)', 'true,false,true': 'follows(C, F)', 'false': 'follows(A, A)', 'true': 'follows(C, D), recursion_accounttype(D, B)', 'false,false': 'follows(A, G), tweets(G, H)', 'false,false,true': 'follows(G, I), recursion_accounttype(I, B)', 'false,false,false': 'follows(J, A)'}, {'true,false,true,false': [0.026, 2, 0], 'false,false,true,false': [1.246, 4, 3], 'true,true': [3.887, 50, 22], 'true,false,true,true': [0.055, 14, 0], 'false,false,true,true': [3.098, 21, 19], 'false,false,false,true': [2.264, 15, 8], 'true,false,false': [1.159, 9, 2], 'false,true': [0.0, 0, 0], 'false,false,false,false': [2.053, 9, 8]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false': 'follows(E, A), follows(F, E)', 'false,true,false': 'follows(G, F), recursion_accounttype(G, B)', 'false,false,false': 'follows(I, A)', 'true': 'follows(A, D), follows(D, A)', 'false,false': 'follows(A, H)', 'false,false,true': 'follows(H, H)', 'false,true': 'follows(A, A)'}, {'true,false': [2.313, 12, 11], 'true,true': [3.468, 36, 19], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.626, 38, 10], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.921, 29, 14], 'false,false,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,false,false': [2.053, 9, 8]}], ['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(E, A)', 'false,false,false': 'follows(A, G), follows(G, H)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false,false': 'follows(A, F)', 'false,false,true': 'recursion_accounttype(F, B)'}, {'true,false': [0.962, 4, 2], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [4.903, 82, 38], 'false,false,true,true': [1.805, 20, 4], 'false,false,true,false': [2.183, 9, 10], 'false,false,false,false': [2.052, 9, 8]}], ['accounttype(A, B)', {'': 'follows(C, A)', 'false,false': 'recursion_accounttype(I, B)', 'false': 'follows(A, E)', 'false,true,false': 'follows(E, G), tweets(A, H)', 'true': 'follows(D, C)', 'false,true': 'follows(E, F), recursion_accounttype(F, B)'}, {'true,false': [0.081, 0, 2], 'true,true': [4.94, 86, 38], 'false,true,false,true': [0.021, 4, 0], 'false,true,true': [2.597, 21, 11], 'false,false,true': [2.052, 9, 8], 'false,false,false': [0.0, 0, 0], 'false,true,false,false': [1.185, 4, 3]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(C, A)', 'false': 'follows(D, A), recursion_accounttype(D, B)', 'true': 'recursion_accounttype(C, B)', 'false,false': 'follows(A, G)', 'false,false,true': 'follows(H, A)', 'false,true': 'tweets(A, E), tweets(D, F)'}, {'true,false': [2.582, 33, 10], 'true,true': [3.338, 33, 18], 'false,true,false': [1.057, 4, 2], 'false,false,true,false': [2.875, 29, 14], 'false,true,true': [1.961, 8, 9], 'false,false,true,true': [0.012, 3, 0], 'false,false,false': [0.472, 14, 9]}]]
[{'': [0.18365472910927555, 0.24600343506407746], 'false,false,false': [nan, 0.2399999999999995], 'false': [nan, 0.24600343506407868], 'true': [0.17751479289940775, 0.2040816326530611], 'true,false,false': [0.20408163265306106, 0.0], 'false,false': [0.24898143956541524, 0.2399999999999995], 'false,false,true': [0.24913494809688536, 0.24852071005917165], 'true,false': [0.24000000000000005, 0.18749999999999983]}, {'': [0.21147465386911288, 0.22801536934607416], 'false,false,false': [0.13933592634632105, 0.24973347138361446], 'true,false,true': [0.2493152998879061, 0.22252704731296738], 'false': [0.24221453287197256, 0.22365139352304134], 'false,false': [0.13888888888888892, 0.2283072649303323], 'true': [0.19443145024754113, 0.24488424961985447], 'true,false': [0.24689130336679033, 0.0]}, {'': [0.21533182797941594, nan], 'true': [0.21681337089614708, 0.2125619374733751]}, {'': [0.21170948555425773, 0.22062710349284637], 'false': [0.2119950734270808, 0.22914553927993728], 'false,false': [0.22914553927993728, nan], 'true': [0.2054945438923887, 0.00044681303908000736], 'false,true': [0.2119950734270808, nan]}, {'': [0.20394201118434285, 0.23082956713819025], 'true,false': [0.0010843581526226165, 0.07733055072888453], 'false': [0.23515917700924988, 0.22823140261961358], 'true,false,false': [0.16390311061585944, 0.00048626535538510524], 'false,false': [0.22823140261961344, nan], 'true': [0.21369261388885122, 0.057649154824049025]}, {'': [0.17862055390620538, 0.2369261542608247], 'false,false,false': [0.22279766412512544, 0.2479164193771915], 'true,false,true': [0.00021272524909059825, 0.0003462273586701259], 'false': [nan, 0.23692615426082464], 'true': [0.20986515089480884, 0.059194889724356964], 'false,false': [0.23736012358316438, 0.23508616627467313], 'false,false,true': [0.23997638722395537, 0.22164601519396124], 'true,false': [0.00026055635166014057, 0.12214306990089609]}, {'': [0.22334507349450022, 0.18689063224083557], 'false,false,false': [nan, 0.24784917504993617], 'false,true,false': [0.14363582652048248, nan], 'false': [0.14363582652048248, 0.2134841751760833], 'false,false,true': [nan, 0.1984145045085555], 'false,false': [0.1984145045085555, 0.24784917504993617], 'true': [0.21863741233856793, 0.23250787222971656], 'false,true': [nan, 0.14363582652048248]}, {'': [0.19825122670458517, 0.2127291741904203], 'false,false,false': [nan, 0.24780454205879932], 'false': [nan, 0.2127291741904203], 'false,false,true': [0.1358036876031392, 0.250774089911474], 'false,false': [0.19804010841715314, 0.24780454205879932], 'true': [0.20032257099389675, 0.1541781738083738]}, {'': [0.1979396071149286, 0.20935810682741918], 'false,true,false': [0.00010559384744706496, 0.20076946962999406], 'false': [0.19364375466316197, 0.24777565378376015], 'false,false': [0.24777565378376015, nan], 'true': [0.19679431357646143, 0.0032563914203619926], 'false,true': [0.2107074216299236, 0.14262176582453667]}, {'': [0.19464588757579918, 0.20521956246218997], 'false': [0.22370563255202858, 0.19682091940364635], 'false,false,true': [4.5053986712284555e-05, 0.19218930418380234], 'false,false': [0.18359427951432944, 0.22316445915716215], 'true': [0.21842037314310692, 0.15501863894417367], 'false,true': [0.22626156394320143, 0.1860998769918991]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true,false;tweets(A, E).;true;true
0;true,false,false;follows(C, F).;true;true
0;true;tweets(C, D), tweets(A, D).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;true
1;true,false;follows(C, E).;true;true
1;true;recursion_accounttype(C, B).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;tweets(C, D), follows(E, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true,false;follows(C, A).;true;true
4;true,false,false;recursion_accounttype(D, B), tweets(C, E).;true;true
4;true;follows(D, C), recursion_accounttype(D, B).;true;true
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true,false;follows(E, A), follows(A, E).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;true
5;true,false,true;follows(C, F).;true;true
8;;accounttype(A, B) :- follows(C, A).;true;true
8;false;follows(A, E).;true;true
8;false,true,false;follows(E, G), tweets(A, H).;true;true
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
9;false;follows(D, A), recursion_accounttype(D, B).;true;true
9;false,false;follows(A, G).;true;true
9;false,false,true;follows(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.08891816586874314;  // std dev = 0,421, 78,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | else return 0.143863220813798;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   else if ( follows(E, A), follows(F, E) )
%   | then if ( recursion_accounttype(F, B), follows(E, F) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.15444523139580865;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.4692600462106234;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then if ( follows(H, J), tweets(J, I) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3844647245731965;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(D, A) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.11257873674100459;  // std dev = 0,442, 75,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | else if ( follows(C, E) )
%   | | then if ( follows(F, A), recursion_accounttype(F, B) )
%   | | | then return 0.3175892040965731;  // std dev = 1,214, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2432710620781495;  // std dev = 2,197, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.01061912514922878;  // std dev = 0,373, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | else if ( follows(H, A) )
%   | | then if ( recursion_accounttype(H, B), tweets(A, I) )
%   | | | then return 0.33040163364534925;  // std dev = 1,733, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.01809656807741159;  // std dev = 1,248, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.2781593380491541;  // std dev = 2,028, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.33095332360970464;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.20101977893277584;  // std dev = 0,482, 54,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else return -0.07409593750913694;  // std dev = 0,287, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   else if ( follows(E, A), follows(F, E) )
%   | then if ( follows(F, A), follows(A, E) )
%   | | then return -0.0347843393273593;  // std dev = 0,372, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( follows(A, E), recursion_accounttype(F, B) )
%   | | | then return 0.6367936867230982;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.11082339204898635;  // std dev = 2,432, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then if ( follows(G, I), tweets(I, H) )
%   | | | then return 0.2610998133356559;  // std dev = 1,412, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.4637550098310732;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.12423324443104307;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.27367588493199535;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( tweets(C, D), follows(E, C) )
%   | then if ( follows(F, A), recursion_accounttype(F, B) )
%   | | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | | then return 0.2302833765240545;  // std dev = 3,882, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | | | else return -0.19905736307206573;  // std dev = 0,137, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.01007272080465308;  // std dev = 0,341, 48,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | else return 0.7388442129825242;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return 0.018796746907905174;  // std dev = 0,373, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.220260882088691;  // std dev = 1,609, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.1029459541767966;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.19230254804756486;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2377570935021103;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), recursion_accounttype(E, B) )
%   | | then return 0.17154530177314603;  // std dev = 0,474, 56,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | | else return 0.05330262137314389;  // std dev = 0,403, 68,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else return -0.14475584528433003;  // std dev = 0,204, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   else if ( follows(F, A) )
%   | then if ( recursion_accounttype(F, B), tweets(A, G) )
%   | | then if ( follows(F, H), follows(H, A) )
%   | | | then return 0.32692108817605164;  // std dev = 1,505, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.20992585220580737;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.022263513365469195;  // std dev = 0,359, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( tweets(A, I), follows(A, J) )
%   | | then return 0.22383454090620206;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.04848104590152625;  // std dev = 0,749, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.14938329596195474;  // std dev = 2,025, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.030562961119102186;  // std dev = 0,406, 99,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   else if ( follows(A, D), tweets(A, E) )
%   | then if ( follows(F, A), follows(F, D) )
%   | | then if ( follows(D, A) )
%   | | | then return -0.02335090400401946;  // std dev = 1,249, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.2233442912151757;  // std dev = 1,075, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( follows(D, A) )
%   | | | then return 0.43160228831728376;  // std dev = 0,755, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13141242690470348;  // std dev = 1,632, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( recursion_accounttype(G, B), tweets(A, H) )
%   | | | then return 0.17752402668179068;  // std dev = 1,623, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.017973084711809948;  // std dev = 1,456, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05521125618699448;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16249301515998016;  // std dev = 2,201, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.18025011653297873;  // std dev = 3,329, 46,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=22 */
%   | | | else return 0.5557337599577291;  // std dev = 0,866, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.12827672848882463;  // std dev = 0,298, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return -0.19277884742005658;  // std dev = 0,173, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.0719565122329239;  // std dev = 0,285, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then if ( follows(I, A), follows(I, G) )
%   | | | then return 0.06351350935554974;  // std dev = 1,363, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.1852311692439103;  // std dev = 1,818, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.031761227654248755;  // std dev = 1,167, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.09102411440246032;  // std dev = 2,465, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( follows(A, C), tweets(A, E) )
%   | | | then return 0.24227819781275894;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.4870441869606081;  // std dev = 0,883, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( follows(A, D), follows(A, C) )
%   | | | then return -0.29697508978327686;  // std dev = 0,069, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.12309880278943341;  // std dev = 3,004, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | else return -0.16490624200753168;  // std dev = 0,152, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.06248818444246713;  // std dev = 0,285, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then return 0.10222489020462326;  // std dev = 0,431, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( follows(I, A) )
%   | | | then return -0.026372364445364525;  // std dev = 1,168, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.06950038096231925;  // std dev = 2,465, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( tweets(D, E), follows(F, D) )
%   | | then if ( recursion_accounttype(F, B), follows(D, F) )
%   | | | then return 0.13517861840623033;  // std dev = 3,378, 51,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | | else return -0.18648921059728615;  // std dev = 0,328, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.476147765950243;  // std dev = 0,242, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.035629163672062515;  // std dev = 0,306, 48,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   else if ( follows(A, G) )
%   | then if ( follows(G, H), recursion_accounttype(H, B) )
%   | | then if ( tweets(A, I) )
%   | | | then return 0.08277816806922529;  // std dev = 2,053, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.04341225750285341;  // std dev = 1,524, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return -0.039566245727513556;  // std dev = 0,339, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( tweets(A, J) )
%   | | then return 0.009904851656055666;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.07062030433602144;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then return -0.02174019547358452;  // std dev = 0,357, 71,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | else return 0.08291416093550452;  // std dev = 0,404, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   else if ( follows(E, A), recursion_accounttype(E, B) )
%   | then if ( follows(A, F), follows(F, G) )
%   | | then return 0.23667557228932337;  // std dev = 0,841, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.06716091878428232;  // std dev = 1,487, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.027671468440737958;  // std dev = 0,764, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(J, A) )
%   | | | then return -0.19898487505764587;  // std dev = 0,142, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.033253032844941015;  // std dev = 2,808, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( follows(K, A) )
%   | | | then return -0.008625679362740788;  // std dev = 0,880, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.03701455073290553;  // std dev = 2,017, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */


Results
   AUC ROC   = 0.746866
   AUC PR    = 0.553312
   CLL	      = -0.554004
   Precision = 0.606061 at threshold = 0.5
   Recall    = 0.31746
   F1        = 0.416667


Total learning time: 13.796 seconds
Total inference time: 1.738 seconds
AUC ROC: 0.746866


Results scoring model
   AUC ROC   = 0.853993
   AUC PR    = 0.734455
   CLL	      = -0.484913
   Precision = 0.756757 at threshold = 0.5
   Recall    = 0.451613
   F1        = 0.565657


Total scoring time: 1.371 seconds
Refined model CLL: -0.484913


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.746866
   AUC PR    = 0.553312
   CLL	      = -0.554004
   Precision = 0.606061 at threshold = 0.5
   Recall    = 0.31746
   F1        = 0.416667


Total learning time: 17.962999999999997 seconds
Total inference time: 1.738 seconds
AUC ROC: 0.746866
Total revision time: 17.962999999999997
Best scored revision CLL: -0.484913


Dataset: 15_yeast_twitter, Fold: 1, Type: Transfer (trRDN-B), Time: 00:49:19
{'CLL': -0.554004, 'Precision': [0.606061, 0.5], 'Inference time': 1.738, 'Learning time': 17.962999999999997, 'parameter_0.4': {'CLL': -0.607162, 'Precision': [1.0, 0.5], 'Inference time': 1.036, 'Learning time': 1.891, 'AUC ROC': 0.678367, 'F1': 0.015748, 'AUC PR': 0.456065, 'Recall': 0.007937}, 'AUC ROC': 0.746866, 'F1': 0.416667, 'AUC PR': 0.553312, 'Recall': 0.31746}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.22851930546988244;  // std dev = 0,483, 54,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else return -0.05296217601159885;  // std dev = 0,285, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   else if ( follows(E, A), follows(F, E) )
%   | then if ( recursion_accounttype(F, B), follows(E, F) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.15444523139580865;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.4692600462106234;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then if ( follows(H, J), tweets(J, I) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3844647245731965;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.19836496091011233;  // std dev = 0,483, 54,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else return -0.046636589713539914;  // std dev = 0,285, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   else if ( follows(E, A), follows(F, E) )
%   | then if ( follows(F, A), follows(A, E) )
%   | | then return 0.004034329978069832;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( follows(A, E), recursion_accounttype(F, B) )
%   | | | then return 0.6798518943678502;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.1405808481880959;  // std dev = 2,468, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then if ( follows(G, I), tweets(I, H) )
%   | | | then return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.33095332360970464;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.16825345118168056;  // std dev = 0,483, 54,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else return -0.04126500401346211;  // std dev = 0,285, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   else if ( follows(E, A), tweets(E, F) )
%   | then if ( tweets(A, F) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.11761471166381891;  // std dev = 2,221, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.38772045788039716;  // std dev = 1,660, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return -0.01940636617476749;  // std dev = 0,363, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.26774330844006766;  // std dev = 1,611, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.3215614416687113;  // std dev = 1,316, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.2858216339198499;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.11580021916864802;  // std dev = 0,446, 72,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | else return -0.09038943008682879;  // std dev = 0,263, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   else if ( follows(E, A), tweets(E, F) )
%   | then if ( tweets(A, F) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.10008400462851656;  // std dev = 2,221, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.3055584944150818;  // std dev = 1,635, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return -0.016402306079219556;  // std dev = 0,363, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.21163384929379767;  // std dev = 1,608, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.25664411078715055;  // std dev = 1,317, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.22817077713402803;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( follows(A, E), tweets(A, F) )
%   | | | then return 0.1977720574344279;  // std dev = 3,076, 38,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.49542462303222473;  // std dev = 1,651, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else return -0.0749536740392082;  // std dev = 0,349, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return -0.21853073404013923;  // std dev = 0,055, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.04129986025332836;  // std dev = 0,284, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.11926032486278884;  // std dev = 0,968, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.22473818268765258;  // std dev = 1,520, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.13552810242510904;  // std dev = 1,845, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.16101167794411095;  // std dev = 2,295, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( tweets(C, E), follows(F, C) )
%   | | then if ( follows(F, A), follows(D, F) )
%   | | | then return 0.30311008847622695;  // std dev = 2,731, 32,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return -0.03822646889442457;  // std dev = 2,177, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else return 0.6653990990153179;  // std dev = 0,199, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.18406617824754493;  // std dev = 0,178, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.036698925283189285;  // std dev = 0,284, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.10120814167883531;  // std dev = 0,967, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.17170670327831267;  // std dev = 1,511, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.10371733366094935;  // std dev = 1,844, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.1249149891860959;  // std dev = 2,294, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(D, E), tweets(A, E) )
%   | | | then return 0.24824493308834597;  // std dev = 3,007, 39,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | | else return 0.007572954457598892;  // std dev = 1,585, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return -0.08623189920906395;  // std dev = 0,297, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return -0.1583909698469602;  // std dev = 0,160, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( follows(F, A) )
%   | then return -0.03858461506399356;  // std dev = 0,281, 48,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | else if ( follows(A, G), recursion_accounttype(G, B) )
%   | | then if ( follows(G, H), follows(H, G) )
%   | | | then return -0.023293836783906056;  // std dev = 1,333, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.38640881423272877;  // std dev = 0,989, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tweets(A, I), follows(A, J) )
%   | | | then return 0.10330338574591363;  // std dev = 1,604, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.08306309549336746;  // std dev = 2,467, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( recursion_accounttype(D, B), follows(C, D) )
%   | then return 0.03756585982061506;  // std dev = 0,391, 111,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=38 */
%   | else return -0.15607373227250868;  // std dev = 0,065, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( tweets(A, E), follows(A, F) )
%   | then if ( follows(F, G), follows(A, G) )
%   | | then if ( recursion_accounttype(G, B), follows(G, H) )
%   | | | then return 4.931664010244148E-4;  // std dev = 0,933, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.7334420719303352;  // std dev = 0,217, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( follows(F, I), tweets(I, E) )
%   | | | then return -0.058122976434179394;  // std dev = 1,287, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.20459046342885037;  // std dev = 0,869, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(A, J), recursion_accounttype(J, B) )
%   | | then return -0.002550691367166718;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.025814774088474268;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07517442464804512;  // std dev = 2,177, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), follows(E, C) )
%   | then if ( recursion_accounttype(E, B), follows(C, E) )
%   | | then if ( tweets(E, D), tweets(A, D) )
%   | | | then return 0.223367378619326;  // std dev = 2,803, 35,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   | | | else return -0.09894794112795174;  // std dev = 1,645, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return -0.16259564401237842;  // std dev = 0,055, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.4633925518459271;  // std dev = 0,126, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.039472280983240036;  // std dev = 0,261, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | else if ( follows(G, A), follows(A, G) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return -0.042666732322089916;  // std dev = 0,938, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.19345525234095262;  // std dev = 1,218, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( follows(I, A) )
%   | | | then return -0.1396194435155708;  // std dev = 0,767, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.04880613372498962;  // std dev = 2,902, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then return 9.91997217342778E-4;  // std dev = 0,359, 124,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   else if ( tweets(A, E), follows(A, F) )
%   | then if ( follows(A, G), follows(F, G) )
%   | | then if ( recursion_accounttype(G, B), follows(G, H) )
%   | | | then return 0.004678436977745438;  // std dev = 0,933, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.553947001611657;  // std dev = 0,325, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( follows(F, I), tweets(I, E) )
%   | | | then return -0.060232387940036276;  // std dev = 1,245, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.14281105750019876;  // std dev = 0,869, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(A, J) )
%   | | then if ( follows(J, K), follows(A, K) )
%   | | | then return 0.15378456229470622;  // std dev = 0,974, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07774314316079813;  // std dev = 1,314, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.009700206033540807;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06484961384816677;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */


Results
   AUC ROC   = 0.767196
   AUC PR    = 0.574778
   CLL	      = -0.541775
   Precision = 0.608696 at threshold = 0.5
   Recall    = 0.222222
   F1        = 0.325581


Total learning time: 18.061 seconds
Total inference time: 1.42 seconds
AUC ROC: 0.767196


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN-B), Time: 00:49:39
{'CLL': -0.541775, 'Precision': [0.608696, 0.5], 'Inference time': 1.42, 'Learning time': 18.061, 'AUC ROC': 0.767196, 'F1': 0.325581, 'AUC PR': 0.574778, 'Recall': 0.222222}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(D, C), follows(C, A) )
%   | | then if ( follows(A, D), tweets(A, E) )
%   | | | then return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.6914822684328454;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tweets(C, F), follows(C, G) )
%   | | | then return 0.05259337954395681;  // std dev = 2,375, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( follows(H, A) )
%   | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( follows(C, I), follows(I, C) )
%   | | | then return -0.0418510649004878;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( follows(J, A), follows(K, J) )
%   | then if ( recursion_accounttype(K, B), follows(J, K) )
%   | | then if ( follows(J, L), follows(L, A) )
%   | | | then return 0.15444523139580865;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.4692600462106234;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( follows(A, M), tweets(A, N) )
%   | | then if ( follows(M, P), tweets(P, N) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tweets(A, Q) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3844647245731965;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */


Results
   AUC ROC   = 0.750724
   AUC PR    = 0.568804
   CLL	      = -0.673096
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.674 seconds
Total inference time: 0.779 seconds
AUC ROC: 0.750724


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN), Time: 00:49:44
{'CLL': -0.673096, 'Precision': [nan, 0.5], 'Inference time': 0.779, 'Learning time': 3.674, 'AUC ROC': 0.750724, 'F1': nan, 'AUC PR': 0.568804, 'Recall': 0.0}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,false;phenotype(A, E), complex(A, F).;false;true
0;false;interaction(A, A).;false;true
0;false,false,true;complex(A, J), location(A, K).;false;false
0;true,false,false;interaction(C, G), phenotype(G, H).;false;false
0;false,false;interaction(A, I), complex(I, J).;true;true
0;true;complex(C, D), complex(A, D).;false;true
0;false,false,false;enzyme(A, L), interaction(A, M).;false;false
1;;proteinclass(A, B) :- interaction(A, C), interaction(D, A).;true;true
1;true,false;phenotype(C, E), interaction(C, F).;true;false
1;true,false,true;recursion_proteinclass(F, B), interaction(F, D).;false;false
1;false;interaction(G, A), recursion_proteinclass(G, B).;false;true
1;false,false,true;location(I, J), phenotype(I, K).;false;false
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;true;recursion_proteinclass(C, B).;false;true
1;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
2;;proteinclass(A, B) :- location(A, C).;true;true
2;false;interaction(A, F), complex(F, G).;true;true
2;true,true;interaction(E, D), interaction(E, A).;false;false
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;false;false
2;false,false;interaction(A, I).;true;true
2;true;location(D, C), recursion_proteinclass(D, B).;true;false
2;false,false,false;interaction(K, A), interaction(L, K).;false;false
2;false,true;interaction(A, H), interaction(F, H).;false;false
3;;proteinclass(A, B) :- interaction(C, A), location(C, D).;true;true
3;true,false;location(A, D).;false;false
3;false;complex(A, G).;true;true
3;false,false,true;phenotype(K, I), recursion_proteinclass(K, B).;false;false
3;false,false;phenotype(A, I), location(A, J).;true;true
3;true;complex(C, E), interaction(F, C).;false;true
3;false,false,false;enzyme(A, L).;false;false
3;false,true;complex(H, G), recursion_proteinclass(H, B).;false;false
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;true,false;interaction(C, A).;false;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;false;true
4;false,false,true;enzyme(I, G), recursion_proteinclass(I, B).;false;false
4;true,false,false;recursion_proteinclass(D, B), complex(C, E).;false;false
4;false,false;enzyme(A, G), phenotype(A, H).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
4;false,false,false;complex(A, J).;false;false
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(E, A), interaction(A, E).;true;false
5;true,false,true;phenotype(A, F), interaction(C, G).;false;false
5;false;interaction(A, A).;false;true
5;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
5;false,false;interaction(A, H), complex(H, I).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;false;true
5;false,false,false;interaction(K, A), location(A, L).;false;false
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,false;interaction(J, A), phenotype(J, K).;false;false
6;false,false;interaction(A, H).;true;true
6;false;interaction(E, A), interaction(F, E).;true;true
6;false,false,true;interaction(H, H), enzyme(H, I).;false;false
6;false,true,false;interaction(G, F), recursion_proteinclass(G, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true;interaction(A, A).;false;true
7;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
7;false,false,false;interaction(A, K), interaction(K, L).;false;false
7;false,false;interaction(A, I), enzyme(I, J).;true;true
7;false;interaction(F, A).;true;true
7;false,false,true;recursion_proteinclass(I, B).;false;false
7;false,true,false;interaction(A, H), interaction(F, H).;false;false
7;true;interaction(E, C), recursion_proteinclass(E, B).;false;false
7;false,true;interaction(G, F), recursion_proteinclass(G, B).;false;true
8;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
8;false,false,false;interaction(A, N), recursion_proteinclass(N, B).;false;false
8;false,false;enzyme(A, K), location(A, L).;true;true
8;false;enzyme(A, F), interaction(A, G).;true;true
8;false,false,true;enzyme(M, K), recursion_proteinclass(M, B).;false;false
8;false,true,false;interaction(G, I), complex(A, J).;false;false
8;true;interaction(E, C), enzyme(E, D).;false;false
8;false,true;interaction(G, H), recursion_proteinclass(H, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;false,false,false;location(A, L).;false;false
9;false,false;interaction(A, H), phenotype(H, I).;true;true
9;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
9;false,false,true;enzyme(H, J), interaction(K, A).;false;false
9;false,true,false;complex(A, F), complex(D, G).;false;false
9;true;recursion_proteinclass(C, B).;false;false
9;false,true;phenotype(D, E), phenotype(A, E).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.09746517441575071;  // std dev = 4,615, 117,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=28 */
%   | else if ( tweets(A, E) )
%   | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( follows(C, F) )
%   | | | then return 0.18072958026080266;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, G), tweets(G, H) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.35814893509951135;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return 0.3819584589090361;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( follows(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.21663950113724814;  // std dev = 3,491, 53,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(D, A) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.13195332531328394;  // std dev = 5,052, 125,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | else if ( follows(C, E) )
%   | | then if ( recursion_accounttype(E, B), follows(E, D) )
%   | | | then return 0.27478948119268315;  // std dev = 2,734, 30,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.09339544219771799;  // std dev = 1,194, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.19125886421436483;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then return 0.23877082927365204;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( follows(G, A), follows(H, G) )
%   | | then return -0.05920896870614599;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | | then return -0.03412811817832461;  // std dev = 1,873, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return 0.3560778698283194;  // std dev = 3,513, 50,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(D, A) )
%   | then return 0.14447792972523857;  // std dev = 6,377, 186,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=62 */
%   | else return 0.12884244117591914;  // std dev = 4,367, 93,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( tweets(C, D), follows(E, C) )
%   | then return 0.09786063281923964;  // std dev = 6,326, 191,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=59 */
%   | else return 0.5333649027183525;  // std dev = 0,428, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( tweets(A, F) )
%   | then if ( tweets(G, F), recursion_accounttype(G, B) )
%   | | then return 0.10144060142412724;  // std dev = 2,972, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( recursion_accounttype(H, B) )
%   | | then return 0.18824272066043482;  // std dev = 2,996, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.12070262882578739;  // std dev = 6,574, 197,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=70 */
%   | else if ( follows(C, A) )
%   | | then return -0.2257014341505484;  // std dev = 0,066, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( recursion_accounttype(D, B), tweets(C, E) )
%   | | | then return -0.028917560682425854;  // std dev = 0,818, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.19832434279250274;  // std dev = 0,062, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then return 0.14439608227282216;  // std dev = 2,332, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.07581380209565831;  // std dev = 2,848, 39,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.10250247088874594;  // std dev = 4,941, 112,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
%   | else if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(C, F) )
%   | | | then return -0.18417625737365434;  // std dev = 0,980, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return -0.21031118603168256;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0864754338723809;  // std dev = 1,258, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, G), tweets(G, H) )
%   | | then if ( follows(G, I), recursion_accounttype(I, B) )
%   | | | then return 0.19015565752352537;  // std dev = 3,848, 61,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=31 */
%   | | | else return 0.13505314845412578;  // std dev = 1,248, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.06489001772182208;  // std dev = 2,558, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.1129183511031989;  // std dev = 2,297, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then return 0.12859220473451072;  // std dev = 4,406, 86,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
%   | else return 0.19976697431530605;  // std dev = 2,670, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else if ( follows(E, A), follows(F, E) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, F), recursion_accounttype(G, B) )
%   | | | then return -0.08086451697893554;  // std dev = 3,304, 78,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, H) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07027567128746527;  // std dev = 3,466, 62,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | | else if ( follows(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.088860725530415;  // std dev = 2,296, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.058265426538507026;  // std dev = 6,111, 179,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=60 */
%   | else return -0.1228802876206428;  // std dev = 1,117, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   else if ( follows(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, F) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return -0.08884379079953378;  // std dev = 1,845, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return 0.20915167188620962;  // std dev = 2,684, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06922400874085487;  // std dev = 2,296, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C) )
%   | then return 0.029687040765072073;  // std dev = 6,169, 192,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=60 */
%   | else return 0.6281396768625187;  // std dev = 0,082, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( follows(A, E) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then return 0.056491031442003514;  // std dev = 3,132, 49,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else if ( follows(E, G), tweets(A, H) )
%   | | | then return -0.14301926631855438;  // std dev = 0,011, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.02658753957050027;  // std dev = 1,214, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( recursion_accounttype(I, B) )
%   | | then return 0.05353156252328883;  // std dev = 2,296, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.09398008770719583;  // std dev = 4,156, 77,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   | else return -0.040257096612950675;  // std dev = 3,415, 70,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   else if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), tweets(D, F) )
%   | | then return 0.17408392583786111;  // std dev = 2,349, 24,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else return -0.03501935537051684;  // std dev = 1,069, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, A) )
%   | | | then return -0.23344331362579654;  // std dev = 0,103, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.02776866178599398;  // std dev = 3,376, 63,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | else return -0.002092034847882643;  // std dev = 0,451, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */


Results
   AUC ROC   = 0.678493
   AUC PR    = 0.479478
   CLL	      = -0.601972
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.007937
   F1        = 0.015748


Total learning time: 2.76 seconds
Total inference time: 1.057 seconds
AUC ROC: 0.678493


Results scoring model
   AUC ROC   = 0.753436
   AUC PR    = 0.5754
   CLL	      = -0.572407
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.021505
   F1        = 0.042105


Total scoring time: 0.954 seconds
Parameter learned model CLL: -0.572407


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'true,false': 'tweets(A, E)', 'false': 'follows(A, A)', 'true': 'tweets(C, D), tweets(A, D)', 'true,false,false': 'follows(C, F)', 'false,false': 'follows(A, G), tweets(G, H)', 'false,false,true': 'tweets(A, H)', 'false,false,false': 'follows(A, I)'}, {'true,false,true': [1.155, 4, 2], 'true,false,false,false': [0.0, 5, 0], 'true,false,false,true': [2.603, 21, 10], 'false,false,true,false': [2.289, 10, 11], 'true,true': [4.615, 89, 28], 'false,false,true,true': [3.391, 23, 23], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [3.491, 34, 19]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(D, A)', 'true,false': 'follows(C, E)', 'true,false,true': 'recursion_accounttype(E, B), follows(E, D)', 'false': 'follows(F, A), recursion_accounttype(F, B)', 'false,false': 'follows(G, A), follows(H, G)', 'true': 'recursion_accounttype(C, B)', 'false,false,false': 'follows(A, I), recursion_accounttype(I, B)'}, {'true,false,true,false': [1.194, 5, 2], 'false,false,false,true': [1.873, 29, 4], 'true,true': [5.052, 89, 36], 'true,false,true,true': [2.734, 16, 14], 'false,false,true': [0.314, 8, 1], 'true,false,false': [0.0, 1, 0], 'false,true': [2.306, 13, 9], 'false,false,false,false': [3.513, 23, 27]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'true': 'follows(D, C), follows(D, A)'}, {'true,true': [6.377, 124, 62], 'true,false': [4.367, 62, 31], 'false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'tweets(A, F)', 'false,false': 'recursion_accounttype(H, B)', 'true': 'tweets(C, D), follows(E, C)', 'false,true': 'tweets(G, F), recursion_accounttype(G, B)'}, {'true,false': [0.428, 1, 3], 'true,true': [6.326, 132, 59], 'false,true,true': [2.972, 29, 14], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.996, 23, 17], 'false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(C, D)', 'true,false': 'follows(C, A)', 'false': 'follows(F, A), recursion_accounttype(F, B)', 'true,false,false': 'recursion_accounttype(D, B), tweets(C, E)', 'false,false': 'recursion_accounttype(G, B)', 'true': 'follows(D, C), recursion_accounttype(D, B)'}, {'true,false,true': [0.066, 6, 0], 'true,true': [6.574, 127, 70], 'true,false,false,true': [0.818, 4, 1], 'false,false,false': [0.0, 0, 0], 'false,false,true': [2.848, 26, 13], 'false,true': [2.332, 14, 9], 'true,false,false,false': [0.062, 8, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'true,false': 'follows(E, A), follows(A, E)', 'true,false,true': 'follows(C, F)', 'false': 'follows(A, A)', 'true': 'follows(C, D), recursion_accounttype(D, B)', 'false,false': 'follows(A, G), tweets(G, H)', 'false,false,true': 'follows(G, I), recursion_accounttype(I, B)', 'false,false,false': 'follows(J, A)'}, {'true,false,true,false': [0.04, 4, 0], 'false,false,true,false': [1.248, 4, 3], 'true,true': [4.941, 75, 37], 'true,false,true,true': [0.98, 22, 1], 'false,false,true,true': [3.848, 30, 31], 'false,false,false,true': [2.558, 21, 10], 'true,false,false': [1.258, 16, 2], 'false,true': [0.0, 0, 0], 'false,false,false,false': [2.297, 13, 9]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false': 'follows(E, A), follows(F, E)', 'false,true,false': 'follows(G, F), recursion_accounttype(G, B)', 'false,false,false': 'follows(I, A)', 'true': 'follows(A, D), follows(D, A)', 'false,false': 'follows(A, H)', 'false,false,true': 'follows(H, H)', 'false,true': 'follows(A, A)'}, {'true,false': [2.67, 15, 15], 'true,true': [4.406, 54, 32], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,true': [3.304, 63, 15], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.466, 40, 22], 'false,false,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,false,false': [2.296, 13, 9]}], ['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(E, A)', 'false,false,false': 'follows(A, G), follows(G, H)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false,false': 'follows(A, F)', 'false,false,true': 'recursion_accounttype(F, B)'}, {'true,false': [1.117, 13, 2], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [6.111, 119, 60], 'false,false,true,true': [1.845, 29, 4], 'false,false,true,false': [2.684, 12, 18], 'false,false,false,false': [2.296, 13, 9]}], ['accounttype(A, B)', {'': 'follows(C, A)', 'false,false': 'recursion_accounttype(I, B)', 'false': 'follows(A, E)', 'false,true,false': 'follows(E, G), tweets(A, H)', 'true': 'follows(D, C)', 'false,true': 'follows(E, F), recursion_accounttype(F, B)'}, {'true,false': [0.082, 0, 2], 'true,true': [6.169, 132, 60], 'false,true,false,true': [0.011, 5, 0], 'false,true,true': [3.132, 30, 19], 'false,false,true': [2.296, 13, 9], 'false,false,false': [0.0, 0, 0], 'false,true,false,false': [1.214, 6, 3]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(C, A)', 'false': 'follows(D, A), recursion_accounttype(D, B)', 'true': 'recursion_accounttype(C, B)', 'false,false': 'follows(A, G)', 'false,false,true': 'follows(H, A)', 'false,true': 'tweets(A, E), tweets(D, F)'}, {'true,false': [3.415, 53, 17], 'true,true': [4.156, 48, 29], 'false,true,false': [1.069, 4, 2], 'false,false,true,false': [3.376, 41, 22], 'false,true,true': [2.349, 11, 13], 'false,false,true,true': [0.103, 7, 0], 'false,false,false': [0.451, 21, 10]}]]
[{'': [0.18828369130968045, 0.24659722222222286], 'false,false,false': [nan, 0.22997508009967915], 'false': [nan, 0.2465972222222223], 'true': [0.1820439769157729, 0.20408163265306134], 'true,false,false': [0.21852237252861612, -2.7755575615628915e-18], 'false,false': [0.2499443083092019, 0.22997508009967915], 'false,false,true': [0.2500000000000012, 0.2494331065759633], 'true,false': [0.22222222222222224, 0.2006172839506174]}, {'': [0.21514035187406688, 0.22544793196115373], 'false,false,false': [0.10625213562870757, 0.2468041149039778], 'true,false,true': [0.24922057183325255, 0.20363016469956272], 'false': [0.24173553719008287, 0.220780200315381], 'false,false': [0.09876543209876545, 0.22739031106319385], 'true': [0.2041802750743599, 0.24395436390388792], 'true,false': [0.2456426916307579, 0.0]}, {'': [0.21416796512815084, nan], 'true': [0.21864871887967527, 0.2050434786236498]}, {'': [0.21275973290498032, 0.2164525882659699], 'false': [0.20539309958783875, 0.22443806703028266], 'false,false': [0.22443806703028266, nan], 'true': [0.20949257471008612, 0.18299311056672285], 'false,true': [0.20539309958783875, nan]}, {'': [0.2102184546225113, 0.21961169993012267], 'true,false': [0.0007181562066520356, 0.058596082269470454], 'false': [0.2364135832993286, 0.2079580393280161], 'true,false,false': [0.1339169966485717, 0.00048256546526637134], 'false,false': [0.2079580393280161, nan], 'true': [0.21937685064930385, 0.042168902451249865]}, {'': [0.18519308081972444, 0.23574983537348856], 'false,false,false': [0.21113054146683974, 0.23972758627496987], 'true,false,true': [0.041746089219153674, 0.00039304522613643755], 'false': [nan, 0.2357498353734885], 'true': [0.2179767364622963, 0.05904021160171844], 'false,false': [0.24089973536753656, 0.22356106401469372], 'false,false,true': [0.24269790097395286, 0.22250627891088365], 'true,false': [0.03570591147207886, 0.08785145805739077]}, {'': [0.22977575535114544, 0.1801987742852861], 'false,false,false': [nan, 0.23964098689034763], 'false,true,false': [0.13996373443816434, nan], 'false': [0.13996373443816434, 0.20584139227026382], 'false,false,true': [nan, 0.19375752471209778], 'false,false': [0.19375752471209778, 0.23964098689034763], 'true': [0.22575195395355133, 0.2375549379241943], 'false,true': [nan, 0.13996373443816434]}, {'': [0.20124919059955834, 0.2033012033709276], 'false,false,false': [nan, 0.23957836920673473], 'false': [nan, 0.2033012033709276], 'false,false,true': [0.10317353343676662, 0.24018138924915286], 'false,false': [0.19056535261260124, 0.23957836920673473], 'true': [0.2086058182823934, 0.08318347763908585]}, {'': [0.19985680352906166, 0.19697673722801376], 'false,true,false': [2.2102350496502887e-05, 0.16388481096053542], 'false': [0.18203954621314067, 0.23953351010826135], 'false,false': [0.23953351010826135, nan], 'true': [0.19821151349752095, 0.003351311148828584], 'false,true': [0.20024114005243662, 0.11196696139151609]}, {'': [0.2013310147897003, 0.19391780822025032], 'false': [0.22906636669257688, 0.17950169447214936], 'false,false,true': [0.0015125810966683448, 0.18087218246779999], 'false,false': [0.1690770749795545, 0.20303146606289588], 'true': [0.22430436661421604, 0.16662147834481755], 'false,true': [0.2299529689894428, 0.19054061173542525]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true,false;tweets(A, E).;true;true
0;true,false,false;follows(C, F).;true;true
0;true;tweets(C, D), tweets(A, D).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;true
1;true,false;follows(C, E).;true;true
1;true;recursion_accounttype(C, B).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true,false;follows(C, A).;true;true
4;true,false,false;recursion_accounttype(D, B), tweets(C, E).;true;true
4;true;follows(D, C), recursion_accounttype(D, B).;true;true
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true,false;follows(E, A), follows(A, E).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;true
5;true,false,true;follows(C, F).;true;true
8;;accounttype(A, B) :- follows(C, A).;true;true
8;false;follows(A, E).;true;true
8;false,true,false;follows(E, G), tweets(A, H).;true;true
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
9;false;follows(D, A), recursion_accounttype(D, B).;true;true
9;false,false;follows(A, G).;true;true
9;false,false,true;follows(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.1016271959690766;  // std dev = 0,429, 115,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=28 */
%   | else return 0.14386322081379807;  // std dev = 0,452, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   else if ( follows(E, A), follows(F, E) )
%   | then if ( recursion_accounttype(F, B), follows(E, F) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.14386322081379807;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.4581489350995123;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.37988806553429494;  // std dev = 2,396, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(D, A) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.12979118785805674;  // std dev = 0,451, 126,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=36 */
%   | else if ( follows(C, E) )
%   | | then if ( follows(F, A), recursion_accounttype(F, B) )
%   | | | then return 0.4369611108893026;  // std dev = 1,344, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.19512537147719772;  // std dev = 2,538, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.03212937771939841;  // std dev = 0,331, 32,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(H, I), follows(A, I) )
%   | | | then return 0.6189976143448207;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.30535596360153167;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | | then return 0.24771073751479433;  // std dev = 2,291, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.1476313390554847;  // std dev = 2,564, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.28476907465025786;  // std dev = 4,095, 68,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=32 */
%   | | | else return 0.7400914155868953;  // std dev = 0,978, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.048619347088011904;  // std dev = 0,325, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return -0.1753527489200989;  // std dev = 0,103, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.06992255383199802;  // std dev = 0,294, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.1285489421629939;  // std dev = 0,971, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.3190332996497195;  // std dev = 2,182, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.31491178614461085;  // std dev = 2,587, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.20821210950190674;  // std dev = 2,286, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.2448601677413512;  // std dev = 4,067, 67,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=32 */
%   | | | else return 0.6021190849083757;  // std dev = 0,987, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.041525591627969004;  // std dev = 0,325, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return -0.15150250873416174;  // std dev = 0,092, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.06054322878171822;  // std dev = 0,294, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.11005838158036532;  // std dev = 0,971, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.2579299468766984;  // std dev = 2,174, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.16264398488880985;  // std dev = 2,361, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.2622218463856093;  // std dev = 2,498, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.10325346238568567;  // std dev = 0,423, 199,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=70 */
%   | else return -0.12397241676330029;  // std dev = 0,204, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   else if ( follows(E, A) )
%   | then if ( recursion_accounttype(E, B), tweets(A, F) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.25225450312569575;  // std dev = 1,853, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.19051751071346334;  // std dev = 0,148, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08480030537482766;  // std dev = 0,280, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.20694264909050686;  // std dev = 0,907, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.013752469679530144;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.04097739334917418;  // std dev = 0,741, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19503936254399995;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.08442487435649267;  // std dev = 0,420, 114,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | else return -0.08875978834103014;  // std dev = 0,239, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   else if ( follows(E, A), follows(F, E) )
%   | then if ( recursion_accounttype(F, B), tweets(A, G) )
%   | | then if ( follows(A, H), follows(H, F) )
%   | | | then return 0.19504235203418532;  // std dev = 2,280, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.05796968996843712;  // std dev = 2,198, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else return -0.07319777879181359;  // std dev = 0,312, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(A, J), follows(I, J) )
%   | | | then return 0.3263831801426993;  // std dev = 0,919, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.14738809676533596;  // std dev = 2,430, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.011262053731279673;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.15220515956979888;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.148465059143596;  // std dev = 4,064, 68,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=32 */
%   | | | else return 0.4284064883075776;  // std dev = 0,914, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.05186809446297757;  // std dev = 0,323, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return -0.13358167318000627;  // std dev = 0,114, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.06404282569159872;  // std dev = 0,293, 73,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.11239422908934747;  // std dev = 0,952, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.16022279486346924;  // std dev = 2,095, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.12902430729018638;  // std dev = 2,561, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.0777593313229156;  // std dev = 2,249, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, E) )
%   | | then if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.3625259433132528;  // std dev = 1,861, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.03385833029210685;  // std dev = 1,190, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( follows(F, C), follows(D, F) )
%   | | | then return 0.037342531948015345;  // std dev = 3,483, 67,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=27 */
%   | | | else return 0.491641312512912;  // std dev = 0,794, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.11894166845018188;  // std dev = 0,103, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.056612676798653463;  // std dev = 0,292, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then return 0.018163169059237358;  // std dev = 0,388, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.11638897406413597;  // std dev = 2,504, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | | else return 0.060691000610616316;  // std dev = 2,248, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( follows(F, D), follows(E, F) )
%   | | | then return 0.07779663353410132;  // std dev = 4,230, 92,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=43 */
%   | | | else return 0.39400510213338996;  // std dev = 0,780, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.10708867448378011;  // std dev = 0,094, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.03594629949079813;  // std dev = 0,331, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   else if ( follows(A, G) )
%   | then if ( follows(G, H), recursion_accounttype(H, B) )
%   | | then if ( follows(A, I), recursion_accounttype(I, B) )
%   | | | then return 0.029355135183842085;  // std dev = 1,823, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.06074509362737225;  // std dev = 2,317, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else return -0.027737789014881;  // std dev = 0,311, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( tweets(A, J) )
%   | | then return -0.016999660906650706;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.08372670917883826;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then return 0.0012763705520398875;  // std dev = 0,363, 117,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | else return 0.044655287893780225;  // std dev = 0,427, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   else if ( follows(E, A), recursion_accounttype(E, B) )
%   | then if ( follows(A, F), follows(F, G) )
%   | | then return 0.36293557444401986;  // std dev = 0,358, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.08445380837601044;  // std dev = 1,882, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.10658827536555775;  // std dev = 0,712, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(J, A) )
%   | | | then return -0.1786089427909709;  // std dev = 0,220, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.02297664125531585;  // std dev = 3,178, 63,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | else if ( follows(K, A) )
%   | | | then return -0.06569792718052146;  // std dev = 0,760, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.035273574590348925;  // std dev = 2,243, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */


Results
   AUC ROC   = 0.735277
   AUC PR    = 0.539384
   CLL	      = -0.559177
   Precision = 0.533333 at threshold = 0.5
   Recall    = 0.190476
   F1        = 0.280702


Total learning time: 12.864 seconds
Total inference time: 1.276 seconds
AUC ROC: 0.735277


Results scoring model
   AUC ROC   = 0.851849
   AUC PR    = 0.738412
   CLL	      = -0.470195
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.301075
   F1        = 0.4375


Total scoring time: 1.238 seconds
Refined model CLL: -0.470195


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.735277
   AUC PR    = 0.539384
   CLL	      = -0.559177
   Precision = 0.533333 at threshold = 0.5
   Recall    = 0.190476
   F1        = 0.280702


Total learning time: 17.816 seconds
Total inference time: 1.276 seconds
AUC ROC: 0.735277
Total revision time: 17.816
Best scored revision CLL: -0.470195


Dataset: 15_yeast_twitter, Fold: 1, Type: Transfer (trRDN-B), Time: 00:50:05
{'CLL': -0.559177, 'Precision': [0.533333, 0.5], 'Inference time': 1.276, 'Learning time': 17.816, 'parameter_0.6': {'CLL': -0.601972, 'Precision': [1.0, 0.5], 'Inference time': 1.057, 'Learning time': 2.76, 'AUC ROC': 0.678493, 'F1': 0.015748, 'AUC PR': 0.479478, 'Recall': 0.007937}, 'AUC ROC': 0.735277, 'F1': 0.280702, 'AUC PR': 0.539384, 'Recall': 0.190476}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.1097212621435364;  // std dev = 0,434, 159,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=40 */
%   else if ( follows(D, A), follows(E, D) )
%   | then if ( follows(E, A), follows(F, E) )
%   | | then if ( recursion_accounttype(E, B), follows(F, A) )
%   | | | then return 0.33183314562582816;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.0918510649004878;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.48314893509951234;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(G, H), tweets(A, I) )
%   | | | then return 0.42957750652808374;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.5052077586289241;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.09583314014284562;  // std dev = 0,434, 159,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=40 */
%   else if ( follows(A, D) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.00379675137369005;  // std dev = 1,280, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.4696403341688619;  // std dev = 1,107, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( follows(F, D), recursion_accounttype(F, B) )
%   | | | then return 0.4433892238299851;  // std dev = 3,104, 43,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=28 */
%   | | | else return -0.21380940964648243;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( follows(G, A) )
%   | | then if ( recursion_accounttype(G, B), tweets(A, H) )
%   | | | then return 0.28383420349400357;  // std dev = 2,045, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.010890980159064886;  // std dev = 1,244, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.09446743783575556;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3087411357856348;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.28327566376544544;  // std dev = 4,069, 68,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=32 */
%   | | | else return 0.748426651290423;  // std dev = 0,977, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.04559855770818101;  // std dev = 0,323, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return -0.17553019483939136;  // std dev = 0,120, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.07416475687101491;  // std dev = 0,293, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.07526224032307113;  // std dev = 0,971, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.27949353233844054;  // std dev = 2,144, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.3154925847761311;  // std dev = 2,630, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.1928632867405048;  // std dev = 2,271, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.23676867144099098;  // std dev = 4,064, 68,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=32 */
%   | | | else return 0.6127250444328239;  // std dev = 0,987, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.039050228151319706;  // std dev = 0,323, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return -0.15166698455474767;  // std dev = 0,107, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.06401494801385745;  // std dev = 0,293, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.06693980296607185;  // std dev = 0,971, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.22164018077771921;  // std dev = 2,134, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.1616674079655103;  // std dev = 2,330, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.2513063107450078;  // std dev = 2,566, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.19220484490966194;  // std dev = 4,060, 68,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=32 */
%   | | | else return 0.4698562134479002;  // std dev = 0,991, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.03359334859901524;  // std dev = 0,323, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return -0.13324469995950994;  // std dev = 0,097, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.05436167175836551;  // std dev = 0,294, 73,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, H), tweets(A, I) )
%   | | | then return 0.164204200314951;  // std dev = 2,016, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.07859154011723649;  // std dev = 1,170, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.19994383629167783;  // std dev = 2,615, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.11494172451315046;  // std dev = 2,258, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(A, E), follows(D, A) )
%   | | then if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.3999278906229138;  // std dev = 1,855, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.08993195367428285;  // std dev = 1,208, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( follows(A, C), follows(A, D) )
%   | | | then return -0.2082502231123062;  // std dev = 0,701, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.16459524388333746;  // std dev = 3,448, 59,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
%   | else return -0.11865105762082699;  // std dev = 0,088, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.04884793204321667;  // std dev = 0,293, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | else if ( follows(G, A) )
%   | | then return 0.0485298223872062;  // std dev = 0,389, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.08897065085709034;  // std dev = 2,314, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.1574278001324119;  // std dev = 2,558, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, C), follows(D, E) )
%   | | then if ( recursion_accounttype(E, B), follows(C, E) )
%   | | | then return 0.3657719659294932;  // std dev = 2,592, 45,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=36 */
%   | | | else return -0.15435668226105648;  // std dev = 2,149, 46,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | else return 0.485870415715887;  // std dev = 0,802, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.10683642935517282;  // std dev = 0,081, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.04295004133428666;  // std dev = 0,293, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.11666186006326613;  // std dev = 3,357, 56,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=29 */
%   | | | else return -0.3289367654874576;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( follows(I, A) )
%   | | | then return -0.04188009190157694;  // std dev = 0,808, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.061201711063170856;  // std dev = 2,251, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( recursion_accounttype(D, B), follows(C, D) )
%   | then if ( recursion_accounttype(C, B) )
%   | | then if ( tweets(D, E), tweets(A, E) )
%   | | | then return 0.16534069428239562;  // std dev = 3,442, 58,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   | | | else return -0.01325425218100562;  // std dev = 1,523, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else return -0.0234644155810037;  // std dev = 0,312, 87,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=15 */
%   | else return -0.1374483337951823;  // std dev = 0,060, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return 0.010872778835567632;  // std dev = 0,346, 34,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(G, H), follows(A, H) )
%   | | | then return 0.34964200965832415;  // std dev = 0,899, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.060024965584408445;  // std dev = 2,265, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( tweets(A, I) )
%   | | | then return -0.023340676378878947;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.08791896234654405;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), tweets(C, E) )
%   | then if ( recursion_accounttype(D, B), follows(C, D) )
%   | | then if ( tweets(D, E), tweets(A, E) )
%   | | | then return 0.1726908833207041;  // std dev = 3,144, 49,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | | | else return -0.0758855899976672;  // std dev = 1,798, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else return -0.11151530284246434;  // std dev = 0,188, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0.32566657130592125;  // std dev = 0,774, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.035510374414261504;  // std dev = 0,292, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then if ( follows(I, A), follows(I, G) )
%   | | | then return -0.024732272371282973;  // std dev = 1,551, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.13723674149446427;  // std dev = 2,269, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.051657442661499964;  // std dev = 1,120, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.0507680571675724;  // std dev = 2,788, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( recursion_accounttype(D, B), follows(C, D) )
%   | then return 0.022065415948103916;  // std dev = 0,365, 169,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=60 */
%   | else return -0.11765418815933891;  // std dev = 0,055, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( follows(A, E), tweets(A, F) )
%   | then if ( follows(A, G), follows(E, G) )
%   | | then if ( recursion_accounttype(G, B), follows(G, H) )
%   | | | then return -0.018610489061056928;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.35115288522072674;  // std dev = 1,341, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( follows(E, I), tweets(I, F) )
%   | | | then return -0.07348664110178504;  // std dev = 1,606, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.18478571206571667;  // std dev = 0,734, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( follows(A, J), recursion_accounttype(J, B) )
%   | | then return -0.04638826683883471;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( tweets(A, K) )
%   | | | then return -0.028822188136212165;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.0583336529751628;  // std dev = 2,494, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */


Results
   AUC ROC   = 0.763794
   AUC PR    = 0.588028
   CLL	      = -0.537767
   Precision = 0.522293 at threshold = 0.5
   Recall    = 0.650794
   F1        = 0.579505


Total learning time: 22.363 seconds
Total inference time: 1.168 seconds
AUC ROC: 0.763794


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN-B), Time: 00:50:28
{'CLL': -0.537767, 'Precision': [0.522293, 0.5], 'Inference time': 1.168, 'Learning time': 22.363, 'AUC ROC': 0.763794, 'F1': 0.579505, 'AUC PR': 0.588028, 'Recall': 0.650794}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(C, A), follows(D, C) )
%   | | then if ( follows(A, D), follows(C, D) )
%   | | | then return 0.6081489350995123;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.3581489350995122;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( tweets(A, E), follows(A, D) )
%   | | | then return 0.05814893509951238;  // std dev = 2,683, 45,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.40814893509951233;  // std dev = 2,225, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( follows(C, F), follows(A, F) )
%   | | then if ( follows(G, A), follows(G, F) )
%   | | | then return -0.09837280403092258;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.09814893509951225;  // std dev = 2,135, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( follows(H, A), follows(I, H) )
%   | then if ( follows(I, A), follows(J, I) )
%   | | then if ( recursion_accounttype(I, B), follows(J, A) )
%   | | | then return 0.33183314562582816;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.0918510649004878;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( recursion_accounttype(I, B), follows(H, I) )
%   | | | then return 0.48314893509951234;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( follows(A, K) )
%   | | then if ( follows(A, L), follows(K, L) )
%   | | | then return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.37988806553429494;  // std dev = 2,396, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( tweets(A, M) )
%   | | | then return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */


Results
   AUC ROC   = 0.748079
   AUC PR    = 0.563838
   CLL	      = -0.670915
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 5.247 seconds
Total inference time: 0.746 seconds
AUC ROC: 0.748079


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN), Time: 00:50:35
{'CLL': -0.670915, 'Precision': [nan, 0.5], 'Inference time': 0.746, 'Learning time': 5.247, 'AUC ROC': 0.748079, 'F1': nan, 'AUC PR': 0.563838, 'Recall': 0.0}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,false;phenotype(A, E), complex(A, F).;false;true
0;false;interaction(A, A).;false;true
0;false,false,true;complex(A, J), location(A, K).;false;false
0;true,false,false;interaction(C, G), phenotype(G, H).;false;false
0;false,false;interaction(A, I), complex(I, J).;true;true
0;true;complex(C, D), complex(A, D).;false;true
0;false,false,false;enzyme(A, L), interaction(A, M).;false;false
1;;proteinclass(A, B) :- interaction(A, C), interaction(D, A).;true;true
1;true,false;phenotype(C, E), interaction(C, F).;true;false
1;true,false,true;recursion_proteinclass(F, B), interaction(F, D).;false;false
1;false;interaction(G, A), recursion_proteinclass(G, B).;false;true
1;false,false,true;location(I, J), phenotype(I, K).;false;false
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;true;recursion_proteinclass(C, B).;false;true
1;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
2;;proteinclass(A, B) :- location(A, C).;true;true
2;false;interaction(A, F), complex(F, G).;true;true
2;true,true;interaction(E, D), interaction(E, A).;false;false
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;false;false
2;false,false;interaction(A, I).;true;true
2;true;location(D, C), recursion_proteinclass(D, B).;true;false
2;false,false,false;interaction(K, A), interaction(L, K).;false;false
2;false,true;interaction(A, H), interaction(F, H).;false;false
3;;proteinclass(A, B) :- interaction(C, A), location(C, D).;true;true
3;true,false;location(A, D).;false;false
3;false;complex(A, G).;true;true
3;false,false,true;phenotype(K, I), recursion_proteinclass(K, B).;false;false
3;false,false;phenotype(A, I), location(A, J).;true;true
3;true;complex(C, E), interaction(F, C).;false;true
3;false,false,false;enzyme(A, L).;false;false
3;false,true;complex(H, G), recursion_proteinclass(H, B).;false;false
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;true,false;interaction(C, A).;false;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;false;true
4;false,false,true;enzyme(I, G), recursion_proteinclass(I, B).;false;false
4;true,false,false;recursion_proteinclass(D, B), complex(C, E).;false;false
4;false,false;enzyme(A, G), phenotype(A, H).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
4;false,false,false;complex(A, J).;false;false
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(E, A), interaction(A, E).;true;false
5;true,false,true;phenotype(A, F), interaction(C, G).;false;false
5;false;interaction(A, A).;false;true
5;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
5;false,false;interaction(A, H), complex(H, I).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;false;true
5;false,false,false;interaction(K, A), location(A, L).;false;false
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,false;interaction(J, A), phenotype(J, K).;false;false
6;false,false;interaction(A, H).;true;true
6;false;interaction(E, A), interaction(F, E).;true;true
6;false,false,true;interaction(H, H), enzyme(H, I).;false;false
6;false,true,false;interaction(G, F), recursion_proteinclass(G, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true;interaction(A, A).;false;true
7;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
7;false,false,false;interaction(A, K), interaction(K, L).;false;false
7;false,false;interaction(A, I), enzyme(I, J).;true;true
7;false;interaction(F, A).;true;true
7;false,false,true;recursion_proteinclass(I, B).;false;false
7;false,true,false;interaction(A, H), interaction(F, H).;false;false
7;true;interaction(E, C), recursion_proteinclass(E, B).;false;false
7;false,true;interaction(G, F), recursion_proteinclass(G, B).;false;true
8;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
8;false,false,false;interaction(A, N), recursion_proteinclass(N, B).;false;false
8;false,false;enzyme(A, K), location(A, L).;true;true
8;false;enzyme(A, F), interaction(A, G).;true;true
8;false,false,true;enzyme(M, K), recursion_proteinclass(M, B).;false;false
8;false,true,false;interaction(G, I), complex(A, J).;false;false
8;true;interaction(E, C), enzyme(E, D).;false;false
8;false,true;interaction(G, H), recursion_proteinclass(H, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;false,false,false;location(A, L).;false;false
9;false,false;interaction(A, H), phenotype(H, I).;true;true
9;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
9;false,false,true;enzyme(H, J), interaction(K, A).;false;false
9;false,true,false;complex(A, F), complex(D, G).;false;false
9;true;recursion_proteinclass(C, B).;false;false
9;false,true;phenotype(D, E), phenotype(A, E).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.26798500067328385;  // std dev = 5,432, 122,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=50 */
%   | else if ( tweets(A, E) )
%   | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( follows(F, C) )
%   | | | then return 0.41814893509951234;  // std dev = 2,482, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.06296821220794611;  // std dev = 3,677, 83,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | | else return -0.011416282291792127;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( follows(I, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.19451257146314727;  // std dev = 4,955, 110,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=37 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.2576137631666228;  // std dev = 5,485, 123,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=54 */
%   | else if ( follows(E, C) )
%   | | then if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.07158872255881128;  // std dev = 3,528, 73,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | | else return -0.04524990386340348;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.14969034521173666;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.039556493269828054;  // std dev = 2,288, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then return 0.4085415080196628;  // std dev = 0,494, 33,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | | then return 0.2517988053050218;  // std dev = 2,724, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.16368521775300218;  // std dev = 3,063, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.13910128430560126;  // std dev = 7,989, 302,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=100 */
%   | else return 0.13784062814422063;  // std dev = 3,964, 71,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(C, D), follows(C, E) )
%   | then return 0.11287501609965106;  // std dev = 7,823, 293,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=96 */
%   | else return 0.13275360752111207;  // std dev = 0,474, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( tweets(A, F) )
%   | then if ( tweets(G, F), recursion_accounttype(G, B) )
%   | | then return 0.12377845174151596;  // std dev = 3,081, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( recursion_accounttype(H, B) )
%   | | then return 0.13770919369633647;  // std dev = 2,426, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.1297294833858211;  // std dev = 7,085, 224,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=83 */
%   | else if ( follows(A, C) )
%   | | then return -0.2194510696330102;  // std dev = 0,214, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( recursion_accounttype(D, B), tweets(C, E) )
%   | | | then return -0.28189498897399234;  // std dev = 0,023, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.018619524154366858;  // std dev = 1,328, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.0589929255506072;  // std dev = 2,428, 50,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.23321858450436123;  // std dev = 4,001, 65,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.15466228543039354;  // std dev = 5,932, 146,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=65 */
%   | else if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(F, C) )
%   | | | then return -0.29055389404343895;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.29055389404343895;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.21783854361052346;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( follows(I, G), recursion_accounttype(I, B) )
%   | | | then return -0.005090395384809387;  // std dev = 3,759, 86,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=18 */
%   | | | else return -0.056243404657551746;  // std dev = 1,326, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.07439757658738176;  // std dev = 4,095, 87,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.06471004729663539;  // std dev = 2,425, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return 0.029482904238357085;  // std dev = 5,553, 159,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=50 */
%   | else return -0.05246650289404274;  // std dev = 2,705, 61,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(F, G), recursion_accounttype(G, B) )
%   | | | then return 0.2158654648084424;  // std dev = 4,143, 73,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=36 */
%   | | | else return 0.04460069398002151;  // std dev = 0,752, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06135313956235995;  // std dev = 3,179, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.30325269812213546;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05144060358380895;  // std dev = 2,425, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.05865137650667688;  // std dev = 7,475, 277,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=95 */
%   | else return -0.05708970883859747;  // std dev = 1,943, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   else if ( follows(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(F, A) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return 0.0957222861560156;  // std dev = 2,702, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return -0.07061424878410182;  // std dev = 1,288, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( follows(G, A), follows(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0406366818271527;  // std dev = 2,425, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then return 0.03828993362646307;  // std dev = 7,561, 292,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=96 */
%   | else return 0.059136871356828734;  // std dev = 1,586, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then return 0.05895443462104;  // std dev = 2,967, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( follows(G, E), tweets(A, H) )
%   | | | then return -0.198475236600732;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.37796188951738496;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( recursion_accounttype(I, B) )
%   | | then return 0.031947133593541496;  // std dev = 2,425, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.07173426386781495;  // std dev = 5,006, 107,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=45 */
%   | else return -0.03527653138540837;  // std dev = 3,725, 89,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=19 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), tweets(D, F) )
%   | | then return -0.03681132223583679;  // std dev = 2,201, 37,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | else return -0.07711445819870669;  // std dev = 1,540, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.21648379073840335;  // std dev = 1,426, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.027764741134924675;  // std dev = 2,999, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else return 0.10977025256481791;  // std dev = 0,492, 64,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */


Results
   AUC ROC   = 0.668383
   AUC PR    = 0.480931
   CLL	      = -0.601925
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.537 seconds
Total inference time: 1.039 seconds
AUC ROC: 0.668383


Results scoring model
   AUC ROC   = 0.73379
   AUC PR    = 0.554485
   CLL	      = -0.579833
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total scoring time: 0.949 seconds
Parameter learned model CLL: -0.579833


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'tweets(A, E)', 'false': 'follows(A, A)', 'true': 'tweets(C, D), tweets(A, D)', 'true,false,false': 'follows(F, C)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'tweets(A, H)', 'false,false,false': 'follows(I, A)'}, {'true,false,true': [1.309, 4, 3], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [2.482, 11, 14], 'false,false,true,false': [1.615, 20, 3], 'true,true': [5.432, 72, 50], 'false,false,true,true': [3.677, 66, 17], 'false,false,false,true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [4.955, 73, 37]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, D)', 'true,false': 'follows(E, C)', 'true,false,true': 'recursion_accounttype(E, B), follows(D, E)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'false,false': 'follows(A, G), follows(G, H)', 'true': 'recursion_accounttype(C, B)', 'false,false,false': 'follows(I, A), recursion_accounttype(I, B)'}, {'true,false,true,false': [1.342, 18, 2], 'false,false,false,true': [2.724, 17, 13], 'true,true': [5.485, 69, 54], 'true,false,true,true': [3.528, 57, 16], 'false,false,true': [0.494, 14, 19], 'true,false,false': [0.0, 2, 0], 'false,true': [2.288, 41, 6], 'false,false,false,false': [3.063, 29, 14]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'true': 'follows(C, D), follows(A, D)'}, {'true,true': [7.989, 202, 100], 'true,false': [3.964, 47, 24], 'false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'tweets(A, F)', 'false,false': 'recursion_accounttype(H, B)', 'true': 'tweets(C, D), follows(C, E)', 'false,true': 'tweets(G, F), recursion_accounttype(G, B)'}, {'true,false': [0.474, 8, 4], 'true,true': [7.823, 197, 96], 'false,true,true': [3.081, 28, 15], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.426, 16, 9], 'false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(D, C)', 'true,false': 'follows(A, C)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'true,false,false': 'recursion_accounttype(D, B), tweets(C, E)', 'false,false': 'recursion_accounttype(G, B)', 'true': 'follows(C, D), recursion_accounttype(D, B)'}, {'true,false,true': [0.214, 21, 0], 'true,true': [7.085, 141, 83], 'true,false,false,true': [0.023, 2, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true': [4.001, 33, 32], 'false,true': [2.428, 43, 7], 'true,false,false,false': [1.328, 9, 2]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'follows(A, E), follows(E, A)', 'true,false,true': 'follows(F, C)', 'false': 'follows(A, A)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'follows(I, G), recursion_accounttype(I, B)', 'false,false,false': 'follows(A, J)'}, {'true,false,true,false': [0.0, 1, 0], 'false,false,true,false': [1.326, 17, 2], 'true,true': [5.932, 81, 65], 'true,false,true,true': [0.0, 3, 0], 'false,false,true,true': [3.759, 68, 18], 'false,false,false,true': [4.095, 59, 28], 'true,false,false': [1.0, 2, 2], 'false,true': [0.0, 0, 0], 'false,false,false,false': [2.425, 17, 9]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false': 'follows(A, E), follows(E, F)', 'false,true,false': 'follows(F, G), recursion_accounttype(G, B)', 'false,false,false': 'follows(A, I)', 'true': 'follows(D, A), follows(A, D)', 'false,false': 'follows(H, A)', 'false,false,true': 'follows(H, H)', 'false,true': 'follows(A, A)'}, {'true,false': [2.705, 52, 9], 'true,true': [5.553, 109, 50], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,true': [4.143, 37, 36], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.179, 29, 16], 'false,false,false,true': [1.095, 2, 3], 'false,true,false,false': [0.752, 2, 1], 'false,false,false,false': [2.425, 17, 9]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(A, E)', 'false,false,false': 'follows(G, A), follows(H, G)', 'true': 'follows(C, D), recursion_accounttype(D, B)', 'false,false': 'follows(F, A)', 'false,false,true': 'recursion_accounttype(F, B)'}, {'true,false': [1.943, 23, 5], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [7.475, 182, 95], 'false,false,true,true': [2.702, 17, 13], 'false,false,true,false': [1.288, 10, 2], 'false,false,false,false': [2.425, 17, 9]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false,false': 'recursion_accounttype(I, B)', 'false': 'follows(E, A)', 'false,true,false': 'follows(G, E), tweets(A, H)', 'true': 'follows(C, D)', 'false,true': 'follows(F, E), recursion_accounttype(F, B)'}, {'true,false': [1.586, 8, 4], 'true,true': [7.561, 196, 96], 'false,true,false,true': [0.0, 2, 0], 'false,true,true': [2.967, 24, 15], 'false,false,true': [2.425, 17, 9], 'false,false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, C)', 'false': 'follows(A, D), recursion_accounttype(D, B)', 'true': 'recursion_accounttype(C, B)', 'false,false': 'follows(G, A)', 'false,false,true': 'follows(A, H)', 'false,true': 'tweets(A, E), tweets(D, F)'}, {'true,false': [3.725, 70, 19], 'true,true': [5.006, 62, 45], 'false,true,false': [1.54, 20, 3], 'false,false,true,false': [2.999, 27, 15], 'false,true,true': [2.201, 31, 6], 'false,false,true,true': [1.426, 4, 5], 'false,false,false': [0.492, 33, 31]}]]
[{'': [0.2457834373418787, 0.1931024324551811], 'true,false': [0.24489795918367335, 0.24639999999999954], 'false': [nan, 0.19310243245518122], 'false,false,true': [0.16286834083321183, 0.1134215500945178], 'true,false,false': [0.24639999999999954, nan], 'false,false': [0.15307938768244914, 0.22122130102040957], 'true': [0.2418704649287828, 0.24902343749999964], 'false,false,false': [0.0, 0.22322314049586925]}, {'': [0.2160927497654955, 0.22382908604710658], 'false,false,false': [0.24741899541498835, 0.21824973521680457], 'true,false,true': [0.17049071705038582, 0.09007369147607525], 'false': [0.11136260751471241, 0.24523074760774338], 'false,false': [0.2442607897153349, 0.2321165480138744], 'true': [0.24461052661086902, 0.15302039903640793], 'true,false': [0.1555011435486119, 0.0]}, {'': [0.21323986348073656, nan], 'true': [0.21134964805419967, 0.22127864798982635]}, {'': [0.20951520591819017, 0.22622477573805705], 'false': [0.22080029022727965, 0.23543217288173074], 'false,false': [0.23543217288173074, nan], 'true': [0.20888175037480583, 0.2246024675878827], 'false,true': [0.22080029022727965, nan]}, {'': [0.21228773173262167, 0.21143918435414866], 'true,false': [0.002178639372191955, 0.14468212844067904], 'false': [0.11793322462731752, 0.2462418167222171], 'true,false,false': [0.00027536857605246767, 0.16027421521136795], 'false,false': [0.24624181672221745, nan], 'true': [0.2240661819822678, 0.06273572677524179]}, {'': [0.2401498318022608, 0.17883145393210179], 'true,false': [0.0, 0.24989544099391583], 'true,false,true': [-1.850371707708594e-17, 0.0], 'false': [nan, 0.17883145393210056], 'false,false,true': [0.1643099992844621, 0.09255461850365398], 'false,false': [0.15171349945196322, 0.2004244470772136], 'true': [0.24102617598197842, 0.1895634381628924], 'false,false,false': [0.19270981373372562, 0.2261665422840502]}, {'': [0.1747662984922482, 0.23667326916488732], 'false,false,false': [0.23987374265083564, 0.22616199490518168], 'false,true,false': [0.23509922456373206, 0.18844591440831515], 'false': [0.23436977000049772, 0.22983338662926087], 'true': [0.1939211635990563, 0.11998442014459332], 'false,false': [0.22454543202251154, 0.2369513122046902], 'false,false,true': [nan, 0.22454543202251154], 'false,true': [nan, 0.23436977000049772]}, {'': [0.19669396548390614, 0.22173235257465723], 'false,false,false': [nan, 0.22615850352037986], 'false': [nan, 0.22173235257465723], 'true': [0.20171150010796995, 0.1348900100163371], 'false,false': [0.218970496435024, 0.22615850352037986], 'false,false,true': [0.24332037251725636, 0.13833306133238235]}, {'': [0.1963426411495334, 0.22040312256516204], 'false,true,false': [0.0, 0.0], 'false': [0.21683469934759997, 0.22615583272057538], 'false,false': [0.22615583272057538, nan], 'true': [0.19578047661973494, 0.20960453828695877], 'false,true': [0.22577410064443953, 0.007158990794494012]}, {'': [0.20149057140016094, 0.19937613403750415], 'false': [0.12065021064699497, 0.2336889191411409], 'false,false,true': [0.22587667189788302, 0.21410617297396917], 'false,false': [0.22135918471035546, 0.24246229044975895], 'true': [0.23419410785425837, 0.15592135593873316], 'false,true': [0.13091178049283914, 0.10314078981096735]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false;follows(G, A), tweets(G, H).;true;true
0;false,false;follows(I, A).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
1;true,false;follows(E, C).;true;true
1;true;recursion_accounttype(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true,false;follows(A, C).;true;true
4;true,false,false;recursion_accounttype(D, B), tweets(C, E).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,false;follows(A, E), follows(E, A).;true;true
5;true;follows(D, C), recursion_accounttype(D, B).;true;true
5;true,false,true;follows(F, C).;true;true
8;;accounttype(A, B) :- follows(A, C).;true;true
8;false;follows(E, A).;true;true
8;false,true,false;follows(G, E), tweets(A, H).;true;true
8;false,true;follows(F, E), recursion_accounttype(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), follows(A, E) )
%   | then if ( follows(E, A), tweets(E, D) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.2427643197148956;  // std dev = 4,641, 91,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tweets(G, D), follows(E, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.5248156017661789;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.3381489350995123;  // std dev = 2,498, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.12082174615941939;  // std dev = 0,440, 217,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=57 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F), follows(F, A) )
%   | | | then return 0.20187209560231464;  // std dev = 4,716, 96,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=36 */
%   | | | else return 0.40262914318369974;  // std dev = 1,157, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.43442025057573375;  // std dev = 0,477, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | else return 0.030295687714754757;  // std dev = 0,390, 96,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=18 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.029544737817160348;  // std dev = 0,334, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.7177956877147544;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3427956877147549;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | | then return 0.2830846280552307;  // std dev = 2,621, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.13226937192528068;  // std dev = 2,796, 38,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.07687230207310711;  // std dev = 0,425, 220,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=59 */
%   else if ( follows(A, D) )
%   | then if ( follows(E, A), follows(D, E) )
%   | | then if ( follows(D, A) )
%   | | | then return -0.05133088588249368;  // std dev = 1,309, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.43785139753360003;  // std dev = 1,326, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( follows(F, D), recursion_accounttype(F, B) )
%   | | | then return 0.38573900750478457;  // std dev = 3,621, 57,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | | | else return -0.19249039283767602;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( follows(G, A), recursion_accounttype(G, B) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return 0.2903200931802422;  // std dev = 2,489, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return -0.2166268671923896;  // std dev = 0,051, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( tweets(A, I) )
%   | | | then return -0.008866503468830063;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.22446682986450345;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.2805742304669134;  // std dev = 4,756, 94,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=49 */
%   | | | else return 0.6430931841667311;  // std dev = 0,921, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.14462891305841966;  // std dev = 0,245, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else return -0.23594522691991304;  // std dev = 0,220, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.07388668641893098;  // std dev = 0,293, 106,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=10 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, A), follows(I, H) )
%   | | | then return 0.0822371283708973;  // std dev = 2,181, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.31854570280762723;  // std dev = 3,362, 49,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
%   | | else if ( follows(J, A), tweets(A, K) )
%   | | | then return -0.07425368774452466;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.15706159880341275;  // std dev = 2,525, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), recursion_accounttype(E, B) )
%   | | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | | then return 0.21978198592113501;  // std dev = 5,203, 123,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=65 */
%   | | | else return -0.20556684980949683;  // std dev = 0,151, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.024280016200099667;  // std dev = 0,384, 86,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=18 */
%   | else return -0.11667696066182358;  // std dev = 0,227, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.018015915769604665;  // std dev = 0,338, 50,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.43892274713147256;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.17411981787441433;  // std dev = 2,731, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.05197970658211859;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1511978850375029;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F), recursion_accounttype(F, B) )
%   | | | then return 0.11549374697210818;  // std dev = 4,360, 89,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
%   | | | else return 0.1023529670157516;  // std dev = 2,573, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else return 0.1671836737990707;  // std dev = 0,375, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | else return 0.02475105178392141;  // std dev = 0,330, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.06223606150711033;  // std dev = 0,293, 106,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=10 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then if ( follows(H, J), tweets(H, I) )
%   | | | then return 0.16100936790417472;  // std dev = 3,242, 46,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.4637309716680062;  // std dev = 0,819, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( follows(K, A) )
%   | | | then return -0.028511430162235604;  // std dev = 1,541, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.12342284509759821;  // std dev = 3,048, 43,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.02416869051604339;  // std dev = 0,384, 220,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=59 */
%   else if ( follows(A, D), tweets(A, E) )
%   | then if ( follows(F, A), follows(F, D) )
%   | | then if ( follows(D, A) )
%   | | | then return -0.06410322471145877;  // std dev = 1,262, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.2307339510227079;  // std dev = 1,710, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( follows(D, A) )
%   | | | then return 0.3589212323578505;  // std dev = 1,362, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.10443283015634686;  // std dev = 2,337, 24,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( follows(A, I), follows(I, G) )
%   | | | then return -0.17563575452260596;  // std dev = 0,048, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05380628304385362;  // std dev = 2,878, 44,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.14567011877140024;  // std dev = 1,867, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.07476963936808406;  // std dev = 2,410, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(D, E) )
%   | | | then return 0.24154564872117862;  // std dev = 4,318, 82,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=51 */
%   | | | else return 0.021283507674867037;  // std dev = 2,140, 29,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else return -0.16953937421785598;  // std dev = 0,253, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else return -0.19242115513656402;  // std dev = 0,203, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.0564716023950974;  // std dev = 0,294, 105,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=10 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then if ( follows(G, I), tweets(G, H) )
%   | | | then return 0.10703626314077369;  // std dev = 3,122, 45,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | | else return 0.3306407651811241;  // std dev = 0,810, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tweets(A, J) )
%   | | | then return -0.03307071273188801;  // std dev = 1,555, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.07593953325045194;  // std dev = 3,022, 44,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( follows(E, D) )
%   | | | then return 0.15083802844178382;  // std dev = 4,320, 89,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=52 */
%   | | | else return -0.12021518846463722;  // std dev = 1,118, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.1636940998264954;  // std dev = 0,161, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.001844121124679163;  // std dev = 0,372, 180,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=46 */
%   else if ( follows(F, A) )
%   | then if ( follows(G, F), recursion_accounttype(G, B) )
%   | | then if ( follows(H, A), recursion_accounttype(H, B) )
%   | | | then return 0.026472067192240604;  // std dev = 2,369, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.014884991758000732;  // std dev = 1,225, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.13335269854927864;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( tweets(A, I) )
%   | | then return 0.015237577233092381;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.06589579902967696;  // std dev = 0,487, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.042074473034111354;  // std dev = 0,402, 156,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=55 */
%   | else return -0.0935565756664653;  // std dev = 0,225, 63,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=4 */
%   else if ( follows(A, E) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), follows(E, G) )
%   | | | then return 0.13238727751879026;  // std dev = 2,428, 37,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.03783167724767139;  // std dev = 3,195, 45,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | else return -0.36521775036360893;  // std dev = 0,127, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.011818918507862066;  // std dev = 2,405, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.1110620849460869;  // std dev = 1,135, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.012489106319048569;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.051321741285247136;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */


Results
   AUC ROC   = 0.716664
   AUC PR    = 0.519608
   CLL	      = -0.563782
   Precision = 0.493151 at threshold = 0.5
   Recall    = 0.285714
   F1        = 0.361809


Total learning time: 15.204 seconds
Total inference time: 1.162 seconds
AUC ROC: 0.716664


Results scoring model
   AUC ROC   = 0.84122
   AUC PR    = 0.731708
   CLL	      = -0.483778
   Precision = 0.836735 at threshold = 0.5
   Recall    = 0.330645
   F1        = 0.473988


Total scoring time: 1.191 seconds
Refined model CLL: -0.483778


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.716664
   AUC PR    = 0.519608
   CLL	      = -0.563782
   Precision = 0.493151 at threshold = 0.5
   Recall    = 0.285714
   F1        = 0.361809


Total learning time: 19.881 seconds
Total inference time: 1.162 seconds
AUC ROC: 0.716664
Total revision time: 19.881
Best scored revision CLL: -0.483778


Dataset: 15_yeast_twitter, Fold: 1, Type: Transfer (trRDN-B), Time: 00:50:57
{'CLL': -0.563782, 'Precision': [0.493151, 0.5], 'Inference time': 1.162, 'Learning time': 19.881, 'parameter_0.8': {'CLL': -0.601925, 'Precision': [nan, 0.5], 'Inference time': 1.039, 'Learning time': 2.537, 'AUC ROC': 0.668383, 'F1': nan, 'AUC PR': 0.480931, 'Recall': 0.0}, 'AUC ROC': 0.716664, 'F1': 0.361809, 'AUC PR': 0.519608, 'Recall': 0.285714}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.37942553084419395;  // std dev = 4,843, 94,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=49 */
%   | | | else return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.0418510649004878;  // std dev = 0,300, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.04661296966239244;  // std dev = 0,294, 105,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=10 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, A), follows(I, H) )
%   | | | then return 0.1273797043302816;  // std dev = 2,262, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.44998566979338916;  // std dev = 3,440, 49,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.024815601766178884;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.25814893509951237;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.3267050549964083;  // std dev = 4,843, 94,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=49 */
%   | | | else return 0.6723676618346617;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.036832517440075;  // std dev = 0,300, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.041931441202741046;  // std dev = 0,292, 106,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=10 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, A), follows(H, I) )
%   | | | then return 0.07774424812860732;  // std dev = 1,934, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.3735163662969155;  // std dev = 3,630, 54,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | else if ( tweets(A, J), follows(K, A) )
%   | | | then return -0.04489878247426092;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.18983867249600106;  // std dev = 2,526, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(D, E) )
%   | | | then return 0.3669691134291199;  // std dev = 4,368, 82,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=51 */
%   | | | else return 0.14509468122522517;  // std dev = 2,275, 29,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else return -0.03254015317273097;  // std dev = 0,300, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.03432314523889524;  // std dev = 0,296, 103,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=10 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, A), follows(H, G) )
%   | | | then return 0.0900048187908182;  // std dev = 2,236, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.3193662184868601;  // std dev = 3,447, 49,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.013635736000993246;  // std dev = 1,570, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.19445843499605828;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.15811763130689482;  // std dev = 0,430, 113,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=49 */
%   | else return -0.03320251502347403;  // std dev = 0,292, 106,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=10 */
%   else if ( follows(A, E) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.11243048665939764;  // std dev = 2,097, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.2643853960456111;  // std dev = 3,715, 58,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   | | else return -0.34138421916727735;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.21942337811418183;  // std dev = 2,350, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return -0.15735096615396207;  // std dev = 0,190, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( tweets(A, J), follows(K, A) )
%   | | | then return -0.041068032557855086;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.15115146011893998;  // std dev = 2,488, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.1646445202105842;  // std dev = 4,761, 94,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=49 */
%   | | | else return 0.437577678402875;  // std dev = 0,979, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.04559154206413725;  // std dev = 0,297, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else return -0.11551587726245786;  // std dev = 0,043, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.02955336309635511;  // std dev = 0,292, 106,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=10 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.16458750342730372;  // std dev = 4,036, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return -0.2692333004724484;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tweets(A, J), follows(K, A) )
%   | | | then return -0.03616487242783094;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.11034707625985181;  // std dev = 2,517, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.03727949306640287;  // std dev = 0,366, 217,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=59 */
%   else if ( follows(D, A), follows(E, D) )
%   | then if ( follows(E, A), follows(F, E) )
%   | | then if ( recursion_accounttype(D, B), follows(D, E) )
%   | | | then return 0.11718684895060523;  // std dev = 2,386, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return -0.1753044246487884;  // std dev = 1,044, 26,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.2980481757296376;  // std dev = 2,511, 28,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return -0.07766739816645465;  // std dev = 0,711, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(A, H), follows(G, H) )
%   | | | then return 0.4317935523751562;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.09662830141111109;  // std dev = 2,779, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.037548537524560555;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.0990271052981785;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, C), follows(D, E) )
%   | | then if ( recursion_accounttype(E, B), follows(C, E) )
%   | | | then return 0.3154458591848677;  // std dev = 3,285, 66,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=51 */
%   | | | else return -0.15161111093817417;  // std dev = 2,646, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | else return 0.5181702959450205;  // std dev = 0,824, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.10858436967492072;  // std dev = 0,041, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.030394424206601777;  // std dev = 0,292, 106,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=10 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return -0.12309126837352254;  // std dev = 0,969, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.1965391124121225;  // std dev = 2,489, 26,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.1218210997716252;  // std dev = 2,856, 37,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.06375685166008137;  // std dev = 2,406, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, C), follows(D, E) )
%   | | then if ( recursion_accounttype(E, B), follows(C, E) )
%   | | | then return 0.2388285135317242;  // std dev = 3,286, 66,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=51 */
%   | | | else return -0.11786307438389661;  // std dev = 2,641, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else return 0.41634734529766454;  // std dev = 0,820, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.0985190661707221;  // std dev = 0,038, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.02711377049786806;  // std dev = 0,292, 106,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=10 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then if ( follows(G, I), tweets(G, H) )
%   | | | then return 0.051143178874724804;  // std dev = 3,110, 45,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | | else return 0.3550434158708262;  // std dev = 0,687, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.01695259167934017;  // std dev = 1,328, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.062426211426571884;  // std dev = 3,063, 43,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), tweets(C, E) )
%   | then if ( recursion_accounttype(D, B), follows(C, D) )
%   | | then if ( tweets(A, E), tweets(D, E) )
%   | | | then return 0.1614001101994809;  // std dev = 3,733, 69,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=46 */
%   | | | else return -0.07588954002553011;  // std dev = 2,113, 39,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | else return -0.10000960311283894;  // std dev = 0,098, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0.31351403383537374;  // std dev = 0,822, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.024250230613047336;  // std dev = 0,292, 106,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=10 */
%   | else if ( tweets(A, G), follows(A, H) )
%   | | then if ( follows(H, I), tweets(H, G) )
%   | | | then return 0.03479897211367367;  // std dev = 3,116, 46,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.26986491008038316;  // std dev = 0,674, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( follows(J, A), follows(A, J) )
%   | | | then return -0.13374137624799623;  // std dev = 0,840, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.03994332932741044;  // std dev = 3,263, 55,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( recursion_accounttype(D, B), follows(C, D) )
%   | then if ( recursion_accounttype(C, B), follows(A, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.041635172429477174;  // std dev = 3,313, 63,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | | | else return 0.3106658762137942;  // std dev = 0,264, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tweets(A, G), tweets(D, G) )
%   | | | then return 0.001547695767383705;  // std dev = 3,981, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return -0.09501555953334323;  // std dev = 1,319, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else return -0.07588823477566602;  // std dev = 0,196, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   else if ( follows(H, A) )
%   | then return 0.24487996335985315;  // std dev = 0,722, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.014356364184729136;  // std dev = 0,337, 46,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.02062291409653051;  // std dev = 2,490, 29,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.04821668496897989;  // std dev = 2,804, 35,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */


Results
   AUC ROC   = 0.728159
   AUC PR    = 0.526643
   CLL	      = -0.575448
   Precision = 0.502591 at threshold = 0.5
   Recall    = 0.769841
   F1        = 0.60815


Total learning time: 28.27 seconds
Total inference time: 1.24 seconds
AUC ROC: 0.728159


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN-B), Time: 00:51:27
{'CLL': -0.575448, 'Precision': [0.502591, 0.5], 'Inference time': 1.24, 'Learning time': 28.27, 'AUC ROC': 0.728159, 'F1': 0.60815, 'AUC PR': 0.526643, 'Recall': 0.769841}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.37942553084419395;  // std dev = 4,843, 94,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=49 */
%   | | | else return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( follows(G, C) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then if ( follows(H, I), follows(A, I) )
%   | | then if ( follows(J, A), follows(J, I) )
%   | | | then return -0.11154803459745743;  // std dev = 0,985, 33,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   | | | else return 0.10057317752375475;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( tweets(A, K), follows(L, A) )
%   | | | then return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( follows(A, M) )
%   | | then if ( follows(N, A), follows(N, M) )
%   | | | then return 0.1273797043302816;  // std dev = 2,262, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.44998566979338916;  // std dev = 3,440, 49,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
%   | | else if ( tweets(A, P) )
%   | | | then return 0.024815601766178884;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.25814893509951237;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */


Results
   AUC ROC   = 0.686602
   AUC PR    = 0.468157
   CLL	      = -0.670238
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.202 seconds
Total inference time: 0.744 seconds
AUC ROC: 0.686602


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN), Time: 00:51:32
{'CLL': -0.670238, 'Precision': [nan, 0.5], 'Inference time': 0.744, 'Learning time': 4.202, 'AUC ROC': 0.686602, 'F1': nan, 'AUC PR': 0.468157, 'Recall': 0.0}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,false;phenotype(A, E), complex(A, F).;false;true
0;false;interaction(A, A).;false;true
0;false,false,true;complex(A, J), location(A, K).;false;false
0;true,false,false;interaction(C, G), phenotype(G, H).;false;false
0;false,false;interaction(A, I), complex(I, J).;true;true
0;true;complex(C, D), complex(A, D).;false;true
0;false,false,false;enzyme(A, L), interaction(A, M).;false;false
1;;proteinclass(A, B) :- interaction(A, C), interaction(D, A).;true;true
1;true,false;phenotype(C, E), interaction(C, F).;true;false
1;true,false,true;recursion_proteinclass(F, B), interaction(F, D).;false;false
1;false;interaction(G, A), recursion_proteinclass(G, B).;false;true
1;false,false,true;location(I, J), phenotype(I, K).;false;false
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;true;recursion_proteinclass(C, B).;false;true
1;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
2;;proteinclass(A, B) :- location(A, C).;true;true
2;false;interaction(A, F), complex(F, G).;true;true
2;true,true;interaction(E, D), interaction(E, A).;false;false
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;false;false
2;false,false;interaction(A, I).;true;true
2;true;location(D, C), recursion_proteinclass(D, B).;true;false
2;false,false,false;interaction(K, A), interaction(L, K).;false;false
2;false,true;interaction(A, H), interaction(F, H).;false;false
3;;proteinclass(A, B) :- interaction(C, A), location(C, D).;true;true
3;true,false;location(A, D).;false;false
3;false;complex(A, G).;true;true
3;false,false,true;phenotype(K, I), recursion_proteinclass(K, B).;false;false
3;false,false;phenotype(A, I), location(A, J).;true;true
3;true;complex(C, E), interaction(F, C).;false;true
3;false,false,false;enzyme(A, L).;false;false
3;false,true;complex(H, G), recursion_proteinclass(H, B).;false;false
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;true,false;interaction(C, A).;false;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;false;true
4;false,false,true;enzyme(I, G), recursion_proteinclass(I, B).;false;false
4;true,false,false;recursion_proteinclass(D, B), complex(C, E).;false;false
4;false,false;enzyme(A, G), phenotype(A, H).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
4;false,false,false;complex(A, J).;false;false
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(E, A), interaction(A, E).;true;false
5;true,false,true;phenotype(A, F), interaction(C, G).;false;false
5;false;interaction(A, A).;false;true
5;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
5;false,false;interaction(A, H), complex(H, I).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;false;true
5;false,false,false;interaction(K, A), location(A, L).;false;false
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,false;interaction(J, A), phenotype(J, K).;false;false
6;false,false;interaction(A, H).;true;true
6;false;interaction(E, A), interaction(F, E).;true;true
6;false,false,true;interaction(H, H), enzyme(H, I).;false;false
6;false,true,false;interaction(G, F), recursion_proteinclass(G, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true;interaction(A, A).;false;true
7;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
7;false,false,false;interaction(A, K), interaction(K, L).;false;false
7;false,false;interaction(A, I), enzyme(I, J).;true;true
7;false;interaction(F, A).;true;true
7;false,false,true;recursion_proteinclass(I, B).;false;false
7;false,true,false;interaction(A, H), interaction(F, H).;false;false
7;true;interaction(E, C), recursion_proteinclass(E, B).;false;false
7;false,true;interaction(G, F), recursion_proteinclass(G, B).;false;true
8;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
8;false,false,false;interaction(A, N), recursion_proteinclass(N, B).;false;false
8;false,false;enzyme(A, K), location(A, L).;true;true
8;false;enzyme(A, F), interaction(A, G).;true;true
8;false,false,true;enzyme(M, K), recursion_proteinclass(M, B).;false;false
8;false,true,false;interaction(G, I), complex(A, J).;false;false
8;true;interaction(E, C), enzyme(E, D).;false;false
8;false,true;interaction(G, H), recursion_proteinclass(H, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;false,false,false;location(A, L).;false;false
9;false,false;interaction(A, H), phenotype(H, I).;true;true
9;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
9;false,false,true;enzyme(H, J), interaction(K, A).;false;false
9;false,true,false;complex(A, F), complex(D, G).;false;false
9;true;recursion_proteinclass(C, B).;false;false
9;false,true;phenotype(D, E), phenotype(A, E).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.28861251125845394;  // std dev = 6,084, 151,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=65 */
%   | else if ( tweets(A, E) )
%   | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( follows(F, C) )
%   | | | then return 0.42957750652808374;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.04506482294997952;  // std dev = 4,033, 107,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | | else return -0.03073995378937667;  // std dev = 1,633, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( follows(I, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.19148226843284602;  // std dev = 5,657, 144,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.2676621106327528;  // std dev = 6,182, 155,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=70 */
%   | else if ( follows(E, C) )
%   | | then if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.06094801482822129;  // std dev = 3,876, 92,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
%   | | | else return -0.05214460579579469;  // std dev = 1,349, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.14742580855749174;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.035646967784845135;  // std dev = 2,636, 61,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=8 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then return 0.4284435864696442;  // std dev = 0,491, 42,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | | then return 0.2698452258713009;  // std dev = 2,866, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.12772182322850412;  // std dev = 3,462, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.1453531509108122;  // std dev = 8,965, 378,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=128 */
%   | else return 0.11481321631291713;  // std dev = 4,337, 90,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(C, D), follows(C, E) )
%   | then return 0.11634788482725221;  // std dev = 8,755, 366,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=122 */
%   | else return 0.12900531976586865;  // std dev = 0,472, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else if ( tweets(A, F) )
%   | then if ( tweets(G, F), recursion_accounttype(G, B) )
%   | | then return 0.11561762337187494;  // std dev = 3,396, 54,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( recursion_accounttype(H, B) )
%   | | then return 0.11973098449119439;  // std dev = 2,587, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.1331228895287427;  // std dev = 7,860, 277,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=104 */
%   | else if ( follows(A, C) )
%   | | then return -0.22546442420103954;  // std dev = 0,268, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( recursion_accounttype(D, B), tweets(C, E) )
%   | | | then return -0.2814214039847083;  // std dev = 0,021, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.030393844773981087;  // std dev = 1,338, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.06161841349039325;  // std dev = 2,759, 65,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.228169898856586;  // std dev = 4,538, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.1641429683470402;  // std dev = 6,600, 180,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=83 */
%   | else if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(F, C) )
%   | | | then return -0.2996633536253537;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.2996633536253537;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.21450962317792904;  // std dev = 0,992, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( follows(I, G), recursion_accounttype(I, B) )
%   | | | then return -0.021306230885181503;  // std dev = 4,112, 111,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=21 */
%   | | | else return -0.07248138691852725;  // std dev = 1,344, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.07805416312139135;  // std dev = 4,683, 113,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
%   | | | else return 0.06822346242845165;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return 0.043481512546540035;  // std dev = 6,321, 200,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=67 */
%   | else return -0.05943499362121297;  // std dev = 3,015, 77,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(F, G), recursion_accounttype(G, B) )
%   | | | then return 0.18991477807244128;  // std dev = 4,593, 92,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=43 */
%   | | | else return 0.040228836524923185;  // std dev = 0,752, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05902547757286829;  // std dev = 3,422, 55,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.21333137744604158;  // std dev = 1,408, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05472057880467806;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.06097260355582636;  // std dev = 8,370, 347,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=121 */
%   | else return -0.05123238314772964;  // std dev = 2,283, 37,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   else if ( follows(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(F, A) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return 0.11274975781843626;  // std dev = 2,839, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return -0.10781926995255096;  // std dev = 1,332, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( follows(G, A), follows(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0435903659577529;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then return 0.03903991434005404;  // std dev = 8,460, 366,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=122 */
%   | else return 0.05864630062163302;  // std dev = 1,951, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then return 0.04580989519444756;  // std dev = 3,145, 47,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else if ( follows(G, E), tweets(A, H) )
%   | | | then return -0.17531002668441897;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.3751602255824372;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( recursion_accounttype(I, B) )
%   | | then return 0.034538295004625796;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.07383500987588422;  // std dev = 5,648, 135,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=59 */
%   | else return -0.036533746179204726;  // std dev = 4,121, 111,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=23 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), tweets(D, F) )
%   | | then return -0.04190942208179575;  // std dev = 2,559, 50,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   | | else return -0.09678633939812932;  // std dev = 1,552, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.21136210885252754;  // std dev = 1,561, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.018645528380247356;  // std dev = 3,175, 51,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else return 0.11589098231563182;  // std dev = 0,490, 83,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=40 */


Results
   AUC ROC   = 0.666116
   AUC PR    = 0.480824
   CLL	      = -0.601909
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.652 seconds
Total inference time: 1.087 seconds
AUC ROC: 0.666116


Results scoring model
   AUC ROC   = 0.739614
   AUC PR    = 0.56014
   CLL	      = -0.575333
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total scoring time: 1.126 seconds
Parameter learned model CLL: -0.575333


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'tweets(A, E)', 'false': 'follows(A, A)', 'true': 'tweets(C, D), tweets(A, D)', 'true,false,false': 'follows(F, C)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'tweets(A, H)', 'false,false,false': 'follows(I, A)'}, {'true,false,true': [1.491, 5, 4], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [2.619, 12, 16], 'false,false,true,false': [1.633, 24, 3], 'true,true': [6.084, 86, 65], 'false,false,true,true': [4.033, 87, 20], 'false,false,false,true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [5.657, 96, 48]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, D)', 'true,false': 'follows(E, C)', 'true,false,true': 'recursion_accounttype(E, B), follows(D, E)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'false,false': 'follows(A, G), follows(G, H)', 'true': 'recursion_accounttype(C, B)', 'false,false,false': 'follows(I, A), recursion_accounttype(I, B)'}, {'true,false,true,false': [1.349, 20, 2], 'false,false,false,true': [2.866, 18, 15], 'true,true': [6.182, 85, 70], 'true,false,true,true': [3.876, 73, 19], 'false,false,true': [0.491, 17, 25], 'true,false,false': [0.0, 4, 0], 'false,true': [2.636, 53, 8], 'false,false,false,false': [3.462, 42, 17]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'true': 'follows(C, D), follows(A, D)'}, {'true,true': [8.965, 250, 128], 'true,false': [4.337, 62, 28], 'false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'tweets(A, F)', 'false,false': 'recursion_accounttype(H, B)', 'true': 'tweets(C, D), follows(C, E)', 'false,true': 'tweets(G, F), recursion_accounttype(G, B)'}, {'true,false': [0.472, 12, 6], 'true,true': [8.755, 244, 122], 'false,true,true': [3.396, 36, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.587, 20, 10], 'false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(D, C)', 'true,false': 'follows(A, C)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'true,false,false': 'recursion_accounttype(D, B), tweets(C, E)', 'false,false': 'recursion_accounttype(G, B)', 'true': 'follows(C, D), recursion_accounttype(D, B)'}, {'true,false,true': [0.268, 27, 0], 'true,true': [7.86, 173, 104], 'true,false,false,true': [0.021, 2, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true': [4.538, 44, 41], 'false,true': [2.759, 56, 9], 'true,false,false,false': [1.338, 10, 2]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'follows(A, E), follows(E, A)', 'true,false,true': 'follows(F, C)', 'false': 'follows(A, A)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'follows(I, G), recursion_accounttype(I, B)', 'false,false,false': 'follows(A, J)'}, {'true,false,true,false': [0.0, 1, 0], 'false,false,true,false': [1.344, 21, 2], 'true,true': [6.6, 97, 83], 'true,false,true,true': [0.0, 3, 0], 'false,false,true,true': [4.112, 90, 21], 'false,false,false,true': [4.683, 76, 37], 'true,false,false': [0.992, 2, 2], 'false,true': [0.0, 0, 0], 'false,false,false,false': [2.708, 22, 11]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false': 'follows(A, E), follows(E, F)', 'false,true,false': 'follows(F, G), recursion_accounttype(G, B)', 'false,false,false': 'follows(A, I)', 'true': 'follows(D, A), follows(A, D)', 'false,false': 'follows(H, A)', 'false,false,true': 'follows(H, H)', 'false,true': 'follows(A, A)'}, {'true,false': [3.015, 66, 11], 'true,true': [6.321, 133, 67], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,true': [4.593, 49, 43], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.422, 36, 19], 'false,false,false,true': [1.408, 4, 4], 'false,true,false,false': [0.752, 2, 1], 'false,false,false,false': [2.708, 22, 11]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(A, E)', 'false,false,false': 'follows(G, A), follows(H, G)', 'true': 'follows(C, D), recursion_accounttype(D, B)', 'false,false': 'follows(F, A)', 'false,false,true': 'recursion_accounttype(F, B)'}, {'true,false': [2.283, 30, 7], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true': [8.37, 226, 121], 'false,false,true,true': [2.839, 18, 15], 'false,false,true,false': [1.332, 16, 2], 'false,false,false,false': [2.708, 22, 11]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false,false': 'recursion_accounttype(I, B)', 'false': 'follows(E, A)', 'false,true,false': 'follows(G, E), tweets(A, H)', 'true': 'follows(C, D)', 'false,true': 'follows(F, E), recursion_accounttype(F, B)'}, {'true,false': [1.951, 12, 6], 'true,true': [8.46, 244, 122], 'false,true,false,true': [0.0, 3, 0], 'false,true,true': [3.145, 30, 17], 'false,false,true': [2.708, 22, 11], 'false,false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, C)', 'false': 'follows(A, D), recursion_accounttype(D, B)', 'true': 'recursion_accounttype(C, B)', 'false,false': 'follows(G, A)', 'false,false,true': 'follows(A, H)', 'false,true': 'tweets(A, E), tweets(D, F)'}, {'true,false': [4.121, 88, 23], 'true,true': [5.648, 76, 59], 'false,true,false': [1.552, 24, 3], 'false,false,true,false': [3.175, 34, 17], 'false,true,true': [2.559, 42, 8], 'false,false,true,true': [1.561, 5, 6], 'false,false,false': [0.49, 43, 40]}]]
[{'': [0.24770823902218317, 0.18927295918367437], 'true,false': [0.2469135802469134, 0.24489795918367302], 'false': [nan, 0.1892729591836739], 'false,false,true': [0.1519783387195387, 0.09876543209876527], 'true,false,false': [0.24489795918367302, nan], 'false,false': [0.14218088661171852, 0.22067930193282115], 'true': [0.24516468575939632, 0.24835646457268032], 'false,false,false': [0.0, 0.22222222222222296]}, {'': [0.21656344333803776, 0.2209622761890742], 'false,false,false': [0.24896638989539646, 0.20316038137502487], 'true,false,true': [0.16332394864947802, 0.08272707411230328], 'false': [0.11394786347755954, 0.24289108829442901], 'false,false': [0.24092970521541948, 0.224237249848762], 'true': [0.24657361463769853, 0.14582508267470923], 'true,false': [0.14976207414348638, 0.0]}, {'': [0.21208629741298646, nan], 'true': [0.2126416721139768, 0.20900039906459184]}, {'': [0.2100342409652816, 0.2169619907327062], 'false': [0.21350901193959615, 0.22316647558478223], 'false,false': [0.22316647558478223, nan], 'true': [0.20942026742339612, 0.2223656688657131], 'false,true': [0.21350901193959615, nan]}, {'': [0.21159553919821764, 0.2086423503969776], 'true,false': [0.002651064265166168, 0.1357121236693493], 'false': [0.11707750315481855, 0.2422723791115435], 'true,false,false': [0.0002148864038922782, 0.14929287719216902], 'false,false': [0.2422723791115437, nan], 'true': [0.22302080841427666, 0.053786379774461976]}, {'': [0.24146189665278905, 0.17431835775107082], 'true,false': [0.0, 0.24578153872696754], 'true,false,true': [0.0, 0.0], 'false': [nan, 0.17431835775107019], 'false,false,true': [0.15232793321406904, 0.07848308943066072], 'false,false': [0.14002542900748963, 0.20042335335898892], 'true': [0.24197580796494095, 0.18898423188217106], 'false,false,false': [0.19403542473905022, 0.22222237075884768]}, {'': [0.17919874385054654, 0.22806638096560444], 'false,false,false': [0.2476710825989112, 0.22222238030662017], 'false,true,false': [0.22932263734273683, 0.1883466385476478], 'false': [0.22871386875837815, 0.22087251807584465], 'true': [0.19978777151337168, 0.11807323566714202], 'false,false': [0.21291619545452073, 0.23113893242412387], 'false,false,true': [nan, 0.21291619545452073], 'false,true': [nan, 0.22871386875837815]}, {'': [0.19709471195048464, 0.21113843459283158], 'false,false,false': [nan, 0.22222238795860452], 'false': [nan, 0.21113843459283158], 'true': [0.20187859419337675, 0.14085279012967244], 'false,false': [0.20393680796753086, 0.22222238795860452], 'false,false,true': [0.24425665620815273, 0.09853722406774992]}, {'': [0.1962977259424131, 0.2086888392416228], 'false,true,false': [0.0, 0.0], 'false': [0.19989262783351297, 0.22222239401563887], 'false,false': [0.22222239401563887, nan], 'true': [0.19553398368054672, 0.2114607607873762], 'false,true': [0.21050383950283352, 0.007488769124920774]}, {'': [0.20175142944605004, 0.19383682435097505], 'false': [0.11702636815194305, 0.22681323395832817], 'false,false,true': [0.22165469220365364, 0.19762774137872277], 'false,false': [0.207310816602654, 0.23968131520185026], 'true': [0.23632654126004965, 0.15301577870608693], 'false,true': [0.1309970750017278, 0.08919918486922794]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false;follows(G, A), tweets(G, H).;true;true
0;false,false;follows(I, A).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
1;true,false;follows(E, C).;true;true
1;true;recursion_accounttype(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true,false;follows(A, C).;true;true
4;true,false,false;recursion_accounttype(D, B), tweets(C, E).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,false;follows(A, E), follows(E, A).;true;true
5;true;follows(D, C), recursion_accounttype(D, B).;true;true
5;true,false,true;follows(F, C).;true;true
8;;accounttype(A, B) :- follows(A, C).;true;true
8;false;follows(E, A).;true;true
8;false,true,false;follows(G, E), tweets(A, H).;true;true
8;false,true;follows(F, E), recursion_accounttype(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.2805627282029616;  // std dev = 5,320, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3097618383253188;  // std dev = 2,771, 31,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(I, J), follows(J, A) )
%   | | | then return 0.5052077586289241;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( follows(K, A), tweets(K, L) )
%   | then return 0.02979072614428811;  // std dev = 0,377, 134,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=23 */
%   | else return 0.18691605838718392;  // std dev = 0,470, 146,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F), follows(F, A) )
%   | | | then return 0.22909784288600252;  // std dev = 5,436, 123,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=50 */
%   | | | else return 0.3775572071745904;  // std dev = 1,493, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0.42310198535814914;  // std dev = 0,481, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | else return 0.03209988788132389;  // std dev = 0,383, 118,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=21 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.0350133479952718;  // std dev = 0,338, 61,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=8 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.4508603876168658;  // std dev = 3,333, 47,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=29 */
%   | | | else return -0.1661608889788783;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | | then return 0.27376701203105874;  // std dev = 2,856, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.09602739534347961;  // std dev = 3,096, 51,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.3379227584599882;  // std dev = 5,341, 116,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=65 */
%   | | | else return 0.6274407126502106;  // std dev = 1,320, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return -0.1480596932128648;  // std dev = 0,240, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else return -0.22831916353194057;  // std dev = 0,152, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.050025424866376685;  // std dev = 0,307, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, A), follows(I, H) )
%   | | | then return 0.09287100552831726;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.3559402338684037;  // std dev = 3,889, 63,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   | | else if ( tweets(A, J), follows(K, A) )
%   | | | then return -0.09120075531652634;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.15527362846682313;  // std dev = 2,829, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(D, E) )
%   | | | then return 0.36240683402806845;  // std dev = 4,841, 103,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=67 */
%   | | | else return 0.12922516534523393;  // std dev = 2,502, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else return -0.12354363847531188;  // std dev = 0,241, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else return -0.19076231157060336;  // std dev = 0,134, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.04357774504746866;  // std dev = 0,307, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, G), follows(H, A) )
%   | | | then return 0.08067070743561655;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.29049004527343225;  // std dev = 3,884, 63,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   | | else if ( follows(I, A), tweets(A, J) )
%   | | | then return -0.07945081712811182;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.1314100110119365;  // std dev = 2,829, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), recursion_accounttype(E, B) )
%   | | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | | then return 0.19640422286204198;  // std dev = 5,739, 151,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=83 */
%   | | | else return -0.16600042895038047;  // std dev = 0,096, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.03282560962153139;  // std dev = 0,383, 109,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=21 */
%   | else return -0.10715544012211427;  // std dev = 0,208, 41,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.011960957937510385;  // std dev = 0,341, 65,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.24465832413435368;  // std dev = 3,394, 49,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=30 */
%   | | | else return -0.2436420594947837;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.10721716834837265;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.10721716834837258;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.08481693818417826;  // std dev = 4,998, 126,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=54 */
%   | | | else return 0.1107433922856137;  // std dev = 2,391, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else return 0.1880491640487959;  // std dev = 0,379, 27,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | else return 0.06443932209715451;  // std dev = 0,372, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.03787549994599575;  // std dev = 0,307, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then if ( follows(H, J), tweets(H, I) )
%   | | | then return 0.15245435224381995;  // std dev = 3,625, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | | else return 0.34454575922957414;  // std dev = 0,962, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( follows(K, A) )
%   | | | then return -0.048645611926708084;  // std dev = 1,614, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.11840166737165775;  // std dev = 3,608, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.07906001812759918;  // std dev = 0,417, 198,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=74 */
%   | else return -0.10708704716001892;  // std dev = 0,208, 79,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=4 */
%   else if ( follows(A, E) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then if ( follows(G, A), follows(G, E) )
%   | | | then return 0.06893830879746077;  // std dev = 2,811, 41,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.17542964579905845;  // std dev = 3,812, 61,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=37 */
%   | | else return -0.25887891763951776;  // std dev = 0,048, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then if ( follows(H, I), recursion_accounttype(I, B) )
%   | | | then return 0.10416873736252667;  // std dev = 2,527, 29,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return -0.15231998262704335;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( follows(J, A), tweets(A, K) )
%   | | | then return -0.06486212107537354;  // std dev = 0,963, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.07121872977796441;  // std dev = 2,831, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(D, E) )
%   | | | then return 0.19492767881945466;  // std dev = 4,838, 103,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=67 */
%   | | | else return -4.331668912179294E-4;  // std dev = 2,410, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else return -0.14846486619803562;  // std dev = 0,250, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else return -0.14730235527941013;  // std dev = 0,143, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.033728971160968596;  // std dev = 0,305, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( tweets(A, G), follows(A, H) )
%   | | then if ( follows(H, I), tweets(H, G) )
%   | | | then return 0.09728863873843077;  // std dev = 3,601, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | | else return 0.2577287439923553;  // std dev = 0,843, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.043688103953540454;  // std dev = 1,614, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.06801269037817;  // std dev = 3,593, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then return 0.011327952533061892;  // std dev = 0,368, 277,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=78 */
%   | else if ( tweets(A, E), follows(F, A) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return -0.14114737263445362;  // std dev = 1,450, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.2374805610710148;  // std dev = 2,611, 29,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | else if ( follows(H, A), follows(A, H) )
%   | | | then return -0.07000168245410104;  // std dev = 0,955, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.06886885931724807;  // std dev = 3,369, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   else if ( follows(I, A) )
%   | then if ( follows(J, I), recursion_accounttype(J, B) )
%   | | then return 0.02012198514987771;  // std dev = 0,411, 47,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else return -0.1085228784129274;  // std dev = 0,000547, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( tweets(A, K) )
%   | | then return 0.03714653484087623;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.03714653484087627;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.0694631299948145;  // std dev = 5,181, 116,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=65 */
%   | | | else return 0.3304743415456182;  // std dev = 1,301, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return -0.12803674521960864;  // std dev = 0,245, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else return -0.13215919714872032;  // std dev = 0,148, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.03107311237698321;  // std dev = 0,305, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then if ( follows(J, A), follows(K, J) )
%   | | | then return 0.10400951234219431;  // std dev = 2,710, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.02017032236133487;  // std dev = 2,404, 27,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | else if ( follows(L, A) )
%   | | | then return -0.03498217515304828;  // std dev = 1,610, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.04125871529223091;  // std dev = 3,591, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */


Results
   AUC ROC   = 0.723608
   AUC PR    = 0.519045
   CLL	      = -0.567549
   Precision = 0.508197 at threshold = 0.5
   Recall    = 0.738095
   F1        = 0.601942


Total learning time: 17.823 seconds
Total inference time: 1.313 seconds
AUC ROC: 0.723608


Results scoring model
   AUC ROC   = 0.832368
   AUC PR    = 0.681028
   CLL	      = -0.482725
   Precision = 0.67284 at threshold = 0.5
   Recall    = 0.698718
   F1        = 0.685535


Total scoring time: 1.293 seconds
Refined model CLL: -0.482725


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.723608
   AUC PR    = 0.519045
   CLL	      = -0.567549
   Precision = 0.508197 at threshold = 0.5
   Recall    = 0.738095
   F1        = 0.601942


Total learning time: 22.894 seconds
Total inference time: 1.313 seconds
AUC ROC: 0.723608
Total revision time: 22.894
Best scored revision CLL: -0.482725


Dataset: 15_yeast_twitter, Fold: 1, Type: Transfer (trRDN-B), Time: 00:51:58
{'CLL': -0.567549, 'Precision': [0.508197, 0.5], 'parameter_1.0': {'CLL': -0.601909, 'Precision': [nan, 0.5], 'Inference time': 1.087, 'Learning time': 2.652, 'AUC ROC': 0.666116, 'F1': nan, 'AUC PR': 0.480824, 'Recall': 0.0}, 'Inference time': 1.313, 'Learning time': 22.894, 'AUC ROC': 0.723608, 'F1': 0.601942, 'AUC PR': 0.519045, 'Recall': 0.738095}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.4184937626857202;  // std dev = 5,346, 116,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=65 */
%   | | | else return 0.7581489350995123;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return -0.06492798797741088;  // std dev = 0,266, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.03658790700575082;  // std dev = 0,307, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.10959300038435871;  // std dev = 0,984, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | | else return 0.3429974199479972;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.43814893509951125;  // std dev = 3,490, 50,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | | | else return 0.1914822684328457;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.359577627207934;  // std dev = 5,346, 116,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=65 */
%   | | | else return 0.6392070123615111;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return -0.05720661123539924;  // std dev = 0,266, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.032192176879280186;  // std dev = 0,307, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.09676851882223118;  // std dev = 0,984, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | | else return 0.2959222839173268;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.3760603795621069;  // std dev = 3,490, 50,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | | | else return 0.16653882456488187;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(D, E), tweets(A, E) )
%   | | | then return 0.38319226715109383;  // std dev = 4,823, 103,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=67 */
%   | | | else return 0.14600094226840973;  // std dev = 2,533, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else return -0.05070064289107805;  // std dev = 0,266, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.02841978220951746;  // std dev = 0,307, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return -0.08627855512573782;  // std dev = 0,984, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | | else return 0.246377439708811;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.323493797843899;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | | | else return 0.15890623496975761;  // std dev = 3,063, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.22147334004161892;  // std dev = 5,267, 116,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=65 */
%   | | | else return 0.45791610337852695;  // std dev = 1,335, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return -0.045161602872387976;  // std dev = 0,266, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.025162564730915663;  // std dev = 0,307, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.07755616323552579;  // std dev = 0,984, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | | else return 0.19881003268781505;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.24552329899588984;  // std dev = 3,485, 50,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | | | else return 0.11630569256756774;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(D, E) )
%   | | | then return 0.24922188898700315;  // std dev = 4,818, 103,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=67 */
%   | | | else return 0.029318782608829037;  // std dev = 2,360, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else return -0.040403203370043154;  // std dev = 0,266, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.022335198232359802;  // std dev = 0,307, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return -0.07020092128923554;  // std dev = 0,984, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | | else return 0.156550433346382;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.19794903597985541;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | | | else return 0.10476899588241191;  // std dev = 3,057, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, C), follows(E, D) )
%   | | then if ( recursion_accounttype(E, B), follows(C, E) )
%   | | | then return 0.18588065560605307;  // std dev = 4,647, 105,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=68 */
%   | | | else return -0.08099366304311353;  // std dev = 2,472, 50,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else return 0.5326745991385431;  // std dev = 0,311, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.019869521792523236;  // std dev = 0,307, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( follows(G, A) )
%   | | then if ( tweets(A, H), follows(A, G) )
%   | | | then return 0.12093984099346079;  // std dev = 2,546, 34,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.06985512592224818;  // std dev = 1,643, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.1444815150705576;  // std dev = 3,482, 50,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | | | else return 0.0764055107172708;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), tweets(C, E) )
%   | then if ( recursion_accounttype(D, B), follows(C, D) )
%   | | then if ( tweets(A, E), tweets(D, E) )
%   | | | then return 0.1899815065266428;  // std dev = 4,342, 89,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=61 */
%   | | | else return -0.0593085497258119;  // std dev = 2,782, 44,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | else return -0.0912388838857646;  // std dev = 0,093, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0.4181379960461243;  // std dev = 0,837, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.017710468582975352;  // std dev = 0,307, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return -0.06512431312478417;  // std dev = 0,975, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | | else return 0.10888286559291714;  // std dev = 2,845, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.11381529921225593;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | | | else return 0.06559332635528531;  // std dev = 3,056, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), follows(E, C) )
%   | then if ( recursion_accounttype(E, B), tweets(E, D) )
%   | | then if ( follows(C, E), tweets(C, D) )
%   | | | then return 0.1427718256153457;  // std dev = 4,342, 89,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=61 */
%   | | | else return -0.12037296680247637;  // std dev = 1,755, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else return -0.1714373394052238;  // std dev = 0,128, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.18578669671929307;  // std dev = 0,333, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.015813093783598024;  // std dev = 0,307, 133,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=14 */
%   | else if ( tweets(A, G), follows(A, H) )
%   | | then if ( follows(H, I), tweets(H, G) )
%   | | | then return 0.060471325496386924;  // std dev = 3,443, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | | else return 0.23038423359564894;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.06986159496552606;  // std dev = 1,419, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.06428068260098954;  // std dev = 3,627, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( recursion_accounttype(D, B), follows(C, D) )
%   | then if ( recursion_accounttype(C, B), follows(A, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.027421818886565336;  // std dev = 3,889, 78,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=43 */
%   | | | else return 0.3161377988256132;  // std dev = 1,002, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.003088678908599144;  // std dev = 0,348, 182,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=45 */
%   | else return -0.09132958513722693;  // std dev = 0,215, 41,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.016516660256427562;  // std dev = 0,340, 65,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.2017894949350383;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.030275042398407326;  // std dev = 2,879, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | else if ( follows(A, J), tweets(A, K) )
%   | | | then return 0.009032287426092175;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03675152655248149;  // std dev = 2,887, 37,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.03779013173884027;  // std dev = 0,375, 198,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=74 */
%   | else return -0.07858244652596595;  // std dev = 0,207, 79,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=4 */
%   else if ( follows(A, E), tweets(A, F) )
%   | then if ( follows(E, G), tweets(G, F) )
%   | | then if ( follows(E, A), follows(G, A) )
%   | | | then return -0.07088647067335868;  // std dev = 1,308, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.10341066555556919;  // std dev = 3,344, 46,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=27 */
%   | | else if ( follows(H, A), tweets(H, F) )
%   | | | then return -0.2696153754254662;  // std dev = 0,881, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.14744949664143298;  // std dev = 1,193, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( follows(A, I), follows(I, A) )
%   | | then return -0.11752808794824669;  // std dev = 0,297, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( follows(J, A), tweets(J, K) )
%   | | | then return 0.00498779896180587;  // std dev = 2,601, 51,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.041552475649413965;  // std dev = 3,617, 58,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=26 */


Results
   AUC ROC   = 0.719687
   AUC PR    = 0.525021
   CLL	      = -0.572847
   Precision = 0.515152 at threshold = 0.5
   Recall    = 0.674603
   F1        = 0.584192


Total learning time: 32.077 seconds
Total inference time: 1.439 seconds
AUC ROC: 0.719687


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN-B), Time: 00:52:32
{'CLL': -0.572847, 'Precision': [0.515152, 0.5], 'Inference time': 1.439, 'Learning time': 32.077, 'AUC ROC': 0.719687, 'F1': 0.584192, 'AUC PR': 0.525021, 'Recall': 0.674603}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.4184937626857202;  // std dev = 5,346, 116,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=65 */
%   | | | else return 0.7581489350995123;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( follows(G, C) )
%   | | | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then if ( follows(H, I), follows(A, I) )
%   | | then if ( follows(J, A), tweets(H, K) )
%   | | | then return -0.06492798797741081;  // std dev = 1,922, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return 0.13939893509951237;  // std dev = 2,543, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( follows(H, L), follows(M, A) )
%   | | | then return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( follows(N, A) )
%   | | then if ( follows(N, P), follows(P, A) )
%   | | | then return -0.10959300038435871;  // std dev = 0,984, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | | else return 0.3429974199479972;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( follows(A, Q) )
%   | | | then return 0.43814893509951125;  // std dev = 3,490, 50,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | | | else return 0.1914822684328457;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */


Results
   AUC ROC   = 0.683595
   AUC PR    = 0.466397
   CLL	      = -0.66741
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.524 seconds
Total inference time: 0.751 seconds
AUC ROC: 0.683595


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN), Time: 00:52:38
{'CLL': -0.66741, 'Precision': [nan, 0.5], 'Inference time': 0.751, 'Learning time': 4.524, 'AUC ROC': 0.683595, 'F1': nan, 'AUC PR': 0.466397, 'Recall': 0.0}


Starting fold 2

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 252

Target test facts examples: 1562
Target test pos	 examples: 156
Target test neg examples: 312

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,false;phenotype(A, E), complex(A, F).;false;true
0;false;interaction(A, A).;false;true
0;false,false,true;complex(A, J), location(A, K).;false;false
0;true,false,false;interaction(C, G), phenotype(G, H).;false;false
0;false,false;interaction(A, I), complex(I, J).;true;true
0;true;complex(C, D), complex(A, D).;false;true
0;false,false,false;enzyme(A, L), interaction(A, M).;false;false
1;;proteinclass(A, B) :- interaction(A, C), interaction(D, A).;true;true
1;true,false;phenotype(C, E), interaction(C, F).;true;false
1;true,false,true;recursion_proteinclass(F, B), interaction(F, D).;false;false
1;false;interaction(G, A), recursion_proteinclass(G, B).;false;true
1;false,false,true;location(I, J), phenotype(I, K).;false;false
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;true;recursion_proteinclass(C, B).;false;true
1;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
2;;proteinclass(A, B) :- location(A, C).;true;true
2;false;interaction(A, F), complex(F, G).;true;true
2;true,true;interaction(E, D), interaction(E, A).;false;false
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;false;false
2;false,false;interaction(A, I).;true;true
2;true;location(D, C), recursion_proteinclass(D, B).;true;false
2;false,false,false;interaction(K, A), interaction(L, K).;false;false
2;false,true;interaction(A, H), interaction(F, H).;false;false
3;;proteinclass(A, B) :- interaction(C, A), location(C, D).;true;true
3;true,false;location(A, D).;false;false
3;false;complex(A, G).;true;true
3;false,false,true;phenotype(K, I), recursion_proteinclass(K, B).;false;false
3;false,false;phenotype(A, I), location(A, J).;true;true
3;true;complex(C, E), interaction(F, C).;false;true
3;false,false,false;enzyme(A, L).;false;false
3;false,true;complex(H, G), recursion_proteinclass(H, B).;false;false
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;true,false;interaction(C, A).;false;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;false;true
4;false,false,true;enzyme(I, G), recursion_proteinclass(I, B).;false;false
4;true,false,false;recursion_proteinclass(D, B), complex(C, E).;false;false
4;false,false;enzyme(A, G), phenotype(A, H).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
4;false,false,false;complex(A, J).;false;false
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(E, A), interaction(A, E).;true;false
5;true,false,true;phenotype(A, F), interaction(C, G).;false;false
5;false;interaction(A, A).;false;true
5;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
5;false,false;interaction(A, H), complex(H, I).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;false;true
5;false,false,false;interaction(K, A), location(A, L).;false;false
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,false;interaction(J, A), phenotype(J, K).;false;false
6;false,false;interaction(A, H).;true;true
6;false;interaction(E, A), interaction(F, E).;true;true
6;false,false,true;interaction(H, H), enzyme(H, I).;false;false
6;false,true,false;interaction(G, F), recursion_proteinclass(G, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true;interaction(A, A).;false;true
7;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
7;false,false,false;interaction(A, K), interaction(K, L).;false;false
7;false,false;interaction(A, I), enzyme(I, J).;true;true
7;false;interaction(F, A).;true;true
7;false,false,true;recursion_proteinclass(I, B).;false;false
7;false,true,false;interaction(A, H), interaction(F, H).;false;false
7;true;interaction(E, C), recursion_proteinclass(E, B).;false;false
7;false,true;interaction(G, F), recursion_proteinclass(G, B).;false;true
8;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
8;false,false,false;interaction(A, N), recursion_proteinclass(N, B).;false;false
8;false,false;enzyme(A, K), location(A, L).;true;true
8;false;enzyme(A, F), interaction(A, G).;true;true
8;false,false,true;enzyme(M, K), recursion_proteinclass(M, B).;false;false
8;false,true,false;interaction(G, I), complex(A, J).;false;false
8;true;interaction(E, C), enzyme(E, D).;false;false
8;false,true;interaction(G, H), recursion_proteinclass(H, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;false,false,false;location(A, L).;false;false
9;false,false;interaction(A, H), phenotype(H, I).;true;true
9;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
9;false,false,true;enzyme(H, J), interaction(K, A).;false;false
9;false,true,false;complex(A, F), complex(D, G).;false;false
9;true;recursion_proteinclass(C, B).;false;false
9;false,true;phenotype(D, E), phenotype(A, E).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.20189893509951234;  // std dev = 2,687, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else if ( tweets(A, E) )
%   | | then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( follows(F, C) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.07243464938522651;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( follows(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.21587295560879338;  // std dev = 3,179, 43,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | else if ( follows(E, C) )
%   | | then if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.03156064857813048;  // std dev = 1,561, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.1381719508048963;  // std dev = 0,018, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.16221334521702105;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then return 0.3377866547829789;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | | then return 0.4984194820734871;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.337786654782979;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.13608332120104108;  // std dev = 3,835, 70,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | else return 0.18521316890279652;  // std dev = 1,037, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(C, D), follows(C, E) )
%   | then return 0.09993984460449533;  // std dev = 3,709, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | else return 0.18465382843155434;  // std dev = 0,458, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( tweets(A, F) )
%   | then if ( tweets(G, F), recursion_accounttype(G, B) )
%   | | then return 0.38058033414985104;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.10795867969018033;  // std dev = 3,675, 63,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | else if ( follows(A, C) )
%   | | then return -0.14247668422898527;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( recursion_accounttype(D, B), tweets(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.16386952554151848;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.17871059466797595;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.23709848940558545;  // std dev = 1,229, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.13824827498151626;  // std dev = 3,249, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(F, C) )
%   | | | then return -0.3192987648017179;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( follows(I, G), recursion_accounttype(I, B) )
%   | | | then return -0.009840709974065966;  // std dev = 1,546, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.15803780487805064;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.051622563240000675;  // std dev = 1,339, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return 0.026296057904575555;  // std dev = 3,130, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | else return -0.15352871011815616;  // std dev = 0,035, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(F, G), recursion_accounttype(G, B) )
%   | | | then return 0.15735612508739366;  // std dev = 1,811, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.33617712634829366;  // std dev = 0,884, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.1614905820162918;  // std dev = 0,715, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.040856315533171546;  // std dev = 3,639, 66,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | else return 0.06329047123766308;  // std dev = 0,938, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( follows(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(F, A) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return 0.15454504196132238;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then return 0.03027666867170081;  // std dev = 3,641, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | else return 0.0887646119703044;  // std dev = 0,910, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then return 0.11608007539574065;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.05672116870403689;  // std dev = 2,902, 37,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | else return -0.09029889482211759;  // std dev = 1,616, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), tweets(D, F) )
%   | | then return -0.14823485346440524;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1446090153680256;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.5997759516268801;  // std dev = 0,111, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08755661956918752;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.11894524761302787;  // std dev = 0,502, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.683257
   AUC PR    = 0.454631
   CLL	      = -0.595617
   Precision = 0.472222 at threshold = 0.5
   Recall    = 0.108974
   F1        = 0.177083


Total learning time: 1.236 seconds
Total inference time: 1.055 seconds
AUC ROC: 0.683257


Results scoring model
   AUC ROC   = 0.772
   AUC PR    = 0.632954
   CLL	      = -0.557814
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.16
   F1        = 0.266667


Total scoring time: 0.728 seconds
Parameter learned model CLL: -0.557814


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'tweets(A, E)', 'false': 'follows(A, A)', 'true': 'tweets(C, D), tweets(A, D)', 'true,false,false': 'follows(F, C)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'tweets(A, H)', 'false,false,false': 'follows(I, A)'}, {'true,false,true': [1.369, 3, 5], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [1.225, 3, 3], 'false,false,true,false': [0.0, 5, 0], 'true,true': [2.687, 21, 11], 'false,false,true,true': [1.535, 11, 3], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.449, 7, 3]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, D)', 'true,false': 'follows(E, C)', 'true,false,true': 'recursion_accounttype(E, B), follows(D, E)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'false,false': 'follows(A, G), follows(G, H)', 'true': 'recursion_accounttype(C, B)', 'false,false,false': 'follows(I, A), recursion_accounttype(I, B)'}, {'true,false,true,false': [0.018, 2, 0], 'false,false,false,true': [0.816, 1, 2], 'true,true': [3.179, 26, 17], 'true,false,true,true': [1.561, 14, 3], 'false,false,true': [0.5, 2, 2], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 4, 0], 'false,false,false,false': [0.707, 1, 1]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'true': 'follows(C, D), follows(A, D)'}, {'true,true': [3.835, 47, 23], 'true,false': [1.037, 3, 2], 'false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'tweets(A, F)', 'true': 'tweets(C, D), follows(C, E)', 'false,true': 'tweets(G, F), recursion_accounttype(G, B)'}, {'true,true': [3.709, 46, 21], 'true,false': [0.458, 3, 2], 'false,true,true': [0.816, 1, 2], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(D, C)', 'true,false': 'follows(A, C)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'true,false,false': 'recursion_accounttype(D, B), tweets(C, E)', 'false,false': 'recursion_accounttype(G, B)', 'true': 'follows(C, D), recursion_accounttype(D, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [3.675, 41, 22], 'true,false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true': [1.229, 3, 3], 'false,true': [0.012, 4, 0], 'true,false,false,false': [0.0, 1, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'follows(A, E), follows(E, A)', 'true,false,true': 'follows(F, C)', 'false': 'follows(A, A)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'follows(I, G), recursion_accounttype(I, B)', 'false,false,false': 'follows(A, J)'}, {'true,false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.059, 3, 0], 'true,true': [3.249, 26, 19], 'true,false,true,true': [0.0, 1, 0], 'false,false,true,true': [1.546, 13, 3], 'false,false,false,true': [1.339, 7, 3], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false': 'follows(A, E), follows(E, F)', 'false,true,false': 'follows(F, G), recursion_accounttype(G, B)', 'false,false,false': 'follows(A, I)', 'true': 'follows(D, A), follows(A, D)', 'false,false': 'follows(H, A)', 'false,false,true': 'follows(H, H)', 'false,true': 'follows(A, A)'}, {'true,false': [0.035, 5, 0], 'true,true': [3.13, 34, 15], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.811, 9, 6], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.884, 1, 3], 'false,false,false,true': [0.715, 1, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(A, E)', 'false,false': 'follows(F, A)', 'true': 'follows(C, D), recursion_accounttype(D, B)', 'false,false,true': 'recursion_accounttype(F, B)'}, {'true,false': [0.938, 4, 2], 'true,true': [3.639, 45, 21], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.816, 1, 2], 'false,true': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(E, A)', 'true': 'follows(C, D)', 'false,true': 'follows(F, E), recursion_accounttype(F, B)'}, {'true,true': [3.641, 46, 21], 'true,false': [0.91, 3, 2], 'false,true,true': [0.816, 1, 2], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, C)', 'false': 'follows(A, D), recursion_accounttype(D, B)', 'true': 'recursion_accounttype(C, B)', 'false,false': 'follows(G, A)', 'false,false,true': 'follows(A, H)', 'false,true': 'tweets(A, E), tweets(D, F)'}, {'true,false': [1.616, 18, 3], 'true,true': [2.902, 23, 14], 'false,true,false': [0.0, 1, 0], 'false,false,true,false': [0.816, 1, 2], 'false,true,true': [0.042, 4, 0], 'false,false,true,true': [0.111, 0, 3], 'false,false,false': [0.502, 3, 3]}]]
[{'': [0.24243856332703168, 0.16409036860879894], 'true,false': [0.23437499999999983, 0.24999999999999992], 'false': [nan, 0.16409036860879925], 'false,false,true': [0.1683673469387754, -2.7755575615628915e-18], 'true,false,false': [0.24999999999999992, nan], 'false,false': [0.13296398891966743, 0.20999999999999988], 'true': [0.2255859374999995, 0.24489795918367346], 'false,false,false': [nan, 0.20999999999999988]}, {'': [0.21179983163721688, 0.2359073831375919], 'false,false,false': [0.2222222222222223, 0.24999999999999997], 'true,false,true': [0.14333142485158049, 0.00016198447778367764], 'false': [0.0, 0.24647471967481682], 'false,false': [0.25, 0.23952603058213548], 'true': [0.23498683527428632, 0.13097428508916656], 'true,false': [0.13097428508916656, nan]}, {'': [0.21052176543626394, nan], 'true': [0.21004970367932094, 0.21487780422727418]}, {'': [0.2060202735665412, 0.22222222222222224], 'false': [0.22222222222222224, nan], 'true': [0.20527471038719966, 0.209332726326079], 'false,true': [0.22222222222222224, nan]}, {'': [0.2097692930162387, 0.1925607352400432], 'true,false': [0.0, 0.0], 'false': [3.862358386622772e-05, 0.2517499319182569], 'true,false,false': [nan, 0.0], 'false,false': [0.2517499319182569, nan], 'true': [0.21432685551314237, 0.00011441341485581014]}, {'': [0.23395709122174696, 0.14797432642228972], 'false,false,false': [0.1793532040637115, nan], 'true,false,true': [0.0, nan], 'false': [nan, 0.14797432642228966], 'false,false,true': [0.1494707481369825, 0.0011746722601670794], 'false,false': [0.12897578377145508, 0.1793532040637115], 'true': [0.23460506609302828, 0.0], 'true,false': [0.0, nan]}, {'': [0.18418609645669004, 0.2227231333197269], 'false,false,false': [0.25553048662801725, nan], 'false,true,false': [0.2187336591135405, nan], 'false': [0.2187336591135405, 0.22230934211990028], 'true': [0.19996208916175082, 0.00023858252992710327], 'false,false': [0.1955269736089563, 0.25553048662801725], 'false,false,true': [nan, 0.1955269736089563], 'false,true': [nan, 0.2187336591135405]}, {'': [0.19617530634975114, 0.22222222222222224], 'false': [nan, 0.22222222222222224], 'false,false': [0.22222222222222224, nan], 'false,false,true': [0.22222222222222224, nan], 'true': [0.20065066366426323, 0.146485025493126]}, {'': [0.19582292201137338, 0.2222222222222222], 'false': [0.2222222222222222, nan], 'true': [0.19782991488262414, 0.1657459363247082], 'false,true': [0.2222222222222222, nan]}, {'': [0.19523977907009488, 0.19100499992908737], 'false': [0.00034765455853741356, 0.2282393407897385], 'false,false,true': [0.004114510168167514, 0.2222222222222222], 'false,false': [0.17876052722860214, 0.2524683818943458], 'true': [0.2276614126081934, 0.12432713362073149], 'false,true': [0.0004319388577915355, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false;follows(G, A), tweets(G, H).;true;true
0;false,true;tweets(A, H).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
1;true,false;recursion_accounttype(E, B), follows(D, E).;true;true
1;true;recursion_accounttype(C, B).;true;true
1;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true,false;follows(A, C).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;true;true
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false;follows(G, A), tweets(G, H).;true;true
5;true;follows(D, C), recursion_accounttype(D, B).;true;true
5;false,true;follows(I, G), recursion_accounttype(I, B).;true;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(A, D).;true;true
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;false,true;tweets(A, E), tweets(D, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then if ( recursion_accounttype(D, B), tweets(D, E) )
%   | | then if ( tweets(A, E) )
%   | | | then return 0.16584124279182005;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( follows(F, A), tweets(F, G) )
%   | then if ( tweets(A, G) )
%   | | then if ( follows(A, H), recursion_accounttype(H, B) )
%   | | | then return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( tweets(A, I) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( recursion_accounttype(E, B), tweets(E, F) )
%   | | | then return 0.21342067089475153;  // std dev = 2,896, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.7518526675222027;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( recursion_accounttype(G, B), follows(D, G) )
%   | | then if ( follows(A, H), recursion_accounttype(H, B) )
%   | | | then return -0.0449846464194206;  // std dev = 0,950, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.12482690126584271;  // std dev = 1,186, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(A, I), recursion_accounttype(I, B) )
%   | then return -0.15231548833711311;  // std dev = 0,093, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( tweets(A, J), follows(A, K) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5927956482127955;  // std dev = 0,921, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.27385428365727227;  // std dev = 1,944, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.5554540989806434;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tweets(C, E), tweets(A, E) )
%   | | | then return -0.11590878057328292;  // std dev = 0,743, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.3330188321857228;  // std dev = 1,556, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.21118089482571786;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.06490072749860727;  // std dev = 0,250, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( tweets(A, G) )
%   | | then if ( follows(H, A) )
%   | | | then return 0.14846274501816178;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3368425601974646;  // std dev = 0,845, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then if ( follows(D, C), tweets(A, E) )
%   | | then if ( tweets(C, E), follows(C, D) )
%   | | | then return 0.11566213403284975;  // std dev = 2,040, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.6944531993446708;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tweets(A, F) )
%   | | | then return -0.18235354808488982;  // std dev = 0,133, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.08899211511771342;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.3847228329628137;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.05769141188254772;  // std dev = 0,250, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return 0.12503743981651536;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2719221862223778;  // std dev = 0,803, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( recursion_accounttype(E, B), tweets(E, F) )
%   | | | then return 0.11364146900912339;  // std dev = 2,584, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return -0.012811102883761563;  // std dev = 1,550, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return 0.28939785874435514;  // std dev = 0,909, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( follows(A, C) )
%   | | then return -0.18869211434423633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1208476173360419;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.12055065550152094;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.20244070522323002;  // std dev = 0,723, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( recursion_accounttype(E, B), tweets(E, F) )
%   | | | then return 0.09974128175638393;  // std dev = 2,554, 35,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return -0.1212625763367215;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2193856477509304;  // std dev = 0,909, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.19649863995232444;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(G, A), tweets(G, H) )
%   | then if ( follows(I, G), recursion_accounttype(I, B) )
%   | | then if ( follows(A, J), recursion_accounttype(J, B) )
%   | | | then return -0.01573139203969068;  // std dev = 0,945, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.10586812264276013;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.16582612426747206;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( follows(A, K), recursion_accounttype(K, B) )
%   | | then return -0.10850054236806568;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.16799142209276444;  // std dev = 0,684, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(F, A), recursion_accounttype(F, B) )
%   | | | then return 0.06413425799238641;  // std dev = 2,327, 34,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.025009312038959595;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.02653430490573305;  // std dev = 0,392, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return -0.09755891694817909;  // std dev = 0,065, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( follows(G, A), follows(A, G) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then return -0.20020574700268573;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1746395318554465;  // std dev = 1,060, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(J, A) )
%   | | | then return 0.14388764379105157;  // std dev = 0,899, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.12889366582033496;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3783904377328448;  // std dev = 0,096, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(C, E), follows(E, A) )
%   | then if ( recursion_accounttype(E, B), follows(A, C) )
%   | | then if ( follows(E, C), tweets(E, D) )
%   | | | then return 0.0443492952334204;  // std dev = 2,014, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.46239255711929356;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.13040307364316703;  // std dev = 0,217, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( recursion_accounttype(C, B) )
%   | | then return -0.02028376318526898;  // std dev = 0,584, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.30537835457233403;  // std dev = 1,162, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( tweets(A, F) )
%   | then return -0.09398679199200877;  // std dev = 0,052, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( follows(G, A), follows(A, G) )
%   | | then if ( recursion_accounttype(G, B) )
%   | | | then return 0.02704744649154255;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1504837930055288;  // std dev = 0,155, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.20744764163051038;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(C, A), follows(D, A) )
%   | | then return 0.16102129550102645;  // std dev = 0,466, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( follows(A, D) )
%   | | | then return -0.16146387243178623;  // std dev = 0,594, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.040290598597916116;  // std dev = 1,760, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else return -0.12099010047805657;  // std dev = 0,054, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( follows(E, A), recursion_accounttype(E, B) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then return -0.015342139545494932;  // std dev = 0,820, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.27549583823471513;  // std dev = 0,126, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(A, H), follows(G, H) )
%   | | | then return -0.02599245825700481;  // std dev = 0,764, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.05499797172423367;  // std dev = 0,748, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.08490712316633002;  // std dev = 0,467, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( tweets(A, D) )
%   | then if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.05229399749590292;  // std dev = 2,300, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return -0.14535542001977828;  // std dev = 0,109, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04895393375892049;  // std dev = 0,389, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( follows(G, A), recursion_accounttype(G, B) )
%   | | then return 0.02051769762787421;  // std dev = 1,079, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.13213139209997998;  // std dev = 0,139, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.09621797906267493;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(J, A) )
%   | | | then return 0.1108617754130042;  // std dev = 0,864, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.11417878636309824;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.23189988428226802;  // std dev = 0,094, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 0.664735
   AUC PR    = 0.461051
   CLL	      = -0.649353
   Precision = 0.464646 at threshold = 0.5
   Recall    = 0.294872
   F1        = 0.360784


Total learning time: 9.192 seconds
Total inference time: 1.504 seconds
AUC ROC: 0.664735


Results scoring model
   AUC ROC   = 0.9324
   AUC PR    = 0.882381
   CLL	      = -0.382408
   Precision = 0.928571 at threshold = 0.5
   Recall    = 0.52
   F1        = 0.666667


Total scoring time: 1.013 seconds
Refined model CLL: -0.382408


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.664735
   AUC PR    = 0.461051
   CLL	      = -0.649353
   Precision = 0.464646 at threshold = 0.5
   Recall    = 0.294872
   F1        = 0.360784


Total learning time: 12.169 seconds
Total inference time: 1.504 seconds
AUC ROC: 0.664735
Total revision time: 12.169
Best scored revision CLL: -0.382408


Dataset: 15_yeast_twitter, Fold: 2, Type: Transfer (trRDN-B), Time: 00:52:53
{'CLL': -0.649353, 'Precision': [0.464646, 0.5], 'Inference time': 1.504, 'Learning time': 12.169, 'AUC ROC': 0.664735, 'F1': 0.360784, 'AUC PR': 0.461051, 'parameter_0.2': {'CLL': -0.595617, 'Precision': [0.472222, 0.5], 'Inference time': 1.055, 'Learning time': 1.236, 'AUC ROC': 0.683257, 'F1': 0.177083, 'AUC PR': 0.454631, 'Recall': 0.108974}, 'Recall': 0.294872}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then if ( follows(D, C), tweets(A, E) )
%   | | then if ( tweets(C, E), follows(C, D) )
%   | | | then return 0.1914822684328457;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tweets(A, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.07518439823382113;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then if ( follows(C, D), recursion_accounttype(D, B) )
%   | | then if ( follows(A, C) )
%   | | | then return 0.2774116658660398;  // std dev = 1,617, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.5935429587915635;  // std dev = 0,830, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tweets(A, E), tweets(C, E) )
%   | | | then return -0.0887218464699011;  // std dev = 0,842, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.26370496304256535;  // std dev = 1,512, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.06627631666542753;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( tweets(A, G) )
%   | | then if ( follows(H, A) )
%   | | | then return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then if ( follows(D, C), tweets(A, E) )
%   | | then if ( tweets(C, E), follows(C, D) )
%   | | | then return 0.13683828601953751;  // std dev = 2,044, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.6774516572607164;  // std dev = 0,067, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tweets(A, F) )
%   | | | then return -0.13981346495508457;  // std dev = 0,090, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.18213403670271985;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.46125983910675533;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.05882080275108568;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.19123909051776852;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.17362673356579578;  // std dev = 1,162, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.30430454574876786;  // std dev = 1,021, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then if ( recursion_accounttype(D, B), follows(C, D) )
%   | | then if ( follows(A, C) )
%   | | | then return 0.19743471115865366;  // std dev = 1,581, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.4837759707554083;  // std dev = 0,771, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tweets(A, E), tweets(C, E) )
%   | | | then return -0.09382470094118968;  // std dev = 0,718, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.16627680661586242;  // std dev = 1,348, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0.34884632569484225;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.05250670097644501;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return -0.16339000458164005;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14215407058579993;  // std dev = 1,168, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.25470541348658926;  // std dev = 0,983, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, E) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.17347211747128144;  // std dev = 1,657, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.38412222619729786;  // std dev = 0,753, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return -0.0179367488908153;  // std dev = 1,270, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.26611278164976093;  // std dev = 1,104, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.13851697913085229;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.04710428366758889;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.14226447239466866;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.11437472657044426;  // std dev = 1,173, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.20755050502207506;  // std dev = 0,952, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then if ( tweets(E, D), recursion_accounttype(E, B) )
%   | | | then return 0.2789618598770095;  // std dev = 1,482, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.16898212212786756;  // std dev = 0,866, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else return 0.12061173505156267;  // std dev = 0,594, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( follows(C, F), follows(F, A) )
%   | | then if ( tweets(A, G), follows(F, C) )
%   | | | then return 0.29325452586525624;  // std dev = 0,524, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.06350577807805924;  // std dev = 0,879, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.342114110094884;  // std dev = 0,593, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( tweets(A, H), follows(I, A) )
%   | then if ( follows(I, J), follows(J, A) )
%   | | then return -0.11535646088667925;  // std dev = 0,023, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.31213478271069606;  // std dev = 1,175, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.03437329623354527;  // std dev = 0,303, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, A), tweets(C, D) )
%   | then if ( tweets(A, D) )
%   | | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | | then return 0.05641613887763611;  // std dev = 1,827, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.15490381541008572;  // std dev = 0,146, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( follows(C, F), follows(F, A) )
%   | | | then return 0.11023687360530081;  // std dev = 0,972, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.29021803041903504;  // std dev = 0,577, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.06618439041067453;  // std dev = 0,226, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   else if ( follows(G, A), follows(A, G) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then return -0.10884788497228094;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.0548292353863571;  // std dev = 1,120, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tweets(A, I) )
%   | | then return 0.0018174555112253563;  // std dev = 0,329, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.48802414569348207;  // std dev = 0,229, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(C, E), follows(E, A) )
%   | then if ( recursion_accounttype(E, B), follows(A, C) )
%   | | then if ( tweets(E, D), follows(E, C) )
%   | | | then return 0.03603498113865344;  // std dev = 1,748, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.35781592970633946;  // std dev = 0,134, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.10032105005403885;  // std dev = 0,200, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( recursion_accounttype(C, B), follows(A, C) )
%   | | then return -0.14121388037151256;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.46167655773972877;  // std dev = 0,746, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.160660718549472;  // std dev = 0,797, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( tweets(A, G) )
%   | then return -0.15416278618182383;  // std dev = 0,133, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( follows(H, A), follows(A, H) )
%   | | then return -0.07025491189944547;  // std dev = 0,358, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.27973691652633625;  // std dev = 0,469, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, E) )
%   | | then if ( follows(A, C), follows(A, D) )
%   | | | then return 0.05395114619539454;  // std dev = 1,507, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.2329793428548201;  // std dev = 0,758, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return -0.04458839474824388;  // std dev = 1,063, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.14464588361116693;  // std dev = 0,925, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.1270676274756995;  // std dev = 0,114, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( follows(G, A), tweets(A, H) )
%   | then if ( follows(G, I), follows(I, A) )
%   | | then return -0.08818416387178532;  // std dev = 0,013, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.20495138280460581;  // std dev = 1,131, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( follows(J, A) )
%   | | then return -0.20076174144620884;  // std dev = 0,294, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.015617884711829413;  // std dev = 0,232, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then if ( tweets(E, D), recursion_accounttype(E, B) )
%   | | | then return 0.17781691614636705;  // std dev = 1,470, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.15228898170590813;  // std dev = 0,822, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else return 0.06556803740069465;  // std dev = 0,433, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( follows(C, F), follows(F, A) )
%   | | then if ( tweets(A, G), follows(F, C) )
%   | | | then return 0.1546551160225474;  // std dev = 0,377, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.05003961587065862;  // std dev = 0,879, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.18371825475063955;  // std dev = 0,494, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(H, A), tweets(A, I) )
%   | then if ( follows(H, J), follows(J, A) )
%   | | then return -0.0813479476530722;  // std dev = 0,012, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.16360493574875534;  // std dev = 1,127, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.04893792235742889;  // std dev = 0,219, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */


Results
   AUC ROC   = 0.713439
   AUC PR    = 0.501329
   CLL	      = -0.599784
   Precision = 0.516667 at threshold = 0.5
   Recall    = 0.397436
   F1        = 0.449275


Total learning time: 12.662 seconds
Total inference time: 1.706 seconds
AUC ROC: 0.713439


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN-B), Time: 00:53:08
{'CLL': -0.599784, 'Precision': [0.516667, 0.5], 'Inference time': 1.706, 'Learning time': 12.662, 'AUC ROC': 0.713439, 'F1': 0.449275, 'AUC PR': 0.501329, 'Recall': 0.397436}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then if ( follows(D, C), tweets(A, E) )
%   | | then if ( tweets(C, E), follows(C, D) )
%   | | | then return 0.1914822684328457;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tweets(A, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then if ( follows(H, A), follows(G, H) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( tweets(A, J) )
%   | | then if ( follows(K, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.629191
   AUC PR    = 0.422599
   CLL	      = -0.703291
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.707 seconds
Total inference time: 0.853 seconds
AUC ROC: 0.629191


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN), Time: 00:53:12
{'CLL': -0.703291, 'Precision': [nan, 0.5], 'Inference time': 0.853, 'Learning time': 2.707, 'AUC ROC': 0.629191, 'F1': nan, 'AUC PR': 0.422599, 'Recall': 0.0}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,false;phenotype(A, E), complex(A, F).;false;true
0;false;interaction(A, A).;false;true
0;false,false,true;complex(A, J), location(A, K).;false;false
0;true,false,false;interaction(C, G), phenotype(G, H).;false;false
0;false,false;interaction(A, I), complex(I, J).;true;true
0;true;complex(C, D), complex(A, D).;false;true
0;false,false,false;enzyme(A, L), interaction(A, M).;false;false
1;;proteinclass(A, B) :- interaction(A, C), interaction(D, A).;true;true
1;true,false;phenotype(C, E), interaction(C, F).;true;false
1;true,false,true;recursion_proteinclass(F, B), interaction(F, D).;false;false
1;false;interaction(G, A), recursion_proteinclass(G, B).;false;true
1;false,false,true;location(I, J), phenotype(I, K).;false;false
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;true;recursion_proteinclass(C, B).;false;true
1;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
2;;proteinclass(A, B) :- location(A, C).;true;true
2;false;interaction(A, F), complex(F, G).;true;true
2;true,true;interaction(E, D), interaction(E, A).;false;false
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;false;false
2;false,false;interaction(A, I).;true;true
2;true;location(D, C), recursion_proteinclass(D, B).;true;false
2;false,false,false;interaction(K, A), interaction(L, K).;false;false
2;false,true;interaction(A, H), interaction(F, H).;false;false
3;;proteinclass(A, B) :- interaction(C, A), location(C, D).;true;true
3;true,false;location(A, D).;false;false
3;false;complex(A, G).;true;true
3;false,false,true;phenotype(K, I), recursion_proteinclass(K, B).;false;false
3;false,false;phenotype(A, I), location(A, J).;true;true
3;true;complex(C, E), interaction(F, C).;false;true
3;false,false,false;enzyme(A, L).;false;false
3;false,true;complex(H, G), recursion_proteinclass(H, B).;false;false
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;true,false;interaction(C, A).;false;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;false;true
4;false,false,true;enzyme(I, G), recursion_proteinclass(I, B).;false;false
4;true,false,false;recursion_proteinclass(D, B), complex(C, E).;false;false
4;false,false;enzyme(A, G), phenotype(A, H).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
4;false,false,false;complex(A, J).;false;false
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(E, A), interaction(A, E).;true;false
5;true,false,true;phenotype(A, F), interaction(C, G).;false;false
5;false;interaction(A, A).;false;true
5;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
5;false,false;interaction(A, H), complex(H, I).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;false;true
5;false,false,false;interaction(K, A), location(A, L).;false;false
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,false;interaction(J, A), phenotype(J, K).;false;false
6;false,false;interaction(A, H).;true;true
6;false;interaction(E, A), interaction(F, E).;true;true
6;false,false,true;interaction(H, H), enzyme(H, I).;false;false
6;false,true,false;interaction(G, F), recursion_proteinclass(G, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true;interaction(A, A).;false;true
7;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
7;false,false,false;interaction(A, K), interaction(K, L).;false;false
7;false,false;interaction(A, I), enzyme(I, J).;true;true
7;false;interaction(F, A).;true;true
7;false,false,true;recursion_proteinclass(I, B).;false;false
7;false,true,false;interaction(A, H), interaction(F, H).;false;false
7;true;interaction(E, C), recursion_proteinclass(E, B).;false;false
7;false,true;interaction(G, F), recursion_proteinclass(G, B).;false;true
8;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
8;false,false,false;interaction(A, N), recursion_proteinclass(N, B).;false;false
8;false,false;enzyme(A, K), location(A, L).;true;true
8;false;enzyme(A, F), interaction(A, G).;true;true
8;false,false,true;enzyme(M, K), recursion_proteinclass(M, B).;false;false
8;false,true,false;interaction(G, I), complex(A, J).;false;false
8;true;interaction(E, C), enzyme(E, D).;false;false
8;false,true;interaction(G, H), recursion_proteinclass(H, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;false,false,false;location(A, L).;false;false
9;false,false;interaction(A, H), phenotype(H, I).;true;true
9;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
9;false,false,true;enzyme(H, J), interaction(K, A).;false;false
9;false,true,false;complex(A, F), complex(D, G).;false;false
9;true;recursion_proteinclass(C, B).;false;false
9;false,true;phenotype(D, E), phenotype(A, E).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.21298764477693108;  // std dev = 3,767, 62,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | else if ( tweets(A, E) )
%   | | then return 0.5010060779566552;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( follows(F, C) )
%   | | | then return 0.40360348055405776;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.006297083247660414;  // std dev = 1,846, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return -0.05851773156715445;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( follows(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1914822684328457;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.23837017218361745;  // std dev = 4,404, 81,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=34 */
%   | else if ( follows(E, C) )
%   | | then if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.002450213418357208;  // std dev = 2,069, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return -0.1374570555897662;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14261933482555028;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.07588541785936069;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then return 0.33320549123154836;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | | then return 0.3301953470876926;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4332054912315484;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.13746440597530202;  // std dev = 5,445, 142,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
%   | else return 0.1644179768500389;  // std dev = 1,349, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(C, D), follows(C, E) )
%   | then return 0.10652836200283651;  // std dev = 5,250, 134,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=43 */
%   | else return 0.17005032569037665;  // std dev = 0,461, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( tweets(A, F) )
%   | then if ( tweets(G, F), recursion_accounttype(G, B) )
%   | | then return 0.2488332055958742;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.10211632784924975;  // std dev = 5,043, 120,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
%   | else if ( follows(A, C) )
%   | | then return -0.18263057696966842;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( recursion_accounttype(D, B), tweets(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.15614874368174989;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.04236530189570032;  // std dev = 1,265, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.2625511314762243;  // std dev = 1,794, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.1374507174394086;  // std dev = 4,492, 85,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=36 */
%   | else if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(F, C) )
%   | | | then return -0.3286020352217754;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7589652204562657;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( follows(I, G), recursion_accounttype(I, B) )
%   | | | then return -0.040807406745781295;  // std dev = 2,063, 34,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return -0.146576545727455;  // std dev = 0,053, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.06749825993579263;  // std dev = 2,166, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return 0.04708735668602013;  // std dev = 4,383, 95,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | else return -0.06048951393019076;  // std dev = 1,175, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(F, G), recursion_accounttype(G, B) )
%   | | | then return 0.09566830750605555;  // std dev = 2,469, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2150086014618451;  // std dev = 1,303, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.23002927692360314;  // std dev = 1,099, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.04888264703440832;  // std dev = 5,142, 131,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=43 */
%   | else return 0.013233089425215467;  // std dev = 1,391, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( follows(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(F, A) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return 0.09603958181722627;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then return 0.03458264508049194;  // std dev = 5,151, 134,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=43 */
%   | else return 0.06378161568552901;  // std dev = 1,341, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then return 0.07271833401721418;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.0759841558069712;  // std dev = 4,046, 70,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=29 */
%   | else return -0.08772765410351333;  // std dev = 2,297, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), tweets(D, F) )
%   | | then return -0.02613124023275316;  // std dev = 1,142, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.202125555496696;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.6138604489610978;  // std dev = 0,078, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0548366031862797;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.13858662572110395;  // std dev = 0,497, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */


Results
   AUC ROC   = 0.704286
   AUC PR    = 0.479515
   CLL	      = -0.586719
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.019231
   F1        = 0.037037


Total learning time: 1.842 seconds
Total inference time: 1.051 seconds
AUC ROC: 0.704286


Results scoring model
   AUC ROC   = 0.762
   AUC PR    = 0.604393
   CLL	      = -0.568262
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.04
   F1        = 0.076923


Total scoring time: 0.792 seconds
Parameter learned model CLL: -0.568262


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'tweets(A, E)', 'false': 'follows(A, A)', 'true': 'tweets(C, D), tweets(A, D)', 'true,false,false': 'follows(F, C)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'tweets(A, H)', 'false,false,false': 'follows(I, A)'}, {'true,false,true': [1.793, 5, 9], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [1.651, 5, 6], 'false,false,true,false': [0.957, 11, 1], 'true,true': [3.767, 40, 22], 'false,false,true,true': [1.846, 23, 4], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [2.309, 16, 8]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, D)', 'true,false': 'follows(E, C)', 'true,false,true': 'recursion_accounttype(E, B), follows(D, E)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'false,false': 'follows(A, G), follows(G, H)', 'true': 'recursion_accounttype(C, B)', 'false,false,false': 'follows(I, A), recursion_accounttype(I, B)'}, {'true,false,true,false': [0.006, 3, 0], 'false,false,false,true': [1.225, 3, 3], 'true,true': [4.404, 47, 34], 'true,false,true,true': [2.069, 30, 5], 'false,false,true': [0.5, 4, 4], 'true,false,false': [0.0, 1, 0], 'false,true': [0.953, 10, 1], 'false,false,false,false': [1.095, 2, 3]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'true': 'follows(C, D), follows(A, D)'}, {'true,true': [5.445, 95, 47], 'true,false': [1.349, 5, 3], 'false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'tweets(A, F)', 'true': 'tweets(C, D), follows(C, E)', 'false,true': 'tweets(G, F), recursion_accounttype(G, B)'}, {'true,true': [5.25, 91, 43], 'true,false': [0.461, 6, 4], 'false,true,true': [1.225, 3, 3], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(D, C)', 'true,false': 'follows(A, C)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'true,false,false': 'recursion_accounttype(D, B), tweets(C, E)', 'false,false': 'recursion_accounttype(G, B)', 'true': 'follows(C, D), recursion_accounttype(D, B)'}, {'true,false,true': [0.081, 3, 0], 'true,true': [5.043, 79, 41], 'true,false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true': [1.794, 6, 7], 'false,true': [1.265, 11, 2], 'true,false,false,false': [0.0, 1, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'follows(A, E), follows(E, A)', 'true,false,true': 'follows(F, C)', 'false': 'follows(A, A)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'follows(I, G), recursion_accounttype(I, B)', 'false,false,false': 'follows(A, J)'}, {'true,false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.053, 5, 0], 'true,true': [4.492, 49, 36], 'true,false,true,true': [0.0, 1, 0], 'false,false,true,true': [2.063, 29, 5], 'false,false,false,true': [2.166, 16, 8], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false': 'follows(A, E), follows(E, F)', 'false,true,false': 'follows(F, G), recursion_accounttype(G, B)', 'false,false,false': 'follows(A, I)', 'true': 'follows(D, A), follows(A, D)', 'false,false': 'follows(H, A)', 'false,false,true': 'follows(H, H)', 'false,true': 'follows(A, A)'}, {'true,false': [1.175, 12, 2], 'true,true': [4.383, 64, 31], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.469, 19, 10], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.303, 3, 4], 'false,false,false,true': [1.099, 2, 3], 'false,true,false,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(A, E)', 'false,false': 'follows(F, A)', 'true': 'follows(C, D), recursion_accounttype(D, B)', 'false,false,true': 'recursion_accounttype(F, B)'}, {'true,false': [1.391, 9, 4], 'true,true': [5.142, 88, 43], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [1.225, 3, 3], 'false,true': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(E, A)', 'true': 'follows(C, D)', 'false,true': 'follows(F, E), recursion_accounttype(F, B)'}, {'true,true': [5.151, 91, 43], 'true,false': [1.341, 6, 4], 'false,true,true': [1.225, 3, 3], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, C)', 'false': 'follows(A, D), recursion_accounttype(D, B)', 'true': 'recursion_accounttype(C, B)', 'false,false': 'follows(G, A)', 'false,false,true': 'follows(A, H)', 'false,true': 'tweets(A, E), tweets(D, F)'}, {'true,false': [2.297, 38, 6], 'true,true': [4.046, 41, 29], 'false,true,false': [0.008, 3, 0], 'false,false,true,false': [1.225, 3, 3], 'false,true,true': [1.142, 9, 2], 'false,false,true,true': [0.078, 0, 3], 'false,false,false': [0.497, 6, 7]}]]
[{'': [0.24441802087462178, 0.16376921138825906], 'true,false': [0.22959183673469377, 0.2479338842975207], 'false': [nan, 0.16376921138825848], 'false,false,true': [0.12620027434842235, 0.07638888888888894], 'true,false,false': [0.2479338842975207, nan], 'false,false': [0.11176857330703491, 0.22222222222222232], 'true': [0.2289281997918844, 0.2399999999999996], 'false,false,false': [nan, 0.22222222222222232]}, {'': [0.21165669159252185, 0.23206313095605915], 'false,false,false': [0.24999999999999997, 0.24000000000000007], 'true,false,true': [0.12227158168838831, 1.3324563454104876e-05], 'false': [0.08264462809917354, 0.2493594670923793], 'false,false': [0.2500000000000001, 0.24808539416443087], 'true': [0.2394699293272561, 0.11156752374862712], 'true,false': [0.11404293438886977, 0.0]}, {'': [0.20979446327104567, nan], 'true': [0.2087653333511036, 0.22737377076621945]}, {'': [0.2063962880429584, 0.25], 'false': [0.25, nan], 'true': [0.2056849493200552, 0.2121733981612735], 'false,true': [0.25, nan]}, {'': [0.20753959063461644, 0.20867998224500334], 'true,false': [0.0021957715346817425, 0.0], 'false': [0.12316554158088358, 0.24770740723899526], 'true,false,false': [nan, 0.0], 'false,false': [0.24770740723899526, nan], 'true': [0.21190299900096132, 0.0017783200561905174]}, {'': [0.2388554347520025, 0.14631878866243286], 'true,false': [0.0, 0.0], 'true,false,true': [0.0, nan], 'false': [nan, 0.14631878866243286], 'false,false,true': [0.1251810634146357, 0.0005550478316105334], 'false,false': [0.11045373651829597, 0.19540585115947318], 'true': [0.23737900205757925, 0.29570063390576645], 'false,false,false': [0.19540585115947318, nan]}, {'': [0.19019150936196022, 0.22276629455191055], 'false,false,false': [0.2415173099500038, nan], 'false,true,false': [0.21015723684801804, nan], 'false': [0.21015723684801804, 0.24208019643318102], 'true': [0.20219385844888144, 0.09866062711630628], 'false,false': [0.24238824958549257, 0.2415173099500038], 'false,false,true': [nan, 0.24238824958549257], 'false,true': [nan, 0.21015723684801804]}, {'': [0.19713498027929754, 0.24999999999999992], 'false': [nan, 0.24999999999999992], 'false,false': [0.24999999999999992, nan], 'false,false,true': [0.24999999999999992, nan], 'true': [0.20182116668748984, 0.14875648257355248]}, {'': [0.19680862489055795, 0.24999999999999992], 'false': [0.24999999999999992, nan], 'true': [0.19802283152860153, 0.1797448829927969], 'false,true': [0.24999999999999992, nan]}, {'': [0.1962354576047589, 0.20239060465028116], 'false': [0.0983854927009584, 0.24534679749594276], 'true': [0.2338697861062131, 0.1199055660396799], 'false,false': [0.2367933244099326, 0.24696276459436858], 'false,false,true': [0.0020415331332190125, 0.25000000000000006], 'false,true': [0.1185754231235138, 1.9034314150660297e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
1;true,false;follows(E, C).;true;true
1;true;recursion_accounttype(C, B).;true;true
1;true,false,true;recursion_accounttype(E, B), follows(D, E).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true,false;follows(A, C).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,false;follows(A, E), follows(E, A).;true;true
5;true;follows(D, C), recursion_accounttype(D, B).;true;true
5;false,true;follows(I, G), recursion_accounttype(I, B).;true;true
5;false;follows(G, A), tweets(G, H).;true;true
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;false,false;follows(G, A).;true;true
9;false,false,true;follows(A, H).;true;true
9;false,true;tweets(A, E), tweets(D, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( tweets(A, E), follows(D, C) )
%   | | | then return 0.4233663264038601;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.6581489350995122;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( tweets(D, F), follows(D, C) )
%   | | | then return 0.1604745164948612;  // std dev = 3,012, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.05851773156715445;  // std dev = 0,276, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then return 0.07243464938522651;  // std dev = 0,410, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.2428911295416821;  // std dev = 3,956, 68,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=29 */
%   | | | else return -0.05628818973457691;  // std dev = 0,824, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.8079711227070682;  // std dev = 0,102, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( follows(G, C) )
%   | | then return -0.009200307012226221;  // std dev = 0,337, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else return -0.13487591597187418;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.04396682506278329;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return 0.21954674027598445;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.31347917959387334;  // std dev = 1,387, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.474001067157207;  // std dev = 1,888, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.26150393100567887;  // std dev = 1,885, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( tweets(C, F), tweets(A, F) )
%   | | | then return 0.015620748125368246;  // std dev = 2,027, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.31070692373567427;  // std dev = 2,073, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else return -0.14580047094949877;  // std dev = 0,043, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.04887068809022347;  // std dev = 0,276, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then return 0.06456149203129945;  // std dev = 0,410, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.20869575996153586;  // std dev = 1,308, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then if ( recursion_accounttype(E, B), tweets(E, D) )
%   | | | then return 0.2749790040166098;  // std dev = 2,110, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.06717684306004941;  // std dev = 1,906, 33,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( follows(A, F), follows(C, F) )
%   | | | then return 0.6427047205917441;  // std dev = 0,139, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1557299860567179;  // std dev = 1,126, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( tweets(A, G), follows(A, C) )
%   | | then if ( follows(H, A), follows(H, C) )
%   | | | then return 0.7125755944565212;  // std dev = 0,128, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.18582497439132983;  // std dev = 0,106, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( follows(A, I), follows(I, C) )
%   | | | then return 0.08521151777326069;  // std dev = 1,453, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.6400291003114092;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.0334193746490448;  // std dev = 0,375, 63,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), recursion_accounttype(E, B) )
%   | | then if ( tweets(A, F), tweets(E, F) )
%   | | | then return 0.07213075267904352;  // std dev = 3,271, 60,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return 0.24505361117562294;  // std dev = 1,972, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else if ( follows(A, G), recursion_accounttype(G, B) )
%   | | | then return -0.04506873744940227;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.08736951589016122;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return -0.1444331548873297;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then if ( follows(A, I), follows(I, H) )
%   | | then return 0.17385203343885341;  // std dev = 0,891, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.12809192047424123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( tweets(A, J) )
%   | | then return 0.16439191733834876;  // std dev = 0,494, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.2728044236922566;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( recursion_accounttype(E, B) )
%   | | | then return 0.10117966005736068;  // std dev = 3,427, 69,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=29 */
%   | | | else return -0.13536481035386644;  // std dev = 1,015, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( follows(A, F) )
%   | | | then return 0.44837415216376786;  // std dev = 0,094, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15027587485125413;  // std dev = 1,079, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.11079903057446067;  // std dev = 0,221, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( follows(G, A), tweets(G, H) )
%   | then return -0.014362238291010406;  // std dev = 0,330, 39,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return -0.032910890479891104;  // std dev = 0,280, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.13123755203518514;  // std dev = 1,307, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.20615964036657775;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( follows(D, C), tweets(A, F) )
%   | | | then return 0.15424599021663715;  // std dev = 2,322, 27,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return 0.4285092125224021;  // std dev = 0,879, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tweets(D, G), follows(D, C) )
%   | | | then return -0.0027596582200448668;  // std dev = 2,507, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.4077100961789064;  // std dev = 0,130, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.14185409861948894;  // std dev = 0,038, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.040485061312365955;  // std dev = 0,274, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(J, A) )
%   | | | then return 0.16051415935117377;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.10312209856057393;  // std dev = 1,307, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.011407038302060996;  // std dev = 0,382, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.05184887297917644;  // std dev = 0,389, 89,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | else return -0.11220508701383336;  // std dev = 0,087, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   else if ( follows(E, A), follows(A, E) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( tweets(A, G), tweets(F, G) )
%   | | | then return 0.15882478056922714;  // std dev = 1,628, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.20342419633105435;  // std dev = 0,100, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.2046595713670564;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.34351927984825553;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09094611564833936;  // std dev = 1,044, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.08009884295279887;  // std dev = 1,307, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1518547439583028;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then if ( recursion_accounttype(E, B), tweets(E, D) )
%   | | | then return 0.13700377821609783;  // std dev = 2,093, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.09841745804767617;  // std dev = 1,814, 33,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( follows(A, F), follows(C, F) )
%   | | | then return 0.34865033792912875;  // std dev = 0,152, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.046451672203209816;  // std dev = 1,052, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.13368073087667243;  // std dev = 0,356, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.03666610592025518;  // std dev = 0,273, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return 0.1100160857258048;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06170754903523292;  // std dev = 1,307, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 2.685003484174954E-4;  // std dev = 0,370, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then if ( tweets(D, F), tweets(E, F) )
%   | | | then return 0.006586544081432221;  // std dev = 3,014, 57,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | | else return 0.2861873267687719;  // std dev = 1,083, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return -0.1490758222458289;  // std dev = 0,164, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else return -0.01592205671568377;  // std dev = 0,328, 37,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.019471713669970275;  // std dev = 0,256, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.2314983711980336;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05857097507332961;  // std dev = 1,040, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.047266530985955256;  // std dev = 1,307, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.11401551164650231;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.735248
   AUC PR    = 0.519386
   CLL	      = -0.564214
   Precision = 0.556522 at threshold = 0.5
   Recall    = 0.410256
   F1        = 0.472325


Total learning time: 12.294 seconds
Total inference time: 1.291 seconds
AUC ROC: 0.735248


Results scoring model
   AUC ROC   = 0.8902
   AUC PR    = 0.839823
   CLL	      = -0.434289
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.76087


Total scoring time: 0.976 seconds
Refined model CLL: -0.434289


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.735248
   AUC PR    = 0.519386
   CLL	      = -0.564214
   Precision = 0.556522 at threshold = 0.5
   Recall    = 0.410256
   F1        = 0.472325


Total learning time: 15.904 seconds
Total inference time: 1.291 seconds
AUC ROC: 0.735248
Total revision time: 15.904
Best scored revision CLL: -0.434289


Dataset: 15_yeast_twitter, Fold: 2, Type: Transfer (trRDN-B), Time: 00:53:31
{'CLL': -0.564214, 'Precision': [0.556522, 0.5], 'Inference time': 1.291, 'Learning time': 15.904, 'parameter_0.4': {'CLL': -0.586719, 'Precision': [0.5, 0.5], 'Inference time': 1.051, 'Learning time': 1.842, 'AUC ROC': 0.704286, 'F1': 0.037037, 'AUC PR': 0.479515, 'Recall': 0.019231}, 'AUC ROC': 0.735248, 'F1': 0.472325, 'AUC PR': 0.519386, 'Recall': 0.410256}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( tweets(A, E), follows(D, C) )
%   | | | then return 0.4233663264038601;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.6581489350995122;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( tweets(D, F), follows(D, C) )
%   | | | then return 0.1604745164948612;  // std dev = 3,012, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.05851773156715445;  // std dev = 0,276, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then return 0.07243464938522651;  // std dev = 0,410, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.5184258940214046;  // std dev = 1,895, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.30752485781852656;  // std dev = 1,887, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( tweets(C, F), tweets(A, F) )
%   | | | then return 0.05532232445287818;  // std dev = 2,121, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.35136541771509;  // std dev = 2,130, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.051542582638540835;  // std dev = 0,276, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then return 0.063386451204313;  // std dev = 0,410, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.24811816884741303;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then if ( recursion_accounttype(E, B), tweets(E, D) )
%   | | | then return 0.3147894648667047;  // std dev = 2,113, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.039991955674753735;  // std dev = 1,925, 33,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( follows(A, F), follows(C, F) )
%   | | | then return 0.7607998906794036;  // std dev = 0,088, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19979530963026698;  // std dev = 1,156, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( follows(A, C), tweets(A, G) )
%   | | then if ( follows(H, A), follows(H, C) )
%   | | | then return 0.7513730886572252;  // std dev = 0,119, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.18154839379265642;  // std dev = 0,085, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( follows(A, I), follows(I, C) )
%   | | | then return 0.11897265151740868;  // std dev = 1,474, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.7370492549218151;  // std dev = 0,115, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.04383620917968001;  // std dev = 0,383, 63,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( follows(D, C), tweets(A, F) )
%   | | | then return 0.23666504016361317;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return 0.5200206477239702;  // std dev = 0,893, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tweets(D, G), follows(D, C) )
%   | | | then return 0.07879997002501618;  // std dev = 2,707, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.5368524062587051;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10995293968328283;  // std dev = 0,028, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.05064589656750383;  // std dev = 0,276, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else if ( follows(I, A) )
%   | | then return 0.049128099843798054;  // std dev = 0,410, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.20086811475016111;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.35300430889050965;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then if ( tweets(E, D), recursion_accounttype(E, B) )
%   | | | then return 0.2052394791090026;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.05996430866975991;  // std dev = 1,846, 33,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( follows(A, F), follows(C, F) )
%   | | | then return 0.5315159025214705;  // std dev = 0,198, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13096538079091474;  // std dev = 1,095, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( tweets(A, G), follows(A, C) )
%   | | then return 0.3602482332195906;  // std dev = 0,327, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( follows(A, H), follows(H, C) )
%   | | | then return 0.051696857751935506;  // std dev = 1,345, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.522453473797558;  // std dev = 0,229, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( follows(A, I), recursion_accounttype(I, B) )
%   | then return -0.04487767519723693;  // std dev = 0,276, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else return 0.12489393589255161;  // std dev = 0,457, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then if ( tweets(A, E), tweets(C, E) )
%   | | then return 0.00651378361055106;  // std dev = 0,363, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | else return 0.2979999350425914;  // std dev = 0,390, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | else return -0.07706581829894166;  // std dev = 0,209, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   else if ( follows(F, A), follows(A, F) )
%   | then if ( tweets(A, G) )
%   | | then if ( follows(F, H), follows(H, A) )
%   | | | then return -0.016349157629512546;  // std dev = 1,333, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.3094315331763873;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.19056846682361267;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( follows(A, I), follows(J, A) )
%   | | then return 0.5093350408057626;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.14135707884005483;  // std dev = 1,681, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.2423687181764315;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( follows(D, C), tweets(A, F) )
%   | | | then return 0.12525857829626416;  // std dev = 2,253, 27,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return 0.36702545706753126;  // std dev = 0,848, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( follows(A, G), follows(D, G) )
%   | | | then return 0.05400180198386506;  // std dev = 2,433, 43,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return -0.2610512708446784;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10005410970714643;  // std dev = 0,034, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.038703328551975856;  // std dev = 0,273, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else if ( follows(I, A) )
%   | | then return 0.019549388279107332;  // std dev = 0,396, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.10866593061584773;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.18235791734808174;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A) )
%   | | then if ( follows(D, C), tweets(D, E) )
%   | | | then return 0.04464178571895249;  // std dev = 2,879, 54,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else return 0.397491583296398;  // std dev = 0,732, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.051914989246208715;  // std dev = 0,315, 46,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | else return -0.17713273335512683;  // std dev = 0,211, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then if ( follows(A, G) )
%   | | then return 0.35022453101743933;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10773037994013952;  // std dev = 0,993, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return -0.03437827213139113;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.08630640543376067;  // std dev = 1,371, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1444873963150357;  // std dev = 1,080, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(C, A) )
%   | | then return 0.122323177467758;  // std dev = 0,411, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else return -7.293731904859465E-6;  // std dev = 0,341, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | else return -0.09194097910596169;  // std dev = 0,079, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   else if ( follows(E, A), follows(A, E) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( tweets(A, G), tweets(F, G) )
%   | | | then return 0.14932970298539133;  // std dev = 1,614, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.19020351567526966;  // std dev = 0,110, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.18778232751951662;  // std dev = 0,150, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( follows(H, A), follows(A, I) )
%   | | then return 0.29466051922871733;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.07140088358836938;  // std dev = 1,639, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.10820534933417413;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(C, A), follows(D, A) )
%   | | then return 0.0938136246805078;  // std dev = 0,411, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else return -6.15866715629401E-6;  // std dev = 0,341, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | else return -0.08309021666065626;  // std dev = 0,080, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   else if ( follows(E, A), follows(A, E) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( tweets(A, G), tweets(F, G) )
%   | | | then return 0.12339352383967657;  // std dev = 1,616, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.16309818930040987;  // std dev = 0,098, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.16169370029823088;  // std dev = 0,135, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( follows(H, A), follows(A, I) )
%   | | then return 0.2374700763046842;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.045541686138684825;  // std dev = 1,370, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07634071860848646;  // std dev = 1,462, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */


Results
   AUC ROC   = 0.734714
   AUC PR    = 0.520224
   CLL	      = -0.561788
   Precision = 0.545455 at threshold = 0.5
   Recall    = 0.423077
   F1        = 0.476534


Total learning time: 15.803 seconds
Total inference time: 1.357 seconds
AUC ROC: 0.734714


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN-B), Time: 00:53:48
{'CLL': -0.561788, 'Precision': [0.545455, 0.5], 'Inference time': 1.357, 'Learning time': 15.803, 'AUC ROC': 0.734714, 'F1': 0.476534, 'AUC PR': 0.520224, 'Recall': 0.423077}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( tweets(A, E), follows(D, C) )
%   | | | then return 0.4233663264038601;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.6581489350995122;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( tweets(D, F), follows(D, C) )
%   | | | then return 0.1604745164948612;  // std dev = 3,012, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then if ( follows(G, H), follows(A, H) )
%   | | then if ( follows(I, A), follows(I, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.2867203636709408;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( follows(J, A) )
%   | | then if ( tweets(A, K) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.654617
   AUC PR    = 0.40202
   CLL	      = -0.686786
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.516 seconds
Total inference time: 0.799 seconds
AUC ROC: 0.654617


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN), Time: 00:53:53
{'CLL': -0.686786, 'Precision': [nan, 0.5], 'Inference time': 0.799, 'Learning time': 3.516, 'AUC ROC': 0.654617, 'F1': nan, 'AUC PR': 0.40202, 'Recall': 0.0}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,false;phenotype(A, E), complex(A, F).;false;true
0;false;interaction(A, A).;false;true
0;false,false,true;complex(A, J), location(A, K).;false;false
0;true,false,false;interaction(C, G), phenotype(G, H).;false;false
0;false,false;interaction(A, I), complex(I, J).;true;true
0;true;complex(C, D), complex(A, D).;false;true
0;false,false,false;enzyme(A, L), interaction(A, M).;false;false
1;;proteinclass(A, B) :- interaction(A, C), interaction(D, A).;true;true
1;true,false;phenotype(C, E), interaction(C, F).;true;false
1;true,false,true;recursion_proteinclass(F, B), interaction(F, D).;false;false
1;false;interaction(G, A), recursion_proteinclass(G, B).;false;true
1;false,false,true;location(I, J), phenotype(I, K).;false;false
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;true;recursion_proteinclass(C, B).;false;true
1;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
2;;proteinclass(A, B) :- location(A, C).;true;true
2;false;interaction(A, F), complex(F, G).;true;true
2;true,true;interaction(E, D), interaction(E, A).;false;false
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;false;false
2;false,false;interaction(A, I).;true;true
2;true;location(D, C), recursion_proteinclass(D, B).;true;false
2;false,false,false;interaction(K, A), interaction(L, K).;false;false
2;false,true;interaction(A, H), interaction(F, H).;false;false
3;;proteinclass(A, B) :- interaction(C, A), location(C, D).;true;true
3;true,false;location(A, D).;false;false
3;false;complex(A, G).;true;true
3;false,false,true;phenotype(K, I), recursion_proteinclass(K, B).;false;false
3;false,false;phenotype(A, I), location(A, J).;true;true
3;true;complex(C, E), interaction(F, C).;false;true
3;false,false,false;enzyme(A, L).;false;false
3;false,true;complex(H, G), recursion_proteinclass(H, B).;false;false
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;true,false;interaction(C, A).;false;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;false;true
4;false,false,true;enzyme(I, G), recursion_proteinclass(I, B).;false;false
4;true,false,false;recursion_proteinclass(D, B), complex(C, E).;false;false
4;false,false;enzyme(A, G), phenotype(A, H).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
4;false,false,false;complex(A, J).;false;false
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(E, A), interaction(A, E).;true;false
5;true,false,true;phenotype(A, F), interaction(C, G).;false;false
5;false;interaction(A, A).;false;true
5;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
5;false,false;interaction(A, H), complex(H, I).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;false;true
5;false,false,false;interaction(K, A), location(A, L).;false;false
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,false;interaction(J, A), phenotype(J, K).;false;false
6;false,false;interaction(A, H).;true;true
6;false;interaction(E, A), interaction(F, E).;true;true
6;false,false,true;interaction(H, H), enzyme(H, I).;false;false
6;false,true,false;interaction(G, F), recursion_proteinclass(G, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true;interaction(A, A).;false;true
7;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
7;false,false,false;interaction(A, K), interaction(K, L).;false;false
7;false,false;interaction(A, I), enzyme(I, J).;true;true
7;false;interaction(F, A).;true;true
7;false,false,true;recursion_proteinclass(I, B).;false;false
7;false,true,false;interaction(A, H), interaction(F, H).;false;false
7;true;interaction(E, C), recursion_proteinclass(E, B).;false;false
7;false,true;interaction(G, F), recursion_proteinclass(G, B).;false;true
8;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
8;false,false,false;interaction(A, N), recursion_proteinclass(N, B).;false;false
8;false,false;enzyme(A, K), location(A, L).;true;true
8;false;enzyme(A, F), interaction(A, G).;true;true
8;false,false,true;enzyme(M, K), recursion_proteinclass(M, B).;false;false
8;false,true,false;interaction(G, I), complex(A, J).;false;false
8;true;interaction(E, C), enzyme(E, D).;false;false
8;false,true;interaction(G, H), recursion_proteinclass(H, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;false,false,false;location(A, L).;false;false
9;false,false;interaction(A, H), phenotype(H, I).;true;true
9;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
9;false,false,true;enzyme(H, J), interaction(K, A).;false;false
9;false,true,false;complex(A, F), complex(D, G).;false;false
9;true;recursion_proteinclass(C, B).;false;false
9;false,true;phenotype(D, E), phenotype(A, E).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.19835512066652125;  // std dev = 4,666, 97,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | else if ( tweets(A, E) )
%   | | then return 0.44638422921715937;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( follows(F, C) )
%   | | | then return 0.42957750652808374;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.03996711691769419;  // std dev = 2,558, 44,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | | else return 0.09344305274657114;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( follows(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1914822684328457;  // std dev = 2,828, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.22772080217157548;  // std dev = 5,253, 116,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=47 */
%   | else if ( follows(E, C) )
%   | | then if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.0668928155251847;  // std dev = 2,936, 51,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return -0.005878966484357239;  // std dev = 0,928, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.14678622147544476;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.055683397657340504;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then return 0.38876104678710394;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | | then return 0.1399404618635399;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.3352063199608491;  // std dev = 1,575, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.1510928901428595;  // std dev = 6,698, 206,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=71 */
%   | else return 0.024619008951756564;  // std dev = 1,774, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(C, D), follows(C, E) )
%   | then return 0.11600432440531383;  // std dev = 6,409, 192,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=64 */
%   | else return 0.1354638188490504;  // std dev = 0,459, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   else if ( tweets(A, F) )
%   | then if ( tweets(G, F), recursion_accounttype(G, B) )
%   | | then return 0.09330389856913908;  // std dev = 1,691, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.10696702303722334;  // std dev = 6,215, 177,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=61 */
%   | else if ( follows(A, C) )
%   | | then return -0.23427625290628928;  // std dev = 0,102, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( recursion_accounttype(D, B), tweets(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06739761665565294;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.055735319122839695;  // std dev = 1,572, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.2833018594595917;  // std dev = 2,096, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.1223601255127591;  // std dev = 5,419, 126,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | else if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(F, C) )
%   | | | then return -0.28573119477353903;  // std dev = 0,049, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7617979648414239;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( follows(I, G), recursion_accounttype(I, B) )
%   | | | then return 0.0020510555732212695;  // std dev = 2,935, 51,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return -0.0770569858443905;  // std dev = 0,934, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.07189844735978297;  // std dev = 2,645, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return 0.059177002654244915;  // std dev = 5,343, 134,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=46 */
%   | else return -0.04239869249980849;  // std dev = 1,747, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(F, G), recursion_accounttype(G, B) )
%   | | | then return 0.10842629150981041;  // std dev = 3,003, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05667529492314334;  // std dev = 1,824, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.2146382031860284;  // std dev = 1,470, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.05613072222389796;  // std dev = 6,288, 187,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | else return 0.012723079621380464;  // std dev = 1,998, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   else if ( follows(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(F, A) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return 0.07559922664139375;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.24209822105684944;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then return 0.04123789335273118;  // std dev = 6,296, 190,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=64 */
%   | else return 0.0491813266718912;  // std dev = 1,949, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then return 0.01839633750038452;  // std dev = 1,680, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.07464043896693902;  // std dev = 4,886, 102,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=42 */
%   | else return -0.05821479315608713;  // std dev = 3,120, 61,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), tweets(D, F) )
%   | | then return -0.04300874339782755;  // std dev = 1,477, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else return -0.06508286302612284;  // std dev = 0,927, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.391895054495877;  // std dev = 0,827, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.014784271768374562;  // std dev = 1,679, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0.15117630337624488;  // std dev = 0,493, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */


Results
   AUC ROC   = 0.731211
   AUC PR    = 0.536764
   CLL	      = -0.586021
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.00641
   F1        = 0.012658


Total learning time: 2.136 seconds
Total inference time: 1.073 seconds
AUC ROC: 0.731211


Results scoring model
   AUC ROC   = 0.711876
   AUC PR    = 0.560358
   CLL	      = -0.590868
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total scoring time: 0.912 seconds
Parameter learned model CLL: -0.590868


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'tweets(A, E)', 'false': 'follows(A, A)', 'true': 'tweets(C, D), tweets(A, D)', 'true,false,false': 'follows(F, C)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'tweets(A, H)', 'false,false,false': 'follows(I, A)'}, {'true,false,true': [2.029, 7, 10], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [1.852, 6, 8], 'false,false,true,false': [1.749, 13, 4], 'true,true': [4.666, 64, 33], 'false,false,true,true': [2.558, 36, 8], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [2.828, 24, 12]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, D)', 'true,false': 'follows(E, C)', 'true,false,true': 'recursion_accounttype(E, B), follows(D, E)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'false,false': 'follows(A, G), follows(G, H)', 'true': 'recursion_accounttype(C, B)', 'false,false,false': 'follows(I, A), recursion_accounttype(I, B)'}, {'true,false,true,false': [0.928, 6, 1], 'false,false,false,true': [1.664, 9, 4], 'true,true': [5.253, 69, 47], 'true,false,true,true': [2.936, 40, 11], 'false,false,true': [0.497, 4, 5], 'true,false,false': [0.0, 2, 0], 'false,true': [1.333, 16, 2], 'false,false,false,false': [1.575, 5, 5]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'true': 'follows(C, D), follows(A, D)'}, {'true,true': [6.698, 135, 71], 'true,false': [1.774, 15, 4], 'false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'tweets(A, F)', 'true': 'tweets(C, D), follows(C, E)', 'false,true': 'tweets(G, F), recursion_accounttype(G, B)'}, {'true,true': [6.409, 128, 64], 'true,false': [0.459, 13, 7], 'false,true,true': [1.691, 10, 4], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(D, C)', 'true,false': 'follows(A, C)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'true,false,false': 'recursion_accounttype(D, B), tweets(C, E)', 'false,false': 'recursion_accounttype(G, B)', 'true': 'follows(C, D), recursion_accounttype(D, B)'}, {'true,false,true': [0.102, 6, 0], 'true,true': [6.215, 116, 61], 'true,false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true': [2.096, 8, 10], 'false,true': [1.572, 18, 3], 'true,false,false,false': [0.866, 3, 1]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'follows(A, E), follows(E, A)', 'true,false,true': 'follows(F, C)', 'false': 'follows(A, A)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'follows(I, G), recursion_accounttype(I, B)', 'false,false,false': 'follows(A, J)'}, {'true,false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.934, 9, 1], 'true,true': [5.419, 76, 50], 'true,false,true,true': [0.049, 2, 0], 'false,false,true,true': [2.935, 40, 11], 'false,false,false,true': [2.645, 24, 12], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false': 'follows(A, E), follows(E, F)', 'false,true,false': 'follows(F, G), recursion_accounttype(G, B)', 'false,false,false': 'follows(A, I)', 'true': 'follows(D, A), follows(A, D)', 'false,false': 'follows(H, A)', 'false,false,true': 'follows(H, H)', 'false,true': 'follows(A, A)'}, {'true,false': [1.747, 21, 4], 'true,true': [5.343, 88, 46], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,true': [3.003, 26, 15], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.824, 11, 5], 'false,false,false,true': [1.47, 4, 5], 'false,true,false,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(A, E)', 'false,false': 'follows(F, A)', 'true': 'follows(C, D), recursion_accounttype(D, B)', 'false,false,true': 'recursion_accounttype(F, B)'}, {'true,false': [1.998, 17, 7], 'true,true': [6.288, 123, 64], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [1.633, 8, 4], 'false,true': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(E, A)', 'true': 'follows(C, D)', 'false,true': 'follows(F, E), recursion_accounttype(F, B)'}, {'true,true': [6.296, 126, 64], 'true,false': [1.949, 13, 7], 'false,true,true': [1.68, 10, 4], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, C)', 'false': 'follows(A, D), recursion_accounttype(D, B)', 'true': 'recursion_accounttype(C, B)', 'false,false': 'follows(G, A)', 'false,false,true': 'follows(A, H)', 'false,true': 'tweets(A, E), tweets(D, F)'}, {'true,false': [3.12, 49, 12], 'true,true': [4.886, 60, 42], 'false,true,false': [0.927, 6, 1], 'false,false,true,false': [1.679, 10, 4], 'false,true,true': [1.477, 15, 3], 'false,false,true,true': [0.827, 1, 3], 'false,false,false': [0.493, 8, 10]}]]
[{'': [0.23968505859375022, 0.18620469762992825], 'true,false': [0.24221453287197228, 0.24489795918367338], 'false': [nan, 0.18620469762992978], 'false,false,true': [0.1487603305785126, 0.1799307958477507], 'true,false,false': [0.24489795918367338, nan], 'false,false': [0.1580220370868041, 0.22222222222222174], 'true': [0.22446593686895666, 0.24349635796045743], 'false,false,false': [nan, 0.22222222222222174]}, {'': [0.21826579630865914, 0.21735824292053166], 'false,false,false': [0.21301775147929, 0.24803520111113536], 'true,false,true': [0.16897071559294957, 0.12301559556743512], 'false': [0.09876543209876541, 0.24566044436748996], 'false,false': [0.24691358024691368, 0.23761274506969948], 'true': [0.23785603911212785, 0.15987296521628563], 'true,false': [0.1639864105053558, 0.0]}, {'': [0.21461810902638767, nan], 'true': [0.21779332952650493, 0.1655471346617149]}, {'': [0.21365449992733412, 0.20432001980421394], 'false': [0.20432001980421394, nan], 'true': [0.21394878267020032, 0.21048643743823078], 'false,true': [0.20432001980421394, nan]}, {'': [0.21427061122615376, 0.20456547531746472], 'true,false': [0.0017321976687535896, 0.1875], 'false': [0.11770920696245375, 0.24400367615000704], 'true,false,false': [nan, 0.1875], 'false,false': [0.24400367615000704, nan], 'true': [0.21824454149801614, 0.09788102825960632]}, {'': [0.2333857661783961, 0.1720594766714973], 'true,false': [0.0012034883665357765, 0.0], 'true,false,true': [0.0012034883665357765, nan], 'false': [nan, 0.17205947667149726], 'false,false,true': [0.16892983298045094, 0.08731727559718669], 'false,false': [0.15640845752408, 0.19426619617836022], 'true': [0.23303683507290313, 0.24465062340960841], 'false,false,false': [0.19426619617836022, nan]}, {'': [0.2000831795407016, 0.2219755382165458], 'false,false,false': [0.24011565908947485, nan], 'false,true,false': [0.2199345020016868, nan], 'false': [0.2199345020016868, 0.22530658056293631], 'true': [0.21300803651982894, 0.12211059187240353], 'false,false': [0.2079936529524857, 0.24011565908947485], 'false,false,true': [nan, 0.2079936529524857], 'false,true': [nan, 0.2199345020016868]}, {'': [0.20649166472791686, 0.21229495080446403], 'false': [nan, 0.21229495080446403], 'false,false': [0.21229495080446403, nan], 'false,false,true': [0.22222222222222232, 0.0], 'true': [0.21143730224135193, 0.16628700158617823]}, {'': [0.20687786066021557, 0.20148727841386546], 'false': [0.20148727841386546, nan], 'true': [0.20864648294529822, 0.19001886016502573], 'false,true': [0.20148727841386546, nan]}, {'': [0.21029821900065082, 0.19407783756588176], 'false': [0.12167872636796856, 0.23193667559341424], 'false,false,true': [0.1708103935889946, 0.20146552000254903], 'false,false': [0.21923321529695539, 0.24325730101169082], 'true': [0.23404590262536387, 0.15954387142152915], 'false,true': [0.12115834589897312, 0.12266601550865444]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
1;true,false;follows(E, C).;true;true
1;true;recursion_accounttype(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true,false;follows(A, C).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,false;follows(A, E), follows(E, A).;true;true
5;true;follows(D, C), recursion_accounttype(D, B).;true;true
7;;accounttype(A, B) :- follows(A, C).;true;true
7;false;recursion_accounttype(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.4065360318737059;  // std dev = 2,771, 31,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.7581489350995122;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( tweets(D, F), follows(G, C) )
%   | | | then return 0.15148226843284515;  // std dev = 3,943, 75,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.009775593202374476;  // std dev = 0,339, 53,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | else if ( follows(I, A) )
%   | | then return 0.1273797043302816;  // std dev = 0,444, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( recursion_accounttype(E, B) )
%   | | | then return 0.2266658853027125;  // std dev = 4,810, 103,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=42 */
%   | | | else return -0.03630938303509966;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.6148471760141112;  // std dev = 0,874, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( follows(F, C) )
%   | | then return 0.058727039926182556;  // std dev = 0,404, 58,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | else return -0.14066524951224635;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.02955413840113522;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else if ( follows(A, H) )
%   | | then if ( tweets(A, I), tweets(H, I) )
%   | | | then return 0.42500018371594334;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.3000001837159433;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.14638292465720795;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( tweets(A, E), follows(A, C) )
%   | | | then return 0.2908494343735873;  // std dev = 2,605, 28,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.5713759944506319;  // std dev = 1,303, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( tweets(C, F), tweets(D, G) )
%   | | | then return 0.08093622365943784;  // std dev = 3,647, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.43915601469442067;  // std dev = 1,326, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else return -0.15249238299586418;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.011293507221602979;  // std dev = 0,338, 53,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | else if ( follows(I, A) )
%   | | then return 0.10270136303201606;  // std dev = 0,444, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.28163689699526534;  // std dev = 1,482, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.30323902110466316;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, D), follows(E, F) )
%   | | | then return 0.20625552844687972;  // std dev = 4,031, 72,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=33 */
%   | | | else return -0.2340014785964301;  // std dev = 0,259, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.14986896352274248;  // std dev = 0,136, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( follows(G, A), follows(G, C) )
%   | | then if ( tweets(A, H), follows(A, C) )
%   | | | then return 0.6122589606705469;  // std dev = 0,893, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.1673949994965003;  // std dev = 1,462, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( follows(A, C), tweets(A, I) )
%   | | | then return -0.03164835997234362;  // std dev = 0,857, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4318194972476823;  // std dev = 0,746, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( follows(A, J), recursion_accounttype(J, B) )
%   | then return -0.009912522240622359;  // std dev = 0,338, 53,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | else return 0.14691255320667385;  // std dev = 0,471, 44,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, F), tweets(A, F) )
%   | | | then return 0.07868360312625507;  // std dev = 4,255, 94,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
%   | | | else return 0.25109279336023743;  // std dev = 2,221, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | else return 0.03561737442712456;  // std dev = 0,401, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | else return -0.06063893674394636;  // std dev = 0,309, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.007523980796420228;  // std dev = 0,314, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I), follows(I, J) )
%   | | | then return 0.13489507132842374;  // std dev = 1,213, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.296789982459922;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.32054789755129415;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1538812308846275;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E) )
%   | | then if ( tweets(F, E), follows(F, A) )
%   | | | then return 0.07929064782948028;  // std dev = 4,520, 109,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=40 */
%   | | | else return 0.28412308531335645;  // std dev = 0,676, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1577821086194998;  // std dev = 0,398, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else return 0.03200911446165252;  // std dev = 0,341, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.010276639258937986;  // std dev = 0,338, 53,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.12395255532460944;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.08236852787003421;  // std dev = 0,934, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.14386894048124974;  // std dev = 1,472, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.16049373608872067;  // std dev = 1,483, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( tweets(D, E), follows(D, A) )
%   | | then if ( tweets(A, F), follows(D, C) )
%   | | | then return 0.1503925827943187;  // std dev = 3,128, 45,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | else return 0.39570197182039124;  // std dev = 0,914, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( tweets(D, G), follows(H, C) )
%   | | | then return -0.014626583610270562;  // std dev = 3,211, 62,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0.43059967104844277;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.13322007951607528;  // std dev = 0,041, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( follows(A, I), recursion_accounttype(I, B) )
%   | then return -0.0066513176837481635;  // std dev = 0,341, 52,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
%   | else if ( follows(J, A) )
%   | | then return 0.049815742481744626;  // std dev = 0,440, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.10871395708221504;  // std dev = 1,472, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.1216250547307138;  // std dev = 1,483, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(D, E) )
%   | | then if ( follows(D, F), recursion_accounttype(F, B) )
%   | | | then return 0.04158625903822521;  // std dev = 4,580, 126,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | | | else return -0.048367930333158476;  // std dev = 1,437, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else return 0.32904956961294823;  // std dev = 0,768, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(G, A), follows(A, G) )
%   | | then if ( follows(A, H), follows(H, G) )
%   | | | then return 0.1142904042453877;  // std dev = 2,130, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.13154290157005466;  // std dev = 0,980, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.3406946286215127;  // std dev = 0,725, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08668210127766646;  // std dev = 2,089, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   else if ( recursion_accounttype(J, B) )
%   | then return 0.022893875615493515;  // std dev = 0,437, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( tweets(D, C), follows(E, D) )
%   | | then if ( recursion_accounttype(E, B), tweets(E, C) )
%   | | | then return 0.09055860954902052;  // std dev = 3,930, 74,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=32 */
%   | | | else return -0.2183789195315542;  // std dev = 0,463, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.1615527863660523;  // std dev = 0,377, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else return -0.001962114670848048;  // std dev = 0,380, 65,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then return -0.013771575259726911;  // std dev = 0,320, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.1549196798469382;  // std dev = 0,455, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.013543264007861591;  // std dev = 0,351, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.15336854393665925;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.028335015938044206;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, C), follows(E, F) )
%   | | | then return 0.07488778202026605;  // std dev = 4,255, 94,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=43 */
%   | | | else return -0.25199805596385566;  // std dev = 0,357, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11152609217733374;  // std dev = 0,080, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.0016570041424759916;  // std dev = 0,380, 65,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   else if ( follows(G, A), recursion_accounttype(G, B) )
%   | then return 0.06390389149547795;  // std dev = 0,361, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( follows(I, A), follows(I, H) )
%   | | | then return 0.1746891594917488;  // std dev = 1,139, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.025396416338739885;  // std dev = 0,953, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.0023975463021193924;  // std dev = 1,165, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.052581253080800215;  // std dev = 1,478, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */


Results
   AUC ROC   = 0.785893
   AUC PR    = 0.625547
   CLL	      = -0.533791
   Precision = 0.659091 at threshold = 0.5
   Recall    = 0.185897
   F1        = 0.29


Total learning time: 18.099 seconds
Total inference time: 1.392 seconds
AUC ROC: 0.785893


Results scoring model
   AUC ROC   = 0.828565
   AUC PR    = 0.75583
   CLL	      = -0.492714
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.346667
   F1        = 0.5


Total scoring time: 1.289 seconds
Refined model CLL: -0.492714


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.785893
   AUC PR    = 0.625547
   CLL	      = -0.533791
   Precision = 0.659091 at threshold = 0.5
   Recall    = 0.185897
   F1        = 0.29


Total learning time: 22.436 seconds
Total inference time: 1.392 seconds
AUC ROC: 0.785893
Total revision time: 22.436
Best scored revision CLL: -0.492714


Dataset: 15_yeast_twitter, Fold: 2, Type: Transfer (trRDN-B), Time: 00:54:18
{'CLL': -0.533791, 'Precision': [0.659091, 0.5], 'Inference time': 1.392, 'Learning time': 22.436, 'parameter_0.6': {'CLL': -0.586021, 'Precision': [0.5, 0.5], 'Inference time': 1.073, 'Learning time': 2.136, 'AUC ROC': 0.731211, 'F1': 0.012658, 'AUC PR': 0.536764, 'Recall': 0.00641}, 'AUC ROC': 0.785893, 'F1': 0.29, 'AUC PR': 0.625547, 'Recall': 0.185897}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.4065360318737059;  // std dev = 2,771, 31,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.7581489350995122;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( tweets(D, F), follows(G, C) )
%   | | | then return 0.15148226843284515;  // std dev = 3,943, 75,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.009775593202374476;  // std dev = 0,339, 53,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | else if ( follows(I, A) )
%   | | then return 0.1273797043302816;  // std dev = 0,444, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, D), follows(E, F) )
%   | | | then return 0.27800352079409346;  // std dev = 4,155, 72,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=33 */
%   | | | else return -0.17456697334739185;  // std dev = 0,106, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.12942961014024784;  // std dev = 0,034, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( follows(G, A), follows(G, C) )
%   | | then if ( tweets(A, H), follows(A, C) )
%   | | | then return 0.6944183043193262;  // std dev = 0,918, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.26044818441355383;  // std dev = 1,645, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( tweets(A, I), follows(A, C) )
%   | | | then return 0.04586356586624199;  // std dev = 0,887, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5588863157764139;  // std dev = 0,837, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( follows(A, J), recursion_accounttype(J, B) )
%   | then return -0.006049864896861789;  // std dev = 0,341, 52,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
%   | else return 0.2088173641687712;  // std dev = 0,481, 44,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(A, D), follows(D, A) )
%   | | then if ( tweets(A, E), follows(A, C) )
%   | | | then return 0.2956368756005702;  // std dev = 2,479, 27,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return 0.5691241037738295;  // std dev = 1,246, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( tweets(C, F), tweets(D, G) )
%   | | | then return 0.07770356303547152;  // std dev = 3,586, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.4164756273063561;  // std dev = 1,275, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else return -0.11378404432710498;  // std dev = 0,018, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.00532015464079683;  // std dev = 0,341, 52,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
%   | else if ( follows(I, A) )
%   | | then return 0.08134440348943535;  // std dev = 0,444, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.3200496201808065;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.30731790632334266;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( tweets(A, E), follows(A, C) )
%   | | | then return 0.21980966636785576;  // std dev = 2,510, 28,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.4434347624459963;  // std dev = 1,235, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.029005697943826108;  // std dev = 2,923, 52,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return 0.23064972685346097;  // std dev = 2,391, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else return -0.1028078288028258;  // std dev = 0,016, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.004681080678321034;  // std dev = 0,341, 52,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then return 0.06861632962047397;  // std dev = 0,444, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.2576786752425583;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.24568313122309307;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, D), follows(E, F) )
%   | | | then return 0.16142979343046102;  // std dev = 3,963, 71,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return -0.1960726197969207;  // std dev = 0,306, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.1016195420984511;  // std dev = 0,090, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.234932289153834;  // std dev = 0,408, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.006660712025472212;  // std dev = 0,339, 53,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.12148871778352802;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.08684461554980531;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.20115462926202107;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.19085797275155328;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, D), follows(E, F) )
%   | | | then return 0.12246460512075077;  // std dev = 3,973, 72,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=33 */
%   | | | else return -0.16797874240245755;  // std dev = 0,279, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.09278409057877414;  // std dev = 0,084, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.18487029727096144;  // std dev = 0,403, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.0058667472683236474;  // std dev = 0,339, 53,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.10049505142869103;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.0727071470608154;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.1539056555535858;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.14560618747245416;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then return 0.015322893083346813;  // std dev = 0,402, 76,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | else if ( follows(A, F), follows(C, F) )
%   | | | then return 0.5887441679975913;  // std dev = 0,284, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.02413210117014196;  // std dev = 1,657, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else return 0.14391484953182865;  // std dev = 0,401, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.0026306757173109063;  // std dev = 0,341, 52,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.08206484770745794;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.06142729663933923;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.11642454873247246;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10998118432060414;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( tweets(D, C), follows(E, D) )
%   | | then return 0.025730420001191818;  // std dev = 0,406, 97,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
%   | | else if ( follows(F, A), follows(F, D) )
%   | | | then return 0.22676147554617002;  // std dev = 1,287, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.025098104350708052;  // std dev = 1,071, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.0034917919700897296;  // std dev = 0,382, 65,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(G, A), follows(H, A) )
%   | | then return -0.0074352099761463425;  // std dev = 0,326, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( follows(I, A), recursion_accounttype(H, B) )
%   | | | then return 0.22237114174517858;  // std dev = 1,655, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.0067268438433654475;  // std dev = 0,938, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( follows(A, J), recursion_accounttype(J, B) )
%   | | then return 0.06306513971821119;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.027120186587245687;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, C), follows(E, F) )
%   | | | then return 0.07823956379862479;  // std dev = 4,191, 95,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=43 */
%   | | | else return -0.2474858066581735;  // std dev = 0,506, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09074569698110208;  // std dev = 0,094, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.002953828119370266;  // std dev = 0,382, 65,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   else if ( follows(G, A), recursion_accounttype(G, B) )
%   | then return 0.10362383999621486;  // std dev = 0,375, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.18260600441963057;  // std dev = 1,130, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.032948806006555975;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.010144365653018857;  // std dev = 1,148, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07872478556732711;  // std dev = 1,493, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( recursion_accounttype(C, B), follows(D, A) )
%   | | then if ( tweets(A, E), follows(A, D) )
%   | | | then return 0.07930608672899386;  // std dev = 2,412, 28,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.22279712586435713;  // std dev = 1,118, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( tweets(D, F), follows(D, A) )
%   | | | then return -0.09685816632875657;  // std dev = 2,319, 45,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | | else return 0.03913827634019113;  // std dev = 3,352, 74,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | else return -0.24747064126099136;  // std dev = 0,149, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( follows(A, G), follows(H, A) )
%   | then return 0.16287860564811407;  // std dev = 0,356, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return -0.026776363920686934;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.07251709280661485;  // std dev = 2,110, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.008282742320435897;  // std dev = 1,621, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */


Results
   AUC ROC   = 0.787496
   AUC PR    = 0.599721
   CLL	      = -0.526135
   Precision = 0.653061 at threshold = 0.5
   Recall    = 0.205128
   F1        = 0.312195


Total learning time: 20.632 seconds
Total inference time: 1.294 seconds
AUC ROC: 0.787496


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN-B), Time: 00:54:41
{'CLL': -0.526135, 'Precision': [0.653061, 0.5], 'Inference time': 1.294, 'Learning time': 20.632, 'AUC ROC': 0.787496, 'F1': 0.312195, 'AUC PR': 0.599721, 'Recall': 0.205128}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.4065360318737059;  // std dev = 2,771, 31,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.7581489350995122;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( tweets(D, F), follows(G, C) )
%   | | | then return 0.15544623239680913;  // std dev = 3,932, 74,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then if ( follows(A, I), follows(I, H) )
%   | | then if ( follows(J, A), follows(J, I) )
%   | | | then return -0.05489454316135737;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.30259337954395665;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( tweets(A, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.030739953789376676;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( follows(L, A) )
%   | | then if ( follows(A, M), follows(M, L) )
%   | | | then return 0.1914822684328457;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( tweets(A, N) )
%   | | | then return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */


Results
   AUC ROC   = 0.687099
   AUC PR    = 0.475041
   CLL	      = -0.692393
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.272 seconds
Total inference time: 0.828 seconds
AUC ROC: 0.687099


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN), Time: 00:54:46
{'CLL': -0.692393, 'Precision': [nan, 0.5], 'Inference time': 0.828, 'Learning time': 4.272, 'AUC ROC': 0.687099, 'F1': nan, 'AUC PR': 0.475041, 'Recall': 0.0}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,false;phenotype(A, E), complex(A, F).;false;true
0;false;interaction(A, A).;false;true
0;false,false,true;complex(A, J), location(A, K).;false;false
0;true,false,false;interaction(C, G), phenotype(G, H).;false;false
0;false,false;interaction(A, I), complex(I, J).;true;true
0;true;complex(C, D), complex(A, D).;false;true
0;false,false,false;enzyme(A, L), interaction(A, M).;false;false
1;;proteinclass(A, B) :- interaction(A, C), interaction(D, A).;true;true
1;true,false;phenotype(C, E), interaction(C, F).;true;false
1;true,false,true;recursion_proteinclass(F, B), interaction(F, D).;false;false
1;false;interaction(G, A), recursion_proteinclass(G, B).;false;true
1;false,false,true;location(I, J), phenotype(I, K).;false;false
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;true;recursion_proteinclass(C, B).;false;true
1;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
2;;proteinclass(A, B) :- location(A, C).;true;true
2;false;interaction(A, F), complex(F, G).;true;true
2;true,true;interaction(E, D), interaction(E, A).;false;false
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;false;false
2;false,false;interaction(A, I).;true;true
2;true;location(D, C), recursion_proteinclass(D, B).;true;false
2;false,false,false;interaction(K, A), interaction(L, K).;false;false
2;false,true;interaction(A, H), interaction(F, H).;false;false
3;;proteinclass(A, B) :- interaction(C, A), location(C, D).;true;true
3;true,false;location(A, D).;false;false
3;false;complex(A, G).;true;true
3;false,false,true;phenotype(K, I), recursion_proteinclass(K, B).;false;false
3;false,false;phenotype(A, I), location(A, J).;true;true
3;true;complex(C, E), interaction(F, C).;false;true
3;false,false,false;enzyme(A, L).;false;false
3;false,true;complex(H, G), recursion_proteinclass(H, B).;false;false
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;true,false;interaction(C, A).;false;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;false;true
4;false,false,true;enzyme(I, G), recursion_proteinclass(I, B).;false;false
4;true,false,false;recursion_proteinclass(D, B), complex(C, E).;false;false
4;false,false;enzyme(A, G), phenotype(A, H).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
4;false,false,false;complex(A, J).;false;false
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(E, A), interaction(A, E).;true;false
5;true,false,true;phenotype(A, F), interaction(C, G).;false;false
5;false;interaction(A, A).;false;true
5;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
5;false,false;interaction(A, H), complex(H, I).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;false;true
5;false,false,false;interaction(K, A), location(A, L).;false;false
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,false;interaction(J, A), phenotype(J, K).;false;false
6;false,false;interaction(A, H).;true;true
6;false;interaction(E, A), interaction(F, E).;true;true
6;false,false,true;interaction(H, H), enzyme(H, I).;false;false
6;false,true,false;interaction(G, F), recursion_proteinclass(G, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true;interaction(A, A).;false;true
7;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
7;false,false,false;interaction(A, K), interaction(K, L).;false;false
7;false,false;interaction(A, I), enzyme(I, J).;true;true
7;false;interaction(F, A).;true;true
7;false,false,true;recursion_proteinclass(I, B).;false;false
7;false,true,false;interaction(A, H), interaction(F, H).;false;false
7;true;interaction(E, C), recursion_proteinclass(E, B).;false;false
7;false,true;interaction(G, F), recursion_proteinclass(G, B).;false;true
8;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
8;false,false,false;interaction(A, N), recursion_proteinclass(N, B).;false;false
8;false,false;enzyme(A, K), location(A, L).;true;true
8;false;enzyme(A, F), interaction(A, G).;true;true
8;false,false,true;enzyme(M, K), recursion_proteinclass(M, B).;false;false
8;false,true,false;interaction(G, I), complex(A, J).;false;false
8;true;interaction(E, C), enzyme(E, D).;false;false
8;false,true;interaction(G, H), recursion_proteinclass(H, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;false,false,false;location(A, L).;false;false
9;false,false;interaction(A, H), phenotype(H, I).;true;true
9;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
9;false,false,true;enzyme(H, J), interaction(K, A).;false;false
9;false,true,false;complex(A, F), complex(D, G).;false;false
9;true;recursion_proteinclass(C, B).;false;false
9;false,true;phenotype(D, E), phenotype(A, E).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.22456114883997091;  // std dev = 5,515, 131,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=48 */
%   | else if ( tweets(A, E) )
%   | | then return 0.44638422921715937;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( follows(F, C) )
%   | | | then return 0.274815601766179;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.041482268432845706;  // std dev = 2,997, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return 0.09624417319475045;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( follows(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19857446701440598;  // std dev = 3,249, 47,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.21727110667125965;  // std dev = 6,065, 155,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=61 */
%   | else if ( follows(E, C) )
%   | | then if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.07838774982733551;  // std dev = 3,403, 66,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | | else return -0.0490758671236635;  // std dev = 0,951, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return -0.1469760806626708;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.024925328402362664;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then return 0.33221752874049437;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | | then return 0.21744646667361014;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.24765395061052403;  // std dev = 2,017, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.14988880523860917;  // std dev = 7,724, 272,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=93 */
%   | else return 0.04494466532824785;  // std dev = 2,282, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(C, D), follows(C, E) )
%   | then return 0.11613044516546835;  // std dev = 7,392, 253,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=84 */
%   | else return 0.1213940707819287;  // std dev = 0,459, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   else if ( tweets(A, F) )
%   | then if ( tweets(G, F), recursion_accounttype(G, B) )
%   | | then return 0.12484369551094565;  // std dev = 2,149, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.10951505370221341;  // std dev = 7,231, 236,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=82 */
%   | else if ( follows(A, C) )
%   | | then return -0.2266293855776083;  // std dev = 0,131, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( recursion_accounttype(D, B), tweets(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.023693472595162562;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.036329645271431954;  // std dev = 1,798, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.24362733752030646;  // std dev = 2,531, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.1271300932494807;  // std dev = 6,288, 167,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=67 */
%   | else if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(F, C) )
%   | | | then return -0.2811652844139487;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7555579357646727;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( follows(I, G), recursion_accounttype(I, B) )
%   | | | then return 0.004423360461096145;  // std dev = 3,418, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return -0.09200369492357138;  // std dev = 0,952, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.08880072883256437;  // std dev = 3,101, 46,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return 0.03517857838412819;  // std dev = 6,078, 180,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=57 */
%   | else return -0.0348339508808297;  // std dev = 1,959, 29,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(F, G), recursion_accounttype(G, B) )
%   | | | then return 0.17606845080010952;  // std dev = 3,553, 53,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   | | | else return -0.1418289239695635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07210492869141472;  // std dev = 2,246, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.18720049865287663;  // std dev = 1,841, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.05589872333893875;  // std dev = 7,251, 247,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=84 */
%   | else return 0.00442835967703898;  // std dev = 2,330, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   else if ( follows(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(F, A) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return 0.09559794181512062;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.23957115422885514;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then return 0.039168083066026586;  // std dev = 7,269, 253,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=84 */
%   | else return 0.05863297321103444;  // std dev = 2,251, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then return 0.03624612785875482;  // std dev = 2,114, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.05880227924648908;  // std dev = 5,629, 137,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=53 */
%   | else return -0.03867508799831122;  // std dev = 3,683, 82,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), tweets(D, F) )
%   | | then return -0.023197103684636174;  // std dev = 1,709, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else return -0.09523551385741157;  // std dev = 0,937, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.44139577685654097;  // std dev = 0,861, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.02868171029658502;  // std dev = 2,114, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return 0.11609937410462373;  // std dev = 0,496, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */


Results
   AUC ROC   = 0.737601
   AUC PR    = 0.542039
   CLL	      = -0.586994
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.00641
   F1        = 0.012658


Total learning time: 2.314 seconds
Total inference time: 1.13 seconds
AUC ROC: 0.737601


Results scoring model
   AUC ROC   = 0.689279
   AUC PR    = 0.522611
   CLL	      = -0.597505
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total scoring time: 0.88 seconds
Parameter learned model CLL: -0.597505


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'tweets(A, E)', 'false': 'follows(A, A)', 'true': 'tweets(C, D), tweets(A, D)', 'true,false,false': 'follows(F, C)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'tweets(A, H)', 'false,false,false': 'follows(I, A)'}, {'true,false,true': [2.029, 7, 10], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [2.415, 14, 10], 'false,false,true,false': [1.952, 16, 5], 'true,true': [5.515, 83, 48], 'false,false,true,true': [2.997, 49, 11], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [3.249, 31, 16]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, D)', 'true,false': 'follows(E, C)', 'true,false,true': 'recursion_accounttype(E, B), follows(D, E)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'false,false': 'follows(A, G), follows(G, H)', 'true': 'recursion_accounttype(C, B)', 'false,false,false': 'follows(I, A), recursion_accounttype(I, B)'}, {'true,false,true,false': [0.951, 9, 1], 'false,false,false,true': [2.068, 11, 7], 'true,true': [6.065, 94, 61], 'true,false,true,true': [3.403, 51, 15], 'false,false,true': [0.5, 6, 6], 'true,false,false': [0.0, 2, 0], 'false,true': [1.604, 18, 3], 'false,false,false,false': [2.017, 10, 7]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'true': 'follows(C, D), follows(A, D)'}, {'true,true': [7.724, 179, 93], 'true,false': [2.282, 22, 7], 'false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'tweets(A, F)', 'true': 'tweets(C, D), follows(C, E)', 'false,true': 'tweets(G, F), recursion_accounttype(G, B)'}, {'true,true': [7.392, 169, 84], 'true,false': [0.459, 18, 9], 'false,true,true': [2.149, 14, 7], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(D, C)', 'true,false': 'follows(A, C)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'true,false,false': 'recursion_accounttype(D, B), tweets(C, E)', 'false,false': 'recursion_accounttype(G, B)', 'true': 'follows(C, D), recursion_accounttype(D, B)'}, {'true,false,true': [0.131, 10, 0], 'true,true': [7.231, 154, 82], 'true,false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true': [2.531, 13, 13], 'false,true': [1.798, 20, 4], 'true,false,false,false': [0.894, 4, 1]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'follows(A, E), follows(E, A)', 'true,false,true': 'follows(F, C)', 'false': 'follows(A, A)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'follows(I, G), recursion_accounttype(I, B)', 'false,false,false': 'follows(A, J)'}, {'true,false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.952, 12, 1], 'true,true': [6.288, 100, 67], 'true,false,true,true': [0.049, 4, 0], 'false,false,true,true': [3.418, 53, 15], 'false,false,false,true': [3.101, 30, 16], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false': 'follows(A, E), follows(E, F)', 'false,true,false': 'follows(F, G), recursion_accounttype(G, B)', 'false,false,false': 'follows(A, I)', 'true': 'follows(D, A), follows(A, D)', 'false,false': 'follows(H, A)', 'false,false,true': 'follows(H, H)', 'false,true': 'follows(A, A)'}, {'true,false': [1.959, 24, 5], 'true,true': [6.078, 123, 57], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,true': [3.553, 30, 23], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.246, 15, 8], 'false,false,false,true': [1.841, 7, 7], 'false,true,false,false': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(A, E)', 'false,false': 'follows(F, A)', 'true': 'follows(C, D), recursion_accounttype(D, B)', 'false,false,true': 'recursion_accounttype(F, B)'}, {'true,false': [2.33, 23, 9], 'true,true': [7.251, 163, 84], 'false,false,true,false': [5.27e-09, 3, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [2.068, 11, 7], 'false,true': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(E, A)', 'true': 'follows(C, D)', 'false,true': 'follows(F, E), recursion_accounttype(F, B)'}, {'true,true': [7.269, 169, 84], 'true,false': [2.251, 16, 9], 'false,true,true': [2.114, 14, 7], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, C)', 'false': 'follows(A, D), recursion_accounttype(D, B)', 'true': 'recursion_accounttype(C, B)', 'false,false': 'follows(G, A)', 'false,false,true': 'follows(A, H)', 'false,true': 'tweets(A, E), tweets(D, F)'}, {'true,false': [3.683, 64, 18], 'true,true': [5.629, 84, 53], 'false,true,false': [0.937, 7, 1], 'false,false,true,false': [2.114, 14, 7], 'false,true,true': [1.709, 17, 4], 'false,false,true,true': [0.861, 1, 4], 'false,false,false': [0.496, 13, 13]}]]
[{'': [0.2390481341265548, 0.18749999999999947], 'true,false': [0.24221453287197228, 0.24305555555555558], 'false': [nan, 0.18750000000000122], 'false,false,true': [0.1497222222222217, 0.1814058956916098], 'true,false,false': [0.24305555555555558, nan], 'false,false': [0.15851242188690695, 0.22453598913535486], 'true': [0.23215430336227555, 0.2498512790005945], 'false,false,false': [nan, 0.22453598913535486]}, {'': [0.21816602709055916, 0.2231357224879697], 'false,false,false': [0.23765432098765416, 0.2392536804231801], 'true,false,true': [0.17543673388570935, 0.09043024519962269], 'false': [0.1224489795918367, 0.24345971490300722], 'false,false': [0.2500000000000002, 0.23865908951205606], 'true': [0.23728141078882703, 0.1629360154415455], 'true,false': [0.16610814510542662, 0.0]}, {'': [0.21648311328528722, nan], 'true': [0.21936393838128193, 0.179510767569714]}, {'': [0.2154590046310054, 0.21997009850646448], 'false': [0.21997009850646448, nan], 'true': [0.2159811055801209, 0.21054169123878086], 'false,true': [0.21997009850646448, nan]}, {'': [0.21599515185697865, 0.2123924437253092], 'true,false': [0.0017060054553201809, 0.16000000000000003], 'false': [0.1347374105588182, 0.24645357493942058], 'true,false,false': [nan, 0.16000000000000003], 'false,false': [0.24645357493942058, nan], 'true': [0.22156021047570795, 0.06839545548661019]}, {'': [0.23604265317328046, 0.17794765073541735], 'false,false,false': [0.20905203027343108, nan], 'true,false,true': [0.0006066311541202685, nan], 'false': [nan, 0.17794765073541752], 'false,false,true': [0.17180573623082365, 0.06970507930938295], 'false,false': [0.15667200611936233, 0.20905203027343108], 'true': [0.23677267764271528, 0.17245251056450103], 'true,false': [0.0006066311541202685, 0.0]}, {'': [0.19568486479874492, 0.23451355963863765], 'false,false,false': [0.24210686095472692, nan], 'false,true,false': [0.23821076282836495, 0.0], 'false': [0.23563625393748605, 0.23111072921446527], 'true': [0.20520123527994363, 0.13239613113945461], 'false,false': [0.21940505695379994, 0.24210686095472692], 'false,false,true': [nan, 0.21940505695379994], 'false,true': [nan, 0.23563625393748605]}, {'': [0.20819716323763302, 0.2174594167171245], 'false': [nan, 0.2174594167171245], 'false,false': [0.2174594167171245, nan], 'false,false,true': [0.23765432098765438, 9.25185853854297e-18], 'true': [0.21289110869257719, 0.1696204241269394]}, {'': [0.20833876390754708, 0.21290160647444972], 'false': [0.21290160647444972, nan], 'true': [0.20886783177446222, 0.20263978726366694], 'false,true': [0.21290160647444972, nan]}, {'': [0.20881634392332657, 0.20445407919473532], 'false': [0.131984794785252, 0.23625206929140338], 'false,false,true': [0.14823975024463165, 0.2127665674521745], 'false,false': [0.22681459754144562, 0.24565714321988652], 'true': [0.23124675457537494, 0.16539707401267678], 'false,true': [0.1390002472291551, 0.10981129476329439]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
1;true,false;follows(E, C).;true;true
1;true;recursion_accounttype(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true,false;follows(A, C).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,false;follows(A, E), follows(E, A).;true;true
5;true;follows(D, C), recursion_accounttype(D, B).;true;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false;follows(A, E), follows(E, F).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;true
7;;accounttype(A, B) :- follows(A, C).;true;true
7;false;recursion_accounttype(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(A, D), follows(D, A) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.4634120929942483;  // std dev = 3,013, 38,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.6763307532813304;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.11842290770225206;  // std dev = 3,749, 73,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.3303711573217345;  // std dev = 2,995, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.02420400607695828;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.3479448534668582;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.24423200456790436;  // std dev = 5,324, 123,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=52 */
%   | | | else return -0.001491942608746919;  // std dev = 1,796, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else return 0.6463342987259905;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.04849684315837747;  // std dev = 0,396, 78,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.003926953042770414;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.4293621405909805;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | | then return 0.201889854281546;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( follows(A, C), tweets(A, E) )
%   | | | then return 0.34521485059211077;  // std dev = 2,882, 35,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.5104710917598531;  // std dev = 1,545, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.0745976384643594;  // std dev = 3,728, 73,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.24594706632492525;  // std dev = 2,926, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | else return -0.1484560352662323;  // std dev = 0,045, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.025509004756436693;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.2637219496409367;  // std dev = 3,455, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return -0.11927117238712212;  // std dev = 0,025, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.2779678860432876;  // std dev = 2,997, 38,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.4200977506419356;  // std dev = 1,297, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( tweets(D, F), follows(G, C) )
%   | | | then return 0.09619627123247171;  // std dev = 4,633, 104,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | | else return 0.49565204809346236;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.12928427405752851;  // std dev = 0,045, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.02240855737514655;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.21465152697381668;  // std dev = 3,450, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return -0.10730844285510506;  // std dev = 0,023, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), recursion_accounttype(E, B) )
%   | | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | | then return 0.1345775116932928;  // std dev = 5,814, 156,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=67 */
%   | | | else return -0.11942027279473022;  // std dev = 0,023, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.024358977158225284;  // std dev = 0,387, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | else return -0.08603831171473221;  // std dev = 0,260, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.018068648509783958;  // std dev = 0,346, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( tweets(A, J) )
%   | | | then return 0.077261121437747;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.29948334365996926;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.3430374156655636;  // std dev = 0,794, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16911173699796453;  // std dev = 1,280, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, F) )
%   | | | then return 0.07349611142068353;  // std dev = 4,998, 132,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=50 */
%   | | | else return 0.4803130368790273;  // std dev = 0,926, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0.25518027047020525;  // std dev = 1,525, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.07782355898032892;  // std dev = 2,186, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else return -0.06291558843714877;  // std dev = 0,296, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( follows(A, I), recursion_accounttype(I, B) )
%   | then return -0.021252396382331146;  // std dev = 0,323, 68,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | else if ( follows(A, J) )
%   | | then if ( follows(K, J), recursion_accounttype(K, B) )
%   | | | then return 0.15055659476816535;  // std dev = 3,401, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return -0.11091677880741563;  // std dev = 0,024, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09476028210426067;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then return 0.08209361163685533;  // std dev = 0,455, 127,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=54 */
%   | | else return -0.11113742004099485;  // std dev = 0,044, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.01873027834149304;  // std dev = 0,323, 68,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(G, H), recursion_accounttype(H, B) )
%   | | then if ( follows(I, A), recursion_accounttype(I, B) )
%   | | | then return 0.20161415859185328;  // std dev = 1,517, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.06790000343527745;  // std dev = 3,089, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | else return -0.2972001043865378;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( follows(J, A) )
%   | | then if ( recursion_accounttype(J, B) )
%   | | | then return 0.06067459848165545;  // std dev = 2,186, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.08693790865799374;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.16843479833440153;  // std dev = 0,385, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then return 0.04430282714681191;  // std dev = 0,425, 173,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=59 */
%   | | else return -0.05739840595593415;  // std dev = 0,246, 37,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else if ( follows(A, F), follows(F, A) )
%   | | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | | then return 0.09519753677124435;  // std dev = 2,813, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return -0.2376908513863547;  // std dev = 0,251, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( follows(H, A) )
%   | | | then return 0.3042164120684867;  // std dev = 0,844, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.09514229986368186;  // std dev = 2,238, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( recursion_accounttype(I, B) )
%   | then if ( follows(J, A), recursion_accounttype(J, B) )
%   | | then return 0.046466998778076016;  // std dev = 0,487, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return -0.08028008323077705;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, D), follows(E, F) )
%   | | | then return 0.12661564945061957;  // std dev = 4,543, 94,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=48 */
%   | | | else return -0.3208972579594395;  // std dev = 0,434, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.12826387767105416;  // std dev = 0,110, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( follows(A, C), tweets(A, G) )
%   | | then if ( follows(H, A), follows(H, C) )
%   | | | then return 0.4957945937144685;  // std dev = 0,892, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.08449343362352181;  // std dev = 0,809, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | | then return 8.592579219485281E-4;  // std dev = 1,975, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.28898958102759065;  // std dev = 0,768, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( follows(A, J), recursion_accounttype(J, B) )
%   | then return -0.018170715104029716;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | else return 0.044565550604781776;  // std dev = 0,440, 60,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( recursion_accounttype(C, B), follows(D, A) )
%   | | then if ( follows(A, D), tweets(A, E) )
%   | | | then return 0.0965506909317111;  // std dev = 2,777, 35,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.21576828436109124;  // std dev = 1,502, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return -0.012667512209523668;  // std dev = 0,393, 161,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=39 */
%   | else return -0.17374089277161578;  // std dev = 0,077, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(A, F), follows(G, A) )
%   | then return 0.12237315672232564;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.06252686156087381;  // std dev = 2,718, 42,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return -0.13525089886546834;  // std dev = 0,023, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | | then return 0.022977413616755246;  // std dev = 2,018, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.07768231086711132;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.773843
   AUC PR    = 0.626114
   CLL	      = -0.536373
   Precision = 0.7 at threshold = 0.5
   Recall    = 0.314103
   F1        = 0.433628


Total learning time: 19.464 seconds
Total inference time: 1.338 seconds
AUC ROC: 0.773843


Results scoring model
   AUC ROC   = 0.830448
   AUC PR    = 0.716005
   CLL	      = -0.49622
   Precision = 0.71875 at threshold = 0.5
   Recall    = 0.46
   F1        = 0.560976


Total scoring time: 1.38 seconds
Refined model CLL: -0.49622


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.773843
   AUC PR    = 0.626114
   CLL	      = -0.536373
   Precision = 0.7 at threshold = 0.5
   Recall    = 0.314103
   F1        = 0.433628


Total learning time: 24.037999999999997 seconds
Total inference time: 1.338 seconds
AUC ROC: 0.773843
Total revision time: 24.037999999999997
Best scored revision CLL: -0.49622


Dataset: 15_yeast_twitter, Fold: 2, Type: Transfer (trRDN-B), Time: 00:55:13
{'CLL': -0.536373, 'Precision': [0.7, 0.5], 'Inference time': 1.338, 'Learning time': 24.037999999999997, 'parameter_0.8': {'CLL': -0.586994, 'Precision': [0.5, 0.5], 'Inference time': 1.13, 'Learning time': 2.314, 'AUC ROC': 0.737601, 'F1': 0.012658, 'AUC PR': 0.542039, 'Recall': 0.00641}, 'AUC ROC': 0.773843, 'F1': 0.433628, 'AUC PR': 0.626114, 'Recall': 0.314103}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(A, D), follows(D, A) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.4634120929942483;  // std dev = 3,013, 38,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.6763307532813304;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.11842290770225206;  // std dev = 3,749, 73,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.34386322081379805;  // std dev = 2,957, 35,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.020638943688366475;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=8 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.3479448534668582;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(A, D), follows(D, A) )
%   | | then if ( follows(A, C), tweets(A, E) )
%   | | | then return 0.38873458617858747;  // std dev = 2,883, 35,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.556351364323354;  // std dev = 1,544, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.10338722381455792;  // std dev = 3,749, 73,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.2966553797069114;  // std dev = 2,957, 35,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.019954237373963814;  // std dev = 0,324, 67,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=8 */
%   | else if ( follows(H, A) )
%   | | then return 0.14518055211893455;  // std dev = 0,461, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.3103145215433614;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3332576786605927;  // std dev = 1,787, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.32042765339921325;  // std dev = 2,998, 38,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.46661946607547017;  // std dev = 1,296, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( tweets(D, F), follows(G, C) )
%   | | | then return 0.12195358058498622;  // std dev = 4,702, 105,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.5281658538479638;  // std dev = 0,887, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.01933409437685521;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.2635834821601047;  // std dev = 3,475, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return -0.1575863136263434;  // std dev = 0,034, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14225684468126176;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), recursion_accounttype(D, B) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.28206012827434807;  // std dev = 3,192, 46,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=30 */
%   | | | else return 0.08622040895080132;  // std dev = 3,897, 76,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.014926766832681614;  // std dev = 0,325, 72,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=9 */
%   else if ( follows(A, E) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then if ( follows(G, A), follows(A, G) )
%   | | | then return 0.14425604476683;  // std dev = 2,928, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.36477244654567004;  // std dev = 2,434, 26,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else return -0.13779501609049422;  // std dev = 0,030, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then return 0.12726160437338507;  // std dev = 0,487, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return -0.12576574485777817;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, C) )
%   | | then if ( follows(A, E), follows(E, C) )
%   | | | then return 0.18912454596626402;  // std dev = 3,115, 43,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | | | else return 0.5876676833860769;  // std dev = 0,225, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tweets(A, F), tweets(D, F) )
%   | | | then return 0.13064084175633864;  // std dev = 4,330, 85,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | | else return -0.011916973120224193;  // std dev = 2,087, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.015334008976101439;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | else if ( follows(H, A) )
%   | | then return 0.06569673862954456;  // std dev = 0,451, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.12559959049474603;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.20954268568426176;  // std dev = 1,565, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), recursion_accounttype(D, B) )
%   | | then if ( tweets(D, E), tweets(A, E) )
%   | | | then return 0.13552397605828911;  // std dev = 4,524, 92,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=45 */
%   | | | else return -0.02910183748483442;  // std dev = 2,082, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.012768332149387602;  // std dev = 0,324, 72,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=9 */
%   else if ( follows(A, F) )
%   | then if ( follows(G, F), recursion_accounttype(G, B) )
%   | | then if ( follows(H, A), follows(A, H) )
%   | | | then return 0.10177329673901718;  // std dev = 2,933, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.24888035922485477;  // std dev = 2,433, 26,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else return -0.14066996747209398;  // std dev = 0,053, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | then return 0.07448825646487195;  // std dev = 0,487, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return -0.11930833767572835;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(E, C), follows(A, E) )
%   | | then if ( recursion_accounttype(E, B), tweets(E, D) )
%   | | | then return 0.12503903048743495;  // std dev = 3,055, 43,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   | | | else return -0.081831448667132;  // std dev = 2,719, 58,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else if ( follows(C, F), follows(A, F) )
%   | | | then return 0.5654274916842896;  // std dev = 0,318, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.017745565590284836;  // std dev = 2,271, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( follows(G, A), follows(G, C) )
%   | | then if ( tweets(A, H), follows(A, C) )
%   | | | then return 0.5341592599724765;  // std dev = 0,900, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.11673035068206748;  // std dev = 1,702, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( follows(I, C), recursion_accounttype(I, B) )
%   | | | then return 0.09961032474433207;  // std dev = 1,612, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.20656081855701935;  // std dev = 0,157, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.021478062576449016;  // std dev = 0,388, 128,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=32 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then return -1.6659337149721196E-4;  // std dev = 0,377, 151,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=42 */
%   | else if ( follows(E, A), follows(E, C) )
%   | | then return 0.1596486800632401;  // std dev = 0,433, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | else return -0.04646112381310928;  // std dev = 0,321, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then if ( tweets(A, G), tweets(F, G) )
%   | | then if ( follows(A, H), follows(F, H) )
%   | | | then return 0.17928210299020264;  // std dev = 1,226, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.02870501518488815;  // std dev = 2,122, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0.4016191368217519;  // std dev = 0,798, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.09484412461959639;  // std dev = 3,409, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return -0.12690597110483565;  // std dev = 0,049, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10940563792250052;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( tweets(C, E), follows(D, C) )
%   | | then return 0.021101435302616163;  // std dev = 0,402, 165,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=55 */
%   | | else return 0.3524303412894573;  // std dev = 1,160, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.0467914516533598;  // std dev = 0,245, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then if ( follows(A, G), follows(F, G) )
%   | | then if ( follows(G, A), tweets(A, H) )
%   | | | then return 2.7151320688951445E-4;  // std dev = 1,220, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.47577568757110883;  // std dev = 0,231, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.022250506767817403;  // std dev = 0,487, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.07253014626067955;  // std dev = 3,409, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return -0.11352987082294724;  // std dev = 0,044, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09919222300286697;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( tweets(D, E), follows(F, C) )
%   | | then if ( follows(F, A), follows(D, F) )
%   | | | then return 0.1136374118339006;  // std dev = 4,682, 101,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=54 */
%   | | | else return -0.11173965523741695;  // std dev = 2,323, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else return 0.35569374594992115;  // std dev = 0,852, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.07400242116309161;  // std dev = 0,033, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then return -0.11911550315186109;  // std dev = 0,232, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | else return 0.09712071850310752;  // std dev = 0,453, 39,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( recursion_accounttype(I, B), follows(A, J) )
%   | | | then return 0.25878778559545695;  // std dev = 1,068, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.05665157863041284;  // std dev = 1,750, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else return 0.06358817867788467;  // std dev = 0,357, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */


Results
   AUC ROC   = 0.779319
   AUC PR    = 0.607543
   CLL	      = -0.53826
   Precision = 0.673469 at threshold = 0.5
   Recall    = 0.211538
   F1        = 0.321951


Total learning time: 31.36 seconds
Total inference time: 1.418 seconds
AUC ROC: 0.779319


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN-B), Time: 00:55:46
{'CLL': -0.53826, 'Precision': [0.673469, 0.5], 'Inference time': 1.418, 'Learning time': 31.36, 'AUC ROC': 0.779319, 'F1': 0.321951, 'AUC PR': 0.607543, 'Recall': 0.211538}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(A, D), follows(D, A) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.4634120929942483;  // std dev = 3,013, 38,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.7581489350995122;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.11842290770225206;  // std dev = 3,749, 73,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.3303711573217345;  // std dev = 2,995, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then if ( tweets(G, H), tweets(A, H) )
%   | | then if ( follows(I, A), follows(G, J) )
%   | | | then return -0.1033895264389493;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | | else return 0.03461952333480631;  // std dev = 1,572, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( follows(K, A), follows(K, G) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.06492798797741085;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( follows(A, L) )
%   | | then if ( follows(M, L), recursion_accounttype(M, B) )
%   | | | then return 0.3479448534668582;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.722428
   AUC PR    = 0.534667
   CLL	      = -0.691883
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.375 seconds
Total inference time: 0.86 seconds
AUC ROC: 0.722428


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN), Time: 00:55:52
{'CLL': -0.691883, 'Precision': [nan, 0.5], 'Inference time': 0.86, 'Learning time': 4.375, 'AUC ROC': 0.722428, 'F1': nan, 'AUC PR': 0.534667, 'Recall': 0.0}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,false;phenotype(A, E), complex(A, F).;false;true
0;false;interaction(A, A).;false;true
0;false,false,true;complex(A, J), location(A, K).;false;false
0;true,false,false;interaction(C, G), phenotype(G, H).;false;false
0;false,false;interaction(A, I), complex(I, J).;true;true
0;true;complex(C, D), complex(A, D).;false;true
0;false,false,false;enzyme(A, L), interaction(A, M).;false;false
1;;proteinclass(A, B) :- interaction(A, C), interaction(D, A).;true;true
1;true,false;phenotype(C, E), interaction(C, F).;true;false
1;true,false,true;recursion_proteinclass(F, B), interaction(F, D).;false;false
1;false;interaction(G, A), recursion_proteinclass(G, B).;false;true
1;false,false,true;location(I, J), phenotype(I, K).;false;false
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;true;recursion_proteinclass(C, B).;false;true
1;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
2;;proteinclass(A, B) :- location(A, C).;true;true
2;false;interaction(A, F), complex(F, G).;true;true
2;true,true;interaction(E, D), interaction(E, A).;false;false
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;false;false
2;false,false;interaction(A, I).;true;true
2;true;location(D, C), recursion_proteinclass(D, B).;true;false
2;false,false,false;interaction(K, A), interaction(L, K).;false;false
2;false,true;interaction(A, H), interaction(F, H).;false;false
3;;proteinclass(A, B) :- interaction(C, A), location(C, D).;true;true
3;true,false;location(A, D).;false;false
3;false;complex(A, G).;true;true
3;false,false,true;phenotype(K, I), recursion_proteinclass(K, B).;false;false
3;false,false;phenotype(A, I), location(A, J).;true;true
3;true;complex(C, E), interaction(F, C).;false;true
3;false,false,false;enzyme(A, L).;false;false
3;false,true;complex(H, G), recursion_proteinclass(H, B).;false;false
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;true,false;interaction(C, A).;false;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;false;true
4;false,false,true;enzyme(I, G), recursion_proteinclass(I, B).;false;false
4;true,false,false;recursion_proteinclass(D, B), complex(C, E).;false;false
4;false,false;enzyme(A, G), phenotype(A, H).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
4;false,false,false;complex(A, J).;false;false
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(E, A), interaction(A, E).;true;false
5;true,false,true;phenotype(A, F), interaction(C, G).;false;false
5;false;interaction(A, A).;false;true
5;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
5;false,false;interaction(A, H), complex(H, I).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;false;true
5;false,false,false;interaction(K, A), location(A, L).;false;false
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,false;interaction(J, A), phenotype(J, K).;false;false
6;false,false;interaction(A, H).;true;true
6;false;interaction(E, A), interaction(F, E).;true;true
6;false,false,true;interaction(H, H), enzyme(H, I).;false;false
6;false,true,false;interaction(G, F), recursion_proteinclass(G, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true;interaction(A, A).;false;true
7;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
7;false,false,false;interaction(A, K), interaction(K, L).;false;false
7;false,false;interaction(A, I), enzyme(I, J).;true;true
7;false;interaction(F, A).;true;true
7;false,false,true;recursion_proteinclass(I, B).;false;false
7;false,true,false;interaction(A, H), interaction(F, H).;false;false
7;true;interaction(E, C), recursion_proteinclass(E, B).;false;false
7;false,true;interaction(G, F), recursion_proteinclass(G, B).;false;true
8;;proteinclass(A, B) :- interaction(C, A), enzyme(C, D).;true;true
8;false,false,false;interaction(A, N), recursion_proteinclass(N, B).;false;false
8;false,false;enzyme(A, K), location(A, L).;true;true
8;false;enzyme(A, F), interaction(A, G).;true;true
8;false,false,true;enzyme(M, K), recursion_proteinclass(M, B).;false;false
8;false,true,false;interaction(G, I), complex(A, J).;false;false
8;true;interaction(E, C), enzyme(E, D).;false;false
8;false,true;interaction(G, H), recursion_proteinclass(H, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;false,false,false;location(A, L).;false;false
9;false,false;interaction(A, H), phenotype(H, I).;true;true
9;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
9;false,false,true;enzyme(H, J), interaction(K, A).;false;false
9;false,true,false;complex(A, F), complex(D, G).;false;false
9;true;recursion_proteinclass(C, B).;false;false
9;false,true;phenotype(D, E), phenotype(A, E).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.21762605928252007;  // std dev = 5,935, 153,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=55 */
%   | else if ( tweets(A, E) )
%   | | then return 0.4581489350995123;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else if ( follows(F, C) )
%   | | | then return 0.3126943896449669;  // std dev = 2,860, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.07892815587873316;  // std dev = 3,640, 77,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | | | else return 0.051697322196286546;  // std dev = 2,200, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( follows(I, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.19148226843284524;  // std dev = 3,742, 63,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.22309432867223442;  // std dev = 6,639, 185,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=74 */
%   | else if ( follows(E, C) )
%   | | then if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.09371423870070485;  // std dev = 4,077, 90,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=22 */
%   | | | else return -0.07718692263798115;  // std dev = 0,961, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else return -0.15173315487674752;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.018646360620303403;  // std dev = 1,846, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then return 0.33320549123154836;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | | then return 0.21049284412198738;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.2264743634782924;  // std dev = 2,333, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.1517375707946636;  // std dev = 8,685, 343,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=118 */
%   | else return 0.032890955558205676;  // std dev = 2,465, 35,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(C, D), follows(C, E) )
%   | then return 0.11655635890879945;  // std dev = 8,294, 318,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=106 */
%   | else return 0.12381293443491243;  // std dev = 0,458, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   else if ( tweets(A, F) )
%   | then if ( tweets(G, F), recursion_accounttype(G, B) )
%   | | then return 0.128090870176696;  // std dev = 2,301, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.11114248259549776;  // std dev = 8,088, 294,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=103 */
%   | else if ( follows(A, C) )
%   | | then return -0.21720148049218277;  // std dev = 0,162, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( recursion_accounttype(D, B), tweets(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.03401328424843034;  // std dev = 0,925, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.03724705589891885;  // std dev = 2,017, 30,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.22001918227720485;  // std dev = 2,967, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.12348770796162555;  // std dev = 6,876, 200,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=80 */
%   | else if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(F, C) )
%   | | | then return -0.08786156756008486;  // std dev = 0,889, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.755512609755592;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( follows(I, G), recursion_accounttype(I, B) )
%   | | | then return 0.015170346379653725;  // std dev = 4,096, 93,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=22 */
%   | | | else return -0.09989144803083883;  // std dev = 0,962, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.07590450498129869;  // std dev = 3,609, 64,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return 0.034405991047434366;  // std dev = 6,792, 223,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=71 */
%   | else return -0.053419591937659994;  // std dev = 2,194, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(F, G), recursion_accounttype(G, B) )
%   | | | then return 0.19237253958514963;  // std dev = 4,052, 69,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=31 */
%   | | | else return -0.13388551578363825;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07350658682950671;  // std dev = 2,392, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.152121166180906;  // std dev = 2,185, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.057117281486806344;  // std dev = 8,174, 312,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=107 */
%   | else return -0.0047502878962255735;  // std dev = 2,631, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   else if ( follows(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(F, A) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return 0.09246924584605545;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.24346119902923893;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then return 0.038988938223296604;  // std dev = 8,200, 321,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=107 */
%   | else return 0.045834901112981406;  // std dev = 2,554, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then return 0.0388025960963693;  // std dev = 2,269, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( recursion_accounttype(C, B) )
%   | then return 0.0557932883269663;  // std dev = 6,189, 165,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=64 */
%   | else return -0.015641240394245075;  // std dev = 4,402, 108,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), tweets(D, F) )
%   | | then return -0.034386521123994034;  // std dev = 1,958, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else return -0.11584435767457184;  // std dev = 0,952, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.3320054016792085;  // std dev = 1,031, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.03072565450530726;  // std dev = 2,269, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.10751390822489613;  // std dev = 0,493, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */


Results
   AUC ROC   = 0.739429
   AUC PR    = 0.545335
   CLL	      = -0.587824
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.00641
   F1        = 0.012658


Total learning time: 2.33 seconds
Total inference time: 1.156 seconds
AUC ROC: 0.739429


Results scoring model
   AUC ROC   = 0.685988
   AUC PR    = 0.520713
   CLL	      = -0.601449
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total scoring time: 0.965 seconds
Parameter learned model CLL: -0.601449


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'tweets(A, E)', 'false': 'follows(A, A)', 'true': 'tweets(C, D), tweets(A, D)', 'true,false,false': 'follows(F, C)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'tweets(A, H)', 'false,false,false': 'follows(I, A)'}, {'true,false,true': [2.191, 8, 12], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [2.86, 18, 15], 'false,false,true,false': [2.2, 25, 6], 'true,true': [5.935, 98, 55], 'false,false,true,true': [3.64, 60, 17], 'false,false,false,true': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [3.742, 42, 21]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, D)', 'true,false': 'follows(E, C)', 'true,false,true': 'recursion_accounttype(E, B), follows(D, E)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'false,false': 'follows(A, G), follows(G, H)', 'true': 'recursion_accounttype(C, B)', 'false,false,false': 'follows(I, A), recursion_accounttype(I, B)'}, {'true,false,true,false': [0.961, 13, 1], 'false,false,false,true': [2.225, 13, 8], 'true,true': [6.639, 111, 74], 'true,false,true,true': [4.077, 68, 22], 'false,false,true': [0.5, 8, 8], 'true,false,false': [0.0, 2, 0], 'false,true': [1.846, 23, 4], 'false,false,false,false': [2.333, 14, 9]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'true': 'follows(C, D), follows(A, D)'}, {'true,true': [8.685, 225, 118], 'true,false': [2.465, 27, 8], 'false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'tweets(A, F)', 'true': 'tweets(C, D), follows(C, E)', 'false,true': 'tweets(G, F), recursion_accounttype(G, B)'}, {'true,true': [8.294, 212, 106], 'true,false': [0.458, 24, 12], 'false,true,true': [2.301, 16, 8], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(D, C)', 'true,false': 'follows(A, C)', 'false': 'follows(A, F), recursion_accounttype(F, B)', 'true,false,false': 'recursion_accounttype(D, B), tweets(C, E)', 'false,false': 'recursion_accounttype(G, B)', 'true': 'follows(C, D), recursion_accounttype(D, B)'}, {'true,false,true': [0.162, 11, 0], 'true,true': [8.088, 191, 103], 'true,false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true': [2.967, 19, 17], 'false,true': [2.017, 25, 5], 'true,false,false,false': [0.925, 6, 1]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true,false': 'follows(A, E), follows(E, A)', 'true,false,true': 'follows(F, C)', 'false': 'follows(A, A)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false,false': 'follows(G, A), tweets(G, H)', 'false,false,true': 'follows(I, G), recursion_accounttype(I, B)', 'false,false,false': 'follows(A, J)'}, {'true,false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.962, 14, 1], 'true,true': [6.876, 120, 80], 'true,false,true,true': [0.889, 4, 1], 'false,false,true,true': [4.096, 71, 22], 'false,false,false,true': [3.609, 43, 21], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false': 'follows(A, E), follows(E, F)', 'false,true,false': 'follows(F, G), recursion_accounttype(G, B)', 'false,false,false': 'follows(A, I)', 'true': 'follows(D, A), follows(A, D)', 'false,false': 'follows(H, A)', 'false,false,true': 'follows(H, H)', 'false,true': 'follows(A, A)'}, {'true,false': [2.194, 33, 6], 'true,true': [6.792, 152, 71], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,true': [4.052, 38, 31], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.392, 17, 9], 'false,false,false,true': [2.185, 11, 9], 'false,true,false,false': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(A, E)', 'false,false': 'follows(F, A)', 'true': 'follows(C, D), recursion_accounttype(D, B)', 'false,false,true': 'recursion_accounttype(F, B)'}, {'true,false': [2.631, 31, 11], 'true,true': [8.174, 205, 107], 'false,false,true,false': [7.45e-09, 3, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [2.225, 13, 8], 'false,true': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C)', 'false': 'follows(E, A)', 'true': 'follows(C, D)', 'false,true': 'follows(F, E), recursion_accounttype(F, B)'}, {'true,true': [8.2, 214, 107], 'true,false': [2.554, 22, 11], 'false,true,true': [2.269, 16, 8], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), follows(A, C)', 'false': 'follows(A, D), recursion_accounttype(D, B)', 'true': 'recursion_accounttype(C, B)', 'false,false': 'follows(G, A)', 'false,false,true': 'follows(A, H)', 'false,true': 'tweets(A, E), tweets(D, F)'}, {'true,false': [4.402, 81, 27], 'true,true': [6.189, 101, 64], 'false,true,false': [0.952, 10, 1], 'false,false,true,false': [2.269, 16, 8], 'false,true,true': [1.958, 23, 5], 'false,false,true,true': [1.031, 2, 4], 'false,false,false': [0.493, 19, 17]}]]
[{'': [0.23960788010180098, 0.19037317468902176], 'true,false': [0.2399999999999996, 0.24793388429752017], 'false': [nan, 0.19037317468902226], 'false,false,true': [0.1720357564513403, 0.15608740894901163], 'true,false,false': [0.24793388429752017, nan], 'false,false': [0.1676097393689996, 0.2204589843750001], 'true': [0.2302533213721221, 0.24991100035599947], 'false,false,false': [0.0, 0.22222222222222235]}, {'': [0.21899619764499376, 0.22180266176627023], 'false,false,false': [0.23582766439909306, 0.23667353034538954], 'true,false,true': [0.18466640301597215, 0.0659250986324267], 'false': [0.12620027434842232, 0.24253538784099582], 'false,false': [0.2500000000000001, 0.23633354191241132], 'true': [0.23827985370345656, 0.16975356069591188], 'true,false': [0.1720844634422542, 0.0]}, {'': [0.21680035632869227, nan], 'true': [0.2199066996009079, 0.17354150004422328]}, {'': [0.2156955067727078, 0.2206412060876607], 'false': [0.2206412060876607, nan], 'true': [0.21632967471910539, 0.2100463870639926], 'false,true': [0.2206412060876607, nan]}, {'': [0.21653995012978483, 0.21143723534507194], 'true,false': [0.002374732001515985, 0.12212976182874406], 'false': [0.1356715258151752, 0.24449081875394313], 'true,false,false': [nan, 0.12212976182874406], 'false,false': [0.24449081875394313, nan], 'true': [0.22249891247506023, 0.05692131605072828]}, {'': [0.23637379003584014, 0.1810564423414987], 'true,false': [0.1581800073677157, 0.0], 'true,false,true': [0.1581800073677157, nan], 'false': [nan, 0.1810564423414986], 'false,false,true': [0.18042860055848362, 0.06175693423097875], 'false,false': [0.165529818632294, 0.20356227074900712], 'true': [0.2364008916212685, 0.23060556210683184], 'false,false,false': [0.20356227074900712, nan]}, {'': [0.19543115904737413, 0.2350571909175855], 'false,false,false': [0.23874538109521065, nan], 'false,true,false': [0.23793162552175293, 0.0], 'false': [0.23603151209385415, 0.22971005753290696], 'true': [0.2068853514694649, 0.1233715090389538], 'false,false': [0.2200727425142196, 0.23874538109521065], 'false,false,true': [nan, 0.2200727425142196], 'false,true': [nan, 0.23603151209385415]}, {'': [0.20867932817839316, 0.21869209457668726], 'false': [nan, 0.21869209457668726], 'false,false': [0.21869209457668726, nan], 'false,false,true': [0.23582766439909278, 1.850371707708594e-17], 'true': [0.21413632619591086, 0.16476815405442558]}, {'': [0.2083580000952856, 0.214595095989202], 'false': [0.214595095989202, nan], 'true': [0.20944813953567543, 0.19771141821697913], 'false,true': [0.214595095989202, nan]}, {'': [0.21251558842729487, 0.19819992471874573], 'false': [0.1228492697251921, 0.23352781374801967], 'false,false,true': [0.17711803664809148, 0.21447455578177388], 'false,false': [0.2215263697241846, 0.24340478206259514], 'true': [0.23217446687292342, 0.1793970253718171], 'false,true': [0.1368816056245146, 0.08236673458348007]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false;follows(G, A), tweets(G, H).;true;true
0;false,false;follows(I, A).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
1;true,false;follows(E, C).;true;true
1;true;recursion_accounttype(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true,false;follows(A, C).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,false;follows(A, E), follows(E, A).;true;true
5;true;follows(D, C), recursion_accounttype(D, B).;true;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false;follows(A, E), follows(E, F).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;true
7;;accounttype(A, B) :- follows(A, C).;true;true
7;false;recursion_accounttype(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( follows(E, A), follows(D, A) )
%   | | | then return 0.5248156017661781;  // std dev = 3,559, 57,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   | | | else return 0.13183314562582785;  // std dev = 4,346, 95,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | | else return -0.08629550934493226;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else if ( tweets(A, F) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.2391013160518933;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( follows(H, A), tweets(H, I) )
%   | then return 0.07111189806247485;  // std dev = 0,409, 108,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=23 */
%   | else if ( follows(J, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.19148226843284524;  // std dev = 0,471, 63,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( recursion_accounttype(C, B) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | | then return 0.22219596073281658;  // std dev = 6,251, 172,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=69 */
%   | | | else return -0.15153124166476073;  // std dev = 0,069, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.5234431124510008;  // std dev = 0,444, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.06648981293338785;  // std dev = 0,412, 106,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=23 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.018646360620303403;  // std dev = 0,355, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.44034834837440606;  // std dev = 2,584, 28,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return -0.1667945087684515;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | | then return 0.2074346514099043;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.15072985895745264;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), recursion_accounttype(D, B) )
%   | | then if ( follows(D, A), follows(D, C) )
%   | | | then return 0.4140756208893436;  // std dev = 3,480, 55,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   | | | else return 0.09823716248053103;  // std dev = 4,372, 93,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | else return -0.1525726251790222;  // std dev = 0,095, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.028369260070554413;  // std dev = 0,340, 97,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
%   else if ( follows(A, E) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then if ( follows(G, A), follows(A, G) )
%   | | | then return 0.2503508096686192;  // std dev = 3,333, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.3723918619845425;  // std dev = 2,793, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | else return -0.14885313624780558;  // std dev = 0,022, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then return 0.17564775908399566;  // std dev = 0,486, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return -0.1324327615037275;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), recursion_accounttype(D, B) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.323544924309284;  // std dev = 3,554, 57,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   | | | else return 0.0794731597156802;  // std dev = 4,309, 91,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | | else return -0.13394145047463257;  // std dev = 0,085, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.024550037995509415;  // std dev = 0,340, 97,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
%   else if ( follows(A, E) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then if ( follows(E, F), tweets(E, G) )
%   | | | then return 0.2236371957829572;  // std dev = 3,899, 64,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=30 */
%   | | | else return 0.33874496391707676;  // std dev = 1,898, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else return -0.13096756195172954;  // std dev = 0,019, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then return 0.14550731772537298;  // std dev = 0,486, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return -0.11794346819454454;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.11862907338915123;  // std dev = 5,744, 159,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=64 */
%   | | | else return -0.03762686995927827;  // std dev = 2,493, 60,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=7 */
%   | | else if ( follows(A, F), follows(F, G) )
%   | | | then return 0.20602233960318198;  // std dev = 3,330, 49,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | | | else return 0.08727879179771973;  // std dev = 2,364, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return -0.1065370796338984;  // std dev = 0,237, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return 0.008614820817432011;  // std dev = 0,370, 30,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( tweets(A, K) )
%   | | | then return 0.09380235179316303;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.2392568972477084;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.1719720871671301;  // std dev = 0,408, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E) )
%   | | then if ( tweets(F, E), follows(F, A) )
%   | | | then return 0.07892694181644046;  // std dev = 5,766, 164,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=63 */
%   | | | else return 0.31736021579350815;  // std dev = 1,033, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.14058844243740345;  // std dev = 0,451, 31,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | else if ( follows(A, G), follows(G, A) )
%   | | then return -0.05495503560609001;  // std dev = 0,604, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.8033171207289798;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.01982282868505785;  // std dev = 0,337, 92,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.1576165068054861;  // std dev = 3,943, 66,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=32 */
%   | | | else return -0.1336346683538268;  // std dev = 0,030, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11479052169590576;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then return 0.08821330963450638;  // std dev = 0,462, 153,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=65 */
%   | | else return -0.13403956215451804;  // std dev = 0,102, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.017309978348107487;  // std dev = 0,337, 92,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(G, H), recursion_accounttype(H, B) )
%   | | then if ( follows(I, A), tweets(I, J) )
%   | | | then return 0.11871852862850693;  // std dev = 3,370, 52,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return 0.05218840954266744;  // std dev = 2,010, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return -0.26459459615241354;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( follows(K, A) )
%   | | then if ( recursion_accounttype(K, B) )
%   | | | then return 0.07839775164653982;  // std dev = 2,337, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.10363190339273583;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.12211046310820209;  // std dev = 0,388, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(D, E), tweets(A, E) )
%   | | then return -0.0021731312135417217;  // std dev = 0,393, 183,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=49 */
%   | | else return 0.09586990680918249;  // std dev = 0,436, 79,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | else if ( follows(F, A), recursion_accounttype(F, B) )
%   | | then if ( tweets(A, G) )
%   | | | then return 0.06600841550082337;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.4183778628635884;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.08845904583602371;  // std dev = 3,265, 48,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   | | | else return 0.03305181193422775;  // std dev = 2,283, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   else if ( recursion_accounttype(I, B) )
%   | then if ( follows(J, A), recursion_accounttype(J, B) )
%   | | then return 0.06829081933826717;  // std dev = 0,486, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return -0.09439305944121001;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( follows(A, C) )
%   | | | then return 0.1399821326364287;  // std dev = 3,363, 50,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=32 */
%   | | | else return 0.39352805082747055;  // std dev = 1,274, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return -0.05440960257124363;  // std dev = 3,852, 87,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
%   | | | else return 0.1479898582262947;  // std dev = 3,093, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return -0.12051101224682048;  // std dev = 0,099, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return -0.019426698322982237;  // std dev = 0,336, 92,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.08483706667663753;  // std dev = 3,923, 66,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=32 */
%   | | | else return -0.13915327559016746;  // std dev = 0,038, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.0866271512698537;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, D), follows(E, F) )
%   | | | then return 0.12323815275962688;  // std dev = 4,794, 105,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=55 */
%   | | | else return -0.31249198957205443;  // std dev = 0,541, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.13315072426019423;  // std dev = 0,113, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( tweets(A, G), follows(A, C) )
%   | | then if ( follows(H, A), follows(H, C) )
%   | | | then return 0.4253517750874099;  // std dev = 1,232, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.04017424833063449;  // std dev = 1,019, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( follows(A, I), follows(C, I) )
%   | | | then return 0.023305170009600824;  // std dev = 2,385, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.3297287600460352;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( follows(A, J), recursion_accounttype(J, B) )
%   | then return -0.016970013703737755;  // std dev = 0,336, 92,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | else return 0.033529078886777475;  // std dev = 0,444, 80,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */


Results
   AUC ROC   = 0.755445
   AUC PR    = 0.573182
   CLL	      = -0.546185
   Precision = 0.642857 at threshold = 0.5
   Recall    = 0.288462
   F1        = 0.39823


Total learning time: 20.107 seconds
Total inference time: 1.26 seconds
AUC ROC: 0.755445


Results scoring model
   AUC ROC   = 0.818389
   AUC PR    = 0.690748
   CLL	      = -0.505819
   Precision = 0.733333 at threshold = 0.5
   Recall    = 0.436508
   F1        = 0.547264


Total scoring time: 1.294 seconds
Refined model CLL: -0.505819


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.755445
   AUC PR    = 0.573182
   CLL	      = -0.546185
   Precision = 0.642857 at threshold = 0.5
   Recall    = 0.288462
   F1        = 0.39823


Total learning time: 24.696 seconds
Total inference time: 1.26 seconds
AUC ROC: 0.755445
Total revision time: 24.696
Best scored revision CLL: -0.505819


Dataset: 15_yeast_twitter, Fold: 2, Type: Transfer (trRDN-B), Time: 00:56:19
{'CLL': -0.546185, 'Precision': [0.642857, 0.5], 'parameter_1.0': {'CLL': -0.587824, 'Precision': [0.5, 0.5], 'Inference time': 1.156, 'Learning time': 2.33, 'AUC ROC': 0.739429, 'F1': 0.012658, 'AUC PR': 0.545335, 'Recall': 0.00641}, 'Inference time': 1.26, 'Learning time': 24.696, 'AUC ROC': 0.755445, 'F1': 0.39823, 'AUC PR': 0.573182, 'Recall': 0.288462}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(A, D), follows(D, A) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.4803711573217336;  // std dev = 3,252, 45,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | | | else return 0.6581489350995123;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.09952824544433964;  // std dev = 3,991, 87,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
%   | | | else return 0.3581489350995123;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.011416282291792016;  // std dev = 0,337, 92,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.34299741994799593;  // std dev = 4,060, 66,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( follows(A, C), tweets(A, E) )
%   | | | then return 0.4059460955810839;  // std dev = 3,136, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | | else return 0.5461639838550821;  // std dev = 1,771, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.08697564907438804;  // std dev = 3,991, 87,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
%   | | | else return 0.3087411357856348;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return -0.010032259705423964;  // std dev = 0,337, 92,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.2959222839173279;  // std dev = 4,060, 66,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=32 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( tweets(C, E), tweets(A, E) )
%   | | | then return 0.33204429874693464;  // std dev = 3,242, 45,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | | | else return 0.45095511519533626;  // std dev = 1,562, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else if ( tweets(D, F), follows(G, C) )
%   | | | then return 0.11660277413210803;  // std dev = 5,053, 124,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   | | | else return 0.5719091368197882;  // std dev = 0,914, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( follows(A, H), recursion_accounttype(H, B) )
%   | then return -0.008825367568025816;  // std dev = 0,337, 92,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | else if ( follows(I, A) )
%   | | then return 0.11964095489842631;  // std dev = 0,464, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.2551323233254948;  // std dev = 2,102, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.2692215039621108;  // std dev = 1,923, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), recursion_accounttype(D, B) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.28668959413988704;  // std dev = 3,532, 57,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   | | | else return 0.07525229322246826;  // std dev = 4,154, 91,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.008347901175836461;  // std dev = 0,336, 97,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
%   else if ( follows(A, E) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then if ( tweets(F, G), follows(F, A) )
%   | | | then return 0.45617100606067695;  // std dev = 1,570, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.20693553413570615;  // std dev = 4,118, 69,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=33 */
%   | | else return -0.13690788979028934;  // std dev = 0,025, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then return 0.11524405839554167;  // std dev = 0,486, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return -0.1248093092354005;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), recursion_accounttype(D, B) )
%   | | then if ( tweets(D, E), tweets(A, E) )
%   | | | then return 0.1734356106434901;  // std dev = 4,811, 105,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=52 */
%   | | | else return -0.0017001017008993545;  // std dev = 2,544, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.007336530657557593;  // std dev = 0,336, 97,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
%   else if ( follows(A, F) )
%   | then if ( follows(G, F), recursion_accounttype(G, B) )
%   | | then if ( follows(H, A), follows(A, H) )
%   | | | then return 0.13048769676490696;  // std dev = 3,379, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.2840139358108611;  // std dev = 2,813, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | else return -0.12152579920003198;  // std dev = 0,022, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | then return 0.09216138113673769;  // std dev = 0,486, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return -0.11180211754379087;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then return 0.01749475603804218;  // std dev = 0,385, 183,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=49 */
%   | else return 0.11481203364436322;  // std dev = 0,427, 79,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   else if ( follows(E, A), recursion_accounttype(E, B) )
%   | then if ( tweets(A, F) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.07871905938603292;  // std dev = 2,607, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.34854537687169007;  // std dev = 0,833, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.6291766626839532;  // std dev = 0,106, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.11236004185629586;  // std dev = 1,536, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.1569531522793441;  // std dev = 2,471, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.10122966097474528;  // std dev = 1,999, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.16504133623051828;  // std dev = 1,811, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, D), follows(E, F) )
%   | | | then return 0.16433899900730517;  // std dev = 4,765, 105,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=55 */
%   | | | else return -0.2773610593355822;  // std dev = 0,604, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.10963952485416029;  // std dev = 0,089, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( tweets(A, G), follows(A, C) )
%   | | then if ( follows(H, A), follows(H, C) )
%   | | | then return 0.4593121208089054;  // std dev = 1,167, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.061431877175540626;  // std dev = 1,049, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | | then return 0.0605958991480323;  // std dev = 2,379, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.34472044706650795;  // std dev = 0,681, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(A, J), recursion_accounttype(J, B) )
%   | then return -0.01229800397217261;  // std dev = 0,336, 92,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | else return 0.06516356957585487;  // std dev = 0,451, 80,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, D), follows(E, F) )
%   | | | then return 0.12789387609788708;  // std dev = 4,755, 105,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=55 */
%   | | | else return -0.22798717013523218;  // std dev = 0,545, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.10018255125218094;  // std dev = 0,085, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( tweets(A, G), follows(A, C) )
%   | | then if ( follows(H, A), follows(H, C) )
%   | | | then return 0.36258418656445274;  // std dev = 1,162, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.04962243197626462;  // std dev = 1,046, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | | then return 0.04860637292240316;  // std dev = 2,376, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.26359686969647317;  // std dev = 0,669, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(A, J), recursion_accounttype(J, B) )
%   | then return -0.010800223277490709;  // std dev = 0,336, 92,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | else return 0.05132595753196488;  // std dev = 0,450, 80,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(C, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(E, D), follows(E, F) )
%   | | | then return 0.09874087394681018;  // std dev = 4,749, 105,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=55 */
%   | | | else return -0.19214097983468237;  // std dev = 0,490, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.0921648578694066;  // std dev = 0,081, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( follows(A, G), follows(C, G) )
%   | | then if ( follows(G, H), follows(A, H) )
%   | | | then return 0.12355668937384359;  // std dev = 2,539, 38,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | | else return -0.12089413475288241;  // std dev = 0,964, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.3272417822762221;  // std dev = 0,957, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( follows(I, A) )
%   | then return -0.0075706068296213;  // std dev = 0,382, 109,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=23 */
%   | else if ( follows(A, J), recursion_accounttype(J, B) )
%   | | then return 0.006765960757387624;  // std dev = 0,355, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else return 0.08306062744630277;  // std dev = 0,446, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return -0.004360713102590551;  // std dev = 0,357, 183,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=49 */
%   | else if ( tweets(C, E) )
%   | | then if ( follows(F, A), follows(F, C) )
%   | | | then return 0.05975053374672809;  // std dev = 2,983, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | | else return -0.04367061123224401;  // std dev = 1,669, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else return 0.37210784887103643;  // std dev = 0,796, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(A, G) )
%   | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | then if ( follows(A, I), follows(I, J) )
%   | | | then return 0.04897312110613026;  // std dev = 3,884, 67,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=31 */
%   | | | else return 0.22621933086807294;  // std dev = 1,636, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return -0.14200796007547464;  // std dev = 0,073, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( follows(K, A), recursion_accounttype(K, B) )
%   | | then return -0.00321174696216029;  // std dev = 0,467, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return -0.1008598220171572;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.798457
   AUC PR    = 0.616296
   CLL	      = -0.52392
   Precision = 0.716981 at threshold = 0.5
   Recall    = 0.24359
   F1        = 0.363636


Total learning time: 26.692 seconds
Total inference time: 1.275 seconds
AUC ROC: 0.798457


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN-B), Time: 00:56:48
{'CLL': -0.52392, 'Precision': [0.716981, 0.5], 'Inference time': 1.275, 'Learning time': 26.692, 'AUC ROC': 0.798457, 'F1': 0.363636, 'AUC PR': 0.616296, 'Recall': 0.24359}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(A, D), follows(D, A) )
%   | | then if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.4803711573217336;  // std dev = 3,252, 45,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | | | else return 0.6581489350995123;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.09952824544433964;  // std dev = 3,991, 87,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
%   | | | else return 0.3581489350995123;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then if ( tweets(A, H), tweets(G, H) )
%   | | then if ( tweets(I, H), follows(I, A) )
%   | | | then return -0.07042249347191633;  // std dev = 1,669, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | | | else return 0.034619523334806335;  // std dev = 1,572, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.021851064900487778;  // std dev = 1,625, 25,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | else if ( follows(A, K) )
%   | | then if ( follows(L, K), recursion_accounttype(L, B) )
%   | | | then return 0.34299741994799593;  // std dev = 4,060, 66,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.734693
   AUC PR    = 0.549998
   CLL	      = -0.691453
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.81 seconds
Total inference time: 0.807 seconds
AUC ROC: 0.734693


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN), Time: 00:56:54
{'CLL': -0.691453, 'Precision': [nan, 0.5], 'Inference time': 0.807, 'Learning time': 4.81, 'AUC ROC': 0.734693, 'F1': nan, 'AUC PR': 0.549998, 'Recall': 0.0}


