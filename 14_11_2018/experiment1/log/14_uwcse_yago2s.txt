Starting experiment #1 for 14_uwcse_yago2s

Start learning from source dataset

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), professor(F) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7487739350995116;  // std dev = 2,497, 64,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=57 */
%   else return -0.14185106490048768;  // std dev = 7,60e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.7410102677843572;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.27188083471158503;  // std dev = 1,494, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( publication(G, B), publication(H, A) )
%   | | | then return 0.5613845918366658;  // std dev = 1,202, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.6444047531447759;  // std dev = 2,327, 63,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=57 */
%   else return -0.12544463852839155;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then if ( publication(E, F), professor(F) )
%   | | | then return 0.19579718748905242;  // std dev = 1,611, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.6277410494243948;  // std dev = 0,083, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.5915551281376619;  // std dev = 0,032, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.48473207472544366;  // std dev = 2,459, 60,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=53 */
%   else return -0.11231637819360632;  // std dev = 4,47e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(D, F), professor(F) )
%   | | | then return 0.11111268801589111;  // std dev = 1,328, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.5105557265655549;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.4539474395171057;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.37502200221556525;  // std dev = 2,591, 67,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=59 */
%   else return -0.10159632948783623;  // std dev = 4,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.4031271666572673;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08100117022428306;  // std dev = 1,312, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.2687138356885459;  // std dev = 1,869, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | | else return 0.3074673092683142;  // std dev = 1,791, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.09269127618926104;  // std dev = 2,11e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(E, F), professor(F) )
%   | | | then return 0.046326555085240625;  // std dev = 1,274, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.36602039807052456;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.30342910138478385;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2174845508958399;  // std dev = 2,588, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.0851847513883968;  // std dev = 2,79e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.26611713816581256;  // std dev = 0,077, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), publication(D, A) )
%   | | then return 0.20975771563253545;  // std dev = 5,96e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.11897292976119464;  // std dev = 2,270, 41,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   | | | else return 0.19022856273952404;  // std dev = 1,795, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.07877675473109164;  // std dev = 4,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), publication(E, F) )
%   | | | then return -0.13131759016268038;  // std dev = 1,194, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.17844130659904148;  // std dev = 0,851, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.13549139099635965;  // std dev = 2,015, 41,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | | | else return 0.1631221296372998;  // std dev = 1,361, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.19550188158144957;  // std dev = 0,062, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.07245926424004585;  // std dev = 2,273, 41,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   | | | else return 0.12824297996085252;  // std dev = 1,753, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.06842697784420271;  // std dev = 2,24e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.13400703000801106;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(D, F), professor(F) )
%   | | | then return -0.03381260597406682;  // std dev = 1,262, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.21666270020862766;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.18825722154726;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09596277258647745;  // std dev = 2,555, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202625;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */


Predicates from source: ['advisedby(person,person).', 'publication(title,person).', 'tempadvisedby(person,person).', 'professor(person).', 'student(person).', 'projectmember(project,person).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 22.74970531463623
   Generating paths time   = 2.9744298458099365
   Generating mappings time   = 0.9270775318145752
   Possible mappings   = 10976
   Finding best mapping   = 2.953094482421875
   Total time   = 29.604313611984253


Best mapping found: ['tempadvisedby(A,B) -> influences(A,B)', 'projectmember(A,B) -> livesin(B,A)', 'publication(A,B) -> created(B,A)', 'advisedby(A,B) -> haschild(A,B)'] 

Transferred target predicate: haschild 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;haschild(A, B) :- created(B, C), created(A, C).;false;false
1;;haschild(A, B) :- created(B, C), created(A, C).;false;false
2;;haschild(A, B) :- created(A, C), created(B, C).;false;false
3;;haschild(A, B) :- created(B, C), created(A, C).;false;false
4;;haschild(A, B) :- created(B, C), created(A, C).;false;false
5;;haschild(A, B) :- created(B, C), created(A, C).;false;false
6;;haschild(A, B) :- livesin(B, C).;false;false
7;;haschild(A, B) :- created(A, C), created(B, C).;false;false
8;;haschild(A, B) :- created(A, C), created(B, C).;false;false
9;;haschild(A, B) :- created(B, C), created(A, C).;false;false


WILL Produced-Tree #1
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.3578487549914423;  // std dev = 49,985, 9.994,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.994 */
WILL Produced-Tree #2
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.3084873829067843;  // std dev = 49,985, 9.994,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.994 */
WILL Produced-Tree #3
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.2562142378002943;  // std dev = 49,985, 9.994,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.994 */
WILL Produced-Tree #4
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.20599326185015338;  // std dev = 49,985, 9.994,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.994 */
WILL Produced-Tree #5
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.16152900627060215;  // std dev = 49,985, 9.994,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.994 */
WILL Produced-Tree #6
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.12448926479896977;  // std dev = 49,985, 9.994,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.994 */
WILL Produced-Tree #7
% FOR haschild(A, B):
%   if ( livesin(B, C) )
%   then return 0.0878669588329552;  // std dev = 10,123, 410,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=202 */
%   else return 0.09525571522596396;  // std dev = 48,950, 9.590,000 (wgt'ed) examples reached here.  /* #neg=4.792 #pos=4.798 */
WILL Produced-Tree #8
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.19440427172534447;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.07181476818550256;  // std dev = 49,985, 9.994,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.994 */
WILL Produced-Tree #9
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.16575083570179827;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.054150673001847824;  // std dev = 49,985, 9.994,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.994 */
WILL Produced-Tree #10
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.14408134819490348;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.04073729043540086;  // std dev = 49,985, 9.994,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.994 */


Results
   AUC ROC   = 0.5038
   AUC PR    = 0.505963
   CLL	      = -0.694306
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.0024
   F1        = 0.004789


Total learning time: 256.009 seconds
Total inference time: 98.274 seconds
AUC ROC: 0.5038


Structure after Parameter Learning
[['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.985, 5000, 4994], 'true': [0.0, 0, 6]}], ['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.985, 5000, 4994], 'true': [2.11e-08, 0, 6]}], ['haschild(A, B)', {'': 'created(A, C), created(B, C)'}, {'false': [49.985, 5000, 4994], 'true': [0.0, 0, 6]}], ['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.985, 5000, 4994], 'true': [2.11e-08, 0, 6]}], ['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.985, 5000, 4994], 'true': [0.0, 0, 6]}], ['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.985, 5000, 4994], 'true': [7.45e-09, 0, 6]}], ['haschild(A, B)', {'': 'livesin(B, C)'}, {'false': [48.95, 4792, 4798], 'true': [10.123, 208, 202]}], ['haschild(A, B)', {'': 'created(A, C), created(B, C)'}, {'false': [49.985, 5000, 4994], 'true': [0.0, 0, 6]}], ['haschild(A, B)', {'': 'created(A, C), created(B, C)'}, {'false': [49.985, 5000, 4994], 'true': [0.0, 0, 6]}], ['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.985, 5000, 4994], 'true': [3.73e-09, 0, 6]}]]
[{'': [-1.4802973661668753e-16, 0.24999990989198906]}, {'': [7.401486830834377e-17, 0.24999990989181392]}, {'': [-7.401486830834377e-17, 0.2499999098917928]}, {'': [7.401486830834377e-17, 0.24999990989192408]}, {'': [-3.700743415417188e-17, 0.24999990989188686]}, {'': [9.25185853854297e-18, 0.24999990989191767]}, {'': [0.2499464604402144, 0.24985179494224805]}, {'': [0.0, 0.24999899762873445]}, {'': [0.0, 0.24999899038793963]}, {'': [2.3129646346357427e-18, 0.2499989862311913]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;haschild(A, B) :- created(B, C), created(A, C).;true;true', '1;;haschild(A, B) :- created(B, C), created(A, C).;true;true', '2;;haschild(A, B) :- created(A, C), created(B, C).;true;true', '3;;haschild(A, B) :- created(B, C), created(A, C).;true;true', '4;;haschild(A, B) :- created(B, C), created(A, C).;true;true', '5;;haschild(A, B) :- created(B, C), created(A, C).;true;true', '7;;haschild(A, B) :- created(A, C), created(B, C).;true;true', '8;;haschild(A, B) :- created(A, C), created(B, C).;true;true', '9;;haschild(A, B) :- created(B, C), created(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( ismarriedto(B, D), ismarriedto(A, E) )
%   | then if ( diedin(E, F), wasbornin(B, G) )
%   | | then if ( iscitizenof(D, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.6467203636709381;  // std dev = 5,402, 175,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=138 */
%   | | else if ( graduatedfrom(A, I) )
%   | | | then return 0.19549833268987246;  // std dev = 4,307, 83,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0.4460374667179425;  // std dev = 21,262, 1.866,000 (wgt'ed) examples reached here.  /* #neg=769 #pos=1.097 */
%   | else if ( iscitizenof(A, J), iscitizenof(B, J) )
%   | | then if ( diedin(A, K), exports(J, L) )
%   | | | then return 0.6081489350995123;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.8581489350995125;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( isaffiliatedto(A, M), isaffiliatedto(B, M) )
%   | | | then return 0.8581489350995121;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   | | | else return 0.3219527752655684;  // std dev = 43,782, 7.708,000 (wgt'ed) examples reached here.  /* #neg=4.133 #pos=3.575 */
WILL Produced-Tree #2
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( ismarriedto(B, D), ismarriedto(A, E) )
%   | then if ( haswonprize(B, F), wasbornin(A, G) )
%   | | then if ( diedin(E, H) )
%   | | | then return 0.7728612953694696;  // std dev = 0,094, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.5872357647643629;  // std dev = 2,660, 43,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=34 */
%   | | else if ( graduatedfrom(A, I) )
%   | | | then return 0.15062103570427768;  // std dev = 4,288, 84,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | | else return 0.38846594759900993;  // std dev = 21,777, 1.979,000 (wgt'ed) examples reached here.  /* #neg=799 #pos=1.180 */
%   | else if ( diedin(A, J), wasbornin(B, J) )
%   | | then return 0.8089240825364707;  // std dev = 0,220, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else if ( ismarriedto(B, K) )
%   | | | then return 0.20296868001814708;  // std dev = 17,038, 1.225,000 (wgt'ed) examples reached here.  /* #neg=748 #pos=477 */
%   | | | else return 0.2932646683965997;  // std dev = 40,211, 6.526,000 (wgt'ed) examples reached here.  /* #neg=3.387 #pos=3.139 */
WILL Produced-Tree #3
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( wasbornin(A, D), wasbornin(B, D) )
%   | then if ( diedin(A, D) )
%   | | then return 0.6636236754178331;  // std dev = 0,246, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return 0.7427383814217265;  // std dev = 0,460, 124,000 (wgt'ed) examples reached here.  /* #pos=124 */
%   | else if ( isaffiliatedto(B, E), isaffiliatedto(A, F) )
%   | | then if ( isaffiliatedto(B, F) )
%   | | | then return 0.6489944418848074;  // std dev = 1,344, 103,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=101 */
%   | | | else return 0.3814788087829833;  // std dev = 3,494, 53,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=33 */
%   | | else if ( isaffiliatedto(B, G) )
%   | | | then return 0.028151023690331567;  // std dev = 8,152, 345,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=93 */
%   | | | else return 0.2502070773153045;  // std dev = 47,895, 9.323,000 (wgt'ed) examples reached here.  /* #neg=4.726 #pos=4.597 */
WILL Produced-Tree #4
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( ismarriedto(B, D), ismarriedto(A, E) )
%   | then if ( diedin(B, F), diedin(A, G) )
%   | | then if ( isleaderof(H, F), diedin(E, I) )
%   | | | then return 0.11649784383955415;  // std dev = 1,736, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.44377531982037977;  // std dev = 4,175, 114,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=91 */
%   | | else if ( livesin(D, J), wasbornin(B, K) )
%   | | | then return -0.19574704516399255;  // std dev = 1,306, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.2561180594371468;  // std dev = 21,659, 1.982,000 (wgt'ed) examples reached here.  /* #neg=819 #pos=1.163 */
%   | else if ( ismarriedto(A, L) )
%   | | then if ( actedin(A, M), actedin(B, N) )
%   | | | then return 0.6470815214484366;  // std dev = 1,674, 47,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=44 */
%   | | | else return 0.14381211175511358;  // std dev = 27,495, 3.171,000 (wgt'ed) examples reached here.  /* #neg=1.807 #pos=1.364 */
%   | | else if ( ismarriedto(B, P) )
%   | | | then return 0.12901719999104158;  // std dev = 17,052, 1.239,000 (wgt'ed) examples reached here.  /* #neg=748 #pos=491 */
%   | | | else return 0.24822789853958546;  // std dev = 28,701, 3.409,000 (wgt'ed) examples reached here.  /* #neg=1.577 #pos=1.832 */
WILL Produced-Tree #5
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( wasbornin(A, D), wasbornin(B, D) )
%   | then if ( diedin(A, D) )
%   | | then if ( haswonprize(A, E), happenedin(F, D) )
%   | | | then return 0.4080675943444317;  // std dev = 0,122, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.452629057315813;  // std dev = 0,236, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( isaffiliatedto(B, G) )
%   | | | then return 0.47352125505565823;  // std dev = 0,299, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.5363795018677145;  // std dev = 0,549, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( isaffiliatedto(A, H), isaffiliatedto(B, H) )
%   | | then if ( diedin(A, I), created(B, J) )
%   | | | then return 0.1479214158696557;  // std dev = 0,631, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4518281936448884;  // std dev = 1,051, 100,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=99 */
%   | | else if ( ismarriedto(A, K), isaffiliatedto(B, L) )
%   | | | then return -0.0764798717319705;  // std dev = 5,471, 192,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=41 */
%   | | | else return 0.15619885480346496;  // std dev = 48,153, 9.529,000 (wgt'ed) examples reached here.  /* #neg=4.847 #pos=4.682 */
WILL Produced-Tree #6
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( wasbornin(B, D), diedin(A, D) )
%   | then if ( wasbornin(A, D) )
%   | | then if ( haswonprize(B, E), ismarriedto(B, F) )
%   | | | then return 0.265923423772513;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3491634894649738;  // std dev = 0,184, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else if ( iscitizenof(A, G), hascapital(G, H) )
%   | | | then return 0.3526062903687657;  // std dev = 0,178, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5117681961055052;  // std dev = 1,144, 118,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=117 */
%   | else if ( wasbornin(B, I), diedin(J, I) )
%   | | then if ( wasbornin(A, K), diedin(L, K) )
%   | | | then return 0.16474802601159247;  // std dev = 10,864, 595,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=347 */
%   | | | else return 0.044616123075913734;  // std dev = 18,517, 1.481,000 (wgt'ed) examples reached here.  /* #neg=866 #pos=615 */
%   | | else if ( diedin(A, M), diedin(B, M) )
%   | | | then return 0.5530596989603306;  // std dev = 1,117, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return 0.12645208137004108;  // std dev = 43,246, 7.708,000 (wgt'ed) examples reached here.  /* #neg=3.884 #pos=3.824 */
WILL Produced-Tree #7
% FOR haschild(A, B):
%   if ( diedin(A, C), wasbornin(B, C) )
%   then return 0.3517067553309616;  // std dev = 0,103, 169,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=168 */
%   else if ( diedin(A, D), wasbornin(E, D) )
%   | then if ( diedin(B, F), wasbornin(G, F) )
%   | | then if ( ispoliticianof(G, H) )
%   | | | then return 0.018330925121186496;  // std dev = 3,976, 74,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=32 */
%   | | | else return 0.1863634907987947;  // std dev = 7,050, 245,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=157 */
%   | | else if ( wasbornin(A, D), hascapital(I, D) )
%   | | | then return -0.12101315937070979;  // std dev = 4,240, 93,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   | | | else return 0.026668510732805097;  // std dev = 17,485, 1.307,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=561 */
%   | else if ( isaffiliatedto(B, J), isaffiliatedto(A, K) )
%   | | then if ( wasbornin(B, L), happenedin(M, L) )
%   | | | then return 0.18135013345381495;  // std dev = 1,878, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | else return 0.33489898329699774;  // std dev = 2,174, 89,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=83 */
%   | | else if ( graduatedfrom(B, N), created(A, P) )
%   | | | then return 0.3717195894207814;  // std dev = 2,393, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.09704284423510945;  // std dev = 43,791, 7.961,000 (wgt'ed) examples reached here.  /* #neg=4.035 #pos=3.926 */
WILL Produced-Tree #8
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.19572374689151206;  // std dev = 0,055, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( ismarriedto(A, D), ismarriedto(B, E) )
%   | then if ( diedin(D, F), wasbornin(B, F) )
%   | | then if ( diedin(A, F) )
%   | | | then return 0.2242414514534786;  // std dev = 0,978, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.4480252940719237;  // std dev = 0,464, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( wasbornin(A, G), haswonprize(B, H) )
%   | | | then return 0.26733058971354845;  // std dev = 2,516, 58,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=49 */
%   | | | else return 0.09533135568390659;  // std dev = 21,671, 2.005,000 (wgt'ed) examples reached here.  /* #neg=855 #pos=1.150 */
%   | else if ( ismarriedto(A, I), diedin(I, J) )
%   | | then if ( wasbornin(B, J) )
%   | | | then return 0.46221310383089453;  // std dev = 1,648, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return -0.051639571281455236;  // std dev = 12,506, 727,000 (wgt'ed) examples reached here.  /* #neg=477 #pos=250 */
%   | | else if ( ismarriedto(B, K) )
%   | | | then return 0.019874216122125227;  // std dev = 16,925, 1.239,000 (wgt'ed) examples reached here.  /* #neg=748 #pos=491 */
%   | | | else return 0.08214305655102984;  // std dev = 37,213, 5.842,000 (wgt'ed) examples reached here.  /* #neg=2.908 #pos=2.934 */
WILL Produced-Tree #9
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.16681446348631793;  // std dev = 0,048, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( isaffiliatedto(A, D), ismarriedto(B, E) )
%   | then if ( isaffiliatedto(E, F) )
%   | | then if ( ismarriedto(A, G), wasbornin(B, H) )
%   | | | then return -0.07100925622758239;  // std dev = 0,735, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.333883482857494;  // std dev = 1,331, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else if ( graduatedfrom(E, I) )
%   | | | then return 0.3628518215375807;  // std dev = 1,277, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.2094419880589574;  // std dev = 4,634, 156,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
%   | else if ( ismarriedto(A, J), isaffiliatedto(B, K) )
%   | | then if ( isaffiliatedto(J, L) )
%   | | | then return 0.2858624777276281;  // std dev = 2,114, 47,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=41 */
%   | | | else return -0.14889911178645662;  // std dev = 4,661, 182,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=37 */
%   | | else if ( wasbornin(A, M), wasbornin(B, M) )
%   | | | then return 0.28148439373332357;  // std dev = 1,005, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | | | else return 0.057319237553272714;  // std dev = 47,351, 9.410,000 (wgt'ed) examples reached here.  /* #neg=4.719 #pos=4.691 */
WILL Produced-Tree #10
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.1449531804157271;  // std dev = 0,043, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( diedin(A, D), wasbornin(B, D) )
%   | then if ( wasbornin(A, D) )
%   | | then if ( haswonprize(A, E) )
%   | | | then return 0.12208549225037303;  // std dev = 0,054, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15162739932114128;  // std dev = 0,131, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( ismarriedto(A, F), diedin(F, D) )
%   | | | then return 0.20430178993662798;  // std dev = 0,983, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.2814832533389337;  // std dev = 0,444, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | else if ( diedin(A, G), wasbornin(H, G) )
%   | | then if ( wasbornin(A, G), wasbornin(B, I) )
%   | | | then return -0.26068265581811645;  // std dev = 2,027, 33,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.00853600722204851;  // std dev = 19,520, 1.684,000 (wgt'ed) examples reached here.  /* #neg=916 #pos=768 */
%   | | else if ( iscitizenof(B, J), iscitizenof(A, J) )
%   | | | then return 0.40488325386273516;  // std dev = 0,726, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0.04302677684574009;  // std dev = 43,674, 8.041,000 (wgt'ed) examples reached here.  /* #neg=4.056 #pos=3.985 */


Results
   AUC ROC   = 0.646954
   AUC PR    = 0.673256
   CLL	      = -0.657577
   Precision = 0.69247 at threshold = 0.5
   Recall    = 0.3283
   F1        = 0.445424


Total learning time: 1544.029 seconds
Total inference time: 121.894 seconds
AUC ROC: 0.646954


Refined model AUC ROC: 0.646954


Dataset: 14_uwcse_yago2s, Fold: 1, Type: transfer, Time: 06:11:12
{'Learning time': 1800.038, 'Inference time': 121.894, 'AUC PR': 0.673256, 'F1': 0.445424, 'Recall': 0.3283, 'Parameter Learning results': {'Learning time': 256.009, 'Inference time': 98.274, 'AUC PR': 0.505963, 'F1': 0.004789, 'Recall': 0.0024, 'AUC ROC': 0.5038, 'CLL': -0.694306, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.646954, 'Mapping results': {'Knowledge compiling time': 22.74970531463623, 'Generating mappings time': 0.9270775318145752, 'Possible mappings': 10976, 'Finding best mapping': 2.953094482421875, 'Total time': 29.604313611984253, 'Generating paths time': 2.9744298458099365}, 'CLL': -0.657577, 'Precision': [0.69247, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR haschild(A, B):
%   if ( ismarriedto(A, C), ismarriedto(B, D) )
%   then if ( diedin(C, E), wasbornin(B, E) )
%   | then return 0.8427643197148973;  // std dev = 0,123, 65,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=64 */
%   | else if ( isaffiliatedto(A, F) )
%   | | then return 0.2517659563761067;  // std dev = 0,489, 94,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=37 */
%   | | else if ( graduatedfrom(B, G) )
%   | | | then return 0.19685861251886674;  // std dev = 3,727, 62,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.45668142985841714;  // std dev = 21,412, 1.908,000 (wgt'ed) examples reached here.  /* #neg=766 #pos=1.142 */
%   else if ( iscitizenof(A, H), iscitizenof(B, H) )
%   | then return 0.830371157321735;  // std dev = 0,164, 72,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=70 */
%   | else if ( ismarriedto(A, I) )
%   | | then if ( wasbornin(I, J), wasbornin(B, K) )
%   | | | then return 0.4446151005130425;  // std dev = 8,032, 266,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=156 */
%   | | | else return 0.28065063462364065;  // std dev = 26,792, 2.942,000 (wgt'ed) examples reached here.  /* #neg=1.699 #pos=1.243 */
%   | | else if ( ismarriedto(B, L) )
%   | | | then return 0.2539486119977304;  // std dev = 17,206, 1.238,000 (wgt'ed) examples reached here.  /* #neg=748 #pos=490 */
%   | | | else return 0.3881220934651499;  // std dev = 28,900, 3.353,000 (wgt'ed) examples reached here.  /* #neg=1.576 #pos=1.777 */
WILL Produced-Tree #2
% FOR haschild(A, B):
%   if ( actedin(B, C), actedin(A, D) )
%   then return 0.7184365086381073;  // std dev = 0,282, 137,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=125 */
%   else if ( ismarriedto(A, E), ismarriedto(B, F) )
%   | then if ( actedin(F, G) )
%   | | then if ( actedin(E, H), actedin(B, I) )
%   | | | then return 0.6930351493805016;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.06314712652787893;  // std dev = 3,832, 76,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | else if ( diedin(E, J), wasbornin(B, J) )
%   | | | then return 0.7066949851680403;  // std dev = 0,992, 63,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | | | else return 0.38095946378246787;  // std dev = 21,639, 1.937,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=1.134 */
%   | else if ( ismarriedto(B, K) )
%   | | then if ( graduatedfrom(K, L), graduatedfrom(A, M) )
%   | | | then return 0.8243426977215018;  // std dev = 5,16e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21201846241229957;  // std dev = 16,992, 1.217,000 (wgt'ed) examples reached here.  /* #neg=745 #pos=472 */
%   | | else if ( ismarriedto(A, N) )
%   | | | then return 0.248523202225228;  // std dev = 27,843, 3.173,000 (wgt'ed) examples reached here.  /* #neg=1.807 #pos=1.366 */
%   | | | else return 0.33675311241553585;  // std dev = 28,938, 3.380,000 (wgt'ed) examples reached here.  /* #neg=1.575 #pos=1.805 */
WILL Produced-Tree #3
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, D) )
%   then if ( diedin(B, E), diedin(A, F) )
%   | then return 0.4678156156613572;  // std dev = 0,412, 128,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=98 */
%   | else if ( actedin(A, G), diedin(C, H) )
%   | | then return -0.09988595124281284;  // std dev = 0,372, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( diedin(D, I), wasbornin(B, J) )
%   | | | then return 0.44221695418000434;  // std dev = 4,572, 135,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=104 */
%   | | | else return 0.29995572274015797;  // std dev = 21,126, 1.849,000 (wgt'ed) examples reached here.  /* #neg=790 #pos=1.059 */
%   else if ( wasbornin(A, K), wasbornin(B, K) )
%   | then return 0.7531085956023008;  // std dev = 0,342, 126,000 (wgt'ed) examples reached here.  /* #pos=126 */
%   | else if ( ismarriedto(A, L), diedin(L, M) )
%   | | then if ( diedin(B, N), wasbornin(P, M) )
%   | | | then return 0.30698984492836645;  // std dev = 5,044, 103,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=55 */
%   | | | else return 0.1313594565332271;  // std dev = 12,335, 668,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=237 */
%   | | else if ( ismarriedto(B, Q) )
%   | | | then return 0.1788654275527573;  // std dev = 17,002, 1.225,000 (wgt'ed) examples reached here.  /* #neg=748 #pos=477 */
%   | | | else return 0.2516718693297696;  // std dev = 37,677, 5.749,000 (wgt'ed) examples reached here.  /* #neg=2.908 #pos=2.841 */
WILL Produced-Tree #4
% FOR haschild(A, B):
%   if ( isaffiliatedto(B, C), isaffiliatedto(A, D) )
%   then return 0.5623532376651165;  // std dev = 0,332, 171,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=149 */
%   else if ( isaffiliatedto(B, E) )
%   | then if ( ismarriedto(A, F) )
%   | | then if ( isaffiliatedto(F, G) )
%   | | | then return 0.5260626367829864;  // std dev = 1,522, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.14484840981216118;  // std dev = 4,246, 164,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=22 */
%   | | else if ( livesin(A, H), isleaderof(I, H) )
%   | | | then return 0.5529530512429549;  // std dev = 0,929, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.052016211791911425;  // std dev = 5,995, 162,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
%   | else if ( wasbornin(B, J), wasbornin(A, K) )
%   | | then if ( diedin(L, J), wasbornin(L, K) )
%   | | | then return 0.5483177106171485;  // std dev = 4,110, 272,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=251 */
%   | | | else return 0.13323621154184442;  // std dev = 10,012, 433,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=190 */
%   | | else if ( wasbornin(B, M), diedin(N, M) )
%   | | | then return 0.1466121804679649;  // std dev = 17,872, 1.353,000 (wgt'ed) examples reached here.  /* #neg=749 #pos=604 */
%   | | | else return 0.20858629924938252;  // std dev = 42,582, 7.420,000 (wgt'ed) examples reached here.  /* #neg=3.713 #pos=3.707 */
WILL Produced-Tree #5
% FOR haschild(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then return 0.46836038551339393;  // std dev = 0,066, 171,000 (wgt'ed) examples reached here.  /* #pos=171 */
%   else if ( ismarriedto(B, D), graduatedfrom(A, E) )
%   | then if ( graduatedfrom(D, F) )
%   | | then if ( worksat(G, E), graduatedfrom(G, E) )
%   | | | then return 0.10904470592060177;  // std dev = 0,962, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6093101931745679;  // std dev = 0,246, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( created(B, H) )
%   | | | then return 0.3926789361948403;  // std dev = 1,380, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.1473569364639731;  // std dev = 4,015, 116,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=21 */
%   | else if ( ismarriedto(A, I), iscitizenof(B, J) )
%   | | then if ( iscitizenof(A, J) )
%   | | | then return 0.5187586783929395;  // std dev = 1,125, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.032201563175504155;  // std dev = 6,211, 198,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=55 */
%   | | else if ( ismarriedto(B, K), ismarriedto(A, L) )
%   | | | then return 0.20867140428489442;  // std dev = 21,157, 1.948,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=1.171 */
%   | | | else return 0.14884848441049017;  // std dev = 42,676, 7.521,000 (wgt'ed) examples reached here.  /* #neg=3.979 #pos=3.542 */
WILL Produced-Tree #6
% FOR haschild(A, B):
%   if ( diedin(A, C), diedin(B, D) )
%   then if ( wasbornin(B, C) )
%   | then return 0.4534043126005499;  // std dev = 0,148, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( wasbornin(A, E), isleaderof(F, C) )
%   | | then return 0.01292188293141892;  // std dev = 0,444, 53,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | else return 0.22005014720794427;  // std dev = 0,464, 291,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=182 */
%   else if ( diedin(B, G) )
%   | then if ( ismarriedto(A, H), diedin(H, G) )
%   | | then return 0.4989724764647333;  // std dev = 0,214, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else if ( actedin(A, I) )
%   | | | then return -0.215823159729401;  // std dev = 2,145, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.07769813808338495;  // std dev = 15,307, 1.020,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=460 */
%   | else if ( wasbornin(A, J), wasbornin(B, J) )
%   | | then return 0.3600265808465714;  // std dev = 0,058, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else if ( diedin(A, K) )
%   | | | then return 0.07180203201713664;  // std dev = 18,723, 1.495,000 (wgt'ed) examples reached here.  /* #neg=831 #pos=664 */
%   | | | else return 0.13245724110749071;  // std dev = 40,681, 6.892,000 (wgt'ed) examples reached here.  /* #neg=3.431 #pos=3.461 */
WILL Produced-Tree #7
% FOR haschild(A, B):
%   if ( wasbornin(B, C), diedin(A, D) )
%   then if ( diedin(B, D) )
%   | then return 0.39916334193155995;  // std dev = 0,147, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( isleaderof(E, C), ismarriedto(A, F) )
%   | | then if ( isleaderof(G, D), livesin(H, C) )
%   | | | then return 0.22730865564941388;  // std dev = 3,411, 74,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=52 */
%   | | | else return -0.15671514984779106;  // std dev = 3,228, 66,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else if ( isleaderof(I, D), diedin(J, C) )
%   | | | then return 0.08772718562132577;  // std dev = 5,137, 128,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=67 */
%   | | | else return 0.23629394599467268;  // std dev = 6,972, 271,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=190 */
%   else if ( isaffiliatedto(B, K), isaffiliatedto(A, K) )
%   | then return 0.47052995675888964;  // std dev = 0,129, 93,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=92 */
%   | else if ( iscitizenof(A, L), ismarriedto(B, M) )
%   | | then return -0.10908365433111258;  // std dev = 0,395, 83,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | | else if ( ismarriedto(A, N), isaffiliatedto(B, P) )
%   | | | then return -0.12239647834973928;  // std dev = 4,786, 176,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=35 */
%   | | | else return 0.0921861937697587;  // std dev = 46,494, 9.058,000 (wgt'ed) examples reached here.  /* #neg=4.584 #pos=4.474 */
WILL Produced-Tree #8
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), isaffiliatedto(A, D) )
%   then if ( isaffiliatedto(B, D) )
%   | then return 0.3369094968474849;  // std dev = 0,202, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( graduatedfrom(C, E) )
%   | | then return 0.445907803203502;  // std dev = 0,247, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( ismarriedto(A, F), holdspoliticalposition(A, G) )
%   | | | then return 0.05098236679358905;  // std dev = 1,552, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.20235303802754195;  // std dev = 4,274, 146,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=24 */
%   else if ( graduatedfrom(A, H), graduatedfrom(B, I) )
%   | then if ( worksat(J, I), graduatedfrom(J, K) )
%   | | then return 0.42649438941828066;  // std dev = 0,268, 53,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | else return 0.0858550549294759;  // std dev = 0,432, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | else if ( iscitizenof(B, L), iscitizenof(A, L) )
%   | | then return 0.3859203275215289;  // std dev = 0,191, 75,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=73 */
%   | | else if ( isaffiliatedto(B, M), ismarriedto(A, N) )
%   | | | then return -0.05529090477935918;  // std dev = 5,334, 204,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=56 */
%   | | | else return 0.07358913265651562;  // std dev = 47,190, 9.450,000 (wgt'ed) examples reached here.  /* #neg=4.707 #pos=4.743 */
WILL Produced-Tree #9
% FOR haschild(A, B):
%   if ( diedin(A, C), wasbornin(B, D) )
%   then if ( wasbornin(E, C), wasbornin(E, D) )
%   | then return 0.35690098462541564;  // std dev = 0,172, 170,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=169 */
%   | else if ( wasbornin(A, C) )
%   | | then return -0.2722712544306566;  // std dev = 0,341, 33,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( actedin(A, F), ismarriedto(A, G) )
%   | | | then return 0.37705232765334146;  // std dev = 1,156, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.0316674463592846;  // std dev = 8,678, 372,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=189 */
%   else if ( diedin(A, H), diedin(B, H) )
%   | then return 0.468393637341188;  // std dev = 0,179, 37,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else if ( wasbornin(B, I), diedin(J, I) )
%   | | then if ( actedin(A, K), actedin(B, L) )
%   | | | then return 0.3318621162156347;  // std dev = 1,901, 53,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | | | else return -1.488514459017698E-4;  // std dev = 18,785, 1.639,000 (wgt'ed) examples reached here.  /* #neg=912 #pos=727 */
%   | | else if ( diedin(A, M), wasbornin(N, M) )
%   | | | then return -0.006973961233031978;  // std dev = 17,198, 1.276,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=538 */
%   | | | else return 0.07097827572414016;  // std dev = 39,060, 6.405,000 (wgt'ed) examples reached here.  /* #neg=3.132 #pos=3.273 */
WILL Produced-Tree #10
% FOR haschild(A, B):
%   if ( isaffiliatedto(B, C), isaffiliatedto(A, C) )
%   then if ( iscitizenof(A, D), iscitizenof(B, D) )
%   | then return 0.07341732339926837;  // std dev = 0,301, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3272386900532905;  // std dev = 0,131, 106,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=105 */
%   else if ( isaffiliatedto(B, E) )
%   | then if ( ismarriedto(A, F), influences(G, B) )
%   | | then if ( diedin(G, H) )
%   | | | then return 0.3567088246845182;  // std dev = 0,814, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6156826338020455;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( isaffiliatedto(A, I) )
%   | | | then return 0.11003804693864568;  // std dev = 3,351, 56,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=36 */
%   | | | else return -0.09003316870030026;  // std dev = 7,459, 344,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=93 */
%   | else if ( iscitizenof(A, J), iscitizenof(B, J) )
%   | | then return 0.31247926498311157;  // std dev = 0,143, 62,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=61 */
%   | | else if ( iscitizenof(A, K), hascurrency(K, L) )
%   | | | then return -0.06295299540311958;  // std dev = 7,844, 278,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=104 */
%   | | | else return 0.044082949671378616;  // std dev = 46,175, 9.138,000 (wgt'ed) examples reached here.  /* #neg=4.551 #pos=4.587 */


Results
   AUC ROC   = 0.662969
   AUC PR    = 0.686472
   CLL	      = -0.653301
   Precision = 0.714898 at threshold = 0.5
   Recall    = 0.3335
   F1        = 0.454824


Total learning time: 1870.456 seconds
Total inference time: 101.803 seconds
AUC ROC: 0.662969


Dataset: 14_uwcse_yago2s, Fold: 1, Type: scratch, Time: 06:44:08
{'Learning time': 1870.456, 'Inference time': 101.803, 'AUC PR': 0.686472, 'F1': 0.454824, 'Recall': 0.3335, 'AUC ROC': 0.662969, 'CLL': -0.653301, 'Precision': [0.714898, 0.5]}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 23.200753688812256
   Generating paths time   = 4.537110090255737
   Generating mappings time   = 0.9391734600067139
   Possible mappings   = 10976
   Finding best mapping   = 2.9995317459106445
   Total time   = 31.676576614379883


Best mapping found: ['tempadvisedby(A,B) -> influences(B,A)', 'projectmember(A,B) -> ismarriedto(A,B)', 'publication(A,B) -> created(B,A)', 'advisedby(A,B) -> haschild(A,B)'] 

Transferred target predicate: haschild 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;haschild(A, B) :- created(B, C), created(A, C).;false;false
1;;haschild(A, B) :- created(B, C), created(A, C).;false;false
2;;haschild(A, B) :- created(A, C), created(B, C).;false;false
3;;haschild(A, B) :- created(B, C), created(A, C).;false;false
4;;haschild(A, B) :- created(B, C), created(A, C).;false;false
5;;haschild(A, B) :- created(B, C), created(A, C).;false;false
6;;haschild(A, B) :- ismarriedto(C, B).;false;false
7;;haschild(A, B) :- created(A, C), created(B, C).;false;false
8;;haschild(A, B) :- created(A, C), created(B, C).;false;false
9;;haschild(A, B) :- created(B, C), created(A, C).;false;false


WILL Produced-Tree #1
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.35734765304822513;  // std dev = 49,960, 9.984,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.984 */
WILL Produced-Tree #2
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.30806376450884965;  // std dev = 49,960, 9.984,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.984 */
WILL Produced-Tree #3
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.2558834292640926;  // std dev = 49,960, 9.984,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.984 */
WILL Produced-Tree #4
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.20575254312824656;  // std dev = 49,960, 9.984,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.984 */
WILL Produced-Tree #5
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.1613627003403169;  // std dev = 49,960, 9.984,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.984 */
WILL Produced-Tree #6
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.12437783034648571;  // std dev = 49,960, 9.984,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.984 */
WILL Produced-Tree #7
% FOR haschild(A, B):
%   if ( ismarriedto(C, B) )
%   then return 0.1344050826292764;  // std dev = 28,323, 3.231,000 (wgt'ed) examples reached here.  /* #neg=1.489 #pos=1.742 */
%   else return 0.0761822076050362;  // std dev = 41,068, 6.769,000 (wgt'ed) examples reached here.  /* #neg=3.511 #pos=3.258 */
WILL Produced-Tree #8
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.19570959530843818;  // std dev = 0,014, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.07172181335505244;  // std dev = 49,928, 9.984,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.984 */
WILL Produced-Tree #9
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.16672423571733708;  // std dev = 0,012, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.054087645853773035;  // std dev = 49,928, 9.984,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.984 */
WILL Produced-Tree #10
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.14483036601577434;  // std dev = 0,011, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.040694657249169916;  // std dev = 49,928, 9.984,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.984 */


Results
   AUC ROC   = 0.517671
   AUC PR    = 0.517169
   CLL	      = -0.694269
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.0014
   F1        = 0.002796


Total learning time: 276.39 seconds
Total inference time: 97.827 seconds
AUC ROC: 0.517671


Structure after Parameter Learning
[['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.96, 5000, 4984], 'true': [0.0, 0, 16]}], ['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.96, 5000, 4984], 'true': [5.96e-08, 0, 16]}], ['haschild(A, B)', {'': 'created(A, C), created(B, C)'}, {'false': [49.96, 5000, 4984], 'true': [0.0, 0, 16]}], ['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.96, 5000, 4984], 'true': [5.16e-08, 0, 16]}], ['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.96, 5000, 4984], 'true': [0.0, 0, 16]}], ['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.96, 5000, 4984], 'true': [2.11e-08, 0, 16]}], ['haschild(A, B)', {'': 'ismarriedto(C, B)'}, {'false': [41.068, 3511, 3258], 'true': [28.323, 1489, 1742]}], ['haschild(A, B)', {'': 'created(A, C), created(B, C)'}, {'false': [49.928, 5000, 4984], 'true': [0.014, 0, 16]}], ['haschild(A, B)', {'': 'created(A, C), created(B, C)'}, {'false': [49.928, 5000, 4984], 'true': [0.012, 0, 16]}], ['haschild(A, B)', {'': 'created(B, C), created(A, C)'}, {'false': [49.928, 5000, 4984], 'true': [0.011, 0, 16]}]]
[{'': [-2.220446049250313e-16, 0.2499993579471601]}, {'': [2.220446049250313e-16, 0.24999935794701392]}, {'': [-2.220446049250313e-16, 0.24999935794717962]}, {'': [1.6653345369377348e-16, 0.24999935794704223]}, {'': [0.0, 0.24999935794712463]}, {'': [2.7755575615628914e-17, 0.24999935794705522]}, {'': [0.2482750205511008, 0.2491674002794177]}, {'': [1.2511903927120427e-05, 0.24967920655866221]}, {'': [9.726010519916367e-06, 0.24967678044265285]}, {'': [7.717801842121313e-06, 0.24967540914609598]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;haschild(A, B) :- created(B, C), created(A, C).;true;true', '1;;haschild(A, B) :- created(B, C), created(A, C).;true;true', '2;;haschild(A, B) :- created(A, C), created(B, C).;true;true', '3;;haschild(A, B) :- created(B, C), created(A, C).;true;true', '4;;haschild(A, B) :- created(B, C), created(A, C).;true;true', '5;;haschild(A, B) :- created(B, C), created(A, C).;true;true', '7;;haschild(A, B) :- created(A, C), created(B, C).;true;true', '8;;haschild(A, B) :- created(A, C), created(B, C).;true;true', '9;;haschild(A, B) :- created(B, C), created(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( wasbornin(B, D), diedin(A, D) )
%   | then if ( happenedin(E, D), isleaderof(F, D) )
%   | | then if ( created(F, G), participatedin(H, E) )
%   | | | then return 0.6081489350995123;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.8389181658687429;  // std dev = 0,990, 52,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | else return 0.8581489350995128;  // std dev = 0,000, 144,000 (wgt'ed) examples reached here.  /* #pos=144 */
%   | else if ( ismarriedto(B, I), ismarriedto(A, J) )
%   | | then if ( graduatedfrom(A, K) )
%   | | | then return 0.24481560176617773;  // std dev = 4,217, 75,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.46432243164022047;  // std dev = 21,179, 1.879,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=1.139 */
%   | | else if ( isaffiliatedto(A, L), isaffiliatedto(B, L) )
%   | | | then return 0.8160436719416169;  // std dev = 1,957, 95,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=91 */
%   | | | else return 0.3139761243376394;  // std dev = 43,791, 7.731,000 (wgt'ed) examples reached here.  /* #neg=4.207 #pos=3.524 */
WILL Produced-Tree #2
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( diedin(B, D), ismarriedto(A, E) )
%   | then if ( diedin(E, D) )
%   | | then if ( isleaderof(F, D), ismarriedto(B, G) )
%   | | | then return 0.49628681095613686;  // std dev = 1,180, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.7818651915502023;  // std dev = 0,273, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else if ( ismarriedto(B, H) )
%   | | | then return 0.426237924382614;  // std dev = 9,434, 391,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=249 */
%   | | | else return 0.26333777252857454;  // std dev = 9,950, 408,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=185 */
%   | else if ( wasbornin(B, I), wasbornin(A, I) )
%   | | then if ( isaffiliatedto(A, J), livesin(A, I) )
%   | | | then return 0.45295132945259214;  // std dev = 0,783, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7824229735886755;  // std dev = 0,529, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else if ( ismarriedto(B, K), ismarriedto(A, L) )
%   | | | then return 0.38190836783318555;  // std dev = 19,414, 1.566,000 (wgt'ed) examples reached here.  /* #neg=642 #pos=924 */
%   | | | else return 0.27455172064809125;  // std dev = 42,732, 7.403,000 (wgt'ed) examples reached here.  /* #neg=3.990 #pos=3.413 */
WILL Produced-Tree #3
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( wasbornin(A, D), wasbornin(B, D) )
%   | then if ( diedin(A, D) )
%   | | then return 0.5600070121346126;  // std dev = 0,295, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( livesin(A, E), wasbornin(F, E) )
%   | | | then return 0.46553929428849045;  // std dev = 0,825, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6680434630185366;  // std dev = 0,476, 137,000 (wgt'ed) examples reached here.  /* #pos=137 */
%   | else if ( wasbornin(B, G), diedin(A, G) )
%   | | then if ( hascapital(H, G), diedin(B, G) )
%   | | | then return 0.5623900655388052;  // std dev = 0,903, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.6379176128607194;  // std dev = 1,386, 129,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=127 */
%   | | else if ( ismarriedto(A, I), ismarriedto(B, J) )
%   | | | then return 0.3113026744522202;  // std dev = 21,488, 1.918,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=1.132 */
%   | | | else return 0.22396624404564944;  // std dev = 43,641, 7.720,000 (wgt'ed) examples reached here.  /* #neg=4.210 #pos=3.510 */
WILL Produced-Tree #4
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( diedin(A, D), diedin(B, E) )
%   | then if ( wasbornin(F, E), livesin(F, D) )
%   | | then if ( wasbornin(B, D), hascapital(G, D) )
%   | | | then return 0.4337025875782051;  // std dev = 0,918, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.6130050777124535;  // std dev = 1,721, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | else if ( livesin(H, D), actedin(H, I) )
%   | | | then return 0.10400161745717419;  // std dev = 3,671, 63,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | | | else return 0.33996997842764254;  // std dev = 7,045, 256,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=175 */
%   | else if ( isaffiliatedto(B, J), isaffiliatedto(A, K) )
%   | | then if ( isaffiliatedto(A, J) )
%   | | | then return 0.5649429582317047;  // std dev = 2,051, 109,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=105 */
%   | | | else return 0.38505193888750283;  // std dev = 3,225, 48,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | | else if ( ismarriedto(A, L), ismarriedto(B, M) )
%   | | | then return 0.24615110496114817;  // std dev = 21,026, 1.881,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=1.125 */
%   | | | else return 0.17991061936078798;  // std dev = 42,892, 7.544,000 (wgt'ed) examples reached here.  /* #neg=4.102 #pos=3.442 */
WILL Produced-Tree #5
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( wasbornin(A, D), wasbornin(B, D) )
%   | then if ( diedin(A, D) )
%   | | then return 0.3585175299865422;  // std dev = 0,304, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( livesin(A, E), iscitizenof(F, E) )
%   | | | then return 0.14578267703818007;  // std dev = 0,676, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.45069979630722545;  // std dev = 0,715, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   | else if ( wasbornin(B, G), diedin(H, G) )
%   | | then if ( ismarriedto(A, H) )
%   | | | then return 0.5091702548853121;  // std dev = 1,793, 100,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=98 */
%   | | | else return 0.08343534888207968;  // std dev = 21,087, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.112 #pos=839 */
%   | | else if ( diedin(A, I), wasbornin(J, I) )
%   | | | then return 0.09393280875903043;  // std dev = 17,619, 1.322,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=566 */
%   | | | else return 0.18388299181921872;  // std dev = 39,717, 6.415,000 (wgt'ed) examples reached here.  /* #neg=3.129 #pos=3.286 */
WILL Produced-Tree #6
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( ismarriedto(A, D) )
%   | then if ( ismarriedto(B, E) )
%   | | then if ( diedin(D, F), wasbornin(B, F) )
%   | | | then return 0.3487570521369635;  // std dev = 1,478, 74,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=72 */
%   | | | else return 0.14848052547506776;  // std dev = 21,309, 1.946,000 (wgt'ed) examples reached here.  /* #neg=784 #pos=1.162 */
%   | | else if ( actedin(D, G), actedin(B, H) )
%   | | | then return 0.5090302555309539;  // std dev = 2,273, 47,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=41 */
%   | | | else return 0.06917403892270342;  // std dev = 27,324, 3.216,000 (wgt'ed) examples reached here.  /* #neg=1.852 #pos=1.364 */
%   | else if ( ismarriedto(B, I) )
%   | | then if ( iscitizenof(A, J) )
%   | | | then return -0.13594690440808171;  // std dev = 3,182, 65,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | | else return 0.07889295776773787;  // std dev = 16,451, 1.142,000 (wgt'ed) examples reached here.  /* #neg=651 #pos=491 */
%   | | else if ( wasbornin(B, K) )
%   | | | then return 0.1326852290689468;  // std dev = 12,848, 763,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=389 */
%   | | | else return 0.18141240335183645;  // std dev = 25,925, 2.731,000 (wgt'ed) examples reached here.  /* #neg=1.280 #pos=1.451 */
WILL Produced-Tree #7
% FOR haschild(A, B):
%   if ( livesin(B, C), livesin(A, D) )
%   then if ( iscitizenof(B, E), ismarriedto(A, F) )
%   | then return -0.17857720678258826;  // std dev = 0,459, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5090411186305077;  // std dev = 0,230, 74,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=70 */
%   else if ( livesin(B, G) )
%   | then if ( ismarriedto(A, H), livesin(H, I) )
%   | | then if ( hascapital(G, J), hascapital(K, I) )
%   | | | then return 0.044369291763889505;  // std dev = 0,674, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5462023572693325;  // std dev = 0,313, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( diedin(A, G) )
%   | | | then return 0.5309981882020999;  // std dev = 0,310, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09703968283466112;  // std dev = 7,736, 305,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=90 */
%   | else if ( wasbornin(B, L), wasbornin(A, L) )
%   | | then return 0.2946354820574843;  // std dev = 0,082, 189,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=188 */
%   | | else if ( wasbornin(A, M), diedin(N, M) )
%   | | | then return 0.056015136121020215;  // std dev = 20,787, 1.844,000 (wgt'ed) examples reached here.  /* #neg=1.011 #pos=833 */
%   | | | else return 0.10245642480730766;  // std dev = 42,550, 7.561,000 (wgt'ed) examples reached here.  /* #neg=3.766 #pos=3.795 */
WILL Produced-Tree #8
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.19426979788499538;  // std dev = 0,033, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( wasbornin(B, D), diedin(A, D) )
%   | then if ( wasbornin(A, D) )
%   | | then return 0.2012765434790035;  // std dev = 0,219, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( ismarriedto(A, E), diedin(E, D) )
%   | | | then return 0.22405721325064107;  // std dev = 0,322, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0.34136807365495697;  // std dev = 1,660, 114,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=111 */
%   | else if ( isaffiliatedto(A, F), ismarriedto(B, G) )
%   | | then if ( isaffiliatedto(B, F) )
%   | | | then return 0.3910056983157724;  // std dev = 0,497, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.240170417600681;  // std dev = 4,456, 142,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=26 */
%   | | else if ( livesin(A, H), livesin(B, I) )
%   | | | then return 0.3699562006311419;  // std dev = 2,203, 72,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=66 */
%   | | | else return 0.0698219154975888;  // std dev = 47,653, 9.545,000 (wgt'ed) examples reached here.  /* #neg=4.875 #pos=4.670 */
WILL Produced-Tree #9
% FOR haschild(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.1656617886257544;  // std dev = 0,029, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( isaffiliatedto(B, D), isaffiliatedto(A, E) )
%   | then if ( influences(B, F) )
%   | | then return -0.23054048139100838;  // std dev = 0,516, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( wasbornin(B, G), wasbornin(A, G) )
%   | | | then return 0.16084261989675885;  // std dev = 0,252, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.29045684606243827;  // std dev = 3,769, 157,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=138 */
%   | else if ( actedin(B, H), created(A, I) )
%   | | then if ( ismarriedto(A, J), created(K, H) )
%   | | | then return 0.4609738807035162;  // std dev = 1,238, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return 0.09203669783816658;  // std dev = 2,673, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( wasbornin(B, L), diedin(M, L) )
%   | | | then return 0.02113428259901029;  // std dev = 20,899, 2.136,000 (wgt'ed) examples reached here.  /* #neg=1.097 #pos=1.039 */
%   | | | else return 0.05830623826937893;  // std dev = 42,909, 7.611,000 (wgt'ed) examples reached here.  /* #neg=3.865 #pos=3.746 */
WILL Produced-Tree #10
% FOR haschild(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.14402034573966646;  // std dev = 0,026, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( ismarriedto(A, D) )
%   | then if ( diedin(D, E), wasbornin(B, E) )
%   | | then if ( diedin(A, E) )
%   | | | then return 0.17990982501517577;  // std dev = 0,305, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return 0.32390319324945743;  // std dev = 1,674, 74,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=72 */
%   | | else if ( ismarriedto(B, F) )
%   | | | then return 0.05781812708186234;  // std dev = 21,097, 1.946,000 (wgt'ed) examples reached here.  /* #neg=784 #pos=1.162 */
%   | | | else return 8.339855932636854E-4;  // std dev = 27,210, 3.214,000 (wgt'ed) examples reached here.  /* #neg=1.858 #pos=1.356 */
%   | else if ( ismarriedto(B, G) )
%   | | then if ( isaffiliatedto(A, H) )
%   | | | then return -0.19277425722634306;  // std dev = 2,824, 82,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   | | | else return 0.01863498951118432;  // std dev = 16,269, 1.125,000 (wgt'ed) examples reached here.  /* #neg=635 #pos=490 */
%   | | else if ( diedin(B, I), diedin(A, J) )
%   | | | then return 0.2195715609980361;  // std dev = 3,834, 99,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=76 */
%   | | | else return 0.07229265682122474;  // std dev = 28,482, 3.395,000 (wgt'ed) examples reached here.  /* #neg=1.631 #pos=1.764 */


Results
   AUC ROC   = 0.644507
   AUC PR    = 0.669945
   CLL	      = -0.660295
   Precision = 0.670548 at threshold = 0.5
   Recall    = 0.334
   F1        = 0.445898


Total learning time: 570.243 seconds
Total inference time: 103.178 seconds
AUC ROC: 0.644507


Refined model AUC ROC: 0.644507


Dataset: 14_uwcse_yago2s, Fold: 2, Type: transfer, Time: 07:02:31
{'Learning time': 846.633, 'Inference time': 103.178, 'AUC PR': 0.669945, 'F1': 0.445898, 'Recall': 0.334, 'Parameter Learning results': {'Learning time': 276.39, 'Inference time': 97.827, 'AUC PR': 0.517169, 'F1': 0.002796, 'Recall': 0.0014, 'AUC ROC': 0.517671, 'CLL': -0.694269, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.644507, 'Mapping results': {'Knowledge compiling time': 23.200753688812256, 'Generating mappings time': 0.9391734600067139, 'Possible mappings': 10976, 'Finding best mapping': 2.9995317459106445, 'Total time': 31.676576614379883, 'Generating paths time': 4.537110090255737}, 'CLL': -0.660295, 'Precision': [0.670548, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR haschild(A, B):
%   if ( ismarriedto(A, C), ismarriedto(B, D) )
%   then if ( actedin(A, E), directed(F, E) )
%   | then if ( actedin(B, G) )
%   | | then return 0.8181489350995119;  // std dev = 0,196, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else return 0.0803711573217346;  // std dev = 0,416, 54,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | else if ( wasbornin(B, H), diedin(A, H) )
%   | | then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.46230450249428645;  // std dev = 0,489, 1.877,000 (wgt'ed) examples reached here.  /* #neg=743 #pos=1.134 */
%   else if ( graduatedfrom(A, I), graduatedfrom(B, J) )
%   | then return 0.7456489350995129;  // std dev = 0,316, 80,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | else if ( ismarriedto(A, K) )
%   | | then if ( wasbornin(B, L), wasbornin(A, L) )
%   | | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0.274448494570873;  // std dev = 27,789, 3.178,000 (wgt'ed) examples reached here.  /* #neg=1.855 #pos=1.323 */
%   | | else if ( wasbornin(B, M), diedin(A, M) )
%   | | | then return 0.8314822684328462;  // std dev = 1,395, 75,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=73 */
%   | | | else return 0.3462675311317724;  // std dev = 33,854, 4.587,000 (wgt'ed) examples reached here.  /* #neg=2.348 #pos=2.239 */
WILL Produced-Tree #2
% FOR haschild(A, B):
%   if ( influences(C, A), iscitizenof(B, D) )
%   then if ( iscitizenof(C, E), hascurrency(E, F) )
%   | then return 0.20324905774222995;  // std dev = 1,057, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.7279923008944215;  // std dev = 0,271, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( ismarriedto(B, G), ismarriedto(A, H) )
%   | then if ( ismarriedto(G, H) )
%   | | then return 0.7867244315845429;  // std dev = 0,088, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( graduatedfrom(A, I) )
%   | | | then return 0.1610950227537618;  // std dev = 4,011, 71,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.40589971697364025;  // std dev = 21,203, 1.925,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=1.185 */
%   | else if ( diedin(A, J), diedin(B, K) )
%   | | then if ( wasbornin(B, J) )
%   | | | then return 0.7446968309116468;  // std dev = 1,088, 58,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=57 */
%   | | | else return 0.39883125681140263;  // std dev = 7,278, 220,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=129 */
%   | | else if ( ismarriedto(A, L) )
%   | | | then return 0.2401447276126665;  // std dev = 27,499, 3.132,000 (wgt'ed) examples reached here.  /* #neg=1.813 #pos=1.319 */
%   | | | else return 0.3024637172676179;  // std dev = 33,648, 4.552,000 (wgt'ed) examples reached here.  /* #neg=2.306 #pos=2.246 */
WILL Produced-Tree #3
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, D) )
%   then if ( diedin(D, E), wasbornin(B, E) )
%   | then return 0.65993338853861;  // std dev = 0,162, 75,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=73 */
%   | else return 0.31457560240284554;  // std dev = 0,486, 1.947,000 (wgt'ed) examples reached here.  /* #neg=784 #pos=1.163 */
%   else if ( ismarriedto(F, B) )
%   | then if ( wasbornin(A, G), diedin(H, G) )
%   | | then return 0.10502547729557193;  // std dev = 0,470, 231,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=82 */
%   | | else if ( isaffiliatedto(A, I) )
%   | | | then return -0.11089461816579209;  // std dev = 2,539, 59,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
%   | | | else return 0.2106580026981387;  // std dev = 15,052, 919,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=416 */
%   | else if ( ismarriedto(A, J) )
%   | | then if ( diedin(J, K), diedin(B, K) )
%   | | | then return 0.7413617870747821;  // std dev = 0,219, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.2053797957172954;  // std dev = 27,928, 3.237,000 (wgt'ed) examples reached here.  /* #neg=1.857 #pos=1.380 */
%   | | else if ( livesin(B, L), iscitizenof(M, L) )
%   | | | then return 0.13870585758458528;  // std dev = 3,041, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.2856081463174846;  // std dev = 29,222, 3.463,000 (wgt'ed) examples reached here.  /* #neg=1.629 #pos=1.834 */
WILL Produced-Tree #4
% FOR haschild(A, B):
%   if ( diedin(A, C), wasbornin(B, C) )
%   then return 0.5591885046448335;  // std dev = 0,143, 205,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=202 */
%   else if ( ismarriedto(B, D), ismarriedto(A, E) )
%   | then if ( graduatedfrom(E, F), worksat(G, F) )
%   | | then if ( graduatedfrom(B, H) )
%   | | | then return 0.5417453655786505;  // std dev = 0,957, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.11396568740398706;  // std dev = 2,498, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( wasbornin(D, I), wasbornin(B, J) )
%   | | | then return 0.12803001289848565;  // std dev = 6,187, 161,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=78 */
%   | | | else return 0.2644988759270716;  // std dev = 20,164, 1.750,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=1.076 */
%   | else if ( ismarriedto(A, K), diedin(K, L) )
%   | | then if ( diedin(B, M), wasbornin(N, M) )
%   | | | then return 0.26696341225330816;  // std dev = 5,051, 114,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=64 */
%   | | | else return 0.08573837597750385;  // std dev = 11,714, 616,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=210 */
%   | | else if ( wasbornin(B, P) )
%   | | | then return 0.14173569013739365;  // std dev = 18,978, 1.512,000 (wgt'ed) examples reached here.  /* #neg=871 #pos=641 */
%   | | | else return 0.2058670357861774;  // std dev = 37,213, 5.598,000 (wgt'ed) examples reached here.  /* #neg=2.884 #pos=2.714 */
WILL Produced-Tree #5
% FOR haschild(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then return 0.5579690526703901;  // std dev = 0,125, 197,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=196 */
%   else if ( isaffiliatedto(B, D), isaffiliatedto(A, E) )
%   | then if ( isaffiliatedto(A, D) )
%   | | then if ( graduatedfrom(A, F), worksat(G, F) )
%   | | | then return 0.485127339456243;  // std dev = 1,449, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.6255508115257831;  // std dev = 1,226, 84,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=83 */
%   | | else if ( livesin(A, H) )
%   | | | then return -0.32513135072725224;  // std dev = 0,135, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3647687453260991;  // std dev = 3,086, 48,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=34 */
%   | else if ( actedin(B, I), actedin(A, J) )
%   | | then if ( ismarriedto(A, K), wrotemusicfor(L, I) )
%   | | | then return 0.5218667123023827;  // std dev = 2,300, 58,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return 0.6474222373683161;  // std dev = 1,025, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else if ( wasbornin(B, M), diedin(N, M) )
%   | | | then return 0.0928759400808662;  // std dev = 20,978, 1.945,000 (wgt'ed) examples reached here.  /* #neg=1.098 #pos=847 */
%   | | | else return 0.15510646126451166;  // std dev = 43,004, 7.605,000 (wgt'ed) examples reached here.  /* #neg=3.873 #pos=3.732 */
WILL Produced-Tree #6
% FOR haschild(A, B):
%   if ( wasbornin(B, C), wasbornin(A, D) )
%   then if ( ismarriedto(A, E), wasbornin(E, C) )
%   | then return 0.523424142844795;  // std dev = 0,094, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | else if ( hascapital(F, D), hascapital(G, C) )
%   | | then if ( diedin(H, D), wasbornin(H, C) )
%   | | | then return 0.35093224899207565;  // std dev = 2,985, 134,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=121 */
%   | | | else return 0.15216200597524182;  // std dev = 3,878, 71,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=37 */
%   | | else if ( hascapital(I, C), livesin(J, D) )
%   | | | then return -0.0012540601791130009;  // std dev = 4,083, 82,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | | else return 0.18104010563970568;  // std dev = 9,384, 427,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=248 */
%   else if ( actedin(B, K), actedin(A, L) )
%   | then return 0.4565915536407701;  // std dev = 0,219, 77,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=73 */
%   | else if ( diedin(A, M), diedin(B, M) )
%   | | then return 0.4903353413547288;  // std dev = 0,186, 56,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   | | else if ( wasbornin(A, N), diedin(P, N) )
%   | | | then return 0.06053785079804469;  // std dev = 18,354, 1.426,000 (wgt'ed) examples reached here.  /* #neg=821 #pos=605 */
%   | | | else return 0.1215206317384728;  // std dev = 42,970, 7.685,000 (wgt'ed) examples reached here.  /* #neg=3.895 #pos=3.790 */
WILL Produced-Tree #7
% FOR haschild(A, B):
%   if ( wasbornin(A, C), wasbornin(B, D) )
%   then if ( livesin(E, D), wasbornin(E, C) )
%   | then return 0.37063661920754687;  // std dev = 0,187, 179,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=175 */
%   | else return 0.09459513919714979;  // std dev = 0,453, 577,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=302 */
%   else if ( wasbornin(B, F) )
%   | then if ( diedin(A, F) )
%   | | then return 0.3566593875533993;  // std dev = 0,147, 104,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=103 */
%   | | else if ( actedin(B, G), wrotemusicfor(H, G) )
%   | | | then return -0.09259493252474889;  // std dev = 4,993, 140,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=46 */
%   | | | else return 0.03364384213438819;  // std dev = 17,951, 1.380,000 (wgt'ed) examples reached here.  /* #neg=808 #pos=572 */
%   | else if ( diedin(A, I), wasbornin(J, I) )
%   | | then if ( diedin(B, K), diedin(J, K) )
%   | | | then return 0.3822622869776261;  // std dev = 2,364, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | | else return 0.013385570615982669;  // std dev = 16,816, 1.245,000 (wgt'ed) examples reached here.  /* #neg=739 #pos=506 */
%   | | else if ( ismarriedto(A, L), wasbornin(L, M) )
%   | | | then return 0.046049446297457546;  // std dev = 12,285, 646,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=282 */
%   | | | else return 0.12204622785835983;  // std dev = 37,095, 5.677,000 (wgt'ed) examples reached here.  /* #neg=2.708 #pos=2.969 */
WILL Produced-Tree #8
% FOR haschild(A, B):
%   if ( isaffiliatedto(B, C), isaffiliatedto(A, D) )
%   then return 0.334655606848274;  // std dev = 0,297, 176,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=155 */
%   else if ( diedin(A, E), diedin(B, F) )
%   | then if ( isaffiliatedto(A, G), happenedin(H, E) )
%   | | then if ( isleaderof(I, F), isaffiliatedto(I, G) )
%   | | | then return 0.4857361023924341;  // std dev = 0,249, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2955581890752653;  // std dev = 0,962, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( isleaderof(J, F), ismarriedto(A, K) )
%   | | | then return 0.0473854873806984;  // std dev = 3,751, 74,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=41 */
%   | | | else return 0.20560789437512492;  // std dev = 6,810, 292,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=216 */
%   | else if ( diedin(A, L), wasbornin(M, L) )
%   | | then if ( wasbornin(B, N), created(M, P) )
%   | | | then return 0.1255785133970567;  // std dev = 7,594, 334,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=208 */
%   | | | else return -0.004884982490210543;  // std dev = 16,197, 1.167,000 (wgt'ed) examples reached here.  /* #neg=714 #pos=453 */
%   | | else if ( iscitizenof(B, Q), iscitizenof(A, Q) )
%   | | | then return 0.568347397601526;  // std dev = 0,483, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.06875846898155348;  // std dev = 43,372, 7.892,000 (wgt'ed) examples reached here.  /* #neg=4.018 #pos=3.874 */
WILL Produced-Tree #9
% FOR haschild(A, B):
%   if ( isaffiliatedto(B, C), ismarriedto(A, D) )
%   then if ( isaffiliatedto(D, C) )
%   | then return 0.35319738434966574;  // std dev = 0,251, 50,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=47 */
%   | else if ( isleaderof(B, E), diedin(D, F) )
%   | | then return 0.5272234191191987;  // std dev = 0,116, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( isaffiliatedto(A, C) )
%   | | | then return 0.2980583761740548;  // std dev = 0,890, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.24804708314896676;  // std dev = 4,370, 162,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=27 */
%   else if ( actedin(B, G), directed(A, H) )
%   | then if ( influences(A, I), influences(I, J) )
%   | | then return -0.05961665804177074;  // std dev = 1,201, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.4219192220730519;  // std dev = 0,177, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( iscitizenof(A, K), iscitizenof(B, K) )
%   | | then return 0.40300331116177157;  // std dev = 0,138, 68,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | | else if ( wasbornin(A, L), wasbornin(B, L) )
%   | | | then return 0.27413465305097673;  // std dev = 1,632, 186,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=185 */
%   | | | else return 0.05043772216484882;  // std dev = 47,218, 9.477,000 (wgt'ed) examples reached here.  /* #neg=4.855 #pos=4.622 */
WILL Produced-Tree #10
% FOR haschild(A, B):
%   if ( actedin(A, C), actedin(B, D) )
%   then if ( influences(A, E), actedin(E, F) )
%   | then return -0.1507598673943919;  // std dev = 1,056, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( ismarriedto(B, G), ismarriedto(A, H) )
%   | | then return 0.21957568041974942;  // std dev = 0,187, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else return 0.34567671937490085;  // std dev = 0,204, 65,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=62 */
%   else if ( livesin(B, I), livesin(A, J) )
%   | then if ( iscitizenof(B, K), ismarriedto(A, L) )
%   | | then return -0.1713958705172589;  // std dev = 0,380, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( wasbornin(A, M), happenedin(N, J) )
%   | | | then return 0.2591026857237275;  // std dev = 1,191, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.46435249932843764;  // std dev = 1,404, 59,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | else if ( wasbornin(A, P), wasbornin(B, P) )
%   | | then return 0.22426050508911635;  // std dev = 0,109, 191,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   | | else if ( livesin(B, Q) )
%   | | | then return -0.11688013430653507;  // std dev = 7,824, 321,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=105 */
%   | | | else return 0.038604952599579405;  // std dev = 46,686, 9.315,000 (wgt'ed) examples reached here.  /* #neg=4.770 #pos=4.545 */


Results
   AUC ROC   = 0.660959
   AUC PR    = 0.68968
   CLL	      = -0.653872
   Precision = 0.714584 at threshold = 0.5
   Recall    = 0.342
   F1        = 0.4626


Total learning time: 857.398 seconds
Total inference time: 87.095 seconds
AUC ROC: 0.660959


Dataset: 14_uwcse_yago2s, Fold: 2, Type: scratch, Time: 07:18:19
{'Learning time': 857.398, 'Inference time': 87.095, 'AUC PR': 0.68968, 'F1': 0.4626, 'Recall': 0.342, 'AUC ROC': 0.660959, 'CLL': -0.653872, 'Precision': [0.714584, 0.5]}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 23.152112245559692
   Generating paths time   = 4.531369686126709
   Generating mappings time   = 0.9377048015594482
   Possible mappings   = 10976
   Finding best mapping   = 2.980969190597534
   Total time   = 31.602162837982178


Best mapping found: ['tempadvisedby(A,B) -> ismarriedto(A,B)', 'projectmember(A,B) -> created(B,A)', 'publication(A,B) -> ismarriedto(B,A)', 'advisedby(A,B) -> haschild(A,B)'] 

Transferred target predicate: haschild 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;false;false
1;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;false;false
2;;haschild(A, B) :- ismarriedto(A, C), ismarriedto(B, C).;false;false
3;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;false;false
4;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;false;false
5;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;false;false
6;;haschild(A, B) :- created(B, C).;false;false
7;;haschild(A, B) :- ismarriedto(A, C), ismarriedto(B, C).;false;false
8;;haschild(A, B) :- ismarriedto(A, C), ismarriedto(B, C).;false;false
9;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;false;false


WILL Produced-Tree #1
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.3575983294332743;  // std dev = 49,972, 9.989,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.989 */
WILL Produced-Tree #2
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.3082756827267312;  // std dev = 49,972, 9.989,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.989 */
WILL Produced-Tree #3
% FOR haschild(A, B):
%   if ( ismarriedto(A, C), ismarriedto(B, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.2560489258752696;  // std dev = 49,972, 9.989,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.989 */
WILL Produced-Tree #4
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.20587297700387283;  // std dev = 49,972, 9.989,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.989 */
WILL Produced-Tree #5
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.1614459092149082;  // std dev = 49,972, 9.989,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.989 */
WILL Produced-Tree #6
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.12443358607076103;  // std dev = 49,972, 9.989,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.989 */
WILL Produced-Tree #7
% FOR haschild(A, B):
%   if ( created(B, C) )
%   then return 0.07820779021639963;  // std dev = 11,666, 546,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=264 */
%   else return 0.09594167298591734;  // std dev = 48,591, 9.454,000 (wgt'ed) examples reached here.  /* #neg=4.718 #pos=4.736 */
WILL Produced-Tree #8
% FOR haschild(A, B):
%   if ( ismarriedto(A, C), ismarriedto(B, C) )
%   then return 0.19455061282415206;  // std dev = 0,003, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.07177582227445227;  // std dev = 49,972, 9.989,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.989 */
WILL Produced-Tree #9
% FOR haschild(A, B):
%   if ( ismarriedto(A, C), ismarriedto(B, C) )
%   then return 0.1658599055832781;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.054123343027029945;  // std dev = 49,972, 9.989,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.989 */
WILL Produced-Tree #10
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.1441652356776254;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.0407179525976238;  // std dev = 49,972, 9.989,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=4.989 */


Results
   AUC ROC   = 0.501169
   AUC PR    = 0.505458
   CLL	      = -0.694163
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.003
   F1        = 0.005982


Total learning time: 250.861 seconds
Total inference time: 96.785 seconds
AUC ROC: 0.501169


Structure after Parameter Learning
[['haschild(A, B)', {'': 'ismarriedto(B, C), ismarriedto(A, C)'}, {'false': [49.972, 5000, 4989], 'true': [0.0, 0, 11]}], ['haschild(A, B)', {'': 'ismarriedto(B, C), ismarriedto(A, C)'}, {'false': [49.972, 5000, 4989], 'true': [4.21e-08, 0, 11]}], ['haschild(A, B)', {'': 'ismarriedto(A, C), ismarriedto(B, C)'}, {'false': [49.972, 5000, 4989], 'true': [0.0, 0, 11]}], ['haschild(A, B)', {'': 'ismarriedto(B, C), ismarriedto(A, C)'}, {'false': [49.972, 5000, 4989], 'true': [4.21e-08, 0, 11]}], ['haschild(A, B)', {'': 'ismarriedto(B, C), ismarriedto(A, C)'}, {'false': [49.972, 5000, 4989], 'true': [0.0, 0, 11]}], ['haschild(A, B)', {'': 'ismarriedto(B, C), ismarriedto(A, C)'}, {'false': [49.972, 5000, 4989], 'true': [2.11e-08, 0, 11]}], ['haschild(A, B)', {'': 'created(B, C)'}, {'false': [48.591, 4718, 4736], 'true': [11.666, 282, 264]}], ['haschild(A, B)', {'': 'ismarriedto(A, C), ismarriedto(B, C)'}, {'false': [49.972, 5000, 4989], 'true': [0.003, 0, 11]}], ['haschild(A, B)', {'': 'ismarriedto(A, C), ismarriedto(B, C)'}, {'false': [49.972, 5000, 4989], 'true': [0.002, 0, 11]}], ['haschild(A, B)', {'': 'ismarriedto(B, C), ismarriedto(A, C)'}, {'false': [49.972, 5000, 4989], 'true': [0.002, 0, 11]}]]
[{'': [-1.6148698540002277e-16, 0.24999969683343454]}, {'': [1.6148698540002277e-16, 0.2499996968333881]}, {'': [-2.0185873175002846e-16, 0.24999969683336642]}, {'': [1.6148698540002277e-16, 0.24999969683337858]}, {'': [-6.055761952500853e-17, 0.2499996968333854]}, {'': [4.0371746350005693e-17, 0.2499996968334179]}, {'': [0.2492705875560387, 0.24974909920515206]}, {'': [6.438768328206638e-07, 0.24999268017313467]}, {'': [5.02324948101964e-07, 0.24999262317361848]}, {'': [3.9975997540272784e-07, 0.24999259022096773]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;true;true', '1;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;true;true', '2;;haschild(A, B) :- ismarriedto(A, C), ismarriedto(B, C).;true;true', '3;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;true;true', '4;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;true;true', '5;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;true;true', '7;;haschild(A, B) :- ismarriedto(A, C), ismarriedto(B, C).;true;true', '8;;haschild(A, B) :- ismarriedto(A, C), ismarriedto(B, C).;true;true', '9;;haschild(A, B) :- ismarriedto(B, C), ismarriedto(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( wasbornin(B, D), diedin(A, D) )
%   | then if ( wasbornin(A, E), diedin(B, F) )
%   | | then if ( livesin(G, F), hasacademicadvisor(H, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8248156017661787;  // std dev = 0,983, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else if ( ismarriedto(I, B), ismarriedto(A, J) )
%   | | then if ( diedin(A, K), isleaderof(L, K) )
%   | | | then return 0.2829276961614602;  // std dev = 5,255, 113,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=48 */
%   | | | else return 0.4445006411362529;  // std dev = 21,495, 1.905,000 (wgt'ed) examples reached here.  /* #neg=788 #pos=1.117 */
%   | | else if ( ismarriedto(A, M) )
%   | | | then return 0.29307731059478304;  // std dev = 28,396, 3.281,000 (wgt'ed) examples reached here.  /* #neg=1.854 #pos=1.427 */
%   | | | else return 0.3507292230286323;  // std dev = 33,593, 4.515,000 (wgt'ed) examples reached here.  /* #neg=2.291 #pos=2.224 */
WILL Produced-Tree #2
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( ismarriedto(D, B), ismarriedto(A, E) )
%   | then if ( actedin(A, F), actedin(B, G) )
%   | | then if ( created(E, H), haswonprize(A, I) )
%   | | | then return 0.4700538205215577;  // std dev = 1,415, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.7987427638692229;  // std dev = 0,046, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( actedin(A, J), ismarriedto(B, D) )
%   | | | then return -0.014879834989765878;  // std dev = 2,818, 53,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | | else return 0.3875817821554039;  // std dev = 21,809, 1.987,000 (wgt'ed) examples reached here.  /* #neg=808 #pos=1.179 */
%   | else if ( ismarriedto(A, K) )
%   | | then if ( created(K, L), wasbornin(B, M) )
%   | | | then return 0.47520606254014486;  // std dev = 3,704, 62,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | | | else return 0.2561924568886348;  // std dev = 28,285, 3.267,000 (wgt'ed) examples reached here.  /* #neg=1.833 #pos=1.434 */
%   | | else if ( iscitizenof(B, N), iscitizenof(A, N) )
%   | | | then return 0.8020723979872616;  // std dev = 0,190, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return 0.30233647560702276;  // std dev = 33,563, 4.527,000 (wgt'ed) examples reached here.  /* #neg=2.292 #pos=2.235 */
WILL Produced-Tree #3
% FOR haschild(A, B):
%   if ( ismarriedto(A, C), ismarriedto(B, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( actedin(A, D), actedin(B, E) )
%   | then if ( graduatedfrom(A, F), directed(G, E) )
%   | | then if ( directed(A, H), influences(I, G) )
%   | | | then return -0.22257375767803192;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.7090056729210841;  // std dev = 0,120, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ismarriedto(A, J), created(J, K) )
%   | | | then return 0.49159839728428256;  // std dev = 1,921, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.6910925564171494;  // std dev = 2,191, 104,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=99 */
%   | else if ( wasbornin(B, L), wasbornin(A, L) )
%   | | then if ( diedin(A, L) )
%   | | | then return 0.6517135124234705;  // std dev = 0,106, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return 0.7450469555039971;  // std dev = 1,054, 116,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=115 */
%   | | else if ( ismarriedto(B, M), ismarriedto(A, N) )
%   | | | then return 0.30113885452841715;  // std dev = 21,954, 1.999,000 (wgt'ed) examples reached here.  /* #neg=850 #pos=1.149 */
%   | | | else return 0.2273984642940939;  // std dev = 43,548, 7.701,000 (wgt'ed) examples reached here.  /* #neg=4.136 #pos=3.565 */
WILL Produced-Tree #4
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( isaffiliatedto(B, D), isaffiliatedto(A, D) )
%   | then if ( wasbornin(A, E), wasbornin(B, E) )
%   | | then return 0.5833406668402418;  // std dev = 0,102, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( wasbornin(A, F), iscitizenof(A, G) )
%   | | | then return 0.5201050658325322;  // std dev = 0,864, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7120860032727873;  // std dev = 0,254, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( wasbornin(B, H), diedin(A, H) )
%   | | then if ( livesin(I, H), ispoliticianof(I, J) )
%   | | | then return 0.32444173973205875;  // std dev = 1,169, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.56516001429189;  // std dev = 0,645, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | | else if ( ismarriedto(A, K), ismarriedto(L, B) )
%   | | | then return 0.2350453591754213;  // std dev = 21,917, 2.004,000 (wgt'ed) examples reached here.  /* #neg=853 #pos=1.151 */
%   | | | else return 0.1825420224517208;  // std dev = 43,468, 7.706,000 (wgt'ed) examples reached here.  /* #neg=4.144 #pos=3.562 */
WILL Produced-Tree #5
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( wasbornin(B, D), wasbornin(A, E) )
%   | then if ( diedin(F, D), wasbornin(F, E) )
%   | | then if ( diedin(A, E) )
%   | | | then return 0.3318116684256661;  // std dev = 1,036, 42,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return 0.4734257117161613;  // std dev = 3,627, 210,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=194 */
%   | | else if ( hascapital(G, D), happenedin(H, D) )
%   | | | then return 0.001676791223017542;  // std dev = 5,015, 118,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return 0.1862066366968863;  // std dev = 8,592, 317,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=169 */
%   | else if ( isaffiliatedto(A, I), ismarriedto(B, J) )
%   | | then if ( isaffiliatedto(J, K) )
%   | | | then return 0.4789917464547555;  // std dev = 1,280, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.12952742203044876;  // std dev = 4,905, 148,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=34 */
%   | | else if ( iscitizenof(B, L), ismarriedto(A, M) )
%   | | | then return -0.026050006521450904;  // std dev = 6,099, 184,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=54 */
%   | | | else return 0.1615869284102202;  // std dev = 46,671, 8.952,000 (wgt'ed) examples reached here.  /* #neg=4.510 #pos=4.442 */
WILL Produced-Tree #6
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( isaffiliatedto(B, D), ismarriedto(A, E) )
%   | then if ( graduatedfrom(B, F), created(B, G) )
%   | | then if ( wasbornin(A, H), wasbornin(B, I) )
%   | | | then return 7.440033032573706E-4;  // std dev = 0,797, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5809418492009599;  // std dev = 0,128, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( graduatedfrom(E, J) )
%   | | | then return 0.36154769622466704;  // std dev = 2,240, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | | else return -0.0992986334867264;  // std dev = 5,210, 168,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=47 */
%   | else if ( ismarriedto(A, K), ismarriedto(L, B) )
%   | | then if ( created(K, M), actedin(N, M) )
%   | | | then return -0.09880305264411168;  // std dev = 2,653, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.15681918720090468;  // std dev = 21,374, 1.983,000 (wgt'ed) examples reached here.  /* #neg=804 #pos=1.179 */
%   | | else if ( ismarriedto(B, P) )
%   | | | then return 0.05934205141476498;  // std dev = 16,691, 1.184,000 (wgt'ed) examples reached here.  /* #neg=684 #pos=500 */
%   | | | else return 0.13102433623834994;  // std dev = 39,780, 6.570,000 (wgt'ed) examples reached here.  /* #neg=3.357 #pos=3.213 */
WILL Produced-Tree #7
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), hasmusicalrole(B, D) )
%   then if ( wasbornin(A, E), haswonprize(C, F) )
%   | then return 0.16243631463843664;  // std dev = 0,808, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.4280415208545762;  // std dev = 0,058, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actedin(B, G), actedin(A, H) )
%   | then if ( graduatedfrom(A, I), directed(J, G) )
%   | | then if ( directed(A, K), influences(L, J) )
%   | | | then return -0.2693051705346242;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.40630495307023534;  // std dev = 0,191, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ismarriedto(B, M), ismarriedto(A, N) )
%   | | | then return 0.3132591727693203;  // std dev = 1,464, 34,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return 0.4232745237931797;  // std dev = 2,527, 92,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=85 */
%   | else if ( isaffiliatedto(B, P), isaffiliatedto(A, P) )
%   | | then return 0.4578799440120113;  // std dev = 0,122, 106,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=105 */
%   | | else if ( wasbornin(B, Q), wasbornin(A, R) )
%   | | | then return 0.14366806507611146;  // std dev = 10,844, 629,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=388 */
%   | | | else return 0.08375336709537218;  // std dev = 47,009, 9.119,000 (wgt'ed) examples reached here.  /* #neg=4.735 #pos=4.384 */
WILL Produced-Tree #8
% FOR haschild(A, B):
%   if ( ismarriedto(A, C), ismarriedto(B, C) )
%   then return 0.19621200322306728;  // std dev = 1,67e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( ismarriedto(B, D), created(A, E) )
%   | then if ( wasbornin(D, F), livesin(G, F) )
%   | | then if ( graduatedfrom(G, H), wasbornin(G, I) )
%   | | | then return 0.3972070598485579;  // std dev = 1,575, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return -0.12751611153860887;  // std dev = 1,795, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( wrotemusicfor(J, E), created(J, K) )
%   | | | then return -0.29709935710817087;  // std dev = 1,419, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return -0.07602477016796778;  // std dev = 5,684, 154,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
%   | else if ( wasbornin(B, L) )
%   | | then if ( ismarriedto(A, M), wasbornin(M, L) )
%   | | | then return 0.48443380186602186;  // std dev = 1,574, 90,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=89 */
%   | | | else return 0.030598613612876333;  // std dev = 21,202, 2.106,000 (wgt'ed) examples reached here.  /* #neg=1.081 #pos=1.025 */
%   | | else if ( ismarriedto(A, N), diedin(N, P) )
%   | | | then return 0.002344047481358824;  // std dev = 13,539, 787,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=334 */
%   | | | else return 0.09152319683088202;  // std dev = 40,560, 6.782,000 (wgt'ed) examples reached here.  /* #neg=3.334 #pos=3.448 */
WILL Produced-Tree #9
% FOR haschild(A, B):
%   if ( ismarriedto(A, C), ismarriedto(B, C) )
%   then return 0.16709573050336335;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( diedin(B, D), isleaderof(E, D) )
%   | then if ( isaffiliatedto(E, F), wasbornin(B, G) )
%   | | then if ( ismarriedto(A, H), diedin(H, D) )
%   | | | then return 0.4135339455113291;  // std dev = 0,224, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.008528389792888507;  // std dev = 5,915, 160,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=71 */
%   | | else if ( wasbornin(E, D), ismarriedto(A, I) )
%   | | | then return -0.03260013048052871;  // std dev = 2,693, 35,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.16890660062884705;  // std dev = 7,900, 282,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=175 */
%   | else if ( actedin(B, J) )
%   | | then if ( actedin(A, K) )
%   | | | then return 0.2762927299644053;  // std dev = 3,033, 126,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=114 */
%   | | | else return -0.10081019146933279;  // std dev = 8,332, 327,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=111 */
%   | | else if ( wasbornin(A, L) )
%   | | | then return 0.023958489434643317;  // std dev = 20,829, 1.966,000 (wgt'ed) examples reached here.  /* #neg=1.016 #pos=950 */
%   | | | else return 0.06305879395251242;  // std dev = 41,252, 7.084,000 (wgt'ed) examples reached here.  /* #neg=3.540 #pos=3.544 */
WILL Produced-Tree #10
% FOR haschild(A, B):
%   if ( ismarriedto(B, C), ismarriedto(A, C) )
%   then return 0.14511411506549124;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( ismarriedto(A, D), ismarriedto(E, B) )
%   | then if ( graduatedfrom(D, F) )
%   | | then if ( isaffiliatedto(E, G) )
%   | | | then return 0.3568492606520491;  // std dev = 0,242, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22068998879518625;  // std dev = 3,172, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( ismarriedto(D, E), ismarriedto(B, E) )
%   | | | then return 0.4051217026594315;  // std dev = 1,010, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.06489125256102396;  // std dev = 21,123, 1.986,000 (wgt'ed) examples reached here.  /* #neg=811 #pos=1.175 */
%   | else if ( ismarriedto(A, H) )
%   | | then if ( diedin(B, I), diedin(H, J) )
%   | | | then return 0.21965684518785253;  // std dev = 4,942, 123,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=82 */
%   | | | else return 0.01031226942677572;  // std dev = 27,258, 3.206,000 (wgt'ed) examples reached here.  /* #neg=1.813 #pos=1.393 */
%   | | else if ( ismarriedto(B, K) )
%   | | | then return -0.005106539827868631;  // std dev = 16,539, 1.184,000 (wgt'ed) examples reached here.  /* #neg=684 #pos=500 */
%   | | | else return 0.06840593440691584;  // std dev = 28,500, 3.400,000 (wgt'ed) examples reached here.  /* #neg=1.608 #pos=1.792 */


Results
   AUC ROC   = 0.656907
   AUC PR    = 0.682406
   CLL	      = -0.659384
   Precision = 0.715364 at threshold = 0.5
   Recall    = 0.3222
   F1        = 0.444291


Total learning time: 508.754 seconds
Total inference time: 101.05799999999999 seconds
AUC ROC: 0.656907


Refined model AUC ROC: 0.656907


Dataset: 14_uwcse_yago2s, Fold: 3, Type: transfer, Time: 07:35:12
{'Learning time': 759.615, 'Inference time': 101.05799999999999, 'AUC PR': 0.682406, 'F1': 0.444291, 'Recall': 0.3222, 'Parameter Learning results': {'Learning time': 250.861, 'Inference time': 96.785, 'AUC PR': 0.505458, 'F1': 0.005982, 'Recall': 0.003, 'AUC ROC': 0.501169, 'CLL': -0.694163, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.656907, 'Mapping results': {'Knowledge compiling time': 23.152112245559692, 'Generating mappings time': 0.9377048015594482, 'Possible mappings': 10976, 'Finding best mapping': 2.980969190597534, 'Total time': 31.602162837982178, 'Generating paths time': 4.531369686126709}, 'CLL': -0.659384, 'Precision': [0.715364, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR haschild(A, B):
%   if ( actedin(B, C), actedin(A, D) )
%   then return 0.7611340097263759;  // std dev = 0,296, 134,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=121 */
%   else if ( actedin(B, E) )
%   | then if ( wasbornin(A, F), isleaderof(G, F) )
%   | | then if ( hascapital(H, F), happenedin(I, H) )
%   | | | then return 0.20814893509951235;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.6167696247546842;  // std dev = 2,304, 29,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   | | else if ( ismarriedto(A, J), actedin(J, K) )
%   | | | then return 0.6816783468642181;  // std dev = 1,572, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.14634337954395707;  // std dev = 7,686, 288,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=83 */
%   | else if ( ismarriedto(A, L), ismarriedto(M, B) )
%   | | then if ( created(L, N), ismarriedto(B, M) )
%   | | | then return 0.2777917922423702;  // std dev = 5,223, 112,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=47 */
%   | | | else return 0.4637523833753694;  // std dev = 21,055, 1.856,000 (wgt'ed) examples reached here.  /* #neg=732 #pos=1.124 */
%   | | else if ( iscitizenof(A, P), iscitizenof(B, P) )
%   | | | then return 0.8196873966379742;  // std dev = 1,698, 78,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=75 */
%   | | | else return 0.3278783752280901;  // std dev = 43,124, 7.466,000 (wgt'ed) examples reached here.  /* #neg=3.959 #pos=3.507 */
WILL Produced-Tree #2
% FOR haschild(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then return 0.7972385870476028;  // std dev = 0,082, 161,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=160 */
%   else if ( ismarriedto(B, D), ismarriedto(A, E) )
%   | then if ( wasbornin(A, F), isleaderof(G, F) )
%   | | then if ( actedin(D, H) )
%   | | | then return 0.7209080216502198;  // std dev = 0,927, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.13940118636785512;  // std dev = 4,688, 99,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | | else if ( graduatedfrom(A, I) )
%   | | | then return 0.10377847932258343;  // std dev = 3,529, 59,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.3950407752759694;  // std dev = 21,097, 1.872,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=1.126 */
%   | else if ( isaffiliatedto(A, J), isaffiliatedto(B, J) )
%   | | then if ( wasbornin(A, K), iscitizenof(A, L) )
%   | | | then return 0.5961377665592393;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8089012375172699;  // std dev = 0,168, 77,000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | else if ( ismarriedto(A, M) )
%   | | | then return 0.24130106732446369;  // std dev = 28,110, 3.246,000 (wgt'ed) examples reached here.  /* #neg=1.853 #pos=1.393 */
%   | | | else return 0.2991161593645353;  // std dev = 33,273, 4.465,000 (wgt'ed) examples reached here.  /* #neg=2.292 #pos=2.173 */
WILL Produced-Tree #3
% FOR haschild(A, B):
%   if ( ismarriedto(A, C), ismarriedto(D, B) )
%   then if ( diedin(D, E), diedin(C, F) )
%   | then return 0.4281236159463888;  // std dev = 0,454, 129,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=91 */
%   | else if ( influences(C, G), created(G, H) )
%   | | then return -0.1324806919169971;  // std dev = 0,308, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( diedin(A, I), wasbornin(B, I) )
%   | | | then return 0.6770145919825419;  // std dev = 0,958, 43,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return 0.30205775592034495;  // std dev = 21,265, 1.898,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=1.098 */
%   else if ( ismarriedto(B, J), isaffiliatedto(A, K) )
%   | then return -0.019003515806276607;  // std dev = 0,402, 89,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
%   | else if ( ismarriedto(A, L) )
%   | | then if ( wasbornin(B, M), diedin(L, M) )
%   | | | then return 0.7332542183299589;  // std dev = 1,038, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | | else return 0.203624248570815;  // std dev = 28,095, 3.272,000 (wgt'ed) examples reached here.  /* #neg=1.853 #pos=1.419 */
%   | | else if ( ismarriedto(B, N) )
%   | | | then return 0.2014228808123528;  // std dev = 16,329, 1.095,000 (wgt'ed) examples reached here.  /* #neg=615 #pos=480 */
%   | | | else return 0.28598172365204444;  // std dev = 28,830, 3.400,000 (wgt'ed) examples reached here.  /* #neg=1.608 #pos=1.792 */
WILL Produced-Tree #4
% FOR haschild(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then return 0.5683339465409938;  // std dev = 0,096, 161,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=160 */
%   else if ( ismarriedto(A, D), ismarriedto(B, E) )
%   | then if ( wasbornin(B, F), diedin(A, G) )
%   | | then if ( diedin(D, F) )
%   | | | then return 0.6207261757346179;  // std dev = 0,196, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.28395688829488536;  // std dev = 4,945, 116,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=74 */
%   | | else if ( wasbornin(D, H), diedin(B, H) )
%   | | | then return 0.647533130170287;  // std dev = 0,135, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.23170792886907365;  // std dev = 21,271, 1.893,000 (wgt'ed) examples reached here.  /* #neg=811 #pos=1.082 */
%   | else if ( iscitizenof(B, I), iscitizenof(A, I) )
%   | | then if ( graduatedfrom(A, J), ismarriedto(A, K) )
%   | | | then return 0.16557264700344684;  // std dev = 1,074, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5855372736566313;  // std dev = 1,008, 72,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=71 */
%   | | else if ( wasbornin(A, L), hascapital(M, L) )
%   | | | then return 0.11072128782872957;  // std dev = 11,742, 593,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=229 */
%   | | | else return 0.19026179643201221;  // std dev = 41,782, 7.124,000 (wgt'ed) examples reached here.  /* #neg=3.779 #pos=3.345 */
WILL Produced-Tree #5
% FOR haschild(A, B):
%   if ( actedin(A, C), diedin(B, D) )
%   then if ( actedin(B, E) )
%   | then if ( diedin(A, F) )
%   | | then return 0.14650559472699023;  // std dev = 0,671, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5795416690336836;  // std dev = 0,060, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( wasbornin(A, G), ismarriedto(A, H) )
%   | | then return 0.05679018331852432;  // std dev = 0,450, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.29532529064174046;  // std dev = 0,192, 28,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   else if ( isaffiliatedto(B, I), isaffiliatedto(A, I) )
%   | then return 0.5414095555554994;  // std dev = 0,113, 106,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=105 */
%   | else if ( graduatedfrom(B, J), graduatedfrom(A, K) )
%   | | then if ( isaffiliatedto(A, L), owns(J, M) )
%   | | | then return 0.15027577689947386;  // std dev = 1,462, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.539549514914143;  // std dev = 2,084, 44,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=39 */
%   | | else if ( isaffiliatedto(B, N) )
%   | | | then return -0.025944554032245572;  // std dev = 8,213, 336,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=102 */
%   | | | else return 0.16242287675680217;  // std dev = 47,633, 9.461,000 (wgt'ed) examples reached here.  /* #neg=4.723 #pos=4.738 */
WILL Produced-Tree #6
% FOR haschild(A, B):
%   if ( diedin(A, C), wasbornin(B, C) )
%   then if ( wasbornin(A, C) )
%   | then return 0.36357957213779757;  // std dev = 0,066, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( ismarriedto(B, D), ismarriedto(A, E) )
%   | | then if ( livesin(F, C), influences(G, F) )
%   | | | then return 0.21125598015250735;  // std dev = 0,801, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.445299296934193;  // std dev = 0,279, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0.6025658203653748;  // std dev = 0,125, 92,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   else if ( isaffiliatedto(B, H), isaffiliatedto(A, H) )
%   | then return 0.4094903702239273;  // std dev = 0,112, 104,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=103 */
%   | else if ( isaffiliatedto(A, I), ismarriedto(B, J) )
%   | | then if ( wasbornin(J, K), livesin(L, K) )
%   | | | then return 0.14739259158855025;  // std dev = 2,407, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return -0.14083311540686982;  // std dev = 4,612, 142,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=29 */
%   | | else if ( ismarriedto(A, M), isaffiliatedto(B, N) )
%   | | | then return -0.11099186585497815;  // std dev = 4,905, 160,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=33 */
%   | | | else return 0.1218061419955535;  // std dev = 47,528, 9.395,000 (wgt'ed) examples reached here.  /* #neg=4.745 #pos=4.650 */
WILL Produced-Tree #7
% FOR haschild(A, B):
%   if ( livesin(B, C), livesin(A, D) )
%   then if ( isaffiliatedto(A, E), ismarriedto(A, F) )
%   | then if ( isaffiliatedto(B, E) )
%   | | then return 0.37540080772401324;  // std dev = 0,111, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.3361300149642831;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( iscitizenof(B, G), isleaderof(H, D) )
%   | | then return 0.20735352880306998;  // std dev = 0,720, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5281662757258346;  // std dev = 0,215, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else if ( wasbornin(B, I), wasbornin(A, I) )
%   | then return 0.3400573506832192;  // std dev = 0,101, 160,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=159 */
%   | else if ( ismarriedto(B, J), iscitizenof(A, K) )
%   | | then if ( actedin(J, L) )
%   | | | then return 0.2916410363882868;  // std dev = 1,693, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.2135301650231151;  // std dev = 3,295, 87,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=15 */
%   | | else if ( ismarriedto(A, M), ismarriedto(B, N) )
%   | | | then return 0.12069512790528343;  // std dev = 21,492, 2.002,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=1.173 */
%   | | | else return 0.08359433808979341;  // std dev = 42,828, 7.678,000 (wgt'ed) examples reached here.  /* #neg=4.087 #pos=3.591 */
WILL Produced-Tree #8
% FOR haschild(A, B):
%   if ( wasbornin(B, C), livesin(A, C) )
%   then if ( isaffiliatedto(A, D), isaffiliatedto(B, E) )
%   | then return 0.24846527771261087;  // std dev = 0,059, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4778307989024289;  // std dev = 0,110, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( livesin(A, F), diedin(G, F) )
%   | then if ( livesin(B, H), wasbornin(I, H) )
%   | | then return 0.4439168445467521;  // std dev = 0,099, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( ismarriedto(B, J), wasbornin(K, F) )
%   | | | then return -0.23432660032049085;  // std dev = 1,923, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return -0.007761285973032652;  // std dev = 5,280, 123,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=51 */
%   | else if ( haswonprize(A, L), haswonprize(B, M) )
%   | | then if ( haswonprize(A, M) )
%   | | | then return 0.47780092686524395;  // std dev = 0,790, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return 0.17275038142012542;  // std dev = 3,017, 44,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=28 */
%   | | else if ( ismarriedto(B, N), graduatedfrom(A, P) )
%   | | | then return -0.08632282430717543;  // std dev = 4,758, 131,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   | | | else return 0.07256503724403822;  // std dev = 47,391, 9.574,000 (wgt'ed) examples reached here.  /* #neg=4.792 #pos=4.782 */
WILL Produced-Tree #9
% FOR haschild(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( ismarriedto(D, B), participatedin(C, E) )
%   | then return 0.13024193179326252;  // std dev = 0,278, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.25910785274664594;  // std dev = 0,057, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( ismarriedto(B, F), ismarriedto(A, G) )
%   | then if ( wasbornin(B, H), diedin(G, H) )
%   | | then return 0.3746250369675298;  // std dev = 0,088, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( created(G, I), actedin(J, I) )
%   | | | then return -0.15901383810724043;  // std dev = 2,455, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.06842282266049324;  // std dev = 21,317, 1.958,000 (wgt'ed) examples reached here.  /* #neg=827 #pos=1.131 */
%   | else if ( isaffiliatedto(B, K), isaffiliatedto(A, L) )
%   | | then if ( iscitizenof(A, M), participatedin(M, N) )
%   | | | then return 0.15787583407299274;  // std dev = 1,346, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return 0.28706929927852226;  // std dev = 2,303, 91,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=82 */
%   | | else if ( wasbornin(B, P), diedin(Q, P) )
%   | | | then return 0.0024380717087303344;  // std dev = 18,232, 1.494,000 (wgt'ed) examples reached here.  /* #neg=855 #pos=639 */
%   | | | else return 0.05324801338548584;  // std dev = 38,705, 6.185,000 (wgt'ed) examples reached here.  /* #neg=3.278 #pos=2.907 */
WILL Produced-Tree #10
% FOR haschild(A, B):
%   if ( ismarriedto(A, C), iscitizenof(B, D) )
%   then if ( created(A, E), dealswith(F, D) )
%   | then if ( graduatedfrom(A, G), owns(G, H) )
%   | | then return 0.5534390851422435;  // std dev = 0,050, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( diedin(A, I), wasbornin(A, J) )
%   | | | then return 0.59512823675291;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.04323636068324846;  // std dev = 1,817, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return -0.1759884058948676;  // std dev = 0,403, 179,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=48 */
%   else if ( isaffiliatedto(B, K), graduatedfrom(A, L) )
%   | then return 0.1963824705262258;  // std dev = 0,312, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | else if ( ismarriedto(M, B), created(A, N) )
%   | | then if ( wasbornin(M, P), livesin(Q, P) )
%   | | | then return 0.1595828264981046;  // std dev = 2,929, 46,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=30 */
%   | | | else return -0.12630379297306363;  // std dev = 5,682, 167,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=55 */
%   | | else if ( isaffiliatedto(A, R), ismarriedto(B, S) )
%   | | | then return -0.09426318738991264;  // std dev = 4,627, 139,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | | else return 0.049009203139351795;  // std dev = 46,804, 9.368,000 (wgt'ed) examples reached here.  /* #neg=4.618 #pos=4.750 */


Results
   AUC ROC   = 0.665099
   AUC PR    = 0.686003
   CLL	      = -0.654554
   Precision = 0.725966 at threshold = 0.5
   Recall    = 0.3383
   F1        = 0.461528


Total learning time: 517.552 seconds
Total inference time: 101.14699999999999 seconds
AUC ROC: 0.665099


Dataset: 14_uwcse_yago2s, Fold: 3, Type: scratch, Time: 07:45:34
{'Learning time': 517.552, 'Inference time': 101.14699999999999, 'AUC PR': 0.686003, 'F1': 0.461528, 'Recall': 0.3383, 'AUC ROC': 0.665099, 'CLL': -0.654554, 'Precision': [0.725966, 0.5]}


