Starting experiment #1 for 19_uwcse_yago2s

Start learning from source dataset

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B), publication(E, D) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, H), professor(H) )
%   | | | then return 0.10814893509951236;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.52093963277393;  // std dev = 4,384, 86,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=57 */
%   else return -0.14185106490048804;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109546;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7194734122109542;  // std dev = 8,43e-08, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, G), professor(G) )
%   | | | then return 0.15707488778638837;  // std dev = 2,547, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.6267471652512122;  // std dev = 0,941, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.42652200338333013;  // std dev = 3,386, 50,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=32 */
%   | | | else return 0.47925948465735035;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   else return -0.12544463852839133;  // std dev = 4,71e-08, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.6419486100244409;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.524742894026148;  // std dev = 0,904, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return 0.0727040515046963;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.46967322457290944;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.2340617592436391;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3652909849614755;  // std dev = 4,362, 86,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=57 */
%   else return -0.11231637819360628;  // std dev = 9,19e-08, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.48547486813963053;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.33382127792828914;  // std dev = 0,873, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.42199306306899675;  // std dev = 0,020, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return 0.045889256378072084;  // std dev = 1,751, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.4970719879541894;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.2845941839126313;  // std dev = 4,303, 83,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=54 */
%   | | | else return 0.2170458648225664;  // std dev = 1,974, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   else return -0.10159632948783645;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.1931097312446027;  // std dev = 0,853, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.34610908991301265;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3237550871777786;  // std dev = 0,018, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return -0.014446165243754607;  // std dev = 1,219, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.23514957534068284;  // std dev = 1,665, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.12167718373511656;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.22236140614193112;  // std dev = 4,362, 86,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=57 */
%   else return -0.09269127618926093;  // std dev = 3,65e-08, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.1482863558283611;  // std dev = 0,855, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2724365221716667;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2572505733809868;  // std dev = 0,016, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return -0.011959451499360091;  // std dev = 1,220, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.18643894999965602;  // std dev = 1,666, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.09266561851991262;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16736420800812185;  // std dev = 4,361, 86,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=57 */
%   else return -0.08518475138839678;  // std dev = 6,50e-08, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.2921452442559721;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.18863870866576637;  // std dev = 0,864, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return 0.20817068588787044;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, H), tempadvisedby(I, H) )
%   | | | then return 0.17565140116925376;  // std dev = 1,221, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.3503033161336883;  // std dev = 0,195, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.08435108652907776;  // std dev = 2,646, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.1303152873448882;  // std dev = 4,038, 75,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=51 */
%   else return -0.0787767547310916;  // std dev = 6,99e-08, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.06494351471208029;  // std dev = 0,848, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19102389735021616;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.18036566821277114;  // std dev = 0,020, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, H), tempadvisedby(I, H) )
%   | | | then return 0.1342978236350302;  // std dev = 1,216, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.27884858848174143;  // std dev = 0,167, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.06647187044107959;  // std dev = 2,643, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.09832248612005992;  // std dev = 4,038, 75,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=51 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return 0.11712147379949256;  // std dev = 0,870, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.15522133205898908;  // std dev = 0,018, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( publication(D, G), tempadvisedby(H, G) )
%   | | | then return -0.032487020642421365;  // std dev = 1,658, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.14381458460256782;  // std dev = 1,193, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then if ( publication(J, K), student(K) )
%   | | | then return 0.10578240089791609;  // std dev = 2,731, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | | else return -0.10245628232255966;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( projectmember(L, B), publication(M, A) )
%   | | | then return 0.29246164544492714;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.03970936372741919;  // std dev = 3,322, 49,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   else return -0.06842697784420265;  // std dev = 6,66e-08, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(D, B) )
%   | | then return 0.20437066820332295;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return 0.06422987590123047;  // std dev = 0,849, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.13593955470271055;  // std dev = 0,016, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | then if ( publication(H, I), tempadvisedby(J, I) )
%   | | | then return 0.08035102812938964;  // std dev = 1,205, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.24210060205123862;  // std dev = 0,163, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.03662700752763876;  // std dev = 2,607, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.06098005672260866;  // std dev = 4,028, 75,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=51 */
%   else return -0.06419184008202626;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */


Predicates from source: ['advisedby(person,person).', 'tempadvisedby(person,person).', 'publication(title,person).', 'professor(person).', 'projectmember(project,person).', 'student(person).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 22.87808895111084
   Generating paths time   = 2.913222551345825
   Generating mappings time   = 8.23603343963623
   Possible mappings   = 10976
   Finding best mapping   = 2.926309823989868
   Total time   = 36.95366168022156


Best mapping found: ['advisedby(A,B) -> ismarriedto(A,B)', 'publication(A,B) -> created(B,A)', 'projectmember(A,B) -> livesin(B,A)', 'tempadvisedby(A,B) -> haschild(A,B)'] 

Transferred target predicate: ismarriedto 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;ismarriedto(A, B) :- created(B, C), created(A, C).;true;false
0;true,true;created(B, E), created(D, E).;false;false
0;true,false,false;haschild(I, B), created(I, J).;false;false
0;true,false,true;created(H, F).;false;false
0;true;haschild(D, B).;true;true
0;true,false;created(A, F), created(B, G).;true;true
1;;ismarriedto(A, B) :- created(A, C), created(B, C).;true;false
1;true,true;created(B, E).;false;false
1;true,false,false;haschild(H, B).;false;false
1;true,false,true;created(G, F).;false;false
1;true;haschild(D, B), created(D, E).;true;true
1;true,false;created(A, F).;true;true
2;;ismarriedto(A, B) :- created(B, C), created(A, C).;true;false
2;true,false,false,false;haschild(I, B), created(I, J).;false;false
2;true,false,false,true;created(H, G).;false;false
2;true,false,false;created(B, F), created(A, G).;true;true
2;true;haschild(D, B), created(D, C).;false;true
2;true,false;haschild(E, B).;false;true
3;;ismarriedto(A, B) :- created(A, C), created(B, C).;true;false
3;true,true;created(A, E).;false;false
3;true,false,false;created(B, I).;false;false
3;true,false,true;created(H, G).;false;false
3;true;haschild(D, B), created(D, E).;true;true
3;true,false;haschild(F, B), created(A, G).;true;true
4;;ismarriedto(A, B) :- created(A, C), created(B, C).;true;false
4;true,true;created(B, E).;false;false
4;true,false,false;haschild(I, B), created(I, J).;false;false
4;true,false,true;haschild(H, B).;false;false
4;true;haschild(D, B), created(D, E).;true;true
4;true,false;created(A, F), created(B, G).;true;true
5;;ismarriedto(A, B) :- created(B, C), created(A, C).;true;false
5;true,true;created(B, E).;false;false
5;true,false,false;haschild(I, B), created(I, J).;false;false
5;true,false,true;haschild(H, B).;false;false
5;true;haschild(D, B), created(D, E).;true;true
5;true,false;created(A, F), created(B, G).;true;true
6;;ismarriedto(A, B) :- created(A, C), created(B, C).;true;false
6;true,false,false,false;created(A, J).;false;false
6;true,false,false,true;created(H, G), haschild(I, H).;false;false
6;true,false,false;haschild(F, B), created(F, G).;true;true
6;true;haschild(D, B), created(D, C).;false;true
6;true,false;haschild(E, B).;false;true
7;;ismarriedto(A, B) :- created(A, C), created(B, C).;true;false
7;true,true;created(B, E).;false;false
7;true,false,false;created(A, J).;false;false
7;true,false,true;created(H, G), haschild(I, H).;false;false
7;true;haschild(D, B), created(D, E).;true;true
7;true,false;haschild(F, B), created(F, G).;true;true
8;;ismarriedto(A, B) :- created(B, C), created(A, D).;true;false
8;true,true;haschild(E, B), created(E, F).;false;false
8;true,false,false,true;created(K, J).;false;false
8;true,false,false;haschild(I, B), created(B, J).;true;true
8;true,false,false,false;livesin(B, L), created(A, M).;false;false
8;true;created(A, C).;true;true
8;true,false;created(G, D), haschild(H, G).;false;true
9;;ismarriedto(A, B) :- created(B, C), created(A, C).;true;false
9;true,false,false,false;created(A, K).;false;false
9;true,false,false,true;created(I, H), haschild(J, I).;false;false
9;true,false,false;haschild(G, B), created(G, H).;true;true
9;true;created(D, C), haschild(D, B).;false;true
9;true,false;haschild(E, B), created(E, F).;false;true


WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, C) )
%   then if ( haschild(D, B) )
%   | then if ( created(B, E), created(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( created(A, F), created(B, G) )
%   | | then if ( created(H, F) )
%   | | | then return 0.8581489350995127;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.18924513196780698;  // std dev = 72,435, 23.691,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.844 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( haschild(D, B), created(D, E) )
%   | then if ( created(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( created(A, F) )
%   | | then if ( created(G, F) )
%   | | | then return 0.7194734122109538;  // std dev = 2,23e-07, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.16461236041485863;  // std dev = 72,435, 23.691,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.844 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, C) )
%   then if ( haschild(D, B), created(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haschild(E, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( created(B, F), created(A, G) )
%   | | | then if ( created(H, G) )
%   | | | | then return 0.5553664367462836;  // std dev = 3,21e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1405002489950948;  // std dev = 72,435, 23.691,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.844 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( haschild(D, B), created(D, E) )
%   | then if ( created(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( haschild(F, B), created(A, G) )
%   | | then if ( created(H, G) )
%   | | | then return 0.4175135841583102;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( created(B, I) )
%   | | | then return 0.4175135841583105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.11787923130765943;  // std dev = 72,435, 23.691,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.844 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( haschild(D, B), created(D, E) )
%   | then if ( created(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( created(A, F), created(B, G) )
%   | | then if ( haschild(H, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.32071184716015;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.09743694161029307;  // std dev = 72,435, 23.691,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.844 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, C) )
%   then if ( haschild(D, B), created(D, E) )
%   | then if ( created(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( created(A, F), created(B, G) )
%   | | then if ( haschild(H, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2551722425694895;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.07953931756592048;  // std dev = 72,435, 23.691,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.844 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( haschild(D, B), created(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haschild(E, B) )
%   | | then return 0.20975771563253573;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haschild(F, B), created(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( created(A, H) )
%   | | | | then return 0.20975771563253573;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.06427028966736967;  // std dev = 72,435, 23.691,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.844 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( haschild(D, B), created(D, E) )
%   | then if ( created(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( haschild(F, B), created(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( created(A, H) )
%   | | | then return 0.17709649774527716;  // std dev = 2,98e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.05151027124863648;  // std dev = 72,435, 23.691,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.844 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, D) )
%   then if ( created(A, C) )
%   | then if ( haschild(E, B), created(E, F) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1527438580936706;  // std dev = 7,60e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else if ( created(G, D), haschild(H, G) )
%   | | then return -0.03553234884854408;  // std dev = 3,231, 55,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | else if ( haschild(I, B), created(B, J) )
%   | | | then if ( created(K, J) )
%   | | | | then return 0.029922196606001383;  // std dev = 2,332, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( livesin(B, L), created(A, M) )
%   | | | | then return 0.009922196606001332;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | | else return 0.09045317005732881;  // std dev = 8,939, 339,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=129 */
%   else return 0.04050426177668695;  // std dev = 71,748, 23.262,000 (wgt'ed) examples reached here.  /* #neg=15.572 #pos=7.690 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, C) )
%   then if ( created(D, C), haschild(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haschild(E, B), created(E, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( haschild(G, B), created(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( created(A, I) )
%   | | | | then return 0.13400703000801092;  // std dev = 5,37e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.032497129016546986;  // std dev = 72,432, 23.691,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.844 */


Results
   AUC ROC   = 0.507907
   AUC PR    = 0.358489
   CLL	      = -0.633745
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.012874
   F1        = 0.025421


Total learning time: 357.33 seconds
Total inference time: 101.738 seconds
AUC ROC: 0.507907


Structure after Parameter Learning
[['ismarriedto(A, B)', {'': 'created(B, C), created(A, C)', 'true,true': 'created(B, E), created(D, E)', 'true': 'haschild(D, B)', 'true,false': 'created(A, F), created(B, G)', 'true,false,true': 'created(H, F)'}, {'true,true,true': [0.0, 0, 0], 'false': [72.435, 15847, 7844], 'true,true,false': [0.0, 0, 5], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 75]}], ['ismarriedto(A, B)', {'': 'created(A, C), created(B, C)', 'true,true': 'created(B, E)', 'true': 'haschild(D, B), created(D, E)', 'true,false': 'created(A, F)', 'true,false,true': 'created(G, F)'}, {'true,true,true': [0.0, 0, 0], 'false': [72.435, 15847, 7844], 'true,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [2.23e-07, 0, 79]}], ['ismarriedto(A, B)', {'': 'created(B, C), created(A, C)', 'true': 'haschild(D, B), created(D, C)', 'true,false,false': 'created(B, F), created(A, G)', 'true,false,false,true': 'created(H, G)', 'true,false': 'haschild(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 5], 'true,false,false,true,true': [3.21e-07, 0, 75], 'true,false,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [72.435, 15847, 7844]}], ['ismarriedto(A, B)', {'': 'created(A, C), created(B, C)', 'true,true': 'created(A, E)', 'true,false,false': 'created(B, I)', 'true,false,true': 'created(H, G)', 'true': 'haschild(D, B), created(D, E)', 'true,false': 'haschild(F, B), created(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'false': [72.435, 15847, 7844], 'true,false,false,true': [0.0, 0, 75], 'true,false,true,true': [0.0, 0, 4]}], ['ismarriedto(A, B)', {'': 'created(A, C), created(B, C)', 'true,true': 'created(B, E)', 'true': 'haschild(D, B), created(D, E)', 'true,false': 'created(A, F), created(B, G)', 'true,false,true': 'haschild(H, B)'}, {'true,true,true': [0.0, 0, 0], 'false': [72.435, 15847, 7844], 'true,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 75], 'true,false,true,true': [0.0, 0, 4]}], ['ismarriedto(A, B)', {'': 'created(B, C), created(A, C)', 'true,true': 'created(B, E)', 'true': 'haschild(D, B), created(D, E)', 'true,false': 'created(A, F), created(B, G)', 'true,false,true': 'haschild(H, B)'}, {'true,true,true': [0.0, 0, 0], 'false': [72.435, 15847, 7844], 'true,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 75], 'true,false,true,true': [0.0, 0, 4]}], ['ismarriedto(A, B)', {'': 'created(A, C), created(B, C)', 'true,false,false,false': 'created(A, H)', 'true': 'haschild(D, B), created(D, C)', 'true,false,false': 'haschild(F, B), created(F, G)', 'true,false': 'haschild(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 5], 'true,false,false,false,true': [0.0, 0, 75], 'false': [72.435, 15847, 7844], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'created(A, C), created(B, C)', 'true,true': 'created(B, E)', 'true': 'haschild(D, B), created(D, E)', 'true,false,false': 'created(A, H)', 'true,false': 'haschild(F, B), created(F, G)'}, {'true,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 0], 'false': [72.435, 15847, 7844], 'true,false,false,true': [2.98e-08, 0, 79]}], ['ismarriedto(A, B)', {'': 'created(B, C), created(A, D)', 'true,true': 'haschild(E, B), created(E, F)', 'true': 'created(A, C)', 'true,false,false': 'haschild(I, B), created(B, J)', 'true,false,false,false': 'livesin(B, L), created(A, M)', 'true,false,false,true': 'created(K, J)', 'true,false': 'created(G, D), haschild(H, G)'}, {'true,true,true': [0.0, 0, 1], 'true,false,true': [3.231, 41, 14], 'true,true,false': [7.6e-08, 0, 79], 'true,false,false,false,true': [1.449, 7, 3], 'true,false,false,true,true': [2.332, 17, 8], 'true,false,false,true,false': [0.0, 0, 0], 'false': [71.748, 15572, 7690], 'true,false,false,false,false': [8.939, 210, 129]}], ['ismarriedto(A, B)', {'': 'created(B, C), created(A, C)', 'true,false,false,false': 'created(A, I)', 'true': 'created(D, C), haschild(D, B)', 'true,false,false': 'haschild(G, B), created(G, H)', 'true,false': 'haschild(E, B), created(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 1], 'true,false,false,false,true': [5.37e-08, 0, 79], 'false': [72.432, 15847, 7844], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 0]}]]
[{'': [-7.993605777301127e-16, 0.22147150528725482], 'true,true': [nan, 0.0], 'true': [0.0, -1.4210854715202005e-15], 'true,false,true': [-1.4210854715202005e-15, nan], 'true,false': [-1.4210854715202005e-15, nan]}, {'': [7.105427357601002e-16, 0.2214715052876936], 'true,false,true': [6.295948291545192e-16, nan], 'true': [0.0, 5.396527107038736e-16], 'true,true': [nan, 0.0], 'true,false': [6.295948291545192e-16, nan]}, {'': [1.4210854715202005e-15, 0.2214715052877743], 'true': [nan, 1.3322676295501878e-15], 'true,false,false,true': [1.3737159558028603e-15, nan], 'true,false,false': [1.3737159558028603e-15, nan], 'true,false': [-4.4408920985006264e-17, 1.3737159558028603e-15]}, {'': [2.2204460492503132e-17, 0.22147150528774853], 'true,true': [nan, 0.0], 'true,false,false': [-1.1842378929335003e-16, nan], 'true,false,true': [0.0, nan], 'true': [0.0, -8.994211845064559e-17], 'true,false': [0.0, -1.1842378929335003e-16]}, {'': [-3.9968028886505636e-16, 0.22147150528746015], 'true,true': [nan, 0.0], 'true': [0.0, -3.5976847380258237e-16], 'true,false,true': [0.0, -3.789561257387201e-16], 'true,false': [-3.822540034152438e-16, nan]}, {'': [-1.1102230246251566e-17, 0.22147150528769316], 'true,true': [nan, 0.0], 'true': [0.0, -3.37282944189921e-17], 'true,false,true': [0.0, -1.1842378929335004e-17], 'true,false': [-2.2485529612661398e-17, nan]}, {'': [-7.771561172376095e-17, 0.2214715052875296], 'true,false,false,false': [-1.0066022089934752e-16, nan], 'true': [nan, -9.992007221626409e-17], 'true,false,false': [nan, -1.0066022089934752e-16], 'true,false': [-5.551115123125783e-18, -1.0066022089934752e-16]}, {'': [1.6653345369377347e-17, 0.22147150528744813], 'true,true': [nan, 0.0], 'true': [0.0, 5.6213824031653495e-18], 'true,false,false': [1.1242764806330699e-17, nan], 'true,false': [nan, 5.6213824031653495e-18]}, {'': [0.19487619007414012, 0.22129756335826922], 'true,false,false,false': [0.21000000000000002, 0.23572715169551325], 'true,false,false,true': [0.21759999999999985, nan], 'true,false,false': [0.21759999999999985, 0.23517048300096127], 'true': [8.881784197001253e-17, 0.23011176857330773], 'true,true': [0.0, 7.307797124114954e-17], 'true,false': [0.18975206611570275, 0.23420744087620532]}, {'': [3.608224830031759e-17, 0.22145294846727448], 'true,false,false,false': [3.653898562057477e-17, nan], 'true': [nan, 3.608224830031759e-17], 'true,false,false': [nan, 3.653898562057477e-17], 'true,false': [0.0, 3.653898562057477e-17]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;ismarriedto(A, B) :- created(B, C), created(A, C).;true;true', '0;true;haschild(D, B).;true;true', '1;;ismarriedto(A, B) :- created(A, C), created(B, C).;true;true', '1;true;haschild(D, B), created(D, E).;true;true', '2;;ismarriedto(A, B) :- created(B, C), created(A, C).;true;true', '2;true;haschild(E, B).;true;true', '3;;ismarriedto(A, B) :- created(A, C), created(B, C).;true;true', '3;true;haschild(D, B), created(D, E).;true;true', '3;true,false;haschild(F, B), created(A, G).;true;true', '4;;ismarriedto(A, B) :- created(A, C), created(B, C).;true;true', '4;true;haschild(D, B), created(D, E).;true;true', '4;true,false;haschild(H, B).;true;true', '5;;ismarriedto(A, B) :- created(B, C), created(A, C).;true;true', '5;true;haschild(D, B), created(D, E).;true;true', '5;true,false;haschild(H, B).;true;true', '6;;ismarriedto(A, B) :- created(A, C), created(B, C).;true;true', '6;true;haschild(E, B).;true;true', '7;;ismarriedto(A, B) :- created(A, C), created(B, C).;true;true', '7;true;haschild(D, B), created(D, E).;true;true', '8;;ismarriedto(A, B) :- created(B, C), created(A, D).;true;true', '8;true,true;haschild(E, B), created(E, F).;true;true', '8;true;created(A, C).;true;true', '9;;ismarriedto(A, B) :- created(B, C), created(A, C).;true;true', '9;true;haschild(E, B), created(E, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, C) )
%   then if ( haschild(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995127;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haschild(B, E), haschild(A, F) )
%   | then if ( haschild(A, E) )
%   | | then return 0.8581489350995075;  // std dev = 4,68e-06, 1.088,000 (wgt'ed) examples reached here.  /* #pos=1.088 */
%   | | else if ( haschild(F, G), haschild(H, B) )
%   | | | then return 0.012469922753832893;  // std dev = 4,598, 162,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=25 */
%   | | | else return -0.07531486137798311;  // std dev = 5,634, 511,000 (wgt'ed) examples reached here.  /* #neg=477 #pos=34 */
%   | else if ( haschild(A, I) )
%   | | then if ( actedin(B, J), haschild(K, A) )
%   | | | then return -0.1271883083022473;  // std dev = 2,220, 341,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=5 */
%   | | | else return 0.03825829941939857;  // std dev = 20,787, 2.926,000 (wgt'ed) examples reached here.  /* #neg=2.399 #pos=527 */
%   | | else if ( actedin(A, L), actedin(B, M) )
%   | | | then return 0.43030636950183976;  // std dev = 18,326, 1.372,000 (wgt'ed) examples reached here.  /* #neg=587 #pos=785 */
%   | | | else return 0.16929346115352367;  // std dev = 60,877, 17.291,000 (wgt'ed) examples reached here.  /* #neg=11.911 #pos=5.380 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( haschild(D, B), created(D, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.719473412210954;  // std dev = 2,58e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( iscitizenof(A, F), iscitizenof(B, F) )
%   | then if ( haschild(B, G), exports(F, H) )
%   | | then if ( haschild(A, G) )
%   | | | then return 0.7194734122109554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17986828779254815;  // std dev = 0,804, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( wasbornin(A, I), graduatedfrom(A, J) )
%   | | | then return 0.5029330711939642;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.8097692542835091;  // std dev = 1,403, 83,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=81 */
%   | else if ( haschild(B, K), haschild(A, K) )
%   | | then return 0.7194734122109588;  // std dev = 0,000, 1.082,000 (wgt'ed) examples reached here.  /* #pos=1.082 */
%   | | else if ( actedin(A, L), actedin(B, M) )
%   | | | then return 0.36171882109297215;  // std dev = 19,107, 1.488,000 (wgt'ed) examples reached here.  /* #neg=655 #pos=833 */
%   | | | else return 0.11775987809824445;  // std dev = 64,764, 21.025,000 (wgt'ed) examples reached here.  /* #neg=15.186 #pos=5.839 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.5553664367462836;  // std dev = 3,73e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haschild(D, A), haschild(E, B) )
%   | then if ( haschild(F, D), haschild(G, E) )
%   | | then if ( haschild(B, H), haschild(A, H) )
%   | | | then return 0.5553664367462832;  // std dev = 2,38e-07, 282,000 (wgt'ed) examples reached here.  /* #pos=282 */
%   | | | else return 0.32369324189467225;  // std dev = 9,836, 393,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=194 */
%   | | else if ( actedin(A, I), edited(J, I) )
%   | | | then return -0.08103238072535274;  // std dev = 1,520, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.25463239166810636;  // std dev = 10,998, 601,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=288 */
%   | else if ( haschild(A, K), haschild(B, K) )
%   | | then if ( iscitizenof(K, L), iscitizenof(B, L) )
%   | | | then return 0.5508876556185388;  // std dev = 0,028, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5553664367462832;  // std dev = 1,28e-06, 676,000 (wgt'ed) examples reached here.  /* #pos=676 */
%   | | else if ( haschild(A, M) )
%   | | | then return -0.024493882187241172;  // std dev = 20,137, 3.517,000 (wgt'ed) examples reached here.  /* #neg=3.043 #pos=474 */
%   | | | else return 0.13780716500118478;  // std dev = 62,695, 18.183,000 (wgt'ed) examples reached here.  /* #neg=12.266 #pos=5.917 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.41751358415831036;  // std dev = 9,13e-09, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haschild(D, A), actedin(B, E) )
%   | then if ( haschild(F, D) )
%   | | then if ( wasbornin(A, G), isleaderof(H, G) )
%   | | | then return 0.010230118578523038;  // std dev = 1,849, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return -0.15229345456388577;  // std dev = 1,675, 370,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=3 */
%   | | else if ( actedin(A, I), directed(J, E) )
%   | | | then return 0.23994543986021374;  // std dev = 3,957, 66,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | | | else return -0.10663712836237368;  // std dev = 3,875, 229,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=17 */
%   | else if ( haschild(K, A), haschild(L, B) )
%   | | then if ( haschild(A, M), haschild(B, M) )
%   | | | then return 0.43959934023014385;  // std dev = 0,681, 401,000 (wgt'ed) examples reached here.  /* #pos=401 */
%   | | | else return 0.20258889501916855;  // std dev = 14,304, 863,000 (wgt'ed) examples reached here.  /* #neg=504 #pos=359 */
%   | | else if ( actedin(B, N) )
%   | | | then return 0.15198681115560658;  // std dev = 29,828, 4.017,000 (wgt'ed) examples reached here.  /* #neg=2.470 #pos=1.547 */
%   | | | else return 0.1000817128732287;  // std dev = 59,088, 17.720,000 (wgt'ed) examples reached here.  /* #neg=12.243 #pos=5.477 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.3207118471601501;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( actedin(B, D), haschild(E, A) )
%   | then if ( haswonprize(B, F), wasbornin(E, G) )
%   | | then if ( isleaderof(H, G) )
%   | | | then return 0.6430908933221762;  // std dev = 0,835, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.006539811220098984;  // std dev = 1,785, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( actedin(A, I), edited(J, I) )
%   | | | then return 0.1705376051636109;  // std dev = 3,351, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return -0.12131362948436038;  // std dev = 4,167, 603,000 (wgt'ed) examples reached here.  /* #neg=583 #pos=20 */
%   | else if ( haschild(K, B), actedin(A, L) )
%   | | then if ( actedin(B, M) )
%   | | | then return 0.22599325687313043;  // std dev = 4,160, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return -0.1725256000297223;  // std dev = 4,525, 523,000 (wgt'ed) examples reached here.  /* #neg=501 #pos=22 */
%   | | else if ( haschild(N, B), haschild(P, A) )
%   | | | then return 0.229839104893845;  // std dev = 14,378, 1.234,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=759 */
%   | | | else return 0.09684225456674295;  // std dev = 65,612, 21.170,000 (wgt'ed) examples reached here.  /* #neg=14.209 #pos=6.961 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.25517224256948967;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haschild(B, D), haschild(A, D) )
%   | then if ( haschild(E, B), haschild(F, A) )
%   | | then if ( haschild(G, F), haschild(H, E) )
%   | | | then return 0.2684644668739165;  // std dev = 0,000, 282,000 (wgt'ed) examples reached here.  /* #pos=282 */
%   | | | else return 0.3326187703970645;  // std dev = 0,141, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | else if ( actedin(B, I) )
%   | | | then return 0.35406163648664635;  // std dev = 0,077, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return 0.37058980656105894;  // std dev = 0,071, 637,000 (wgt'ed) examples reached here.  /* #pos=637 */
%   | else if ( actedin(A, J), actedin(B, K) )
%   | | then if ( actedin(B, J) )
%   | | | then return 0.625112034406005;  // std dev = 2,460, 198,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=192 */
%   | | | else return 0.15433524911167418;  // std dev = 17,867, 1.290,000 (wgt'ed) examples reached here.  /* #neg=649 #pos=641 */
%   | | else if ( haschild(B, L) )
%   | | | then return -0.07510867952331828;  // std dev = 20,803, 3.446,000 (wgt'ed) examples reached here.  /* #neg=2.917 #pos=529 */
%   | | | else return 0.07731977505286446;  // std dev = 60,464, 17.669,000 (wgt'ed) examples reached here.  /* #neg=12.275 #pos=5.394 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.2097577156325357;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haschild(D, B), actedin(A, E) )
%   | then if ( actedin(B, F) )
%   | | then if ( created(D, G), wasbornin(B, H) )
%   | | | then return -0.17365664462126015;  // std dev = 1,503, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.20791032434933393;  // std dev = 3,736, 66,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=43 */
%   | | else if ( haschild(I, D), created(J, E) )
%   | | | then return -0.18138231723624706;  // std dev = 1,018, 267,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=1 */
%   | | | else return -0.10765680435119251;  // std dev = 4,290, 256,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=21 */
%   | else if ( haschild(K, A), created(B, L) )
%   | | then if ( haschild(M, K), haschild(N, M) )
%   | | | then return -0.1550698657425947;  // std dev = 2,498, 226,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=17 */
%   | | | else return -0.04919288829704386;  // std dev = 5,312, 231,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=44 */
%   | | else if ( isaffiliatedto(A, P), isaffiliatedto(B, Q) )
%   | | | then return 0.3363137834145561;  // std dev = 8,617, 352,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=221 */
%   | | | else return 0.06457434629898896;  // std dev = 65,875, 22.280,000 (wgt'ed) examples reached here.  /* #neg=14.786 #pos=7.494 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.17709649774527716;  // std dev = 3,73e-09, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( actedin(A, D), actedin(B, D) )
%   | then if ( haschild(B, E) )
%   | | then if ( directed(B, F), wasbornin(E, G) )
%   | | | then return -0.12411405004294163;  // std dev = 0,786, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3164992325592101;  // std dev = 0,995, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else if ( created(H, D), wrotemusicfor(H, D) )
%   | | | then return 0.3183948811695115;  // std dev = 0,913, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.47915734123661063;  // std dev = 1,494, 178,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=176 */
%   | else if ( haschild(B, I), actedin(A, J) )
%   | | then if ( haschild(A, I) )
%   | | | then return 0.27092849526143903;  // std dev = 0,150, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.1364660196163872;  // std dev = 6,355, 638,000 (wgt'ed) examples reached here.  /* #neg=586 #pos=52 */
%   | | else if ( diedin(A, K), diedin(B, K) )
%   | | | then return 0.5339808853003193;  // std dev = 3,317, 140,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=134 */
%   | | | else return 0.04733723352133807;  // std dev = 66,141, 22.652,000 (wgt'ed) examples reached here.  /* #neg=15.249 #pos=7.403 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, D) )
%   then if ( created(A, C) )
%   | then return 0.15274385809367058;  // std dev = 9,13e-09, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | else if ( wrotemusicfor(A, E), actedin(B, F) )
%   | | then if ( actedin(A, G) )
%   | | | then return 0.23452203848019015;  // std dev = 0,796, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7259541938202896;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( influences(H, B), haswonprize(H, I) )
%   | | | then return 0.24136284355458995;  // std dev = 2,675, 34,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return 0.04414799225680438;  // std dev = 8,879, 388,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=129 */
%   else if ( diedin(A, J), diedin(B, J) )
%   | then return 0.42701826953602506;  // std dev = 0,270, 140,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=134 */
%   | else if ( haschild(A, K), haschild(B, K) )
%   | | then return 0.24276281058104834;  // std dev = 0,029, 1.031,000 (wgt'ed) examples reached here.  /* #pos=1.031 */
%   | | else if ( haschild(A, L) )
%   | | | then return -0.06914621514775977;  // std dev = 21,333, 3.867,000 (wgt'ed) examples reached here.  /* #neg=3.304 #pos=563 */
%   | | | else return 0.04745609253105474;  // std dev = 61,795, 18.224,000 (wgt'ed) examples reached here.  /* #neg=12.262 #pos=5.962 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, C) )
%   then return 0.13400703000801092;  // std dev = 5,89e-09, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haschild(A, D), haschild(B, D) )
%   | then if ( haschild(E, A), haschild(F, E) )
%   | | then if ( haschild(G, B), haschild(H, G) )
%   | | | then return 0.16225169296444905;  // std dev = 0,266, 282,000 (wgt'ed) examples reached here.  /* #pos=282 */
%   | | | else return 0.21342469034171993;  // std dev = 0,302, 184,000 (wgt'ed) examples reached here.  /* #pos=184 */
%   | | else if ( diedin(A, I), hascapital(J, I) )
%   | | | then return 0.18506552676299226;  // std dev = 0,335, 63,000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return 0.21276243032102396;  // std dev = 0,449, 559,000 (wgt'ed) examples reached here.  /* #pos=559 */
%   | else if ( haschild(B, K) )
%   | | then if ( wasbornin(A, L) )
%   | | | then return -0.13011741928808318;  // std dev = 9,189, 981,000 (wgt'ed) examples reached here.  /* #neg=876 #pos=105 */
%   | | | else return -0.057096064070379225;  // std dev = 18,932, 2.556,000 (wgt'ed) examples reached here.  /* #neg=2.091 #pos=465 */
%   | | else if ( haschild(A, M) )
%   | | | then return -0.04550453107495125;  // std dev = 20,413, 3.267,000 (wgt'ed) examples reached here.  /* #neg=2.735 #pos=532 */
%   | | | else return 0.060301877391185144;  // std dev = 58,961, 15.799,000 (wgt'ed) examples reached here.  /* #neg=10.145 #pos=5.654 */


Results
   AUC ROC   = 0.712232
   AUC PR    = 0.620125
   CLL	      = -0.55392
   Precision = 0.986718 at threshold = 0.5
   Recall    = 0.178152
   F1        = 0.301812


Total learning time: 1162.178 seconds
Total inference time: 70.264 seconds
AUC ROC: 0.712232


Refined model AUC ROC: 0.712232


Dataset: 19_uwcse_yago2s, Fold: 1, Type: transfer, Time: 04:04:59
{'AUC ROC': 0.712232, 'Precision': [0.986718, 0.5], 'Mapping results': {'Generating mappings time': 8.23603343963623, 'Knowledge compiling time': 22.87808895111084, 'Finding best mapping': 2.926309823989868, 'Possible mappings': 10976, 'Total time': 36.95366168022156, 'Generating paths time': 2.913222551345825}, 'Inference time': 70.264, 'CLL': -0.55392, 'AUC PR': 0.620125, 'Learning time': 1519.508, 'Parameter Learning results': {'AUC ROC': 0.507907, 'Precision': [1.0, 0.5], 'Inference time': 101.738, 'CLL': -0.633745, 'AUC PR': 0.358489, 'Learning time': 357.33, 'Recall': 0.012874, 'F1': 0.025421}, 'Recall': 0.178152, 'F1': 0.301812}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then return 0.8581489350995075;  // std dev = 4,70e-06, 1.093,000 (wgt'ed) examples reached here.  /* #pos=1.093 */
%   else if ( actedin(B, D), actedin(A, E) )
%   | then if ( created(F, D), created(F, E) )
%   | | then if ( edited(G, D), iscitizenof(F, H) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8273797043302801;  // std dev = 2,412, 195,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=189 */
%   | | else if ( actedin(A, D) )
%   | | | then return 0.8392810105712104;  // std dev = 0,991, 53,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return 0.3388252636019229;  // std dev = 17,608, 1.242,000 (wgt'ed) examples reached here.  /* #neg=645 #pos=597 */
%   | else if ( haschild(A, I) )
%   | | then if ( actedin(B, J) )
%   | | | then return -0.10810873361214418;  // std dev = 4,611, 652,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=22 */
%   | | | else return 0.02318830517824737;  // std dev = 20,917, 3.175,000 (wgt'ed) examples reached here.  /* #neg=2.651 #pos=524 */
%   | | else if ( haschild(B, K) )
%   | | | then return 0.02895080493050328;  // std dev = 19,846, 2.781,000 (wgt'ed) examples reached here.  /* #neg=2.306 #pos=475 */
%   | | | else return 0.19909857143823553;  // std dev = 57,226, 14.574,000 (wgt'ed) examples reached here.  /* #neg=9.605 #pos=4.969 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( actedin(B, C), created(A, D) )
%   then if ( actedin(E, D), actedin(E, C) )
%   | then return 0.724485295280306;  // std dev = 0,262, 81,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=75 */
%   | else if ( created(B, D) )
%   | | then return 0.8144773432907046;  // std dev = 0,150, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( haschild(A, F) )
%   | | | then return 0.08763561667827337;  // std dev = 3,827, 86,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   | | | else return 0.27076025512868246;  // std dev = 11,630, 557,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=250 */
%   else if ( haschild(B, G), haschild(A, G) )
%   | then return 0.7194734122109588;  // std dev = 0,000, 1.082,000 (wgt'ed) examples reached here.  /* #pos=1.082 */
%   | else if ( haschild(A, H) )
%   | | then if ( haschild(I, B), haschild(J, A) )
%   | | | then return 0.13562854115474676;  // std dev = 9,206, 422,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=118 */
%   | | | else return -0.010129520982418901;  // std dev = 19,784, 3.438,000 (wgt'ed) examples reached here.  /* #neg=2.980 #pos=458 */
%   | | else if ( actedin(B, K), actedin(A, L) )
%   | | | then return 0.37083167669943146;  // std dev = 16,405, 1.148,000 (wgt'ed) examples reached here.  /* #neg=490 #pos=658 */
%   | | | else return 0.1453981314739386;  // std dev = 60,041, 16.941,000 (wgt'ed) examples reached here.  /* #neg=11.696 #pos=5.245 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(D, B) )
%   then if ( haschild(B, E), haschild(A, E) )
%   | then return 0.5557298303877557;  // std dev = 0,146, 402,000 (wgt'ed) examples reached here.  /* #pos=402 */
%   | else if ( haschild(B, F), haschild(A, G) )
%   | | then return -0.03212662015803717;  // std dev = 0,336, 169,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=22 */
%   | | else if ( haschild(H, D), haschild(I, C) )
%   | | | then return 0.42547805419231505;  // std dev = 8,562, 308,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=184 */
%   | | | else return 0.20187165154811643;  // std dev = 9,935, 427,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=160 */
%   else if ( haschild(J, A) )
%   | then if ( haschild(B, K), haschild(A, K) )
%   | | then return 0.5553664367462832;  // std dev = 6,42e-07, 208,000 (wgt'ed) examples reached here.  /* #pos=208 */
%   | | else return 0.01405368539233118;  // std dev = 0,376, 3.009,000 (wgt'ed) examples reached here.  /* #neg=2.473 #pos=536 */
%   | else if ( haschild(L, B), actedin(A, M) )
%   | | then return -0.07608529378080764;  // std dev = 0,290, 568,000 (wgt'ed) examples reached here.  /* #neg=504 #pos=64 */
%   | | else if ( actedin(B, N), actedin(A, P) )
%   | | | then return 0.3065503922659078;  // std dev = 17,719, 1.370,000 (wgt'ed) examples reached here.  /* #neg=585 #pos=785 */
%   | | | else return 0.1329008511323808;  // std dev = 59,972, 17.310,000 (wgt'ed) examples reached here.  /* #neg=11.747 #pos=5.563 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then if ( wasbornin(A, D), haswonprize(B, E) )
%   | then if ( haschild(B, F), diedin(G, D) )
%   | | then return 0.07991600760267688;  // std dev = 1,137, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.593279419856148;  // std dev = 0,236, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( created(H, C), hasmusicalrole(H, I) )
%   | | then return 0.3949402780419132;  // std dev = 0,905, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.5628497717820015;  // std dev = 0,112, 182,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=180 */
%   else if ( haschild(B, J), haschild(A, J) )
%   | then return 0.4631287703410912;  // std dev = 0,053, 1.076,000 (wgt'ed) examples reached here.  /* #pos=1.076 */
%   | else if ( haschild(B, K) )
%   | | then if ( haschild(L, A) )
%   | | | then return 0.07484274958965248;  // std dev = 11,286, 714,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=177 */
%   | | | else return -0.04402246228203294;  // std dev = 18,086, 2.813,000 (wgt'ed) examples reached here.  /* #neg=2.427 #pos=386 */
%   | | else if ( haschild(A, M) )
%   | | | then return 0.003389927075828114;  // std dev = 20,640, 3.258,000 (wgt'ed) examples reached here.  /* #neg=2.735 #pos=523 */
%   | | | else return 0.13684174611701894;  // std dev = 59,461, 15.693,000 (wgt'ed) examples reached here.  /* #neg=10.142 #pos=5.551 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), actedin(B, D) )
%   then if ( haschild(E, C) )
%   | then return -0.14198053760236898;  // std dev = 0,122, 395,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=8 */
%   | else if ( actedin(A, F), haswonprize(B, G) )
%   | | then if ( diedin(B, H) )
%   | | | then return -0.003685391792267234;  // std dev = 0,655, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.535776323299438;  // std dev = 1,371, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return -0.07399080138867076;  // std dev = 0,310, 274,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=35 */
%   else if ( haschild(A, I), haschild(B, I) )
%   | then return 0.35364060196731834;  // std dev = 1,624, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   | else if ( haschild(A, J) )
%   | | then if ( isaffiliatedto(B, K) )
%   | | | then return -0.09579164718091701;  // std dev = 4,215, 328,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=19 */
%   | | | else return 0.01385820906802643;  // std dev = 21,315, 3.250,000 (wgt'ed) examples reached here.  /* #neg=2.681 #pos=569 */
%   | | else if ( isaffiliatedto(B, L), isaffiliatedto(A, M) )
%   | | | then return 0.40814159566692665;  // std dev = 8,203, 294,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=187 */
%   | | | else return 0.09583184994753718;  // std dev = 62,066, 18.117,000 (wgt'ed) examples reached here.  /* #neg=12.120 #pos=5.997 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), actedin(A, D) )
%   then if ( haschild(A, C) )
%   | then return 0.3181919686163547;  // std dev = 0,330, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( wasbornin(C, E), isleaderof(F, E) )
%   | | then if ( actedin(B, G), wasbornin(F, H) )
%   | | | then return 0.5337222198655915;  // std dev = 1,346, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.053864635087989166;  // std dev = 3,521, 101,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=17 */
%   | | else return -0.12939645683404113;  // std dev = 0,216, 536,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=33 */
%   else if ( haschild(I, A), actedin(B, J) )
%   | then if ( haschild(K, I), haschild(L, K) )
%   | | then return -0.13598106654802303;  // std dev = 0,064, 308,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=2 */
%   | | else return -0.049479222401913034;  // std dev = 0,308, 374,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=53 */
%   | else if ( haschild(B, M), haschild(A, M) )
%   | | then return 0.2757125112470714;  // std dev = 1,359, 1.028,000 (wgt'ed) examples reached here.  /* #pos=1.028 */
%   | | else if ( haschild(B, N) )
%   | | | then return -0.009451700257766078;  // std dev = 20,250, 2.849,000 (wgt'ed) examples reached here.  /* #neg=2.338 #pos=511 */
%   | | | else return 0.08784475989819465;  // std dev = 62,683, 18.496,000 (wgt'ed) examples reached here.  /* #neg=12.293 #pos=6.203 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( actedin(A, C), directed(B, D) )
%   then if ( actedin(A, D) )
%   | then if ( actedin(B, E) )
%   | | then return 0.4924484377740617;  // std dev = 0,132, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.7138320985446592;  // std dev = 0,120, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else if ( created(A, C) )
%   | | then return -0.26795566075859495;  // std dev = 0,125, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( created(B, F), edited(G, C) )
%   | | | then return 0.03733463648716559;  // std dev = 4,320, 93,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   | | | else return 0.23032596580887996;  // std dev = 7,165, 223,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=125 */
%   else if ( created(A, H), actedin(B, H) )
%   | then return 0.5295303258381535;  // std dev = 0,130, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( haschild(B, I), haschild(A, I) )
%   | | then return 0.22600731745576105;  // std dev = 1,237, 1.081,000 (wgt'ed) examples reached here.  /* #pos=1.081 */
%   | | else if ( haschild(B, J) )
%   | | | then return -0.026180547596271347;  // std dev = 21,172, 3.506,000 (wgt'ed) examples reached here.  /* #neg=2.949 #pos=557 */
%   | | | else return 0.062165349355122856;  // std dev = 62,212, 18.736,000 (wgt'ed) examples reached here.  /* #neg=12.722 #pos=6.014 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( actedin(A, C), actedin(B, D) )
%   then if ( wrotemusicfor(E, C), wrotemusicfor(E, D) )
%   | then return 0.34981258929108466;  // std dev = 0,294, 247,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=219 */
%   | else if ( wasbornin(A, F), haswonprize(A, G) )
%   | | then if ( edited(H, D), directed(H, I) )
%   | | | then return -0.29153356810503456;  // std dev = 1,296, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return -0.02937150488453991;  // std dev = 4,113, 87,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | else if ( actedin(A, D) )
%   | | | then return 0.35201310589599977;  // std dev = 1,062, 72,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=71 */
%   | | | else return 0.110637085761715;  // std dev = 16,242, 1.101,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=549 */
%   else if ( haschild(B, J), haschild(A, J) )
%   | then return 0.18854155172110593;  // std dev = 1,062, 1.062,000 (wgt'ed) examples reached here.  /* #pos=1.062 */
%   | else if ( diedin(A, K), diedin(B, K) )
%   | | then return 0.6752793392831061;  // std dev = 0,250, 90,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=84 */
%   | | else if ( haschild(A, L) )
%   | | | then return -0.029117459642691454;  // std dev = 20,980, 3.810,000 (wgt'ed) examples reached here.  /* #neg=3.279 #pos=531 */
%   | | | else return 0.04544754725492967;  // std dev = 59,882, 17.282,000 (wgt'ed) examples reached here.  /* #neg=11.907 #pos=5.375 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( actedin(B, C), actedin(A, D) )
%   then if ( directed(E, C), directed(E, D) )
%   | then return 0.30397434709034543;  // std dev = 0,226, 260,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=245 */
%   | else if ( haswonprize(A, F), wasbornin(B, G) )
%   | | then if ( wrotemusicfor(H, C), edited(I, D) )
%   | | | then return 0.03560720300256061;  // std dev = 3,604, 62,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | | | else return -0.21527167290443952;  // std dev = 2,264, 43,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( wrotemusicfor(J, D), wrotemusicfor(J, C) )
%   | | | then return 0.27101629667991267;  // std dev = 3,428, 83,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=67 */
%   | | | else return 0.07325700394458294;  // std dev = 16,001, 1.079,000 (wgt'ed) examples reached here.  /* #neg=553 #pos=526 */
%   else if ( actedin(A, K), directed(L, K) )
%   | then return -0.03626504752626393;  // std dev = 0,401, 3.210,000 (wgt'ed) examples reached here.  /* #neg=2.474 #pos=736 */
%   | else if ( actedin(B, M), haschild(N, A) )
%   | | then return -0.12036340025316263;  // std dev = 0,163, 610,000 (wgt'ed) examples reached here.  /* #neg=592 #pos=18 */
%   | | else if ( wasbornin(B, P), wasbornin(A, P) )
%   | | | then return 0.5282854886579796;  // std dev = 2,485, 79,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=76 */
%   | | | else return 0.04926554643897717;  // std dev = 59,095, 18.345,000 (wgt'ed) examples reached here.  /* #neg=12.123 #pos=6.222 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(D, A) )
%   then if ( haschild(A, E) )
%   | then return 0.10083762748574347;  // std dev = 0,311, 826,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=520 */
%   | else if ( actedin(A, F), edited(G, F) )
%   | | then return -0.24260819333047184;  // std dev = 0,218, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( isaffiliatedto(C, H), haschild(I, D) )
%   | | | then return -0.28064191122511434;  // std dev = 0,119, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.2482291574690574;  // std dev = 10,347, 452,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=248 */
%   else if ( actedin(A, J), isaffiliatedto(B, K) )
%   | then return -0.1694977936051154;  // std dev = 0,280, 330,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=32 */
%   | else if ( isaffiliatedto(B, L), isaffiliatedto(A, M) )
%   | | then if ( isaffiliatedto(B, M) )
%   | | | then return 0.4851919352769822;  // std dev = 4,221, 184,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=168 */
%   | | | else return -0.02046629777641742;  // std dev = 5,640, 163,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=51 */
%   | | else if ( haschild(A, N), haschild(B, N) )
%   | | | then return 0.16734674897952553;  // std dev = 0,756, 662,000 (wgt'ed) examples reached here.  /* #pos=662 */
%   | | | else return 0.019629687717223152;  // std dev = 63,423, 21.126,000 (wgt'ed) examples reached here.  /* #neg=14.883 #pos=6.243 */


Results
   AUC ROC   = 0.726831
   AUC PR    = 0.633692
   CLL	      = -0.547637
   Precision = 0.983926 at threshold = 0.5
   Recall    = 0.18156
   F1        = 0.306553


Total learning time: 956.004 seconds
Total inference time: 105.625 seconds
AUC ROC: 0.726831


Dataset: 19_uwcse_yago2s, Fold: 1, Type: scratch, Time: 04:22:44
{'AUC ROC': 0.726831, 'Precision': [0.983926, 0.5], 'Inference time': 105.625, 'CLL': -0.547637, 'AUC PR': 0.633692, 'Learning time': 956.004, 'Recall': 0.18156, 'F1': 0.306553}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 23.268052101135254
   Generating paths time   = 2.88687801361084
   Generating mappings time   = 8.151480674743652
   Possible mappings   = 10976
   Finding best mapping   = 2.9100875854492188
   Total time   = 37.21650505065918


Best mapping found: ['advisedby(A,B) -> ismarriedto(A,B)', 'publication(A,B) -> haschild(B,A)', 'projectmember(A,B) -> created(B,A)', 'tempadvisedby(A,B) -> haschild(A,B)'] 

Transferred target predicate: ismarriedto 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;ismarriedto(A, B) :- haschild(B, C), haschild(A, C).;true;false
0;true,true;haschild(B, E), haschild(D, E).;false;false
0;true,false,false;haschild(I, B), haschild(I, J).;false;false
0;true,false,true;haschild(H, F).;false;false
0;true;haschild(D, B).;true;true
0;true,false;haschild(A, F), haschild(B, G).;true;true
1;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;false
1;true,true;haschild(B, E).;false;false
1;true,false,false;haschild(H, B).;false;false
1;true,false,true;haschild(G, F).;false;false
1;true;haschild(D, B), haschild(D, E).;true;true
1;true,false;haschild(A, F).;true;true
2;;ismarriedto(A, B) :- haschild(B, C), haschild(A, C).;true;false
2;true,false,false,false;haschild(I, B), haschild(I, J).;false;false
2;true,false,false,true;haschild(H, G).;false;false
2;true,false,false;haschild(B, F), haschild(A, G).;true;true
2;true;haschild(D, B), haschild(D, C).;false;true
2;true,false;haschild(E, B).;false;true
3;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;false
3;true,true;haschild(A, E).;false;false
3;true,false,false;haschild(B, I).;false;false
3;true,false,true;haschild(H, G).;false;false
3;true;haschild(D, B), haschild(D, E).;true;true
3;true,false;haschild(F, B), haschild(A, G).;true;true
4;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;false
4;true,true;haschild(B, E).;false;false
4;true,false,false;haschild(I, B), haschild(I, J).;false;false
4;true,false,true;haschild(H, B).;false;false
4;true;haschild(D, B), haschild(D, E).;true;true
4;true,false;haschild(A, F), haschild(B, G).;true;true
5;;ismarriedto(A, B) :- haschild(B, C), haschild(A, C).;true;false
5;true,true;haschild(B, E).;false;false
5;true,false,false;haschild(I, B), haschild(I, J).;false;false
5;true,false,true;haschild(H, B).;false;false
5;true;haschild(D, B), haschild(D, E).;true;true
5;true,false;haschild(A, F), haschild(B, G).;true;true
6;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;false
6;true,false,false,false;haschild(A, J).;false;false
6;true,false,false,true;haschild(H, G), haschild(I, H).;false;false
6;true,false,false;haschild(F, B), haschild(F, G).;true;true
6;true;haschild(D, B), haschild(D, C).;false;true
6;true,false;haschild(E, B).;false;true
7;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;false
7;true,true;haschild(B, E).;false;false
7;true,false,false;haschild(A, J).;false;false
7;true,false,true;haschild(H, G), haschild(I, H).;false;false
7;true;haschild(D, B), haschild(D, E).;true;true
7;true,false;haschild(F, B), haschild(F, G).;true;true
8;;ismarriedto(A, B) :- haschild(B, C), haschild(A, D).;true;false
8;true,true;haschild(E, B), haschild(E, F).;false;false
8;true,false,false,true;haschild(K, J).;false;false
8;true,false,false;haschild(I, B), haschild(B, J).;true;true
8;true,false,false,false;created(B, L), haschild(A, M).;false;false
8;true;haschild(A, C).;true;true
8;true,false;haschild(G, D), haschild(H, G).;false;true
9;;ismarriedto(A, B) :- haschild(B, C), haschild(A, C).;true;false
9;true,false,false,false;haschild(A, K).;false;false
9;true,false,false,true;haschild(I, H), haschild(J, I).;false;false
9;true,false,false;haschild(G, B), haschild(G, H).;true;true
9;true;haschild(D, C), haschild(D, B).;false;true
9;true,false;haschild(E, B), haschild(E, F).;false;true


WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then if ( haschild(D, B) )
%   | then if ( haschild(B, E), haschild(D, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8581489350995078;  // std dev = 2,81e-06, 590,000 (wgt'ed) examples reached here.  /* #pos=590 */
%   | else if ( haschild(A, F), haschild(B, G) )
%   | | then if ( haschild(H, F) )
%   | | | then return 0.858148935099508;  // std dev = 2,29e-06, 495,000 (wgt'ed) examples reached here.  /* #pos=495 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.15945840117262733;  // std dev = 69,100, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( haschild(D, B), haschild(D, E) )
%   | then if ( haschild(B, E) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109585;  // std dev = 0,000, 590,000 (wgt'ed) examples reached here.  /* #pos=590 */
%   | else if ( haschild(A, F) )
%   | | then if ( haschild(G, F) )
%   | | | then return 0.7194734122109584;  // std dev = 0,000, 495,000 (wgt'ed) examples reached here.  /* #pos=495 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1389180854631674;  // std dev = 69,100, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then if ( haschild(D, B), haschild(D, C) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haschild(E, B) )
%   | | then return 0.555366436746283;  // std dev = 1,05e-06, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | | else if ( haschild(B, F), haschild(A, G) )
%   | | | then if ( haschild(H, G) )
%   | | | | then return 0.555366436746283;  // std dev = 4,46e-07, 495,000 (wgt'ed) examples reached here.  /* #pos=495 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.11912595869134068;  // std dev = 69,100, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( haschild(D, B), haschild(D, E) )
%   | then if ( haschild(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4175135841583128;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | else if ( haschild(F, B), haschild(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( haschild(B, H) )
%   | | | then return 0.4175135841583125;  // std dev = 0,000, 495,000 (wgt'ed) examples reached here.  /* #pos=495 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.10070128502822824;  // std dev = 69,100, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( haschild(D, B), haschild(D, E) )
%   | then if ( haschild(B, E) )
%   | | then return 0.3207118471601496;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.32071184716014783;  // std dev = 1,88e-07, 590,000 (wgt'ed) examples reached here.  /* #pos=590 */
%   | else if ( haschild(A, F), haschild(B, G) )
%   | | then if ( haschild(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014955;  // std dev = 0,000, 495,000 (wgt'ed) examples reached here.  /* #pos=495 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.08406485219483052;  // std dev = 69,100, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then if ( haschild(D, B), haschild(D, E) )
%   | then if ( haschild(B, E) )
%   | | then return 0.25517224256948934;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2551722425694891;  // std dev = 0,000, 590,000 (wgt'ed) examples reached here.  /* #pos=590 */
%   | else if ( haschild(A, F), haschild(B, G) )
%   | | then if ( haschild(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2551722425694871;  // std dev = 5,59e-07, 495,000 (wgt'ed) examples reached here.  /* #pos=495 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.06943043552950272;  // std dev = 69,100, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( haschild(D, B), haschild(D, C) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haschild(E, B) )
%   | | then return 0.20975771563253456;  // std dev = 2,53e-07, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | | else if ( haschild(F, B), haschild(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( haschild(A, H) )
%   | | | | then return 0.2097577156325346;  // std dev = 2,60e-07, 495,000 (wgt'ed) examples reached here.  /* #pos=495 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.056834681124356745;  // std dev = 69,100, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( haschild(D, B), haschild(D, E) )
%   | then if ( haschild(B, E) )
%   | | then return 0.1770964977452773;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17709649774527866;  // std dev = 0,000, 590,000 (wgt'ed) examples reached here.  /* #pos=590 */
%   | else if ( haschild(F, B), haschild(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( haschild(A, H) )
%   | | | then return 0.17709649774527803;  // std dev = 0,000, 495,000 (wgt'ed) examples reached here.  /* #pos=495 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.046185131742429573;  // std dev = 69,100, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, D) )
%   then if ( haschild(A, C) )
%   | then if ( haschild(E, B), haschild(E, F) )
%   | | then return 0.15274385809367166;  // std dev = 0,000, 595,000 (wgt'ed) examples reached here.  /* #pos=595 */
%   | | else return 0.15274385809367166;  // std dev = 0,000, 495,000 (wgt'ed) examples reached here.  /* #pos=495 */
%   | else if ( haschild(G, D), haschild(H, G) )
%   | | then return -0.1431208493008599;  // std dev = 6,954, 455,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=55 */
%   | | else if ( haschild(I, B), haschild(B, J) )
%   | | | then if ( haschild(K, J) )
%   | | | | then return -0.2066229209996527;  // std dev = 2,569, 122,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=7 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( created(B, L), haschild(A, M) )
%   | | | | then return -0.02399997017998028;  // std dev = 2,135, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | | else return -0.15965214409302392;  // std dev = 3,278, 115,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=12 */
%   else return 0.04350321685332705;  // std dev = 68,389, 21.964,000 (wgt'ed) examples reached here.  /* #neg=15.210 #pos=6.754 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then if ( haschild(D, C), haschild(D, B) )
%   | then return 0.13400703000801095;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haschild(E, B), haschild(E, F) )
%   | | then return 0.1340070300080115;  // std dev = 2,11e-07, 591,000 (wgt'ed) examples reached here.  /* #pos=591 */
%   | | else if ( haschild(G, B), haschild(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( haschild(A, I) )
%   | | | | then return 0.1340070300080124;  // std dev = 0,000, 495,000 (wgt'ed) examples reached here.  /* #pos=495 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.029940615197899412;  // std dev = 69,032, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */


Results
   AUC ROC   = 0.580382
   AUC PR    = 0.489479
   CLL	      = -0.591475
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133535
   F1        = 0.235609


Total learning time: 444.317 seconds
Total inference time: 66.803 seconds
AUC ROC: 0.580382


Structure after Parameter Learning
[['ismarriedto(A, B)', {'': 'haschild(B, C), haschild(A, C)', 'true,true': 'haschild(B, E), haschild(D, E)', 'true': 'haschild(D, B)', 'true,false': 'haschild(A, F), haschild(B, G)', 'true,false,true': 'haschild(H, F)'}, {'true,true,true': [0.0, 0, 5], 'false': [69.1, 15847, 6834], 'true,true,false': [2.81e-06, 0, 590], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [2.29e-06, 0, 495]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true,true': 'haschild(B, E)', 'true': 'haschild(D, B), haschild(D, E)', 'true,false': 'haschild(A, F)', 'true,false,true': 'haschild(G, F)'}, {'true,true,true': [0.0, 0, 5], 'false': [69.1, 15847, 6834], 'true,true,false': [0.0, 0, 590], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 495]}], ['ismarriedto(A, B)', {'': 'haschild(B, C), haschild(A, C)', 'true': 'haschild(D, B), haschild(D, C)', 'true,false,false': 'haschild(B, F), haschild(A, G)', 'true,false,false,true': 'haschild(H, G)', 'true,false': 'haschild(E, B)'}, {'true,true': [0.0, 0, 4], 'true,false,true': [1.05e-06, 0, 591], 'true,false,false,true,true': [4.46e-07, 0, 495], 'true,false,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [69.1, 15847, 6834]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true,true': 'haschild(A, E)', 'true': 'haschild(D, B), haschild(D, E)', 'true,false,false': 'haschild(B, H)', 'true,false': 'haschild(F, B), haschild(A, G)'}, {'true,true,true': [0.0, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 591], 'true,false,false,false': [0.0, 0, 0], 'false': [69.1, 15847, 6834], 'true,false,false,true': [0.0, 0, 495]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true,true': 'haschild(B, E)', 'true': 'haschild(D, B), haschild(D, E)', 'true,false': 'haschild(A, F), haschild(B, G)', 'true,false,true': 'haschild(H, B)'}, {'true,true,true': [0.0, 0, 5], 'false': [69.1, 15847, 6834], 'true,true,false': [1.88e-07, 0, 590], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 495], 'true,false,true,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(B, C), haschild(A, C)', 'true,true': 'haschild(B, E)', 'true': 'haschild(D, B), haschild(D, E)', 'true,false': 'haschild(A, F), haschild(B, G)', 'true,false,true': 'haschild(H, B)'}, {'true,true,true': [0.0, 0, 5], 'false': [69.1, 15847, 6834], 'true,true,false': [0.0, 0, 590], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [5.59e-07, 0, 495], 'true,false,true,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true,false,false,false': 'haschild(A, H)', 'true': 'haschild(D, B), haschild(D, C)', 'true,false,false': 'haschild(F, B), haschild(F, G)', 'true,false': 'haschild(E, B)'}, {'true,true': [0.0, 0, 4], 'true,false,true': [2.53e-07, 0, 591], 'true,false,false,false,true': [2.6e-07, 0, 495], 'false': [69.1, 15847, 6834], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true,true': 'haschild(B, E)', 'true': 'haschild(D, B), haschild(D, E)', 'true,false,false': 'haschild(A, H)', 'true,false': 'haschild(F, B), haschild(F, G)'}, {'true,true,true': [0.0, 0, 5], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 590], 'true,false,false,false': [0.0, 0, 0], 'false': [69.1, 15847, 6834], 'true,false,false,true': [0.0, 0, 495]}], ['ismarriedto(A, B)', {'': 'haschild(B, C), haschild(A, D)', 'true,true': 'haschild(E, B), haschild(E, F)', 'true': 'haschild(A, C)', 'true,false,false': 'haschild(I, B), haschild(B, J)', 'true,false,false,false': 'created(B, L), haschild(A, M)', 'true,false,false,true': 'haschild(K, J)', 'true,false': 'haschild(G, D), haschild(H, G)'}, {'true,true,true': [0.0, 0, 595], 'true,false,true': [6.954, 400, 55], 'true,true,false': [0.0, 0, 495], 'true,false,false,false,true': [2.135, 19, 6], 'true,false,false,true,true': [2.569, 115, 7], 'true,false,false,true,false': [0.0, 0, 0], 'false': [68.389, 15210, 6754], 'true,false,false,false,false': [3.278, 103, 12]}], ['ismarriedto(A, B)', {'': 'haschild(B, C), haschild(A, C)', 'true,false,false,false': 'haschild(A, I)', 'true': 'haschild(D, C), haschild(D, B)', 'true,false,false': 'haschild(G, B), haschild(G, H)', 'true,false': 'haschild(E, B), haschild(E, F)'}, {'true,true': [0.0, 0, 4], 'true,false,true': [2.11e-07, 0, 591], 'true,false,false,false,true': [0.0, 0, 495], 'false': [69.032, 15847, 6834], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 0]}]]
[{'': [2.012987126630449e-14, 0.21052207172754184], 'true,true': [0.0, 1.3391924104495448e-14], 'true': [1.3565992400394519e-14, 1.0564837444837045e-14], 'true,false,true': [1.0564837444837045e-14, nan], 'true,false': [1.0564837444837045e-14, nan]}, {'': [-6.466590769486417e-15, 0.21052207172754678], 'true,false,true': [-5.741759480889698e-15, nan], 'true': [-6.0187149382032015e-15, -5.741759480889698e-15], 'true,true': [0.0, -6.0697209970015336e-15], 'true,false': [-5.741759480889698e-15, nan]}, {'': [-1.121223399548048e-14, 0.21052207172750098], 'true': [0.0, 1.151524138985061e-15], 'true,false,false,true': [4.019231636622789e-16, nan], 'true,false,false': [4.019231636622789e-16, nan], 'true,false': [1.8755442771332595e-15, 4.019231636622789e-16]}, {'': [-2.4771214641177806e-15, 0.2105220717277073], 'true,true': [0.0, -4.592678935031443e-15], 'true': [-4.6095713614016585e-15, -3.502473283342716e-15], 'true,false,false': [-3.502473283342716e-15, nan], 'true,false': [nan, -3.502473283342716e-15]}, {'': [-4.823868114334625e-16, 0.2105220717277308], 'true,true': [0.0, 6.021548608136442e-17], 'true': [8.359326303060002e-17, -7.177199351112123e-16], 'true,false,true': [nan, -7.177199351112123e-16], 'true,false': [-7.177199351112123e-16, nan]}, {'': [-1.994734652684318e-15, 0.21052207172787635], 'true,false,true': [nan, 6.315935428978669e-16], 'true': [-4.776757887462858e-16, 6.315935428978669e-16], 'true,true': [0.0, -4.3355149978582386e-16], 'true,false': [6.315935428978669e-16, nan]}, {'': [-2.5814213152385293e-15, 0.2105220717277976], 'true,false,false,false': [1.3636678767113033e-16, nan], 'true': [0.0, 1.243122650040691e-16], 'true,false,false': [nan, 1.3636678767113033e-16], 'true,false': [1.0820447752691881e-16, 1.3636678767113033e-16]}, {'': [-8.604737717461764e-16, 0.21052207172778106], 'true,true': [0.0, -5.419393747322798e-16], 'true': [-5.493271570582287e-16, -3.086195720978213e-16], 'true,false,false': [-3.086195720978213e-16, nan], 'true,false': [nan, -3.086195720978213e-16]}, {'': [0.06162238349801157, 0.21294497699762735], 'true,false,false,false': [0.18240000000000012, 0.09345935727788289], 'true,false,false,true': [0.054084923407686156, nan], 'true,false,false': [0.054084923407686156, 0.11204081632653069], 'true': [6.127616253343984e-16, 0.09912680489176025], 'true,true': [-3.821406309970287e-16, -2.978537730711531e-16], 'true,false': [0.10626735901460885, 0.08631490006409888]}, {'': [9.06104956611504e-16, 0.21010803690690333], 'true,false,false,false': [-2.7632217501781674e-16, nan], 'true': [0.0, 9.061709843717669e-16], 'true,false,false': [nan, -2.7632217501781674e-16], 'true,false': [7.514199828258251e-17, -2.7632217501781674e-16]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;ismarriedto(A, B) :- haschild(B, C), haschild(A, C).;true;true', '0;true,true;haschild(B, E), haschild(D, E).;true;true', '0;true;haschild(D, B).;true;true', '1;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '1;true,true;haschild(B, E).;true;true', '1;true;haschild(D, B), haschild(D, E).;true;true', '2;;ismarriedto(A, B) :- haschild(B, C), haschild(A, C).;true;true', '2;true;haschild(D, B), haschild(D, C).;true;true', '2;true,false;haschild(E, B).;true;true', '3;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '3;true,true;haschild(A, E).;true;true', '3;true;haschild(D, B), haschild(D, E).;true;true', '4;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '4;true,true;haschild(B, E).;true;true', '4;true;haschild(D, B), haschild(D, E).;true;true', '5;;ismarriedto(A, B) :- haschild(B, C), haschild(A, C).;true;true', '5;true,true;haschild(B, E).;true;true', '5;true;haschild(D, B), haschild(D, E).;true;true', '6;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '6;true;haschild(D, B), haschild(D, C).;true;true', '6;true,false;haschild(E, B).;true;true', '7;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '7;true,true;haschild(B, E).;true;true', '7;true;haschild(D, B), haschild(D, E).;true;true', '8;;ismarriedto(A, B) :- haschild(B, C), haschild(A, D).;true;true', '8;true,true;haschild(E, B), haschild(E, F).;true;true', '8;true;haschild(A, C).;true;true', '9;;ismarriedto(A, B) :- haschild(B, C), haschild(A, C).;true;true', '9;true;haschild(D, C), haschild(D, B).;true;true', '9;true,false;haschild(E, B), haschild(E, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then return 0.8581489350995075;  // std dev = 1,42e-07, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(B, D) )
%   | then if ( haschild(E, A), haschild(F, B) )
%   | | then if ( haschild(A, G) )
%   | | | then return 0.034944515210008714;  // std dev = 5,132, 181,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=32 */
%   | | | else return 0.343443052746568;  // std dev = 7,138, 204,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=99 */
%   | | else if ( wasbornin(A, H), haschild(D, I) )
%   | | | then return -0.0965177315671547;  // std dev = 4,029, 375,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=17 */
%   | | | else return 0.038723490503065006;  // std dev = 20,800, 2.924,000 (wgt'ed) examples reached here.  /* #neg=2.396 #pos=528 */
%   | else if ( haschild(A, J) )
%   | | then if ( actedin(A, K), actedin(B, L) )
%   | | | then return 0.25814893509951115;  // std dev = 4,775, 95,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
%   | | | else return 0.006025013029881848;  // std dev = 19,863, 3.131,000 (wgt'ed) examples reached here.  /* #neg=2.668 #pos=463 */
%   | | else if ( haschild(M, A), actedin(B, N) )
%   | | | then return 0.012754198257406762;  // std dev = 6,303, 304,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=47 */
%   | | | else return 0.22085663536467093;  // std dev = 59,793, 15.467,000 (wgt'ed) examples reached here.  /* #neg=9.857 #pos=5.610 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.7194734122109588;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( actedin(A, D), actedin(B, E) )
%   | then if ( directed(F, E), directed(F, D) )
%   | | then if ( influences(B, G), diedin(F, H) )
%   | | | then return 0.3277457860998105;  // std dev = 1,003, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7996821445431701;  // std dev = 2,954, 279,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=270 */
%   | | else if ( directed(I, E), wrotemusicfor(I, J) )
%   | | | then return 0.19426003161694486;  // std dev = 5,634, 138,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=50 */
%   | | | else return 0.3192519632402167;  // std dev = 16,174, 1.048,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=511 */
%   | else if ( haschild(A, K) )
%   | | then if ( haschild(L, B) )
%   | | | then return 0.10458481006604294;  // std dev = 11,604, 721,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=179 */
%   | | | else return -0.026954329284315053;  // std dev = 17,888, 3.121,000 (wgt'ed) examples reached here.  /* #neg=2.759 #pos=362 */
%   | | else if ( haschild(B, M) )
%   | | | then return 0.042303961527209215;  // std dev = 20,862, 2.866,000 (wgt'ed) examples reached here.  /* #neg=2.321 #pos=545 */
%   | | | else return 0.1684103465659062;  // std dev = 56,973, 14.504,000 (wgt'ed) examples reached here.  /* #neg=9.589 #pos=4.915 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then return 0.5553664367462918;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( actedin(B, D), actedin(A, E) )
%   | then if ( directed(F, D), created(F, E) )
%   | | then if ( created(B, G), haswonprize(A, H) )
%   | | | then return 0.5723716381555555;  // std dev = 0,965, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.691970815315542;  // std dev = 0,180, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | else if ( directed(I, D), directed(I, E) )
%   | | | then return 0.6404245939226205;  // std dev = 3,039, 195,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=185 */
%   | | | else return 0.25624736501252504;  // std dev = 17,139, 1.183,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=558 */
%   | else if ( haschild(A, J) )
%   | | then if ( haschild(K, B) )
%   | | | then return 0.09123292026543943;  // std dev = 11,605, 721,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=179 */
%   | | | else return -0.023683894838868628;  // std dev = 17,888, 3.121,000 (wgt'ed) examples reached here.  /* #neg=2.759 #pos=362 */
%   | | else if ( actedin(A, L) )
%   | | | then return 0.030455833486380916;  // std dev = 23,198, 3.196,000 (wgt'ed) examples reached here.  /* #neg=2.497 #pos=699 */
%   | | | else return 0.1471920225160811;  // std dev = 55,983, 14.174,000 (wgt'ed) examples reached here.  /* #neg=9.413 #pos=4.761 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.4175135841583132;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(A, D) )
%   | then if ( actedin(B, E), haschild(D, F) )
%   | | then if ( haschild(B, G), haswonprize(B, H) )
%   | | | then return -0.07004276830982084;  // std dev = 0,686, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.13498871467976123;  // std dev = 1,245, 299,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=2 */
%   | | else if ( haschild(I, B), haschild(J, A) )
%   | | | then return 0.121930581065088;  // std dev = 8,874, 380,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=111 */
%   | | | else return -0.0015364906235843584;  // std dev = 19,727, 3.254,000 (wgt'ed) examples reached here.  /* #neg=2.787 #pos=467 */
%   | else if ( haschild(B, K) )
%   | | then if ( haschild(L, A) )
%   | | | then return 0.2063428320835691;  // std dev = 9,461, 382,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=154 */
%   | | | else return 6.165135460748903E-4;  // std dev = 18,833, 2.585,000 (wgt'ed) examples reached here.  /* #neg=2.143 #pos=442 */
%   | | else if ( actedin(B, M), actedin(A, N) )
%   | | | then return 0.28365073314803674;  // std dev = 16,676, 1.267,000 (wgt'ed) examples reached here.  /* #neg=525 #pos=742 */
%   | | | else return 0.1226142503107114;  // std dev = 56,898, 14.504,000 (wgt'ed) examples reached here.  /* #neg=9.589 #pos=4.915 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.3207118471601494;  // std dev = 2,44e-08, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(A, D) )
%   | then if ( actedin(B, E), haschild(D, F) )
%   | | then if ( created(D, G), edited(H, E) )
%   | | | then return 0.05043230462661415;  // std dev = 1,105, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.12316310676240488;  // std dev = 0,748, 299,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1 */
%   | | else if ( isaffiliatedto(B, I), isaffiliatedto(A, I) )
%   | | | then return 0.6601149244539828;  // std dev = 1,260, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.00787493171857926;  // std dev = 21,584, 3.624,000 (wgt'ed) examples reached here.  /* #neg=3.054 #pos=570 */
%   | else if ( haschild(B, J) )
%   | | then if ( haschild(K, A) )
%   | | | then return 0.17190292115716835;  // std dev = 9,449, 382,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=154 */
%   | | | else return 5.297753149330733E-4;  // std dev = 18,833, 2.585,000 (wgt'ed) examples reached here.  /* #neg=2.143 #pos=442 */
%   | | else if ( isaffiliatedto(A, L), isaffiliatedto(B, M) )
%   | | | then return 0.3949603307570331;  // std dev = 7,624, 251,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=160 */
%   | | | else return 0.10630009587105826;  // std dev = 58,753, 15.520,000 (wgt'ed) examples reached here.  /* #neg=10.023 #pos=5.497 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then return 0.2551722425694917;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(A, D) )
%   | then if ( haschild(E, B) )
%   | | then if ( haschild(B, F) )
%   | | | then return -0.06427520498221875;  // std dev = 5,978, 350,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=41 */
%   | | | else return 0.19292149922861443;  // std dev = 9,369, 380,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=142 */
%   | | else if ( haschild(D, G), wasbornin(B, H) )
%   | | | then return -0.11259412461949819;  // std dev = 2,620, 414,000 (wgt'ed) examples reached here.  /* #neg=407 #pos=7 */
%   | | | else return -0.0022063446959402003;  // std dev = 18,026, 2.799,000 (wgt'ed) examples reached here.  /* #neg=2.408 #pos=391 */
%   | else if ( haswonprize(B, I), haswonprize(A, J) )
%   | | then if ( haswonprize(A, I) )
%   | | | then return 0.6036383520641138;  // std dev = 2,271, 76,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=72 */
%   | | | else return 0.13709354367277166;  // std dev = 6,098, 170,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=72 */
%   | | else if ( isaffiliatedto(B, K), actedin(A, L) )
%   | | | then return -0.14261797239991975;  // std dev = 4,888, 304,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=27 */
%   | | | else return 0.07946342601113635;  // std dev = 62,299, 18.188,000 (wgt'ed) examples reached here.  /* #neg=12.106 #pos=6.082 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.20975771563252804;  // std dev = 5,05e-08, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( actedin(A, D), actedin(B, D) )
%   | then if ( directed(E, D) )
%   | | then if ( haswonprize(A, F), haswonprize(B, F) )
%   | | | then return 0.3008394077138449;  // std dev = 0,062, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.4314198410620601;  // std dev = 0,578, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | | else if ( diedin(A, G) )
%   | | | then return 0.5299959926530833;  // std dev = 0,154, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6191672979368844;  // std dev = 0,227, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( directed(B, H), actedin(A, H) )
%   | | then if ( actedin(B, I) )
%   | | | then return 0.5859644216974262;  // std dev = 0,372, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.7418820048585915;  // std dev = 0,243, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( haschild(J, A), haschild(K, B) )
%   | | | then return 0.17000594724591225;  // std dev = 14,086, 855,000 (wgt'ed) examples reached here.  /* #neg=497 #pos=358 */
%   | | | else return 0.04149149743191428;  // std dev = 64,601, 21.542,000 (wgt'ed) examples reached here.  /* #neg=15.350 #pos=6.192 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.1770964977452798;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(D, A), actedin(B, E) )
%   | then if ( actedin(D, F) )
%   | | then if ( directed(G, F), created(H, F) )
%   | | | then return 0.0752166399231752;  // std dev = 3,158, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.5878327500617682;  // std dev = 0,432, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( graduatedfrom(D, I), worksat(J, I) )
%   | | | then return 0.18593081837005868;  // std dev = 1,940, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.14234695396859595;  // std dev = 4,601, 594,000 (wgt'ed) examples reached here.  /* #neg=566 #pos=28 */
%   | else if ( actedin(B, K), directed(A, L) )
%   | | then if ( actedin(B, L) )
%   | | | then return 0.6182250515976352;  // std dev = 1,441, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | | | else return 0.18573937008503363;  // std dev = 7,698, 261,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=139 */
%   | | else if ( isaffiliatedto(A, M), isaffiliatedto(B, M) )
%   | | | then return 0.5782196918809288;  // std dev = 3,376, 153,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=140 */
%   | | | else return 0.039489555890641674;  // std dev = 64,894, 21.528,000 (wgt'ed) examples reached here.  /* #neg=15.109 #pos=6.419 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, D) )
%   then if ( haschild(A, C) )
%   | then return 0.1527438580936683;  // std dev = 2,46e-08, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   | else return -0.05943466232261293;  // std dev = 0,310, 717,000 (wgt'ed) examples reached here.  /* #neg=637 #pos=80 */
%   else if ( haschild(E, B), actedin(A, F) )
%   | then if ( actedin(B, G) )
%   | | then if ( directed(E, H), edited(I, H) )
%   | | | then return -0.25851232222131326;  // std dev = 0,587, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.30365705525541575;  // std dev = 3,522, 74,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=55 */
%   | | else return -0.18539291563465488;  // std dev = 0,187, 509,000 (wgt'ed) examples reached here.  /* #neg=490 #pos=19 */
%   | else if ( haschild(J, B), haschild(K, A) )
%   | | then if ( haschild(L, K), haschild(M, J) )
%   | | | then return 0.2757537469312459;  // std dev = 8,573, 309,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=181 */
%   | | | else return 0.12702652840447073;  // std dev = 8,818, 327,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=142 */
%   | | else if ( haschild(N, A) )
%   | | | then return -0.027056785165306668;  // std dev = 19,706, 2.829,000 (wgt'ed) examples reached here.  /* #neg=2.306 #pos=523 */
%   | | | else return 0.046525370282803485;  // std dev = 60,547, 17.910,000 (wgt'ed) examples reached here.  /* #neg=12.077 #pos=5.833 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then return 0.13400703000800795;  // std dev = 2,45e-08, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(B, D) )
%   | then if ( haschild(D, E), actedin(A, F) )
%   | | then if ( haswonprize(B, G), wrotemusicfor(H, F) )
%   | | | then return 5.10825036288646E-4;  // std dev = 1,291, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.153780123750354;  // std dev = 1,320, 270,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=2 */
%   | | else if ( haschild(I, A), haschild(I, D) )
%   | | | then return 0.7428610917616827;  // std dev = 0,288, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.015908857354331854;  // std dev = 22,089, 3.381,000 (wgt'ed) examples reached here.  /* #neg=2.727 #pos=654 */
%   | else if ( created(A, J), created(B, K) )
%   | | then if ( created(A, K) )
%   | | | then return 0.6526470281175003;  // std dev = 1,383, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | | else return 0.08112377658003395;  // std dev = 8,260, 323,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=128 */
%   | | else if ( diedin(B, L), diedin(A, M) )
%   | | | then return 0.2372585744693293;  // std dev = 9,663, 445,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=241 */
%   | | | else return 0.027211799628848992;  // std dev = 60,109, 18.134,000 (wgt'ed) examples reached here.  /* #neg=12.440 #pos=5.694 */


Results
   AUC ROC   = 0.730476
   AUC PR    = 0.640238
   CLL	      = -0.545864
   Precision = 0.981555 at threshold = 0.5
   Recall    = 0.18806
   F1        = 0.315645


Total learning time: 818.984 seconds
Total inference time: 73.247 seconds
AUC ROC: 0.730476


Refined model AUC ROC: 0.730476


Dataset: 19_uwcse_yago2s, Fold: 2, Type: transfer, Time: 04:47:11
{'AUC ROC': 0.730476, 'Precision': [0.981555, 0.5], 'Mapping results': {'Generating mappings time': 8.151480674743652, 'Knowledge compiling time': 23.268052101135254, 'Finding best mapping': 2.9100875854492188, 'Possible mappings': 10976, 'Total time': 37.21650505065918, 'Generating paths time': 2.88687801361084}, 'Inference time': 73.247, 'CLL': -0.545864, 'AUC PR': 0.640238, 'Learning time': 1263.301, 'Parameter Learning results': {'AUC ROC': 0.580382, 'Precision': [1.0, 0.5], 'Inference time': 66.803, 'CLL': -0.591475, 'AUC PR': 0.489479, 'Learning time': 444.317, 'Recall': 0.133535, 'F1': 0.235609}, 'Recall': 0.18806, 'F1': 0.315645}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, D) )
%   then if ( haschild(A, C) )
%   | then return 0.8581489350995075;  // std dev = 4,68e-06, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   | else return -0.03027505374288655;  // std dev = 0,315, 717,000 (wgt'ed) examples reached here.  /* #neg=637 #pos=80 */
%   else if ( haschild(B, E) )
%   | then if ( actedin(A, F), haschild(E, G) )
%   | | then return -0.11920955546652609;  // std dev = 0,149, 265,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=6 */
%   | | else if ( haschild(H, A), haschild(I, B) )
%   | | | then return 0.35814893509950924;  // std dev = 7,036, 198,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=99 */
%   | | | else return 0.05423519708033837;  // std dev = 19,868, 2.504,000 (wgt'ed) examples reached here.  /* #neg=2.013 #pos=491 */
%   | else if ( haschild(A, J) )
%   | | then if ( actedin(B, K), haschild(J, L) )
%   | | | then return -0.13478392709130077;  // std dev = 1,409, 283,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=2 */
%   | | | else return 0.027703811076402223;  // std dev = 20,357, 2.943,000 (wgt'ed) examples reached here.  /* #neg=2.444 #pos=499 */
%   | | else if ( haschild(M, B), actedin(A, N) )
%   | | | then return 0.06811334791090057;  // std dev = 6,827, 281,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=59 */
%   | | | else return 0.21954338313058053;  // std dev = 59,791, 15.490,000 (wgt'ed) examples reached here.  /* #neg=9.892 #pos=5.598 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, D) )
%   then if ( haschild(A, C) )
%   | then return 0.7194734122109588;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   | else return -0.026629498548310666;  // std dev = 0,315, 717,000 (wgt'ed) examples reached here.  /* #neg=637 #pos=80 */
%   else if ( created(B, E), actedin(A, F) )
%   | then if ( actedin(G, E), actedin(G, F) )
%   | | then return 0.7480158040245278;  // std dev = 0,279, 94,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=86 */
%   | | else if ( actedin(B, H), directed(I, F) )
%   | | | then return 0.4275184573835838;  // std dev = 6,726, 187,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=111 */
%   | | | else return 0.156959248867586;  // std dev = 10,085, 467,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=151 */
%   | else if ( haschild(A, J) )
%   | | then if ( haschild(K, B) )
%   | | | then return 0.2280095334883364;  // std dev = 9,329, 373,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=139 */
%   | | | else return -0.021001320019952474;  // std dev = 17,343, 2.810,000 (wgt'ed) examples reached here.  /* #neg=2.466 #pos=344 */
%   | | else if ( actedin(A, L), actedin(B, M) )
%   | | | then return 0.3994715265631835;  // std dev = 16,758, 1.145,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=650 */
%   | | | else return 0.14525735061000516;  // std dev = 60,037, 16.888,000 (wgt'ed) examples reached here.  /* #neg=11.615 #pos=5.273 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( actedin(B, C), actedin(A, D) )
%   then if ( directed(E, C), directed(E, D) )
%   | then return 0.713944277567482;  // std dev = 0,195, 306,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=295 */
%   | else if ( diedin(B, F), diedin(A, G) )
%   | | then return 0.6037769347075964;  // std dev = 0,371, 49,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   | | else if ( wrotemusicfor(H, C), wrotemusicfor(H, D) )
%   | | | then return 0.5370455799472286;  // std dev = 3,344, 65,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=50 */
%   | | | else return 0.21898502225939243;  // std dev = 16,246, 1.094,000 (wgt'ed) examples reached here.  /* #neg=602 #pos=492 */
%   else if ( haschild(I, B), haschild(J, A) )
%   | then if ( haschild(B, K), haschild(A, K) )
%   | | then return 0.555366436746283;  // std dev = 0,000, 377,000 (wgt'ed) examples reached here.  /* #pos=377 */
%   | | else return 0.23797461503317638;  // std dev = 0,486, 853,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=357 */
%   | else if ( isaffiliatedto(A, L), isaffiliatedto(B, L) )
%   | | then return 0.7002117673803078;  // std dev = 0,265, 176,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=163 */
%   | | else if ( actedin(A, M) )
%   | | | then return 0.032381021247395045;  // std dev = 23,782, 3.469,000 (wgt'ed) examples reached here.  /* #neg=2.713 #pos=756 */
%   | | | else return 0.12127718073169244;  // std dev = 58,974, 17.382,000 (wgt'ed) examples reached here.  /* #neg=11.989 #pos=5.393 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), actedin(B, D) )
%   then if ( actedin(C, E) )
%   | then return 0.24470118717165923;  // std dev = 0,478, 57,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   | else return -0.11925326731524041;  // std dev = 0,222, 617,000 (wgt'ed) examples reached here.  /* #neg=576 #pos=41 */
%   else if ( haschild(F, A), haschild(G, B) )
%   | then if ( haschild(A, H), haschild(B, H) )
%   | | then return 0.417513584158312;  // std dev = 0,000, 376,000 (wgt'ed) examples reached here.  /* #pos=376 */
%   | | else if ( haschild(A, I) )
%   | | | then return 0.10412450600952523;  // std dev = 8,748, 377,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=111 */
%   | | | else return 0.29827257049520184;  // std dev = 10,559, 450,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=243 */
%   | else if ( actedin(B, J), actedin(A, K) )
%   | | then if ( directed(L, J), directed(L, K) )
%   | | | then return 0.5624695197583188;  // std dev = 3,323, 287,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=277 */
%   | | | else return 0.20753060535806742;  // std dev = 16,548, 1.139,000 (wgt'ed) examples reached here.  /* #neg=586 #pos=553 */
%   | | else if ( haschild(B, M), haschild(A, N) )
%   | | | then return 0.2690481098803389;  // std dev = 11,814, 1.180,000 (wgt'ed) examples reached here.  /* #neg=466 #pos=714 */
%   | | | else return 0.0899249334051595;  // std dev = 62,259, 19.288,000 (wgt'ed) examples reached here.  /* #neg=13.709 #pos=5.579 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then return 0.40385599624253066;  // std dev = 0,070, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(A, D) )
%   | then if ( wasbornin(B, E), livesin(F, E) )
%   | | then if ( haswonprize(A, G), isaffiliatedto(F, H) )
%   | | | then return 0.07394375297321447;  // std dev = 3,886, 84,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=21 */
%   | | | else return -0.10052541869346478;  // std dev = 7,043, 806,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=59 */
%   | | else if ( haschild(I, B), haschild(J, A) )
%   | | | then return 0.10818611782800207;  // std dev = 8,164, 318,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=100 */
%   | | | else return -0.02641027361818043;  // std dev = 18,261, 2.735,000 (wgt'ed) examples reached here.  /* #neg=2.334 #pos=401 */
%   | else if ( haschild(B, K) )
%   | | then if ( haschild(L, A) )
%   | | | then return 0.1425200016680941;  // std dev = 9,362, 382,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=154 */
%   | | | else return -0.028702760389164743;  // std dev = 18,754, 2.585,000 (wgt'ed) examples reached here.  /* #neg=2.143 #pos=442 */
%   | | else if ( actedin(A, M), actedin(B, N) )
%   | | | then return 0.22176202035607911;  // std dev = 16,596, 1.267,000 (wgt'ed) examples reached here.  /* #neg=525 #pos=742 */
%   | | | else return 0.11273716693386775;  // std dev = 56,630, 14.504,000 (wgt'ed) examples reached here.  /* #neg=9.589 #pos=4.915 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.3131044862768343;  // std dev = 0,061, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(A, D) )
%   | then if ( haschild(E, B) )
%   | | then if ( haschild(B, F) )
%   | | | then return -0.06848102819510213;  // std dev = 5,986, 350,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=41 */
%   | | | else return 0.14873017417403514;  // std dev = 9,333, 380,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=142 */
%   | | else if ( haschild(D, G) )
%   | | | then return -0.07359807130915175;  // std dev = 10,541, 1.445,000 (wgt'ed) examples reached here.  /* #neg=1.321 #pos=124 */
%   | | | else return -0.013668784143669859;  // std dev = 14,938, 1.768,000 (wgt'ed) examples reached here.  /* #neg=1.494 #pos=274 */
%   | else if ( haschild(B, H) )
%   | | then if ( haschild(I, A) )
%   | | | then return 0.11473493665271392;  // std dev = 9,351, 382,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=154 */
%   | | | else return -0.024186209535521832;  // std dev = 18,758, 2.585,000 (wgt'ed) examples reached here.  /* #neg=2.143 #pos=442 */
%   | | else if ( isaffiliatedto(A, J), actedin(B, K) )
%   | | | then return -0.1552512686976856;  // std dev = 4,469, 242,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=23 */
%   | | | else return 0.10268617935043362;  // std dev = 58,746, 15.529,000 (wgt'ed) examples reached here.  /* #neg=9.895 #pos=5.634 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, D) )
%   then if ( created(A, C) )
%   | then return 0.6620162596604366;  // std dev = 0,162, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( actedin(B, D), directed(A, E) )
%   | | then return 0.6533850744854635;  // std dev = 0,126, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( graduatedfrom(A, F), haswonprize(B, G) )
%   | | | then return -0.17289028853855637;  // std dev = 0,570, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.10860990095829903;  // std dev = 8,487, 350,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=138 */
%   else if ( haschild(B, H), haschild(A, I) )
%   | then return 0.12528896031630998;  // std dev = 0,253, 1.781,000 (wgt'ed) examples reached here.  /* #neg=632 #pos=1.149 */
%   | else if ( haschild(B, J), wasbornin(A, K) )
%   | | then if ( haschild(L, A), hascapital(M, K) )
%   | | | then return 0.2132804611059825;  // std dev = 3,119, 44,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
%   | | | else return -0.08464701109902753;  // std dev = 8,485, 784,000 (wgt'ed) examples reached here.  /* #neg=694 #pos=90 */
%   | | else if ( haschild(A, N) )
%   | | | then return -0.01486087182273996;  // std dev = 19,723, 3.186,000 (wgt'ed) examples reached here.  /* #neg=2.698 #pos=488 */
%   | | | else return 0.0681541671166382;  // std dev = 61,090, 17.499,000 (wgt'ed) examples reached here.  /* #neg=11.579 #pos=5.920 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then return 0.22794723703102773;  // std dev = 1,643, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( actedin(A, D), actedin(B, D) )
%   | then if ( haschild(A, E), directed(F, D) )
%   | | then if ( created(F, G), wrotemusicfor(H, D) )
%   | | | then return 0.5792490177244898;  // std dev = 0,106, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6636030539319178;  // std dev = 0,062, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( directed(I, D) )
%   | | | then return 0.38173152290486123;  // std dev = 0,865, 177,000 (wgt'ed) examples reached here.  /* #pos=177 */
%   | | | else return 0.5329278534293832;  // std dev = 0,477, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( haschild(A, J) )
%   | | then if ( wasbornin(B, K), wasbornin(J, K) )
%   | | | then return 0.6879608837881496;  // std dev = 1,290, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.028988141169128144;  // std dev = 21,305, 3.916,000 (wgt'ed) examples reached here.  /* #neg=3.360 #pos=556 */
%   | | else if ( created(A, L), isaffiliatedto(B, M) )
%   | | | then return -0.1334814396665823;  // std dev = 4,572, 187,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=25 */
%   | | | else return 0.05087984471758224;  // std dev = 62,159, 18.349,000 (wgt'ed) examples reached here.  /* #neg=12.323 #pos=6.026 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then if ( directed(D, C) )
%   | then if ( created(B, E), created(A, E) )
%   | | then return 0.14181744558155412;  // std dev = 0,034, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2951441552299222;  // std dev = 0,085, 198,000 (wgt'ed) examples reached here.  /* #pos=198 */
%   | else if ( haschild(A, F) )
%   | | then return 0.19428309611900854;  // std dev = 0,122, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4136121530229894;  // std dev = 0,075, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( haschild(A, G), haschild(B, G) )
%   | then return 0.1922376855821735;  // std dev = 0,042, 1.069,000 (wgt'ed) examples reached here.  /* #pos=1.069 */
%   | else if ( haswonprize(A, H), haswonprize(B, H) )
%   | | then if ( actedin(A, I), actedin(B, J) )
%   | | | then return 0.17588289334507093;  // std dev = 1,570, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.6359427144883404;  // std dev = 1,812, 56,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | else if ( iscitizenof(A, K), iscitizenof(B, K) )
%   | | | then return 0.5737122408567523;  // std dev = 3,198, 104,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=92 */
%   | | | else return 0.02425939005039714;  // std dev = 65,513, 22.295,000 (wgt'ed) examples reached here.  /* #neg=15.827 #pos=6.468 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( actedin(B, C), directed(A, C) )
%   then return 0.5720445188679468;  // std dev = 0,192, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haschild(B, D), actedin(A, E) )
%   | then if ( actedin(B, F) )
%   | | then if ( created(B, G), wasbornin(D, H) )
%   | | | then return 0.3842562959868288;  // std dev = 1,308, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.11203820908467745;  // std dev = 4,267, 137,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=85 */
%   | | else if ( actedin(D, I), edited(J, I) )
%   | | | then return 0.2019419202862179;  // std dev = 2,103, 31,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | | else return -0.14845196176644931;  // std dev = 4,148, 591,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=31 */
%   | else if ( wasbornin(B, K), wasbornin(A, K) )
%   | | then if ( haschild(A, L) )
%   | | | then return 0.2950901332520975;  // std dev = 1,318, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.6470575299159231;  // std dev = 1,302, 81,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=80 */
%   | | else if ( isaffiliatedto(A, M), haschild(N, B) )
%   | | | then return -0.11982323520018484;  // std dev = 4,713, 233,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=39 */
%   | | | else return 0.032244909043691275;  // std dev = 64,939, 22.576,000 (wgt'ed) examples reached here.  /* #neg=15.026 #pos=7.550 */


Results
   AUC ROC   = 0.731486
   AUC PR    = 0.638862
   CLL	      = -0.548418
   Precision = 0.976455 at threshold = 0.5
   Recall    = 0.183201
   F1        = 0.308518


Total learning time: 927.992 seconds
Total inference time: 73.435 seconds
AUC ROC: 0.731486


Dataset: 19_uwcse_yago2s, Fold: 2, Type: scratch, Time: 05:03:56
{'AUC ROC': 0.731486, 'Precision': [0.976455, 0.5], 'Inference time': 73.435, 'CLL': -0.548418, 'AUC PR': 0.638862, 'Learning time': 927.992, 'Recall': 0.183201, 'F1': 0.308518}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 22.66694974899292
   Generating paths time   = 2.9085142612457275
   Generating mappings time   = 8.256527662277222
   Possible mappings   = 10976
   Finding best mapping   = 2.9166202545166016
   Total time   = 36.748619079589844


Best mapping found: ['advisedby(A,B) -> ismarriedto(A,B)', 'publication(A,B) -> haschild(A,B)', 'projectmember(A,B) -> created(B,A)', 'tempadvisedby(A,B) -> haschild(B,A)'] 

Transferred target predicate: ismarriedto 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;ismarriedto(A, B) :- haschild(C, B), haschild(C, A).;true;false
0;true,true;haschild(E, B), haschild(E, D).;false;false
0;true,false,false;haschild(B, I), haschild(J, I).;false;false
0;true,false,true;haschild(F, H).;false;false
0;true;haschild(B, D).;true;true
0;true,false;haschild(F, A), haschild(G, B).;true;true
1;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;false
1;true,true;haschild(E, B).;false;false
1;true,false,false;haschild(B, H).;false;false
1;true,false,true;haschild(F, G).;false;false
1;true;haschild(B, D), haschild(E, D).;true;true
1;true,false;haschild(F, A).;true;true
2;;ismarriedto(A, B) :- haschild(C, B), haschild(C, A).;true;false
2;true,false,false,false;haschild(B, I), haschild(J, I).;false;false
2;true,false,false,true;haschild(G, H).;false;false
2;true,false,false;haschild(F, B), haschild(G, A).;true;true
2;true;haschild(B, D), haschild(C, D).;false;true
2;true,false;haschild(B, E).;false;true
3;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;false
3;true,true;haschild(E, A).;false;false
3;true,false,false;haschild(I, B).;false;false
3;true,false,true;haschild(G, H).;false;false
3;true;haschild(B, D), haschild(E, D).;true;true
3;true,false;haschild(B, F), haschild(G, A).;true;true
4;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;false
4;true,true;haschild(E, B).;false;false
4;true,false,false;haschild(B, I), haschild(J, I).;false;false
4;true,false,true;haschild(B, H).;false;false
4;true;haschild(B, D), haschild(E, D).;true;true
4;true,false;haschild(F, A), haschild(G, B).;true;true
5;;ismarriedto(A, B) :- haschild(C, B), haschild(C, A).;true;false
5;true,true;haschild(E, B).;false;false
5;true,false,false;haschild(B, I), haschild(J, I).;false;false
5;true,false,true;haschild(B, H).;false;false
5;true;haschild(B, D), haschild(E, D).;true;true
5;true,false;haschild(F, A), haschild(G, B).;true;true
6;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;false
6;true,false,false,false;haschild(J, A).;false;false
6;true,false,false,true;haschild(G, H), haschild(H, I).;false;false
6;true,false,false;haschild(B, F), haschild(G, F).;true;true
6;true;haschild(B, D), haschild(C, D).;false;true
6;true,false;haschild(B, E).;false;true
7;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;false
7;true,true;haschild(E, B).;false;false
7;true,false,false;haschild(J, A).;false;false
7;true,false,true;haschild(G, H), haschild(H, I).;false;false
7;true;haschild(B, D), haschild(E, D).;true;true
7;true,false;haschild(B, F), haschild(G, F).;true;true
8;;ismarriedto(A, B) :- haschild(C, B), haschild(D, A).;true;false
8;true,true;haschild(B, E), haschild(F, E).;false;false
8;true,false,false,true;haschild(J, K).;false;false
8;true,false,false;haschild(B, I), haschild(J, B).;true;true
8;true,false,false,false;created(B, L), haschild(M, A).;false;false
8;true;haschild(C, A).;true;true
8;true,false;haschild(D, G), haschild(G, H).;false;true
9;;ismarriedto(A, B) :- haschild(C, B), haschild(C, A).;true;false
9;true,false,false,false;haschild(K, A).;false;false
9;true,false,false,true;haschild(H, I), haschild(I, J).;false;false
9;true,false,false;haschild(B, G), haschild(H, G).;true;true
9;true;haschild(C, D), haschild(B, D).;false;true
9;true,false;haschild(B, E), haschild(F, E).;false;true


WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(C, A) )
%   then if ( haschild(B, D) )
%   | then if ( haschild(E, B), haschild(E, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haschild(F, A), haschild(G, B) )
%   | | then if ( haschild(F, H) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19078015929722433;  // std dev = 72,592, 23.738,000 (wgt'ed) examples reached here.  /* #neg=15.842 #pos=7.896 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( haschild(B, D), haschild(E, D) )
%   | then if ( haschild(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haschild(F, A) )
%   | | then if ( haschild(F, G) )
%   | | | then return 0.6302322013528495;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1659622951608234;  // std dev = 72,590, 23.736,000 (wgt'ed) examples reached here.  /* #neg=15.840 #pos=7.896 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(C, A) )
%   then if ( haschild(B, D), haschild(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haschild(B, E) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( haschild(F, B), haschild(G, A) )
%   | | | then if ( haschild(G, H) )
%   | | | | then return 0.4930252128087158;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.14156179556312756;  // std dev = 72,593, 23.740,000 (wgt'ed) examples reached here.  /* #neg=15.844 #pos=7.896 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( haschild(B, D), haschild(E, D) )
%   | then if ( haschild(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4175135841583098;  // std dev = 5,58e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haschild(B, F), haschild(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( haschild(H, B) )
%   | | | then return 0.3713223124091624;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.11872343800282663;  // std dev = 72,593, 23.740,000 (wgt'ed) examples reached here.  /* #neg=15.844 #pos=7.896 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( haschild(B, D), haschild(E, D) )
%   | then if ( haschild(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3207118471601496;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haschild(F, A), haschild(G, B) )
%   | | then if ( haschild(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2802444957903803;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.09808501378622635;  // std dev = 72,593, 23.740,000 (wgt'ed) examples reached here.  /* #neg=15.844 #pos=7.896 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(C, A) )
%   then if ( haschild(B, D), haschild(E, D) )
%   | then if ( haschild(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25517224256948945;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haschild(F, A), haschild(G, B) )
%   | | then if ( haschild(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.215871968382499;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.08000693615684626;  // std dev = 72,594, 23.741,000 (wgt'ed) examples reached here.  /* #neg=15.845 #pos=7.896 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( haschild(B, D), haschild(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haschild(B, E) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( haschild(B, F), haschild(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( haschild(H, A) )
%   | | | | then return 0.17024717710075593;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.06463424552333356;  // std dev = 72,592, 23.739,000 (wgt'ed) examples reached here.  /* #neg=15.843 #pos=7.896 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( haschild(B, D), haschild(E, D) )
%   | then if ( haschild(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.17709649774527744;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haschild(B, F), haschild(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( haschild(H, A) )
%   | | | then return 0.13713633723655955;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.05175257047140548;  // std dev = 72,593, 23.740,000 (wgt'ed) examples reached here.  /* #neg=15.844 #pos=7.896 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(D, A) )
%   then if ( haschild(C, A) )
%   | then if ( haschild(B, E), haschild(F, E) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.11243535096764834;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haschild(D, G), haschild(G, H) )
%   | | then return 0.32773044691091124;  // std dev = 14,721, 919,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=569 */
%   | | else if ( haschild(B, I), haschild(J, B) )
%   | | | then if ( haschild(J, K) )
%   | | | | then return 0.005876492848049483;  // std dev = 4,816, 111,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( created(B, L), haschild(M, A) )
%   | | | | then return 0.2085791955507527;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | | else return 0.25986124683280504;  // std dev = 6,212, 156,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=86 */
%   else return 0.028101885520931773;  // std dev = 70,011, 22.543,000 (wgt'ed) examples reached here.  /* #neg=15.340 #pos=7.203 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(C, A) )
%   then if ( haschild(C, D), haschild(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haschild(B, E), haschild(F, E) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( haschild(B, G), haschild(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( haschild(I, A) )
%   | | | | then return 0.09352720014861136;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03247316163989709;  // std dev = 72,356, 23.739,000 (wgt'ed) examples reached here.  /* #neg=15.843 #pos=7.896 */


Results
   AUC ROC   = 0.530138
   AUC PR    = 0.390665
   CLL	      = -0.633684
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.003218
   F1        = 0.006415


Total learning time: 525.866 seconds
Total inference time: 100.287 seconds
AUC ROC: 0.530138


Structure after Parameter Learning
[['ismarriedto(A, B)', {'': 'haschild(C, B), haschild(C, A)', 'true,true': 'haschild(E, B), haschild(E, D)', 'true': 'haschild(B, D)', 'true,false': 'haschild(F, A), haschild(G, B)', 'true,false,true': 'haschild(F, H)'}, {'true,true,true': [0.0, 0, 0], 'false': [72.592, 15842, 7896], 'true,true,false': [0.0, 0, 18], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.943, 1, 8]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'true,true': 'haschild(E, B)', 'true': 'haschild(B, D), haschild(E, D)', 'true,false': 'haschild(F, A)', 'true,false,true': 'haschild(F, G)'}, {'true,true,true': [0.0, 0, 0], 'false': [72.59, 15840, 7896], 'true,true,false': [7.3e-08, 0, 18], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.943, 1, 8]}], ['ismarriedto(A, B)', {'': 'haschild(C, B), haschild(C, A)', 'true': 'haschild(B, D), haschild(C, D)', 'true,false,false': 'haschild(F, B), haschild(G, A)', 'true,false,false,true': 'haschild(G, H)', 'true,false': 'haschild(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 18], 'true,false,false,true,true': [0.943, 1, 8], 'true,false,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [72.593, 15844, 7896]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'true,true': 'haschild(E, A)', 'true': 'haschild(B, D), haschild(E, D)', 'true,false,false': 'haschild(H, B)', 'true,false': 'haschild(B, F), haschild(G, A)'}, {'true,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,false': [5.58e-08, 0, 18], 'true,false,false,false': [0.0, 0, 0], 'false': [72.593, 15844, 7896], 'true,false,false,true': [0.943, 1, 8]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'true,true': 'haschild(E, B)', 'true': 'haschild(B, D), haschild(E, D)', 'true,false': 'haschild(F, A), haschild(G, B)', 'true,false,true': 'haschild(B, H)'}, {'true,true,true': [0.0, 0, 0], 'false': [72.593, 15844, 7896], 'true,true,false': [2.11e-08, 0, 18], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.943, 1, 8], 'true,false,true,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(C, B), haschild(C, A)', 'true,true': 'haschild(E, B)', 'true': 'haschild(B, D), haschild(E, D)', 'true,false': 'haschild(F, A), haschild(G, B)', 'true,false,true': 'haschild(B, H)'}, {'true,true,true': [0.0, 0, 0], 'false': [72.594, 15845, 7896], 'true,true,false': [1.49e-08, 0, 18], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.943, 1, 8], 'true,false,true,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'true,false,false,false': 'haschild(H, A)', 'true': 'haschild(B, D), haschild(C, D)', 'true,false,false': 'haschild(B, F), haschild(G, F)', 'true,false': 'haschild(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 18], 'true,false,false,false,true': [0.943, 1, 8], 'false': [72.592, 15843, 7896], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'true,true': 'haschild(E, B)', 'true': 'haschild(B, D), haschild(E, D)', 'true,false,false': 'haschild(H, A)', 'true,false': 'haschild(B, F), haschild(G, F)'}, {'true,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 18], 'true,false,false,false': [0.0, 0, 0], 'false': [72.593, 15844, 7896], 'true,false,false,true': [0.943, 1, 8]}], ['ismarriedto(A, B)', {'': 'haschild(C, B), haschild(D, A)', 'true,true': 'haschild(B, E), haschild(F, E)', 'true': 'haschild(C, A)', 'true,false,false': 'haschild(B, I), haschild(J, B)', 'true,false,false,false': 'created(B, L), haschild(M, A)', 'true,false,false,true': 'haschild(J, K)', 'true,false': 'haschild(D, G), haschild(G, H)'}, {'true,true,true': [0.0, 0, 18], 'true,false,true': [14.721, 350, 569], 'true,true,false': [0.943, 1, 8], 'true,false,false,false,true': [1.581, 5, 5], 'true,false,false,true,true': [4.816, 78, 33], 'true,false,false,true,false': [0.0, 0, 0], 'false': [70.011, 15340, 7203], 'true,false,false,false,false': [6.212, 70, 86]}], ['ismarriedto(A, B)', {'': 'haschild(C, B), haschild(C, A)', 'true,false,false,false': 'haschild(I, A)', 'true': 'haschild(C, D), haschild(B, D)', 'true,false,false': 'haschild(B, G), haschild(H, G)', 'true,false': 'haschild(B, E), haschild(F, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 18], 'true,false,false,false,true': [0.943, 1, 8], 'false': [72.356, 15843, 7896], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.035665294924555065, 0.2219876928861016], 'true,false,true': [0.09876543209876527, nan], 'true': [-2.9605947323337506e-16, 0.09876543209876527], 'true,true': [nan, -2.9605947323337506e-16], 'true,false': [0.09876543209876527, nan]}, {'': [0.03469158708079281, 0.22199707398140026], 'true,false,true': [0.09876543209876543, nan], 'true': [2.9605947323337506e-16, 0.09876543209876543], 'true,true': [nan, 2.9605947323337506e-16], 'true,false': [0.09876543209876543, nan]}, {'': [0.033785461411151546, 0.22197831180088676], 'true': [nan, 0.03378546141115148], 'true,false,false,true': [0.09876543209876543, nan], 'true,false,false': [0.09876543209876543, nan], 'true,false': [-2.4671622769447924e-16, 0.09876543209876543]}, {'': [0.033395951496433623, 0.2219783118009663], 'true,true': [nan, 1.7270135938613546e-16], 'true': [1.7270135938613546e-16, 0.0987654320987655], 'true,false,false': [0.0987654320987655, nan], 'true,false': [nan, 0.0987654320987655]}, {'': [0.033285723261118325, 0.2219783118009516], 'true,false,true': [nan, 0.09876543209876544], 'true': [2.4671622769447922e-17, 0.09876543209876544], 'true,true': [nan, 2.4671622769447922e-17], 'true,false': [0.09876543209876544, nan]}, {'': [0.03326503548873796, 0.22197362126228354], 'true,false,true': [nan, 0.0987654320987654], 'true': [1.2335811384723961e-17, 0.0987654320987654], 'true,true': [nan, 1.2335811384723961e-17], 'true,false': [0.0987654320987654, nan]}, {'': [0.03326871795627102, 0.22198300234240478], 'true,false,false,false': [0.09876543209876544, nan], 'true': [nan, 0.033268717956270955], 'true,false,false': [nan, 0.09876543209876544], 'true,false': [-3.700743415417188e-17, 0.09876543209876544]}, {'': [0.03327665835022902, 0.22197831180105973], 'true,true': [nan, -1.850371707708594e-17], 'true': [-1.850371707708594e-17, 0.0987654320987654], 'true,false,false': [0.0987654320987654, nan], 'true,false': [nan, 0.0987654320987654]}, {'': [0.2395229022434309, 0.2174279405644701], 'true,false,false,false': [0.25000000000000006, 0.24737015121630515], 'true,false,false,true': [0.2089116143170188, nan], 'true,false,false': [0.2089116143170188, 0.24767745681521275], 'true': [0.03328287197663925, 0.24369064663708165], 'true,true': [-2.7755575615628914e-17, 0.09876543209876541], 'true,false': [0.23580297929932095, 0.24725983656766073]}, {'': [0.03328594772746534, 0.22054235673143993], 'true,false,false,false': [0.09876543209876543, nan], 'true': [nan, 0.03328594772746534], 'true,false,false': [nan, 0.09876543209876543], 'true,false': [0.0, 0.09876543209876543]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;ismarriedto(A, B) :- haschild(C, B), haschild(C, A).;true;true', '0;true;haschild(B, D).;true;true', '1;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '1;true;haschild(B, D), haschild(E, D).;true;true', '2;;ismarriedto(A, B) :- haschild(C, B), haschild(C, A).;true;true', '2;true;haschild(B, E).;true;true', '3;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '3;true;haschild(B, D), haschild(E, D).;true;true', '4;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '4;true;haschild(B, D), haschild(E, D).;true;true', '5;;ismarriedto(A, B) :- haschild(C, B), haschild(C, A).;true;true', '5;true;haschild(B, D), haschild(E, D).;true;true', '6;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '6;true;haschild(B, E).;true;true', '7;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '7;true;haschild(B, D), haschild(E, D).;true;true', '8;;ismarriedto(A, B) :- haschild(C, B), haschild(D, A).;true;true', '8;true,true;haschild(B, E), haschild(F, E).;true;true', '8;true;haschild(C, A).;true;true', '9;;ismarriedto(A, B) :- haschild(C, B), haschild(C, A).;true;true', '9;true;haschild(B, E), haschild(F, E).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(C, A) )
%   then return 0.8211118980624748;  // std dev = 0,189, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   else if ( actedin(B, D), actedin(A, E) )
%   | then if ( directed(F, D), directed(F, E) )
%   | | then if ( actedin(B, E) )
%   | | | then return 0.8532708863190214;  // std dev = 0,998, 205,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=204 */
%   | | | else return 0.6951054568386422;  // std dev = 3,543, 92,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=77 */
%   | | else if ( wrotemusicfor(G, E), directed(G, H) )
%   | | | then return 0.2805627282029616;  // std dev = 5,320, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | else return 0.37800453076737794;  // std dev = 16,630, 1.108,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=576 */
%   | else if ( actedin(B, I), haschild(J, A) )
%   | | then if ( haschild(K, J) )
%   | | | then return -0.1364162822917919;  // std dev = 1,410, 368,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=2 */
%   | | | else return -0.03737345296018928;  // std dev = 4,337, 201,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=21 */
%   | | else if ( haschild(L, A), haschild(M, B) )
%   | | | then return 0.4524641805775436;  // std dev = 16,731, 1.161,000 (wgt'ed) examples reached here.  /* #neg=471 #pos=690 */
%   | | | else return 0.16458322527733854;  // std dev = 65,981, 20.484,000 (wgt'ed) examples reached here.  /* #neg=14.207 #pos=6.277 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( haschild(B, D), haschild(E, D) )
%   | then return 0.7268875357578021;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.6157764246466909;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( haschild(A, F), haschild(B, G) )
%   | then if ( haschild(A, G) )
%   | | then return 0.8195461393295793;  // std dev = 0,780, 1.008,000 (wgt'ed) examples reached here.  /* #pos=1.008 */
%   | | else if ( livesin(B, H), happenedin(I, H) )
%   | | | then return 0.2572562636071901;  // std dev = 2,302, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.09699644851847661;  // std dev = 7,007, 705,000 (wgt'ed) examples reached here.  /* #neg=651 #pos=54 */
%   | else if ( haschild(B, J) )
%   | | then if ( actedin(A, K), haschild(L, B) )
%   | | | then return -0.1418792150018425;  // std dev = 2,709, 312,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=8 */
%   | | | else return 0.014412709110303458;  // std dev = 19,345, 2.567,000 (wgt'ed) examples reached here.  /* #neg=2.102 #pos=465 */
%   | | else if ( haschild(A, M) )
%   | | | then return 0.008635041493818411;  // std dev = 20,979, 3.156,000 (wgt'ed) examples reached here.  /* #neg=2.611 #pos=545 */
%   | | | else return 0.1967233816332429;  // std dev = 60,400, 15.970,000 (wgt'ed) examples reached here.  /* #neg=10.163 #pos=5.807 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(C, A) )
%   then if ( haschild(B, D) )
%   | then return 0.5626688470011423;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haschild(A, E) )
%   | | then return 0.5897934741361743;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3897934741361743;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( haschild(B, F), haschild(A, F) )
%   | then return 0.6677039157160957;  // std dev = 1,137, 1.008,000 (wgt'ed) examples reached here.  /* #pos=1.008 */
%   | else if ( actedin(B, G), actedin(A, H) )
%   | | then if ( actedin(A, G) )
%   | | | then return 0.6900510573852695;  // std dev = 1,076, 214,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=213 */
%   | | | else return 0.2912272913572738;  // std dev = 17,700, 1.271,000 (wgt'ed) examples reached here.  /* #neg=614 #pos=657 */
%   | | else if ( haschild(B, I) )
%   | | | then return -0.02381906603741058;  // std dev = 20,463, 3.519,000 (wgt'ed) examples reached here.  /* #neg=3.024 #pos=495 */
%   | | | else return 0.12439394635815253;  // std dev = 61,319, 17.728,000 (wgt'ed) examples reached here.  /* #neg=12.205 #pos=5.523 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.40200233081342585;  // std dev = 0,180, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   else if ( actedin(A, D), actedin(B, E) )
%   | then if ( directed(F, E), directed(F, D) )
%   | | then if ( created(B, G), haschild(B, H) )
%   | | | then return 0.3055683660857192;  // std dev = 1,287, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.5047866521110305;  // std dev = 3,363, 284,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=271 */
%   | | else if ( directed(B, E), wrotemusicfor(I, E) )
%   | | | then return -0.0814202145627177;  // std dev = 2,031, 29,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.23763418276908913;  // std dev = 17,122, 1.195,000 (wgt'ed) examples reached here.  /* #neg=576 #pos=619 */
%   | else if ( actedin(A, J), haschild(K, B) )
%   | | then if ( created(B, L), actedin(M, L) )
%   | | | then return 0.30542908590092044;  // std dev = 1,811, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.14809713385892417;  // std dev = 3,835, 573,000 (wgt'ed) examples reached here.  /* #neg=557 #pos=16 */
%   | | else if ( haschild(A, N), haschild(B, N) )
%   | | | then return 0.5117712242345145;  // std dev = 1,074, 971,000 (wgt'ed) examples reached here.  /* #pos=971 */
%   | | | else return 0.09035367941296862;  // std dev = 64,586, 20.658,000 (wgt'ed) examples reached here.  /* #neg=14.662 #pos=5.996 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( haschild(B, D), haschild(E, D) )
%   | then return 0.3290090014163827;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.2626043153516533;  // std dev = 0,308, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( haschild(F, A), haschild(G, B) )
%   | then if ( haschild(A, H), haschild(B, H) )
%   | | then return 0.34289451063870113;  // std dev = 0,082, 343,000 (wgt'ed) examples reached here.  /* #pos=343 */
%   | | else if ( haschild(B, I), haschild(A, J) )
%   | | | then return -0.08359956245346391;  // std dev = 4,410, 186,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=22 */
%   | | | else return 0.2461678705057223;  // std dev = 12,627, 665,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=328 */
%   | else if ( actedin(A, K), haschild(L, B) )
%   | | then if ( actedin(B, M), directed(N, M) )
%   | | | then return 0.19368812051640646;  // std dev = 3,484, 64,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=38 */
%   | | | else return -0.12256175811655601;  // std dev = 4,014, 547,000 (wgt'ed) examples reached here.  /* #neg=529 #pos=18 */
%   | | else if ( haschild(P, A), haschild(Q, P) )
%   | | | then return -0.029365487974272575;  // std dev = 15,023, 1.867,000 (wgt'ed) examples reached here.  /* #neg=1.516 #pos=351 */
%   | | | else return 0.10188436925341754;  // std dev = 64,175, 20.063,000 (wgt'ed) examples reached here.  /* #neg=13.267 #pos=6.796 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(C, A) )
%   then if ( haschild(B, D), haschild(E, D) )
%   | then return 0.2608260414824267;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haschild(A, F) )
%   | | then return 0.2908440096060868;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1337465140022292;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( haschild(B, G), haschild(A, G) )
%   | then if ( haschild(H, B), haschild(I, A) )
%   | | then return 0.2702632502884332;  // std dev = 0,074, 343,000 (wgt'ed) examples reached here.  /* #pos=343 */
%   | | else return 0.3874526074499209;  // std dev = 0,725, 665,000 (wgt'ed) examples reached here.  /* #pos=665 */
%   | else if ( haschild(B, J) )
%   | | then if ( haschild(J, K), wasbornin(A, L) )
%   | | | then return -0.12853508920722384;  // std dev = 4,206, 426,000 (wgt'ed) examples reached here.  /* #neg=407 #pos=19 */
%   | | | else return -0.0262427701422582;  // std dev = 20,269, 3.180,000 (wgt'ed) examples reached here.  /* #neg=2.663 #pos=517 */
%   | | else if ( haschild(A, M) )
%   | | | then return -0.03907147361872262;  // std dev = 20,690, 3.155,000 (wgt'ed) examples reached here.  /* #neg=2.610 #pos=545 */
%   | | | else return 0.10671743161630565;  // std dev = 59,726, 15.971,000 (wgt'ed) examples reached here.  /* #neg=10.164 #pos=5.807 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( haschild(B, D) )
%   | then return 0.21374362142803124;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.16246173251297902;  // std dev = 0,305, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( actedin(A, E), actedin(B, F) )
%   | then if ( directed(G, F), directed(G, E) )
%   | | then if ( created(G, H), directed(G, H) )
%   | | | then return 0.3577315474943911;  // std dev = 1,981, 177,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=173 */
%   | | | else return 0.28190945215851854;  // std dev = 3,006, 120,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=108 */
%   | | else if ( haswonprize(A, I), wasbornin(B, J) )
%   | | | then return 0.00378895182323423;  // std dev = 4,773, 100,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=37 */
%   | | | else return 0.14769929534959023;  // std dev = 16,519, 1.124,000 (wgt'ed) examples reached here.  /* #neg=536 #pos=588 */
%   | else if ( haschild(B, K), haschild(A, K) )
%   | | then return 0.27446959204077204;  // std dev = 0,041, 972,000 (wgt'ed) examples reached here.  /* #pos=972 */
%   | | else if ( haschild(A, L) )
%   | | | then return -0.04648819839606311;  // std dev = 21,498, 3.790,000 (wgt'ed) examples reached here.  /* #neg=3.228 #pos=562 */
%   | | | else return 0.06162273379321348;  // std dev = 60,422, 17.457,000 (wgt'ed) examples reached here.  /* #neg=12.001 #pos=5.456 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( haschild(B, D), haschild(E, D) )
%   | then return 0.18001449675438158;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haschild(A, F) )
%   | | then return 0.20675556168031295;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.07140681180184245;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( haschild(B, G), haschild(A, G) )
%   | then if ( haschild(H, A), haschild(I, B) )
%   | | then return 0.1768973147428476;  // std dev = 0,080, 343,000 (wgt'ed) examples reached here.  /* #pos=343 */
%   | | else return 0.24668171370049632;  // std dev = 0,597, 665,000 (wgt'ed) examples reached here.  /* #pos=665 */
%   | else if ( haschild(B, J) )
%   | | then if ( haschild(K, A) )
%   | | | then return 0.02471661355165392;  // std dev = 10,648, 718,000 (wgt'ed) examples reached here.  /* #neg=561 #pos=157 */
%   | | | else return -0.05566987835385444;  // std dev = 17,667, 2.888,000 (wgt'ed) examples reached here.  /* #neg=2.509 #pos=379 */
%   | | else if ( haschild(A, L) )
%   | | | then return -0.02669479449183421;  // std dev = 20,662, 3.156,000 (wgt'ed) examples reached here.  /* #neg=2.611 #pos=545 */
%   | | | else return 0.07175875682498067;  // std dev = 59,621, 15.970,000 (wgt'ed) examples reached here.  /* #neg=10.163 #pos=5.807 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(D, A) )
%   then if ( haschild(C, A) )
%   | then return 0.13986409340626313;  // std dev = 0,177, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( haschild(B, E) )
%   | | then if ( haschild(A, E) )
%   | | | then return 0.15259553108924545;  // std dev = 0,072, 343,000 (wgt'ed) examples reached here.  /* #pos=343 */
%   | | | else return 0.031179385873021787;  // std dev = 7,987, 364,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=92 */
%   | | else if ( actedin(B, F) )
%   | | | then return -0.17747818981413876;  // std dev = 1,311, 30,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | | else return 0.22283420316651975;  // std dev = 10,378, 458,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=256 */
%   else if ( actedin(A, G), isaffiliatedto(B, H) )
%   | then return -0.18683041521905644;  // std dev = 0,258, 325,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=28 */
%   | else if ( haschild(B, I), haschild(A, I) )
%   | | then return 0.20424252344820953;  // std dev = 0,019, 662,000 (wgt'ed) examples reached here.  /* #pos=662 */
%   | | else if ( diedin(A, J), diedin(B, J) )
%   | | | then return 0.6245249498404871;  // std dev = 2,202, 96,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=92 */
%   | | | else return 0.028434199839691653;  // std dev = 64,627, 21.461,000 (wgt'ed) examples reached here.  /* #neg=15.040 #pos=6.421 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(C, A) )
%   then return 0.12059687779990098;  // std dev = 0,177, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   else if ( influences(D, B), created(A, E) )
%   | then if ( haswonprize(D, F), wasbornin(D, G) )
%   | | then if ( graduatedfrom(D, H), haswonprize(B, I) )
%   | | | then return -0.18126209098773535;  // std dev = 0,407, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5198108227809478;  // std dev = 1,995, 29,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | | else if ( actedin(A, J), created(D, K) )
%   | | | then return 0.4918015903334973;  // std dev = 0,764, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.032802520507133795;  // std dev = 2,734, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else if ( actedin(A, L), isaffiliatedto(B, M) )
%   | | then if ( wasbornin(B, N), livesin(B, N) )
%   | | | then return 0.3443672893126058;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.16111906708178922;  // std dev = 4,384, 322,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=25 */
%   | | else if ( isaffiliatedto(B, P), isaffiliatedto(A, Q) )
%   | | | then return 0.3402858386196754;  // std dev = 8,476, 342,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=227 */
%   | | | else return 0.02823710159859274;  // std dev = 65,384, 22.992,000 (wgt'ed) examples reached here.  /* #neg=15.393 #pos=7.599 */


Results
   AUC ROC   = 0.70937
   AUC PR    = 0.611419
   CLL	      = -0.553083
   Precision = 0.989713 at threshold = 0.5
   Recall    = 0.176047
   F1        = 0.298923


Total learning time: 862.967 seconds
Total inference time: 73.383 seconds
AUC ROC: 0.70937


Refined model AUC ROC: 0.70937


Dataset: 19_uwcse_yago2s, Fold: 3, Type: transfer, Time: 05:31:01
{'AUC ROC': 0.70937, 'Precision': [0.989713, 0.5], 'Mapping results': {'Generating mappings time': 8.256527662277222, 'Knowledge compiling time': 22.66694974899292, 'Finding best mapping': 2.9166202545166016, 'Possible mappings': 10976, 'Total time': 36.748619079589844, 'Generating paths time': 2.9085142612457275}, 'Inference time': 73.383, 'CLL': -0.553083, 'AUC PR': 0.611419, 'Learning time': 1388.833, 'Parameter Learning results': {'AUC ROC': 0.530138, 'Precision': [1.0, 0.5], 'Inference time': 100.287, 'CLL': -0.633684, 'AUC PR': 0.390665, 'Learning time': 525.866, 'Recall': 0.003218, 'F1': 0.006415}, 'Recall': 0.176047, 'F1': 0.298923}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, D) )
%   then if ( haschild(E, B), haschild(F, A) )
%   | then if ( haschild(A, C) )
%   | | then return 0.8581489350995083;  // std dev = 1,17e-06, 358,000 (wgt'ed) examples reached here.  /* #pos=358 */
%   | | else return -0.023571495008014743;  // std dev = 0,323, 186,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=22 */
%   | else if ( haschild(A, C) )
%   | | then return 0.8581489350995077;  // std dev = 3,17e-06, 665,000 (wgt'ed) examples reached here.  /* #pos=665 */
%   | | else return -0.06606548264540506;  // std dev = 0,265, 541,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=41 */
%   else if ( actedin(B, G), actedin(A, H) )
%   | then if ( directed(I, G), directed(I, H) )
%   | | then return 0.799754774515567;  // std dev = 0,234, 274,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=258 */
%   | | else if ( directed(B, G), wrotemusicfor(J, G) )
%   | | | then return 0.011995088945666114;  // std dev = 1,840, 26,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.3721438460409834;  // std dev = 17,162, 1.179,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=606 */
%   | else if ( haschild(B, K) )
%   | | then return 0.014108963650542646;  // std dev = 0,363, 2.802,000 (wgt'ed) examples reached here.  /* #neg=2.365 #pos=437 */
%   | | else return 0.16998295438137154;  // std dev = 0,463, 17.737,000 (wgt'ed) examples reached here.  /* #neg=12.206 #pos=5.531 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( actedin(B, C), haschild(D, A) )
%   then if ( directed(A, E), directed(F, C) )
%   | then if ( edited(F, G), created(F, G) )
%   | | then return -0.17672779385992554;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswonprize(A, H), created(A, E) )
%   | | | then return 0.5185312825069339;  // std dev = 1,194, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.7941337728009219;  // std dev = 0,141, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.070569584155224;  // std dev = 0,283, 636,000 (wgt'ed) examples reached here.  /* #neg=574 #pos=62 */
%   else if ( actedin(A, I), haschild(J, B) )
%   | then return -0.06553933759586358;  // std dev = 0,276, 653,000 (wgt'ed) examples reached here.  /* #neg=592 #pos=61 */
%   | else if ( haschild(B, K), haschild(A, L) )
%   | | then if ( haschild(A, K) )
%   | | | then return 0.7194734122109588;  // std dev = 0,000, 1.012,000 (wgt'ed) examples reached here.  /* #pos=1.012 */
%   | | | else return -0.0452134896755063;  // std dev = 7,507, 688,000 (wgt'ed) examples reached here.  /* #neg=626 #pos=62 */
%   | | else if ( actedin(A, M), actedin(B, N) )
%   | | | then return 0.3812428022881182;  // std dev = 17,629, 1.333,000 (wgt'ed) examples reached here.  /* #neg=550 #pos=783 */
%   | | | else return 0.1438200513992961;  // std dev = 64,073, 19.422,000 (wgt'ed) examples reached here.  /* #neg=13.497 #pos=5.925 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( actedin(A, C), actedin(B, D) )
%   then if ( directed(E, D), directed(E, C) )
%   | then return 0.6013579667516923;  // std dev = 0,228, 297,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=281 */
%   | else if ( wrotemusicfor(F, D), wrotemusicfor(F, C) )
%   | | then if ( created(A, G), wasbornin(B, H) )
%   | | | then return -0.09444740802716312;  // std dev = 0,981, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.6341594334676983;  // std dev = 2,660, 71,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=63 */
%   | | else if ( edited(I, C), directed(I, J) )
%   | | | then return 0.12363456603229733;  // std dev = 6,240, 170,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=64 */
%   | | | else return 0.25542432349420235;  // std dev = 15,518, 975,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=497 */
%   else if ( haschild(B, K), haschild(A, K) )
%   | then return 0.5559068592790621;  // std dev = 0,307, 987,000 (wgt'ed) examples reached here.  /* #pos=987 */
%   | else if ( haschild(A, L) )
%   | | then return -0.022534743496457316;  // std dev = 0,354, 3.793,000 (wgt'ed) examples reached here.  /* #neg=3.227 #pos=566 */
%   | | else if ( haschild(B, M) )
%   | | | then return -0.003137953733959913;  // std dev = 19,146, 2.802,000 (wgt'ed) examples reached here.  /* #neg=2.365 #pos=437 */
%   | | | else return 0.1591965823326812;  // std dev = 57,404, 14.664,000 (wgt'ed) examples reached here.  /* #neg=9.638 #pos=5.026 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(D, B) )
%   then if ( haschild(A, E), haschild(B, E) )
%   | then return 0.4172797868572775;  // std dev = 0,037, 358,000 (wgt'ed) examples reached here.  /* #pos=358 */
%   | else if ( haschild(A, F), haschild(B, G) )
%   | | then return -0.012774405168466658;  // std dev = 0,323, 186,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=22 */
%   | | else return 0.31405300674860004;  // std dev = 0,494, 679,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=339 */
%   else if ( livesin(A, H), livesin(B, I) )
%   | then if ( livesin(A, I) )
%   | | then return 0.7588961918317422;  // std dev = 0,111, 77,000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | else if ( haschild(B, J), haschild(A, K) )
%   | | | then return 0.5694784209471556;  // std dev = 0,527, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1753931776819623;  // std dev = 3,751, 61,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | else if ( haschild(A, L), haschild(B, L) )
%   | | then return 0.4210672910422098;  // std dev = 0,677, 654,000 (wgt'ed) examples reached here.  /* #pos=654 */
%   | | else if ( haschild(A, M) )
%   | | | then return -0.03261120051532475;  // std dev = 20,139, 3.462,000 (wgt'ed) examples reached here.  /* #neg=2.972 #pos=490 */
%   | | | else return 0.11431226709093685;  // std dev = 62,111, 18.284,000 (wgt'ed) examples reached here.  /* #neg=12.331 #pos=5.953 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( actedin(A, C), actedin(B, D) )
%   then if ( actedin(A, D) )
%   | then return 0.48645132255688106;  // std dev = 0,100, 232,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=231 */
%   | else if ( directed(A, D), created(E, C) )
%   | | then return 0.5879894317823345;  // std dev = 0,115, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( created(A, F), wasbornin(B, G) )
%   | | | then return 0.06624509473228252;  // std dev = 4,506, 91,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | | else return 0.18768778522424795;  // std dev = 16,760, 1.187,000 (wgt'ed) examples reached here.  /* #neg=558 #pos=629 */
%   else if ( actedin(A, H), directed(I, H) )
%   | then if ( directed(B, J), actedin(K, J) )
%   | | then return 0.3442678196028307;  // std dev = 0,488, 219,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=125 */
%   | | else return -0.020152166504554963;  // std dev = 0,385, 3.054,000 (wgt'ed) examples reached here.  /* #neg=2.464 #pos=590 */
%   | else if ( haschild(B, L), haschild(A, L) )
%   | | then return 0.31988930392568865;  // std dev = 0,330, 964,000 (wgt'ed) examples reached here.  /* #pos=964 */
%   | | else if ( haschild(B, M) )
%   | | | then return -0.004390258098676056;  // std dev = 19,801, 2.938,000 (wgt'ed) examples reached here.  /* #neg=2.460 #pos=478 */
%   | | | else return 0.1023101405018888;  // std dev = 56,769, 15.069,000 (wgt'ed) examples reached here.  /* #neg=10.210 #pos=4.859 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(D, A) )
%   then if ( actedin(B, E) )
%   | then return -0.1699480963394379;  // std dev = 0,202, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | else if ( haschild(A, F) )
%   | | then return 0.17238928094500292;  // std dev = 0,324, 745,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=469 */
%   | | else if ( actedin(D, G) )
%   | | | then return -0.20179319838076154;  // std dev = 0,193, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.34070101593318725;  // std dev = 9,822, 415,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=247 */
%   else if ( haschild(H, A), haschild(I, H) )
%   | then if ( actedin(B, J) )
%   | | then return -0.16304835339800683;  // std dev = 0,103, 352,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=5 */
%   | | else return -0.01471953352719237;  // std dev = 0,366, 1.517,000 (wgt'ed) examples reached here.  /* #neg=1.171 #pos=346 */
%   | else if ( directed(A, K), actedin(B, K) )
%   | | then return 0.6039348235406686;  // std dev = 0,212, 83,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=82 */
%   | | else if ( haschild(L, B), actedin(A, M) )
%   | | | then return -0.0974178507733815;  // std dev = 5,948, 608,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=54 */
%   | | | else return 0.08076162249437073;  // std dev = 63,209, 19.980,000 (wgt'ed) examples reached here.  /* #neg=13.264 #pos=6.716 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.2386188814266381;  // std dev = 0,933, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(A, D) )
%   | then if ( actedin(B, E) )
%   | | then if ( actedin(A, F), created(G, F) )
%   | | | then return 0.11914981399723773;  // std dev = 4,311, 89,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=46 */
%   | | | else return -0.1417569675571801;  // std dev = 4,367, 619,000 (wgt'ed) examples reached here.  /* #neg=599 #pos=20 */
%   | | else if ( created(B, H), haschild(D, I) )
%   | | | then return -0.1678033101715626;  // std dev = 1,734, 148,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=3 */
%   | | | else return -0.011330132124113471;  // std dev = 20,732, 3.031,000 (wgt'ed) examples reached here.  /* #neg=2.488 #pos=543 */
%   | else if ( actedin(A, J), haschild(K, B) )
%   | | then if ( actedin(K, L) )
%   | | | then return 0.2023436389027197;  // std dev = 3,089, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return -0.11493267928148691;  // std dev = 4,674, 563,000 (wgt'ed) examples reached here.  /* #neg=535 #pos=28 */
%   | | else if ( created(B, M), created(A, N) )
%   | | | then return 0.25221813549802324;  // std dev = 10,388, 452,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=239 */
%   | | | else return 0.07194772826416983;  // std dev = 61,314, 17.795,000 (wgt'ed) examples reached here.  /* #neg=11.799 #pos=5.996 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.1981653831714913;  // std dev = 0,846, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(A, D) )
%   | then if ( haschild(E, B) )
%   | | then if ( haschild(B, F) )
%   | | | then return -0.04138635428598665;  // std dev = 5,545, 360,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=35 */
%   | | | else return 0.15354939117907399;  // std dev = 9,437, 386,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=153 */
%   | | else if ( haschild(D, G) )
%   | | | then return -0.08788417344261722;  // std dev = 10,470, 1.413,000 (wgt'ed) examples reached here.  /* #neg=1.287 #pos=126 */
%   | | | else return -0.022065336678325696;  // std dev = 15,262, 1.728,000 (wgt'ed) examples reached here.  /* #neg=1.430 #pos=298 */
%   | else if ( haschild(B, H) )
%   | | then if ( actedin(A, I) )
%   | | | then return -0.10785613177740164;  // std dev = 6,052, 652,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=58 */
%   | | | else return -0.018634277539963356;  // std dev = 18,234, 2.230,000 (wgt'ed) examples reached here.  /* #neg=1.812 #pos=418 */
%   | | else if ( graduatedfrom(B, J), graduatedfrom(A, K) )
%   | | | then return 0.3662492777429615;  // std dev = 5,977, 163,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=107 */
%   | | | else return 0.07128448218300988;  // std dev = 58,862, 15.811,000 (wgt'ed) examples reached here.  /* #neg=10.107 #pos=5.704 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( actedin(A, C), isaffiliatedto(B, D) )
%   then if ( graduatedfrom(A, E), owns(E, F) )
%   | then if ( worksat(G, E), directed(H, C) )
%   | | then return -0.1805628083499313;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.652480259898771;  // std dev = 0,277, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haschild(I, A), haswonprize(A, J) )
%   | | then return 0.16945049242998556;  // std dev = 1,031, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.1831784528732585;  // std dev = 0,231, 313,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=22 */
%   else if ( isaffiliatedto(B, K), isaffiliatedto(A, K) )
%   | then if ( haschild(A, L), haschild(B, L) )
%   | | then return 0.16683446578555086;  // std dev = 0,053, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.6306253443927209;  // std dev = 0,236, 169,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=159 */
%   | else if ( actedin(B, M), actedin(A, M) )
%   | | then return 0.3159595815928876;  // std dev = 0,106, 227,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=226 */
%   | | else if ( haschild(B, N), haschild(A, N) )
%   | | | then return 0.16905236385800715;  // std dev = 0,727, 981,000 (wgt'ed) examples reached here.  /* #pos=981 */
%   | | | else return 0.028292973212819872;  // std dev = 65,315, 22.035,000 (wgt'ed) examples reached here.  /* #neg=15.531 #pos=6.504 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( diedin(A, C), diedin(B, C) )
%   then if ( haschild(B, D), haschild(A, E) )
%   | then return 0.13889787111309074;  // std dev = 0,306, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | else if ( isleaderof(F, C), wasbornin(B, G) )
%   | | then if ( actedin(A, H), directed(I, H) )
%   | | | then return 0.2606988242728017;  // std dev = 0,935, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6681211684957563;  // std dev = 0,997, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.6612558585350069;  // std dev = 0,116, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   else if ( actedin(A, J), directed(B, J) )
%   | then return 0.5531762288900095;  // std dev = 0,167, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( actedin(B, K), directed(A, K) )
%   | | then if ( actedin(A, L) )
%   | | | then return 0.19180459127378532;  // std dev = 0,518, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.5603280660291694;  // std dev = 1,008, 52,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | else if ( actedin(A, M), isaffiliatedto(B, N) )
%   | | | then return -0.13892428426972897;  // std dev = 4,462, 327,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=28 */
%   | | | else return 0.027978212737246017;  // std dev = 65,264, 23.130,000 (wgt'ed) examples reached here.  /* #neg=15.540 #pos=7.590 */


Results
   AUC ROC   = 0.729103
   AUC PR    = 0.636818
   CLL	      = -0.545902
   Precision = 0.981029 at threshold = 0.5
   Recall    = 0.192516
   F1        = 0.321869


Total learning time: 880.893 seconds
Total inference time: 73.759 seconds
AUC ROC: 0.729103


Dataset: 19_uwcse_yago2s, Fold: 3, Type: scratch, Time: 05:46:59
{'AUC ROC': 0.729103, 'Precision': [0.981029, 0.5], 'Inference time': 73.759, 'CLL': -0.545902, 'AUC PR': 0.636818, 'Learning time': 880.893, 'Recall': 0.192516, 'F1': 0.321869}


