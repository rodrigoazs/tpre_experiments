Starting experiment #1 for 22_cora_yago2s

Start learning from source dataset

Starting experiment #1 for 22_cora_yago2s

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6581489350995123;  // std dev = 0,400, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return 0.31587488262137303;  // std dev = 0,498, 6.174,000 (wgt'ed) examples reached here.  /* #neg=3.348 #pos=2.826 */
%   else return 0.07609765304822587;  // std dev = 0,413, 780,000 (wgt'ed) examples reached here.  /* #neg=610 #pos=170 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.27420079671105796;  // std dev = 0,498, 6.199,000 (wgt'ed) examples reached here.  /* #neg=3.352 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.08033811777523382;  // std dev = 0,422, 82,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | else return 0.06496317892556203;  // std dev = 0,412, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5356005891470361;  // std dev = 0,363, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.331929393803216;  // std dev = 4,239, 73,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.12239823424311484;  // std dev = 4,025, 71,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.347750346919172;  // std dev = 4,162, 71,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   | | | else return 0.12742841532963398;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | else return 0.2277486249213432;  // std dev = 0,498, 5.889,000 (wgt'ed) examples reached here.  /* #neg=3.195 #pos=2.694 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( haswordauthor(L, M), haswordvenue(B, M) )
%   | | then return -0.1619806605984269;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.08801933940157272;  // std dev = 0,433, 76,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else return 0.05642792580603343;  // std dev = 0,412, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18610578691602084;  // std dev = 0,498, 6.199,000 (wgt'ed) examples reached here.  /* #neg=3.352 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4923798105708192;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.16876861818387423;  // std dev = 0,030, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.14117742862400778;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05648237467338337;  // std dev = 3,397, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | else return 0.04870145151200223;  // std dev = 0,412, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1476670581375947;  // std dev = 0,498, 6.199,000 (wgt'ed) examples reached here.  /* #neg=3.352 #pos=2.847 */
%   else return 0.04264530848169804;  // std dev = 0,412, 780,000 (wgt'ed) examples reached here.  /* #neg=610 #pos=170 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11516666499680867;  // std dev = 0,498, 6.199,000 (wgt'ed) examples reached here.  /* #neg=3.352 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.12913411908976258;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.18212011577441614;  // std dev = 1,592, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.04870818221644353;  // std dev = 3,379, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.08909956700920293;  // std dev = 1,344, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.029734084154121484;  // std dev = 3,307, 64,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else return 0.03397730868003491;  // std dev = 0,411, 624,000 (wgt'ed) examples reached here.  /* #neg=490 #pos=134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08874537830264932;  // std dev = 0,498, 6.199,000 (wgt'ed) examples reached here.  /* #neg=3.352 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.1152940905439212;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.05075309562739694;  // std dev = 0,426, 76,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else return 0.029938229777708766;  // std dev = 0,412, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0678332753707975;  // std dev = 0,498, 6.199,000 (wgt'ed) examples reached here.  /* #neg=3.352 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.10404543453835739;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.05278374079148505;  // std dev = 0,430, 76,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else return 0.024242959620569507;  // std dev = 0,411, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.26240375465921484;  // std dev = 0,363, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1255643623312712;  // std dev = 4,238, 73,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.025823183909454327;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.15088869486138598;  // std dev = 4,001, 68,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | | | else return -0.027836703081226953;  // std dev = 4,179, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | else return 0.050529754758826886;  // std dev = 0,498, 5.889,000 (wgt'ed) examples reached here.  /* #neg=3.195 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, A) )
%   | | then return 0.11956489512432282;  // std dev = 0,464, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.01948257022132036;  // std dev = 0,405, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | else return 0.02045467956052306;  // std dev = 0,411, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, B) )
%   | | then return 0.33295560921073697;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16688628116558055;  // std dev = 0,399, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return 0.038404764671994475;  // std dev = 0,498, 6.174,000 (wgt'ed) examples reached here.  /* #neg=3.348 #pos=2.826 */
%   else return 0.018401453370451116;  // std dev = 0,412, 780,000 (wgt'ed) examples reached here.  /* #neg=610 #pos=170 */


Predicates from source: ['samevenue(venue,venue).', 'haswordvenue(venue,word).', 'author(class,author).', 'samebib(class,class).', 'venue(class,venue).', 'haswordauthor(author,word).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 19.315788984298706
   Generating paths time   = 2.5255963802337646
   Generating mappings time   = 101.88272976875305
   Possible mappings   = 441488
   Finding best mapping   = 167.96623611450195
   Total time   = 291.6903600692749


Best mapping found: ['venue(A,B) -> haschild(B,A)', 'samevenue(A,B) -> ismarriedto(A,B)', 'samebib(A,B) -> influences(A,B)', 'haswordauthor(A,B) -> actedin(B,A)', 'author(A,B) -> created(A,B)', 'haswordvenue(A,B) -> haschild(B,A)'] 

Transferred target predicate: ismarriedto 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;false
0;true,true;created(E, D), haschild(A, E).;false;false
0;true;actedin(C, D).;true;false
1;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;false;true
1;false;haschild(D, A), actedin(D, E).;false;false
2;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true
2;true,false;haschild(H, A), actedin(H, I).;true;false
2;true;haschild(D, B), actedin(D, E).;true;true
2;true,true;actedin(C, F).;false;true
2;true,true,false;created(G, E), haschild(B, G).;false;false
2;false;haschild(K, A), actedin(K, L).;true;false
2;false,true;actedin(M, L), haschild(M, B).;false;false
2;true,false,true;created(J, I), haschild(A, J).;false;false
3;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;false;true
3;false;haschild(D, A), actedin(D, E).;true;false
3;false,true,true;influences(F, G), haschild(A, G).;false;false
3;false,true;created(F, E), haschild(B, F).;true;true
3;false,true,false;actedin(H, E), haschild(H, B).;false;false
4;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;false;false
5;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;false;true
5;false,true;actedin(F, E), haschild(F, A).;false;true
5;false,true,false;created(G, E), haschild(A, G).;false;false
5;false,false;haschild(H, A), actedin(H, I).;true;false
5;false;haschild(D, B), actedin(D, E).;true;true
5;false,false,true;created(J, I), haschild(B, J).;false;false
6;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;false;true
6;false;haschild(D, A), actedin(D, E).;true;false
6;false,true;actedin(F, E), haschild(F, B).;false;false
7;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;false;true
7;false;haschild(D, B), actedin(D, E).;true;false
7;false,true;actedin(F, E), haschild(F, A).;false;false
8;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true
8;true,false;haschild(H, B), actedin(H, I).;true;false
8;true;haschild(D, A), actedin(D, E).;true;true
8;true,true;actedin(C, F).;false;true
8;true,true,false;created(G, E), haschild(A, G).;false;false
8;false;haschild(K, B), actedin(K, L).;true;false
8;false,true;created(M, L), haschild(A, M).;false;false
8;true,false,true;created(J, I), haschild(A, J).;false;false
9;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;false
9;true,true;created(E, D), haschild(B, E).;false;false
9;true;actedin(C, D).;true;false


WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( actedin(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.1909911024049108;  // std dev = 72,626, 23.753,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.906 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(D, A), actedin(D, E) )
%   | then return 0.14722722778980749;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=54 */
%   | else return 0.16625368089591974;  // std dev = 72,370, 23.581,000 (wgt'ed) examples reached here.  /* #neg=15.729 #pos=7.852 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( haschild(D, B), actedin(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haschild(F, A), actedin(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(H, A), actedin(H, I) )
%   | then if ( actedin(J, I), haschild(J, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1257585136696097;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=54 */
%   | else return 0.14186089144118005;  // std dev = 72,370, 23.581,000 (wgt'ed) examples reached here.  /* #neg=15.729 #pos=7.852 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.4175135841583098;  // std dev = 5,58e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(D, A), actedin(D, E) )
%   | then if ( created(F, E), haschild(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actedin(G, E), haschild(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10578867855876026;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=54 */
%   | else return 0.11896539952147596;  // std dev = 72,370, 23.581,000 (wgt'ed) examples reached here.  /* #neg=15.729 #pos=7.852 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.09819864172535583;  // std dev = 72,626, 23.753,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.906 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(D, B), actedin(D, E) )
%   | then if ( actedin(F, E), haschild(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( created(G, E), haschild(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08289073422262318;  // std dev = 5,766, 149,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=50 */
%   | else if ( haschild(H, A), actedin(H, I) )
%   | | then if ( created(J, I), haschild(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.062096762617975;  // std dev = 6,008, 170,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
%   | | else return 0.08021965335779746;  // std dev = 72,146, 23.434,000 (wgt'ed) examples reached here.  /* #neg=15.630 #pos=7.804 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(D, A), actedin(D, E) )
%   | then if ( actedin(F, E), haschild(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05849260084031454;  // std dev = 6,086, 172,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=54 */
%   | else return 0.06472492133765913;  // std dev = 72,370, 23.581,000 (wgt'ed) examples reached here.  /* #neg=15.729 #pos=7.852 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(D, B), actedin(D, E) )
%   | then if ( actedin(F, E), haschild(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05403097648873384;  // std dev = 5,766, 149,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=50 */
%   | else return 0.05178331887981653;  // std dev = 72,396, 23.604,000 (wgt'ed) examples reached here.  /* #neg=15.748 #pos=7.856 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( haschild(D, A), actedin(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haschild(F, B), actedin(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1527438580936708;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(H, B), actedin(H, I) )
%   | then if ( created(J, I), haschild(A, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04297412616903066;  // std dev = 5,766, 149,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=50 */
%   | else return 0.04120259989348329;  // std dev = 72,396, 23.604,000 (wgt'ed) examples reached here.  /* #neg=15.748 #pos=7.856 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then if ( actedin(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.0326272678770934;  // std dev = 72,626, 23.753,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=7.906 */


Results
   AUC ROC   = 0.502673
   AUC PR    = 0.342775
   CLL	      = -0.636778
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.003786
   F1        = 0.007544


Total learning time: 530.997 seconds
Total inference time: 68.56 seconds
AUC ROC: 0.502673


Structure after Parameter Learning
[['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'true': 'actedin(C, D)'}, {'true,false': [0.0, 0, 18], 'false': [72.626, 15847, 7906], 'true,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'false': 'haschild(D, A), actedin(D, E)'}, {'false,true': [6.087, 118, 54], 'false,false': [72.37, 15729, 7852], 'true': [7.3e-08, 0, 18]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'true,false': 'haschild(F, A), actedin(F, G)', 'false': 'haschild(H, A), actedin(H, I)', 'true': 'haschild(D, B), actedin(D, E)', 'false,true': 'actedin(J, I), haschild(J, B)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 18], 'false,true,false': [6.087, 118, 54], 'true,true': [0.0, 0, 0], 'false,false': [72.37, 15729, 7852], 'false,true,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'false': 'haschild(D, A), actedin(D, E)', 'false,true,false': 'actedin(G, E), haschild(G, B)', 'false,true': 'created(F, E), haschild(B, F)'}, {'false,false': [72.37, 15729, 7852], 'false,true,false,false': [6.087, 118, 54], 'true': [5.58e-08, 0, 18], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)'}, {'false': [72.626, 15847, 7906], 'true': [2.11e-08, 0, 18]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'false,true': 'actedin(F, E), haschild(F, A)', 'false,true,false': 'created(G, E), haschild(A, G)', 'false,false': 'haschild(H, A), actedin(H, I)', 'false': 'haschild(D, B), actedin(D, E)', 'false,false,true': 'created(J, I), haschild(B, J)'}, {'false,false,true,true': [0.0, 0, 0], 'true': [1.49e-08, 0, 18], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [5.766, 99, 50], 'false,false,false': [72.146, 15630, 7804], 'false,true,false,true': [0.0, 0, 0], 'false,false,true,false': [6.008, 118, 52]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'false': 'haschild(D, A), actedin(D, E)', 'false,true': 'actedin(F, E), haschild(F, B)'}, {'false,false': [72.37, 15729, 7852], 'true': [0.0, 0, 18], 'false,true,true': [0.0, 0, 0], 'false,true,false': [6.086, 118, 54]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'false': 'haschild(D, B), actedin(D, E)', 'false,true': 'actedin(F, E), haschild(F, A)'}, {'false,false': [72.396, 15748, 7856], 'true': [0.0, 0, 18], 'false,true,true': [0.0, 0, 0], 'false,true,false': [5.766, 99, 50]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'true,false': 'haschild(F, B), actedin(F, G)', 'false': 'haschild(H, B), actedin(H, I)', 'true': 'haschild(D, A), actedin(D, E)', 'false,true': 'created(J, I), haschild(A, J)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 18], 'false,true,false': [5.766, 99, 50], 'true,true': [0.0, 0, 0], 'false,false': [72.396, 15748, 7856], 'false,true,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(C, A), haschild(C, B)', 'true': 'actedin(C, D)'}, {'true,false': [0.0, 0, 18], 'false': [72.626, 15847, 7906], 'true,true': [0.0, 0, 0]}]]
[{'': [-2.9605947323337506e-16, 0.2220582589685096], 'true': [nan, -2.9605947323337506e-16]}, {'': [2.9605947323337506e-16, 0.22205825896861356], 'false': [0.21538669551108727, 0.2221043000512569]}, {'': [-2.4671622769447924e-16, 0.22205752054445108], 'false': [0.21538669551108602, 0.22210430005139262], 'true,false': [nan, -2.4671622769447924e-16], 'true': [nan, -2.4671622769447924e-16], 'false,true': [nan, 0.21538669551108602]}, {'': [1.7270135938613546e-16, 0.22205690475146492], 'false': [0.21538669551108677, 0.22210430005150228], 'false,true,false': [nan, 0.21538669551108677], 'false,true': [nan, 0.21538669551108677]}, {'': [2.4671622769447922e-17, 0.222056443324585]}, {'': [1.2335811384723961e-17, 0.2220563770976652], 'false,true': [nan, 0.22312480947971905], 'false,true,false': [nan, 0.223124809479719], 'false,false': [0.212318339100345, 0.22211781241998926], 'false': [0.22312480947971905, 0.22204958339369027], 'false,false,true': [nan, 0.21231833910034548]}, {'': [-3.700743415417188e-17, 0.22205552151914412], 'false': [0.21532346359403973, 0.22210434394173773], 'false,true': [nan, 0.21532346359403973]}, {'': [-1.850371707708594e-17, 0.22205538436044273], 'false': [0.22315897414659014, 0.22204838627117607], 'false,true': [nan, 0.22315897414659014]}, {'': [-2.7755575615628914e-17, 0.22205534253276002], 'false': [0.22316369275163625, 0.2220483263974896], 'true,false': [nan, -2.7755575615628914e-17], 'true': [nan, -2.7755575615628914e-17], 'false,true': [nan, 0.2231636927516367]}, {'': [0.0, 0.22205531268665968], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '1;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '2;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '3;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '4;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '5;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '6;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '7;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '8;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true', '9;;ismarriedto(A, B) :- haschild(C, A), haschild(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(B, D), haschild(A, E) )
%   | then if ( haschild(A, D) )
%   | | then return 0.8581489350995075;  // std dev = 4,67e-06, 1.087,000 (wgt'ed) examples reached here.  /* #pos=1.087 */
%   | | else if ( livesin(E, F), isleaderof(G, F) )
%   | | | then return 0.2265699877310913;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.061355708863336224;  // std dev = 6,915, 646,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=52 */
%   | else if ( actedin(B, H), actedin(A, I) )
%   | | then if ( directed(J, H), directed(J, I) )
%   | | | then return 0.8115387656079834;  // std dev = 3,238, 236,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=225 */
%   | | | else return 0.3565255584761312;  // std dev = 17,550, 1.232,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=614 */
%   | | else if ( haschild(A, K) )
%   | | | then return 0.012019393235368605;  // std dev = 20,299, 3.165,000 (wgt'ed) examples reached here.  /* #neg=2.678 #pos=487 */
%   | | | else return 0.17102318659663507;  // std dev = 61,105, 17.368,000 (wgt'ed) examples reached here.  /* #neg=11.934 #pos=5.434 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(D, B), haschild(E, A) )
%   | then if ( haschild(A, F), haschild(B, F) )
%   | | then return 0.7194734122109581;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   | | else if ( haschild(A, G), haschild(B, H) )
%   | | | then return -0.014278894610127577;  // std dev = 4,401, 182,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=22 */
%   | | | else return 0.31724962502481024;  // std dev = 13,187, 699,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=332 */
%   | else if ( haschild(A, I), haschild(B, I) )
%   | | then return 0.7194734122109586;  // std dev = 0,000, 691,000 (wgt'ed) examples reached here.  /* #pos=691 */
%   | | else if ( haschild(A, J) )
%   | | | then return -0.009636155054833484;  // std dev = 20,170, 3.540,000 (wgt'ed) examples reached here.  /* #neg=3.064 #pos=476 */
%   | | | else return 0.1613042076336518;  // std dev = 63,130, 18.245,000 (wgt'ed) examples reached here.  /* #neg=12.256 #pos=5.989 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(A, D), haschild(B, D) )
%   | then return 0.5553664367462917;  // std dev = 0,000, 1.087,000 (wgt'ed) examples reached here.  /* #pos=1.087 */
%   | else if ( haschild(B, E) )
%   | | then if ( haschild(E, F), actedin(A, G) )
%   | | | then return -0.16617124194829774;  // std dev = 2,082, 276,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=5 */
%   | | | else return -0.008627855843903503;  // std dev = 21,413, 3.296,000 (wgt'ed) examples reached here.  /* #neg=2.732 #pos=564 */
%   | | else if ( haschild(A, H) )
%   | | | then return 0.015592185866126986;  // std dev = 20,914, 3.276,000 (wgt'ed) examples reached here.  /* #neg=2.743 #pos=533 */
%   | | | else return 0.17019128567743133;  // std dev = 60,103, 15.818,000 (wgt'ed) examples reached here.  /* #neg=10.101 #pos=5.717 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.4175135841583098;  // std dev = 5,58e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(A, D), haschild(B, D) )
%   | then return 0.41751358415831324;  // std dev = 0,000, 1.087,000 (wgt'ed) examples reached here.  /* #pos=1.087 */
%   | else if ( haschild(B, E) )
%   | | then if ( haschild(F, A), haschild(E, G) )
%   | | | then return 0.10734315582092546;  // std dev = 8,427, 376,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=104 */
%   | | | else return -0.03253308950878794;  // std dev = 19,748, 3.196,000 (wgt'ed) examples reached here.  /* #neg=2.731 #pos=465 */
%   | | else if ( actedin(A, H), actedin(B, I) )
%   | | | then return 0.3220934581369954;  // std dev = 17,894, 1.379,000 (wgt'ed) examples reached here.  /* #neg=579 #pos=800 */
%   | | | else return 0.10471037672554293;  // std dev = 60,918, 17.715,000 (wgt'ed) examples reached here.  /* #neg=12.265 #pos=5.450 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( actedin(A, D), actedin(B, D) )
%   | then if ( haschild(A, E), haschild(B, E) )
%   | | then return 0.3207118471601475;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( created(F, D), influences(F, G) )
%   | | | then return 0.5057954034096348;  // std dev = 1,379, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.6097937776743191;  // std dev = 1,143, 175,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=174 */
%   | else if ( haschild(A, H), actedin(B, I) )
%   | | then if ( actedin(A, J), created(K, I) )
%   | | | then return 0.16065642856652054;  // std dev = 4,513, 97,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=45 */
%   | | | else return -0.10404565755804714;  // std dev = 5,301, 661,000 (wgt'ed) examples reached here.  /* #neg=613 #pos=48 */
%   | | else if ( haschild(B, L), haschild(A, L) )
%   | | | then return 0.32071184716014833;  // std dev = 1,05e-06, 1.035,000 (wgt'ed) examples reached here.  /* #pos=1.035 */
%   | | | else return 0.08243906215639875;  // std dev = 66,651, 21.746,000 (wgt'ed) examples reached here.  /* #neg=15.179 #pos=6.567 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( actedin(A, D), actedin(B, E) )
%   | then if ( directed(F, E), directed(F, D) )
%   | | then if ( haschild(F, G), created(A, H) )
%   | | | then return 0.14692578407218418;  // std dev = 1,046, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.43930033565123666;  // std dev = 2,986, 249,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=240 */
%   | | else if ( edited(I, E), edited(I, D) )
%   | | | then return 0.5746382567949856;  // std dev = 1,307, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.17003173900075252;  // std dev = 17,218, 1.225,000 (wgt'ed) examples reached here.  /* #neg=617 #pos=608 */
%   | else if ( actedin(B, J), haschild(K, A) )
%   | | then if ( haschild(L, K) )
%   | | | then return -0.17400621898509258;  // std dev = 1,301, 375,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=1 */
%   | | | else return -0.10803704510215144;  // std dev = 3,800, 180,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=17 */
%   | | else if ( actedin(A, M), haschild(B, N) )
%   | | | then return -0.1227451089829606;  // std dev = 5,013, 628,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=55 */
%   | | | else return 0.07702247840973536;  // std dev = 64,174, 21.068,000 (wgt'ed) examples reached here.  /* #neg=14.107 #pos=6.961 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(A, D), haschild(B, D) )
%   | then return 0.2430166863277771;  // std dev = 0,501, 1.087,000 (wgt'ed) examples reached here.  /* #pos=1.087 */
%   | else if ( haschild(B, E) )
%   | | then if ( haschild(F, A) )
%   | | | then return 0.03752432170171544;  // std dev = 11,131, 753,000 (wgt'ed) examples reached here.  /* #neg=579 #pos=174 */
%   | | | else return -0.054231441255577544;  // std dev = 18,115, 2.819,000 (wgt'ed) examples reached here.  /* #neg=2.424 #pos=395 */
%   | | else if ( actedin(A, G), directed(B, G) )
%   | | | then return 0.648985448086012;  // std dev = 1,251, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0.0666163459522691;  // std dev = 63,087, 19.030,000 (wgt'ed) examples reached here.  /* #neg=12.844 #pos=6.186 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(B, D), haschild(A, D) )
%   | then return 0.2011794287636758;  // std dev = 0,442, 1.087,000 (wgt'ed) examples reached here.  /* #pos=1.087 */
%   | else if ( haschild(A, E) )
%   | | then if ( haschild(F, B), haschild(G, A) )
%   | | | then return 0.0831126786827831;  // std dev = 8,800, 401,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=116 */
%   | | | else return -0.04756810855548409;  // std dev = 19,844, 3.540,000 (wgt'ed) examples reached here.  /* #neg=3.064 #pos=476 */
%   | | else if ( isaffiliatedto(B, H), isaffiliatedto(A, H) )
%   | | | then return 0.6538386911863566;  // std dev = 3,161, 148,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=137 */
%   | | | else return 0.053329448864905614;  // std dev = 62,456, 18.577,000 (wgt'ed) examples reached here.  /* #neg=12.487 #pos=6.090 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haschild(B, D), haschild(A, D) )
%   | then return 0.1708089006020623;  // std dev = 0,393, 1.087,000 (wgt'ed) examples reached here.  /* #pos=1.087 */
%   | else if ( haschild(A, E) )
%   | | then if ( haschild(F, B) )
%   | | | then return 0.04199708711790651;  // std dev = 11,046, 729,000 (wgt'ed) examples reached here.  /* #neg=558 #pos=171 */
%   | | | else return -0.04569865876054571;  // std dev = 18,683, 3.212,000 (wgt'ed) examples reached here.  /* #neg=2.791 #pos=421 */
%   | | else if ( haschild(B, G) )
%   | | | then return -0.0315354174353603;  // std dev = 20,022, 2.907,000 (wgt'ed) examples reached here.  /* #neg=2.397 #pos=510 */
%   | | | else return 0.06079003827224252;  // std dev = 59,317, 15.818,000 (wgt'ed) examples reached here.  /* #neg=10.101 #pos=5.717 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( actedin(A, D), isaffiliatedto(B, E) )
%   | then if ( directed(F, D) )
%   | | then if ( iscitizenof(B, G), wasbornin(B, H) )
%   | | | then return 0.1239646819019905;  // std dev = 1,195, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.2072056628027493;  // std dev = 4,369, 318,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=22 */
%   | | else if ( wasbornin(A, I), livesin(J, I) )
%   | | | then return -0.2988932713646532;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16783640920793086;  // std dev = 1,874, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( actedin(B, K), actedin(A, L) )
%   | | then if ( wrotemusicfor(M, K), wrotemusicfor(M, L) )
%   | | | then return 0.30392294465941655;  // std dev = 4,632, 242,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=215 */
%   | | | else return 0.09836389199313893;  // std dev = 16,854, 1.248,000 (wgt'ed) examples reached here.  /* #neg=597 #pos=651 */
%   | | else if ( haschild(N, A), actedin(B, P) )
%   | | | then return -0.1430878748735463;  // std dev = 4,093, 555,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=18 */
%   | | | else return 0.032303319355723586;  // std dev = 63,477, 21.364,000 (wgt'ed) examples reached here.  /* #neg=14.375 #pos=6.989 */


Results
   AUC ROC   = 0.704014
   AUC PR    = 0.610183
   CLL	      = -0.55374
   Precision = 0.989884 at threshold = 0.5
   Recall    = 0.172914
   F1        = 0.294402


Total learning time: 868.833 seconds
Total inference time: 67.523 seconds
AUC ROC: 0.704014


Refined model AUC ROC: 0.704014


Dataset: 22_cora_yago2s, Fold: 1, Type: transfer, Time: 00:35:48
{'AUC ROC': 0.704014, 'Parameter Learning results': {'AUC ROC': 0.502673, 'AUC PR': 0.342775, 'F1': 0.007544, 'Learning time': 530.997, 'Inference time': 68.56, 'CLL': -0.636778, 'Recall': 0.003786, 'Precision': [1.0, 0.5]}, 'AUC PR': 0.610183, 'F1': 0.294402, 'Learning time': 1399.83, 'Inference time': 67.523, 'CLL': -0.55374, 'Mapping results': {'Generating paths time': 2.5255963802337646, 'Total time': 291.6903600692749, 'Possible mappings': 441488, 'Finding best mapping': 167.96623611450195, 'Generating mappings time': 101.88272976875305, 'Knowledge compiling time': 19.315788984298706}, 'Recall': 0.172914, 'Precision': [0.989884, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( actedin(B, C), actedin(A, D) )
%   then if ( directed(E, C), directed(E, D) )
%   | then return 0.8151801850995087;  // std dev = 0,203, 256,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=245 */
%   | else if ( haswonprize(B, F), wrotemusicfor(G, C) )
%   | | then if ( wrotemusicfor(G, D), haswonprize(G, H) )
%   | | | then return 0.6581489350995123;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.23511228588485386;  // std dev = 6,698, 191,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=72 */
%   | | else if ( created(I, D), haswonprize(A, J) )
%   | | | then return 0.2637044906550692;  // std dev = 6,587, 180,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=73 */
%   | | | else return 0.40466056300648495;  // std dev = 14,599, 860,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=470 */
%   else if ( actedin(A, K), haschild(B, L) )
%   | then return -0.054271447066093;  // std dev = 0,283, 628,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=55 */
%   | else if ( haschild(M, B), haschild(N, A) )
%   | | then if ( haschild(B, P), haschild(A, P) )
%   | | | then return 0.8581489350995082;  // std dev = 1,62e-06, 401,000 (wgt'ed) examples reached here.  /* #pos=401 */
%   | | | else return 0.2749112772349849;  // std dev = 14,550, 871,000 (wgt'ed) examples reached here.  /* #neg=508 #pos=363 */
%   | | else return 0.1641531572018481;  // std dev = 0,461, 20.369,000 (wgt'ed) examples reached here.  /* #neg=14.136 #pos=6.233 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( directed(A, C), actedin(B, C) )
%   then return 0.815899931626256;  // std dev = 0,354, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haschild(B, D), haschild(A, E) )
%   | then if ( haschild(A, D) )
%   | | then if ( haschild(F, A), haschild(G, B) )
%   | | | then return 0.7197410245929595;  // std dev = 0,107, 402,000 (wgt'ed) examples reached here.  /* #pos=402 */
%   | | | else return 0.834991140951241;  // std dev = 0,505, 686,000 (wgt'ed) examples reached here.  /* #pos=686 */
%   | | else if ( haschild(E, H), haschild(I, B) )
%   | | | then return -0.019358548497957102;  // std dev = 4,595, 162,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=25 */
%   | | | else return -0.09687294736883154;  // std dev = 5,528, 502,000 (wgt'ed) examples reached here.  /* #neg=469 #pos=33 */
%   | else if ( haschild(A, J) )
%   | | then if ( haschild(K, B) )
%   | | | then return 0.18158309345788942;  // std dev = 9,415, 390,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=138 */
%   | | | else return -0.027238791716081717;  // std dev = 18,391, 2.887,000 (wgt'ed) examples reached here.  /* #neg=2.491 #pos=396 */
%   | | else if ( haschild(B, L) )
%   | | | then return 0.015827891529470808;  // std dev = 20,347, 2.909,000 (wgt'ed) examples reached here.  /* #neg=2.397 #pos=512 */
%   | | | else return 0.19236953039396681;  // std dev = 59,916, 15.758,000 (wgt'ed) examples reached here.  /* #neg=10.101 #pos=5.657 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then return 0.6391245409713935;  // std dev = 0,067, 1.093,000 (wgt'ed) examples reached here.  /* #pos=1.093 */
%   else if ( haschild(A, D) )
%   | then if ( actedin(B, E), haschild(F, A) )
%   | | then if ( haswonprize(B, G), edited(H, E) )
%   | | | then return -0.08452969804937645;  // std dev = 1,781, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | | else return -0.15542632791558494;  // std dev = 1,378, 300,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=2 */
%   | | else if ( actedin(A, I), actedin(B, J) )
%   | | | then return 0.25828298026570684;  // std dev = 4,694, 94,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=43 */
%   | | | else return -0.007153480354705845;  // std dev = 21,279, 3.502,000 (wgt'ed) examples reached here.  /* #neg=2.957 #pos=545 */
%   | else if ( actedin(B, K), actedin(A, L) )
%   | | then if ( actedin(A, K) )
%   | | | then return 0.6837480504687267;  // std dev = 1,799, 185,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=182 */
%   | | | else return 0.2926274651866147;  // std dev = 16,865, 1.172,000 (wgt'ed) examples reached here.  /* #neg=561 #pos=611 */
%   | | else if ( haschild(B, M) )
%   | | | then return 0.007314552069374092;  // std dev = 19,741, 2.822,000 (wgt'ed) examples reached here.  /* #neg=2.347 #pos=475 */
%   | | | else return 0.14966550194846037;  // std dev = 57,130, 14.556,000 (wgt'ed) examples reached here.  /* #neg=9.587 #pos=4.969 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( haschild(D, A), haschild(E, B) )
%   | then return 0.3976146894624893;  // std dev = 0,154, 402,000 (wgt'ed) examples reached here.  /* #pos=402 */
%   | else return 0.5380397725514214;  // std dev = 0,029, 691,000 (wgt'ed) examples reached here.  /* #pos=691 */
%   else if ( isaffiliatedto(A, F), isaffiliatedto(B, F) )
%   | then if ( haschild(A, G), iscitizenof(G, H) )
%   | | then return -0.14916185782121708;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( livesin(A, I), graduatedfrom(A, J) )
%   | | | then return 0.5777845551702362;  // std dev = 2,148, 28,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | | else return 0.7346507387855469;  // std dev = 2,554, 128,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=121 */
%   | else if ( haschild(A, K) )
%   | | then if ( haschild(L, B), haschild(M, A) )
%   | | | then return 0.1043298740769346;  // std dev = 8,998, 403,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=118 */
%   | | | else return -0.026038453596484195;  // std dev = 19,946, 3.529,000 (wgt'ed) examples reached here.  /* #neg=3.059 #pos=470 */
%   | | else if ( actedin(B, N), actedin(A, P) )
%   | | | then return 0.2767296145004932;  // std dev = 17,327, 1.357,000 (wgt'ed) examples reached here.  /* #neg=564 #pos=793 */
%   | | | else return 0.10085871340788667;  // std dev = 60,179, 17.230,000 (wgt'ed) examples reached here.  /* #neg=11.923 #pos=5.307 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.3691842165505653;  // std dev = 0,052, 1.093,000 (wgt'ed) examples reached here.  /* #pos=1.093 */
%   else if ( haschild(B, D) )
%   | then if ( actedin(A, E), haschild(F, B) )
%   | | then if ( wasbornin(F, G), livesin(H, G) )
%   | | | then return -0.06088582998513354;  // std dev = 1,894, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | | | else return -0.14143382341432303;  // std dev = 1,697, 255,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=3 */
%   | | else if ( haschild(I, A), haschild(D, J) )
%   | | | then return 0.1085934461998783;  // std dev = 8,657, 370,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=108 */
%   | | | else return -0.02018568023834743;  // std dev = 19,303, 2.899,000 (wgt'ed) examples reached here.  /* #neg=2.443 #pos=456 */
%   | else if ( haschild(A, K) )
%   | | then if ( haschild(L, B), haschild(M, A) )
%   | | | then return 0.2123239113400861;  // std dev = 7,353, 221,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=96 */
%   | | | else return -0.014126709161510178;  // std dev = 19,160, 3.057,000 (wgt'ed) examples reached here.  /* #neg=2.618 #pos=439 */
%   | | else if ( isaffiliatedto(A, N), isaffiliatedto(B, P) )
%   | | | then return 0.39131118048071223;  // std dev = 6,854, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   | | | else return 0.11148218693331276;  // std dev = 58,917, 15.567,000 (wgt'ed) examples reached here.  /* #neg=10.022 #pos=5.545 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( actedin(A, C), actedin(B, D) )
%   then if ( directed(E, D), directed(E, C) )
%   | then return 0.41106685532752957;  // std dev = 0,213, 256,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=245 */
%   | else if ( created(F, C), created(F, D) )
%   | | then if ( wrotemusicfor(G, D), haswonprize(F, H) )
%   | | | then return 0.3077398626776919;  // std dev = 1,753, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.612965608022287;  // std dev = 0,496, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( created(I, C), actedin(I, J) )
%   | | | then return 0.08280696756535705;  // std dev = 10,046, 438,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=188 */
%   | | | else return 0.16586932264012594;  // std dev = 13,572, 762,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=398 */
%   else if ( wasbornin(A, K), wasbornin(B, K) )
%   | then return 0.5767047240817363;  // std dev = 0,288, 91,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=85 */
%   | else if ( haschild(L, B), actedin(A, M) )
%   | | then return -0.14753452265811182;  // std dev = 0,191, 539,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=21 */
%   | | else if ( haschild(A, N), haschild(B, N) )
%   | | | then return 0.2897620815930303;  // std dev = 1,439, 1.040,000 (wgt'ed) examples reached here.  /* #pos=1.040 */
%   | | | else return 0.05767862258691051;  // std dev = 63,587, 20.599,000 (wgt'ed) examples reached here.  /* #neg=14.693 #pos=5.906 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( haschild(B, D), livesin(E, C) )
%   | then return 0.1892813763936572;  // std dev = 0,279, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( livesin(B, F), diedin(G, F) )
%   | | then if ( livesin(G, C) )
%   | | | then return -0.26428936742884473;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5247032388614231;  // std dev = 0,883, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.5984452124743549;  // std dev = 0,289, 88,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=80 */
%   else if ( actedin(B, H), isaffiliatedto(A, I) )
%   | then return -0.15394727701429942;  // std dev = 0,283, 314,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=29 */
%   | else if ( haschild(J, A), haschild(K, B) )
%   | | then if ( haschild(A, L) )
%   | | | then return 0.11909747878959735;  // std dev = 9,073, 803,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=519 */
%   | | | else return 0.25370569334524995;  // std dev = 10,848, 489,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=247 */
%   | | else if ( haschild(B, M), haschild(A, M) )
%   | | | then return 0.25956565174722657;  // std dev = 0,649, 684,000 (wgt'ed) examples reached here.  /* #pos=684 */
%   | | | else return 0.0474006538433488;  // std dev = 64,293, 21.373,000 (wgt'ed) examples reached here.  /* #neg=15.021 #pos=6.352 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( actedin(A, C), actedin(B, D) )
%   then if ( wrotemusicfor(E, D), wrotemusicfor(E, C) )
%   | then return 0.32230246694166803;  // std dev = 0,299, 246,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=219 */
%   | else if ( diedin(B, F), created(B, G) )
%   | | then return 0.33629627183361727;  // std dev = 0,401, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | else if ( wrotemusicfor(H, C), haswonprize(A, I) )
%   | | | then return 0.012058969652276832;  // std dev = 6,237, 196,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=79 */
%   | | | else return 0.11283689364484455;  // std dev = 15,326, 1.034,000 (wgt'ed) examples reached here.  /* #neg=480 #pos=554 */
%   else if ( actedin(A, J), directed(K, J) )
%   | then if ( directed(B, L), created(M, L) )
%   | | then return 0.3013792059526852;  // std dev = 0,486, 195,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=112 */
%   | | else return -0.038879185602832066;  // std dev = 0,389, 3.035,000 (wgt'ed) examples reached here.  /* #neg=2.411 #pos=624 */
%   | else if ( haschild(N, A), actedin(B, P) )
%   | | then return -0.16827856561635277;  // std dev = 0,173, 555,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=18 */
%   | | else if ( isaffiliatedto(A, Q), haschild(R, B) )
%   | | | then return -0.12940428200672546;  // std dev = 4,599, 268,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=33 */
%   | | | else return 0.0623826347160953;  // std dev = 59,003, 18.216,000 (wgt'ed) examples reached here.  /* #neg=11.951 #pos=6.265 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( actedin(B, C), haschild(D, A) )
%   then return -0.11202881639570195;  // std dev = 0,238, 638,000 (wgt'ed) examples reached here.  /* #neg=576 #pos=62 */
%   else if ( actedin(B, E), isaffiliatedto(A, F) )
%   | then if ( playsfor(A, F), directed(G, E) )
%   | | then if ( edited(H, E) )
%   | | | then return -0.24687354069289133;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.467412173592823;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( created(I, E), wasbornin(I, J) )
%   | | | then return -0.19168393863822047;  // std dev = 2,321, 151,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=6 */
%   | | | else return -0.09724284717622153;  // std dev = 3,878, 130,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=18 */
%   | else if ( actedin(A, K), haschild(L, B) )
%   | | then if ( actedin(L, M), edited(N, M) )
%   | | | then return 0.21854146443427463;  // std dev = 2,767, 37,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return -0.12134193464982276;  // std dev = 5,039, 573,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=42 */
%   | | else if ( actedin(A, P), isaffiliatedto(B, Q) )
%   | | | then return -0.1597100651565002;  // std dev = 4,953, 319,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=31 */
%   | | | else return 0.05246173765843376;  // std dev = 64,900, 21.911,000 (wgt'ed) examples reached here.  /* #neg=14.174 #pos=7.737 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( diedin(A, C), diedin(B, C) )
%   then if ( haschild(B, D), haschild(A, D) )
%   | then return 0.18382305177096106;  // std dev = 0,036, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else return 0.6537637195117115;  // std dev = 0,220, 98,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=94 */
%   else if ( wasbornin(A, E), haschild(B, F) )
%   | then if ( haschild(A, F) )
%   | | then return 0.18024572999912614;  // std dev = 0,031, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( created(B, G), diedin(H, E) )
%   | | | then return 0.06832998743532875;  // std dev = 4,138, 91,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | | | else return -0.11222045372892574;  // std dev = 7,758, 889,000 (wgt'ed) examples reached here.  /* #neg=814 #pos=75 */
%   | else if ( livesin(B, I), livesin(A, J) )
%   | | then if ( livesin(B, J) )
%   | | | then return 0.5471047948701819;  // std dev = 1,599, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.11174919350549287;  // std dev = 3,649, 64,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | | else if ( actedin(B, K), directed(A, L) )
%   | | | then return 0.21650984246077554;  // std dev = 8,756, 384,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=237 */
%   | | | else return 0.026983114182520394;  // std dev = 64,016, 21.881,000 (wgt'ed) examples reached here.  /* #neg=14.779 #pos=7.102 */


Results
   AUC ROC   = 0.733065
   AUC PR    = 0.640789
   CLL	      = -0.546394
   Precision = 0.96797 at threshold = 0.5
   Recall    = 0.198347
   F1        = 0.329231


Total learning time: 861.904 seconds
Total inference time: 70.786 seconds
AUC ROC: 0.733065


Dataset: 22_cora_yago2s, Fold: 1, Type: scratch, Time: 00:51:24
{'AUC ROC': 0.733065, 'AUC PR': 0.640789, 'F1': 0.329231, 'Learning time': 861.904, 'Inference time': 70.786, 'CLL': -0.546394, 'Recall': 0.198347, 'Precision': [0.96797, 0.5]}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 23.700995445251465
   Generating paths time   = 2.1899824142456055
   Generating mappings time   = 107.95698142051697
   Possible mappings   = 441488
   Finding best mapping   = 165.75008082389832
   Total time   = 299.5980477333069


Best mapping found: ['venue(A,B) -> haschild(A,B)', 'samevenue(A,B) -> ismarriedto(A,B)', 'samebib(A,B) -> influences(A,B)', 'haswordauthor(A,B) -> actedin(B,A)', 'author(A,B) -> created(A,B)', 'haswordvenue(A,B) -> haschild(A,B)'] 

Transferred target predicate: ismarriedto 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;false
0;true,true;created(E, D), haschild(E, A).;false;false
0;true;actedin(C, D).;true;false
1;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;true
1;false;haschild(A, D), actedin(D, E).;false;false
2;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true
2;true,false;haschild(A, H), actedin(H, I).;true;false
2;true;haschild(B, D), actedin(D, E).;true;true
2;true,true;actedin(C, F).;false;true
2;true,true,false;created(G, E), haschild(G, B).;false;false
2;false;haschild(A, K), actedin(K, L).;true;false
2;false,true;actedin(M, L), haschild(B, M).;false;false
2;true,false,true;created(J, I), haschild(J, A).;false;false
3;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;true
3;false;haschild(A, D), actedin(D, E).;true;false
3;false,true,true;influences(F, G), haschild(G, A).;false;false
3;false,true;created(F, E), haschild(F, B).;true;true
3;false,true,false;actedin(H, E), haschild(B, H).;false;false
4;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;false
5;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;true
5;false,true;actedin(F, E), haschild(A, F).;false;true
5;false,true,false;created(G, E), haschild(G, A).;false;false
5;false,false;haschild(A, H), actedin(H, I).;true;false
5;false;haschild(B, D), actedin(D, E).;true;true
5;false,false,true;created(J, I), haschild(J, B).;false;false
6;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;true
6;false;haschild(A, D), actedin(D, E).;true;false
6;false,true;actedin(F, E), haschild(B, F).;false;false
7;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;true
7;false;haschild(B, D), actedin(D, E).;true;false
7;false,true;actedin(F, E), haschild(A, F).;false;false
8;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true
8;true,false;haschild(B, H), actedin(H, I).;true;false
8;true;haschild(A, D), actedin(D, E).;true;true
8;true,true;actedin(C, F).;false;true
8;true,true,false;created(G, E), haschild(G, A).;false;false
8;false;haschild(B, K), actedin(K, L).;true;false
8;false,true;created(M, L), haschild(M, A).;false;false
8;true,false,true;created(J, I), haschild(J, A).;false;false
9;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;false
9;true,true;created(E, D), haschild(E, B).;false;false
9;true;actedin(C, D).;true;false


WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( actedin(C, D) )
%   | then if ( created(E, D), haschild(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995128;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return 0.8581489350995075;  // std dev = 4,43e-06, 1.011,000 (wgt'ed) examples reached here.  /* #pos=1.011 */
%   else return 0.15945840117264085;  // std dev = 69,100, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.7194734122109588;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(A, D), actedin(D, E) )
%   | then return -0.0036170073507804813;  // std dev = 6,925, 359,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=57 */
%   | else return 0.14121044718345144;  // std dev = 68,699, 22.322,000 (wgt'ed) examples reached here.  /* #neg=15.545 #pos=6.777 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( haschild(B, D), actedin(D, E) )
%   | then if ( actedin(C, F) )
%   | | then return 0.555366436746283;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | else if ( created(G, E), haschild(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haschild(A, H), actedin(H, I) )
%   | | then if ( created(J, I), haschild(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5553664367462873;  // std dev = 0,000, 996,000 (wgt'ed) examples reached here.  /* #pos=996 */
%   else if ( haschild(A, K), actedin(K, L) )
%   | then if ( actedin(M, L), haschild(B, M) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.003125621075025218;  // std dev = 6,925, 359,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=57 */
%   | else return 0.12107652643748182;  // std dev = 68,699, 22.322,000 (wgt'ed) examples reached here.  /* #neg=15.545 #pos=6.777 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.41751358415831336;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(A, D), actedin(D, E) )
%   | then if ( created(F, E), haschild(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actedin(G, E), haschild(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.002701958655290463;  // std dev = 6,925, 359,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=57 */
%   | else return 0.10231236691527905;  // std dev = 68,699, 22.322,000 (wgt'ed) examples reached here.  /* #neg=15.545 #pos=6.777 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.320711847160152;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else return 0.08397201455419942;  // std dev = 69,066, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.2551722425694917;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(B, D), actedin(D, E) )
%   | then if ( actedin(F, E), haschild(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( created(G, E), haschild(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.00391453926098931;  // std dev = 7,351, 307,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=70 */
%   | else if ( haschild(A, H), actedin(H, I) )
%   | | then if ( created(J, I), haschild(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.014593255303441275;  // std dev = 6,866, 354,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=56 */
%   | | else return 0.07172540813605952;  // std dev = 68,297, 22.020,000 (wgt'ed) examples reached here.  /* #neg=15.312 #pos=6.708 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.20975771563252807;  // std dev = 1,67e-06, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(A, D), actedin(D, E) )
%   | then if ( actedin(F, E), haschild(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.011956228814307137;  // std dev = 6,925, 359,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=57 */
%   | else return 0.057822088299390034;  // std dev = 68,694, 22.322,000 (wgt'ed) examples reached here.  /* #neg=15.545 #pos=6.777 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.17709649774528008;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(B, D), actedin(D, E) )
%   | then if ( actedin(F, E), haschild(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.013488159504916865;  // std dev = 7,351, 307,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=70 */
%   | else return 0.04685798385923888;  // std dev = 68,650, 22.374,000 (wgt'ed) examples reached here.  /* #neg=15.610 #pos=6.764 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( haschild(A, D), actedin(D, E) )
%   | then if ( actedin(C, F) )
%   | | then return 0.15274385809366997;  // std dev = 5,58e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | else if ( created(G, E), haschild(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367055;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haschild(B, H), actedin(H, I) )
%   | | then if ( created(J, I), haschild(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367053;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.15274385809366933;  // std dev = 5,40e-07, 996,000 (wgt'ed) examples reached here.  /* #pos=996 */
%   else if ( haschild(B, K), actedin(K, L) )
%   | then if ( created(M, L), haschild(M, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.011027154488735301;  // std dev = 7,351, 307,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=70 */
%   | else return 0.037849855687177934;  // std dev = 68,650, 22.374,000 (wgt'ed) examples reached here.  /* #neg=15.610 #pos=6.764 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( actedin(C, D) )
%   | then if ( created(E, D), haschild(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.13400703000801067;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return 0.13400703000800804;  // std dev = 7,05e-07, 1.011,000 (wgt'ed) examples reached here.  /* #pos=1.011 */
%   else return 0.0298927346469461;  // std dev = 69,045, 22.681,000 (wgt'ed) examples reached here.  /* #neg=15.847 #pos=6.834 */


Results
   AUC ROC   = 0.573729
   AUC PR    = 0.486338
   CLL	      = -0.591854
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133535
   F1        = 0.235609


Total learning time: 527.403 seconds
Total inference time: 71.806 seconds
AUC ROC: 0.573729


Structure after Parameter Learning
[['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true': 'actedin(C, D)', 'true,true': 'created(E, D), haschild(E, A)'}, {'true,true,false': [0.0, 0, 79], 'true,false': [4.43e-06, 0, 1011], 'false': [69.1, 15847, 6834], 'true,true,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'false': 'haschild(A, D), actedin(D, E)'}, {'false,true': [6.925, 302, 57], 'false,false': [68.699, 15545, 6777], 'true': [0.0, 0, 1090]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true,true,false': 'created(G, E), haschild(G, B)', 'true': 'haschild(B, D), actedin(D, E)', 'true,true': 'actedin(C, F)', 'true,false': 'haschild(A, H), actedin(H, I)', 'false': 'haschild(A, K), actedin(K, L)', 'false,true': 'actedin(M, L), haschild(B, M)', 'true,false,true': 'created(J, I), haschild(J, A)'}, {'true,false,true,false': [0.0, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 79], 'false,true,true': [0.0, 0, 0], 'false,false': [68.699, 15545, 6777], 'true,false,false': [0.0, 0, 996], 'true,false,true,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 8], 'false,true,false': [6.925, 302, 57]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'false': 'haschild(A, D), actedin(D, E)', 'false,true,false': 'actedin(G, E), haschild(B, G)', 'false,true': 'created(F, E), haschild(F, B)'}, {'false,false': [68.699, 15545, 6777], 'false,true,false,false': [6.925, 302, 57], 'true': [0.0, 0, 1090], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)'}, {'false': [69.066, 15847, 6834], 'true': [0.0, 0, 1090]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'false,true': 'actedin(F, E), haschild(A, F)', 'false,true,false': 'created(G, E), haschild(G, A)', 'false,false': 'haschild(A, H), actedin(H, I)', 'false': 'haschild(B, D), actedin(D, E)', 'false,false,true': 'created(J, I), haschild(J, B)'}, {'false,false,true,true': [0.0, 0, 0], 'true': [0.0, 0, 1090], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [7.351, 237, 70], 'false,false,false': [68.297, 15312, 6708], 'false,true,false,true': [0.0, 0, 0], 'false,false,true,false': [6.866, 298, 56]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'false': 'haschild(A, D), actedin(D, E)', 'false,true': 'actedin(F, E), haschild(B, F)'}, {'false,false': [68.694, 15545, 6777], 'true': [1.67e-06, 0, 1090], 'false,true,true': [0.0, 0, 0], 'false,true,false': [6.925, 302, 57]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'false': 'haschild(B, D), actedin(D, E)', 'false,true': 'actedin(F, E), haschild(A, F)'}, {'false,false': [68.65, 15610, 6764], 'true': [0.0, 0, 1090], 'false,true,true': [0.0, 0, 0], 'false,true,false': [7.351, 237, 70]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true,true,false': 'created(G, E), haschild(G, A)', 'true': 'haschild(A, D), actedin(D, E)', 'true,true': 'actedin(C, F)', 'true,false': 'haschild(B, H), actedin(H, I)', 'false': 'haschild(B, K), actedin(K, L)', 'false,true': 'created(M, L), haschild(M, A)', 'true,false,true': 'created(J, I), haschild(J, A)'}, {'true,false,true,false': [0.0, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,true': [5.58e-08, 0, 79], 'false,true,true': [0.0, 0, 0], 'false,false': [68.65, 15610, 6764], 'true,false,false': [5.4e-07, 0, 996], 'true,false,true,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 7], 'false,true,false': [7.351, 237, 70]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true': 'actedin(C, D)', 'true,true': 'created(E, D), haschild(E, B)'}, {'true,true,false': [0.0, 0, 79], 'true,false': [7.05e-07, 0, 1011], 'false': [69.045, 15847, 6834], 'true,true,true': [0.0, 0, 0]}]]
[{'': [2.012987126630449e-14, 0.21052207172753473], 'true,true': [nan, -1.4390738952103295e-15], 'true': [-8.99421184506456e-16, 1.9453830787180587e-14]}, {'': [-6.466590769486417e-15, 0.21052207172754714], 'false': [0.1335650716552454, 0.21142775795360086]}, {'': [-1.1264383921040855e-14, 0.21043563393958464], 'false,true': [nan, 0.13356507165524908], 'true': [0.0, -5.043932481168408e-15], 'true,true': [-1.349131776759684e-16, -1.1102230246251565e-16], 'false': [0.13356507165524908, 0.2114277579540408], 'true,true,false': [nan, -1.1102230246251565e-16], 'true,false': [-6.344131569286608e-17, -4.5086647489998326e-15], 'true,false,true': [nan, -6.344131569286608e-17]}, {'': [-2.529271389678155e-15, 0.21036712067496546], 'false': [0.13356507165525047, 0.2114277579538491], 'false,true,false': [nan, 0.13356507165525047], 'false,true': [nan, 0.13356507165525017]}, {'': [-5.345367369938369e-16, 0.2103151328380313]}, {'': [-1.9556222085140373e-15, 0.2103071014935139], 'false,true': [nan, 0.17602613905097414], 'false,true,false': [nan, 0.17602613905097406], 'false,false': [0.13316735293178578, 0.21183140419786892], 'false': [0.17602613905097414, 0.21070280923408802], 'false,false,true': [nan, 0.13316735293178608]}, {'': [2.548827611763295e-15, 0.2102461130651727], 'false': [0.1335633611283299, 0.21140231768134343], 'false,true': [nan, 0.1335633611283299]}, {'': [-1.2907106576192646e-15, 0.2102205888283657], 'false': [0.17604065045763115, 0.2106402895960637], 'false,true': [nan, 0.17604065045763115]}, {'': [5.997241439443048e-16, 0.2101996844841713], 'true,false': [0.0, 2.924924916281537e-16], 'true,true': [3.934967682215745e-17, -3.96508223080413e-18], 'true': [3.6146796150586495e-17, 3.18470349693272e-16], 'false': [0.176039856814348, 0.21063606523213851], 'false,true': [nan, 0.17603985681434806], 'true,true,false': [nan, -3.96508223080413e-18], 'true,false,true': [nan, 0.0]}, {'': [6.029835142918282e-16, 0.2101853283136139], 'true,true': [nan, -5.340313283007082e-17], 'true': [-6.74565888379842e-17, 4.919682641266766e-16]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '0;true;actedin(C, D).;true;true', '1;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '2;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '2;true,false;haschild(A, H), actedin(H, I).;true;true', '2;true,true;actedin(C, F).;true;true', '2;true;haschild(B, D), actedin(D, E).;true;true', '3;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '4;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '5;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '6;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '7;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '8;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '8;true,false;haschild(B, H), actedin(H, I).;true;true', '8;true,true;actedin(C, F).;true;true', '8;true;haschild(A, D), actedin(D, E).;true;true', '9;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '9;true;actedin(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.8581489350995075;  // std dev = 1,42e-07, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( actedin(A, D), actedin(B, E) )
%   | then if ( directed(F, D), directed(F, E) )
%   | | then if ( actedin(A, E) )
%   | | | then return 0.8475669245174987;  // std dev = 1,407, 189,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=187 */
%   | | | else return 0.6914822684328445;  // std dev = 3,764, 102,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=85 */
%   | | else if ( diedin(B, G), diedin(A, H) )
%   | | | then return 0.6174081943587716;  // std dev = 3,142, 54,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=41 */
%   | | | else return 0.31549282252255134;  // std dev = 16,798, 1.137,000 (wgt'ed) examples reached here.  /* #neg=617 #pos=520 */
%   | else if ( haschild(A, I) )
%   | | then if ( haschild(J, B) )
%   | | | then return 0.10538650416028114;  // std dev = 11,608, 724,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=179 */
%   | | | else return -0.02556452458568224;  // std dev = 17,886, 3.113,000 (wgt'ed) examples reached here.  /* #neg=2.751 #pos=362 */
%   | | else if ( haschild(B, K) )
%   | | | then return 0.04917592423375188;  // std dev = 20,997, 2.853,000 (wgt'ed) examples reached here.  /* #neg=2.308 #pos=545 */
%   | | | else return 0.19690419045828128;  // std dev = 57,009, 14.509,000 (wgt'ed) examples reached here.  /* #neg=9.594 #pos=4.915 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.7194734122109588;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(A, D) )
%   | then if ( haschild(E, B) )
%   | | then if ( haschild(B, F) )
%   | | | then return -0.03769157357546209;  // std dev = 6,015, 349,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=41 */
%   | | | else return 0.21439370809500302;  // std dev = 9,443, 383,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=142 */
%   | | else if ( haschild(D, G) )
%   | | | then return -0.0540447920902028;  // std dev = 10,632, 1.457,000 (wgt'ed) examples reached here.  /* #neg=1.333 #pos=124 */
%   | | | else return 0.014160879633895894;  // std dev = 15,088, 1.754,000 (wgt'ed) examples reached here.  /* #neg=1.480 #pos=274 */
%   | else if ( haschild(B, H) )
%   | | then if ( haschild(I, A) )
%   | | | then return 0.22330244819682138;  // std dev = 9,820, 414,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=154 */
%   | | | else return 0.024762324466672595;  // std dev = 18,975, 2.530,000 (wgt'ed) examples reached here.  /* #neg=2.088 #pos=442 */
%   | | else if ( created(B, J), created(A, J) )
%   | | | then return 0.822851558099681;  // std dev = 0,281, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   | | | else return 0.18422282994146946;  // std dev = 59,680, 15.706,000 (wgt'ed) examples reached here.  /* #neg=10.137 #pos=5.569 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.5553664367462918;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(A, D) )
%   | then if ( haschild(E, B) )
%   | | then if ( haschild(B, F) )
%   | | | then return -0.03281446348627134;  // std dev = 6,015, 349,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=41 */
%   | | | else return 0.18401311966736228;  // std dev = 9,442, 383,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=142 */
%   | | else if ( haschild(D, G), wasbornin(B, H) )
%   | | | then return -0.11548782959756503;  // std dev = 2,626, 405,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=7 */
%   | | | else return -3.284972612608346E-4;  // std dev = 18,220, 2.806,000 (wgt'ed) examples reached here.  /* #neg=2.415 #pos=391 */
%   | else if ( haschild(B, I) )
%   | | then if ( actedin(A, J) )
%   | | | then return -0.05584075160600848;  // std dev = 7,698, 700,000 (wgt'ed) examples reached here.  /* #neg=627 #pos=73 */
%   | | | else return 0.07732048997498563;  // std dev = 19,952, 2.244,000 (wgt'ed) examples reached here.  /* #neg=1.721 #pos=523 */
%   | | else if ( haschild(K, A), haschild(L, B) )
%   | | | then return 0.43627253656693177;  // std dev = 7,411, 236,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=149 */
%   | | | else return 0.15529981590478856;  // std dev = 59,235, 15.558,000 (wgt'ed) examples reached here.  /* #neg=10.050 #pos=5.508 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.4175135841583132;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( actedin(B, D), actedin(A, E) )
%   | then if ( created(F, D), diedin(F, G) )
%   | | then if ( actedin(B, E) )
%   | | | then return 0.6502335622601804;  // std dev = 1,483, 111,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=109 */
%   | | | else return 0.3081908981950927;  // std dev = 10,052, 424,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=235 */
%   | | else if ( actedin(A, D) )
%   | | | then return 0.656568280884157;  // std dev = 0,599, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | | | else return 0.2160824676223855;  // std dev = 14,328, 843,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=385 */
%   | else if ( iscitizenof(A, H), iscitizenof(B, H) )
%   | | then if ( haschild(A, I), hascurrency(H, J) )
%   | | | then return 0.1147486537653288;  // std dev = 0,860, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6872908634809917;  // std dev = 2,868, 101,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=92 */
%   | | else if ( haschild(A, K) )
%   | | | then return -0.003425534735228972;  // std dev = 21,203, 3.831,000 (wgt'ed) examples reached here.  /* #neg=3.293 #pos=538 */
%   | | | else return 0.09915728363156806;  // std dev = 60,350, 17.263,000 (wgt'ed) examples reached here.  /* #neg=11.893 #pos=5.370 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.3207118471601494;  // std dev = 8,09e-07, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(A, D) )
%   | then if ( actedin(B, E) )
%   | | then if ( actedin(A, F), created(G, E) )
%   | | | then return 0.13093534104137275;  // std dev = 4,375, 92,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=37 */
%   | | | else return -0.10095604276322762;  // std dev = 4,737, 633,000 (wgt'ed) examples reached here.  /* #neg=609 #pos=24 */
%   | | else if ( haschild(A, B) )
%   | | | then return 0.7931925040676026;  // std dev = 0,128, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.012689606727747898;  // std dev = 20,342, 3.201,000 (wgt'ed) examples reached here.  /* #neg=2.698 #pos=503 */
%   | else if ( actedin(B, H), actedin(A, I) )
%   | | then if ( wrotemusicfor(J, H), wrotemusicfor(J, I) )
%   | | | then return 0.4815723510411807;  // std dev = 4,074, 230,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=210 */
%   | | | else return 0.2063146700997603;  // std dev = 16,474, 1.146,000 (wgt'ed) examples reached here.  /* #neg=563 #pos=583 */
%   | | else if ( actedin(A, K) )
%   | | | then return -0.00416605865338436;  // std dev = 22,980, 3.188,000 (wgt'ed) examples reached here.  /* #neg=2.489 #pos=699 */
%   | | | else return 0.1048395350829695;  // std dev = 55,764, 14.174,000 (wgt'ed) examples reached here.  /* #neg=9.413 #pos=4.761 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.2551722425694917;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( isaffiliatedto(A, D), isaffiliatedto(B, D) )
%   | then if ( ispoliticianof(B, E) )
%   | | then if ( holdspoliticalposition(B, F) )
%   | | | then return 0.742609575954299;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09072375737903438;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haschild(A, G), haswonprize(A, H) )
%   | | | then return -0.14347065397768252;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.661182858004143;  // std dev = 3,192, 145,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=134 */
%   | else if ( haschild(A, I) )
%   | | then if ( wasbornin(I, J), haschild(B, K) )
%   | | | then return -0.08306519087847143;  // std dev = 3,640, 248,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=15 */
%   | | | else return 0.0037693177422912817;  // std dev = 21,160, 3.683,000 (wgt'ed) examples reached here.  /* #neg=3.125 #pos=558 */
%   | | else if ( isaffiliatedto(B, L), actedin(A, M) )
%   | | | then return -0.14275061281339743;  // std dev = 4,878, 313,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=27 */
%   | | | else return 0.07806408552123037;  // std dev = 62,253, 18.278,000 (wgt'ed) examples reached here.  /* #neg=12.184 #pos=6.094 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.20975771563252804;  // std dev = 1,67e-06, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( actedin(A, D), haschild(E, B) )
%   | then if ( directed(B, F) )
%   | | then if ( actedin(E, G), created(H, D) )
%   | | | then return 0.5924571596744035;  // std dev = 0,386, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.13312531135141265;  // std dev = 1,748, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( haschild(I, E) )
%   | | | then return -0.18425252777454332;  // std dev = 2,046, 382,000 (wgt'ed) examples reached here.  /* #neg=377 #pos=5 */
%   | | | else return -0.05832226311983892;  // std dev = 5,644, 277,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=53 */
%   | else if ( haschild(J, A), haschild(K, B) )
%   | | then if ( haschild(B, L), haschild(A, M) )
%   | | | then return 0.025749376768505066;  // std dev = 4,998, 183,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=32 */
%   | | | else return 0.24513815700034366;  // std dev = 12,293, 631,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=323 */
%   | | else if ( livesin(B, N), livesin(A, N) )
%   | | | then return 0.664171171773995;  // std dev = 0,834, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0.050367939091308996;  // std dev = 64,283, 21.117,000 (wgt'ed) examples reached here.  /* #neg=14.780 #pos=6.337 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.1770964977452798;  // std dev = 0,000, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( actedin(A, D), actedin(B, D) )
%   | then if ( wrotemusicfor(E, D), directed(F, D) )
%   | | then if ( haschild(G, F), haswonprize(E, H) )
%   | | | then return 0.017596163412165744;  // std dev = 0,826, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.33755633589681333;  // std dev = 1,122, 109,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=108 */
%   | | else if ( directed(I, D) )
%   | | | then return 0.40066918498487536;  // std dev = 0,462, 77,000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | | else return 0.5054862314222758;  // std dev = 0,250, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( diedin(A, J), diedin(B, J) )
%   | | then if ( isleaderof(K, J), created(K, L) )
%   | | | then return 0.48014203454150456;  // std dev = 1,482, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.6685233816227737;  // std dev = 1,825, 101,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=98 */
%   | | else if ( actedin(A, M), created(B, M) )
%   | | | then return 0.7062457336049617;  // std dev = 0,502, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.03486681850301284;  // std dev = 65,566, 22.310,000 (wgt'ed) examples reached here.  /* #neg=15.839 #pos=6.471 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.1527438580936683;  // std dev = 2,46e-08, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( actedin(A, D), actedin(B, E) )
%   | then if ( directed(F, E), directed(F, D) )
%   | | then if ( created(A, G), wrotemusicfor(H, E) )
%   | | | then return 0.221178128312348;  // std dev = 2,080, 54,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return 0.32444502763569355;  // std dev = 3,412, 237,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=224 */
%   | | else if ( edited(I, E), edited(I, D) )
%   | | | then return 0.5488834620360505;  // std dev = 0,906, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.09199257676612875;  // std dev = 16,646, 1.173,000 (wgt'ed) examples reached here.  /* #neg=629 #pos=544 */
%   | else if ( haschild(B, J), wasbornin(A, K) )
%   | | then if ( wasbornin(J, L), diedin(A, L) )
%   | | | then return 0.5446577694573069;  // std dev = 1,105, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.09016692801056164;  // std dev = 9,191, 953,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=101 */
%   | | else if ( actedin(B, M), haschild(N, A) )
%   | | | then return -0.15592464602116915;  // std dev = 4,578, 539,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=21 */
%   | | | else return 0.03721534636447658;  // std dev = 62,351, 19.697,000 (wgt'ed) examples reached here.  /* #neg=13.826 #pos=5.871 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.13400703000800795;  // std dev = 2,45e-08, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   else if ( haschild(B, D) )
%   | then if ( haschild(E, A), haschild(D, F) )
%   | | then if ( haschild(A, G) )
%   | | | then return 0.015797077572201945;  // std dev = 5,143, 201,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=34 */
%   | | | else return 0.1613553341783463;  // std dev = 6,937, 204,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=90 */
%   | | else if ( haschild(D, H), diedin(H, I) )
%   | | | then return -0.13232200701484467;  // std dev = 5,328, 517,000 (wgt'ed) examples reached here.  /* #neg=485 #pos=32 */
%   | | | else return -0.01775214099452274;  // std dev = 19,701, 2.725,000 (wgt'ed) examples reached here.  /* #neg=2.205 #pos=520 */
%   | else if ( isaffiliatedto(B, J), actedin(A, K) )
%   | | then if ( playsfor(L, J), diedin(L, M) )
%   | | | then return 0.34880770554921087;  // std dev = 1,278, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.1555431187602706;  // std dev = 4,337, 285,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=21 */
%   | | else if ( actedin(B, N), directed(A, N) )
%   | | | then return 0.5572265173894828;  // std dev = 2,094, 76,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=75 */
%   | | | else return 0.0371580090441812;  // std dev = 61,302, 18.666,000 (wgt'ed) examples reached here.  /* #neg=12.608 #pos=6.058 */


Results
   AUC ROC   = 0.727538
   AUC PR    = 0.640593
   CLL	      = -0.544563
   Precision = 0.98913 at threshold = 0.5
   Recall    = 0.178026
   F1        = 0.301744


Total learning time: 1098.662 seconds
Total inference time: 71.214 seconds
AUC ROC: 0.727538


Refined model AUC ROC: 0.727538


Dataset: 22_cora_yago2s, Fold: 2, Type: transfer, Time: 01:26:16
{'AUC ROC': 0.727538, 'Parameter Learning results': {'AUC ROC': 0.573729, 'AUC PR': 0.486338, 'F1': 0.235609, 'Learning time': 527.403, 'Inference time': 71.806, 'CLL': -0.591854, 'Recall': 0.133535, 'Precision': [1.0, 0.5]}, 'AUC PR': 0.640593, 'F1': 0.301744, 'Learning time': 1626.065, 'Inference time': 71.214, 'CLL': -0.544563, 'Mapping results': {'Generating paths time': 2.1899824142456055, 'Total time': 299.5980477333069, 'Possible mappings': 441488, 'Finding best mapping': 165.75008082389832, 'Generating mappings time': 107.95698142051697, 'Knowledge compiling time': 23.700995445251465}, 'Recall': 0.178026, 'Precision': [0.98913, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( created(A, C), haschild(D, B) )
%   then if ( actedin(B, E), wrotemusicfor(F, E) )
%   | then if ( wasbornin(A, G) )
%   | | then return 0.7331489350995123;  // std dev = 0,331, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( wasbornin(B, H), directed(A, C) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.23910131605189322;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return -0.03395632805838285;  // std dev = 0,310, 380,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=41 */
%   else if ( haschild(B, I), haschild(A, I) )
%   | then return 0.8581489350995075;  // std dev = 4,62e-06, 1.071,000 (wgt'ed) examples reached here.  /* #pos=1.071 */
%   | else if ( haschild(B, J) )
%   | | then if ( actedin(A, K), haschild(L, B) )
%   | | | then return -0.11263028567970895;  // std dev = 2,956, 308,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=9 */
%   | | | else return 0.06747338800150603;  // std dev = 22,844, 3.153,000 (wgt'ed) examples reached here.  /* #neg=2.493 #pos=660 */
%   | | else if ( haschild(A, M) )
%   | | | then return 0.011442722174125187;  // std dev = 20,390, 3.203,000 (wgt'ed) examples reached here.  /* #neg=2.712 #pos=491 */
%   | | | else return 0.2184025536471394;  // std dev = 59,988, 15.614,000 (wgt'ed) examples reached here.  /* #neg=9.989 #pos=5.625 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, D) )
%   then if ( haschild(A, D) )
%   | then return 0.7219618710011099;  // std dev = 0,617, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   | else return -0.03513601266090938;  // std dev = 0,317, 703,000 (wgt'ed) examples reached here.  /* #neg=623 #pos=80 */
%   else if ( actedin(A, E), actedin(B, F) )
%   | then if ( directed(G, F), directed(G, E) )
%   | | then return 0.7658824773385096;  // std dev = 0,247, 289,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=270 */
%   | | else if ( haschild(A, H), directed(I, E) )
%   | | | then return 0.0988944997619247;  // std dev = 3,800, 78,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | | else return 0.3177657561408805;  // std dev = 16,651, 1.112,000 (wgt'ed) examples reached here.  /* #neg=570 #pos=542 */
%   | else if ( haschild(A, J) )
%   | | then if ( haschild(K, B) )
%   | | | then return 0.22469060473565639;  // std dev = 9,332, 375,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=138 */
%   | | | else return -0.02558134026778707;  // std dev = 16,934, 2.762,000 (wgt'ed) examples reached here.  /* #neg=2.437 #pos=325 */
%   | | else if ( actedin(A, L), haschild(B, M) )
%   | | | then return -0.1034871438432725;  // std dev = 4,566, 609,000 (wgt'ed) examples reached here.  /* #neg=587 #pos=22 */
%   | | | else return 0.15706538757571617;  // std dev = 60,510, 16.753,000 (wgt'ed) examples reached here.  /* #neg=11.315 #pos=5.438 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, D) )
%   then if ( haschild(A, C) )
%   | then return 0.5581988648660016;  // std dev = 0,854, 1.090,000 (wgt'ed) examples reached here.  /* #pos=1.090 */
%   | else return -0.030737901548359176;  // std dev = 0,317, 703,000 (wgt'ed) examples reached here.  /* #neg=623 #pos=80 */
%   else if ( directed(A, E), actedin(B, F) )
%   | then if ( actedin(G, E), actedin(G, F) )
%   | | then return 0.7066003185421623;  // std dev = 0,241, 119,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=112 */
%   | | else if ( actedin(A, F) )
%   | | | then return 0.6944237244725436;  // std dev = 0,153, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.19997087601487254;  // std dev = 7,796, 258,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=104 */
%   | else if ( haschild(B, H) )
%   | | then if ( haschild(I, A) )
%   | | | then return 0.20267802135034024;  // std dev = 9,780, 414,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=154 */
%   | | | else return 0.010042462756957882;  // std dev = 18,656, 2.514,000 (wgt'ed) examples reached here.  /* #neg=2.081 #pos=433 */
%   | | else if ( haschild(A, J) )
%   | | | then return 0.007117479157341058;  // std dev = 20,164, 3.210,000 (wgt'ed) examples reached here.  /* #neg=2.722 #pos=488 */
%   | | | else return 0.15620142649649255;  // std dev = 59,119, 15.454,000 (wgt'ed) examples reached here.  /* #neg=10.000 #pos=5.454 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( isaffiliatedto(A, C), isaffiliatedto(B, C) )
%   then if ( haschild(A, D) )
%   | then return 0.46148690897577793;  // std dev = 0,256, 43,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=39 */
%   | else if ( ispoliticianof(B, E) )
%   | | then if ( holdspoliticalposition(B, F) )
%   | | | then return 0.7804568457619635;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.05287648757136985;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.7084278999003736;  // std dev = 0,262, 136,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=126 */
%   else if ( diedin(B, G), diedin(A, G) )
%   | then return 0.6319415352310311;  // std dev = 0,230, 172,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=166 */
%   | else if ( actedin(A, H), actedin(B, I) )
%   | | then if ( directed(J, H), directed(J, I) )
%   | | | then return 0.5689607889838574;  // std dev = 4,316, 308,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=289 */
%   | | | else return 0.22545750094005876;  // std dev = 16,989, 1.196,000 (wgt'ed) examples reached here.  /* #neg=629 #pos=567 */
%   | | else if ( actedin(A, K) )
%   | | | then return 0.015451172638745571;  // std dev = 23,615, 3.485,000 (wgt'ed) examples reached here.  /* #neg=2.734 #pos=751 */
%   | | | else return 0.10609119646519335;  // std dev = 59,938, 18.420,000 (wgt'ed) examples reached here.  /* #neg=12.440 #pos=5.980 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(D, B) )
%   then if ( haschild(A, E), haschild(B, E) )
%   | then return 0.3900619431794138;  // std dev = 0,052, 377,000 (wgt'ed) examples reached here.  /* #pos=377 */
%   | else if ( haschild(A, F), haschild(B, G) )
%   | | then return 0.012331086757948286;  // std dev = 0,372, 192,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=32 */
%   | | else return 0.27658189221223234;  // std dev = 0,493, 661,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=327 */
%   else if ( actedin(B, H), actedin(A, I) )
%   | then if ( actedin(A, H) )
%   | | then return 0.49410503801878664;  // std dev = 0,142, 236,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=234 */
%   | | else if ( wrotemusicfor(J, H), wrotemusicfor(J, I) )
%   | | | then return 0.3969607064695899;  // std dev = 4,303, 109,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=84 */
%   | | | else return 0.17254721973173415;  // std dev = 16,673, 1.178,000 (wgt'ed) examples reached here.  /* #neg=620 #pos=558 */
%   | else if ( haschild(A, K), haschild(B, L) )
%   | | then return 0.19173189734468718;  // std dev = 0,292, 1.176,000 (wgt'ed) examples reached here.  /* #neg=462 #pos=714 */
%   | | else if ( haschild(A, M) )
%   | | | then return -0.025574959592620957;  // std dev = 18,157, 2.940,000 (wgt'ed) examples reached here.  /* #neg=2.556 #pos=384 */
%   | | | else return 0.08043418789019068;  // std dev = 59,284, 16.902,000 (wgt'ed) examples reached here.  /* #neg=11.688 #pos=5.214 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( actedin(B, C), isaffiliatedto(A, D) )
%   then if ( actedin(A, E), edited(F, C) )
%   | then return 0.3230892278553411;  // std dev = 0,319, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.1566145664200731;  // std dev = 0,262, 290,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=23 */
%   else if ( graduatedfrom(A, G), graduatedfrom(B, H) )
%   | then if ( iscitizenof(B, I), owns(H, J) )
%   | | then if ( owns(G, K), hascurrency(I, L) )
%   | | | then return 0.7009904846989061;  // std dev = 0,415, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.3209928404517598;  // std dev = 1,054, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( actedin(A, M), created(N, M) )
%   | | | then return -0.132999453002059;  // std dev = 0,546, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.34946677069068544;  // std dev = 5,910, 174,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=113 */
%   | else if ( haschild(A, P), haschild(B, P) )
%   | | then return 0.32451586593505893;  // std dev = 1,434, 1.066,000 (wgt'ed) examples reached here.  /* #pos=1.066 */
%   | | else if ( haschild(A, Q) )
%   | | | then return -0.016221513145890328;  // std dev = 21,690, 3.874,000 (wgt'ed) examples reached here.  /* #neg=3.299 #pos=575 */
%   | | | else return 0.08015808809703247;  // std dev = 62,162, 18.331,000 (wgt'ed) examples reached here.  /* #neg=12.210 #pos=6.121 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(D, B) )
%   then if ( haschild(E, C), haschild(E, D) )
%   | then return 0.497554440394513;  // std dev = 0,248, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else if ( haschild(A, B) )
%   | | then return 0.8059160190212697;  // std dev = 0,124, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haschild(A, F), haschild(B, F) )
%   | | | then return 0.24005307056864647;  // std dev = 0,820, 346,000 (wgt'ed) examples reached here.  /* #pos=346 */
%   | | | else return 0.13741771331511388;  // std dev = 13,268, 808,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=314 */
%   else if ( haschild(A, G), haschild(B, G) )
%   | then return 0.2680763796588226;  // std dev = 0,888, 713,000 (wgt'ed) examples reached here.  /* #pos=713 */
%   | else if ( haschild(B, H) )
%   | | then if ( haschild(H, I), wasbornin(A, J) )
%   | | | then return -0.14774165024390576;  // std dev = 3,776, 398,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=17 */
%   | | | else return -0.018061495966381142;  // std dev = 20,125, 2.830,000 (wgt'ed) examples reached here.  /* #neg=2.302 #pos=528 */
%   | | else if ( isaffiliatedto(B, K), isaffiliatedto(A, K) )
%   | | | then return 0.4842692550468054;  // std dev = 3,769, 149,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=131 */
%   | | | else return 0.05663079782795388;  // std dev = 61,106, 18.451,000 (wgt'ed) examples reached here.  /* #neg=12.652 #pos=5.799 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), actedin(A, D) )
%   then if ( haschild(E, C) )
%   | then return -0.15773529153265398;  // std dev = 0,128, 388,000 (wgt'ed) examples reached here.  /* #neg=377 #pos=11 */
%   | else if ( actedin(C, F), wrotemusicfor(G, D) )
%   | | then return 0.32495336647675316;  // std dev = 0,419, 48,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=36 */
%   | | else return -0.09918429859017339;  // std dev = 0,292, 253,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=34 */
%   else if ( directed(B, H), actedin(A, I) )
%   | then if ( actedin(A, H) )
%   | | then return 0.6357446864985382;  // std dev = 0,166, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | else if ( edited(J, H), wasbornin(B, K) )
%   | | | then return -0.028255123485532756;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.22445103193850285;  // std dev = 7,497, 249,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=141 */
%   | else if ( haschild(A, L), haschild(B, L) )
%   | | then return 0.2118607825662667;  // std dev = 1,112, 1.070,000 (wgt'ed) examples reached here.  /* #pos=1.070 */
%   | | else if ( actedin(B, M), actedin(A, N) )
%   | | | then return 0.1457442770715952;  // std dev = 16,302, 1.244,000 (wgt'ed) examples reached here.  /* #neg=562 #pos=682 */
%   | | | else return 0.03493310789838779;  // std dev = 62,851, 20.383,000 (wgt'ed) examples reached here.  /* #neg=14.533 #pos=5.850 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( actedin(B, C), haschild(D, A) )
%   then if ( actedin(A, E) )
%   | then return 0.10369544951479626;  // std dev = 0,429, 80,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=48 */
%   | else return -0.1722400931716589;  // std dev = 0,192, 551,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=23 */
%   else if ( haschild(F, B), haschild(G, A) )
%   | then if ( haschild(B, H) )
%   | | then if ( haschild(A, H) )
%   | | | then return 0.16520903712680046;  // std dev = 0,691, 376,000 (wgt'ed) examples reached here.  /* #pos=376 */
%   | | | else return 0.05832186279715598;  // std dev = 8,924, 413,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=130 */
%   | | else if ( haschild(I, G), isaffiliatedto(F, J) )
%   | | | then return -0.22568258228774174;  // std dev = 0,781, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.24772558776465556;  // std dev = 9,508, 395,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=223 */
%   | else if ( haschild(B, K), haschild(A, K) )
%   | | then return 0.18558618772362157;  // std dev = 0,667, 706,000 (wgt'ed) examples reached here.  /* #pos=706 */
%   | | else if ( haschild(L, B) )
%   | | | then return -0.0258740985633454;  // std dev = 20,169, 2.741,000 (wgt'ed) examples reached here.  /* #neg=2.178 #pos=563 */
%   | | | else return 0.04203755122461784;  // std dev = 60,817, 18.499,000 (wgt'ed) examples reached here.  /* #neg=12.645 #pos=5.854 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( haschild(B, D) )
%   | then return 0.1693010778334204;  // std dev = 0,219, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else if ( actedin(B, E), actedin(A, F) )
%   | | then return 0.3454628285860732;  // std dev = 0,419, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else return 0.6560070164752256;  // std dev = 0,177, 73,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=71 */
%   else if ( isaffiliatedto(B, G), actedin(A, H) )
%   | then if ( wrotemusicfor(I, H), playsfor(I, J) )
%   | | then return 0.3469362874956718;  // std dev = 0,770, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.17833155907615836;  // std dev = 0,261, 336,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=27 */
%   | else if ( haschild(K, A), wasbornin(B, L) )
%   | | then if ( haschild(M, B) )
%   | | | then return 0.08721400475853439;  // std dev = 6,330, 280,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=157 */
%   | | | else return -0.11416625887748756;  // std dev = 8,203, 868,000 (wgt'ed) examples reached here.  /* #neg=752 #pos=116 */
%   | | else if ( haschild(A, N), wasbornin(B, P) )
%   | | | then return -0.028335767578169163;  // std dev = 7,532, 713,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=206 */
%   | | | else return 0.03960195466112677;  // std dev = 64,018, 21.453,000 (wgt'ed) examples reached here.  /* #neg=14.147 #pos=7.306 */


Results
   AUC ROC   = 0.737031
   AUC PR    = 0.646098
   CLL	      = -0.547506
   Precision = 0.984122 at threshold = 0.5
   Recall    = 0.187745
   F1        = 0.315332


Total learning time: 896.803 seconds
Total inference time: 101.163 seconds
AUC ROC: 0.737031


Dataset: 22_cora_yago2s, Fold: 2, Type: scratch, Time: 01:42:58
{'AUC ROC': 0.737031, 'AUC PR': 0.646098, 'F1': 0.315332, 'Learning time': 896.803, 'Inference time': 101.163, 'CLL': -0.547506, 'Recall': 0.187745, 'Precision': [0.984122, 0.5]}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 22.146897792816162
   Generating paths time   = 2.6924030780792236
   Generating mappings time   = 113.80721402168274
   Possible mappings   = 441488
   Finding best mapping   = 167.7446596622467
   Total time   = 306.3911817073822


Best mapping found: ['venue(A,B) -> haschild(A,B)', 'samevenue(A,B) -> ismarriedto(A,B)', 'samebib(A,B) -> influences(A,B)', 'haswordauthor(A,B) -> actedin(B,A)', 'author(A,B) -> created(A,B)', 'haswordvenue(A,B) -> haschild(A,B)'] 

Transferred target predicate: ismarriedto 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;false
0;true,true;created(E, D), haschild(E, A).;false;false
0;true;actedin(C, D).;true;false
1;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;true
1;false;haschild(A, D), actedin(D, E).;false;false
2;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true
2;true,false;haschild(A, H), actedin(H, I).;true;false
2;true;haschild(B, D), actedin(D, E).;true;true
2;true,true;actedin(C, F).;false;true
2;true,true,false;created(G, E), haschild(G, B).;false;false
2;false;haschild(A, K), actedin(K, L).;true;false
2;false,true;actedin(M, L), haschild(B, M).;false;false
2;true,false,true;created(J, I), haschild(J, A).;false;false
3;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;true
3;false;haschild(A, D), actedin(D, E).;true;false
3;false,true,true;influences(F, G), haschild(G, A).;false;false
3;false,true;created(F, E), haschild(F, B).;true;true
3;false,true,false;actedin(H, E), haschild(B, H).;false;false
4;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;false
5;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;true
5;false,true;actedin(F, E), haschild(A, F).;false;true
5;false,true,false;created(G, E), haschild(G, A).;false;false
5;false,false;haschild(A, H), actedin(H, I).;true;false
5;false;haschild(B, D), actedin(D, E).;true;true
5;false,false,true;created(J, I), haschild(J, B).;false;false
6;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;true
6;false;haschild(A, D), actedin(D, E).;true;false
6;false,true;actedin(F, E), haschild(B, F).;false;false
7;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;false;true
7;false;haschild(B, D), actedin(D, E).;true;false
7;false,true;actedin(F, E), haschild(A, F).;false;false
8;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true
8;true,false;haschild(B, H), actedin(H, I).;true;false
8;true;haschild(A, D), actedin(D, E).;true;true
8;true,true;actedin(C, F).;false;true
8;true,true,false;created(G, E), haschild(G, A).;false;false
8;false;haschild(B, K), actedin(K, L).;true;false
8;false,true;created(M, L), haschild(M, A).;false;false
8;true,false,true;created(J, I), haschild(J, A).;false;false
9;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;false
9;true,true;created(E, D), haschild(E, B).;false;false
9;true;actedin(C, D).;true;false


WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( actedin(C, D) )
%   | then if ( created(E, D), haschild(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995125;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return 0.8581489350995075;  // std dev = 4,25e-06, 954,000 (wgt'ed) examples reached here.  /* #pos=954 */
%   else return 0.1614950196092399;  // std dev = 69,327, 22.743,000 (wgt'ed) examples reached here.  /* #neg=15.844 #pos=6.899 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.7194734122109588;  // std dev = 0,000, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(A, D), actedin(D, E) )
%   | then return 0.022741741531580626;  // std dev = 7,049, 329,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=61 */
%   | else return 0.14238137149626118;  // std dev = 68,935, 22.416,000 (wgt'ed) examples reached here.  /* #neg=15.578 #pos=6.838 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( haschild(B, D), actedin(D, E) )
%   | then if ( actedin(C, F) )
%   | | then return 0.555366436746283;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | else if ( created(G, E), haschild(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haschild(A, H), actedin(H, I) )
%   | | then if ( created(J, I), haschild(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 947,000 (wgt'ed) examples reached here.  /* #pos=947 */
%   else if ( haschild(A, K), actedin(K, L) )
%   | then if ( actedin(M, L), haschild(B, M) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.019620333915907763;  // std dev = 7,049, 329,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=61 */
%   | else return 0.12211363673436114;  // std dev = 68,932, 22.411,000 (wgt'ed) examples reached here.  /* #neg=15.573 #pos=6.838 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.41751358415831336;  // std dev = 0,000, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(A, D), actedin(D, E) )
%   | then if ( created(F, E), haschild(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actedin(G, E), haschild(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.01688894667129832;  // std dev = 7,049, 329,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=61 */
%   | else return 0.10310443627783004;  // std dev = 68,934, 22.414,000 (wgt'ed) examples reached here.  /* #neg=15.576 #pos=6.838 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.32071184716015094;  // std dev = 0,000, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else return 0.08494108262003992;  // std dev = 69,305, 22.743,000 (wgt'ed) examples reached here.  /* #neg=15.844 #pos=6.899 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.2551722425694932;  // std dev = 0,000, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(B, D), actedin(D, E) )
%   | then if ( actedin(F, E), haschild(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( created(G, E), haschild(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.059957564854755806;  // std dev = 6,803, 325,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=56 */
%   | else if ( haschild(A, H), actedin(H, I) )
%   | | then if ( created(J, I), haschild(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.005403974632486322;  // std dev = 6,977, 318,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=60 */
%   | | else return 0.07294161004191455;  // std dev = 68,565, 22.100,000 (wgt'ed) examples reached here.  /* #neg=15.317 #pos=6.783 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.20975771563252857;  // std dev = 1,55e-06, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(A, D), actedin(D, E) )
%   | then if ( actedin(F, E), haschild(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.001646263728044108;  // std dev = 7,048, 329,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=61 */
%   | else return 0.058090622102211484;  // std dev = 68,922, 22.415,000 (wgt'ed) examples reached here.  /* #neg=15.577 #pos=6.838 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.17709649774527997;  // std dev = 0,000, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(B, D), actedin(D, E) )
%   | then if ( actedin(F, E), haschild(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.05934444772448387;  // std dev = 6,803, 325,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=56 */
%   | else return 0.048015608776999535;  // std dev = 68,923, 22.418,000 (wgt'ed) examples reached here.  /* #neg=15.575 #pos=6.843 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( haschild(A, D), actedin(D, E) )
%   | then if ( actedin(C, F) )
%   | | then return 0.15274385809366997;  // std dev = 4,71e-08, 69,000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | else if ( created(G, E), haschild(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1527438580936703;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haschild(B, H), actedin(H, I) )
%   | | then if ( created(J, I), haschild(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1527438580936703;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15274385809366994;  // std dev = 3,32e-07, 947,000 (wgt'ed) examples reached here.  /* #pos=947 */
%   else if ( haschild(B, K), actedin(K, L) )
%   | then if ( created(M, L), haschild(M, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.048956740826556835;  // std dev = 6,803, 325,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=56 */
%   | else return 0.038725365042548074;  // std dev = 68,924, 22.419,000 (wgt'ed) examples reached here.  /* #neg=15.576 #pos=6.843 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( actedin(C, D) )
%   | then if ( created(E, D), haschild(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.13400703000801048;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return 0.13400703000800807;  // std dev = 6,31e-07, 954,000 (wgt'ed) examples reached here.  /* #pos=954 */
%   else return 0.030065389824114466;  // std dev = 69,270, 22.744,000 (wgt'ed) examples reached here.  /* #neg=15.845 #pos=6.899 */


Results
   AUC ROC   = 0.575574
   AUC PR    = 0.489974
   CLL	      = -0.589985
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.137746
   F1        = 0.242139


Total learning time: 509.447 seconds
Total inference time: 69.55 seconds
AUC ROC: 0.575574


Structure after Parameter Learning
[['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true': 'actedin(C, D)', 'true,true': 'created(E, D), haschild(E, A)'}, {'true,true,false': [0.0, 0, 69], 'true,false': [4.25e-06, 0, 954], 'false': [69.327, 15844, 6899], 'true,true,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'false': 'haschild(A, D), actedin(D, E)'}, {'false,true': [7.049, 268, 61], 'false,false': [68.935, 15578, 6838], 'true': [0.0, 0, 1023]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true,true,false': 'created(G, E), haschild(G, B)', 'true': 'haschild(B, D), actedin(D, E)', 'true,true': 'actedin(C, F)', 'true,false': 'haschild(A, H), actedin(H, I)', 'false': 'haschild(A, K), actedin(K, L)', 'false,true': 'actedin(M, L), haschild(B, M)', 'true,false,true': 'created(J, I), haschild(J, A)'}, {'true,false,true,false': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 69], 'false,true,true': [0.0, 0, 0], 'false,false': [68.932, 15573, 6838], 'true,false,false': [0.0, 0, 947], 'true,false,true,true': [0.0, 0, 0], 'true,true,false,false': [1.05e-08, 0, 3], 'false,true,false': [7.049, 268, 61]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'false': 'haschild(A, D), actedin(D, E)', 'false,true,false': 'actedin(G, E), haschild(B, G)', 'false,true': 'created(F, E), haschild(F, B)'}, {'false,false': [68.934, 15576, 6838], 'false,true,false,false': [7.049, 268, 61], 'true': [0.0, 0, 1023], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)'}, {'false': [69.305, 15844, 6899], 'true': [0.0, 0, 1023]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'false,true': 'actedin(F, E), haschild(A, F)', 'false,true,false': 'created(G, E), haschild(G, A)', 'false,false': 'haschild(A, H), actedin(H, I)', 'false': 'haschild(B, D), actedin(D, E)', 'false,false,true': 'created(J, I), haschild(J, B)'}, {'false,false,true,true': [0.0, 0, 0], 'true': [0.0, 0, 1023], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [6.803, 269, 56], 'false,false,false': [68.565, 15317, 6783], 'false,true,false,true': [0.0, 0, 0], 'false,false,true,false': [6.977, 258, 60]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'false': 'haschild(A, D), actedin(D, E)', 'false,true': 'actedin(F, E), haschild(B, F)'}, {'false,false': [68.922, 15577, 6838], 'true': [1.55e-06, 0, 1023], 'false,true,true': [0.0, 0, 0], 'false,true,false': [7.048, 268, 61]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'false': 'haschild(B, D), actedin(D, E)', 'false,true': 'actedin(F, E), haschild(A, F)'}, {'false,false': [68.923, 15575, 6843], 'true': [0.0, 0, 1023], 'false,true,true': [0.0, 0, 0], 'false,true,false': [6.803, 269, 56]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true,true,false': 'created(G, E), haschild(G, A)', 'true': 'haschild(A, D), actedin(D, E)', 'true,true': 'actedin(C, F)', 'true,false': 'haschild(B, H), actedin(H, I)', 'false': 'haschild(B, K), actedin(K, L)', 'false,true': 'created(M, L), haschild(M, A)', 'true,false,true': 'created(J, I), haschild(J, A)'}, {'true,false,true,false': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,true': [4.71e-08, 0, 69], 'false,true,true': [0.0, 0, 0], 'false,false': [68.924, 15576, 6843], 'true,false,false': [3.32e-07, 0, 947], 'true,false,true,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 4], 'false,true,false': [6.803, 269, 56]}], ['ismarriedto(A, B)', {'': 'haschild(A, C), haschild(B, C)', 'true': 'actedin(C, D)', 'true,true': 'created(E, D), haschild(E, B)'}, {'true,true,false': [0.0, 0, 69], 'true,false': [6.31e-07, 0, 954], 'false': [69.27, 15845, 6899], 'true,true,true': [0.0, 0, 0]}]]
[{'': [1.9559025844579103e-14, 0.21132723752202143], 'true,true': [nan, -6.178632484870436e-16], 'true': [-1.1327492888929132e-15, 1.8947806286936004e-14]}, {'': [-6.445588062418113e-15, 0.2113167458552988], 'false': [0.1510333422640196, 0.21199448358487874]}, {'': [-6.556718891080494e-15, 0.21128843599133615], 'false,true': [nan, 0.1510333422640244], 'true': [0.0, -8.368116341233567e-16], 'true,true': [0.0, 3.700743415417188e-17], 'false': [0.1510333422640244, 0.21202101480670843], 'true,true,false': [nan, 3.700743415417188e-17], 'true,false': [0.0, -4.801978362053475e-16], 'true,false,true': [nan, 0.0]}, {'': [-2.9449669595531036e-15, 0.21122905082877586], 'false': [0.1510333422640212, 0.2120050957648228], 'false,true,false': [nan, 0.1510333422640212], 'false,true': [nan, 0.15103334226402124]}, {'': [-4.167406074839297e-17, 0.21119589312076598]}, {'': [-2.6949225950627455e-15, 0.21119087789319746], 'false,true': [nan, 0.14242243442865973], 'false,true,false': [nan, 0.1424224344286593], 'false,false': [0.15307938768245086, 0.21272130177513057], 'false': [0.14242243442865973, 0.21193906426593834], 'false,false,true': [nan, 0.15307938768245072]}, {'': [2.354584432284203e-15, 0.21108451870205272], 'false': [0.15097556926550612, 0.21192069197966992], 'false,true': [nan, 0.15097556926550612]}, {'': [-1.0349058419184256e-15, 0.21107196890474958], 'false': [0.1424065888849528, 0.21190271965548785], 'false,true': [nan, 0.1424065888849528]}, {'': [3.924307387140338e-16, 0.211010446540438], 'true,false': [0.0, 1.162979134559826e-16], 'true,true': [3.218037752536686e-17, 0.0], 'true': [3.954218991815626e-17, 1.2714975271496529e-16], 'false': [0.14241014754520523, 0.21189506013964465], 'false,true': [nan, 0.14241014754520545], 'true,true,false': [nan, 0.0], 'true,false,true': [nan, 0.0]}, {'': [5.174529209592128e-16, 0.2109728612407305], 'true,true': [nan, -6.436075505073371e-17], 'true': [-8.045094381341714e-17, 4.1709007549859133e-16]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '0;true;actedin(C, D).;true;true', '1;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '2;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '2;true,false;haschild(A, H), actedin(H, I).;true;true', '2;true,true;actedin(C, F).;true;true', '2;true;haschild(B, D), actedin(D, E).;true;true', '3;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '4;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '5;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '6;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '7;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '8;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '8;true,false;haschild(B, H), actedin(H, I).;true;true', '8;true,true;actedin(C, F).;true;true', '8;true;haschild(A, D), actedin(D, E).;true;true', '9;;ismarriedto(A, B) :- haschild(A, C), haschild(B, C).;true;true', '9;true;actedin(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then if ( actedin(C, D) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return 0.8581489350995075;  // std dev = 4,25e-06, 954,000 (wgt'ed) examples reached here.  /* #pos=954 */
%   else if ( haschild(B, E) )
%   | then if ( wasbornin(A, F), haschild(E, G) )
%   | | then if ( haschild(H, A), diedin(I, F) )
%   | | | then return 0.03002393509951237;  // std dev = 3,018, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | | else return -0.1173945431613574;  // std dev = 2,963, 368,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=9 */
%   | | else if ( actedin(B, J), actedin(A, K) )
%   | | | then return 0.2377785647291414;  // std dev = 5,043, 108,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=41 */
%   | | | else return 0.011452334714645901;  // std dev = 20,118, 3.118,000 (wgt'ed) examples reached here.  /* #neg=2.640 #pos=478 */
%   | else if ( actedin(B, L), directed(A, L) )
%   | | then return 0.8581489350995127;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else if ( actedin(A, M), actedin(B, N) )
%   | | | then return 0.4464701029827191;  // std dev = 18,216, 1.370,000 (wgt'ed) examples reached here.  /* #neg=564 #pos=806 */
%   | | | else return 0.16873223536593193;  // std dev = 61,460, 17.641,000 (wgt'ed) examples reached here.  /* #neg=12.162 #pos=5.479 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.7194734122109588;  // std dev = 0,000, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(A, D) )
%   | then if ( haschild(E, B) )
%   | | then if ( haschild(B, F) )
%   | | | then return -0.042047176509259876;  // std dev = 5,601, 349,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=35 */
%   | | | else return 0.21311279234130706;  // std dev = 9,749, 405,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=153 */
%   | | else if ( haschild(D, G) )
%   | | | then return -0.07212637934624432;  // std dev = 10,690, 1.409,000 (wgt'ed) examples reached here.  /* #neg=1.283 #pos=126 */
%   | | | else return 0.009121372851802473;  // std dev = 15,617, 1.724,000 (wgt'ed) examples reached here.  /* #neg=1.426 #pos=298 */
%   | else if ( haschild(B, H) )
%   | | then if ( haschild(H, I), actedin(A, J) )
%   | | | then return -0.13070632431493;  // std dev = 1,408, 299,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=2 */
%   | | | else return 0.03514669359062134;  // std dev = 19,683, 2.658,000 (wgt'ed) examples reached here.  /* #neg=2.184 #pos=474 */
%   | | else if ( actedin(B, K), actedin(A, K) )
%   | | | then return 0.7845848870941629;  // std dev = 1,024, 188,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=187 */
%   | | | else return 0.19103801800016823;  // std dev = 59,898, 15.708,000 (wgt'ed) examples reached here.  /* #neg=10.084 #pos=5.624 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.5553664367462887;  // std dev = 0,000, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(A, D) )
%   | then if ( haschild(E, B), haschild(F, A) )
%   | | then if ( haschild(B, G) )
%   | | | then return -0.010984621542674974;  // std dev = 4,382, 173,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=22 */
%   | | | else return 0.24407340155922116;  // std dev = 7,105, 205,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=90 */
%   | | else if ( actedin(B, H), actedin(A, I) )
%   | | | then return 0.20278922858149157;  // std dev = 5,161, 112,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=46 */
%   | | | else return -0.024926896989075673;  // std dev = 19,717, 3.396,000 (wgt'ed) examples reached here.  /* #neg=2.942 #pos=454 */
%   | else if ( haschild(B, J) )
%   | | then if ( haschild(K, A) )
%   | | | then return 0.1836025535325108;  // std dev = 9,416, 402,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=133 */
%   | | | else return -0.01037917694967421;  // std dev = 17,129, 2.554,000 (wgt'ed) examples reached here.  /* #neg=2.211 #pos=343 */
%   | | else if ( actedin(B, L), actedin(A, M) )
%   | | | then return 0.3500651393839971;  // std dev = 17,075, 1.292,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=785 */
%   | | | else return 0.15214448816538195;  // std dev = 57,347, 14.606,000 (wgt'ed) examples reached here.  /* #neg=9.580 #pos=5.026 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.4175135841583133;  // std dev = 0,000, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(A, D) )
%   | then if ( haschild(E, B), haschild(D, F) )
%   | | then if ( haschild(B, G) )
%   | | | then return -0.031086748058723274;  // std dev = 4,012, 172,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=18 */
%   | | | else return 0.2168432256362226;  // std dev = 7,336, 219,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=96 */
%   | | else if ( haschild(D, H) )
%   | | | then return -0.05961466324129053;  // std dev = 10,678, 1.408,000 (wgt'ed) examples reached here.  /* #neg=1.282 #pos=126 */
%   | | | else return 0.013028166599073744;  // std dev = 17,277, 2.086,000 (wgt'ed) examples reached here.  /* #neg=1.714 #pos=372 */
%   | else if ( actedin(B, I), actedin(A, J) )
%   | | then if ( directed(K, J), directed(K, I) )
%   | | | then return 0.5744718364439169;  // std dev = 2,750, 246,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=239 */
%   | | | else return 0.21037408102694968;  // std dev = 16,703, 1.143,000 (wgt'ed) examples reached here.  /* #neg=558 #pos=585 */
%   | | else if ( actedin(A, L), directed(M, L) )
%   | | | then return 0.018495694945944753;  // std dev = 22,288, 2.991,000 (wgt'ed) examples reached here.  /* #neg=2.336 #pos=655 */
%   | | | else return 0.1260501378950311;  // std dev = 56,233, 14.476,000 (wgt'ed) examples reached here.  /* #neg=9.668 #pos=4.808 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.32071184716015066;  // std dev = 2,06e-07, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(B, D) )
%   | then if ( haschild(E, A), haschild(F, B) )
%   | | then if ( haschild(A, G) )
%   | | | then return -0.007759556289328102;  // std dev = 4,379, 173,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=22 */
%   | | | else return 0.19328198532256927;  // std dev = 6,692, 191,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=73 */
%   | | else if ( created(B, H) )
%   | | | then return 0.0710635895575231;  // std dev = 7,434, 319,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=74 */
%   | | | else return -0.03124419987884139;  // std dev = 17,743, 2.975,000 (wgt'ed) examples reached here.  /* #neg=2.605 #pos=370 */
%   | else if ( haschild(A, I) )
%   | | then if ( haschild(J, B) )
%   | | | then return 0.13954260795031045;  // std dev = 9,658, 405,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=153 */
%   | | | else return -0.014799022148449158;  // std dev = 18,257, 2.781,000 (wgt'ed) examples reached here.  /* #neg=2.385 #pos=396 */
%   | | else if ( diedin(A, K), diedin(B, K) )
%   | | | then return 0.6977542085416438;  // std dev = 1,604, 86,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=84 */
%   | | | else return 0.11393185086112542;  // std dev = 59,525, 15.814,000 (wgt'ed) examples reached here.  /* #neg=10.087 #pos=5.727 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.255172242569493;  // std dev = 0,000, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( directed(B, D), actedin(A, E) )
%   | then if ( actedin(A, D) )
%   | | then if ( actedin(B, D) )
%   | | | then return 0.37554892263775574;  // std dev = 0,087, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.7368844645859277;  // std dev = 0,439, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else if ( haschild(A, F) )
%   | | | then return -0.12196390463123272;  // std dev = 1,009, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.26504317065616173;  // std dev = 7,844, 261,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=147 */
%   | else if ( haschild(B, G) )
%   | | then if ( actedin(A, H) )
%   | | | then return -0.07946633703577534;  // std dev = 6,490, 761,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=51 */
%   | | | else return 0.008367821938190636;  // std dev = 19,721, 2.872,000 (wgt'ed) examples reached here.  /* #neg=2.394 #pos=478 */
%   | | else if ( haschild(A, I) )
%   | | | then return 0.0032288937895076078;  // std dev = 20,733, 3.170,000 (wgt'ed) examples reached here.  /* #neg=2.624 #pos=546 */
%   | | | else return 0.08960173127620874;  // std dev = 58,925, 15.591,000 (wgt'ed) examples reached here.  /* #neg=9.986 #pos=5.605 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.20975771563252854;  // std dev = 1,55e-06, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(D, A), haschild(E, B) )
%   | then if ( haschild(A, F) )
%   | | then if ( haschild(B, G) )
%   | | | then return -0.007525436146841709;  // std dev = 4,377, 173,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=22 */
%   | | | else return 0.1436454394107984;  // std dev = 7,099, 205,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=90 */
%   | | else if ( haschild(B, H) )
%   | | | then return 0.1614874541141197;  // std dev = 6,679, 191,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=73 */
%   | | | else return 0.3909291972483109;  // std dev = 7,629, 263,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=176 */
%   | else if ( isaffiliatedto(B, I), isaffiliatedto(A, J) )
%   | | then if ( isaffiliatedto(A, I) )
%   | | | then return 0.6743825965280374;  // std dev = 3,068, 168,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=158 */
%   | | | else return 0.020434156928061314;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | | else if ( haschild(B, K) )
%   | | | then return -0.019398361469153053;  // std dev = 19,055, 3.262,000 (wgt'ed) examples reached here.  /* #neg=2.828 #pos=434 */
%   | | | else return 0.05305872449176782;  // std dev = 61,296, 18.317,000 (wgt'ed) examples reached here.  /* #neg=12.415 #pos=5.902 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.17709649774527966;  // std dev = 0,000, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( actedin(A, D), actedin(B, E) )
%   | then if ( actedin(A, E) )
%   | | then if ( edited(F, E) )
%   | | | then return 0.44672506653926686;  // std dev = 1,213, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return 0.36924312336413534;  // std dev = 1,774, 163,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=162 */
%   | | else if ( wrotemusicfor(G, E), actedin(G, H) )
%   | | | then return 0.20213396681536766;  // std dev = 4,866, 104,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=61 */
%   | | | else return 0.104189923354628;  // std dev = 16,788, 1.184,000 (wgt'ed) examples reached here.  /* #neg=588 #pos=596 */
%   | else if ( created(B, I), created(A, I) )
%   | | then if ( haschild(B, J) )
%   | | | then return 0.8418595377467714;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7047061191457858;  // std dev = 0,350, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else if ( actedin(B, K) )
%   | | | then return -0.0354026111651104;  // std dev = 23,005, 3.226,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=726 */
%   | | | else return 0.04308600596128772;  // std dev = 58,920, 17.928,000 (wgt'ed) examples reached here.  /* #neg=12.712 #pos=5.216 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.15274385809366894;  // std dev = 2,00e-08, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(D, A), actedin(B, E) )
%   | then if ( haschild(F, D) )
%   | | then if ( haschild(A, G) )
%   | | | then return -0.14876477766883184;  // std dev = 0,928, 223,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=1 */
%   | | | else return -0.2573196540858628;  // std dev = 1,661, 145,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=3 */
%   | | else if ( actedin(D, H) )
%   | | | then return 0.2787332331352233;  // std dev = 3,006, 47,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=33 */
%   | | | else return -0.11997232059579756;  // std dev = 4,826, 239,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=35 */
%   | else if ( actedin(A, I), directed(B, I) )
%   | | then if ( actedin(B, I) )
%   | | | then return 0.21345839487316773;  // std dev = 0,059, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5509214920435148;  // std dev = 0,496, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( haschild(B, J), wasbornin(A, K) )
%   | | | then return -0.06373386827192078;  // std dev = 8,776, 1.006,000 (wgt'ed) examples reached here.  /* #neg=915 #pos=91 */
%   | | | else return 0.04173681248405949;  // std dev = 64,778, 21.016,000 (wgt'ed) examples reached here.  /* #neg=14.348 #pos=6.668 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.134007030008008;  // std dev = 2,24e-08, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( directed(A, D), actedin(B, E) )
%   | then if ( directed(A, E) )
%   | | then if ( actedin(A, E) )
%   | | | then return 0.2076776104202617;  // std dev = 0,270, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5368795373555998;  // std dev = 0,675, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( influences(F, A), wrotemusicfor(G, E) )
%   | | | then return -0.1485348561283385;  // std dev = 1,665, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.15236140085049046;  // std dev = 8,259, 292,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=144 */
%   | else if ( created(B, H), created(A, I) )
%   | | then if ( created(A, H) )
%   | | | then return 0.5338170771322286;  // std dev = 0,656, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | | else return 0.10016766241759634;  // std dev = 8,907, 354,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=140 */
%   | | else if ( actedin(A, J), directed(B, K) )
%   | | | then return 0.2127461358336736;  // std dev = 7,682, 305,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=196 */
%   | | | else return 0.017412738132712227;  // std dev = 63,811, 21.600,000 (wgt'ed) examples reached here.  /* #neg=15.355 #pos=6.245 */


Results
   AUC ROC   = 0.727322
   AUC PR    = 0.635839
   CLL	      = -0.545052
   Precision = 0.958485 at threshold = 0.5
   Recall    = 0.199584
   F1        = 0.330374


Total learning time: 740.155 seconds
Total inference time: 67.782 seconds
AUC ROC: 0.727322


Refined model AUC ROC: 0.727322


Dataset: 22_cora_yago2s, Fold: 3, Type: transfer, Time: 02:11:36
{'AUC ROC': 0.727322, 'Parameter Learning results': {'AUC ROC': 0.575574, 'AUC PR': 0.489974, 'F1': 0.242139, 'Learning time': 509.447, 'Inference time': 69.55, 'CLL': -0.589985, 'Recall': 0.137746, 'Precision': [1.0, 0.5]}, 'AUC PR': 0.635839, 'F1': 0.330374, 'Learning time': 1249.6019999999999, 'Inference time': 67.782, 'CLL': -0.545052, 'Mapping results': {'Generating paths time': 2.6924030780792236, 'Total time': 306.3911817073822, 'Possible mappings': 441488, 'Finding best mapping': 167.7446596622467, 'Generating mappings time': 113.80721402168274, 'Knowledge compiling time': 22.146897792816162}, 'Recall': 0.199584, 'Precision': [0.958485, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR ismarriedto(A, B):
%   if ( haschild(C, B), haschild(D, A) )
%   then if ( haschild(B, E), haschild(A, E) )
%   | then return 0.8581489350995083;  // std dev = 1,17e-06, 358,000 (wgt'ed) examples reached here.  /* #pos=358 */
%   | else if ( haschild(B, F), haschild(A, G) )
%   | | then return -0.014683434842684414;  // std dev = 0,333, 173,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=22 */
%   | | else if ( actedin(A, H) )
%   | | | then return 0.01604367194161758;  // std dev = 2,248, 38,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.3943808191574788;  // std dev = 12,427, 621,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=333 */
%   else if ( haschild(B, I), haschild(A, I) )
%   | then return 0.8581489350995077;  // std dev = 3,17e-06, 665,000 (wgt'ed) examples reached here.  /* #pos=665 */
%   | else if ( actedin(A, J), actedin(B, K) )
%   | | then if ( directed(L, K), directed(L, J) )
%   | | | then return 0.8245668455472699;  // std dev = 2,949, 268,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=259 */
%   | | | else return 0.35448742167395875;  // std dev = 17,528, 1.229,000 (wgt'ed) examples reached here.  /* #neg=619 #pos=610 */
%   | | else if ( haschild(B, M) )
%   | | | then return -0.015399856867858816;  // std dev = 18,763, 3.187,000 (wgt'ed) examples reached here.  /* #neg=2.784 #pos=403 */
%   | | | else return 0.16384962011062867;  // std dev = 60,466, 17.226,000 (wgt'ed) examples reached here.  /* #neg=11.960 #pos=5.266 */
WILL Produced-Tree #2
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), actedin(A, D) )
%   then if ( haschild(A, C) )
%   | then return 0.7194734122109547;  // std dev = 8,43e-08, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | else if ( actedin(B, E), created(F, E) )
%   | | then if ( actedin(B, D) )
%   | | | then return 0.7321372393663665;  // std dev = 0,080, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.10577622743672864;  // std dev = 4,271, 89,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | else return -0.11115998327749413;  // std dev = 0,169, 683,000 (wgt'ed) examples reached here.  /* #neg=663 #pos=20 */
%   else if ( haschild(B, G), haschild(A, G) )
%   | then return 0.7194734122109588;  // std dev = 0,000, 963,000 (wgt'ed) examples reached here.  /* #pos=963 */
%   | else if ( haschild(A, H) )
%   | | then if ( haschild(I, B) )
%   | | | then return 0.09609898277300648;  // std dev = 11,568, 722,000 (wgt'ed) examples reached here.  /* #neg=535 #pos=187 */
%   | | | else return -0.025730135683487056;  // std dev = 18,983, 3.099,000 (wgt'ed) examples reached here.  /* #neg=2.677 #pos=422 */
%   | | else if ( haschild(B, J) )
%   | | | then return 0.042717531625234416;  // std dev = 18,323, 2.233,000 (wgt'ed) examples reached here.  /* #neg=1.815 #pos=418 */
%   | | | else return 0.19859736168658318;  // std dev = 60,372, 15.898,000 (wgt'ed) examples reached here.  /* #neg=10.087 #pos=5.811 */
WILL Produced-Tree #3
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, D) )
%   then if ( haschild(A, D) )
%   | then return 0.5553664367462887;  // std dev = 0,000, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   | else return -0.05458500426008035;  // std dev = 0,284, 701,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=63 */
%   else if ( actedin(B, E), actedin(A, F) )
%   | then if ( directed(G, E), directed(G, F) )
%   | | then return 0.6530280250120533;  // std dev = 0,171, 266,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=258 */
%   | | else if ( created(H, E), created(H, F) )
%   | | | then return 0.5789764728684864;  // std dev = 2,649, 45,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=36 */
%   | | | else return 0.26717338720433403;  // std dev = 17,115, 1.179,000 (wgt'ed) examples reached here.  /* #neg=605 #pos=574 */
%   | else if ( haschild(A, I) )
%   | | then if ( haschild(J, B) )
%   | | | then return 0.18074668672902086;  // std dev = 9,603, 397,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=149 */
%   | | | else return -0.02697063000363465;  // std dev = 17,573, 2.686,000 (wgt'ed) examples reached here.  /* #neg=2.330 #pos=356 */
%   | | else if ( haschild(B, K) )
%   | | | then return 0.00792268369609974;  // std dev = 19,049, 2.860,000 (wgt'ed) examples reached here.  /* #neg=2.423 #pos=437 */
%   | | | else return 0.15151766270067732;  // std dev = 57,362, 14.608,000 (wgt'ed) examples reached here.  /* #neg=9.582 #pos=5.026 */
WILL Produced-Tree #4
% FOR ismarriedto(A, B):
%   if ( actedin(B, C), directed(A, D) )
%   then if ( actedin(E, D), actedin(E, C) )
%   | then return 0.617837778626496;  // std dev = 0,277, 126,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=116 */
%   | else if ( influences(F, A), wrotemusicfor(G, C) )
%   | | then return -0.10479712767703511;  // std dev = 0,292, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( created(H, C), actedin(H, C) )
%   | | | then return 0.04460697717271557;  // std dev = 2,649, 40,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.24822907878576225;  // std dev = 7,299, 222,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=109 */
%   else if ( haschild(A, I), haschild(B, I) )
%   | then return 0.41751358415831324;  // std dev = 0,000, 1.009,000 (wgt'ed) examples reached here.  /* #pos=1.009 */
%   | else if ( actedin(B, J), actedin(A, K) )
%   | | then if ( actedin(A, J) )
%   | | | then return 0.5401989569058201;  // std dev = 1,329, 188,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=187 */
%   | | | else return 0.22478729102860637;  // std dev = 16,735, 1.162,000 (wgt'ed) examples reached here.  /* #neg=574 #pos=588 */
%   | | else if ( haschild(B, L) )
%   | | | then return -0.003969530240813283;  // std dev = 20,453, 3.541,000 (wgt'ed) examples reached here.  /* #neg=3.045 #pos=496 */
%   | | | else return 0.10146618260279174;  // std dev = 60,602, 17.459,000 (wgt'ed) examples reached here.  /* #neg=12.057 #pos=5.402 */
WILL Produced-Tree #5
% FOR ismarriedto(A, B):
%   if ( actedin(B, C), haschild(D, A) )
%   then if ( actedin(A, E) )
%   | then if ( graduatedfrom(D, F), wrotemusicfor(G, C) )
%   | | then return -0.13996582577884603;  // std dev = 0,321, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( wasbornin(B, H), hascapital(I, H) )
%   | | | then return 0.6316061328982443;  // std dev = 0,350, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.24810616952235323;  // std dev = 3,551, 67,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=43 */
%   | else return -0.1592559118533692;  // std dev = 0,183, 574,000 (wgt'ed) examples reached here.  /* #neg=551 #pos=23 */
%   else if ( haschild(B, J), haschild(A, J) )
%   | then return 0.3205365299731051;  // std dev = 0,166, 1.016,000 (wgt'ed) examples reached here.  /* #pos=1.016 */
%   | else if ( haschild(A, K) )
%   | | then if ( wasbornin(B, L) )
%   | | | then return -0.06753516336383113;  // std dev = 9,250, 963,000 (wgt'ed) examples reached here.  /* #neg=859 #pos=104 */
%   | | | else return 0.015084864001948963;  // std dev = 19,658, 2.605,000 (wgt'ed) examples reached here.  /* #neg=2.108 #pos=497 */
%   | | else if ( actedin(B, M), actedin(A, N) )
%   | | | then return 0.22341397415395067;  // std dev = 16,775, 1.321,000 (wgt'ed) examples reached here.  /* #neg=538 #pos=783 */
%   | | | else return 0.09568707997961798;  // std dev = 60,280, 17.202,000 (wgt'ed) examples reached here.  /* #neg=11.759 #pos=5.443 */
WILL Produced-Tree #6
% FOR ismarriedto(A, B):
%   if ( haschild(A, C), haschild(B, C) )
%   then return 0.2554382981822509;  // std dev = 0,242, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( haschild(A, D) )
%   | then if ( actedin(B, E) )
%   | | then if ( actedin(A, F) )
%   | | | then return 0.07894903035464512;  // std dev = 4,592, 113,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=46 */
%   | | | else return -0.12427133699252403;  // std dev = 4,370, 597,000 (wgt'ed) examples reached here.  /* #neg=577 #pos=20 */
%   | | else if ( livesin(A, G), livesin(B, H) )
%   | | | then return 0.7371432655135284;  // std dev = 0,950, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.001225126518415578;  // std dev = 20,751, 3.166,000 (wgt'ed) examples reached here.  /* #neg=2.629 #pos=537 */
%   | else if ( haschild(B, I) )
%   | | then if ( haschild(J, A) )
%   | | | then return 0.14444738885792305;  // std dev = 9,242, 402,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=133 */
%   | | | else return -0.028775516178791934;  // std dev = 16,843, 2.555,000 (wgt'ed) examples reached here.  /* #neg=2.212 #pos=343 */
%   | | else if ( created(B, K), wasbornin(A, L) )
%   | | | then return 0.1809211285652185;  // std dev = 12,406, 641,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=291 */
%   | | | else return 0.09582708148169447;  // std dev = 58,306, 15.259,000 (wgt'ed) examples reached here.  /* #neg=9.739 #pos=5.520 */
WILL Produced-Tree #7
% FOR ismarriedto(A, B):
%   if ( haschild(B, C), haschild(A, C) )
%   then return 0.2099578068057473;  // std dev = 0,215, 1.023,000 (wgt'ed) examples reached here.  /* #pos=1.023 */
%   else if ( livesin(B, D), livesin(A, E) )
%   | then if ( livesin(A, D) )
%   | | then return 0.7252217643013366;  // std dev = 0,301, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | else if ( exports(D, F), haschild(G, B) )
%   | | | then return 0.7312850100875172;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1305666800247985;  // std dev = 3,578, 53,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | else if ( actedin(A, H), directed(B, I) )
%   | | then if ( actedin(A, I) )
%   | | | then return 0.6296519667362203;  // std dev = 1,330, 71,000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | | else return 0.20669541865183255;  // std dev = 8,011, 277,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=148 */
%   | | else if ( haschild(A, J) )
%   | | | then return -0.015665273737236425;  // std dev = 21,796, 3.857,000 (wgt'ed) examples reached here.  /* #neg=3.258 #pos=599 */
%   | | | else return 0.05949191230917789;  // std dev = 61,757, 18.407,000 (wgt'ed) examples reached here.  /* #neg=12.423 #pos=5.984 */
WILL Produced-Tree #8
% FOR ismarriedto(A, B):
%   if ( created(B, C), created(A, D) )
%   then if ( created(A, C) )
%   | then return 0.6781043014278734;  // std dev = 0,129, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else if ( directed(B, D) )
%   | | then return 0.5900107809907605;  // std dev = 0,205, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( influences(E, B), created(E, F) )
%   | | | then return 0.30274161663491905;  // std dev = 2,863, 37,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.09125224658091033;  // std dev = 8,556, 347,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=137 */
%   else if ( haschild(G, A), haschild(H, B) )
%   | then if ( haschild(B, I) )
%   | | then return 0.11838111381989218;  // std dev = 0,306, 719,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=450 */
%   | | else return 0.270737864664055;  // std dev = 0,484, 464,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=263 */
%   | else if ( haschild(J, A), haschild(K, J) )
%   | | then return -0.04457870515571966;  // std dev = 0,331, 1.860,000 (wgt'ed) examples reached here.  /* #neg=1.511 #pos=349 */
%   | | else if ( haschild(L, B), haschild(M, L) )
%   | | | then return -0.03711150555020949;  // std dev = 14,494, 1.766,000 (wgt'ed) examples reached here.  /* #neg=1.400 #pos=366 */
%   | | | else return 0.05224931415874407;  // std dev = 60,516, 18.469,000 (wgt'ed) examples reached here.  /* #neg=12.239 #pos=6.230 */
WILL Produced-Tree #9
% FOR ismarriedto(A, B):
%   if ( haschild(C, A), haschild(D, B) )
%   then if ( haschild(B, E) )
%   | then return 0.1017256977282842;  // std dev = 0,306, 722,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=453 */
%   | else if ( haschild(A, F) )
%   | | then if ( haschild(C, B) )
%   | | | then return 0.6810008248478092;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11559929305760756;  // std dev = 6,992, 201,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=86 */
%   | | else if ( haschild(G, C), haschild(H, D) )
%   | | | then return 0.4298011998158127;  // std dev = 4,059, 113,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=93 */
%   | | | else return 0.1677122897912306;  // std dev = 5,953, 150,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=83 */
%   else if ( isaffiliatedto(A, I), isaffiliatedto(B, I) )
%   | then return 0.5856663363724098;  // std dev = 0,273, 192,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=182 */
%   | else if ( haschild(J, A), haschild(K, J) )
%   | | then return -0.038609591105812274;  // std dev = 0,331, 1.865,000 (wgt'ed) examples reached here.  /* #neg=1.517 #pos=348 */
%   | | else if ( haschild(L, B), actedin(A, M) )
%   | | | then return -0.14082914644395333;  // std dev = 5,608, 613,000 (wgt'ed) examples reached here.  /* #neg=557 #pos=56 */
%   | | | else return 0.03953227889451478;  // std dev = 62,155, 19.905,000 (wgt'ed) examples reached here.  /* #neg=13.288 #pos=6.617 */
WILL Produced-Tree #10
% FOR ismarriedto(A, B):
%   if ( actedin(A, C), haschild(D, B) )
%   then if ( actedin(B, E) )
%   | then if ( actedin(A, E) )
%   | | then return 0.34125699009395943;  // std dev = 0,084, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( wrotemusicfor(F, C), wrotemusicfor(F, E) )
%   | | | then return 0.392075895184155;  // std dev = 0,798, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.08139188541409552;  // std dev = 2,997, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | else return -0.14400460220287914;  // std dev = 0,185, 583,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=23 */
%   else if ( haschild(A, G), haschild(B, G) )
%   | then return 0.16043873873152797;  // std dev = 0,552, 1.018,000 (wgt'ed) examples reached here.  /* #pos=1.018 */
%   | else if ( haschild(A, H) )
%   | | then if ( actedin(B, I) )
%   | | | then return -0.08916399580370797;  // std dev = 6,352, 699,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=61 */
%   | | | else return -0.006797947122969368;  // std dev = 20,583, 3.129,000 (wgt'ed) examples reached here.  /* #neg=2.584 #pos=545 */
%   | | else if ( actedin(B, J), actedin(A, K) )
%   | | | then return 0.11267535899399124;  // std dev = 16,702, 1.330,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=793 */
%   | | | else return 0.03402474711126365;  // std dev = 59,296, 16.933,000 (wgt'ed) examples reached here.  /* #neg=11.491 #pos=5.442 */


Results
   AUC ROC   = 0.719356
   AUC PR    = 0.626784
   CLL	      = -0.546084
   Precision = 0.960585 at threshold = 0.5
   Recall    = 0.190687
   F1        = 0.318206


Total learning time: 879.759 seconds
Total inference time: 99.81700000000001 seconds
AUC ROC: 0.719356


Dataset: 22_cora_yago2s, Fold: 3, Type: scratch, Time: 02:27:59
{'AUC ROC': 0.719356, 'AUC PR': 0.626784, 'F1': 0.318206, 'Learning time': 879.759, 'Inference time': 99.81700000000001, 'CLL': -0.546084, 'Recall': 0.190687, 'Precision': [0.960585, 0.5]}


