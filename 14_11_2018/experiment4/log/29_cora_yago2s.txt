Starting experiment #1 for 29_cora_yago2s

Start learning from source dataset

WILL Produced-Tree #1
% FOR samebib(A, B):
%   if ( title(A, C), title(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.8581489350997613;  // std dev = 0,000, 10.821,000 (wgt'ed) examples reached here.  /* #pos=10.821 */
%   | else if ( author(A, E), author(B, E) )
%   | | then return 0.8378674781458648;  // std dev = 0,141, 4.832,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=4.734 */
%   | | else return 0.8269549587641631;  // std dev = 0,174, 11.156,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=10.808 */
%   else if ( author(A, F), author(B, F) )
%   | then return 0.026445024484981983;  // std dev = 0,374, 8.592,000 (wgt'ed) examples reached here.  /* #neg=7.146 #pos=1.446 */
%   | else if ( venue(A, G), venue(B, G) )
%   | | then return 0.4934765704271427;  // std dev = 0,481, 1.404,000 (wgt'ed) examples reached here.  /* #neg=512 #pos=892 */
%   | | else return -0.0010147328493697336;  // std dev = 0,348, 16.118,000 (wgt'ed) examples reached here.  /* #neg=13.848 #pos=2.270 */
WILL Produced-Tree #2
% FOR samebib(A, B):
%   if ( title(A, C), title(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.7194734122110724;  // std dev = 0,000, 10.821,000 (wgt'ed) examples reached here.  /* #pos=10.821 */
%   | else if ( author(A, E), author(B, E) )
%   | | then return 0.7032671113531456;  // std dev = 0,141, 4.832,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=4.734 */
%   | | else return 0.6945320465224505;  // std dev = 0,174, 11.156,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=10.808 */
%   else if ( author(A, F), author(B, F) )
%   | then if ( venue(A, G), venue(B, G) )
%   | | then return 0.5548992101196292;  // std dev = 0,458, 720,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=504 */
%   | | else return -0.025436155734046954;  // std dev = 0,325, 7.872,000 (wgt'ed) examples reached here.  /* #neg=6.930 #pos=942 */
%   | else if ( venue(A, H), venue(B, H) )
%   | | then return 0.4222584536776492;  // std dev = 0,481, 1.404,000 (wgt'ed) examples reached here.  /* #neg=512 #pos=892 */
%   | | else return -8.912549746638301E-4;  // std dev = 0,348, 16.118,000 (wgt'ed) examples reached here.  /* #neg=13.848 #pos=2.270 */
WILL Produced-Tree #3
% FOR samebib(A, B):
%   if ( title(A, C), title(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.5553664367462224;  // std dev = 0,000, 10.821,000 (wgt'ed) examples reached here.  /* #pos=10.821 */
%   | else if ( author(A, E), author(B, E) )
%   | | then return 0.5440759071941712;  // std dev = 0,141, 4.832,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=4.734 */
%   | | else return 0.5379876508089667;  // std dev = 0,174, 11.156,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=10.808 */
%   else if ( venue(A, F), venue(B, F) )
%   | then if ( author(A, G), author(B, G) )
%   | | then return 0.4718269025952478;  // std dev = 0,458, 720,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=504 */
%   | | else return 0.34303288396240705;  // std dev = 0,481, 1.404,000 (wgt'ed) examples reached here.  /* #neg=512 #pos=892 */
%   | else if ( author(A, H), author(B, H) )
%   | | then return -0.02230928406121381;  // std dev = 0,325, 7.872,000 (wgt'ed) examples reached here.  /* #neg=6.930 #pos=942 */
%   | | else return -7.828765505884528E-4;  // std dev = 0,348, 16.118,000 (wgt'ed) examples reached here.  /* #neg=13.848 #pos=2.270 */
WILL Produced-Tree #4
% FOR samebib(A, B):
%   if ( title(A, C), title(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.41751358415825085;  // std dev = 0,000, 10.821,000 (wgt'ed) examples reached here.  /* #pos=10.821 */
%   | else return 0.4056880576560206;  // std dev = 0,165, 15.988,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=15.542 */
%   else if ( author(A, E), author(B, E) )
%   | then return 0.013747113401993982;  // std dev = 0,355, 8.592,000 (wgt'ed) examples reached here.  /* #neg=7.146 #pos=1.446 */
%   | else return 0.020795689823171006;  // std dev = 0,368, 17.522,000 (wgt'ed) examples reached here.  /* #neg=14.360 #pos=3.162 */
WILL Produced-Tree #5
% FOR samebib(A, B):
%   if ( title(A, C), title(B, C) )
%   then if ( author(A, D), author(B, D) )
%   | then return 0.31705111816421017;  // std dev = 0,101, 9.451,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=9.353 */
%   | else if ( venue(A, E), venue(B, E) )
%   | | then return 0.32071184716006707;  // std dev = 1,13e-05, 6.202,000 (wgt'ed) examples reached here.  /* #pos=6.202 */
%   | | else return 0.30838685852077685;  // std dev = 0,174, 11.156,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=10.808 */
%   else if ( author(A, F), author(B, F) )
%   | then if ( venue(A, G), venue(B, G) )
%   | | then return 0.37548117662653363;  // std dev = 0,458, 720,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=504 */
%   | | else return -0.02126945725864909;  // std dev = 0,325, 7.872,000 (wgt'ed) examples reached here.  /* #neg=6.930 #pos=942 */
%   | else if ( venue(A, H), venue(B, H) )
%   | | then return 0.26257744138619465;  // std dev = 0,481, 1.404,000 (wgt'ed) examples reached here.  /* #neg=512 #pos=892 */
%   | | else return -0.0032331907215888385;  // std dev = 0,348, 16.118,000 (wgt'ed) examples reached here.  /* #neg=13.848 #pos=2.270 */
WILL Produced-Tree #6
% FOR samebib(A, B):
%   if ( title(A, C), title(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.25546949564216886;  // std dev = 0,036, 10.821,000 (wgt'ed) examples reached here.  /* #pos=10.821 */
%   | else if ( author(A, E), author(B, E) )
%   | | then return 0.24709983785409148;  // std dev = 0,141, 4.832,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=4.734 */
%   | | else return 0.24297958647008408;  // std dev = 0,174, 11.156,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=10.808 */
%   else if ( author(A, F), author(B, F) )
%   | then if ( venue(A, G), venue(B, G) )
%   | | then return 0.2884594765473315;  // std dev = 0,458, 720,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=504 */
%   | | else return -0.018713941641363915;  // std dev = 0,325, 7.872,000 (wgt'ed) examples reached here.  /* #neg=6.930 #pos=942 */
%   | else return 0.013372704497188083;  // std dev = 0,365, 17.522,000 (wgt'ed) examples reached here.  /* #neg=14.360 #pos=3.162 */
WILL Produced-Tree #7
% FOR samebib(A, B):
%   if ( title(A, C), title(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.20996769375792193;  // std dev = 0,031, 10.821,000 (wgt'ed) examples reached here.  /* #pos=10.821 */
%   | else if ( author(A, E), author(B, E) )
%   | | then return 0.2015458115276981;  // std dev = 0,141, 4.832,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=4.734 */
%   | | else return 0.19735385453449175;  // std dev = 0,174, 11.156,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=10.808 */
%   else if ( author(A, F), author(B, F) )
%   | then return 0.0030924368604895633;  // std dev = 0,344, 8.592,000 (wgt'ed) examples reached here.  /* #neg=7.146 #pos=1.446 */
%   | else if ( venue(A, G), venue(B, G) )
%   | | then return 0.19614655397307856;  // std dev = 0,481, 1.404,000 (wgt'ed) examples reached here.  /* #neg=512 #pos=892 */
%   | | else return -0.004488047586421856;  // std dev = 0,348, 16.118,000 (wgt'ed) examples reached here.  /* #neg=13.848 #pos=2.270 */
WILL Produced-Tree #8
% FOR samebib(A, B):
%   if ( title(A, C), title(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.1772505070578405;  // std dev = 0,027, 10.821,000 (wgt'ed) examples reached here.  /* #pos=10.821 */
%   | else if ( author(A, E), author(B, E) )
%   | | then return 0.16870715731006686;  // std dev = 0,141, 4.832,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=4.734 */
%   | | else return 0.16442834922325167;  // std dev = 0,174, 11.156,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=10.808 */
%   else if ( author(A, F), author(B, F) )
%   | then return 0.0026940917721151704;  // std dev = 0,344, 8.592,000 (wgt'ed) examples reached here.  /* #neg=7.146 #pos=1.446 */
%   | else return 0.008195188142283627;  // std dev = 0,363, 17.522,000 (wgt'ed) examples reached here.  /* #neg=14.360 #pos=3.162 */
WILL Produced-Tree #9
% FOR samebib(A, B):
%   if ( title(A, C), title(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.15286068993696988;  // std dev = 0,024, 10.821,000 (wgt'ed) examples reached here.  /* #pos=10.821 */
%   | else if ( author(A, E), author(B, E) )
%   | | then return 0.14419343415418023;  // std dev = 0,141, 4.832,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=4.734 */
%   | | else return 0.13984079089821919;  // std dev = 0,174, 11.156,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=10.808 */
%   else if ( author(A, F), author(B, F) )
%   | then if ( venue(A, G), venue(B, G) )
%   | | then return 0.21583334626010828;  // std dev = 0,458, 720,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=504 */
%   | | else return -0.017179800107486112;  // std dev = 0,325, 7.872,000 (wgt'ed) examples reached here.  /* #neg=6.930 #pos=942 */
%   | else return 0.007095037554611031;  // std dev = 0,363, 17.522,000 (wgt'ed) examples reached here.  /* #neg=14.360 #pos=3.162 */
WILL Produced-Tree #10
% FOR samebib(A, B):
%   if ( title(A, C), title(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.13409823935667547;  // std dev = 0,022, 10.821,000 (wgt'ed) examples reached here.  /* #pos=10.821 */
%   | else if ( author(A, E), author(B, E) )
%   | | then return 0.1253235712782875;  // std dev = 0,141, 4.832,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=4.734 */
%   | | else return 0.12091535477198033;  // std dev = 0,174, 11.156,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=10.808 */
%   else if ( venue(A, F), venue(B, F) )
%   | then if ( author(A, G), author(B, G) )
%   | | then return 0.1619539902249176;  // std dev = 0,458, 720,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=504 */
%   | | else return 0.1435892524888004;  // std dev = 0,481, 1.404,000 (wgt'ed) examples reached here.  /* #neg=512 #pos=892 */
%   | else if ( author(A, H), author(B, H) )
%   | | then return -0.01516318700343698;  // std dev = 0,325, 7.872,000 (wgt'ed) examples reached here.  /* #neg=6.930 #pos=942 */
%   | | else return -0.005834881311933124;  // std dev = 0,348, 16.118,000 (wgt'ed) examples reached here.  /* #neg=13.848 #pos=2.270 */


Predicates from source: ['samebib(class,class).', 'title(class,title).', 'venue(class,venue).', 'author(class,author).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 22.973001956939697
   Generating paths time   = 2.2966885566711426
   Generating mappings time   = 1.457488775253296
   Possible mappings   = 43904
   Finding best mapping   = 13.541197061538696
   Total time   = 40.268383264541626


Best mapping found: ['venue(A,B) -> graduatedfrom(A,B)', 'author(A,B) -> worksat(A,B)', 'samebib(A,B) -> hasacademicadvisor(B,A)', 'title(A,B) -> wasbornin(A,B)'] 

Transferred target predicate: hasacademicadvisor 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;hasacademicadvisor(B, A) :- wasbornin(A, C), wasbornin(B, C).;true;true
0;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
0;false,false;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
0;true,false;worksat(A, E), worksat(B, E).;false;false
0;false;worksat(A, F), worksat(B, F).;false;true
1;;hasacademicadvisor(B, A) :- wasbornin(A, C), wasbornin(B, C).;true;true
1;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
1;false,false;graduatedfrom(A, H), graduatedfrom(B, H).;false;false
1;true,false;worksat(A, E), worksat(B, E).;false;false
1;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
1;false;worksat(A, F), worksat(B, F).;true;true
2;;hasacademicadvisor(B, A) :- wasbornin(A, C), wasbornin(B, C).;true;true
2;false,true;worksat(A, G), worksat(B, G).;false;false
2;false,false;worksat(A, H), worksat(B, H).;false;false
2;true,false;worksat(A, E), worksat(B, E).;false;false
2;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
2;false;graduatedfrom(A, F), graduatedfrom(B, F).;true;true
3;;hasacademicadvisor(B, A) :- wasbornin(A, C), wasbornin(B, C).;true;true
3;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;false
3;false;worksat(A, E), worksat(B, E).;false;false
4;;hasacademicadvisor(B, A) :- wasbornin(A, C), wasbornin(B, C).;true;true
4;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
4;false,false;graduatedfrom(A, H), graduatedfrom(B, H).;false;false
4;true,false;graduatedfrom(A, E), graduatedfrom(B, E).;false;false
4;true;worksat(A, D), worksat(B, D).;false;true
4;false;worksat(A, F), worksat(B, F).;true;true
5;;hasacademicadvisor(B, A) :- wasbornin(A, C), wasbornin(B, C).;true;true
5;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
5;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
5;true,false;worksat(A, E), worksat(B, E).;false;false
5;false;worksat(A, F), worksat(B, F).;true;false
6;;hasacademicadvisor(B, A) :- wasbornin(A, C), wasbornin(B, C).;true;true
6;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
6;false,false;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
6;true,false;worksat(A, E), worksat(B, E).;false;false
6;false;worksat(A, F), worksat(B, F).;false;true
7;;hasacademicadvisor(B, A) :- wasbornin(A, C), wasbornin(B, C).;true;true
7;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
7;true,false;worksat(A, E), worksat(B, E).;false;false
7;false;worksat(A, F), worksat(B, F).;false;false
8;;hasacademicadvisor(B, A) :- wasbornin(A, C), wasbornin(B, C).;true;true
8;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
8;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
8;true,false;worksat(A, E), worksat(B, E).;false;false
8;false;worksat(A, F), worksat(B, F).;true;false
9;;hasacademicadvisor(B, A) :- wasbornin(A, C), wasbornin(B, C).;true;true
9;false,true;worksat(A, G), worksat(B, G).;false;false
9;false,false;worksat(A, H), worksat(B, H).;false;false
9;true,false;worksat(A, E), worksat(B, E).;false;false
9;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
9;false;graduatedfrom(A, F), graduatedfrom(B, F).;true;true


WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( graduatedfrom(B, D), graduatedfrom(A, D) )
%   | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( worksat(B, E), worksat(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( worksat(B, F), worksat(A, F) )
%   | then return 0.8295775065280829;  // std dev = 0,986, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else if ( graduatedfrom(B, G), graduatedfrom(A, G) )
%   | | then return 0.7427643197148975;  // std dev = 2,822, 78,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | else return 0.16672860344846197;  // std dev = 24,328, 2.774,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=856 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( graduatedfrom(B, D), graduatedfrom(A, D) )
%   | then return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( worksat(B, E), worksat(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.308741135785635;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( worksat(B, F), worksat(A, F) )
%   | then if ( graduatedfrom(B, G), graduatedfrom(A, G) )
%   | | then return 0.7252037016905739;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6918703683572408;  // std dev = 0,983, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else if ( graduatedfrom(B, H), graduatedfrom(A, H) )
%   | | then return 0.6267773105285703;  // std dev = 2,822, 78,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | else return 0.14519696294787687;  // std dev = 24,328, 2.774,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=856 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( graduatedfrom(B, D), graduatedfrom(A, D) )
%   | then return 0.46125983910675533;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( worksat(B, E), worksat(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2564123687585864;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( graduatedfrom(B, F), graduatedfrom(A, F) )
%   | then if ( worksat(B, G), worksat(A, G) )
%   | | then return 0.5609993348825238;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4905985021991651;  // std dev = 2,822, 78,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | else if ( worksat(B, H), worksat(A, H) )
%   | | then return 0.5358578891035177;  // std dev = 0,983, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return 0.12436874803263655;  // std dev = 24,328, 2.774,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=856 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( graduatedfrom(B, D), graduatedfrom(A, D) )
%   | then return 0.3488463256948422;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.20613740734453978;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( worksat(B, E), worksat(A, E) )
%   | then return 0.4054087372644957;  // std dev = 0,984, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return 0.11217878365769451;  // std dev = 24,599, 2.852,000 (wgt'ed) examples reached here.  /* #neg=1.927 #pos=925 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( worksat(B, D), worksat(A, D) )
%   | then return 0.42879372175020847;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( graduatedfrom(B, E), graduatedfrom(A, E) )
%   | | then return 0.22879372175020846;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.16162857548414666;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( worksat(B, F), worksat(A, F) )
%   | then if ( graduatedfrom(B, G), graduatedfrom(A, G) )
%   | | then return 0.32713114906723884;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30679676703604314;  // std dev = 0,983, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else if ( graduatedfrom(B, H), graduatedfrom(A, H) )
%   | | then return 0.34164194010548105;  // std dev = 2,822, 78,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | else return 0.08614373163703858;  // std dev = 24,328, 2.774,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=856 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( graduatedfrom(B, D), graduatedfrom(A, D) )
%   | then return 0.19963588318315428;  // std dev = 0,905, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( worksat(B, E), worksat(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792081965;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( worksat(B, F), worksat(A, F) )
%   | then if ( graduatedfrom(B, G), graduatedfrom(A, G) )
%   | | then return 0.2595477548723961;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24164459419069745;  // std dev = 0,983, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0.07603058468222797;  // std dev = 24,546, 2.852,000 (wgt'ed) examples reached here.  /* #neg=1.927 #pos=925 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( graduatedfrom(B, D), graduatedfrom(A, D) )
%   | then return 0.15469765122722548;  // std dev = 0,906, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( worksat(B, E), worksat(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730683;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( worksat(B, F), worksat(A, F) )
%   | then return 0.1985461975006875;  // std dev = 0,984, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else if ( graduatedfrom(B, G), graduatedfrom(A, G) )
%   | | then return 0.24125220278111983;  // std dev = 2,822, 78,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | else return 0.05683945799887616;  // std dev = 24,328, 2.774,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=856 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( graduatedfrom(B, D), graduatedfrom(A, D) )
%   | then return 0.12196592892599355;  // std dev = 0,906, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( worksat(B, E), worksat(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.0718608885005586;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( worksat(B, F), worksat(A, F) )
%   | then return 0.1655938730163366;  // std dev = 0,984, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return 0.04986649857752704;  // std dev = 24,522, 2.852,000 (wgt'ed) examples reached here.  /* #neg=1.927 #pos=925 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( graduatedfrom(B, D), graduatedfrom(A, D) )
%   | then return 0.0976069681327909;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( worksat(B, E), worksat(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05418307375954945;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( worksat(B, F), worksat(A, F) )
%   | then if ( graduatedfrom(B, G), graduatedfrom(A, G) )
%   | | then return 0.1581566099805385;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13812939134858693;  // std dev = 0,983, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0.04007854373029113;  // std dev = 24,522, 2.852,000 (wgt'ed) examples reached here.  /* #neg=1.927 #pos=925 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( graduatedfrom(B, D), graduatedfrom(A, D) )
%   | then return 0.07908798422445458;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( worksat(B, E), worksat(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04076025323305624;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( graduatedfrom(B, F), graduatedfrom(A, F) )
%   | then if ( worksat(B, G), worksat(A, G) )
%   | | then return 0.13821863425491743;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1693311378772473;  // std dev = 2,822, 78,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | else if ( worksat(B, H), worksat(A, H) )
%   | | then return 0.11938662975916679;  // std dev = 0,983, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return 0.028197775027401582;  // std dev = 24,328, 2.774,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=856 */


Results
   AUC ROC   = 0.555375
   AUC PR    = 0.453503
   CLL	      = -0.609148
   Precision = 0.882845 at threshold = 0.5
   Recall    = 0.109326
   F1        = 0.19456


Total learning time: 171.90800000000002 seconds
Total inference time: 58.654 seconds
AUC ROC: 0.555375


Structure after Parameter Learning
[['hasacademicadvisor(A, B)', {'': 'wasbornin(B, C), wasbornin(A, C)', 'true': 'graduatedfrom(B, D), graduatedfrom(A, D)', 'false,false': 'graduatedfrom(B, G), graduatedfrom(A, G)', 'true,false': 'worksat(B, E), worksat(A, E)', 'false': 'worksat(B, F), worksat(A, F)'}, {'false,true': [0.986, 1, 34], 'true,false,false': [0.707, 1, 1], 'true,true': [0.913, 1, 5], 'false,false,true': [2.822, 9, 69], 'false,false,false': [24.328, 1918, 856], 'true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(B, C), wasbornin(A, C)', 'false,true': 'graduatedfrom(B, G), graduatedfrom(A, G)', 'false,false': 'graduatedfrom(B, H), graduatedfrom(A, H)', 'true,false': 'worksat(B, E), worksat(A, E)', 'true': 'graduatedfrom(B, D), graduatedfrom(A, D)', 'false': 'worksat(B, F), worksat(A, F)'}, {'true,false,false': [0.707, 1, 1], 'true,true': [0.913, 1, 5], 'false,false,true': [2.822, 9, 69], 'false,false,false': [24.328, 1918, 856], 'false,true,false': [0.983, 1, 29], 'true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(B, C), wasbornin(A, C)', 'false,true': 'worksat(B, G), worksat(A, G)', 'false,false': 'worksat(B, H), worksat(A, H)', 'true,false': 'worksat(B, E), worksat(A, E)', 'true': 'graduatedfrom(B, D), graduatedfrom(A, D)', 'false': 'graduatedfrom(B, F), graduatedfrom(A, F)'}, {'true,false,false': [0.707, 1, 1], 'true,true': [0.913, 1, 5], 'false,false,true': [0.983, 1, 29], 'false,false,false': [24.328, 1918, 856], 'false,true,false': [2.822, 9, 69], 'true,false,true': [0.0, 0, 0], 'false,true,true': [2.11e-08, 0, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(B, C), wasbornin(A, C)', 'true': 'graduatedfrom(B, D), graduatedfrom(A, D)', 'false': 'worksat(B, E), worksat(A, E)'}, {'false,true': [0.984, 1, 34], 'false,false': [24.599, 1927, 925], 'true,true': [0.913, 1, 5], 'true,false': [0.707, 1, 1]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(B, C), wasbornin(A, C)', 'false,true': 'graduatedfrom(B, G), graduatedfrom(A, G)', 'false,false': 'graduatedfrom(B, H), graduatedfrom(A, H)', 'true,false': 'graduatedfrom(B, E), graduatedfrom(A, E)', 'true': 'worksat(B, D), worksat(A, D)', 'false': 'worksat(B, F), worksat(A, F)'}, {'true,false,false': [0.707, 1, 1], 'true,true': [0.0, 0, 1], 'false,false,true': [2.822, 9, 69], 'false,false,false': [24.328, 1918, 856], 'false,true,false': [0.983, 1, 29], 'true,false,true': [0.894, 1, 4], 'false,true,true': [1.05e-08, 0, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(B, C), wasbornin(A, C)', 'true': 'graduatedfrom(B, D), graduatedfrom(A, D)', 'false,true': 'graduatedfrom(B, G), graduatedfrom(A, G)', 'true,false': 'worksat(B, E), worksat(A, E)', 'false': 'worksat(B, F), worksat(A, F)'}, {'true,false,false': [0.707, 1, 1], 'false,false': [24.546, 1927, 925], 'true,true': [0.905, 1, 5], 'false,true,false': [0.983, 1, 29], 'true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(B, C), wasbornin(A, C)', 'true': 'graduatedfrom(B, D), graduatedfrom(A, D)', 'false,false': 'graduatedfrom(B, G), graduatedfrom(A, G)', 'true,false': 'worksat(B, E), worksat(A, E)', 'false': 'worksat(B, F), worksat(A, F)'}, {'false,true': [0.984, 1, 34], 'true,false,false': [0.707, 1, 1], 'true,true': [0.906, 1, 5], 'false,false,true': [2.822, 9, 69], 'false,false,false': [24.328, 1918, 856], 'true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(B, C), wasbornin(A, C)', 'true': 'graduatedfrom(B, D), graduatedfrom(A, D)', 'true,false': 'worksat(B, E), worksat(A, E)', 'false': 'worksat(B, F), worksat(A, F)'}, {'false,true': [0.984, 1, 34], 'true,false,false': [0.707, 1, 1], 'true,false,true': [0.0, 0, 0], 'false,false': [24.522, 1927, 925], 'true,true': [0.906, 1, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(B, C), wasbornin(A, C)', 'true': 'graduatedfrom(B, D), graduatedfrom(A, D)', 'false,true': 'graduatedfrom(B, G), graduatedfrom(A, G)', 'true,false': 'worksat(B, E), worksat(A, E)', 'false': 'worksat(B, F), worksat(A, F)'}, {'true,false,false': [0.707, 1, 1], 'false,false': [24.522, 1927, 925], 'true,true': [0.907, 1, 5], 'false,true,false': [0.983, 1, 29], 'true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(B, C), wasbornin(A, C)', 'false,true': 'worksat(B, G), worksat(A, G)', 'false,false': 'worksat(B, H), worksat(A, H)', 'true,false': 'worksat(B, E), worksat(A, E)', 'true': 'graduatedfrom(B, D), graduatedfrom(A, D)', 'false': 'graduatedfrom(B, F), graduatedfrom(A, F)'}, {'true,false,false': [0.707, 1, 1], 'true,true': [0.907, 1, 5], 'false,false,true': [0.983, 1, 29], 'false,false,false': [24.328, 1918, 856], 'false,true,false': [2.822, 9, 69], 'true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 5]}]]
[{'': [0.1874999999999999, 0.2218360220900989], 'true': [0.1388888888888887, 0.25], 'false,false': [0.10207100591715865, 0.2133582566305868], 'false': [0.027755102040817953, 0.21914138647320186], 'true,false': [nan, 0.25]}, {'': [0.18099574730857598, 0.2176658564181853], 'false,true': [0.0, 0.03222222222222193], 'false,false': [0.10207100591715942, 0.21335825663062338], 'false': [0.027755102040815823, 0.21648398786522463], 'true': [0.13888888888888884, 0.25000000000000006], 'true,false': [nan, 0.25000000000000006]}, {'': [0.1745346328119249, 0.21359036267005646], 'false,true': [8.881784197001253e-17, 0.10207100591716042], 'false,false': [0.03222222222222223, 0.2133582566306149], 'false': [0.09620273485734766, 0.21321249010181054], 'true': [0.13888888888888887, 0.24999999999999997], 'true,false': [nan, 0.24999999999999997]}, {'': [0.17048526079980042, 0.21097053738495716], 'true': [0.13888888888888898, 0.25], 'false': [0.027663305748043144, 0.2121776917341372]}, {'': [0.16856040624200225, 0.21037755629026977], 'false,true': [2.2204460492503132e-17, 0.032222222222222256], 'false,false': [0.10207100591716003, 0.2133582566306133], 'false': [0.027669678691609637, 0.21205114795639002], 'true': [0.0, 0.1866349299740697], 'true,false': [0.16, 0.24999999999999997]}, {'': [0.16604279346951364, 0.20936766169626944], 'true': [0.13664780991580128, 0.24999999999999997], 'false,true': [0.0, 0.03222222222222224], 'false': [0.02765829535321841, 0.21125474763581434], 'true,false': [nan, 0.24999999999999997]}, {'': [0.16575335690573412, 0.20921754311102767], 'true': [0.13677804001896307, 0.25], 'false,false': [0.10207100591715938, 0.21335825663061597], 'false': [0.02765311782368028, 0.2112192930294236], 'true,false': [nan, 0.25]}, {'': [0.16564229122137653, 0.20879066416160538], 'true': [0.13689542619282674, 0.24999999999999997], 'false': [0.027661060365889906, 0.21085113752755982], 'true,false': [nan, 0.24999999999999997]}, {'': [0.16560020519711502, 0.20874736175281036], 'true': [0.13699553161218542, 0.24999999999999997], 'false,true': [-5.551115123125783e-18, 0.03222222222222223], 'false': [0.027668160617349547, 0.21084612777007236], 'true,false': [nan, 0.24999999999999997]}, {'': [0.16558478351849787, 0.20872077361626576], 'false,true': [0.0, 0.10207100591715974], 'false,false': [0.032222222222222194, 0.21335825663059133], 'false': [0.09597694985941876, 0.2115082966405626], 'true': [0.13707912428392657, 0.25], 'true,false': [nan, 0.25]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['1;;hasacademicadvisor(A, B) :- wasbornin(B, C), wasbornin(A, C).;true;true', '1;false,true;graduatedfrom(B, G), graduatedfrom(A, G).;true;true', '1;false;worksat(B, F), worksat(A, F).;true;true', '2;;hasacademicadvisor(A, B) :- wasbornin(B, C), wasbornin(A, C).;true;true', '2;false,true;worksat(B, G), worksat(A, G).;true;true', '2;false;graduatedfrom(B, F), graduatedfrom(A, F).;true;true', '4;;hasacademicadvisor(A, B) :- wasbornin(B, C), wasbornin(A, C).;true;true', '4;true;worksat(B, D), worksat(A, D).;true;true', '4;false,true;graduatedfrom(B, G), graduatedfrom(A, G).;true;true', '4;false;worksat(B, F), worksat(A, F).;true;true', '5;;hasacademicadvisor(A, B) :- wasbornin(B, C), wasbornin(A, C).;true;true', '5;false,true;graduatedfrom(B, G), graduatedfrom(A, G).;true;true', '5;false;worksat(B, F), worksat(A, F).;true;true', '8;;hasacademicadvisor(A, B) :- wasbornin(B, C), wasbornin(A, C).;true;true', '8;false,true;graduatedfrom(B, G), graduatedfrom(A, G).;true;true', '8;false;worksat(B, F), worksat(A, F).;true;true', '9;;hasacademicadvisor(A, B) :- wasbornin(B, C), wasbornin(A, C).;true;true', '9;false,true;worksat(B, G), worksat(A, G).;true;true', '9;false;graduatedfrom(B, F), graduatedfrom(A, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( worksat(B, C), graduatedfrom(A, C) )
%   then if ( graduatedfrom(B, D), worksat(A, E) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | else return 0.729943806894384;  // std dev = 0,334, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   else if ( diedin(B, F), diedin(A, G) )
%   | then if ( wasbornin(A, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( hascapital(H, F), hascapital(I, G) )
%   | | | then return 0.48718119316402797;  // std dev = 3,804, 62,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   | | | else return 0.28239135934193554;  // std dev = 5,678, 132,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=56 */
%   | else if ( influences(B, J), influences(A, K) )
%   | | then if ( worksat(B, L), influences(J, M) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7427643197148969;  // std dev = 1,629, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | else if ( diedin(A, N), livesin(P, N) )
%   | | | then return 0.05113139123986377;  // std dev = 7,883, 399,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=77 */
%   | | | else return 0.16591233620856466;  // std dev = 21,472, 2.164,000 (wgt'ed) examples reached here.  /* #neg=1.498 #pos=666 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( iscitizenof(B, D) )
%   | then return 0.7663755827389274;  // std dev = 0,128, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.17508924023300118;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( worksat(B, E), worksat(A, E) )
%   | then if ( graduatedfrom(B, F), graduatedfrom(A, F) )
%   | | then return 0.7240111149514005;  // std dev = 0,020, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( influences(G, B), graduatedfrom(B, H) )
%   | | | then return 0.4252252209842651;  // std dev = 0,721, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7861826132812374;  // std dev = 0,284, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( iscitizenof(B, I), iscitizenof(A, I) )
%   | | then if ( graduatedfrom(B, J), owns(J, K) )
%   | | | then return 0.37470728368866807;  // std dev = 4,286, 79,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=44 */
%   | | | else return 0.6347249313592154;  // std dev = 4,260, 123,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=100 */
%   | | else if ( haswonprize(B, L), haswonprize(A, L) )
%   | | | then return 0.62844504415991;  // std dev = 2,492, 41,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=33 */
%   | | | else return 0.1207867698846641;  // std dev = 22,835, 2.609,000 (wgt'ed) examples reached here.  /* #neg=1.861 #pos=748 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( worksat(B, D) )
%   | then return 0.18180361451240612;  // std dev = 0,724, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.6909187254571383;  // std dev = 0,191, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( graduatedfrom(B, E), graduatedfrom(A, E) )
%   | then if ( worksat(B, F), worksat(A, F) )
%   | | then return 0.5599052643301097;  // std dev = 0,025, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( wasbornin(B, G), livesin(H, G) )
%   | | | then return 0.7527927645335478;  // std dev = 0,427, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.5910669841707091;  // std dev = 2,677, 53,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=44 */
%   | else if ( iscitizenof(A, I), iscitizenof(B, I) )
%   | | then if ( wasbornin(A, J), hascapital(I, K) )
%   | | | then return 0.29084288073830794;  // std dev = 4,066, 72,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   | | | else return 0.5227887010623964;  // std dev = 4,282, 125,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=100 */
%   | | else if ( iscitizenof(A, L), iscitizenof(B, M) )
%   | | | then return -0.004553991119185396;  // std dev = 7,815, 428,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=77 */
%   | | | else return 0.12111408282538451;  // std dev = 21,143, 2.179,000 (wgt'ed) examples reached here.  /* #neg=1.511 #pos=668 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( wasbornin(A, D), livesin(A, C) )
%   | then if ( dealswith(C, E), graduatedfrom(B, F) )
%   | | then return 0.5243085509912199;  // std dev = 0,228, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswonprize(B, G), haswonprize(A, H) )
%   | | | then return 0.3716490015645176;  // std dev = 0,766, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.21186853421095264;  // std dev = 0,929, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( dealswith(I, C), diedin(J, I) )
%   | | then return 0.2764679702791269;  // std dev = 0,459, 92,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=58 */
%   | | else return 0.473482783822156;  // std dev = 0,313, 109,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=96 */
%   else if ( iscitizenof(A, K), iscitizenof(B, L) )
%   | then return 0.009884455239204023;  // std dev = 0,386, 437,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=86 */
%   | else if ( worksat(B, M), graduatedfrom(A, M) )
%   | | then return 0.5777029205855512;  // std dev = 0,221, 62,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=59 */
%   | | else if ( diedin(B, N), diedin(A, P) )
%   | | | then return 0.30005600593453313;  // std dev = 5,641, 136,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=74 */
%   | | | else return 0.08575672110399953;  // std dev = 20,184, 2.041,000 (wgt'ed) examples reached here.  /* #neg=1.456 #pos=585 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( worksat(B, D), worksat(A, D) )
%   | then return 0.4297684079713927;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( worksat(B, E) )
%   | | then return -0.029372160408189397;  // std dev = 0,475, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.48554685789106056;  // std dev = 0,292, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( worksat(B, F), worksat(A, F) )
%   | then if ( graduatedfrom(B, G), graduatedfrom(A, G) )
%   | | then return 0.3298709485138648;  // std dev = 0,116, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4527589664329975;  // std dev = 0,188, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else if ( graduatedfrom(A, H), graduatedfrom(B, H) )
%   | | then if ( worksat(B, I), haswonprize(A, J) )
%   | | | then return 0.15004393664343066;  // std dev = 1,380, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.4861944369567068;  // std dev = 2,309, 70,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=64 */
%   | | else if ( influences(B, K), wasbornin(A, L) )
%   | | | then return 0.227075282799094;  // std dev = 6,249, 173,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=82 */
%   | | | else return 0.06814677912546295;  // std dev = 22,242, 2.601,000 (wgt'ed) examples reached here.  /* #neg=1.827 #pos=774 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( worksat(B, D) )
%   | then return 0.06444667468061052;  // std dev = 0,566, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.37661456008582367;  // std dev = 0,267, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( worksat(B, E), worksat(A, E) )
%   | then if ( graduatedfrom(B, F), graduatedfrom(A, F) )
%   | | then return 0.2621565576912544;  // std dev = 0,103, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( livesin(A, G), graduatedfrom(B, H) )
%   | | | then return 0.13742926767028535;  // std dev = 0,592, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3832731530950098;  // std dev = 0,664, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( influences(I, B), wasbornin(B, J) )
%   | | then if ( iscitizenof(A, K), hascurrency(K, L) )
%   | | | then return 0.02518329912440519;  // std dev = 2,587, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.3528355294380275;  // std dev = 4,198, 80,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=50 */
%   | | else if ( livesin(A, M), livesin(B, M) )
%   | | | then return 0.30330883723613494;  // std dev = 3,605, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | | | else return 0.05813313284486626;  // std dev = 22,386, 2.664,000 (wgt'ed) examples reached here.  /* #neg=1.844 #pos=820 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( influences(C, B), haswonprize(C, D) )
%   then if ( wasbornin(B, E), graduatedfrom(C, F) )
%   | then if ( graduatedfrom(A, G), influences(B, H) )
%   | | then return 0.0772564787983417;  // std dev = 0,411, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.5226406049653524;  // std dev = 0,364, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( wasbornin(A, I), influences(B, J) )
%   | | then if ( iscitizenof(C, K), diedin(A, L) )
%   | | | then return -0.26163463351644894;  // std dev = 0,092, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5207134948475958;  // std dev = 1,259, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( isknownfor(C, M), wasbornin(B, N) )
%   | | | then return 0.41506062325046883;  // std dev = 1,227, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.07381876292282155;  // std dev = 3,582, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   else if ( influences(B, P), worksat(P, Q) )
%   | then if ( worksat(A, R), iscitizenof(A, S) )
%   | | then return 0.3093838581220699;  // std dev = 0,466, 43,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | else return 0.1021105417538168;  // std dev = 0,445, 122,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=49 */
%   | else return 0.049039445291985485;  // std dev = 0,430, 2.608,000 (wgt'ed) examples reached here.  /* #neg=1.777 #pos=831 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( diedin(A, C), diedin(B, D) )
%   then if ( influences(E, A), graduatedfrom(B, F) )
%   | then return -0.252750937600568;  // std dev = 0,261, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( wasbornin(B, G), happenedin(H, C) )
%   | | then if ( happenedin(I, G), happenedin(J, D) )
%   | | | then return 0.21931700029866485;  // std dev = 2,651, 40,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | | else return -0.16071839377969585;  // std dev = 1,727, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( livesin(K, C), wasbornin(K, D) )
%   | | | then return 0.48315906507193485;  // std dev = 1,402, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.17232862871303245;  // std dev = 4,635, 105,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=56 */
%   else if ( graduatedfrom(A, L), graduatedfrom(B, L) )
%   | then return 0.2899595860171864;  // std dev = 0,319, 76,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=66 */
%   | else if ( graduatedfrom(A, M), worksat(B, M) )
%   | | then return 0.379497943173558;  // std dev = 0,222, 62,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=59 */
%   | | else if ( iscitizenof(A, N), iscitizenof(B, N) )
%   | | | then return 0.1740475814903726;  // std dev = 5,533, 159,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=104 */
%   | | | else return 0.015265725537905981;  // std dev = 20,968, 2.384,000 (wgt'ed) examples reached here.  /* #neg=1.763 #pos=621 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( worksat(B, D) )
%   | then return -0.002427641738263167;  // std dev = 0,530, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.2545007262384854;  // std dev = 0,243, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( worksat(B, E), worksat(A, E) )
%   | then if ( graduatedfrom(B, F), graduatedfrom(A, F) )
%   | | then return 0.16283169148259585;  // std dev = 0,071, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( influences(G, B), graduatedfrom(B, H) )
%   | | | then return 0.0013438662883091441;  // std dev = 0,510, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26230769792947617;  // std dev = 0,664, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( graduatedfrom(A, I), graduatedfrom(B, I) )
%   | | then if ( owns(I, J), iscitizenof(B, K) )
%   | | | then return 0.035256650998228875;  // std dev = 1,646, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.29778239766036285;  // std dev = 2,002, 64,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=60 */
%   | | else if ( iscitizenof(A, L), iscitizenof(B, L) )
%   | | | then return 0.15127345531759606;  // std dev = 5,696, 185,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=128 */
%   | | | else return 0.021547079238390623;  // std dev = 21,944, 2.589,000 (wgt'ed) examples reached here.  /* #neg=1.861 #pos=728 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), wasbornin(A, C) )
%   then if ( iscitizenof(B, D) )
%   | then return 0.1993264836827145;  // std dev = 0,153, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.05163766961070421;  // std dev = 0,526, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( graduatedfrom(B, E), graduatedfrom(A, E) )
%   | then if ( worksat(B, F), worksat(A, F) )
%   | | then return 0.14197143026196954;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswonprize(A, G), worksat(B, H) )
%   | | | then return -0.03731234504183238;  // std dev = 1,302, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.22557385823640927;  // std dev = 2,216, 70,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=64 */
%   | else if ( influences(B, I), influences(J, A) )
%   | | then if ( influences(B, A) )
%   | | | then return 0.5754281089872524;  // std dev = 0,405, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.10777004792264161;  // std dev = 2,659, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( graduatedfrom(A, K), worksat(L, K) )
%   | | | then return -0.002336300946470972;  // std dev = 16,091, 1.547,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=453 */
%   | | | else return 0.05324770206974008;  // std dev = 15,633, 1.209,000 (wgt'ed) examples reached here.  /* #neg=806 #pos=403 */


Results
   AUC ROC   = 0.718071
   AUC PR    = 0.636523
   CLL	      = -0.556058
   Precision = 0.827233 at threshold = 0.5
   Recall    = 0.292746
   F1        = 0.432453


Total learning time: 360.36 seconds
Total inference time: 86.491 seconds
AUC ROC: 0.718071


Refined model AUC ROC: 0.718071


Dataset: 29_cora_yago2s, Fold: 1, Type: transfer, Time: 06:20:11
{'Precision': [0.827233, 0.5], 'Parameter Learning results': {'Precision': [0.882845, 0.5], 'CLL': -0.609148, 'Inference time': 58.654, 'Recall': 0.109326, 'AUC ROC': 0.555375, 'F1': 0.19456, 'AUC PR': 0.453503, 'Learning time': 171.90800000000002}, 'CLL': -0.556058, 'Inference time': 86.491, 'Recall': 0.292746, 'AUC ROC': 0.718071, 'F1': 0.432453, 'AUC PR': 0.636523, 'Learning time': 532.268, 'Mapping results': {'Generating mappings time': 1.457488775253296, 'Possible mappings': 43904, 'Knowledge compiling time': 22.973001956939697, 'Total time': 40.268383264541626, 'Generating paths time': 2.2966885566711426, 'Finding best mapping': 13.541197061538696}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( influences(C, B) )
%   then if ( created(C, D), influences(A, E) )
%   | then return 0.6763307532813305;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( livesin(B, F), iscitizenof(A, F) )
%   | | then return 0.6581489350995123;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( iscitizenof(A, G), iscitizenof(B, G) )
%   | | | then return 0.6228548174524535;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.22744354090864094;  // std dev = 7,492, 241,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=89 */
%   else if ( worksat(B, H), graduatedfrom(A, H) )
%   | then return 0.8006776707316959;  // std dev = 0,233, 87,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=82 */
%   | else if ( livesin(B, I), livesin(A, I) )
%   | | then if ( dealswith(J, I), diedin(K, J) )
%   | | | then return 0.27481560176617903;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.7510060779566551;  // std dev = 1,637, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else if ( influences(B, L), wasbornin(A, M) )
%   | | | then return 0.3441302435107282;  // std dev = 5,170, 107,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=52 */
%   | | | else return 0.14313621245319727;  // std dev = 21,920, 2.358,000 (wgt'ed) examples reached here.  /* #neg=1.686 #pos=672 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(B, C), iscitizenof(A, C) )
%   then if ( graduatedfrom(B, D), owns(D, E) )
%   | then if ( graduatedfrom(A, F), worksat(B, F) )
%   | | then return 0.6642586529498636;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( worksat(A, G), hascurrency(C, H) )
%   | | | then return 0.15327627264558838;  // std dev = 2,470, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.4327721949028067;  // std dev = 3,022, 39,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | else return 0.6415767852159403;  // std dev = 0,369, 137,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=114 */
%   else if ( diedin(B, I), diedin(A, I) )
%   | then return 0.755003102405495;  // std dev = 0,248, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else if ( iscitizenof(A, J), iscitizenof(B, K) )
%   | | then if ( dealswith(L, K), happenedin(M, J) )
%   | | | then return -0.014113312747843578;  // std dev = 6,817, 370,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=56 */
%   | | | else return 0.28106695154975647;  // std dev = 3,985, 65,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=29 */
%   | | else if ( influences(B, N) )
%   | | | then return 0.24682573603952734;  // std dev = 8,764, 320,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=135 */
%   | | | else return 0.12992934659285854;  // std dev = 19,622, 1.891,000 (wgt'ed) examples reached here.  /* #neg=1.335 #pos=556 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( worksat(B, C), graduatedfrom(A, C) )
%   then if ( iscitizenof(B, D), haswonprize(B, E) )
%   | then return 0.43352968209718223;  // std dev = 0,401, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0.6522060195679579;  // std dev = 0,170, 86,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=84 */
%   else if ( graduatedfrom(A, F), graduatedfrom(B, F) )
%   | then if ( owns(F, G), worksat(A, F) )
%   | | then return 0.14441608548350918;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( owns(F, H) )
%   | | | then return 0.563774942089177;  // std dev = 1,743, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.7188804577585864;  // std dev = 1,378, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else if ( diedin(B, I), diedin(A, I) )
%   | | then if ( influences(A, J), isleaderof(K, I) )
%   | | | then return 0.33187877247762554;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6589505045697723;  // std dev = 0,994, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else if ( influences(B, L), influences(M, A) )
%   | | | then return 0.3775387390349621;  // std dev = 3,302, 47,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=28 */
%   | | | else return 0.10008397484155007;  // std dev = 22,936, 2.657,000 (wgt'ed) examples reached here.  /* #neg=1.896 #pos=761 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( diedin(B, C), diedin(A, D) )
%   then if ( livesin(E, C), isleaderof(E, F) )
%   | then if ( iscitizenof(A, G), influences(B, H) )
%   | | then return 0.4705115403750046;  // std dev = 0,376, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.03697568398709382;  // std dev = 0,362, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | else if ( haswonprize(A, I), haswonprize(B, I) )
%   | | then return 0.6732754775851879;  // std dev = 0,102, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( livesin(J, D), ismarriedto(J, K) )
%   | | | then return 0.3949440358707233;  // std dev = 4,060, 90,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=61 */
%   | | | else return 0.15228903834087412;  // std dev = 3,683, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   else if ( diedin(A, L), livesin(M, L) )
%   | then return 0.008061941461939545;  // std dev = 0,394, 414,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=90 */
%   | else if ( worksat(B, N), graduatedfrom(A, N) )
%   | | then return 0.47820921039808906;  // std dev = 0,228, 78,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=74 */
%   | | else if ( graduatedfrom(A, P), graduatedfrom(B, P) )
%   | | | then return 0.5091495164892598;  // std dev = 2,318, 45,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=38 */
%   | | | else return 0.09920686132301158;  // std dev = 20,889, 2.144,000 (wgt'ed) examples reached here.  /* #neg=1.496 #pos=648 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( influences(B, C), worksat(C, D) )
%   then if ( wasbornin(B, E), isleaderof(F, E) )
%   | then return 0.4620497667809406;  // std dev = 0,411, 30,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | else if ( influences(G, A), influences(G, C) )
%   | | then return 0.6727736956667135;  // std dev = 0,053, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( graduatedfrom(A, D) )
%   | | | then return 0.7078646687265999;  // std dev = 0,127, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11508751887221771;  // std dev = 6,067, 170,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=65 */
%   else if ( diedin(A, H), diedin(B, I) )
%   | then if ( livesin(J, I), diedin(J, H) )
%   | | then return 0.39096461508146446;  // std dev = 0,245, 37,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | else return 0.16107138620755795;  // std dev = 0,444, 150,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=67 */
%   | else if ( diedin(A, K), livesin(L, K) )
%   | | then return -0.0033796686300842484;  // std dev = 0,387, 386,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=79 */
%   | | else if ( graduatedfrom(A, M), diedin(B, N) )
%   | | | then return 0.007052438056840976;  // std dev = 6,437, 287,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=74 */
%   | | | else return 0.10418860617000009;  // std dev = 19,333, 1.822,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=612 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(A, C), worksat(B, C) )
%   then if ( iscitizenof(A, D), exports(D, E) )
%   | then return 0.28435231513120107;  // std dev = 0,251, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | else return 0.4126413455625844;  // std dev = 0,185, 55,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=53 */
%   else if ( graduatedfrom(A, F), graduatedfrom(B, F) )
%   | then if ( worksat(A, F), iscitizenof(B, G) )
%   | | then return 0.01850876885072092;  // std dev = 0,670, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( livesin(A, H), dealswith(H, I) )
%   | | | then return 0.242094353012985;  // std dev = 1,042, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.45666944126117087;  // std dev = 1,964, 47,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | else if ( iscitizenof(A, J), iscitizenof(B, J) )
%   | | then if ( wasbornin(A, K), hascapital(J, L) )
%   | | | then return 0.18693888380351942;  // std dev = 3,902, 68,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | | else return 0.42452995547780453;  // std dev = 4,197, 109,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=84 */
%   | | else if ( iscitizenof(B, M), iscitizenof(A, N) )
%   | | | then return -0.043196649839908376;  // std dev = 7,518, 424,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=74 */
%   | | | else return 0.056813493660061234;  // std dev = 20,524, 2.135,000 (wgt'ed) examples reached here.  /* #neg=1.510 #pos=625 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( graduatedfrom(B, D), owns(D, E) )
%   | then if ( wasbornin(A, F), livesin(A, C) )
%   | | then return -0.16624625345896135;  // std dev = 0,369, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( worksat(A, G), influences(H, A) )
%   | | | then return -0.23740908790650864;  // std dev = 0,554, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.19559211153847242;  // std dev = 3,630, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else return 0.32398981281028827;  // std dev = 0,356, 137,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=114 */
%   else if ( graduatedfrom(A, I), worksat(B, I) )
%   | then return 0.2984479195503913;  // std dev = 0,233, 67,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=63 */
%   | else if ( influences(J, B), wasbornin(B, K) )
%   | | then if ( graduatedfrom(A, L), worksat(B, M) )
%   | | | then return -0.04765330662048429;  // std dev = 2,219, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.2922393716062302;  // std dev = 4,165, 78,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   | | else if ( graduatedfrom(A, N), graduatedfrom(B, N) )
%   | | | then return 0.29842653628413524;  // std dev = 2,422, 47,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | | else return 0.026142535332328017;  // std dev = 21,270, 2.450,000 (wgt'ed) examples reached here.  /* #neg=1.802 #pos=648 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( haswonprize(A, C), haswonprize(B, D) )
%   then if ( haswonprize(A, D) )
%   | then return 0.41746282979953125;  // std dev = 0,369, 58,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | else if ( iscitizenof(B, E), worksat(A, F) )
%   | | then if ( isleaderof(G, E), haschild(G, H) )
%   | | | then return 0.32624452456155895;  // std dev = 2,912, 43,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | | | else return -0.1634555226296344;  // std dev = 0,924, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( iscitizenof(A, I), hascurrency(I, J) )
%   | | | then return -0.07991334619213769;  // std dev = 3,384, 81,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
%   | | | else return 0.0726433943553382;  // std dev = 4,476, 111,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=42 */
%   else if ( haswonprize(A, K) )
%   | then return -0.030511365339696332;  // std dev = 0,391, 514,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=125 */
%   | else if ( iscitizenof(B, L), iscitizenof(A, L) )
%   | | then return 0.19174086942611504;  // std dev = 0,383, 146,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=108 */
%   | | else if ( iscitizenof(B, M), dealswith(M, N) )
%   | | | then return -0.02170100013719937;  // std dev = 8,089, 443,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=104 */
%   | | | else return 0.06626257018024795;  // std dev = 17,165, 1.485,000 (wgt'ed) examples reached here.  /* #neg=991 #pos=494 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( influences(C, B), wasbornin(B, D) )
%   then if ( iscitizenof(A, E), hascurrency(E, F) )
%   | then return -0.04061087914219466;  // std dev = 0,411, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( haswonprize(A, G) )
%   | | then if ( haswonprize(B, H), diedin(B, I) )
%   | | | then return 0.5725525357352796;  // std dev = 0,243, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.05883769011319353;  // std dev = 1,609, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( graduatedfrom(A, J), influences(B, K) )
%   | | | then return 0.13691879243006616;  // std dev = 2,162, 27,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return 0.4342163724503224;  // std dev = 2,223, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else if ( influences(B, L), influences(A, M) )
%   | then return 0.295915094075792;  // std dev = 0,392, 38,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=28 */
%   | else if ( graduatedfrom(A, N), worksat(P, N) )
%   | | then return 0.013094224785468641;  // std dev = 0,402, 1.569,000 (wgt'ed) examples reached here.  /* #neg=1.070 #pos=499 */
%   | | else if ( diedin(A, Q), graduatedfrom(B, R) )
%   | | | then return -0.0689981711435576;  // std dev = 3,780, 117,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=27 */
%   | | | else return 0.06633104946137248;  // std dev = 14,730, 1.051,000 (wgt'ed) examples reached here.  /* #neg=701 #pos=350 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( influences(D, A) )
%   | then return -0.15622509471496487;  // std dev = 0,337, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( livesin(A, E), wasbornin(A, F) )
%   | | then if ( isleaderof(G, E), created(G, H) )
%   | | | then return -0.17513355705590794;  // std dev = 1,642, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.3254208954633676;  // std dev = 0,524, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2088199166940561;  // std dev = 0,367, 178,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=142 */
%   else if ( graduatedfrom(A, I), graduatedfrom(B, I) )
%   | then return 0.22133941639017468;  // std dev = 0,319, 67,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   | else if ( iscitizenof(A, J), happenedin(K, J) )
%   | | then if ( iscitizenof(B, L), dealswith(M, L) )
%   | | | then return -0.0760486080713326;  // std dev = 6,314, 366,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=52 */
%   | | | else return 0.0104901647509224;  // std dev = 11,736, 753,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=213 */
%   | | else if ( worksat(A, N), worksat(B, N) )
%   | | | then return 0.4995809859761749;  // std dev = 1,122, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.03568419566096783;  // std dev = 16,882, 1.476,000 (wgt'ed) examples reached here.  /* #neg=1.008 #pos=468 */


Results
   AUC ROC   = 0.724367
   AUC PR    = 0.639366
   CLL	      = -0.553938
   Precision = 0.836167 at threshold = 0.5
   Recall    = 0.280311
   F1        = 0.419868


Total learning time: 758.985 seconds
Total inference time: 56.558 seconds
AUC ROC: 0.724367


Dataset: 29_cora_yago2s, Fold: 1, Type: scratch, Time: 06:33:50
{'Precision': [0.836167, 0.5], 'CLL': -0.553938, 'Inference time': 56.558, 'Recall': 0.280311, 'AUC ROC': 0.724367, 'F1': 0.419868, 'AUC PR': 0.639366, 'Learning time': 758.985}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 19.826852083206177
   Generating paths time   = 2.3150758743286133
   Generating mappings time   = 1.6282804012298584
   Possible mappings   = 43904
   Finding best mapping   = 11.917471408843994
   Total time   = 35.68768787384033


Best mapping found: ['venue(A,B) -> graduatedfrom(A,B)', 'author(A,B) -> haswonprize(A,B)', 'samebib(A,B) -> hasacademicadvisor(A,B)', 'title(A,B) -> wasbornin(A,B)'] 

Transferred target predicate: hasacademicadvisor 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
0;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
0;false,false;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
0;true,false;haswonprize(A, E), haswonprize(B, E).;false;false
0;false;haswonprize(A, F), haswonprize(B, F).;false;true
1;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
1;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
1;false,false;graduatedfrom(A, H), graduatedfrom(B, H).;false;false
1;true,false;haswonprize(A, E), haswonprize(B, E).;false;false
1;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
1;false;haswonprize(A, F), haswonprize(B, F).;true;true
2;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
2;false,true;haswonprize(A, G), haswonprize(B, G).;false;false
2;false,false;haswonprize(A, H), haswonprize(B, H).;false;false
2;true,false;haswonprize(A, E), haswonprize(B, E).;false;false
2;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
2;false;graduatedfrom(A, F), graduatedfrom(B, F).;true;true
3;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
3;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;false
3;false;haswonprize(A, E), haswonprize(B, E).;false;false
4;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
4;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
4;false,false;graduatedfrom(A, H), graduatedfrom(B, H).;false;false
4;true,false;graduatedfrom(A, E), graduatedfrom(B, E).;false;false
4;true;haswonprize(A, D), haswonprize(B, D).;false;true
4;false;haswonprize(A, F), haswonprize(B, F).;true;true
5;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
5;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
5;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
5;true,false;haswonprize(A, E), haswonprize(B, E).;false;false
5;false;haswonprize(A, F), haswonprize(B, F).;true;false
6;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
6;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
6;false,false;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
6;true,false;haswonprize(A, E), haswonprize(B, E).;false;false
6;false;haswonprize(A, F), haswonprize(B, F).;false;true
7;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
7;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
7;true,false;haswonprize(A, E), haswonprize(B, E).;false;false
7;false;haswonprize(A, F), haswonprize(B, F).;false;false
8;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
8;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
8;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
8;true,false;haswonprize(A, E), haswonprize(B, E).;false;false
8;false;haswonprize(A, F), haswonprize(B, F).;true;false
9;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
9;false,true;haswonprize(A, G), haswonprize(B, G).;false;false
9;false,false;haswonprize(A, H), haswonprize(B, H).;false;false
9;true,false;haswonprize(A, E), haswonprize(B, E).;false;false
9;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
9;false;graduatedfrom(A, F), graduatedfrom(B, F).;true;true


WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswonprize(A, E), haswonprize(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( haswonprize(A, F), haswonprize(B, F) )
%   | then return 0.7348612638666361;  // std dev = 2,809, 73,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=64 */
%   | else if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.727196554147132;  // std dev = 3,092, 84,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=73 */
%   | | else return 0.15756113201354122;  // std dev = 23,895, 2.722,000 (wgt'ed) examples reached here.  /* #neg=1.907 #pos=815 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswonprize(A, E), haswonprize(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5956068723141557;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( haswonprize(A, F), haswonprize(B, F) )
%   | then if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.7436713391256228;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6113183979491522;  // std dev = 2,794, 68,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=59 */
%   | else if ( graduatedfrom(A, H), graduatedfrom(B, H) )
%   | | then return 0.6141773070791727;  // std dev = 3,092, 84,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=73 */
%   | | else return 0.13727871837977512;  // std dev = 23,895, 2.722,000 (wgt'ed) examples reached here.  /* #neg=1.907 #pos=815 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswonprize(A, E), haswonprize(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4686344088678042;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( graduatedfrom(A, F), graduatedfrom(B, F) )
%   | then if ( haswonprize(A, G), haswonprize(B, G) )
%   | | then return 0.579681826358369;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.48173582655573327;  // std dev = 3,092, 84,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=73 */
%   | else if ( haswonprize(A, H), haswonprize(B, H) )
%   | | then return 0.47919422753644225;  // std dev = 2,794, 68,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=59 */
%   | | else return 0.11775503027740768;  // std dev = 23,895, 2.722,000 (wgt'ed) examples reached here.  /* #neg=1.907 #pos=815 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3540171821738477;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( haswonprize(A, E), haswonprize(B, E) )
%   | then return 0.36640658192890957;  // std dev = 2,799, 73,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=64 */
%   | else return 0.10748336221377366;  // std dev = 24,212, 2.806,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=888 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( haswonprize(A, D), haswonprize(B, D) )
%   | then return 0.04581403455160471;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( graduatedfrom(A, E), graduatedfrom(B, E) )
%   | | then return 0.5458140345516047;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2662055261992428;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( haswonprize(A, F), haswonprize(B, F) )
%   | then if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.3487312054647358;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.270935820889948;  // std dev = 2,794, 68,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=59 */
%   | else if ( graduatedfrom(A, H), graduatedfrom(B, H) )
%   | | then return 0.3364456776560968;  // std dev = 3,092, 84,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=73 */
%   | | else return 0.08184865437283423;  // std dev = 23,895, 2.722,000 (wgt'ed) examples reached here.  /* #neg=1.907 #pos=815 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.15977827426288999;  // std dev = 0,771, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswonprize(A, E), haswonprize(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2030717105018899;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( haswonprize(A, F), haswonprize(B, F) )
%   | then if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.2742128387837792;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2077767572365485;  // std dev = 2,794, 68,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=59 */
%   | else return 0.07318516701444638;  // std dev = 24,153, 2.806,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=888 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.12050555410521362;  // std dev = 0,771, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswonprize(A, E), haswonprize(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1579278943667103;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( haswonprize(A, F), haswonprize(B, F) )
%   | then return 0.1669305001927791;  // std dev = 2,797, 73,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=64 */
%   | else if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.23718311924309388;  // std dev = 3,092, 84,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=73 */
%   | | else return 0.054306449242763545;  // std dev = 23,895, 2.722,000 (wgt'ed) examples reached here.  /* #neg=1.907 #pos=815 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.09122587391711849;  // std dev = 0,772, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswonprize(A, E), haswonprize(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12508565429655724;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( haswonprize(A, F), haswonprize(B, F) )
%   | then return 0.1338308885408926;  // std dev = 2,798, 73,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=64 */
%   | else return 0.04830491955794171;  // std dev = 24,127, 2.806,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=888 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.06938919259781233;  // std dev = 0,773, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswonprize(A, E), haswonprize(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10063530397647748;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( haswonprize(A, F), haswonprize(B, F) )
%   | then if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.17532811305420726;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.10427537235943833;  // std dev = 2,794, 68,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=59 */
%   | else return 0.03898226878004849;  // std dev = 24,127, 2.806,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=888 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.05302463451417546;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswonprize(A, E), haswonprize(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.08201840165050941;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( graduatedfrom(A, F), graduatedfrom(B, F) )
%   | then if ( haswonprize(A, G), haswonprize(B, G) )
%   | | then return 0.15140103225314416;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16540714525237937;  // std dev = 3,092, 84,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=73 */
%   | else if ( haswonprize(A, H), haswonprize(B, H) )
%   | | then return 0.0859591682421876;  // std dev = 2,794, 68,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=59 */
%   | | else return 0.02717358474570947;  // std dev = 23,895, 2.722,000 (wgt'ed) examples reached here.  /* #neg=1.907 #pos=815 */


Results
   AUC ROC   = 0.560391
   AUC PR    = 0.45257
   CLL	      = -0.608257
   Precision = 0.850498 at threshold = 0.5
   Recall    = 0.132642
   F1        = 0.229494


Total learning time: 160.187 seconds
Total inference time: 86.627 seconds
AUC ROC: 0.560391


Structure after Parameter Learning
[['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false,false': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'true,false': 'haswonprize(A, E), haswonprize(B, E)', 'false': 'haswonprize(A, F), haswonprize(B, F)'}, {'false,true': [2.809, 9, 64], 'true,false,false': [1.301, 2, 11], 'true,true': [0.816, 1, 2], 'false,false,true': [3.092, 11, 73], 'false,false,false': [23.895, 1907, 815], 'true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'false,true': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'false,false': 'graduatedfrom(A, H), graduatedfrom(B, H)', 'true,false': 'haswonprize(A, E), haswonprize(B, E)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false': 'haswonprize(A, F), haswonprize(B, F)'}, {'true,false,false': [1.301, 2, 11], 'true,true': [0.816, 1, 2], 'false,false,true': [3.092, 11, 73], 'false,false,false': [23.895, 1907, 815], 'false,true,false': [2.794, 9, 59], 'true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'false,true': 'haswonprize(A, G), haswonprize(B, G)', 'false,false': 'haswonprize(A, H), haswonprize(B, H)', 'true,false': 'haswonprize(A, E), haswonprize(B, E)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false': 'graduatedfrom(A, F), graduatedfrom(B, F)'}, {'true,false,false': [1.301, 2, 11], 'true,true': [0.816, 1, 2], 'false,false,true': [2.794, 9, 59], 'false,false,false': [23.895, 1907, 815], 'false,true,false': [3.092, 11, 73], 'true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false': 'haswonprize(A, E), haswonprize(B, E)'}, {'false,true': [2.799, 9, 64], 'false,false': [24.212, 1918, 888], 'true,true': [0.816, 1, 2], 'true,false': [1.301, 2, 11]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'false,true': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'false,false': 'graduatedfrom(A, H), graduatedfrom(B, H)', 'true,false': 'graduatedfrom(A, E), graduatedfrom(B, E)', 'true': 'haswonprize(A, D), haswonprize(B, D)', 'false': 'haswonprize(A, F), haswonprize(B, F)'}, {'true,false,false': [1.301, 2, 11], 'true,true': [0.707, 1, 1], 'false,false,true': [3.092, 11, 73], 'false,false,false': [23.895, 1907, 815], 'false,true,false': [2.794, 9, 59], 'true,false,true': [0.0, 0, 1], 'false,true,true': [0.0, 0, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false,true': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'true,false': 'haswonprize(A, E), haswonprize(B, E)', 'false': 'haswonprize(A, F), haswonprize(B, F)'}, {'true,false,false': [1.301, 2, 11], 'false,false': [24.153, 1918, 888], 'true,true': [0.771, 1, 2], 'false,true,false': [2.794, 9, 59], 'true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false,false': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'true,false': 'haswonprize(A, E), haswonprize(B, E)', 'false': 'haswonprize(A, F), haswonprize(B, F)'}, {'false,true': [2.797, 9, 64], 'true,false,false': [1.301, 2, 11], 'true,true': [0.771, 1, 2], 'false,false,true': [3.092, 11, 73], 'false,false,false': [23.895, 1907, 815], 'true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'true,false': 'haswonprize(A, E), haswonprize(B, E)', 'false': 'haswonprize(A, F), haswonprize(B, F)'}, {'false,true': [2.798, 9, 64], 'true,false,false': [1.301, 2, 11], 'true,false,true': [0.0, 0, 0], 'false,false': [24.127, 1918, 888], 'true,true': [0.772, 1, 2]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false,true': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'true,false': 'haswonprize(A, E), haswonprize(B, E)', 'false': 'haswonprize(A, F), haswonprize(B, F)'}, {'true,false,false': [1.301, 2, 11], 'false,false': [24.127, 1918, 888], 'true,true': [0.773, 1, 2], 'false,true,false': [2.794, 9, 59], 'true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'false,true': 'haswonprize(A, G), haswonprize(B, G)', 'false,false': 'haswonprize(A, H), haswonprize(B, H)', 'true,false': 'haswonprize(A, E), haswonprize(B, E)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false': 'graduatedfrom(A, F), graduatedfrom(B, F)'}, {'true,false,false': [1.301, 2, 11], 'true,true': [0.774, 1, 2], 'false,false,true': [2.794, 9, 59], 'false,false,false': [23.895, 1907, 815], 'false,true,false': [3.092, 11, 73], 'true,false,true': [0.0, 0, 0], 'false,true,true': [3.73e-09, 0, 5]}]]
[{'': [0.15234374999999972, 0.2213274769651537], 'true': [0.22222222222222224, 0.1301775147928993], 'false,false': [0.11380385487528219, 0.20976453325313257], 'false': [0.10808782135484998, 0.21631480043019854], 'true,false': [nan, 0.1301775147928993]}, {'': [0.15074184960527198, 0.21625563398128544], 'false,true': [0.0, 0.11483564013840815], 'false,false': [0.11380385487528172, 0.20976453325313368], 'false': [0.1080878213548492, 0.2134964325358309], 'true': [0.2222222222222222, 0.13017751479289957], 'true,false': [nan, 0.13017751479289957]}, {'': [0.14915639747747844, 0.21128145259192024], 'false,true': [-4.4408920985006264e-17, 0.11380385487528358], 'false,false': [0.11483564013840886, 0.20976453325315111], 'false': [0.1079190575654717, 0.21055726663757957], 'true': [0.22222222222222224, 0.1301775147928993], 'true,false': [nan, 0.13017751479289935]}, {'': [0.14825360484481592, 0.20799188804180593], 'true': [0.2222222222222222, 0.13017751479289943], 'false': [0.10732428974852268, 0.20891092484260715]}, {'': [0.14787561585757794, 0.2070649464709661], 'false,true': [-2.2204460492503132e-17, 0.11483564013840822], 'false,false': [0.11380385487528366, 0.2097645332531518], 'false': [0.10735632183896555, 0.20877421141016703], 'true': [0.25, 0.12606458992636285], 'true,false': [0.0, 0.13017751479289943]}, {'': [0.14319639263345818, 0.20583116760550438], 'true': [0.1980886436251749, 0.13017751479289938], 'false,true': [0.0, 0.11483564013840841], 'false': [0.107251790888294, 0.20790487189267515], 'true,false': [nan, 0.13017751479289938]}, {'': [0.14318234719226203, 0.20559444422960252], 'true': [0.19839877028793243, 0.1301775147928994], 'false,false': [0.11380385487528324, 0.20976453325313782], 'false': [0.10720235269502308, 0.2078630686339584], 'true,false': [nan, 0.1301775147928994]}, {'': [0.14321823875122308, 0.2050993339844914], 'true': [0.19879652372965886, 0.13017751479289943], 'false': [0.1072500589755495, 0.20745947797082565], 'true,false': [nan, 0.13017751479289943]}, {'': [0.1432653290112398, 0.20503312434204574], 'true': [0.1991859310495644, 0.13017751479289938], 'false,true': [-5.551115123125783e-18, 0.11483564013840827], 'false': [0.10729228840561818, 0.20745110652799584], 'true,false': [nan, 0.1301775147928994]}, {'': [0.14330916844111757, 0.20499242052067337], 'false,true': [2.7755575615628915e-18, 0.11380385487528333], 'false,false': [0.11483564013840825, 0.2097645332531359], 'false': [0.10742078158719648, 0.20753302735557402], 'true': [0.19952998210886533, 0.1301775147928994], 'true,false': [nan, 0.1301775147928994]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['1;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '1;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;true;true', '1;false;haswonprize(A, F), haswonprize(B, F).;true;true', '2;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '2;false,true;haswonprize(A, G), haswonprize(B, G).;true;true', '2;false;graduatedfrom(A, F), graduatedfrom(B, F).;true;true', '4;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '4;true;haswonprize(A, D), haswonprize(B, D).;true;true', '4;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;true;true', '4;true,false;graduatedfrom(A, E), graduatedfrom(B, E).;true;true', '4;false;haswonprize(A, F), haswonprize(B, F).;true;true', '5;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '5;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;true;true', '5;false;haswonprize(A, F), haswonprize(B, F).;true;true', '8;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '8;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;true;true', '8;false;haswonprize(A, F), haswonprize(B, F).;true;true', '9;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '9;false,true;haswonprize(A, G), haswonprize(B, G).;true;true', '9;false;graduatedfrom(A, F), graduatedfrom(B, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( worksat(B, C), graduatedfrom(A, C) )
%   then return 0.8250910838598412;  // std dev = 0,179, 121,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=117 */
%   else if ( haswonprize(B, D), haswonprize(A, E) )
%   | then if ( iscitizenof(B, F), iscitizenof(A, F) )
%   | | then if ( worksat(B, G), owns(G, H) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.7277141524908167;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else if ( haswonprize(A, D) )
%   | | | then return 0.6974346493852267;  // std dev = 2,748, 56,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | | | else return 0.1866513505584509;  // std dev = 6,757, 207,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=68 */
%   | else if ( influences(B, I), graduatedfrom(B, J) )
%   | | then if ( graduatedfrom(A, J) )
%   | | | then return 0.7152917922423694;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.25437535019385316;  // std dev = 6,167, 159,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=63 */
%   | | else if ( iscitizenof(B, K), iscitizenof(A, K) )
%   | | | then return 0.5618526388032139;  // std dev = 5,305, 135,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=95 */
%   | | | else return 0.10711350021685677;  // std dev = 20,157, 2.173,000 (wgt'ed) examples reached here.  /* #neg=1.632 #pos=541 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( diedin(A, D), iscitizenof(A, E) )
%   | then return 0.12811950850869766;  // std dev = 0,794, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( graduatedfrom(B, F), graduatedfrom(A, F) )
%   | | then return 0.4255741012644176;  // std dev = 0,827, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8206792742812505;  // std dev = 0,119, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswonprize(A, G), haswonprize(B, G) )
%   | then if ( graduatedfrom(A, H), graduatedfrom(B, H) )
%   | | then return 0.7495986486418115;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( influences(I, A), diedin(I, J) )
%   | | | then return 0.2655701769336373;  // std dev = 1,263, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.652095720884422;  // std dev = 2,328, 62,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | else if ( worksat(B, K), graduatedfrom(A, K) )
%   | | then return 0.6910091475587085;  // std dev = 0,184, 114,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=110 */
%   | | else if ( graduatedfrom(B, L), influences(B, M) )
%   | | | then return 0.2622880770594825;  // std dev = 6,974, 201,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=89 */
%   | | | else return 0.11637729336209231;  // std dev = 22,142, 2.491,000 (wgt'ed) examples reached here.  /* #neg=1.802 #pos=689 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( diedin(A, D), iscitizenof(A, E) )
%   | then return 0.1065432402235466;  // std dev = 0,792, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5939975300671212;  // std dev = 0,273, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( graduatedfrom(A, F), graduatedfrom(B, F) )
%   | then if ( haswonprize(A, G), haswonprize(B, G) )
%   | | then return 0.5858652494848305;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( iscitizenof(B, H), haswonprize(B, I) )
%   | | | then return 0.7694354789767851;  // std dev = 0,341, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.5506778751068269;  // std dev = 2,931, 69,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=58 */
%   | else if ( haswonprize(B, J), haswonprize(A, J) )
%   | | then if ( livesin(A, K), graduatedfrom(B, L) )
%   | | | then return 0.2726027920079301;  // std dev = 1,153, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.5062131250733289;  // std dev = 2,428, 62,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=55 */
%   | | else if ( iscitizenof(A, M), iscitizenof(B, M) )
%   | | | then return 0.44298772278063925;  // std dev = 5,776, 171,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=121 */
%   | | | else return 0.08994990157644481;  // std dev = 21,988, 2.551,000 (wgt'ed) examples reached here.  /* #neg=1.857 #pos=694 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(A, C), worksat(B, C) )
%   then if ( graduatedfrom(B, C), haswonprize(A, D) )
%   | then return 0.2670315688521619;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.48157975135245573;  // std dev = 0,161, 115,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=112 */
%   else if ( influences(B, E) )
%   | then if ( influences(B, A) )
%   | | then return 0.735499860533677;  // std dev = 0,115, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( worksat(A, F), graduatedfrom(A, G) )
%   | | | then return 0.03872273571687559;  // std dev = 4,738, 127,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
%   | | | else return 0.19931711861646825;  // std dev = 7,810, 269,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=118 */
%   | else if ( graduatedfrom(A, H), graduatedfrom(B, H) )
%   | | then if ( livesin(A, I) )
%   | | | then return 0.6848984183728649;  // std dev = 0,284, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.475489975927388;  // std dev = 2,243, 37,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | else if ( iscitizenof(A, J), iscitizenof(B, J) )
%   | | | then return 0.3393611227558897;  // std dev = 5,407, 139,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=95 */
%   | | | else return 0.05658198365997991;  // std dev = 19,816, 2.168,000 (wgt'ed) examples reached here.  /* #neg=1.631 #pos=537 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( haswonprize(A, D), haswonprize(B, D) )
%   | then return -0.06296579014822778;  // std dev = 0,659, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.3947323140775815;  // std dev = 0,288, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( haswonprize(A, E), haswonprize(B, E) )
%   | then if ( graduatedfrom(A, F), graduatedfrom(B, F) )
%   | | then return 0.3197135029151458;  // std dev = 0,039, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( influences(G, B), graduatedfrom(G, H) )
%   | | | then return -0.05447734001536228;  // std dev = 0,899, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.34485231440184044;  // std dev = 2,397, 64,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=57 */
%   | else if ( iscitizenof(A, I), iscitizenof(B, I) )
%   | | then if ( graduatedfrom(A, J), hascurrency(I, K) )
%   | | | then return 0.181811341872189;  // std dev = 4,199, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | | | else return 0.37013330750024465;  // std dev = 3,864, 103,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=83 */
%   | | else if ( iscitizenof(B, L), iscitizenof(A, M) )
%   | | | then return -0.027290648110639124;  // std dev = 7,608, 426,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=82 */
%   | | | else return 0.0876669611803898;  // std dev = 20,588, 2.188,000 (wgt'ed) examples reached here.  /* #neg=1.523 #pos=665 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( iscitizenof(B, D) )
%   | then return 0.34379664672848725;  // std dev = 0,251, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.0019526675148347772;  // std dev = 0,817, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( haswonprize(A, E), haswonprize(B, E) )
%   | then if ( graduatedfrom(A, F), graduatedfrom(B, F) )
%   | | then return 0.25456903680427495;  // std dev = 0,034, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( influences(G, B), graduatedfrom(G, H) )
%   | | | then return -0.04147006643746397;  // std dev = 0,898, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2625974897855674;  // std dev = 2,399, 64,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=57 */
%   | else if ( diedin(B, I), happenedin(J, I) )
%   | | then if ( diedin(A, I) )
%   | | | then return 0.6454494396403958;  // std dev = 0,716, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.08966693012093611;  // std dev = 9,308, 462,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=161 */
%   | | else if ( graduatedfrom(A, K), graduatedfrom(B, K) )
%   | | | then return 0.28977518195736834;  // std dev = 2,657, 59,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=49 */
%   | | | else return 0.051563507893007995;  // std dev = 20,398, 2.260,000 (wgt'ed) examples reached here.  /* #neg=1.607 #pos=653 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( dealswith(C, D), hascurrency(C, E) )
%   | then return 0.34458967522411665;  // std dev = 0,225, 39,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | else if ( graduatedfrom(A, F), hascurrency(C, G) )
%   | | then if ( haswonprize(B, H), owns(F, I) )
%   | | | then return 0.24722925266236812;  // std dev = 2,187, 30,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | | else return -0.08474309389348784;  // std dev = 3,013, 43,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | else if ( influences(J, B), influences(B, K) )
%   | | | then return -0.13017456311015854;  // std dev = 1,179, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2595445479979339;  // std dev = 3,452, 93,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=77 */
%   else if ( diedin(B, L), diedin(A, L) )
%   | then return 0.5434853996851148;  // std dev = 0,154, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( graduatedfrom(A, M), worksat(B, M) )
%   | | then return 0.332191422703529;  // std dev = 0,184, 88,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=85 */
%   | | else if ( iscitizenof(A, N), dealswith(P, N) )
%   | | | then return -0.009267818138719353;  // std dev = 12,963, 1.062,000 (wgt'ed) examples reached here.  /* #neg=823 #pos=239 */
%   | | | else return 0.06781902733564066;  // std dev = 17,355, 1.515,000 (wgt'ed) examples reached here.  /* #neg=1.051 #pos=464 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( influences(B, C) )
%   then if ( influences(D, B), graduatedfrom(D, E) )
%   | then if ( haschild(F, D), worksat(A, G) )
%   | | then if ( iscitizenof(A, H), worksat(C, I) )
%   | | | then return 0.07942899825237885;  // std dev = 0,835, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.720806921085003;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.028682728245573354;  // std dev = 0,409, 96,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | else if ( worksat(A, J), graduatedfrom(A, K) )
%   | | then return 0.004229675216717551;  // std dev = 0,391, 106,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | else if ( graduatedfrom(A, L), haswonprize(B, M) )
%   | | | then return 0.06607453171423766;  // std dev = 2,988, 56,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | | | else return 0.24105483344770454;  // std dev = 5,966, 170,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=98 */
%   else if ( worksat(B, N), graduatedfrom(A, N) )
%   | then return 0.2337626852985868;  // std dev = 0,195, 102,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=98 */
%   | else if ( worksat(B, P), graduatedfrom(A, Q) )
%   | | then return -0.02942793021460426;  // std dev = 0,391, 446,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=105 */
%   | | else return 0.04303506805166209;  // std dev = 0,429, 1.912,000 (wgt'ed) examples reached here.  /* #neg=1.341 #pos=571 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( diedin(A, D), iscitizenof(A, E) )
%   | then return -0.16580350707916447;  // std dev = 0,709, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.24701014839955998;  // std dev = 0,243, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswonprize(A, F), haswonprize(B, F) )
%   | then if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.1862129566439384;  // std dev = 0,048, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( influences(H, A), livesin(H, I) )
%   | | | then return -0.11843090709675197;  // std dev = 1,116, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.18868194570000277;  // std dev = 2,165, 62,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | else if ( iscitizenof(A, J), iscitizenof(B, J) )
%   | | then if ( exports(J, K), haswonprize(A, L) )
%   | | | then return 0.009646795042190981;  // std dev = 3,047, 46,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | | else return 0.17449979637994356;  // std dev = 4,494, 146,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=115 */
%   | | else if ( graduatedfrom(A, M), worksat(B, M) )
%   | | | then return 0.22336800169911813;  // std dev = 1,721, 85,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=82 */
%   | | | else return 0.02073968834163443;  // std dev = 21,503, 2.529,000 (wgt'ed) examples reached here.  /* #neg=1.864 #pos=665 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( iscitizenof(B, D), hascurrency(D, E) )
%   | then return 0.3094620443417733;  // std dev = 0,144, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( graduatedfrom(A, F), worksat(G, F) )
%   | | then return -0.16015774463112714;  // std dev = 0,600, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.16030961690707662;  // std dev = 0,783, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( graduatedfrom(A, H), graduatedfrom(B, H) )
%   | then if ( haswonprize(A, I), haswonprize(B, I) )
%   | | then return 0.15969681425460855;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( worksat(B, J), owns(J, K) )
%   | | | then return 0.030500542703503625;  // std dev = 1,462, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.24935876177325175;  // std dev = 2,417, 70,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=63 */
%   | else if ( influences(B, A) )
%   | | then return 0.49478055626583767;  // std dev = 0,162, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( iscitizenof(B, L), graduatedfrom(A, M) )
%   | | | then return -0.030529758601056008;  // std dev = 10,048, 698,000 (wgt'ed) examples reached here.  /* #neg=497 #pos=201 */
%   | | | else return 0.03918209203333722;  // std dev = 19,644, 2.072,000 (wgt'ed) examples reached here.  /* #neg=1.419 #pos=653 */


Results
   AUC ROC   = 0.707184
   AUC PR    = 0.630539
   CLL	      = -0.552669
   Precision = 0.830028 at threshold = 0.5
   Recall    = 0.303627
   F1        = 0.444613


Total learning time: 398.089 seconds
Total inference time: 57.243 seconds
AUC ROC: 0.707184


Refined model AUC ROC: 0.707184


Dataset: 29_cora_yago2s, Fold: 2, Type: transfer, Time: 06:46:32
{'Precision': [0.830028, 0.5], 'Parameter Learning results': {'Precision': [0.850498, 0.5], 'CLL': -0.608257, 'Inference time': 86.627, 'Recall': 0.132642, 'AUC ROC': 0.560391, 'F1': 0.229494, 'AUC PR': 0.45257, 'Learning time': 160.187}, 'CLL': -0.552669, 'Inference time': 57.243, 'Recall': 0.303627, 'AUC ROC': 0.707184, 'F1': 0.444613, 'AUC PR': 0.630539, 'Learning time': 558.2760000000001, 'Mapping results': {'Generating mappings time': 1.6282804012298584, 'Possible mappings': 43904, 'Knowledge compiling time': 19.826852083206177, 'Total time': 35.68768787384033, 'Generating paths time': 2.3150758743286133, 'Finding best mapping': 11.917471408843994}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( worksat(B, C), graduatedfrom(A, C) )
%   then return 0.8250910838598412;  // std dev = 0,179, 121,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=117 */
%   else if ( haswonprize(B, D) )
%   | then if ( haswonprize(A, E) )
%   | | then if ( haswonprize(A, D) )
%   | | | then return 0.7132213988676287;  // std dev = 2,924, 69,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=59 */
%   | | | else return 0.20636322081379868;  // std dev = 7,130, 224,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=78 */
%   | | else if ( graduatedfrom(A, F) )
%   | | | then return 0.11667166237223882;  // std dev = 8,214, 352,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=91 */
%   | | | else return 0.2437421554384933;  // std dev = 7,477, 236,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=91 */
%   | else if ( influences(B, G), graduatedfrom(B, H) )
%   | | then if ( diedin(G, I), iscitizenof(A, J) )
%   | | | then return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.41249676118646883;  // std dev = 4,767, 92,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=51 */
%   | | else if ( worksat(B, K), graduatedfrom(A, L) )
%   | | | then return 0.044589613065614056;  // std dev = 6,689, 295,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=55 */
%   | | | else return 0.140423182591147;  // std dev = 17,403, 1.495,000 (wgt'ed) examples reached here.  /* #neg=1.073 #pos=422 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(B, C), iscitizenof(A, C) )
%   then if ( dealswith(C, D) )
%   | then return 0.6500213581433204;  // std dev = 0,361, 116,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=97 */
%   | else if ( graduatedfrom(A, E), hascurrency(C, F) )
%   | | then return 0.39504418968722677;  // std dev = 0,481, 73,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=42 */
%   | | else return 0.6908304929200362;  // std dev = 0,343, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswonprize(B, G), haswonprize(A, H) )
%   | then if ( haswonprize(B, H) )
%   | | then return 0.598456776854235;  // std dev = 0,354, 61,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=52 */
%   | | else if ( worksat(B, I), graduatedfrom(A, I) )
%   | | | then return 0.7260968668569544;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15962957282769646;  // std dev = 6,757, 207,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=68 */
%   | else if ( diedin(B, J), wasbornin(A, J) )
%   | | then return 0.739398789049205;  // std dev = 0,275, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( iscitizenof(A, K), dealswith(L, K) )
%   | | | then return 0.06511210717966871;  // std dev = 12,888, 972,000 (wgt'ed) examples reached here.  /* #neg=750 #pos=222 */
%   | | | else return 0.14908296307778673;  // std dev = 17,277, 1.426,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=448 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(B, C), iscitizenof(A, C) )
%   then if ( dealswith(C, D), hascurrency(C, E) )
%   | then return 0.6350951869675676;  // std dev = 0,219, 39,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | else if ( hascurrency(C, F), graduatedfrom(A, G) )
%   | | then if ( haswonprize(B, H), owns(G, I) )
%   | | | then return 0.5174575965145534;  // std dev = 2,234, 30,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | | else return 0.19971920858967124;  // std dev = 3,158, 43,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | else return 0.5019679960472898;  // std dev = 0,392, 99,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=79 */
%   else if ( influences(B, A) )
%   | then return 0.7944272449597513;  // std dev = 0,065, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( influences(B, J), graduatedfrom(B, K) )
%   | | then if ( iscitizenof(A, L), iscitizenof(B, M) )
%   | | | then return -0.0052657498539686294;  // std dev = 2,442, 44,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | | else return 0.3034470953312312;  // std dev = 6,037, 153,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=80 */
%   | | else if ( iscitizenof(A, N), livesin(B, N) )
%   | | | then return 0.38711798134512104;  // std dev = 2,736, 34,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | | | else return 0.09484749592918335;  // std dev = 21,588, 2.436,000 (wgt'ed) examples reached here.  /* #neg=1.754 #pos=682 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( dealswith(C, D), graduatedfrom(A, E) )
%   | then return 0.4519553060466753;  // std dev = 0,288, 68,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=61 */
%   | else if ( diedin(B, F), livesin(G, F) )
%   | | then return 0.4373547927518534;  // std dev = 0,395, 39,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | | else return 0.28062088662341295;  // std dev = 0,451, 104,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=66 */
%   else if ( livesin(A, H), livesin(B, H) )
%   | then if ( graduatedfrom(A, I), hascurrency(H, J) )
%   | | then if ( haswonprize(B, K), worksat(B, L) )
%   | | | then return 0.5913203275126006;  // std dev = 0,901, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.022005866152810038;  // std dev = 1,348, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.609023845052435;  // std dev = 0,352, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( iscitizenof(B, M), iscitizenof(A, N) )
%   | | then return 0.0036361412180058875;  // std dev = 0,382, 426,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=84 */
%   | | else if ( influences(B, P), influences(A, Q) )
%   | | | then return 0.4383511495396321;  // std dev = 2,713, 39,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | | | else return 0.1010635245141732;  // std dev = 20,888, 2.181,000 (wgt'ed) examples reached here.  /* #neg=1.511 #pos=670 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(B, C), graduatedfrom(A, C) )
%   then return 0.5161078031567977;  // std dev = 0,345, 92,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=80 */
%   else if ( influences(B, D) )
%   | then if ( influences(A, E), influences(D, F) )
%   | | then if ( worksat(E, G), iscitizenof(B, H) )
%   | | | then return -0.08777464370210747;  // std dev = 0,880, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.5574935578855569;  // std dev = 0,976, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( graduatedfrom(A, I), graduatedfrom(D, I) )
%   | | | then return 0.5147010585380619;  // std dev = 1,517, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.10579885149126682;  // std dev = 8,588, 362,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=133 */
%   | else if ( haswonprize(B, J), haswonprize(A, J) )
%   | | then if ( graduatedfrom(A, K), worksat(L, K) )
%   | | | then return 0.2607451600988073;  // std dev = 2,156, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0.4879624937558291;  // std dev = 1,010, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else if ( iscitizenof(A, M), livesin(B, M) )
%   | | | then return 0.2537209386874536;  // std dev = 3,466, 58,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=37 */
%   | | | else return 0.05531757943651936;  // std dev = 20,467, 2.277,000 (wgt'ed) examples reached here.  /* #neg=1.649 #pos=628 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( diedin(B, C), diedin(A, C) )
%   then return 0.6383178377870882;  // std dev = 0,141, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( haswonprize(B, D), graduatedfrom(B, E) )
%   | then if ( graduatedfrom(A, F), worksat(B, F) )
%   | | then if ( wasbornin(B, G), livesin(A, H) )
%   | | | then return 0.13298273033309416;  // std dev = 0,607, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.48769063311084865;  // std dev = 0,977, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( graduatedfrom(A, E) )
%   | | | then return 0.3854487959227031;  // std dev = 2,131, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | | else return 0.07393384645776856;  // std dev = 9,872, 508,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=176 */
%   | else if ( worksat(B, I), graduatedfrom(A, I) )
%   | | then if ( iscitizenof(A, J), iscitizenof(B, J) )
%   | | | then return 0.2819174883158539;  // std dev = 1,052, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.5835016886971307;  // std dev = 1,103, 67,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=66 */
%   | | else if ( worksat(B, K), graduatedfrom(A, L) )
%   | | | then return -0.01278866945932576;  // std dev = 7,507, 384,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=83 */
%   | | | else return 0.05416111977550115;  // std dev = 18,595, 1.830,000 (wgt'ed) examples reached here.  /* #neg=1.288 #pos=542 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( haswonprize(B, C), haswonprize(A, C) )
%   then if ( influences(D, B), haswonprize(D, C) )
%   | then return -0.23845257455739896;  // std dev = 1,006, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.30806468227662415;  // std dev = 0,284, 70,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=63 */
%   else if ( graduatedfrom(B, E), graduatedfrom(A, E) )
%   | then if ( influences(B, F), haswonprize(F, G) )
%   | | then return -0.07068992441316986;  // std dev = 1,092, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( worksat(B, E), iscitizenof(A, H) )
%   | | | then return 0.18461773711448884;  // std dev = 0,951, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.42328297106204893;  // std dev = 2,423, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | else if ( diedin(B, I), diedin(A, J) )
%   | | then if ( iscitizenof(B, K), happenedin(L, K) )
%   | | | then return 0.047017459365991485;  // std dev = 3,597, 81,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | | else return 0.2326384314507976;  // std dev = 4,315, 87,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   | | else if ( graduatedfrom(A, M), worksat(B, M) )
%   | | | then return 0.40574736755802093;  // std dev = 1,744, 82,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=79 */
%   | | | else return 0.026519995494143706;  // std dev = 21,244, 2.485,000 (wgt'ed) examples reached here.  /* #neg=1.812 #pos=673 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(A, C), worksat(B, C) )
%   then return 0.2946142479760193;  // std dev = 0,187, 121,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=117 */
%   else if ( graduatedfrom(A, D) )
%   | then if ( iscitizenof(A, E), iscitizenof(B, E) )
%   | | then if ( wasbornin(B, F), wasbornin(A, G) )
%   | | | then return 0.3238909309751378;  // std dev = 1,610, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.1290051023635124;  // std dev = 4,007, 90,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=57 */
%   | | else if ( iscitizenof(B, H), worksat(I, D) )
%   | | | then return -0.03442347746587488;  // std dev = 8,736, 542,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=112 */
%   | | | else return 0.03224561153474844;  // std dev = 13,917, 1.043,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=297 */
%   | else if ( influences(B, J) )
%   | | then if ( wasbornin(A, K), wasbornin(B, L) )
%   | | | then return 0.45287948322120775;  // std dev = 1,614, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return 0.10733211490102904;  // std dev = 5,281, 133,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=58 */
%   | | else if ( diedin(A, M), graduatedfrom(B, N) )
%   | | | then return -0.07860614138512767;  // std dev = 3,439, 98,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | | | else return 0.06399757510542443;  // std dev = 12,760, 826,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=272 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(A, C), graduatedfrom(B, C) )
%   then if ( influences(A, D), wasbornin(A, E) )
%   | then return -0.18065100860772434;  // std dev = 0,803, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( worksat(B, C), iscitizenof(B, F) )
%   | | then return 0.10948339777930347;  // std dev = 0,233, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( livesin(A, G) )
%   | | | then return 0.43408481999272025;  // std dev = 0,638, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.2404900318034403;  // std dev = 2,508, 51,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=42 */
%   else if ( graduatedfrom(A, H), worksat(B, H) )
%   | then return 0.25539089278165256;  // std dev = 0,173, 96,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=93 */
%   | else if ( iscitizenof(A, I), iscitizenof(B, I) )
%   | | then if ( diedin(B, J), wasbornin(A, K) )
%   | | | then return 0.32205761435377755;  // std dev = 1,493, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.12698083243807107;  // std dev = 5,236, 141,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=92 */
%   | | else if ( iscitizenof(A, L), dealswith(M, L) )
%   | | | then return -0.022711053839735918;  // std dev = 12,662, 1.048,000 (wgt'ed) examples reached here.  /* #neg=820 #pos=228 */
%   | | | else return 0.04052597427433274;  // std dev = 17,063, 1.492,000 (wgt'ed) examples reached here.  /* #neg=1.043 #pos=449 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(A, C), worksat(B, C) )
%   then if ( iscitizenof(A, D), iscitizenof(B, D) )
%   | then return 0.10618769830285617;  // std dev = 0,169, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else return 0.2235851977185157;  // std dev = 0,172, 90,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=87 */
%   else if ( graduatedfrom(A, E), graduatedfrom(B, E) )
%   | then if ( influences(B, F), haswonprize(F, G) )
%   | | then return -0.23016564670565368;  // std dev = 1,152, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( worksat(B, H), owns(H, I) )
%   | | | then return -0.028537512697840366;  // std dev = 1,220, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.2916403023841851;  // std dev = 1,835, 54,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=50 */
%   | else if ( haswonprize(B, J), haswonprize(A, J) )
%   | | then if ( influences(K, A), graduatedfrom(A, L) )
%   | | | then return -0.0390338244827577;  // std dev = 1,337, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.24165098729882434;  // std dev = 2,030, 52,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=47 */
%   | | else if ( livesin(A, M), iscitizenof(B, M) )
%   | | | then return 0.1993736733800347;  // std dev = 3,059, 59,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=40 */
%   | | | else return 0.009869875889371568;  // std dev = 21,564, 2.586,000 (wgt'ed) examples reached here.  /* #neg=1.887 #pos=699 */


Results
   AUC ROC   = 0.721547
   AUC PR    = 0.641872
   CLL	      = -0.549721
   Precision = 0.826207 at threshold = 0.5
   Recall    = 0.310363
   F1        = 0.451224


Total learning time: 389.329 seconds
Total inference time: 86.73400000000001 seconds
AUC ROC: 0.721547


Dataset: 29_cora_yago2s, Fold: 2, Type: scratch, Time: 06:54:31
{'Precision': [0.826207, 0.5], 'CLL': -0.549721, 'Inference time': 86.73400000000001, 'Recall': 0.310363, 'AUC ROC': 0.721547, 'F1': 0.451224, 'AUC PR': 0.641872, 'Learning time': 389.329}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 21.41339421272278
   Generating paths time   = 2.61331844329834
   Generating mappings time   = 1.5772440433502197
   Possible mappings   = 43904
   Finding best mapping   = 12.043431758880615
   Total time   = 37.64739489555359


Best mapping found: ['venue(A,B) -> graduatedfrom(A,B)', 'author(A,B) -> livesin(A,B)', 'samebib(A,B) -> hasacademicadvisor(A,B)', 'title(A,B) -> wasbornin(A,B)'] 

Transferred target predicate: hasacademicadvisor 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
0;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
0;false,false;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
0;true,false;livesin(A, E), livesin(B, E).;false;false
0;false;livesin(A, F), livesin(B, F).;false;true
1;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
1;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
1;false,false;graduatedfrom(A, H), graduatedfrom(B, H).;false;false
1;true,false;livesin(A, E), livesin(B, E).;false;false
1;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
1;false;livesin(A, F), livesin(B, F).;true;true
2;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
2;false,true;livesin(A, G), livesin(B, G).;false;false
2;false,false;livesin(A, H), livesin(B, H).;false;false
2;true,false;livesin(A, E), livesin(B, E).;false;false
2;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
2;false;graduatedfrom(A, F), graduatedfrom(B, F).;true;true
3;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
3;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;false
3;false;livesin(A, E), livesin(B, E).;false;false
4;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
4;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
4;false,false;graduatedfrom(A, H), graduatedfrom(B, H).;false;false
4;true,false;graduatedfrom(A, E), graduatedfrom(B, E).;false;false
4;true;livesin(A, D), livesin(B, D).;false;true
4;false;livesin(A, F), livesin(B, F).;true;true
5;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
5;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
5;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
5;true,false;livesin(A, E), livesin(B, E).;false;false
5;false;livesin(A, F), livesin(B, F).;true;false
6;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
6;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
6;false,false;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
6;true,false;livesin(A, E), livesin(B, E).;false;false
6;false;livesin(A, F), livesin(B, F).;false;true
7;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
7;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
7;true,false;livesin(A, E), livesin(B, E).;false;false
7;false;livesin(A, F), livesin(B, F).;false;false
8;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
8;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
8;false,true;graduatedfrom(A, G), graduatedfrom(B, G).;false;false
8;true,false;livesin(A, E), livesin(B, E).;false;false
8;false;livesin(A, F), livesin(B, F).;true;false
9;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true
9;false,true;livesin(A, G), livesin(B, G).;false;false
9;false,false;livesin(A, H), livesin(B, H).;false;false
9;true,false;livesin(A, E), livesin(B, E).;false;false
9;true;graduatedfrom(A, D), graduatedfrom(B, D).;false;true
9;false;graduatedfrom(A, F), graduatedfrom(B, F).;true;true


WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( livesin(A, E), livesin(B, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7470378239884011;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( livesin(A, F), livesin(B, F) )
%   | then return 0.5670096945931838;  // std dev = 4,038, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   | else if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.7438632208137985;  // std dev = 2,662, 70,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=62 */
%   | | else return 0.16316541258028366;  // std dev = 24,061, 2.731,000 (wgt'ed) examples reached here.  /* #neg=1.898 #pos=833 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( livesin(A, E), livesin(B, E) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6302322013528495;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( livesin(A, F), livesin(B, F) )
%   | then if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.631484376219424;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.4687859635210116;  // std dev = 3,909, 72,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=50 */
%   | else if ( graduatedfrom(A, H), graduatedfrom(B, H) )
%   | | then return 0.6276658725961731;  // std dev = 2,662, 70,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=62 */
%   | | else return 0.14212023635753968;  // std dev = 24,061, 2.731,000 (wgt'ed) examples reached here.  /* #neg=1.898 #pos=833 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( livesin(A, E), livesin(B, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4930252128087158;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( graduatedfrom(A, F), graduatedfrom(B, F) )
%   | then if ( livesin(A, G), livesin(B, G) )
%   | | then return 0.503143620612838;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.49122276170877005;  // std dev = 2,662, 70,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=62 */
%   | else if ( livesin(A, H), livesin(B, H) )
%   | | then return 0.3767102895575586;  // std dev = 3,909, 72,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=50 */
%   | | else return 0.12180129421466582;  // std dev = 24,061, 2.731,000 (wgt'ed) examples reached here.  /* #neg=1.898 #pos=833 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3759414395840772;  // std dev = 0,944, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( livesin(A, E), livesin(B, E) )
%   | then return 0.2982393019622318;  // std dev = 4,023, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   | else return 0.10954360187651113;  // std dev = 24,308, 2.801,000 (wgt'ed) examples reached here.  /* #neg=1.906 #pos=895 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( livesin(A, D), livesin(B, D) )
%   | then return 0.3298352647361015;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( graduatedfrom(A, E), graduatedfrom(B, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.279144790179416;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( livesin(A, F), livesin(B, F) )
%   | then if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.3073393061920772;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.21674333049449349;  // std dev = 3,909, 72,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=50 */
%   | else if ( graduatedfrom(A, H), graduatedfrom(B, H) )
%   | | then return 0.3427466626641934;  // std dev = 2,662, 70,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=62 */
%   | | else return 0.08462207280725116;  // std dev = 24,061, 2.731,000 (wgt'ed) examples reached here.  /* #neg=1.898 #pos=833 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( livesin(A, E), livesin(B, E) )
%   | | then return 0.26138826399301096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2150979384857748;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( livesin(A, F), livesin(B, F) )
%   | then if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.23298917340896486;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.16261539842573017;  // std dev = 3,909, 72,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=50 */
%   | else return 0.07448697637109526;  // std dev = 24,258, 2.801,000 (wgt'ed) examples reached here.  /* #neg=1.906 #pos=895 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( livesin(A, E), livesin(B, E) )
%   | | then return 0.21413914182256089;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16969240378625533;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( livesin(A, F), livesin(B, F) )
%   | then return 0.12753367257047835;  // std dev = 4,019, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   | else if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.24245719454979975;  // std dev = 2,662, 70,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=62 */
%   | | else return 0.05607400337273177;  // std dev = 24,061, 2.731,000 (wgt'ed) examples reached here.  /* #neg=1.898 #pos=833 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( livesin(A, E), livesin(B, E) )
%   | | then return 0.1803034576556094;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1367277481074273;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( livesin(A, F), livesin(B, F) )
%   | then return 0.0969619173485575;  // std dev = 4,020, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   | else return 0.04902909746495657;  // std dev = 24,237, 2.801,000 (wgt'ed) examples reached here.  /* #neg=1.906 #pos=895 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( livesin(A, E), livesin(B, E) )
%   | | then return 0.15517233106318573;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.11212619041191779;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( livesin(A, F), livesin(B, F) )
%   | then if ( graduatedfrom(A, G), graduatedfrom(B, G) )
%   | | then return 0.13308080886598134;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.0685603442711556;  // std dev = 3,909, 72,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=50 */
%   | else return 0.03947737454156612;  // std dev = 24,236, 2.801,000 (wgt'ed) examples reached here.  /* #neg=1.906 #pos=895 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( livesin(A, E), livesin(B, E) )
%   | | then return 0.1359000585722172;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.09328757816077965;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( graduatedfrom(A, F), graduatedfrom(B, F) )
%   | then if ( livesin(A, G), livesin(B, G) )
%   | | then return 0.10729859263294803;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.17057178687988064;  // std dev = 2,662, 70,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=62 */
%   | else if ( livesin(A, H), livesin(B, H) )
%   | | then return 0.05265026679945186;  // std dev = 3,909, 72,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=50 */
%   | | else return 0.028074194765294082;  // std dev = 24,061, 2.731,000 (wgt'ed) examples reached here.  /* #neg=1.898 #pos=833 */


Results
   AUC ROC   = 0.556285
   AUC PR    = 0.447322
   CLL	      = -0.61225
   Precision = 0.790476 at threshold = 0.5
   Recall    = 0.129016
   F1        = 0.221826


Total learning time: 210.276 seconds
Total inference time: 86.1 seconds
AUC ROC: 0.556285


Structure after Parameter Learning
[['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false,false': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'true,false': 'livesin(A, E), livesin(B, E)', 'false': 'livesin(A, F), livesin(B, F)'}, {'false,true': [4.038, 23, 56], 'true,false,false': [0.943, 1, 8], 'true,true': [0.0, 0, 5], 'false,false,true': [2.662, 8, 62], 'false,false,false': [24.061, 1898, 833], 'true,false,true': [0.0, 0, 1]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'false,true': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'false,false': 'graduatedfrom(A, H), graduatedfrom(B, H)', 'true,false': 'livesin(A, E), livesin(B, E)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false': 'livesin(A, F), livesin(B, F)'}, {'true,false,false': [0.943, 1, 8], 'true,true': [0.0, 0, 5], 'false,false,true': [2.662, 8, 62], 'false,false,false': [24.061, 1898, 833], 'false,true,false': [3.909, 22, 50], 'true,false,true': [0.0, 0, 1], 'false,true,true': [0.926, 1, 6]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'false,true': 'livesin(A, G), livesin(B, G)', 'false,false': 'livesin(A, H), livesin(B, H)', 'true,false': 'livesin(A, E), livesin(B, E)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false': 'graduatedfrom(A, F), graduatedfrom(B, F)'}, {'true,false,false': [0.943, 1, 8], 'true,true': [0.0, 0, 5], 'false,false,true': [3.909, 22, 50], 'false,false,false': [24.061, 1898, 833], 'false,true,false': [2.662, 8, 62], 'true,false,true': [0.0, 0, 1], 'false,true,true': [0.926, 1, 6]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false': 'livesin(A, E), livesin(B, E)'}, {'false,true': [4.023, 23, 56], 'false,false': [24.308, 1906, 895], 'true,true': [1.49e-08, 0, 5], 'true,false': [0.944, 1, 9]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'false,true': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'false,false': 'graduatedfrom(A, H), graduatedfrom(B, H)', 'true,false': 'graduatedfrom(A, E), graduatedfrom(B, E)', 'true': 'livesin(A, D), livesin(B, D)', 'false': 'livesin(A, F), livesin(B, F)'}, {'true,false,false': [0.943, 1, 8], 'true,true': [0.0, 0, 1], 'false,false,true': [2.662, 8, 62], 'false,false,false': [24.061, 1898, 833], 'false,true,false': [3.909, 22, 50], 'true,false,true': [0.0, 0, 5], 'false,true,true': [0.926, 1, 6]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false,true': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'true,false': 'livesin(A, E), livesin(B, E)', 'false': 'livesin(A, F), livesin(B, F)'}, {'true,false,false': [0.943, 1, 8], 'false,false': [24.258, 1906, 895], 'true,true': [0.0, 0, 5], 'false,true,false': [3.909, 22, 50], 'true,false,true': [0.0, 0, 1], 'false,true,true': [0.926, 1, 6]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false,false': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'true,false': 'livesin(A, E), livesin(B, E)', 'false': 'livesin(A, F), livesin(B, F)'}, {'false,true': [4.019, 23, 56], 'true,false,false': [0.943, 1, 8], 'true,true': [0.0, 0, 5], 'false,false,true': [2.662, 8, 62], 'false,false,false': [24.061, 1898, 833], 'true,false,true': [0.0, 0, 1]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'true,false': 'livesin(A, E), livesin(B, E)', 'false': 'livesin(A, F), livesin(B, F)'}, {'false,true': [4.02, 23, 56], 'true,false,false': [0.943, 1, 8], 'true,false,true': [0.0, 0, 1], 'false,false': [24.237, 1906, 895], 'true,true': [0.0, 0, 5]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false,true': 'graduatedfrom(A, G), graduatedfrom(B, G)', 'true,false': 'livesin(A, E), livesin(B, E)', 'false': 'livesin(A, F), livesin(B, F)'}, {'true,false,false': [0.943, 1, 8], 'false,false': [24.236, 1906, 895], 'true,true': [0.0, 0, 5], 'false,true,false': [3.909, 22, 50], 'true,false,true': [0.0, 0, 1], 'false,true,true': [0.926, 1, 6]}], ['hasacademicadvisor(A, B)', {'': 'wasbornin(A, C), wasbornin(B, C)', 'false,true': 'livesin(A, G), livesin(B, G)', 'false,false': 'livesin(A, H), livesin(B, H)', 'true,false': 'livesin(A, E), livesin(B, E)', 'true': 'graduatedfrom(A, D), graduatedfrom(B, D)', 'false': 'graduatedfrom(A, F), graduatedfrom(B, F)'}, {'true,false,false': [0.943, 1, 8], 'true,true': [0.0, 0, 5], 'false,false,true': [3.909, 22, 50], 'false,false,false': [24.061, 1898, 833], 'false,true,false': [2.662, 8, 62], 'true,false,true': [0.0, 0, 1], 'false,true,true': [0.926, 1, 6]}]]
[{'': [0.06222222222222188, 0.22117078993053998], 'true': [0.0, 0.08999999999999986], 'false,false': [0.1012244897959176, 0.21198142594597807], 'false': [0.20637718314372658, 0.21743012421867386], 'true,false': [0.0, 0.09876543209876537]}, {'': [0.061170617750960034, 0.21760938177190933], 'false,true': [0.12244897959183655, 0.21219135802469155], 'false,false': [0.10122448979591796, 0.21198142594600253], 'false': [0.2063771831437275, 0.2149580096003565], 'true': [0.0, 0.08960564832327682], 'true,false': [0.0, 0.09876543209876552]}, {'': [0.06019200202774755, 0.21410701343664332], 'false,true': [0.12244897959183672, 0.10122448979591882], 'false,false': [0.21219135802469052, 0.21198142594599728], 'false': [0.10316573323827644, 0.2136130347737978], 'true': [-4.4408920985006264e-17, 0.08923866742707202], 'true,false': [0.0, 0.09876543209876548]}, {'': [0.05977133131985225, 0.21173703714105407], 'true': [4.4408920985006264e-17, 0.08908091591161124], 'false': [0.20491694254933884, 0.21095269833481667]}, {'': [0.05970945397841545, 0.2111510748049936], 'false,true': [0.12244897959183676, 0.21219135802469158], 'false,false': [0.10122448979591864, 0.21198142594599262], 'false': [0.20490231951422513, 0.21083699104335837], 'true': [0.0, 0.06388875691130731], 'true,false': [-2.2204460492503132e-17, 0.09876543209876543]}, {'': [0.05966701964095928, 0.21018097068262476], 'false,true': [0.12244897959183676, 0.2121913580246914], 'true,false': [0.0, 0.09876543209876543], 'false': [0.2046394446617924, 0.210093007532615], 'true': [0.0, 0.0890817403700898]}, {'': [0.059659752200486804, 0.210026714128958], 'true': [-5.551115123125783e-18, 0.08906668501587503], 'false,false': [0.1012244897959181, 0.21198142594600203], 'false': [0.204508169149251, 0.21005995219938928], 'true,false': [0.0, 0.09876543209876545]}, {'': [0.05966136869371496, 0.20963465596923175], 'true': [0.0, 0.08905978471052536], 'false': [0.2045433667723466, 0.20971522855691327], 'true,false': [0.0, 0.09876543209876543]}, {'': [0.05966346810897161, 0.20960164307505855], 'false,true': [0.12244897959183675, 0.21219135802469138], 'true,false': [0.0, 0.09876543209876544], 'false': [0.20457568128439377, 0.20971017692253588], 'true': [0.0, 0.0890556562091361]}, {'': [0.05966358658508288, 0.2095827080898494], 'false,true': [0.12244897959183673, 0.10122448979591846], 'false,false': [0.21219135802469125, 0.21198142594600064], 'false': [0.10348485639804393, 0.21200193428468037], 'true': [0.0, 0.08905231300270225], 'true,false': [0.0, 0.09876543209876543]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '0;true;graduatedfrom(A, D), graduatedfrom(B, D).;true;true', '0;true,false;livesin(A, E), livesin(B, E).;true;true', '1;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '1;true;graduatedfrom(A, D), graduatedfrom(B, D).;true;true', '1;true,false;livesin(A, E), livesin(B, E).;true;true', '2;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '2;true;graduatedfrom(A, D), graduatedfrom(B, D).;true;true', '2;true,false;livesin(A, E), livesin(B, E).;true;true', '3;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '3;true;graduatedfrom(A, D), graduatedfrom(B, D).;true;true', '4;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '4;true;livesin(A, D), livesin(B, D).;true;true', '4;true,false;graduatedfrom(A, E), graduatedfrom(B, E).;true;true', '5;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '5;true;graduatedfrom(A, D), graduatedfrom(B, D).;true;true', '5;true,false;livesin(A, E), livesin(B, E).;true;true', '6;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '6;true;graduatedfrom(A, D), graduatedfrom(B, D).;true;true', '6;true,false;livesin(A, E), livesin(B, E).;true;true', '7;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '7;true;graduatedfrom(A, D), graduatedfrom(B, D).;true;true', '7;true,false;livesin(A, E), livesin(B, E).;true;true', '8;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '8;true;graduatedfrom(A, D), graduatedfrom(B, D).;true;true', '8;true,false;livesin(A, E), livesin(B, E).;true;true', '9;;hasacademicadvisor(A, B) :- wasbornin(A, C), wasbornin(B, C).;true;true', '9;true;graduatedfrom(A, D), graduatedfrom(B, D).;true;true', '9;true,false;livesin(A, E), livesin(B, E).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7581489350995122;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( iscitizenof(B, E), iscitizenof(A, E) )
%   | then if ( graduatedfrom(A, F), worksat(B, F) )
%   | | then return 0.8581489350995116;  // std dev = 2,15e-07, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( graduatedfrom(A, G), haswonprize(A, H) )
%   | | | then return 0.33183314562582816;  // std dev = 3,078, 38,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return 0.5970024382842263;  // std dev = 5,504, 157,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=116 */
%   | else if ( haswonprize(B, I), haswonprize(A, I) )
%   | | then if ( livesin(A, J), iscitizenof(B, K) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.727714152490816;  // std dev = 2,284, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | else if ( iscitizenof(B, L), iscitizenof(A, M) )
%   | | | then return 0.041771763883632095;  // std dev = 7,773, 403,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=74 */
%   | | | else return 0.16188299703029072;  // std dev = 21,550, 2.196,000 (wgt'ed) examples reached here.  /* #neg=1.529 #pos=667 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( influences(B, E), worksat(B, F) )
%   | then if ( haswonprize(A, G), worksat(A, H) )
%   | | then if ( influences(I, B), created(E, J) )
%   | | | then return 0.04042036793899966;  // std dev = 0,891, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.7624627340933966;  // std dev = 0,966, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( influences(K, B), worksat(K, L) )
%   | | | then return -0.08904872152197854;  // std dev = 0,962, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.3145309954309127;  // std dev = 5,607, 128,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=62 */
%   | else if ( worksat(B, M), graduatedfrom(A, M) )
%   | | then return 0.7690708258707499;  // std dev = 0,153, 86,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=84 */
%   | | else if ( iscitizenof(A, N), iscitizenof(B, N) )
%   | | | then return 0.47034383151344134;  // std dev = 6,118, 179,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=124 */
%   | | | else return 0.10811598757911316;  // std dev = 21,860, 2.449,000 (wgt'ed) examples reached here.  /* #neg=1.788 #pos=661 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then return 0.518003982954269;  // std dev = 0,246, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( iscitizenof(B, D), iscitizenof(A, D) )
%   | then if ( influences(A, E), dealswith(F, D) )
%   | | then if ( wasbornin(A, G), haswonprize(A, H) )
%   | | | then return -0.28778398917669407;  // std dev = 0,064, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.3178911010877477;  // std dev = 1,410, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( worksat(B, I), owns(I, J) )
%   | | | then return 0.2437921797998008;  // std dev = 3,236, 48,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | | | else return 0.47387145728291474;  // std dev = 4,939, 165,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=133 */
%   | else if ( iscitizenof(A, K), iscitizenof(B, L) )
%   | | then if ( graduatedfrom(A, M), graduatedfrom(B, M) )
%   | | | then return 0.8241426979591729;  // std dev = 0,114, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.00812214667857551;  // std dev = 7,503, 403,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=70 */
%   | | else if ( graduatedfrom(B, N), worksat(A, N) )
%   | | | then return 0.6708633090962385;  // std dev = 1,298, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.1261420100920482;  // std dev = 21,488, 2.224,000 (wgt'ed) examples reached here.  /* #neg=1.533 #pos=691 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then return 0.38967030869103164;  // std dev = 0,246, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( graduatedfrom(B, D), graduatedfrom(A, D) )
%   | then if ( iscitizenof(A, E), iscitizenof(B, E) )
%   | | then if ( diedin(A, F), hascapital(E, G) )
%   | | | then return 0.29679686197121036;  // std dev = 1,111, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.4907941163141994;  // std dev = 0,286, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( worksat(B, H), owns(H, I) )
%   | | | then return 0.2876230989735506;  // std dev = 1,204, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.6414945004290287;  // std dev = 1,820, 46,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | else if ( iscitizenof(A, J), iscitizenof(B, J) )
%   | | then if ( livesin(A, K), wasbornin(B, L) )
%   | | | then return 0.09223544794739512;  // std dev = 2,616, 29,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.3290718288889173;  // std dev = 5,448, 174,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=130 */
%   | | else if ( influences(B, M), graduatedfrom(B, N) )
%   | | | then return 0.22220889863514265;  // std dev = 6,762, 197,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=85 */
%   | | | else return 0.07489616046015093;  // std dev = 21,457, 2.403,000 (wgt'ed) examples reached here.  /* #neg=1.749 #pos=654 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then return 0.2959329077002379;  // std dev = 0,247, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( haswonprize(B, D), haswonprize(A, D) )
%   | then if ( iscitizenof(A, E), iscitizenof(B, F) )
%   | | then if ( worksat(B, G), exports(E, H) )
%   | | | then return 0.5249353574298494;  // std dev = 0,343, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.08417851215921957;  // std dev = 1,858, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( wasbornin(A, I), livesin(J, I) )
%   | | | then return 0.4009523881321731;  // std dev = 1,872, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.6286291889758217;  // std dev = 0,986, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( graduatedfrom(B, K), graduatedfrom(A, K) )
%   | | then if ( worksat(B, L), worksat(A, M) )
%   | | | then return 0.3048339694708396;  // std dev = 1,690, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.494604040878546;  // std dev = 1,878, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | else if ( influences(A, N), influences(B, P) )
%   | | | then return 0.29656845814621063;  // std dev = 3,484, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | | | else return 0.0706838597263575;  // std dev = 22,726, 2.686,000 (wgt'ed) examples reached here.  /* #neg=1.882 #pos=804 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.2726478828644229;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( livesin(A, E), livesin(B, E) )
%   | | then return 0.30981953013765706;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( diedin(B, F) )
%   | | | then return 0.30981953013765706;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05981953013765706;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( graduatedfrom(A, G), worksat(B, G) )
%   | then return 0.49710193735935354;  // std dev = 0,206, 99,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=97 */
%   | else if ( livesin(B, H), livesin(A, H) )
%   | | then if ( iscitizenof(A, H), diedin(A, I) )
%   | | | then return 0.03655292680084319;  // std dev = 1,483, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.3981904445350318;  // std dev = 3,377, 62,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=44 */
%   | | else if ( influences(B, J), influences(K, A) )
%   | | | then return 0.3290031688795819;  // std dev = 3,361, 49,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=30 */
%   | | | else return 0.04672785998493581;  // std dev = 22,277, 2.660,000 (wgt'ed) examples reached here.  /* #neg=1.885 #pos=775 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.22202965896122406;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.16750534048945576;  // std dev = 0,291, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( livesin(B, E), livesin(A, E) )
%   | then if ( diedin(B, F), iscitizenof(A, G) )
%   | | then return 0.5473063211186291;  // std dev = 0,144, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( diedin(B, H), happenedin(I, H) )
%   | | | then return -0.31226796263237816;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.26625860452277444;  // std dev = 3,546, 67,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=47 */
%   | else if ( influences(B, J), graduatedfrom(B, K) )
%   | | then if ( influences(B, A) )
%   | | | then return 0.6383129879327778;  // std dev = 0,365, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.12682654608676774;  // std dev = 6,617, 205,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=89 */
%   | | else if ( worksat(B, L), worksat(A, L) )
%   | | | then return 0.35684307440579294;  // std dev = 1,444, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | | else return 0.04237757824635308;  // std dev = 21,705, 2.555,000 (wgt'ed) examples reached here.  /* #neg=1.788 #pos=767 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then return 0.15272982583293887;  // std dev = 0,239, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( iscitizenof(A, D), iscitizenof(B, D) )
%   | then if ( hascapital(D, E), graduatedfrom(A, F) )
%   | | then if ( influences(A, G), dealswith(H, D) )
%   | | | then return -0.15198073814026175;  // std dev = 1,344, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.11810272264820432;  // std dev = 4,817, 144,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=104 */
%   | | else if ( worksat(B, I), owns(I, J) )
%   | | | then return -0.0183404469136363;  // std dev = 1,492, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2954923316731955;  // std dev = 2,617, 63,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=54 */
%   | else if ( iscitizenof(A, K) )
%   | | then if ( haswonprize(A, L), haswonprize(B, L) )
%   | | | then return 0.31766734994469703;  // std dev = 1,926, 28,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | | else return 4.77965842959257E-4;  // std dev = 13,920, 1.158,000 (wgt'ed) examples reached here.  /* #neg=878 #pos=280 */
%   | | else if ( worksat(B, M), graduatedfrom(A, M) )
%   | | | then return 0.45082550903590396;  // std dev = 1,213, 47,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | | else return 0.052741182896620845;  // std dev = 16,926, 1.420,000 (wgt'ed) examples reached here.  /* #neg=983 #pos=437 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.16401717587069597;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( livesin(A, E), livesin(B, E) )
%   | | then return 0.19294014200193355;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( iscitizenof(B, F) )
%   | | | then return 0.21809759759926423;  // std dev = 0,046, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04657758483251201;  // std dev = 0,830, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( worksat(B, G), graduatedfrom(A, G) )
%   | then return 0.30555575266913393;  // std dev = 0,186, 99,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=97 */
%   | else if ( worksat(B, H), graduatedfrom(I, H) )
%   | | then if ( influences(B, J), iscitizenof(A, K) )
%   | | | then return 0.17114078939610766;  // std dev = 3,777, 65,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=36 */
%   | | | else return -0.036685347976677225;  // std dev = 11,070, 787,000 (wgt'ed) examples reached here.  /* #neg=599 #pos=188 */
%   | | else if ( worksat(A, L), graduatedfrom(M, L) )
%   | | | then return -0.0055740402853028705;  // std dev = 10,488, 636,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=169 */
%   | | | else return 0.07849508241223041;  // std dev = 16,226, 1.293,000 (wgt'ed) examples reached here.  /* #neg=832 #pos=461 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(A, C), wasbornin(B, C) )
%   then if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then return 0.14274763243051314;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( livesin(A, E), livesin(B, E) )
%   | | then return 0.16465973872441797;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( worksat(A, F), graduatedfrom(A, G) )
%   | | | then return -0.05906095363631897;  // std dev = 0,806, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19936069892260838;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( worksat(B, H), graduatedfrom(A, H) )
%   | then return 0.24779410788828227;  // std dev = 0,175, 99,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=97 */
%   | else if ( worksat(B, I), graduatedfrom(A, J) )
%   | | then if ( haswonprize(B, K), wasbornin(A, L) )
%   | | | then return 0.11619204389948204;  // std dev = 3,904, 82,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=36 */
%   | | | else return -0.06214731094525089;  // std dev = 8,066, 451,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=99 */
%   | | else if ( worksat(A, M), graduatedfrom(A, N) )
%   | | | then return -0.009586563755854406;  // std dev = 9,389, 511,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=133 */
%   | | | else return 0.05051464824695442;  // std dev = 18,471, 1.737,000 (wgt'ed) examples reached here.  /* #neg=1.151 #pos=586 */


Results
   AUC ROC   = 0.718515
   AUC PR    = 0.632062
   CLL	      = -0.556614
   Precision = 0.818966 at threshold = 0.5
   Recall    = 0.295337
   F1        = 0.43412


Total learning time: 384.837 seconds
Total inference time: 59.574 seconds
AUC ROC: 0.718515


Refined model AUC ROC: 0.718515


Dataset: 29_cora_yago2s, Fold: 3, Type: transfer, Time: 07:07:52
{'Precision': [0.818966, 0.5], 'Parameter Learning results': {'Precision': [0.790476, 0.5], 'CLL': -0.61225, 'Inference time': 86.1, 'Recall': 0.129016, 'AUC ROC': 0.556285, 'F1': 0.221826, 'AUC PR': 0.447322, 'Learning time': 210.276}, 'CLL': -0.556614, 'Inference time': 59.574, 'Recall': 0.295337, 'AUC ROC': 0.718515, 'F1': 0.43412, 'AUC PR': 0.632062, 'Learning time': 595.113, 'Mapping results': {'Generating mappings time': 1.5772440433502197, 'Possible mappings': 43904, 'Knowledge compiling time': 21.41339421272278, 'Total time': 37.64739489555359, 'Generating paths time': 2.61331844329834, 'Finding best mapping': 12.043431758880615}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(B, C), iscitizenof(A, C) )
%   then if ( graduatedfrom(A, D), worksat(B, D) )
%   | then return 0.8581489350995115;  // std dev = 2,38e-07, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( worksat(B, E), owns(E, F) )
%   | | then if ( diedin(B, G), livesin(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3859267128772901;  // std dev = 2,995, 36,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | else if ( exports(C, I), influences(A, J) )
%   | | | then return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.6389708529077297;  // std dev = 4,999, 146,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=114 */
%   else if ( graduatedfrom(B, K), graduatedfrom(A, K) )
%   | then return 0.7331489350995124;  // std dev = 0,331, 56,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=49 */
%   | else if ( iscitizenof(B, L), iscitizenof(A, M) )
%   | | then return 0.033891509356938604;  // std dev = 0,381, 404,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=71 */
%   | | else if ( haswonprize(B, N), haswonprize(A, N) )
%   | | | then return 0.7152917922423685;  // std dev = 2,268, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | | | else return 0.15370860207453063;  // std dev = 21,216, 2.162,000 (wgt'ed) examples reached here.  /* #neg=1.523 #pos=639 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(B, C), iscitizenof(A, C) )
%   then if ( haswonprize(A, D), exports(C, E) )
%   | then if ( livesin(A, F), wasbornin(B, G) )
%   | | then if ( hascurrency(C, H), happenedin(I, G) )
%   | | | then return 0.5222416527279824;  // std dev = 0,879, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1925319289156029;  // std dev = 0,100, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( influences(A, J), wasbornin(A, K) )
%   | | | then return -0.1659513054274715;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.473393075531086;  // std dev = 3,115, 48,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=34 */
%   | else return 0.5612129171674692;  // std dev = 0,391, 167,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=133 */
%   else if ( haswonprize(B, L), haswonprize(A, L) )
%   | then return 0.579775473209949;  // std dev = 0,378, 54,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=44 */
%   | else if ( diedin(B, M), diedin(A, M) )
%   | | then return 0.7334059473174515;  // std dev = 0,271, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else if ( iscitizenof(A, N), iscitizenof(B, P) )
%   | | | then return 0.029988524482588746;  // std dev = 7,562, 399,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=71 */
%   | | | else return 0.13753155006947043;  // std dev = 21,364, 2.187,000 (wgt'ed) examples reached here.  /* #neg=1.529 #pos=658 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(B, C), iscitizenof(A, C) )
%   then if ( dealswith(C, D), dealswith(E, C) )
%   | then return 0.48063448586724633;  // std dev = 0,353, 116,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=96 */
%   | else if ( isleaderof(F, C), created(F, G) )
%   | | then if ( graduatedfrom(A, H), worksat(B, H) )
%   | | | then return 0.601660356672387;  // std dev = 0,033, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2284137715912101;  // std dev = 4,354, 82,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | | else return 0.5232425404036328;  // std dev = 0,327, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( graduatedfrom(B, I), graduatedfrom(A, I) )
%   | then return 0.5749827461725213;  // std dev = 0,328, 56,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=49 */
%   | else if ( influences(B, J), worksat(B, K) )
%   | | then if ( haswonprize(B, L), livesin(A, M) )
%   | | | then return 0.6030188773217529;  // std dev = 1,776, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.23224827897078815;  // std dev = 5,431, 127,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=53 */
%   | | else if ( graduatedfrom(A, N), worksat(B, N) )
%   | | | then return 0.7650254770080563;  // std dev = 1,379, 45,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | | else return 0.08275936197160923;  // std dev = 21,397, 2.417,000 (wgt'ed) examples reached here.  /* #neg=1.782 #pos=635 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(B, C), worksat(A, C) )
%   then return 0.49772712010756465;  // std dev = 0,305, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   else if ( iscitizenof(A, D), iscitizenof(B, D) )
%   | then if ( exports(D, E), haswonprize(A, F) )
%   | | then if ( haswonprize(B, F), worksat(B, G) )
%   | | | then return 0.5605946752258297;  // std dev = 0,188, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14147372058404165;  // std dev = 3,334, 55,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=28 */
%   | | else if ( isleaderof(H, D), created(H, I) )
%   | | | then return 0.2762596407127109;  // std dev = 4,206, 93,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=65 */
%   | | | else return 0.4395259534537447;  // std dev = 2,101, 62,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=57 */
%   | else if ( livesin(B, J), livesin(A, J) )
%   | | then if ( iscitizenof(K, J), holdspoliticalposition(K, L) )
%   | | | then return 0.36245596256182283;  // std dev = 3,137, 42,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=24 */
%   | | | else return 0.7514860159612545;  // std dev = 0,189, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( iscitizenof(B, M), iscitizenof(A, N) )
%   | | | then return 0.01752283540119976;  // std dev = 7,574, 408,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=78 */
%   | | | else return 0.10131667923746256;  // std dev = 21,049, 2.193,000 (wgt'ed) examples reached here.  /* #neg=1.519 #pos=674 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( graduatedfrom(A, D), worksat(B, D) )
%   | then return 0.3737537767189324;  // std dev = 0,143, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( hascapital(C, E), graduatedfrom(A, F) )
%   | | then if ( exports(C, G), diedin(H, E) )
%   | | | then return 0.13840207055309653;  // std dev = 4,874, 116,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=69 */
%   | | | else return 0.4372953329266614;  // std dev = 0,142, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.29454324829652395;  // std dev = 0,361, 74,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=60 */
%   else if ( graduatedfrom(B, I), graduatedfrom(A, I) )
%   | then return 0.40497943171662776;  // std dev = 0,330, 56,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=49 */
%   | else if ( iscitizenof(A, J), graduatedfrom(A, K) )
%   | | then if ( influences(B, L), livesin(A, J) )
%   | | | then return 0.22696953279381185;  // std dev = 2,544, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.020315056065544193;  // std dev = 11,036, 738,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=165 */
%   | | else if ( influences(B, M), influences(A, N) )
%   | | | then return 0.4299789681070347;  // std dev = 2,915, 39,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.08475672172387583;  // std dev = 19,015, 1.802,000 (wgt'ed) examples reached here.  /* #neg=1.260 #pos=542 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( livesin(B, C), livesin(A, C) )
%   then if ( iscitizenof(A, C), diedin(A, D) )
%   | then if ( isleaderof(E, D), iscitizenof(B, C) )
%   | | then return 0.33194905363007016;  // std dev = 0,064, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.12877221425756477;  // std dev = 0,414, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( graduatedfrom(B, F), hascapital(C, G) )
%   | | then return 0.4217668531071448;  // std dev = 0,372, 40,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | else if ( worksat(B, H), worksat(A, I) )
%   | | | then return 0.5499755418351218;  // std dev = 0,246, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1126695094255096;  // std dev = 1,899, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( worksat(B, J), worksat(A, J) )
%   | then return 0.4277012418401706;  // std dev = 0,290, 43,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | else if ( influences(B, A) )
%   | | then return 0.7410895824476108;  // std dev = 0,109, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( livesin(A, K), iscitizenof(B, L) )
%   | | | then return -0.02721287342216229;  // std dev = 5,845, 252,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=57 */
%   | | | else return 0.06729096925010493;  // std dev = 21,872, 2.503,000 (wgt'ed) examples reached here.  /* #neg=1.709 #pos=794 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( influences(B, C), graduatedfrom(B, D) )
%   then if ( influences(A, E), worksat(B, F) )
%   | then if ( influences(G, A) )
%   | | then return 0.024826079736676925;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6802058122470845;  // std dev = 0,107, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( influences(B, A) )
%   | | then return 0.5544348170283329;  // std dev = 0,123, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( diedin(C, H), wasbornin(B, I) )
%   | | | then return -0.1327326663878441;  // std dev = 1,317, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.1646369870442057;  // std dev = 6,114, 172,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=78 */
%   else if ( influences(A, J), haswonprize(B, K) )
%   | then return -0.08835910526832678;  // std dev = 0,337, 81,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
%   | else if ( worksat(B, L), graduatedfrom(A, L) )
%   | | then return 0.44086507604432273;  // std dev = 0,219, 92,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=90 */
%   | | else if ( worksat(B, M), graduatedfrom(N, M) )
%   | | | then return -0.01792756361935485;  // std dev = 10,742, 731,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=176 */
%   | | | else return 0.06669624173312365;  // std dev = 18,526, 1.775,000 (wgt'ed) examples reached here.  /* #neg=1.192 #pos=583 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( influences(A, D), haswonprize(B, E) )
%   | then return -0.18033318265865042;  // std dev = 0,782, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( worksat(B, F), isleaderof(G, C) )
%   | | then return 0.08806416520539041;  // std dev = 0,368, 108,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=77 */
%   | | else if ( graduatedfrom(A, H), worksat(A, I) )
%   | | | then return 0.05445768421569909;  // std dev = 2,245, 28,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0.24033808316107919;  // std dev = 3,257, 89,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=74 */
%   else if ( worksat(B, J), graduatedfrom(A, J) )
%   | then return 0.46079443423317107;  // std dev = 0,195, 67,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=65 */
%   | else if ( haswonprize(B, K), haswonprize(A, K) )
%   | | then if ( livesin(A, L), graduatedfrom(A, M) )
%   | | | then return 0.12894913311286482;  // std dev = 1,484, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.40112374754488417;  // std dev = 2,091, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | else if ( graduatedfrom(A, N), worksat(B, P) )
%   | | | then return -0.03823223029621183;  // std dev = 8,241, 468,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=95 */
%   | | | else return 0.038165382085771436;  // std dev = 19,922, 2.078,000 (wgt'ed) examples reached here.  /* #neg=1.484 #pos=594 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(B, C), graduatedfrom(A, C) )
%   then if ( worksat(B, D) )
%   | then return 0.1307683684730728;  // std dev = 0,288, 45,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=39 */
%   | else return 0.30607335594252144;  // std dev = 0,275, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   else if ( haswonprize(B, E), haswonprize(A, E) )
%   | then if ( livesin(A, F), iscitizenof(B, G) )
%   | | then if ( hascurrency(G, H), dealswith(I, G) )
%   | | | then return 0.324945105106677;  // std dev = 0,753, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.44215086936076287;  // std dev = 0,279, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( graduatedfrom(B, J), worksat(K, J) )
%   | | | then return 0.3471307333601136;  // std dev = 1,391, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return 0.15914980736344422;  // std dev = 2,120, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | else if ( worksat(B, L), graduatedfrom(A, L) )
%   | | then return 0.3367877879619172;  // std dev = 0,197, 69,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=67 */
%   | | else if ( worksat(B, M), graduatedfrom(A, N) )
%   | | | then return -0.029823828183452524;  // std dev = 8,604, 502,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=111 */
%   | | | else return 0.03308088148944753;  // std dev = 20,300, 2.178,000 (wgt'ed) examples reached here.  /* #neg=1.514 #pos=664 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( worksat(B, C), graduatedfrom(A, C) )
%   then return 0.23406465765903886;  // std dev = 0,166, 101,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=99 */
%   else if ( worksat(B, D), worksat(A, D) )
%   | then if ( graduatedfrom(A, E), worksat(F, E) )
%   | | then if ( haswonprize(B, G) )
%   | | | then return 0.4367463335462668;  // std dev = 0,444, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.24594399577917025;  // std dev = 0,704, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswonprize(B, H), graduatedfrom(I, D) )
%   | | | then return 0.2971202088737111;  // std dev = 0,754, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5678426790880848;  // std dev = 0,365, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( influences(B, J), influences(K, A) )
%   | | then if ( influences(B, A) )
%   | | | then return 0.5053586917076558;  // std dev = 0,512, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.048053360522995976;  // std dev = 2,444, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else if ( haswonprize(B, L), haswonprize(A, L) )
%   | | | then return 0.16618335928475111;  // std dev = 2,954, 61,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=47 */
%   | | | else return 0.013788909740305633;  // std dev = 21,884, 2.665,000 (wgt'ed) examples reached here.  /* #neg=1.892 #pos=773 */


Results
   AUC ROC   = 0.718682
   AUC PR    = 0.645332
   CLL	      = -0.546954
   Precision = 0.838798 at threshold = 0.5
   Recall    = 0.318135
   F1        = 0.461307


Total learning time: 597.497 seconds
Total inference time: 87.18299999999999 seconds
AUC ROC: 0.718682


Dataset: 29_cora_yago2s, Fold: 3, Type: scratch, Time: 07:19:20
{'Precision': [0.838798, 0.5], 'CLL': -0.546954, 'Inference time': 87.18299999999999, 'Recall': 0.318135, 'AUC ROC': 0.718682, 'F1': 0.461307, 'AUC PR': 0.645332, 'Learning time': 597.497}


