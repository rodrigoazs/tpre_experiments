Starting experiment #1 for 23_cora_yago2s

Start learning from source dataset

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.6200536970042743;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.4356137238319067;  // std dev = 4,162, 71,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   | | | else return 0.2102616111558493;  // std dev = 4,025, 71,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | else return 0.3158603778855768;  // std dev = 0,498, 6.030,000 (wgt'ed) examples reached here.  /* #neg=3.270 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.0803711573217344;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( author(L, J), venue(L, B) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.08202953211443775;  // std dev = 3,412, 67,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | else return 0.07448131332300426;  // std dev = 0,412, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7488849769819401;  // std dev = 1,381, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.1905043196327114;  // std dev = 0,106, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.564938148762135;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return 0.1824277822464603;  // std dev = 4,187, 75,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
%   | else return 0.27290847489476894;  // std dev = 0,498, 6.030,000 (wgt'ed) examples reached here.  /* #neg=3.270 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.5153431334846005;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15132353318206618;  // std dev = 0,000886, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.06304995451976342;  // std dev = 0,410, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | else return 0.06494354595405523;  // std dev = 0,412, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22903959799214002;  // std dev = 0,497, 6.199,000 (wgt'ed) examples reached here.  /* #neg=3.352 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.49587272094814666;  // std dev = 1,164, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.16561408885853238;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(B, H) )
%   | | | then return -0.1550360637132349;  // std dev = 0,024, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.06899417743641004;  // std dev = 3,382, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | else return 0.05636245670344786;  // std dev = 0,411, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18602928187483425;  // std dev = 0,497, 6.199,000 (wgt'ed) examples reached here.  /* #neg=3.352 #pos=2.847 */
%   else return 0.04968939593423126;  // std dev = 0,411, 780,000 (wgt'ed) examples reached here.  /* #neg=610 #pos=170 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.14762597598436847;  // std dev = 0,497, 6.199,000 (wgt'ed) examples reached here.  /* #neg=3.352 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4170665673052856;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14151860651558704;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return -0.14641024862701896;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05547675134048128;  // std dev = 3,381, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | else return 0.04114800952040927;  // std dev = 0,411, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5934230075361017;  // std dev = 1,422, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.3443242554401768;  // std dev = 0,053, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.22729478152788754;  // std dev = 1,232, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.146835964956782;  // std dev = 4,160, 74,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1808740923178793;  // std dev = 3,210, 68,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | | | else return 0.05362339577519681;  // std dev = 4,178, 74,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | else return 0.11414361025072835;  // std dev = 0,498, 5.889,000 (wgt'ed) examples reached here.  /* #neg=3.195 #pos=2.694 */
%   else return 0.03613345177941251;  // std dev = 0,411, 780,000 (wgt'ed) examples reached here.  /* #neg=610 #pos=170 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08866469224113648;  // std dev = 0,495, 6.199,000 (wgt'ed) examples reached here.  /* #neg=3.352 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.38881559666963234;  // std dev = 1,167, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15650816742440252;  // std dev = 0,031, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.027395627113498498;  // std dev = 0,404, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | else return 0.0295703772631498;  // std dev = 0,411, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.12540226084958558;  // std dev = 0,373, 74,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=44 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return -0.16187773274149905;  // std dev = 1,729, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.12229995462837147;  // std dev = 4,195, 77,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=39 */
%   | else return 0.06708928305588774;  // std dev = 0,497, 6.030,000 (wgt'ed) examples reached here.  /* #neg=3.270 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.3165088829097283;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1325244680838815;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(L, I), venue(L, B) )
%   | | | then return -0.17374920203665037;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.032925766200461844;  // std dev = 3,366, 67,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | else return 0.024817540327284757;  // std dev = 0,411, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05158567312918908;  // std dev = 0,495, 6.199,000 (wgt'ed) examples reached here.  /* #neg=3.352 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.12645026834430642;  // std dev = 0,037, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.0972384606895324;  // std dev = 1,379, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.030164402749451025;  // std dev = 3,352, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.020344605371936608;  // std dev = 0,655, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.026732344061629987;  // std dev = 3,449, 68,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | else return 0.020529019242898853;  // std dev = 0,411, 624,000 (wgt'ed) examples reached here.  /* #neg=490 #pos=134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.22723791486860997;  // std dev = 0,363, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.1161966982314684;  // std dev = 3,359, 73,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.0509147977993512;  // std dev = 3,924, 70,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | else return 0.038435215186743955;  // std dev = 0,497, 6.031,000 (wgt'ed) examples reached here.  /* #neg=3.271 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.23679005104564985;  // std dev = 1,157, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.11608753279465785;  // std dev = 0,029, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(K, H), venue(K, B) )
%   | | | then return -0.14426626112744326;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.024359793226261153;  // std dev = 3,359, 67,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | else return 0.017366294330145412;  // std dev = 0,411, 698,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=151 */


Predicates from source: ['samevenue(venue,venue).', 'haswordvenue(venue,word).', 'author(class,author).', 'samebib(class,class).', 'venue(class,venue).', 'haswordauthor(author,word).']

Starting fold 1

Mapping Results
   Knowledge compiling time   = 21.099698781967163
   Generating paths time   = 2.3445537090301514
   Generating mappings time   = 102.27229738235474
   Possible mappings   = 441488
   Finding best mapping   = 160.435564994812
   Total time   = 286.15212321281433


Best mapping found: ['venue(A,B) -> ismarriedto(A,B)', 'samevenue(A,B) -> hasacademicadvisor(A,B)', 'samebib(A,B) -> haschild(A,B)', 'haswordauthor(A,B) -> created(A,B)', 'author(A,B) -> ismarriedto(B,A)', 'haswordvenue(A,B) -> actedin(A,B)'] 

Transferred target predicate: hasacademicadvisor 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;hasacademicadvisor(A, B) :- actedin(A, C), actedin(B, C).;true;true
0;false;actedin(A, I), created(J, I).;true;false
0;true;actedin(B, D), created(E, D).;true;false
0;true,true;created(E, F), actedin(A, F).;true;true
0;true,true,false;ismarriedto(E, H), ismarriedto(H, B).;false;false
0;false,true;ismarriedto(J, K), ismarriedto(K, A).;false;true
0;false,true,false;ismarriedto(J, L), ismarriedto(L, B).;false;false
0;true,true,true;ismarriedto(E, G), ismarriedto(G, A).;false;false
1;;hasacademicadvisor(A, B) :- actedin(A, C), actedin(B, C).;true;true
1;false;actedin(B, H), created(I, H).;true;false
1;false,true,true;haschild(J, K), ismarriedto(K, B).;false;false
1;true;actedin(B, D), created(E, D).;true;false
1;true,true;ismarriedto(E, F), ismarriedto(F, A).;true;true
1;true,true,false;actedin(A, D).;false;false
1;false,true;ismarriedto(I, J), ismarriedto(J, A).;true;false
1;true,true,true;haschild(F, G), ismarriedto(G, B).;false;false
2;;hasacademicadvisor(A, B) :- actedin(A, C), actedin(B, C).;false;true
2;false;actedin(A, D), created(E, D).;true;false
2;false,true,true;haschild(F, G), ismarriedto(G, A).;false;false
2;false,true;ismarriedto(E, F), ismarriedto(F, B).;true;true
2;false,true,false;created(E, H), actedin(B, H).;false;false
3;;hasacademicadvisor(A, B) :- actedin(A, C), actedin(B, C).;false;false
4;;hasacademicadvisor(A, B) :- actedin(A, C), actedin(B, C).;false;true
4;false;actedin(B, D), created(E, D).;true;false
4;false,true,true;haschild(F, G), ismarriedto(G, B).;false;false
4;false,true;ismarriedto(E, F), ismarriedto(F, A).;true;true
4;false,true,false;created(E, H), actedin(A, H).;false;false
5;;hasacademicadvisor(A, B) :- actedin(A, C), actedin(B, C).;true;false
5;true,false;actedin(B, I), created(J, I).;true;false
5;true,false,true;ismarriedto(J, K), ismarriedto(K, A).;false;false
5;true;actedin(A, D), created(E, D).;true;true
5;true,true;ismarriedto(E, F), ismarriedto(F, A).;true;true
5;true,true,false;ismarriedto(E, H), ismarriedto(H, B).;false;false
5;true,true,true;haschild(F, G), ismarriedto(G, B).;false;false
6;;hasacademicadvisor(A, B) :- actedin(A, C), actedin(B, C).;false;true
6;false;actedin(A, D), created(E, D).;true;false
6;false,true,true;haschild(F, G), ismarriedto(G, A).;false;false
6;false,true;ismarriedto(E, F), ismarriedto(F, B).;true;false
7;;hasacademicadvisor(A, B) :- actedin(A, C), actedin(B, C).;true;true
7;false;actedin(B, H), created(I, H).;true;false
7;true;actedin(B, D), created(E, D).;true;false
7;true,true;ismarriedto(E, F), ismarriedto(F, A).;false;true
7;true,true,false;ismarriedto(E, G), ismarriedto(G, B).;false;false
7;false,true;ismarriedto(I, J), ismarriedto(J, A).;true;true
7;false,true,false;ismarriedto(I, L), ismarriedto(L, B).;false;false
7;false,true,true;haschild(J, K), ismarriedto(K, B).;false;false
8;;hasacademicadvisor(A, B) :- actedin(A, C), actedin(B, C).;false;true
8;false,true;created(E, F), actedin(B, F).;false;true
8;false,true,false;ismarriedto(E, G), ismarriedto(G, B).;false;false
8;false,false;actedin(B, H), created(I, H).;true;false
8;false;actedin(A, D), created(E, D).;true;true
8;false,false,true;ismarriedto(I, J), ismarriedto(J, B).;false;false
9;;hasacademicadvisor(A, B) :- actedin(A, C), actedin(B, C).;true;true
9;false;actedin(B, G), created(H, G).;true;false
9;true;actedin(A, D), created(E, D).;true;false
9;true,true;actedin(B, D).;false;true
9;true,true,false;ismarriedto(E, F), ismarriedto(F, A).;false;false
9;false,true;ismarriedto(H, I), ismarriedto(I, A).;true;true
9;false,true,false;ismarriedto(H, K), ismarriedto(K, B).;false;false
9;false,true,true;haschild(I, J), ismarriedto(J, B).;false;false


WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actedin(A, D), created(E, D) )
%   | then if ( ismarriedto(E, F), ismarriedto(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(E, G), ismarriedto(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.19171270972792065;  // std dev = 25,360, 2.893,000 (wgt'ed) examples reached here.  /* #neg=1.928 #pos=965 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actedin(B, D), created(E, D) )
%   | then if ( ismarriedto(E, F), ismarriedto(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16682653659927177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.16699662624961648;  // std dev = 25,354, 2.891,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=965 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actedin(A, D), created(E, D) )
%   | then if ( ismarriedto(E, F), ismarriedto(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( created(E, G), actedin(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1449396702882303;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.14228242066365357;  // std dev = 25,357, 2.893,000 (wgt'ed) examples reached here.  /* #neg=1.928 #pos=965 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.11913139305810369;  // std dev = 25,360, 2.895,000 (wgt'ed) examples reached here.  /* #neg=1.930 #pos=965 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actedin(B, D), created(E, D) )
%   | then if ( ismarriedto(E, F), ismarriedto(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( created(E, G), actedin(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.18039109859716662;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.0987847430178278;  // std dev = 25,353, 2.891,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=965 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.0802378706401467;  // std dev = 25,357, 2.895,000 (wgt'ed) examples reached here.  /* #neg=1.930 #pos=965 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actedin(A, D), created(E, D) )
%   | then if ( ismarriedto(E, F), ismarriedto(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16497880423337244;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.06493229765715537;  // std dev = 25,355, 2.893,000 (wgt'ed) examples reached here.  /* #neg=1.928 #pos=965 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actedin(B, D), created(E, D) )
%   | then if ( ismarriedto(E, F), ismarriedto(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(E, G), ismarriedto(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.17524217209767867;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.05216534002433394;  // std dev = 25,352, 2.891,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=965 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actedin(A, D), created(E, D) )
%   | then if ( created(E, F), actedin(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(E, G), ismarriedto(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.15001880581263896;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actedin(B, H), created(I, H) )
%   | | then if ( ismarriedto(I, J), ismarriedto(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1513357049051987;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.041625689825918175;  // std dev = 25,351, 2.889,000 (wgt'ed) examples reached here.  /* #neg=1.924 #pos=965 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), actedin(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actedin(B, D), created(E, D) )
%   | then if ( ismarriedto(E, F), ismarriedto(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(E, G), ismarriedto(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.13290674433399402;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.03282541492625125;  // std dev = 25,352, 2.891,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=965 */


Results
   AUC ROC   = 0.499871
   AUC PR    = 0.333276
   CLL	      = -0.638256
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 198.025 seconds
Total inference time: 87.28399999999999 seconds
AUC ROC: 0.499871


Structure after Parameter Learning
[['hasacademicadvisor(A, B)', {'': 'actedin(A, C), actedin(B, C)', 'false': 'actedin(A, D), created(E, D)', 'false,true,false': 'ismarriedto(E, G), ismarriedto(G, B)', 'false,true': 'ismarriedto(E, F), ismarriedto(F, A)'}, {'false,false': [25.36, 1928, 965], 'false,true,false,false': [0.0, 2, 0], 'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'actedin(A, C), actedin(B, C)', 'false': 'actedin(B, D), created(E, D)', 'false,true': 'ismarriedto(E, F), ismarriedto(F, A)'}, {'false,false': [25.354, 1926, 965], 'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['hasacademicadvisor(A, B)', {'': 'actedin(A, C), actedin(B, C)', 'false': 'actedin(A, D), created(E, D)', 'false,true,false': 'created(E, G), actedin(B, G)', 'false,true': 'ismarriedto(E, F), ismarriedto(F, B)'}, {'false,false': [25.357, 1928, 965], 'false,true,false,false': [0.0, 2, 0], 'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'actedin(A, C), actedin(B, C)'}, {'false': [25.36, 1930, 965], 'true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'actedin(A, C), actedin(B, C)', 'false': 'actedin(B, D), created(E, D)', 'false,true,false': 'created(E, G), actedin(A, G)', 'false,true': 'ismarriedto(E, F), ismarriedto(F, A)'}, {'false,false': [25.353, 1926, 965], 'false,true,false,false': [0.0, 4, 0], 'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'actedin(A, C), actedin(B, C)'}, {'false': [25.357, 1930, 965], 'true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'actedin(A, C), actedin(B, C)', 'false': 'actedin(A, D), created(E, D)', 'false,true': 'ismarriedto(E, F), ismarriedto(F, B)'}, {'false,false': [25.355, 1928, 965], 'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['hasacademicadvisor(A, B)', {'': 'actedin(A, C), actedin(B, C)', 'false': 'actedin(B, D), created(E, D)', 'false,true,false': 'ismarriedto(E, G), ismarriedto(G, B)', 'false,true': 'ismarriedto(E, F), ismarriedto(F, A)'}, {'false,false': [25.352, 1926, 965], 'false,true,false,false': [0.0, 4, 0], 'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'actedin(A, C), actedin(B, C)', 'false,true': 'created(E, F), actedin(B, F)', 'false,true,false': 'ismarriedto(E, G), ismarriedto(G, B)', 'false,false': 'actedin(B, H), created(I, H)', 'false': 'actedin(A, D), created(E, D)', 'false,false,true': 'ismarriedto(I, J), ismarriedto(J, B)'}, {'false,false,true,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 2, 0], 'false,false,false': [25.351, 1924, 965], 'false,true,false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 4, 0]}], ['hasacademicadvisor(A, B)', {'': 'actedin(A, C), actedin(B, C)', 'false': 'actedin(B, D), created(E, D)', 'false,true,false': 'ismarriedto(E, G), ismarriedto(G, B)', 'false,true': 'ismarriedto(E, F), ismarriedto(F, A)'}, {'false,false': [25.352, 1926, 965], 'false,true,false,false': [0.0, 4, 0], 'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}]]
[{'': [nan, 0.2222222222222475], 'false': [0.0, 0.22229898288408373], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [nan, 0.22220434543215326], 'false': [0.0, 0.2223578153931386], 'false,true': [nan, 0.0]}, {'': [nan, 0.2221625320297678], 'false': [0.0, 0.22225912587347335], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [nan, 0.2221442562805564]}, {'': [nan, 0.22213900574796344], 'false': [0.0, 0.22233867028362866], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [nan, 0.2221062897494468]}, {'': [nan, 0.22210177619262245], 'false': [0.0, 0.22221880293229979], 'false,true': [nan, 0.0]}, {'': [nan, 0.22208928023059557], 'false': [0.0, 0.22232511081759626], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [nan, 0.2220681218717943], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'false,false': [0.0, 0.2224525033245045], 'false': [0.0, 0.22219634033091573], 'false,false,true': [nan, 0.0]}, {'': [nan, 0.22204811384201442], 'false': [0.0, 0.22231738940947782], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;hasacademicadvisor(A, B) :- actedin(A, D), created(E, D).;true;true', '1;;hasacademicadvisor(A, B) :- actedin(B, D), created(E, D).;true;true', '2;;hasacademicadvisor(A, B) :- actedin(A, D), created(E, D).;true;true', '4;;hasacademicadvisor(A, B) :- actedin(B, D), created(E, D).;true;true', '6;;hasacademicadvisor(A, B) :- actedin(A, D), created(E, D).;true;true', '7;;hasacademicadvisor(A, B) :- actedin(B, D), created(E, D).;true;true', '8;;hasacademicadvisor(A, B) :- actedin(A, D), created(E, D).;true;true', '8;false;actedin(B, H), created(I, H).;true;true', '9;;hasacademicadvisor(A, B) :- actedin(B, D), created(E, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), created(D, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( worksat(B, E), graduatedfrom(A, E) )
%   | then if ( haswonprize(A, F), graduatedfrom(B, E) )
%   | | then if ( owns(E, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( livesin(A, H), hascurrency(H, I) )
%   | | | then return 0.6914822684328455;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.8581489350995127;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else if ( haswonprize(B, J), influences(B, K) )
%   | | then if ( haswonprize(A, J) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.3483450135308859;  // std dev = 6,183, 153,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=75 */
%   | | else if ( livesin(B, L), livesin(A, L) )
%   | | | then return 0.6879361691420652;  // std dev = 2,576, 47,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | | else return 0.1454696020246722;  // std dev = 22,980, 2.579,000 (wgt'ed) examples reached here.  /* #neg=1.838 #pos=741 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( actedin(B, C), created(D, C) )
%   then return -0.16049759301995786;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( haswonprize(A, E), haswonprize(B, F) )
%   | then if ( influences(B, G), livesin(G, H) )
%   | | then if ( dealswith(H, I), iscitizenof(A, I) )
%   | | | then return 0.14358634067724782;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7339411692907305;  // std dev = 0,968, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else if ( wasbornin(B, J), iscitizenof(B, K) )
%   | | | then return 0.3799835786882312;  // std dev = 3,823, 60,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=33 */
%   | | | else return 0.18650797059789728;  // std dev = 6,806, 211,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=76 */
%   | else if ( haswonprize(A, L) )
%   | | then if ( iscitizenof(B, M), iscitizenof(A, M) )
%   | | | then return 0.46988168012729686;  // std dev = 2,724, 34,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | | | else return 0.04885832669583641;  // std dev = 8,917, 485,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=103 */
%   | | else if ( worksat(B, N), worksat(A, N) )
%   | | | then return 0.6936929702680822;  // std dev = 1,283, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return 0.16654353208424916;  // std dev = 21,054, 2.047,000 (wgt'ed) examples reached here.  /* #neg=1.365 #pos=682 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), created(D, C) )
%   then return -0.14488352638176102;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( graduatedfrom(B, E), graduatedfrom(A, E) )
%   | then if ( worksat(B, F), owns(E, G) )
%   | | then if ( haswonprize(A, H) )
%   | | | then return 0.018358029731794002;  // std dev = 0,844, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.6846678997420711;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( influences(B, I), iscitizenof(I, J) )
%   | | | then return 0.5760257773528772;  // std dev = 1,508, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.7427498497792816;  // std dev = 1,135, 61,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=60 */
%   | else if ( haswonprize(A, K), haswonprize(B, K) )
%   | | then if ( worksat(A, L), graduatedfrom(B, M) )
%   | | | then return 0.389837121899384;  // std dev = 1,610, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.655307139610744;  // std dev = 1,644, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | else if ( iscitizenof(A, N), iscitizenof(B, N) )
%   | | | then return 0.46352456217381427;  // std dev = 6,213, 189,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=130 */
%   | | | else return 0.08992955164842517;  // std dev = 22,347, 2.565,000 (wgt'ed) examples reached here.  /* #neg=1.853 #pos=712 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( influences(B, C) )
%   then if ( influences(B, A) )
%   | then return 0.717346954818071;  // std dev = 0,117, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( isknownfor(C, D), diedin(B, E) )
%   | | then return 0.6434165910400654;  // std dev = 0,374, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( graduatedfrom(A, F), graduatedfrom(C, F) )
%   | | | then return 0.5606259185853035;  // std dev = 1,518, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return 0.1569426310551171;  // std dev = 8,882, 372,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=148 */
%   else if ( iscitizenof(A, G), iscitizenof(B, G) )
%   | then if ( dealswith(G, H) )
%   | | then return 0.5028168543970476;  // std dev = 0,355, 89,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=75 */
%   | | else return 0.30630542260309157;  // std dev = 0,468, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   | else if ( iscitizenof(A, I), iscitizenof(B, J) )
%   | | then return -0.031636344063581026;  // std dev = 0,366, 376,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=64 */
%   | | else if ( iscitizenof(A, K), haswonprize(A, L) )
%   | | | then return -0.006960728843172908;  // std dev = 5,415, 203,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=37 */
%   | | | else return 0.10882781414870739;  // std dev = 18,723, 1.713,000 (wgt'ed) examples reached here.  /* #neg=1.173 #pos=540 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( actedin(B, C), created(D, C) )
%   then return -0.15802210898201238;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( influences(B, E) )
%   | then if ( influences(A, F), graduatedfrom(F, G) )
%   | | then if ( owns(G, H), haswonprize(E, I) )
%   | | | then return 0.029946217401601423;  // std dev = 0,808, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5358508024646339;  // std dev = 1,606, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( graduatedfrom(A, J), graduatedfrom(E, J) )
%   | | | then return 0.47266700077322454;  // std dev = 1,578, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.12755495343581252;  // std dev = 8,770, 363,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=144 */
%   | else if ( iscitizenof(A, K), iscitizenof(B, K) )
%   | | then if ( dealswith(K, L) )
%   | | | then return 0.3880946689069086;  // std dev = 3,350, 89,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=75 */
%   | | | else return 0.2387216062167723;  // std dev = 4,531, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   | | else if ( iscitizenof(B, M), iscitizenof(A, N) )
%   | | | then return -0.026615575012658252;  // std dev = 7,092, 376,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=64 */
%   | | | else return 0.08091040023849791;  // std dev = 19,508, 1.912,000 (wgt'ed) examples reached here.  /* #neg=1.335 #pos=577 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( wasbornin(B, D), influences(E, B) )
%   | then if ( diedin(A, F) )
%   | | then return 0.22967840845297713;  // std dev = 0,678, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.4403991084785675;  // std dev = 0,130, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( dealswith(C, G) )
%   | | then return 0.33661371350143854;  // std dev = 0,340, 105,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=91 */
%   | | else if ( livesin(A, C), wasbornin(A, H) )
%   | | | then return -0.20387440582510258;  // std dev = 1,156, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.22420802584656735;  // std dev = 4,540, 100,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=66 */
%   else if ( graduatedfrom(A, I), worksat(B, I) )
%   | then return 0.5155221090181082;  // std dev = 0,193, 66,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=63 */
%   | else if ( iscitizenof(B, J), dealswith(J, K) )
%   | | then return -0.011165689220135262;  // std dev = 0,393, 628,000 (wgt'ed) examples reached here.  /* #neg=491 #pos=137 */
%   | | else if ( diedin(B, L), diedin(A, M) )
%   | | | then return 0.2087764973745491;  // std dev = 5,384, 130,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=62 */
%   | | | else return 0.059582553233493644;  // std dev = 19,081, 1.850,000 (wgt'ed) examples reached here.  /* #neg=1.308 #pos=542 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), created(D, C) )
%   then return -0.15370782408869882;  // std dev = 0,007, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( graduatedfrom(A, E), graduatedfrom(B, E) )
%   | then if ( worksat(B, E) )
%   | | then if ( haswonprize(A, F), owns(E, G) )
%   | | | then return 0.0012482560143733206;  // std dev = 0,744, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3096662931513089;  // std dev = 0,360, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( influences(H, B), graduatedfrom(H, I) )
%   | | | then return 0.1544531143832136;  // std dev = 1,130, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.5009355837520004;  // std dev = 1,772, 50,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=47 */
%   | else if ( graduatedfrom(A, J), worksat(K, J) )
%   | | then if ( diedin(K, L), diedin(B, L) )
%   | | | then return 0.4297403828290648;  // std dev = 3,007, 72,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=60 */
%   | | | else return 0.005011514817853075;  // std dev = 15,942, 1.504,000 (wgt'ed) examples reached here.  /* #neg=1.095 #pos=409 */
%   | | else if ( influences(B, M), worksat(B, N) )
%   | | | then return 0.3770599236993105;  // std dev = 3,161, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.06850225424400833;  // std dev = 15,338, 1.174,000 (wgt'ed) examples reached here.  /* #neg=797 #pos=377 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( actedin(B, C), created(D, C) )
%   then return -0.1498716382973982;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( graduatedfrom(A, E), worksat(B, E) )
%   | then if ( worksat(A, F), owns(F, G) )
%   | | then if ( graduatedfrom(B, E) )
%   | | | then return 0.31731349309516615;  // std dev = 0,309, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4415658569802363;  // std dev = 0,396, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( owns(E, H), graduatedfrom(B, I) )
%   | | | then return 0.1275718856413796;  // std dev = 1,348, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.31029622743557;  // std dev = 0,915, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( graduatedfrom(A, J), worksat(B, K) )
%   | | then if ( worksat(L, J), haswonprize(L, M) )
%   | | | then return -0.05711514735586424;  // std dev = 7,629, 412,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=87 */
%   | | | else return 0.10693983494437788;  // std dev = 5,033, 125,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=48 */
%   | | else if ( iscitizenof(A, N), iscitizenof(B, N) )
%   | | | then return 0.18644518153278983;  // std dev = 4,829, 138,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=101 */
%   | | | else return 0.04361257712974033;  // std dev = 20,161, 2.118,000 (wgt'ed) examples reached here.  /* #neg=1.483 #pos=635 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( actedin(A, C), created(D, C) )
%   then return -0.13992787780783894;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actedin(B, E), created(F, E) )
%   | then return -0.13176213484841678;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( iscitizenof(A, G), livesin(B, G) )
%   | | then if ( influences(H, B), hascurrency(G, I) )
%   | | | then return 0.574034540956403;  // std dev = 0,481, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.12200596558153091;  // std dev = 3,782, 76,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | else if ( iscitizenof(A, J), iscitizenof(B, J) )
%   | | | then return 0.1431505149397294;  // std dev = 5,270, 170,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=125 */
%   | | | else return 0.027815587497258192;  // std dev = 21,866, 2.635,000 (wgt'ed) examples reached here.  /* #neg=1.850 #pos=785 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( actedin(B, C), created(D, C) )
%   then return -0.11740678098387641;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( iscitizenof(B, E), livesin(A, E) )
%   | then if ( livesin(B, F), iscitizenof(G, F) )
%   | | then if ( iscitizenof(A, H) )
%   | | | then return 0.2511820118568933;  // std dev = 0,770, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.49758420389965335;  // std dev = 0,992, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( hascurrency(E, I), iscitizenof(A, J) )
%   | | | then return -0.21589625144257993;  // std dev = 1,674, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.25018400916027717;  // std dev = 1,932, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | else if ( diedin(A, K), diedin(B, L) )
%   | | then if ( hascapital(M, L), hascapital(N, K) )
%   | | | then return 0.2508039190323867;  // std dev = 3,475, 69,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | | else return 0.07697607945248294;  // std dev = 5,078, 144,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=63 */
%   | | else if ( diedin(A, P), graduatedfrom(B, Q) )
%   | | | then return -0.09958904191510481;  // std dev = 4,616, 180,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=35 */
%   | | | else return 0.02718208483294944;  // std dev = 21,062, 2.425,000 (wgt'ed) examples reached here.  /* #neg=1.653 #pos=772 */


Results
   AUC ROC   = 0.723241
   AUC PR    = 0.633027
   CLL	      = -0.556697
   Precision = 0.823976 at threshold = 0.5
   Recall    = 0.281347
   F1        = 0.419467


Total learning time: 656.4590000000001 seconds
Total inference time: 64.409 seconds
AUC ROC: 0.723241


Refined model AUC ROC: 0.723241


Dataset: 23_cora_yago2s, Fold: 1, Type: transfer, Time: 02:54:14
{'AUC ROC': 0.723241, 'Parameter Learning results': {'AUC ROC': 0.499871, 'AUC PR': 0.333276, 'F1': nan, 'Learning time': 198.025, 'Inference time': 87.28399999999999, 'CLL': -0.638256, 'Recall': 0.0, 'Precision': [nan, 0.5]}, 'AUC PR': 0.633027, 'F1': 0.419467, 'Learning time': 854.484, 'Inference time': 64.409, 'CLL': -0.556697, 'Mapping results': {'Generating paths time': 2.3445537090301514, 'Total time': 286.15212321281433, 'Possible mappings': 441488, 'Finding best mapping': 160.435564994812, 'Generating mappings time': 102.27229738235474, 'Knowledge compiling time': 21.099698781967163}, 'Recall': 0.281347, 'Precision': [0.823976, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( worksat(B, C), graduatedfrom(A, C) )
%   then return 0.8173326085688992;  // std dev = 0,198, 98,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=94 */
%   else if ( graduatedfrom(A, D), graduatedfrom(B, D) )
%   | then if ( influences(E, B), influences(F, E) )
%   | | then if ( diedin(B, G) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( worksat(A, H), haswonprize(A, I) )
%   | | | then return 0.6081489350995123;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.834339411289988;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( influences(B, J) )
%   | | then if ( influences(B, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.25867943907828805;  // std dev = 9,514, 377,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=151 */
%   | | else if ( graduatedfrom(A, K), worksat(L, K) )
%   | | | then return 0.10892775129888438;  // std dev = 15,532, 1.284,000 (wgt'ed) examples reached here.  /* #neg=962 #pos=322 */
%   | | | else return 0.17017901028747778;  // std dev = 15,113, 1.064,000 (wgt'ed) examples reached here.  /* #neg=732 #pos=332 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(B, C), iscitizenof(A, C) )
%   then if ( dealswith(C, D) )
%   | then return 0.6644587365374595;  // std dev = 0,346, 109,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=93 */
%   | else if ( livesin(A, C), livesin(B, C) )
%   | | then return 0.7923718909190994;  // std dev = 0,054, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( wasbornin(B, E), influences(F, B) )
%   | | | then return -0.171166259815349;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.41551905663302974;  // std dev = 4,783, 98,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   else if ( haswonprize(B, G), haswonprize(A, G) )
%   | then if ( diedin(A, H), worksat(A, I) )
%   | | then return 0.26584554548761;  // std dev = 0,489, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.7035899466605865;  // std dev = 0,305, 37,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else if ( graduatedfrom(B, J), graduatedfrom(A, J) )
%   | | then return 0.6258548326590944;  // std dev = 0,302, 63,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | | else if ( iscitizenof(B, K), dealswith(K, L) )
%   | | | then return 0.037203934200261114;  // std dev = 9,818, 612,000 (wgt'ed) examples reached here.  /* #neg=489 #pos=123 */
%   | | | else return 0.13712420239526332;  // std dev = 20,097, 1.955,000 (wgt'ed) examples reached here.  /* #neg=1.366 #pos=589 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( influences(B, C), haswonprize(B, D) )
%   then if ( livesin(C, E), haswonprize(A, F) )
%   | then return 0.6254419856683732;  // std dev = 0,294, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | else if ( iscitizenof(B, G), wasbornin(A, H) )
%   | | then return 0.08714785342497028;  // std dev = 0,424, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( livesin(B, I), livesin(A, J) )
%   | | | then return -0.03598439276335489;  // std dev = 1,227, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.3875497375209815;  // std dev = 4,719, 99,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=60 */
%   else if ( haswonprize(A, K) )
%   | then if ( iscitizenof(B, L), iscitizenof(A, L) )
%   | | then return 0.444690497689252;  // std dev = 0,438, 60,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   | | else return 0.05439872696532501;  // std dev = 0,414, 690,000 (wgt'ed) examples reached here.  /* #neg=523 #pos=167 */
%   | else if ( iscitizenof(A, M), iscitizenof(B, M) )
%   | | then return 0.4380000118401037;  // std dev = 0,424, 140,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=101 */
%   | | else if ( graduatedfrom(B, N), iscitizenof(A, P) )
%   | | | then return 0.02765582629638702;  // std dev = 6,994, 322,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=70 */
%   | | | else return 0.13873418710617597;  // std dev = 17,798, 1.507,000 (wgt'ed) examples reached here.  /* #neg=1.021 #pos=486 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( dealswith(C, D) )
%   | then return 0.4474762735627081;  // std dev = 0,345, 109,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=93 */
%   | else if ( haswonprize(B, E), haswonprize(A, E) )
%   | | then return 0.62860974469105;  // std dev = 0,087, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.24415700703215645;  // std dev = 0,470, 105,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=61 */
%   else if ( diedin(B, F), diedin(A, G) )
%   | then if ( livesin(H, G), wasbornin(H, F) )
%   | | then return 0.6962772727530168;  // std dev = 0,246, 32,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | else if ( influences(B, I), iscitizenof(I, J) )
%   | | | then return 0.4127790502664149;  // std dev = 2,723, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | | else return 0.0981909363505716;  // std dev = 5,053, 132,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | else if ( graduatedfrom(A, K), graduatedfrom(B, K) )
%   | | then return 0.44892969125219173;  // std dev = 0,318, 55,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | else if ( iscitizenof(B, L), iscitizenof(A, M) )
%   | | | then return -0.019751666488588955;  // std dev = 7,183, 393,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=66 */
%   | | | else return 0.09202522432936931;  // std dev = 20,116, 2.025,000 (wgt'ed) examples reached here.  /* #neg=1.430 #pos=595 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( wasbornin(B, C), livesin(D, C) )
%   then if ( iscitizenof(A, E), livesin(D, E) )
%   | then return 0.301841091933496;  // std dev = 0,419, 89,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=61 */
%   | else if ( influences(B, F), graduatedfrom(F, G) )
%   | | then if ( influences(H, B), diedin(H, I) )
%   | | | then return 0.6702052571972539;  // std dev = 0,436, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.15672324082851796;  // std dev = 4,067, 77,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=33 */
%   | | else if ( haswonprize(D, J), wasbornin(D, C) )
%   | | | then return -0.03607535115520715;  // std dev = 2,887, 67,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return 0.08562410433218805;  // std dev = 10,203, 537,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=167 */
%   else if ( diedin(B, K), diedin(A, K) )
%   | then return 0.6054736196959831;  // std dev = 0,111, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( iscitizenof(A, L), iscitizenof(B, L) )
%   | | then return 0.2609192265661585;  // std dev = 0,418, 142,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=102 */
%   | | else if ( iscitizenof(A, M), hascapital(M, N) )
%   | | | then return 0.026186692604179745;  // std dev = 11,613, 808,000 (wgt'ed) examples reached here.  /* #neg=617 #pos=191 */
%   | | | else return 0.08854946318202177;  // std dev = 15,091, 1.131,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=354 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( dealswith(C, D) )
%   | then return 0.27306302613674505;  // std dev = 0,344, 109,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=93 */
%   | else if ( hascurrency(C, E), graduatedfrom(A, F) )
%   | | then if ( diedin(A, G), happenedin(H, G) )
%   | | | then return -0.4086534103851858;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12648980523871609;  // std dev = 4,283, 88,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=52 */
%   | | else return 0.3122956780029903;  // std dev = 0,419, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else if ( graduatedfrom(A, I), worksat(B, I) )
%   | then return 0.5118150422781141;  // std dev = 0,245, 66,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=63 */
%   | else if ( influences(B, J), influences(A, K) )
%   | | then if ( graduatedfrom(K, L), influences(J, M) )
%   | | | then return 0.6002901007975858;  // std dev = 0,938, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.18658967253702125;  // std dev = 2,256, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else if ( iscitizenof(B, N), livesin(A, N) )
%   | | | then return 0.3833530682689163;  // std dev = 2,257, 27,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.04459924813461978;  // std dev = 21,654, 2.541,000 (wgt'ed) examples reached here.  /* #neg=1.844 #pos=697 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(A, C), worksat(B, C) )
%   then return 0.34744422868421293;  // std dev = 0,230, 98,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=94 */
%   else if ( haswonprize(B, D), haswonprize(A, D) )
%   | then if ( diedin(B, E), graduatedfrom(B, F) )
%   | | then if ( owns(F, G), wasbornin(A, H) )
%   | | | then return -0.321475575450005;  // std dev = 0,101, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3486963105842355;  // std dev = 1,015, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( influences(I, A), influences(J, I) )
%   | | | then return 0.09835840878024717;  // std dev = 0,542, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5274070048002824;  // std dev = 1,329, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else if ( graduatedfrom(A, K), worksat(B, L) )
%   | | then if ( worksat(M, K), haswonprize(M, N) )
%   | | | then return -0.05323586727395717;  // std dev = 7,523, 406,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=82 */
%   | | | else return 0.11406883647883632;  // std dev = 5,009, 122,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=46 */
%   | | else if ( worksat(A, P), haswonprize(A, Q) )
%   | | | then return -0.034273384105932815;  // std dev = 5,964, 246,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=52 */
%   | | | else return 0.06816157911924033;  // std dev = 19,613, 1.972,000 (wgt'ed) examples reached here.  /* #neg=1.324 #pos=648 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(A, C), worksat(B, C) )
%   then return 0.27275926816409235;  // std dev = 0,225, 98,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=94 */
%   else if ( iscitizenof(A, D), livesin(B, D) )
%   | then if ( livesin(A, D) )
%   | | then if ( influences(E, A) )
%   | | | then return 0.10562976143175783;  // std dev = 0,411, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.46769855443022507;  // std dev = 1,069, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else if ( influences(F, B), hascurrency(D, G) )
%   | | | then return 0.6398928708767558;  // std dev = 0,308, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.027707738691721624;  // std dev = 3,368, 48,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   | else if ( graduatedfrom(A, H), worksat(I, H) )
%   | | then if ( diedin(I, J), diedin(B, J) )
%   | | | then return 0.38695252112623196;  // std dev = 2,821, 64,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=53 */
%   | | | else return -0.0024866565739060224;  // std dev = 15,403, 1.445,000 (wgt'ed) examples reached here.  /* #neg=1.078 #pos=367 */
%   | | else if ( iscitizenof(A, K), hascapital(K, L) )
%   | | | then return 0.01735396337681534;  // std dev = 8,907, 471,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=138 */
%   | | | else return 0.09079935644074592;  // std dev = 12,592, 739,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=264 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( wasbornin(A, D), hascapital(E, D) )
%   | then if ( diedin(A, F), livesin(G, E) )
%   | | then return 0.29848437536231237;  // std dev = 0,104, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( dealswith(C, H), hascurrency(C, I) )
%   | | | then return 0.2908338603891686;  // std dev = 0,176, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.26541964881694796;  // std dev = 1,961, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else return 0.14361811157537094;  // std dev = 0,376, 192,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=144 */
%   else if ( iscitizenof(A, J), iscitizenof(B, K) )
%   | then return -0.03299670311784617;  // std dev = 0,357, 444,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=86 */
%   | else if ( diedin(A, L), diedin(B, M) )
%   | | then if ( livesin(N, L), wasbornin(N, M) )
%   | | | then return 0.41212823796427184;  // std dev = 1,123, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.09923963637384722;  // std dev = 4,951, 131,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=57 */
%   | | else if ( wasbornin(B, P), haswonprize(B, Q) )
%   | | | then return 0.10494050161225055;  // std dev = 7,125, 255,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=103 */
%   | | | else return 0.026559549956414408;  // std dev = 18,403, 1.816,000 (wgt'ed) examples reached here.  /* #neg=1.285 #pos=531 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( dealswith(C, D), hascurrency(C, E) )
%   | then return 0.1825829476926571;  // std dev = 0,265, 47,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | else return 0.06929689203431422;  // std dev = 0,410, 174,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=118 */
%   else if ( iscitizenof(A, F), livesin(B, F) )
%   | then if ( diedin(A, G), worksat(A, H) )
%   | | then return -0.23918767171151978;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswonprize(A, I), haswonprize(B, J) )
%   | | | then return 0.04370065348231625;  // std dev = 1,356, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.4827938416356362;  // std dev = 1,699, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else if ( iscitizenof(A, K), happenedin(L, K) )
%   | | then if ( iscitizenof(B, M), dealswith(N, M) )
%   | | | then return -0.07350899243339105;  // std dev = 5,973, 362,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=51 */
%   | | | else return 0.026210820846307766;  // std dev = 11,542, 751,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=219 */
%   | | else if ( haswonprize(B, P), diedin(A, Q) )
%   | | | then return -0.07771833556745861;  // std dev = 3,490, 88,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | | | else return 0.05027207040539454;  // std dev = 16,751, 1.440,000 (wgt'ed) examples reached here.  /* #neg=947 #pos=493 */


Results
   AUC ROC   = 0.727405
   AUC PR    = 0.639244
   CLL	      = -0.548571
   Precision = 0.81586 at threshold = 0.5
   Recall    = 0.314508
   F1        = 0.454001


Total learning time: 592.547 seconds
Total inference time: 61.811 seconds
AUC ROC: 0.727405


Dataset: 23_cora_yago2s, Fold: 1, Type: scratch, Time: 03:05:12
{'AUC ROC': 0.727405, 'AUC PR': 0.639244, 'F1': 0.454001, 'Learning time': 592.547, 'Inference time': 61.811, 'CLL': -0.548571, 'Recall': 0.314508, 'Precision': [0.81586, 0.5]}


Starting fold 2

Mapping Results
   Knowledge compiling time   = 20.86164379119873
   Generating paths time   = 4.067885160446167
   Generating mappings time   = 107.07767057418823
   Possible mappings   = 441488
   Finding best mapping   = 156.56819415092468
   Total time   = 288.57540130615234


Best mapping found: ['venue(A,B) -> ismarriedto(B,A)', 'samevenue(A,B) -> hasacademicadvisor(A,B)', 'samebib(A,B) -> haschild(A,B)', 'haswordauthor(A,B) -> actedin(A,B)', 'author(A,B) -> ismarriedto(A,B)', 'haswordvenue(A,B) -> created(A,B)'] 

Transferred target predicate: hasacademicadvisor 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true
0;false;created(A, I), actedin(J, I).;true;false
0;true;created(B, D), actedin(E, D).;true;false
0;true,true;actedin(E, F), created(A, F).;true;true
0;true,true,false;ismarriedto(H, E), ismarriedto(B, H).;false;false
0;false,true;ismarriedto(K, J), ismarriedto(A, K).;false;true
0;false,true,false;ismarriedto(L, J), ismarriedto(B, L).;false;false
0;true,true,true;ismarriedto(G, E), ismarriedto(A, G).;false;false
1;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true
1;false;created(B, H), actedin(I, H).;true;false
1;false,true,true;haschild(J, K), ismarriedto(B, K).;false;false
1;true;created(B, D), actedin(E, D).;true;false
1;true,true;ismarriedto(F, E), ismarriedto(A, F).;true;true
1;true,true,false;created(A, D).;false;false
1;false,true;ismarriedto(J, I), ismarriedto(A, J).;true;false
1;true,true,true;haschild(F, G), ismarriedto(B, G).;false;false
2;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;false;true
2;false;created(A, D), actedin(E, D).;true;false
2;false,true,true;haschild(F, G), ismarriedto(A, G).;false;false
2;false,true;ismarriedto(F, E), ismarriedto(B, F).;true;true
2;false,true,false;actedin(E, H), created(B, H).;false;false
3;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;false;false
4;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;false;true
4;false;created(B, D), actedin(E, D).;true;false
4;false,true,true;haschild(F, G), ismarriedto(B, G).;false;false
4;false,true;ismarriedto(F, E), ismarriedto(A, F).;true;true
4;false,true,false;actedin(E, H), created(A, H).;false;false
5;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;false
5;true,false;created(B, I), actedin(J, I).;true;false
5;true,false,true;ismarriedto(K, J), ismarriedto(A, K).;false;false
5;true;created(A, D), actedin(E, D).;true;true
5;true,true;ismarriedto(F, E), ismarriedto(A, F).;true;true
5;true,true,false;ismarriedto(H, E), ismarriedto(B, H).;false;false
5;true,true,true;haschild(F, G), ismarriedto(B, G).;false;false
6;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;false;true
6;false;created(A, D), actedin(E, D).;true;false
6;false,true,true;haschild(F, G), ismarriedto(A, G).;false;false
6;false,true;ismarriedto(F, E), ismarriedto(B, F).;true;false
7;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true
7;false;created(B, H), actedin(I, H).;true;false
7;true;created(B, D), actedin(E, D).;true;false
7;true,true;ismarriedto(F, E), ismarriedto(A, F).;false;true
7;true,true,false;ismarriedto(G, E), ismarriedto(B, G).;false;false
7;false,true;ismarriedto(J, I), ismarriedto(A, J).;true;true
7;false,true,false;ismarriedto(L, I), ismarriedto(B, L).;false;false
7;false,true,true;haschild(J, K), ismarriedto(B, K).;false;false
8;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;false;true
8;false,true;actedin(E, F), created(B, F).;false;true
8;false,true,false;ismarriedto(G, E), ismarriedto(B, G).;false;false
8;false,false;created(B, H), actedin(I, H).;true;false
8;false;created(A, D), actedin(E, D).;true;true
8;false,false,true;ismarriedto(J, I), ismarriedto(B, J).;false;false
9;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true
9;false;created(B, G), actedin(H, G).;true;false
9;true;created(A, D), actedin(E, D).;true;false
9;true,true;created(B, D).;false;true
9;true,true,false;ismarriedto(F, E), ismarriedto(A, F).;false;false
9;false,true;ismarriedto(I, H), ismarriedto(A, I).;true;true
9;false,true,false;ismarriedto(K, H), ismarriedto(B, K).;false;false
9;false,true,true;haschild(I, J), ismarriedto(B, J).;false;false


WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(B, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(A, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(I, G), ismarriedto(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05814893509951221;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.1913668083243082;  // std dev = 25,327, 2.887,000 (wgt'ed) examples reached here.  /* #neg=1.925 #pos=962 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(B, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(B, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06677846342102442;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else return 0.16704822029852506;  // std dev = 25,315, 2.882,000 (wgt'ed) examples reached here.  /* #neg=1.920 #pos=962 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(A, D), actedin(E, D) )
%   | then if ( ismarriedto(F, E), ismarriedto(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actedin(E, G), created(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.02846721422549452;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.14203421660688584;  // std dev = 25,324, 2.887,000 (wgt'ed) examples reached here.  /* #neg=1.925 #pos=962 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.11894073820549314;  // std dev = 25,340, 2.892,000 (wgt'ed) examples reached here.  /* #neg=1.929 #pos=963 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(B, D), actedin(E, D) )
%   | then if ( ismarriedto(F, E), ismarriedto(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actedin(E, G), created(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09553521524837136;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else return 0.09892533403789218;  // std dev = 25,315, 2.882,000 (wgt'ed) examples reached here.  /* #neg=1.920 #pos=962 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(A, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( created(B, F), actedin(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.08012570342230281;  // std dev = 25,338, 2.892,000 (wgt'ed) examples reached here.  /* #neg=1.929 #pos=963 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(A, D), actedin(E, D) )
%   | then if ( ismarriedto(F, E), ismarriedto(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.022986957158262444;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.06484441531228176;  // std dev = 25,321, 2.887,000 (wgt'ed) examples reached here.  /* #neg=1.925 #pos=962 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(B, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(B, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(I, G), ismarriedto(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1034285817460524;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else return 0.05234000442796446;  // std dev = 25,315, 2.882,000 (wgt'ed) examples reached here.  /* #neg=1.920 #pos=962 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.06840311429118533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(A, D), actedin(E, D) )
%   | then if ( actedin(E, F), created(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(G, E), ismarriedto(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.028114098478641304;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( created(B, H), actedin(I, H) )
%   | | then if ( ismarriedto(J, I), ismarriedto(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08718130593571935;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return 0.04175641830582847;  // std dev = 25,298, 2.877,000 (wgt'ed) examples reached here.  /* #neg=1.916 #pos=961 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(A, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.052078905701252655;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(B, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(I, G), ismarriedto(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0742772438156749;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else return 0.03294725952381146;  // std dev = 25,314, 2.882,000 (wgt'ed) examples reached here.  /* #neg=1.920 #pos=962 */


Results
   AUC ROC   = 0.501033
   AUC PR    = 0.337624
   CLL	      = -0.63767
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.002073
   F1        = 0.004137


Total learning time: 211.306 seconds
Total inference time: 61.713 seconds
AUC ROC: 0.501033


Structure after Parameter Learning
[['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(A, F), actedin(G, F)', 'true': 'created(B, D), actedin(E, D)', 'false,true,false': 'ismarriedto(I, G), ismarriedto(B, I)', 'false,true': 'ismarriedto(H, G), ismarriedto(A, H)'}, {'true,false': [0.816, 1, 2], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [25.327, 1925, 962], 'false,true,false,false': [0.894, 4, 1], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(B, F), actedin(G, F)', 'true': 'created(B, D), actedin(E, D)', 'false,true': 'ismarriedto(H, G), ismarriedto(A, H)'}, {'true,false': [0.816, 1, 2], 'false,false': [25.315, 1920, 962], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.949, 9, 1]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(A, D), actedin(E, D)', 'false,true,false': 'actedin(E, G), created(B, G)', 'false,true': 'ismarriedto(F, E), ismarriedto(B, F)'}, {'false,false': [25.324, 1925, 962], 'false,true,false,false': [0.894, 4, 1], 'true': [0.816, 1, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)'}, {'false': [25.34, 1929, 963], 'true': [0.816, 1, 2]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(B, D), actedin(E, D)', 'false,true,false': 'actedin(E, G), created(A, G)', 'false,true': 'ismarriedto(F, E), ismarriedto(A, F)'}, {'false,false': [25.315, 1920, 962], 'false,true,false,false': [0.949, 9, 1], 'true': [0.816, 1, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'true,false': 'created(B, F), actedin(G, F)', 'true': 'created(A, D), actedin(E, D)'}, {'false': [25.338, 1929, 963], 'true,false,false': [0.816, 1, 2], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(A, D), actedin(E, D)', 'false,true': 'ismarriedto(F, E), ismarriedto(B, F)'}, {'false,false': [25.321, 1925, 962], 'true': [0.816, 1, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.894, 4, 1]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(B, F), actedin(G, F)', 'true': 'created(B, D), actedin(E, D)', 'false,true,false': 'ismarriedto(I, G), ismarriedto(B, I)', 'false,true': 'ismarriedto(H, G), ismarriedto(A, H)'}, {'true,false': [0.816, 1, 2], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [25.315, 1920, 962], 'false,true,false,false': [0.949, 9, 1], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false,true': 'actedin(E, F), created(B, F)', 'false,true,false': 'ismarriedto(G, E), ismarriedto(B, G)', 'false,false': 'created(B, H), actedin(I, H)', 'false': 'created(A, D), actedin(E, D)', 'false,false,true': 'ismarriedto(J, I), ismarriedto(B, J)'}, {'false,false,true,true': [0.0, 0, 0], 'true': [0.816, 1, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.894, 4, 1], 'false,false,false': [25.298, 1916, 961], 'false,true,false,true': [0.0, 0, 0], 'false,false,true,false': [0.949, 9, 1]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(B, F), actedin(G, F)', 'true': 'created(A, D), actedin(E, D)', 'false,true,false': 'ismarriedto(I, G), ismarriedto(B, I)', 'false,true': 'ismarriedto(H, G), ismarriedto(A, H)'}, {'true,false': [0.816, 1, 2], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [25.314, 1920, 962], 'false,true,false,false': [0.949, 9, 1], 'false,true,false,true': [0.0, 0, 0]}]]
[{'': [0.22222222222222224, 0.22210684216871976], 'false': [0.16000000000000003, 0.22218372218836574], 'false,true': [nan, 0.15999999999999998], 'false,true,false': [nan, 0.15999999999999998], 'true': [nan, 0.22222222222222224]}, {'': [0.2222222222222222, 0.2220992434042247], 'false': [0.09000000000000004, 0.22236854729429428], 'false,true': [nan, 0.09000000000000004], 'true': [nan, 0.2222222222222222]}, {'': [0.22222222222222224, 0.22204817625622517], 'false': [0.16000000000000003, 0.22213333907358998], 'false,true,false': [nan, 0.16000000000000003], 'false,true': [nan, 0.16]}, {'': [0.2222222222222222, 0.22203709169780042]}, {'': [0.2222222222222222, 0.22203258718484775], 'false': [0.08999999999999998, 0.22235995858973967], 'false,true,false': [nan, 0.08999999999999998], 'false,true': [nan, 0.08999999999999998]}, {'': [0.2222222222222222, 0.22199156260193406], 'true,false': [nan, 0.2222222222222222], 'true': [nan, 0.2222222222222222]}, {'': [0.22222222222222224, 0.22198738520129757], 'false': [0.15999999999999998, 0.22208140385839398], 'false,true': [nan, 0.15999999999999998]}, {'': [0.22222222222222224, 0.22197991753033844], 'false': [0.09, 0.22235396321040896], 'false,true': [nan, 0.09], 'false,true,false': [nan, 0.09], 'true': [nan, 0.22222222222222224]}, {'': [0.2222222222222222, 0.22195309125240942], 'false,true': [nan, 0.15999999999999998], 'false,true,false': [nan, 0.15999999999999998], 'false,false': [0.09000000000000004, 0.22245346182233844], 'false': [0.15999999999999998, 0.22205205513512105], 'false,false,true': [nan, 0.09000000000000004]}, {'': [0.22222222222222224, 0.22193256361601324], 'false': [0.09000000000000002, 0.22235059007097568], 'false,true': [nan, 0.09000000000000002], 'false,true,false': [nan, 0.09000000000000002], 'true': [nan, 0.22222222222222224]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '0;false;created(A, F), actedin(G, F).;true;true', '0;false,true;ismarriedto(H, G), ismarriedto(A, H).;true;true', '0;false,true,false;ismarriedto(I, G), ismarriedto(B, I).;true;true', '0;true;created(B, D), actedin(E, D).;true;true', '1;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '1;false;created(B, F), actedin(G, F).;true;true', '1;false,true;ismarriedto(H, G), ismarriedto(A, H).;true;true', '1;true;created(B, D), actedin(E, D).;true;true', '2;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '2;false;created(A, D), actedin(E, D).;true;true', '2;false,true,false;actedin(E, G), created(B, G).;true;true', '2;false,true;ismarriedto(F, E), ismarriedto(B, F).;true;true', '3;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '4;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '4;false;created(B, D), actedin(E, D).;true;true', '4;false,true,false;actedin(E, G), created(A, G).;true;true', '4;false,true;ismarriedto(F, E), ismarriedto(A, F).;true;true', '5;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '5;true,false;created(B, F), actedin(G, F).;true;true', '5;true;created(A, D), actedin(E, D).;true;true', '6;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '6;false;created(A, D), actedin(E, D).;true;true', '6;false,true;ismarriedto(F, E), ismarriedto(B, F).;true;true', '7;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '7;false;created(B, F), actedin(G, F).;true;true', '7;false,true;ismarriedto(H, G), ismarriedto(A, H).;true;true', '7;false,true,false;ismarriedto(I, G), ismarriedto(B, I).;true;true', '7;true;created(B, D), actedin(E, D).;true;true', '8;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '8;false,true;actedin(E, F), created(B, F).;true;true', '8;false,true,false;ismarriedto(G, E), ismarriedto(B, G).;true;true', '8;false,false;created(B, H), actedin(I, H).;true;true', '8;false;created(A, D), actedin(E, D).;true;true', '8;false,false,true;ismarriedto(J, I), ismarriedto(B, J).;true;true', '9;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '9;false;created(B, F), actedin(G, F).;true;true', '9;false,true;ismarriedto(H, G), ismarriedto(A, H).;true;true', '9;false,true,false;ismarriedto(I, G), ismarriedto(B, I).;true;true', '9;true;created(A, D), actedin(E, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(B, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(A, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(I, G), ismarriedto(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05814893509951221;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswonprize(B, J), haswonprize(A, K) )
%   | | then if ( influences(L, A), worksat(L, M) )
%   | | | then return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.3374592799270951;  // std dev = 8,507, 290,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=139 */
%   | | else if ( diedin(B, N), diedin(A, P) )
%   | | | then return 0.2892866596504118;  // std dev = 6,400, 167,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=72 */
%   | | | else return 0.16472733807840692;  // std dev = 22,668, 2.417,000 (wgt'ed) examples reached here.  /* #neg=1.676 #pos=741 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(B, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(B, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( wasbornin(B, I), worksat(A, J) )
%   | | | then return 0.16431607386805827;  // std dev = 0,824, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1666764386864273;  // std dev = 0,023, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( graduatedfrom(B, K), influences(B, L) )
%   | | then if ( graduatedfrom(A, M), graduatedfrom(L, M) )
%   | | | then return 0.7829422137289738;  // std dev = 0,971, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.22631112210859777;  // std dev = 7,416, 232,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=92 */
%   | | else if ( haswonprize(B, N), haswonprize(A, P) )
%   | | | then return 0.2884635574459415;  // std dev = 7,936, 253,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=121 */
%   | | | else return 0.14211667357072186;  // std dev = 22,448, 2.374,000 (wgt'ed) examples reached here.  /* #neg=1.647 #pos=727 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(A, D), actedin(E, D) )
%   | then if ( ismarriedto(F, E), ismarriedto(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actedin(E, G), created(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03198125938521358;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( livesin(B, H), iscitizenof(A, H) )
%   | | then if ( graduatedfrom(A, I), hascurrency(H, J) )
%   | | | then return 0.3314545343214541;  // std dev = 3,428, 49,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | | else return 0.6969958008155331;  // std dev = 1,872, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | else if ( worksat(B, K), graduatedfrom(A, K) )
%   | | | then return 0.7430751468385024;  // std dev = 2,569, 116,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=109 */
%   | | | else return 0.10448675880274441;  // std dev = 23,505, 2.686,000 (wgt'ed) examples reached here.  /* #neg=1.891 #pos=795 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( livesin(A, D), livesin(B, D) )
%   | then if ( livesin(E, D), ispoliticianof(E, F) )
%   | | then if ( graduatedfrom(B, G), owns(G, H) )
%   | | | then return 0.5658772319540042;  // std dev = 1,306, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.17126687171461336;  // std dev = 2,079, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( worksat(A, I), graduatedfrom(A, I) )
%   | | | then return 0.30568692810689574;  // std dev = 0,763, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.73065857231845;  // std dev = 0,291, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( iscitizenof(B, J), livesin(B, K) )
%   | | then if ( influences(A, L), dealswith(K, M) )
%   | | | then return 0.419275276162465;  // std dev = 1,942, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.030513827589816342;  // std dev = 7,648, 332,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=82 */
%   | | else if ( worksat(B, N), worksat(A, P) )
%   | | | then return 0.21218873396051643;  // std dev = 9,253, 383,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=171 */
%   | | | else return 0.10021741681001342;  // std dev = 20,911, 2.099,000 (wgt'ed) examples reached here.  /* #neg=1.447 #pos=652 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(B, D), actedin(E, D) )
%   | then if ( ismarriedto(F, E), ismarriedto(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actedin(E, G), created(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09201738194385271;  // std dev = 0,923, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( iscitizenof(A, H), iscitizenof(B, H) )
%   | | then if ( dealswith(H, I) )
%   | | | then return 0.5535329910084038;  // std dev = 3,787, 115,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=97 */
%   | | | else return 0.27461200592480794;  // std dev = 5,089, 112,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=61 */
%   | | else if ( iscitizenof(B, J), dealswith(K, J) )
%   | | | then return 0.01600792298858585;  // std dev = 12,800, 931,000 (wgt'ed) examples reached here.  /* #neg=699 #pos=232 */
%   | | | else return 0.09892592756197896;  // std dev = 19,095, 1.724,000 (wgt'ed) examples reached here.  /* #neg=1.152 #pos=572 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(A, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( created(B, F), actedin(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( iscitizenof(A, H), iscitizenof(B, H) )
%   | then if ( graduatedfrom(B, I), owns(I, J) )
%   | | then if ( worksat(K, I), wasbornin(B, L) )
%   | | | then return 0.4092927257375604;  // std dev = 2,126, 29,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   | | | else return 0.07857630943478684;  // std dev = 3,341, 50,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | else return 0.3960347774175226;  // std dev = 0,395, 148,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=115 */
%   | else if ( iscitizenof(A, M), dealswith(N, M) )
%   | | then return 0.010405222303051593;  // std dev = 0,422, 1.089,000 (wgt'ed) examples reached here.  /* #neg=809 #pos=280 */
%   | | else if ( diedin(A, P), worksat(B, Q) )
%   | | | then return -0.007318112532789783;  // std dev = 4,440, 116,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=30 */
%   | | | else return 0.09626329010111803;  // std dev = 17,686, 1.460,000 (wgt'ed) examples reached here.  /* #neg=965 #pos=495 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(A, D), actedin(E, D) )
%   | then if ( ismarriedto(F, E), ismarriedto(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.011092490556997991;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( livesin(B, G), iscitizenof(A, G) )
%   | | then if ( graduatedfrom(A, H), iscitizenof(B, G) )
%   | | | then return 0.09320444232469921;  // std dev = 2,461, 35,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.331767474448353;  // std dev = 2,874, 50,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   | | else if ( influences(B, I) )
%   | | | then return 0.12300602248372809;  // std dev = 9,795, 444,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=178 */
%   | | | else return 0.044787368353270025;  // std dev = 21,495, 2.358,000 (wgt'ed) examples reached here.  /* #neg=1.632 #pos=726 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(B, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(B, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(I, G), ismarriedto(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09909819611174207;  // std dev = 0,925, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( wasbornin(B, J), hascapital(K, J) )
%   | | then if ( influences(A, L), iscitizenof(L, M) )
%   | | | then return 0.3178873484854927;  // std dev = 2,253, 26,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return 0.0796208807519498;  // std dev = 8,739, 375,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=140 */
%   | | else if ( iscitizenof(B, N), iscitizenof(A, N) )
%   | | | then return 0.22515786192497286;  // std dev = 5,878, 185,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=125 */
%   | | | else return 0.028509838916839742;  // std dev = 21,211, 2.296,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=680 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.06840311429118533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(A, D), actedin(E, D) )
%   | then if ( actedin(E, F), created(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(G, E), ismarriedto(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.014005822002480817;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( created(B, H), actedin(I, H) )
%   | | then if ( ismarriedto(J, I), ismarriedto(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08386879356238525;  // std dev = 0,926, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( livesin(B, K), iscitizenof(A, K) )
%   | | | then return 0.1544147833252685;  // std dev = 3,875, 84,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=58 */
%   | | | else return 0.0364824640300157;  // std dev = 23,531, 2.793,000 (wgt'ed) examples reached here.  /* #neg=1.890 #pos=903 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(A, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.052078905701252655;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( created(B, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(I, G), ismarriedto(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07169340214053753;  // std dev = 0,927, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( iscitizenof(B, J), exports(J, K) )
%   | | then if ( iscitizenof(A, J), dealswith(J, L) )
%   | | | then return 0.2587619935433861;  // std dev = 3,671, 104,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=87 */
%   | | | else return -0.01485134360782072;  // std dev = 13,511, 1.020,000 (wgt'ed) examples reached here.  /* #neg=735 #pos=285 */
%   | | else if ( haswonprize(B, M), haswonprize(A, N) )
%   | | | then return 0.17176161644794558;  // std dev = 6,183, 164,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=87 */
%   | | | else return 0.03227759567875727;  // std dev = 18,020, 1.594,000 (wgt'ed) examples reached here.  /* #neg=1.091 #pos=503 */


Results
   AUC ROC   = 0.679967
   AUC PR    = 0.574123
   CLL	      = -0.589905
   Precision = 0.826748 at threshold = 0.5
   Recall    = 0.140933
   F1        = 0.240815


Total learning time: 607.74 seconds
Total inference time: 56.983 seconds
AUC ROC: 0.679967


Refined model AUC ROC: 0.679967


Dataset: 23_cora_yago2s, Fold: 2, Type: transfer, Time: 03:25:59
{'AUC ROC': 0.679967, 'Parameter Learning results': {'AUC ROC': 0.501033, 'AUC PR': 0.337624, 'F1': 0.004137, 'Learning time': 211.306, 'Inference time': 61.713, 'CLL': -0.63767, 'Recall': 0.002073, 'Precision': [1.0, 0.5]}, 'AUC PR': 0.574123, 'F1': 0.240815, 'Learning time': 819.046, 'Inference time': 56.983, 'CLL': -0.589905, 'Mapping results': {'Generating paths time': 4.067885160446167, 'Total time': 288.57540130615234, 'Possible mappings': 441488, 'Finding best mapping': 156.56819415092468, 'Generating mappings time': 107.07767057418823, 'Knowledge compiling time': 20.86164379119873}, 'Recall': 0.140933, 'Precision': [0.826748, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( diedin(B, C), diedin(A, C) )
%   then if ( wasbornin(A, D), worksat(A, E) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8196873966379739;  // std dev = 0,192, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( livesin(B, F), livesin(A, F) )
%   | then if ( dealswith(G, F), diedin(H, G) )
%   | | then if ( graduatedfrom(B, I), owns(I, J) )
%   | | | then return 0.6914822684328455;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.2792015666784597;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.8236661764788223;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( worksat(B, K), worksat(A, K) )
%   | | then if ( wasbornin(B, L) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5724346493852266;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else if ( haswonprize(B, M), worksat(B, N) )
%   | | | then return 0.2768989350995084;  // std dev = 8,825, 320,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=134 */
%   | | | else return 0.15541312456459525;  // std dev = 22,618, 2.449,000 (wgt'ed) examples reached here.  /* #neg=1.721 #pos=728 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(B, C), graduatedfrom(A, C) )
%   then if ( owns(C, D), haswonprize(A, E) )
%   | then return 0.45610704642282757;  // std dev = 0,471, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else return 0.7378863346366569;  // std dev = 0,262, 79,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=73 */
%   else if ( worksat(B, F), worksat(A, F) )
%   | then if ( wasbornin(B, G) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( graduatedfrom(A, F), graduatedfrom(B, H) )
%   | | | then return 0.7600730355500624;  // std dev = 0,056, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.30468186666459435;  // std dev = 1,774, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( influences(B, I) )
%   | | then if ( worksat(B, J), graduatedfrom(A, J) )
%   | | | then return 0.743394878756132;  // std dev = 0,965, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.20571953516713692;  // std dev = 9,913, 426,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=159 */
%   | | else if ( iscitizenof(B, K), iscitizenof(A, K) )
%   | | | then return 0.45123133179268393;  // std dev = 6,184, 167,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=105 */
%   | | | else return 0.10358877765036105;  // std dev = 20,531, 2.164,000 (wgt'ed) examples reached here.  /* #neg=1.584 #pos=580 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( worksat(B, C), graduatedfrom(A, C) )
%   then if ( worksat(A, D), created(A, E) )
%   | then return 0.2751297865108741;  // std dev = 1,016, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.7017317235318783;  // std dev = 0,219, 119,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=114 */
%   else if ( graduatedfrom(A, F), graduatedfrom(B, F) )
%   | then if ( worksat(G, F), ismarriedto(G, H) )
%   | | then if ( graduatedfrom(G, I), worksat(J, I) )
%   | | | then return 0.7122201067288917;  // std dev = 0,077, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1482589465167644;  // std dev = 1,416, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.6391980716270944;  // std dev = 0,198, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | else if ( haswonprize(B, K), haswonprize(A, K) )
%   | | then if ( wasbornin(A, L), influences(A, M) )
%   | | | then return 0.3135684345155019;  // std dev = 0,986, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7409666069663927;  // std dev = 1,684, 54,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=51 */
%   | | else if ( iscitizenof(B, N), iscitizenof(A, N) )
%   | | | then return 0.3597927112902919;  // std dev = 6,271, 170,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=104 */
%   | | | else return 0.07321304035066428;  // std dev = 21,574, 2.480,000 (wgt'ed) examples reached here.  /* #neg=1.845 #pos=635 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(A, C), worksat(B, C) )
%   then return 0.5409134715688257;  // std dev = 0,250, 124,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=117 */
%   else if ( iscitizenof(B, D), iscitizenof(A, D) )
%   | then if ( dealswith(D, E) )
%   | | then if ( diedin(A, F), graduatedfrom(B, G) )
%   | | | then return 0.2870663099021197;  // std dev = 2,198, 23,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.5160847881934187;  // std dev = 2,870, 71,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=61 */
%   | | else if ( wasbornin(B, H), wasbornin(A, I) )
%   | | | then return 0.4620603581573584;  // std dev = 1,541, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.13797212403047487;  // std dev = 4,488, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | else if ( iscitizenof(A, J), iscitizenof(B, K) )
%   | | then if ( dealswith(L, K), dealswith(L, J) )
%   | | | then return -0.07908891636592852;  // std dev = 5,513, 308,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=37 */
%   | | | else return 0.0829435612219644;  // std dev = 4,962, 130,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
%   | | else if ( haswonprize(B, M), haswonprize(A, N) )
%   | | | then return 0.26601002343468594;  // std dev = 6,664, 206,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=104 */
%   | | | else return 0.08315582935751527;  // std dev = 19,427, 1.932,000 (wgt'ed) examples reached here.  /* #neg=1.392 #pos=540 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(B, C), graduatedfrom(A, C) )
%   then if ( haswonprize(B, D), livesin(B, E) )
%   | then return 0.5574202078804995;  // std dev = 0,080, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( owns(C, F), haswonprize(A, G) )
%   | | then if ( iscitizenof(B, H), hascurrency(H, I) )
%   | | | then return -0.3977547222320235;  // std dev = 0,150, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3818544061445829;  // std dev = 0,730, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.3721759318927077;  // std dev = 0,264, 71,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=65 */
%   else if ( graduatedfrom(A, J), worksat(B, J) )
%   | then return 0.4487954181689544;  // std dev = 0,224, 97,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=93 */
%   | else if ( iscitizenof(A, K), iscitizenof(B, K) )
%   | | then if ( dealswith(K, L), hascapital(K, M) )
%   | | | then return 0.3487220270082601;  // std dev = 3,580, 80,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=63 */
%   | | | else return 0.14651225034720963;  // std dev = 4,833, 101,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=52 */
%   | | else if ( iscitizenof(A, N), iscitizenof(B, P) )
%   | | | then return -0.04087692446428496;  // std dev = 7,263, 425,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=64 */
%   | | | else return 0.07844194547400685;  // std dev = 20,445, 2.102,000 (wgt'ed) examples reached here.  /* #neg=1.489 #pos=613 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(A, C), worksat(B, C) )
%   then if ( influences(B, D), worksat(A, E) )
%   | then return 0.118094048858751;  // std dev = 0,330, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.336031378021339;  // std dev = 0,218, 111,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=106 */
%   else if ( graduatedfrom(A, F), graduatedfrom(B, F) )
%   | then if ( owns(F, G), wasbornin(A, H) )
%   | | then if ( haswonprize(A, I), iscitizenof(A, J) )
%   | | | then return -0.12312907158052444;  // std dev = 0,606, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2776073061382194;  // std dev = 0,557, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.33680869276049236;  // std dev = 0,235, 56,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | else if ( diedin(B, K), wasbornin(A, K) )
%   | | then if ( livesin(A, L), iscitizenof(A, L) )
%   | | | then return 0.21011557004942372;  // std dev = 0,507, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6995836593295072;  // std dev = 0,410, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( graduatedfrom(A, M) )
%   | | | then return 0.02803348428961926;  // std dev = 17,027, 1.626,000 (wgt'ed) examples reached here.  /* #neg=1.202 #pos=424 */
%   | | | else return 0.09422430507249638;  // std dev = 14,701, 1.068,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=355 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( influences(B, C) )
%   then if ( influences(A, D), influences(C, E) )
%   | then return 0.3975674948624633;  // std dev = 0,420, 32,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | else if ( graduatedfrom(A, F) )
%   | | then if ( ismarriedto(B, G), diedin(C, H) )
%   | | | then return 0.6518725078062155;  // std dev = 0,203, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05251499865059409;  // std dev = 7,054, 281,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=100 */
%   | | else if ( diedin(B, I), diedin(A, J) )
%   | | | then return 0.4921690074605744;  // std dev = 1,694, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.1287621238360676;  // std dev = 5,301, 127,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=50 */
%   else if ( worksat(B, K), livesin(A, L) )
%   | then return -0.04260177077464668;  // std dev = 0,333, 205,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=54 */
%   | else if ( haswonprize(B, M), graduatedfrom(B, N) )
%   | | then if ( haswonprize(A, M) )
%   | | | then return 0.43589532166622724;  // std dev = 1,294, 32,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | | else return 0.07561939520754477;  // std dev = 8,468, 370,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=132 */
%   | | else return 0.04589960495161348;  // std dev = 0,425, 1.826,000 (wgt'ed) examples reached here.  /* #neg=1.268 #pos=558 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(A, C), worksat(B, C) )
%   then return 0.2352857805128357;  // std dev = 0,237, 124,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=117 */
%   else if ( iscitizenof(B, D), exports(D, E) )
%   | then if ( iscitizenof(A, F), dealswith(D, F) )
%   | | then if ( influences(G, A), iscitizenof(G, H) )
%   | | | then return 0.2336992875221519;  // std dev = 1,268, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.11468553002967324;  // std dev = 3,145, 138,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=13 */
%   | | else if ( iscitizenof(A, D), dealswith(D, I) )
%   | | | then return 0.23862169861998642;  // std dev = 3,454, 87,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=71 */
%   | | | else return 0.008783856434216702;  // std dev = 12,017, 847,000 (wgt'ed) examples reached here.  /* #neg=611 #pos=236 */
%   | else if ( haswonprize(B, J), haswonprize(A, K) )
%   | | then if ( haswonprize(A, J) )
%   | | | then return 0.44066203063402326;  // std dev = 1,345, 38,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return 0.07993956746196665;  // std dev = 5,071, 121,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   | | else if ( livesin(A, L), graduatedfrom(B, M) )
%   | | | then return -0.06553916514250767;  // std dev = 4,063, 137,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=26 */
%   | | | else return 0.056411369694883126;  // std dev = 16,798, 1.396,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=418 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( worksat(B, C), graduatedfrom(A, C) )
%   then if ( haswonprize(B, D), worksat(A, E) )
%   | then if ( wasbornin(B, F), owns(C, G) )
%   | | then return -0.19125011576295264;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( iscitizenof(A, H), graduatedfrom(B, I) )
%   | | | then return 0.04970865159512734;  // std dev = 1,059, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2937478336747169;  // std dev = 0,144, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21667374181855062;  // std dev = 0,183, 103,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=100 */
%   else if ( wasbornin(B, J), wasbornin(A, J) )
%   | then return 0.5728569726075815;  // std dev = 0,198, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( iscitizenof(A, K), iscitizenof(B, K) )
%   | | then if ( dealswith(K, L), hascurrency(K, M) )
%   | | | then return 0.28082358462813733;  // std dev = 1,291, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.0953053118843255;  // std dev = 5,760, 164,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=99 */
%   | | else if ( iscitizenof(B, N), exports(N, P) )
%   | | | then return -0.018996446569677094;  // std dev = 11,490, 887,000 (wgt'ed) examples reached here.  /* #neg=691 #pos=196 */
%   | | | else return 0.043985819462578644;  // std dev = 18,112, 1.680,000 (wgt'ed) examples reached here.  /* #neg=1.165 #pos=515 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( influences(B, C), influences(A, D) )
%   then if ( influences(B, A) )
%   | then return 0.5816762508963831;  // std dev = 0,167, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( livesin(B, E), diedin(A, F) )
%   | | then return 0.6135340781967524;  // std dev = 0,366, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( diedin(B, G), influences(D, H) )
%   | | | then return 0.442976901653713;  // std dev = 0,643, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -6.401618101195079E-4;  // std dev = 2,486, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   else if ( iscitizenof(A, I), influences(A, J) )
%   | then if ( livesin(B, K), iscitizenof(B, K) )
%   | | then return 0.29470167239231476;  // std dev = 0,400, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return -0.16661441279597683;  // std dev = 0,249, 83,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=10 */
%   | else if ( haswonprize(B, L), haswonprize(A, L) )
%   | | then return 0.320340160146897;  // std dev = 0,211, 66,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=62 */
%   | | else if ( graduatedfrom(A, M), worksat(B, M) )
%   | | | then return 0.16520769968774063;  // std dev = 2,350, 108,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=102 */
%   | | | else return 0.018503626212494677;  // std dev = 21,638, 2.569,000 (wgt'ed) examples reached here.  /* #neg=1.822 #pos=747 */


Results
   AUC ROC   = 0.71742
   AUC PR    = 0.640399
   CLL	      = -0.549957
   Precision = 0.864379 at threshold = 0.5
   Recall    = 0.274093
   F1        = 0.416208


Total learning time: 504.944 seconds
Total inference time: 88.45400000000001 seconds
AUC ROC: 0.71742


Dataset: 23_cora_yago2s, Fold: 2, Type: scratch, Time: 03:35:56
{'AUC ROC': 0.71742, 'AUC PR': 0.640399, 'F1': 0.416208, 'Learning time': 504.944, 'Inference time': 88.45400000000001, 'CLL': -0.549957, 'Recall': 0.274093, 'Precision': [0.864379, 0.5]}


Starting fold 3

Mapping Results
   Knowledge compiling time   = 21.373545169830322
   Generating paths time   = 2.6579110622406006
   Generating mappings time   = 102.9456422328949
   Possible mappings   = 441488
   Finding best mapping   = 155.05739164352417
   Total time   = 282.03449749946594


Best mapping found: ['venue(A,B) -> ismarriedto(B,A)', 'samevenue(A,B) -> hasacademicadvisor(A,B)', 'samebib(A,B) -> haschild(A,B)', 'haswordauthor(A,B) -> actedin(A,B)', 'author(A,B) -> ismarriedto(A,B)', 'haswordvenue(A,B) -> created(A,B)'] 

Transferred target predicate: hasacademicadvisor 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true
0;false;created(A, I), actedin(J, I).;true;false
0;true;created(B, D), actedin(E, D).;true;false
0;true,true;actedin(E, F), created(A, F).;true;true
0;true,true,false;ismarriedto(H, E), ismarriedto(B, H).;false;false
0;false,true;ismarriedto(K, J), ismarriedto(A, K).;false;true
0;false,true,false;ismarriedto(L, J), ismarriedto(B, L).;false;false
0;true,true,true;ismarriedto(G, E), ismarriedto(A, G).;false;false
1;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true
1;false;created(B, H), actedin(I, H).;true;false
1;false,true,true;haschild(J, K), ismarriedto(B, K).;false;false
1;true;created(B, D), actedin(E, D).;true;false
1;true,true;ismarriedto(F, E), ismarriedto(A, F).;true;true
1;true,true,false;created(A, D).;false;false
1;false,true;ismarriedto(J, I), ismarriedto(A, J).;true;false
1;true,true,true;haschild(F, G), ismarriedto(B, G).;false;false
2;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;false;true
2;false;created(A, D), actedin(E, D).;true;false
2;false,true,true;haschild(F, G), ismarriedto(A, G).;false;false
2;false,true;ismarriedto(F, E), ismarriedto(B, F).;true;true
2;false,true,false;actedin(E, H), created(B, H).;false;false
3;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;false;false
4;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;false;true
4;false;created(B, D), actedin(E, D).;true;false
4;false,true,true;haschild(F, G), ismarriedto(B, G).;false;false
4;false,true;ismarriedto(F, E), ismarriedto(A, F).;true;true
4;false,true,false;actedin(E, H), created(A, H).;false;false
5;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;false
5;true,false;created(B, I), actedin(J, I).;true;false
5;true,false,true;ismarriedto(K, J), ismarriedto(A, K).;false;false
5;true;created(A, D), actedin(E, D).;true;true
5;true,true;ismarriedto(F, E), ismarriedto(A, F).;true;true
5;true,true,false;ismarriedto(H, E), ismarriedto(B, H).;false;false
5;true,true,true;haschild(F, G), ismarriedto(B, G).;false;false
6;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;false;true
6;false;created(A, D), actedin(E, D).;true;false
6;false,true,true;haschild(F, G), ismarriedto(A, G).;false;false
6;false,true;ismarriedto(F, E), ismarriedto(B, F).;true;false
7;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true
7;false;created(B, H), actedin(I, H).;true;false
7;true;created(B, D), actedin(E, D).;true;false
7;true,true;ismarriedto(F, E), ismarriedto(A, F).;false;true
7;true,true,false;ismarriedto(G, E), ismarriedto(B, G).;false;false
7;false,true;ismarriedto(J, I), ismarriedto(A, J).;true;true
7;false,true,false;ismarriedto(L, I), ismarriedto(B, L).;false;false
7;false,true,true;haschild(J, K), ismarriedto(B, K).;false;false
8;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;false;true
8;false,true;actedin(E, F), created(B, F).;false;true
8;false,true,false;ismarriedto(G, E), ismarriedto(B, G).;false;false
8;false,false;created(B, H), actedin(I, H).;true;false
8;false;created(A, D), actedin(E, D).;true;true
8;false,false,true;ismarriedto(J, I), ismarriedto(B, J).;false;false
9;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true
9;false;created(B, G), actedin(H, G).;true;false
9;true;created(A, D), actedin(E, D).;true;false
9;true,true;created(B, D).;false;true
9;true,true,false;ismarriedto(F, E), ismarriedto(A, F).;false;false
9;false,true;ismarriedto(I, H), ismarriedto(A, I).;true;true
9;false,true,false;ismarriedto(K, H), ismarriedto(B, K).;false;false
9;false,true,true;haschild(I, J), ismarriedto(B, J).;false;false


WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(B, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( created(A, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(I, G), ismarriedto(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2867203636709407;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.19102042799871072;  // std dev = 25,320, 2.887,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=961 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(B, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( created(B, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.16660299854711078;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.1663388963514302;  // std dev = 25,329, 2.888,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=962 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( created(A, D), actedin(E, D) )
%   | then if ( ismarriedto(F, E), ismarriedto(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actedin(E, G), created(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.22220045513617423;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.14173465017615025;  // std dev = 25,320, 2.887,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=961 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.11901503153648361;  // std dev = 25,355, 2.894,000 (wgt'ed) examples reached here.  /* #neg=1.930 #pos=964 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( created(B, D), actedin(E, D) )
%   | then if ( ismarriedto(F, E), ismarriedto(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actedin(E, G), created(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0985735304637075;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.09830989181441074;  // std dev = 25,328, 2.888,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=962 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(A, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( created(B, F), actedin(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.08018990769315902;  // std dev = 25,355, 2.894,000 (wgt'ed) examples reached here.  /* #neg=1.930 #pos=964 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( created(A, D), actedin(E, D) )
%   | then if ( ismarriedto(F, E), ismarriedto(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12433937578145768;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.06459608282095376;  // std dev = 25,320, 2.887,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=961 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(B, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( created(B, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(I, G), ismarriedto(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.052082874894975394;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.05183744330267068;  // std dev = 25,328, 2.888,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=962 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( created(A, D), actedin(E, D) )
%   | then if ( actedin(E, F), created(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(G, E), ismarriedto(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08581815975856197;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( created(B, H), actedin(I, H) )
%   | | then if ( ismarriedto(J, I), ismarriedto(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04143549267962505;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.041132474405289554;  // std dev = 25,294, 2.881,000 (wgt'ed) examples reached here.  /* #neg=1.922 #pos=959 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then if ( created(A, D), actedin(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( created(B, F), actedin(G, F) )
%   | then if ( ismarriedto(H, G), ismarriedto(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( ismarriedto(I, G), ismarriedto(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03279780061238219;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.032642795376625254;  // std dev = 25,328, 2.888,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=962 */


Results
   AUC ROC   = 0.499748
   AUC PR    = 0.334499
   CLL	      = -0.637522
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.002591
   F1        = 0.005165


Total learning time: 1264.087 seconds
Total inference time: 96.34100000000001 seconds
AUC ROC: 0.499748


Structure after Parameter Learning
[['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(A, F), actedin(G, F)', 'true': 'created(B, D), actedin(E, D)', 'false,true,false': 'ismarriedto(I, G), ismarriedto(B, I)', 'false,true': 'ismarriedto(H, G), ismarriedto(A, H)'}, {'true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [25.32, 1926, 961], 'false,true,false,false': [1.309, 4, 3], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(B, F), actedin(G, F)', 'true': 'created(B, D), actedin(E, D)', 'false,true': 'ismarriedto(H, G), ismarriedto(A, H)'}, {'true,false': [0.0, 0, 1], 'false,false': [25.329, 1926, 962], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.155, 4, 2]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(A, D), actedin(E, D)', 'false,true,false': 'actedin(E, G), created(B, G)', 'false,true': 'ismarriedto(F, E), ismarriedto(B, F)'}, {'false,false': [25.32, 1926, 961], 'false,true,false,false': [1.309, 4, 3], 'true': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)'}, {'false': [25.355, 1930, 964], 'true': [0.0, 0, 1]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(B, D), actedin(E, D)', 'false,true,false': 'actedin(E, G), created(A, G)', 'false,true': 'ismarriedto(F, E), ismarriedto(A, F)'}, {'false,false': [25.328, 1926, 962], 'false,true,false,false': [1.155, 4, 2], 'true': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'true,false': 'created(B, F), actedin(G, F)', 'true': 'created(A, D), actedin(E, D)'}, {'false': [25.355, 1930, 964], 'true,false,false': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(A, D), actedin(E, D)', 'false,true': 'ismarriedto(F, E), ismarriedto(B, F)'}, {'false,false': [25.32, 1926, 961], 'true': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.309, 4, 3]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(B, F), actedin(G, F)', 'true': 'created(B, D), actedin(E, D)', 'false,true,false': 'ismarriedto(I, G), ismarriedto(B, I)', 'false,true': 'ismarriedto(H, G), ismarriedto(A, H)'}, {'true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [25.328, 1926, 962], 'false,true,false,false': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 0]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false,true': 'actedin(E, F), created(B, F)', 'false,true,false': 'ismarriedto(G, E), ismarriedto(B, G)', 'false,false': 'created(B, H), actedin(I, H)', 'false': 'created(A, D), actedin(E, D)', 'false,false,true': 'ismarriedto(J, I), ismarriedto(B, J)'}, {'false,false,true,true': [0.0, 0, 0], 'true': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [1.309, 4, 3], 'false,false,false': [25.294, 1922, 959], 'false,true,false,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2]}], ['hasacademicadvisor(A, B)', {'': 'created(A, C), created(B, C)', 'false': 'created(B, F), actedin(G, F)', 'true': 'created(A, D), actedin(E, D)', 'false,true,false': 'ismarriedto(I, G), ismarriedto(B, I)', 'false,true': 'ismarriedto(H, G), ismarriedto(A, H)'}, {'true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [25.328, 1926, 962], 'false,true,false,false': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.2221453819331424], 'false': [0.24489795918367335, 0.2220680621142833], 'true': [nan, 0.0], 'false,true,false': [nan, 0.24489795918367355], 'false,true': [nan, 0.24489795918367355]}, {'': [0.0, 0.2221394985715009], 'false': [0.2222222222222223, 0.22213932656335114], 'true': [nan, 0.0], 'false,true': [nan, 0.2222222222222223]}, {'': [0.0, 0.2221389061557007], 'false': [0.2448979591836735, 0.2220680620393591], 'false,true,false': [nan, 0.2448979591836735], 'false,true': [nan, 0.2448979591836735]}, {'': [0.0, 0.2221333461655929]}, {'': [0.0, 0.2221327372170257], 'false': [0.2222222222222223, 0.22213255116224795], 'false,true,false': [nan, 0.2222222222222223], 'false,true': [nan, 0.2222222222222223]}, {'': [0.0, 0.22213226143014775], 'true,false': [nan, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.2221318952737564], 'false': [0.2448979591836735, 0.22206806193759174], 'false,true': [nan, 0.24489795918367346]}, {'': [0.0, 0.22212831591704946], 'false': [0.2222222222222223, 0.22212812069596186], 'true': [nan, 0.0], 'false,true,false': [nan, 0.2222222222222223], 'false,true': [nan, 0.2222222222222223]}, {'': [0.0, 0.22212810082123677], 'false,true': [nan, 0.24489795918367346], 'false,true,false': [nan, 0.2448979591836735], 'false,false': [0.22222222222222224, 0.22206774061371665], 'false': [0.24489795918367346, 0.22206806186048725], 'false,false,true': [nan, 0.22222222222222224]}, {'': [0.0, 0.22212601843816734], 'false': [0.22222222222222232, 0.22212581851899646], 'true': [nan, 0.0], 'false,true,false': [nan, 0.22222222222222232], 'false,true': [nan, 0.22222222222222232]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '1;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '2;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '3;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '4;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '5;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '6;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '7;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '8;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true', '9;;hasacademicadvisor(A, B) :- created(A, C), created(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( iscitizenof(B, D), iscitizenof(A, D) )
%   | then if ( dealswith(D, E), hascurrency(D, F) )
%   | | then return 0.8581489350995121;  // std dev = 2,06e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else if ( graduatedfrom(B, G), livesin(B, D) )
%   | | | then return 0.7510060779566546;  // std dev = 1,637, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0.5317600462106236;  // std dev = 5,627, 144,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=97 */
%   | else if ( graduatedfrom(B, H), graduatedfrom(A, H) )
%   | | then if ( influences(I, A), diedin(I, J) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.710000786951364;  // std dev = 2,611, 54,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=46 */
%   | | else if ( iscitizenof(B, K), iscitizenof(A, L) )
%   | | | then return 0.02719655414713189;  // std dev = 7,681, 420,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=71 */
%   | | | else return 0.16580618213688214;  // std dev = 21,618, 2.194,000 (wgt'ed) examples reached here.  /* #neg=1.519 #pos=675 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( haswonprize(B, D), haswonprize(A, D) )
%   | then if ( diedin(B, E), iscitizenof(A, F) )
%   | | then if ( wasbornin(A, G), livesin(H, G) )
%   | | | then return 0.7632449214960249;  // std dev = 0,076, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.30445188163570536;  // std dev = 1,167, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( diedin(A, I), worksat(A, J) )
%   | | | then return 0.17007667344521246;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8066668091987722;  // std dev = 1,089, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else if ( iscitizenof(A, K), iscitizenof(B, K) )
%   | | then if ( dealswith(K, L), hascurrency(K, M) )
%   | | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0.4777477840250618;  // std dev = 5,776, 162,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=114 */
%   | | else if ( graduatedfrom(B, N), graduatedfrom(A, N) )
%   | | | then return 0.5488469355076186;  // std dev = 3,025, 58,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=46 */
%   | | | else return 0.11407298676723873;  // std dev = 22,582, 2.569,000 (wgt'ed) examples reached here.  /* #neg=1.864 #pos=705 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( iscitizenof(A, D), iscitizenof(B, D) )
%   | then if ( isleaderof(E, D), created(E, F) )
%   | | then if ( worksat(B, G), graduatedfrom(A, G) )
%   | | | then return 0.6655363266220672;  // std dev = 0,123, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.31073842499390486;  // std dev = 5,234, 120,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=76 */
%   | | else if ( dealswith(D, H) )
%   | | | then return 0.502084168617144;  // std dev = 2,131, 66,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=60 */
%   | | | else return 0.6802222473408714;  // std dev = 0,084, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( iscitizenof(A, I), iscitizenof(B, J) )
%   | | then if ( dealswith(K, J), dealswith(K, I) )
%   | | | then return -0.02675039454648777;  // std dev = 5,690, 286,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=39 */
%   | | | else return 0.11949110275085423;  // std dev = 5,340, 148,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   | | else if ( influences(B, A) )
%   | | | then return 0.8096816567749976;  // std dev = 0,136, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.1286775366765364;  // std dev = 21,623, 2.228,000 (wgt'ed) examples reached here.  /* #neg=1.529 #pos=699 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( iscitizenof(A, D), iscitizenof(B, D) )
%   | then if ( graduatedfrom(B, E), graduatedfrom(A, E) )
%   | | then if ( hascurrency(D, F), dealswith(D, G) )
%   | | | then return 0.44199811811127504;  // std dev = 0,097, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5318164465813598;  // std dev = 0,146, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( graduatedfrom(A, H), owns(H, I) )
%   | | | then return 0.20193496884285309;  // std dev = 3,732, 62,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | | else return 0.3477620848750302;  // std dev = 4,288, 133,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=107 */
%   | else if ( influences(B, J), worksat(B, K) )
%   | | then if ( graduatedfrom(A, K) )
%   | | | then return 0.7304850748168972;  // std dev = 0,924, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.18946342312363637;  // std dev = 5,858, 151,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=59 */
%   | | else if ( iscitizenof(A, L), worksat(B, M) )
%   | | | then return -0.007146318641411185;  // std dev = 6,779, 331,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=60 */
%   | | | else return 0.10238915729037955;  // std dev = 21,095, 2.180,000 (wgt'ed) examples reached here.  /* #neg=1.516 #pos=664 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( graduatedfrom(B, D) )
%   | then if ( diedin(B, E), diedin(A, E) )
%   | | then if ( wasbornin(A, F), iscitizenof(B, G) )
%   | | | then return 0.3836490753182154;  // std dev = 0,711, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.7333956060947635;  // std dev = 0,331, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( worksat(B, H), graduatedfrom(A, H) )
%   | | | then return 0.5371420020197548;  // std dev = 2,455, 80,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=75 */
%   | | | else return 0.08856819837877929;  // std dev = 16,325, 1.365,000 (wgt'ed) examples reached here.  /* #neg=921 #pos=444 */
%   | else if ( livesin(A, I), livesin(B, I) )
%   | | then if ( worksat(A, J), worksat(B, K) )
%   | | | then return 0.6462974574859544;  // std dev = 0,332, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.20796341589408068;  // std dev = 1,761, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( influences(B, A) )
%   | | | then return 0.6486623035266632;  // std dev = 0,384, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.054941252436698104;  // std dev = 16,254, 1.391,000 (wgt'ed) examples reached here.  /* #neg=996 #pos=395 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( graduatedfrom(B, D), graduatedfrom(A, D) )
%   | then if ( haswonprize(B, E), livesin(B, F) )
%   | | then return -0.10442953144623128;  // std dev = 1,045, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( influences(A, G), graduatedfrom(G, H) )
%   | | | then return 0.09251523904451298;  // std dev = 1,086, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3695811036397492;  // std dev = 2,332, 74,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=68 */
%   | else if ( haswonprize(B, I) )
%   | | then if ( haswonprize(A, I) )
%   | | | then return 0.49058669493177065;  // std dev = 2,280, 56,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=50 */
%   | | | else return 0.083469283654334;  // std dev = 12,621, 785,000 (wgt'ed) examples reached here.  /* #neg=525 #pos=260 */
%   | | else if ( influences(B, J), graduatedfrom(B, K) )
%   | | | then return 0.17762819070414074;  // std dev = 5,186, 121,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=53 */
%   | | | else return 0.04190836661333633;  // std dev = 18,430, 1.847,000 (wgt'ed) examples reached here.  /* #neg=1.319 #pos=528 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( iscitizenof(A, D), iscitizenof(B, D) )
%   | then if ( created(A, E), graduatedfrom(B, F) )
%   | | then return -0.18730310622019117;  // std dev = 0,854, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( exports(D, G), livesin(A, H) )
%   | | | then return 0.10238190976806609;  // std dev = 3,514, 64,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=43 */
%   | | | else return 0.2294954310055761;  // std dev = 4,231, 150,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=124 */
%   | else if ( graduatedfrom(B, I), graduatedfrom(A, I) )
%   | | then if ( haswonprize(B, J), worksat(B, K) )
%   | | | then return -0.04298799444317555;  // std dev = 1,406, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.30352370363716086;  // std dev = 2,347, 53,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | else if ( iscitizenof(B, L), iscitizenof(A, M) )
%   | | | then return -0.029745399096075244;  // std dev = 7,474, 420,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=71 */
%   | | | else return 0.06084774235025515;  // std dev = 21,066, 2.194,000 (wgt'ed) examples reached here.  /* #neg=1.519 #pos=675 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( iscitizenof(A, D), iscitizenof(B, D) )
%   | then if ( dealswith(E, D), diedin(F, E) )
%   | | then if ( worksat(B, G), worksat(A, H) )
%   | | | then return 0.23979952894163553;  // std dev = 1,511, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.010689369351242657;  // std dev = 3,815, 63,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   | | else if ( hascurrency(D, I) )
%   | | | then return 0.2609441195809803;  // std dev = 0,491, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return 0.13267278005591535;  // std dev = 3,568, 76,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=56 */
%   | else if ( livesin(B, J), livesin(A, J) )
%   | | then if ( worksat(B, K), iscitizenof(A, J) )
%   | | | then return 0.010574806511944765;  // std dev = 1,041, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.5431248104305718;  // std dev = 2,006, 34,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | | else if ( iscitizenof(A, L), livesin(B, M) )
%   | | | then return -0.06526748364552466;  // std dev = 4,845, 197,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=30 */
%   | | | else return 0.042826614499259105;  // std dev = 21,711, 2.437,000 (wgt'ed) examples reached here.  /* #neg=1.703 #pos=734 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( diedin(B, D), diedin(A, E) )
%   | then if ( livesin(F, E), livesin(F, D) )
%   | | then if ( iscitizenof(B, G), iscitizenof(A, G) )
%   | | | then return 0.09356719597350478;  // std dev = 0,741, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.4716231667746475;  // std dev = 1,715, 33,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | else if ( happenedin(H, D), graduatedfrom(B, I) )
%   | | | then return 0.179086575959978;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=31 */
%   | | | else return -0.027599882499050883;  // std dev = 3,925, 112,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=30 */
%   | else if ( livesin(B, J), livesin(A, J) )
%   | | then if ( iscitizenof(A, K), hascurrency(J, L) )
%   | | | then return 0.11234539902129953;  // std dev = 2,063, 23,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.38758478963078713;  // std dev = 1,867, 44,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | | else if ( influences(B, M), influences(N, A) )
%   | | | then return 0.2208731184059022;  // std dev = 3,009, 47,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=27 */
%   | | | else return 0.02267874235534085;  // std dev = 21,750, 2.560,000 (wgt'ed) examples reached here.  /* #neg=1.775 #pos=785 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( created(A, C), created(B, C) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( influences(B, D), diedin(B, E) )
%   | then if ( created(D, F), graduatedfrom(D, G) )
%   | | then if ( livesin(B, H), hascapital(H, E) )
%   | | | then return 0.1521182972568935;  // std dev = 1,083, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2630503966909286;  // std dev = 0,209, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( influences(A, I), diedin(D, J) )
%   | | | then return 0.5490258684375375;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.12556950565638728;  // std dev = 5,557, 154,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=71 */
%   | else if ( iscitizenof(A, K), iscitizenof(B, K) )
%   | | then if ( influences(B, L), wasbornin(A, M) )
%   | | | then return -0.2667292393493205;  // std dev = 1,175, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.11167208113797163;  // std dev = 5,190, 200,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=157 */
%   | | else if ( worksat(B, N), graduatedfrom(A, N) )
%   | | | then return 0.46951862216682366;  // std dev = 2,798, 64,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=56 */
%   | | | else return 0.0079904761786901;  // std dev = 21,040, 2.436,000 (wgt'ed) examples reached here.  /* #neg=1.770 #pos=666 */


Results
   AUC ROC   = 0.71061
   AUC PR    = 0.623818
   CLL	      = -0.558551
   Precision = 0.785303 at threshold = 0.5
   Recall    = 0.282383
   F1        = 0.415396


Total learning time: 733.166 seconds
Total inference time: 94.351 seconds
AUC ROC: 0.71061


Refined model AUC ROC: 0.71061


Dataset: 23_cora_yago2s, Fold: 3, Type: transfer, Time: 04:17:29
{'AUC ROC': 0.71061, 'Parameter Learning results': {'AUC ROC': 0.499748, 'AUC PR': 0.334499, 'F1': 0.005165, 'Learning time': 1264.087, 'Inference time': 96.34100000000001, 'CLL': -0.637522, 'Recall': 0.002591, 'Precision': [0.833333, 0.5]}, 'AUC PR': 0.623818, 'F1': 0.415396, 'Learning time': 1997.2530000000002, 'Inference time': 94.351, 'CLL': -0.558551, 'Mapping results': {'Generating paths time': 2.6579110622406006, 'Total time': 282.03449749946594, 'Possible mappings': 441488, 'Finding best mapping': 155.05739164352417, 'Generating mappings time': 102.9456422328949, 'Knowledge compiling time': 21.373545169830322}, 'Recall': 0.282383, 'Precision': [0.785303, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR hasacademicadvisor(A, B):
%   if ( graduatedfrom(B, C), worksat(D, C) )
%   then if ( worksat(B, E), graduatedfrom(A, E) )
%   | then return 0.7948577958590066;  // std dev = 0,243, 79,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=74 */
%   | else if ( graduatedfrom(A, C) )
%   | | then return 0.6795775065280838;  // std dev = 0,383, 56,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=46 */
%   | | else if ( iscitizenof(D, F), iscitizenof(A, F) )
%   | | | then return 0.3015878491266583;  // std dev = 7,385, 221,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=98 */
%   | | | else return 0.14586122281179553;  // std dev = 14,323, 1.001,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=288 */
%   else if ( influences(B, G), influences(H, A) )
%   | then if ( influences(H, G) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( influences(G, I), diedin(I, J) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07243464938522647;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( iscitizenof(B, K), iscitizenof(A, K) )
%   | | then return 0.5944126713632494;  // std dev = 0,441, 91,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=67 */
%   | | else return 0.12241954820733078;  // std dev = 0,441, 1.419,000 (wgt'ed) examples reached here.  /* #neg=1.044 #pos=375 */
WILL Produced-Tree #2
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(B, C), iscitizenof(A, C) )
%   then if ( dealswith(C, D), hascurrency(C, E) )
%   | then return 0.7731830554361511;  // std dev = 0,234, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | else if ( graduatedfrom(B, F), livesin(B, C) )
%   | | then return 0.6839917164303232;  // std dev = 0,302, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else if ( livesin(A, G), dealswith(C, H) )
%   | | | then return 0.2588826915937574;  // std dev = 2,425, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.5020510663830574;  // std dev = 4,887, 119,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=85 */
%   else if ( iscitizenof(A, I), iscitizenof(B, J) )
%   | then if ( isleaderof(K, J), isleaderof(K, I) )
%   | | then return 0.4557542292221635;  // std dev = 0,480, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else return 0.008925064638782615;  // std dev = 0,374, 418,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=73 */
%   | else if ( haswonprize(B, L), haswonprize(A, L) )
%   | | then return 0.7814347843297718;  // std dev = 0,220, 39,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else if ( diedin(B, M), influences(B, N) )
%   | | | then return 0.3175347026939185;  // std dev = 5,748, 136,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=66 */
%   | | | else return 0.131379645448261;  // std dev = 20,518, 2.066,000 (wgt'ed) examples reached here.  /* #neg=1.457 #pos=609 */
WILL Produced-Tree #3
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(B, C), iscitizenof(A, C) )
%   then if ( dealswith(C, D), hascurrency(C, E) )
%   | then return 0.6128481663432146;  // std dev = 0,323, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | else if ( graduatedfrom(B, F) )
%   | | then return 0.4526563170684049;  // std dev = 0,410, 110,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=83 */
%   | | else if ( graduatedfrom(A, G), owns(G, H) )
%   | | | then return 0.08679259089991019;  // std dev = 2,035, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.3972426616554573;  // std dev = 3,017, 45,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   else if ( iscitizenof(A, I), iscitizenof(B, J) )
%   | then return 0.021504649007871045;  // std dev = 0,385, 434,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=83 */
%   | else if ( graduatedfrom(B, K), graduatedfrom(A, K) )
%   | | then if ( haswonprize(B, L), livesin(B, M) )
%   | | | then return -0.04236332421751976;  // std dev = 0,864, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5537385869140599;  // std dev = 2,400, 43,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=36 */
%   | | else if ( haswonprize(B, N) )
%   | | | then return 0.18426691624848188;  // std dev = 11,675, 608,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=228 */
%   | | | else return 0.10012338686891344;  // std dev = 17,745, 1.586,000 (wgt'ed) examples reached here.  /* #neg=1.139 #pos=447 */
WILL Produced-Tree #4
% FOR hasacademicadvisor(A, B):
%   if ( haswonprize(B, C), haswonprize(A, D) )
%   then if ( haswonprize(A, C) )
%   | then return 0.5526256615350108;  // std dev = 0,296, 60,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | else if ( influences(B, E), worksat(B, F) )
%   | | then if ( haswonprize(E, C), wasbornin(E, G) )
%   | | | then return 0.7520299243589225;  // std dev = 0,220, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.16254625950916035;  // std dev = 1,843, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.06640087073867987;  // std dev = 0,434, 197,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=56 */
%   else if ( graduatedfrom(B, H) )
%   | then if ( graduatedfrom(A, H) )
%   | | then return 0.4773337071401396;  // std dev = 0,309, 73,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=65 */
%   | | else if ( influences(B, I), worksat(B, J) )
%   | | | then return 0.2565039994704778;  // std dev = 4,412, 87,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=43 */
%   | | | else return 0.09693932504571985;  // std dev = 14,872, 1.126,000 (wgt'ed) examples reached here.  /* #neg=775 #pos=351 */
%   | else if ( influences(A, K), livesin(A, L) )
%   | | then return -0.13283682308792766;  // std dev = 0,236, 30,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else return 0.08685164757987038;  // std dev = 0,441, 1.297,000 (wgt'ed) examples reached here.  /* #neg=918 #pos=379 */
WILL Produced-Tree #5
% FOR hasacademicadvisor(A, B):
%   if ( worksat(B, C), graduatedfrom(A, C) )
%   then if ( iscitizenof(A, D), hascapital(D, E) )
%   | then return 0.41943267284112334;  // std dev = 0,272, 58,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | else return 0.5919924545322656;  // std dev = 0,272, 50,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=47 */
%   else if ( iscitizenof(A, F), livesin(B, F) )
%   | then if ( graduatedfrom(A, G), dealswith(F, H) )
%   | | then return 0.5500639294891089;  // std dev = 0,254, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( graduatedfrom(B, I) )
%   | | | then return 0.3121384980646776;  // std dev = 2,742, 37,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | | else return 0.04503532967665302;  // std dev = 1,925, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( iscitizenof(A, J), iscitizenof(B, J) )
%   | | then if ( isleaderof(K, J), created(K, L) )
%   | | | then return 0.18625068426052493;  // std dev = 4,536, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.4001372890786927;  // std dev = 2,050, 60,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | | else if ( iscitizenof(B, M), worksat(B, N) )
%   | | | then return -0.014712197545112528;  // std dev = 8,053, 439,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=86 */
%   | | | else return 0.07550373865480227;  // std dev = 20,428, 2.127,000 (wgt'ed) examples reached here.  /* #neg=1.499 #pos=628 */
WILL Produced-Tree #6
% FOR hasacademicadvisor(A, B):
%   if ( worksat(B, C), graduatedfrom(A, C) )
%   then return 0.3876879073163949;  // std dev = 0,282, 108,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=99 */
%   else if ( iscitizenof(A, D), iscitizenof(B, D) )
%   | then if ( isleaderof(E, D), haschild(F, E) )
%   | | then if ( wasbornin(B, G), livesin(H, G) )
%   | | | then return 0.012732237361825403;  // std dev = 2,809, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return 0.21664067437841805;  // std dev = 3,480, 63,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=44 */
%   | | else if ( livesin(A, D), graduatedfrom(A, I) )
%   | | | then return 0.08306573669217482;  // std dev = 1,758, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.3437712966252666;  // std dev = 2,345, 74,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=67 */
%   | else if ( iscitizenof(A, J), graduatedfrom(A, K) )
%   | | then if ( worksat(B, L), graduatedfrom(M, L) )
%   | | | then return -0.05875944111314045;  // std dev = 5,088, 211,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=35 */
%   | | | else return 0.030619851130968687;  // std dev = 9,970, 563,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=144 */
%   | | else if ( livesin(B, N), hascurrency(N, P) )
%   | | | then return 0.17018890092612665;  // std dev = 6,653, 195,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=80 */
%   | | | else return 0.058914897851455234;  // std dev = 17,808, 1.632,000 (wgt'ed) examples reached here.  /* #neg=1.161 #pos=471 */
WILL Produced-Tree #7
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( haswonprize(B, D), created(A, E) )
%   | then return -0.272503695026124;  // std dev = 0,597, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( isleaderof(F, C), created(F, G) )
%   | | then if ( influences(B, H), worksat(A, I) )
%   | | | then return -0.24714023522247375;  // std dev = 1,011, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1621451630984433;  // std dev = 4,846, 130,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=91 */
%   | | else return 0.25207652501168254;  // std dev = 0,206, 81,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=76 */
%   else if ( worksat(B, J), graduatedfrom(A, J) )
%   | then if ( graduatedfrom(B, J) )
%   | | then return 0.11087576582403465;  // std dev = 0,343, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0.37749106781060704;  // std dev = 0,309, 62,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=55 */
%   | else if ( haswonprize(B, K), haswonprize(A, K) )
%   | | then return 0.4396174275507055;  // std dev = 0,265, 45,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | else if ( influences(B, A) )
%   | | | then return 0.6646906519547845;  // std dev = 0,284, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.03137193301228814;  // std dev = 21,753, 2.540,000 (wgt'ed) examples reached here.  /* #neg=1.867 #pos=673 */
WILL Produced-Tree #8
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), iscitizenof(B, C) )
%   then if ( graduatedfrom(A, D), haswonprize(B, E) )
%   | then if ( graduatedfrom(B, F), worksat(G, D) )
%   | | then if ( hascurrency(C, H), haswonprize(G, I) )
%   | | | then return 0.23996913533903988;  // std dev = 1,671, 27,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return -0.10235111460265973;  // std dev = 1,172, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( livesin(A, J), wasbornin(B, K) )
%   | | | then return 0.4865632869800857;  // std dev = 0,199, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2777511482191446;  // std dev = 1,466, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return 0.16558672300452676;  // std dev = 0,341, 166,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=135 */
%   else if ( wasbornin(B, L), wasbornin(A, L) )
%   | then return 0.6044844781357296;  // std dev = 0,295, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( iscitizenof(B, M), iscitizenof(A, N) )
%   | | then return -0.026577238992596758;  // std dev = 0,365, 432,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=81 */
%   | | else if ( livesin(B, P), diedin(Q, P) )
%   | | | then return 0.35897980440790755;  // std dev = 2,872, 38,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=24 */
%   | | | else return 0.045021576860802534;  // std dev = 20,474, 2.194,000 (wgt'ed) examples reached here.  /* #neg=1.514 #pos=680 */
WILL Produced-Tree #9
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), dealswith(D, C) )
%   then if ( influences(B, E), iscitizenof(E, C) )
%   | then return 0.24221037290627506;  // std dev = 0,442, 53,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   | else return 0.010155476625690343;  // std dev = 0,397, 1.266,000 (wgt'ed) examples reached here.  /* #neg=859 #pos=407 */
%   else if ( livesin(B, F), hascurrency(F, G) )
%   | then if ( livesin(A, F) )
%   | | then return 0.5194656344153347;  // std dev = 0,374, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( livesin(A, H) )
%   | | | then return -0.1769723905379179;  // std dev = 1,141, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.15103814923628517;  // std dev = 5,584, 139,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=63 */
%   | else if ( worksat(B, I), worksat(A, J) )
%   | | then if ( owns(I, K), owns(J, L) )
%   | | | then return 0.25824059686688094;  // std dev = 3,324, 63,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | | | else return 0.05565705700452734;  // std dev = 5,069, 148,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=55 */
%   | | else if ( worksat(B, M) )
%   | | | then return -0.032253505926232946;  // std dev = 6,715, 285,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=69 */
%   | | | else return 0.04918019865352076;  // std dev = 13,417, 901,000 (wgt'ed) examples reached here.  /* #neg=621 #pos=280 */
WILL Produced-Tree #10
% FOR hasacademicadvisor(A, B):
%   if ( iscitizenof(A, C), wasbornin(B, D) )
%   then if ( iscitizenof(B, C), dealswith(C, E) )
%   | then return 0.1431755266381296;  // std dev = 0,297, 48,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=41 */
%   | else return -0.02176583794741621;  // std dev = 0,385, 450,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=122 */
%   else if ( graduatedfrom(B, F), influences(B, G) )
%   | then if ( wasbornin(B, H), graduatedfrom(G, I) )
%   | | then if ( happenedin(J, H), participatedin(K, J) )
%   | | | then return 0.15580464592471902;  // std dev = 1,600, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.25523799915719253;  // std dev = 0,938, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( worksat(B, L), diedin(G, M) )
%   | | | then return 0.4953618518036723;  // std dev = 0,911, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.13351230051646268;  // std dev = 5,294, 135,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=63 */
%   | else if ( worksat(B, N), graduatedfrom(A, N) )
%   | | then return 0.229998628602215;  // std dev = 0,245, 79,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=74 */
%   | | else if ( haswonprize(B, P), haswonprize(A, P) )
%   | | | then return 0.27708672544020774;  // std dev = 1,546, 34,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return 0.02020262909717926;  // std dev = 19,787, 2.104,000 (wgt'ed) examples reached here.  /* #neg=1.490 #pos=614 */


Results
   AUC ROC   = 0.712325
   AUC PR    = 0.628442
   CLL	      = -0.554544
   Precision = 0.804878 at threshold = 0.5
   Recall    = 0.307772
   F1        = 0.445277


Total learning time: 775.497 seconds
Total inference time: 65.849 seconds
AUC ROC: 0.712325


Dataset: 23_cora_yago2s, Fold: 3, Type: scratch, Time: 04:31:34
{'AUC ROC': 0.712325, 'AUC PR': 0.628442, 'F1': 0.445277, 'Learning time': 775.497, 'Inference time': 65.849, 'CLL': -0.554544, 'Recall': 0.307772, 'Precision': [0.804878, 0.5]}


