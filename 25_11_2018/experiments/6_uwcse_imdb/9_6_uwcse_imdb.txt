Starting experiment #9 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.28314893509951233;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then return 0.41370449065506687;  // std dev = 0,497, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | else if ( ta(C, I, J), advisedby(I, K) )
%   | | | then return 0.2905813675319448;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), publication(M, L) )
%   | then if ( publication(M, N), tempadvisedby(P, N) )
%   | | then return 0.410780514046881;  // std dev = 0,497, 76,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=42 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( advisedby(A, Q), projectmember(R, Q) )
%   | | then return 0.24276431971489695;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, S) )
%   | | | then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.35814893509951146;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( publication(E, F), tempadvisedby(G, F) )
%   | then return 0.2426539616704549;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( advisedby(A, H) )
%   | | then return 0.24864574434288686;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.47931674939104224;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( advisedby(A, I), publication(J, I) )
%   | then if ( advisedby(K, I), publication(J, K) )
%   | | then if ( ta(L, K, M), ta(N, A, P) )
%   | | | then return 0.4153847991005589;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.3072415467642235;  // std dev = 4,660, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.4473614590907751;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, Q) )
%   | | then if ( tempadvisedby(R, Q), publication(S, R) )
%   | | | then return 0.2397492063672915;  // std dev = 2,267, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.36591551929031074;  // std dev = 3,400, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return 0.2564741173378036;  // std dev = 0,495, 45,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( publication(C, F), tempadvisedby(G, F) )
%   | then return 0.20366993074012493;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else return 0.2649300436190446;  // std dev = 0,494, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( advisedby(A, H), publication(I, A) )
%   | then if ( tempadvisedby(J, H) )
%   | | then if ( publication(I, J) )
%   | | | then return 0.08020144077344012;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26675841259151417;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.3985054509952742;  // std dev = 0,472, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, K), publication(L, K) )
%   | | then if ( publication(L, M), projectmember(N, M) )
%   | | | then return 0.4722402691212687;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.259790379857983;  // std dev = 4,079, 67,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=35 */
%   | | else if ( tempadvisedby(A, P) )
%   | | | then return 0.27184478960633257;  // std dev = 4,104, 68,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   | | | else return 0.19126692103564075;  // std dev = 3,031, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then if ( sameperson(A, E) )
%   | | then if ( tempadvisedby(G, F) )
%   | | | then return 0.19756491196123968;  // std dev = 3,905, 62,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   | | | else return 0.14593326018307315;  // std dev = 2,089, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0.4902246325917276;  // std dev = 0,863, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( ta(C, H, I), advisedby(H, J) )
%   | | then return 0.15000073810145287;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( publication(K, A), tempadvisedby(A, L) )
%   | | | then return 0.06351159236993398;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24345419936808058;  // std dev = 1,650, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( tempadvisedby(A, M), publication(N, A) )
%   | then return 0.1456988648660431;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( advisedby(A, P), tempadvisedby(Q, P) )
%   | | then return 0.204928306765948;  // std dev = 0,496, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else return 0.24396263323164105;  // std dev = 0,493, 69,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( tempadvisedby(A, F), publication(C, F) )
%   | then return 0.05081735736091131;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.1403493084757063;  // std dev = 0,493, 47,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   else if ( publication(G, A), advisedby(A, H) )
%   | then if ( tempadvisedby(I, H) )
%   | | then if ( publication(G, I) )
%   | | | then return 0.022633208722596037;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16899535699740595;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.2612730435114054;  // std dev = 0,471, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, J), advisedby(K, J) )
%   | | then if ( ta(L, K, M), ta(N, A, M) )
%   | | | then return 0.10094631260004956;  // std dev = 1,707, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.19308040545641067;  // std dev = 3,497, 50,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | else if ( advisedby(A, P), publication(Q, P) )
%   | | | then return 0.17101590747826537;  // std dev = 4,179, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.11929574132591693;  // std dev = 3,252, 44,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( publication(E, F), professor(F) )
%   | then if ( advisedby(G, F), ta(H, G, D) )
%   | | then if ( samecourse(C, H), tempadvisedby(I, F) )
%   | | | then return 0.09845532789276211;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.053606207236815154;  // std dev = 1,537, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.17160642227270895;  // std dev = 1,216, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.14506957320663894;  // std dev = 0,481, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( advisedby(A, J), publication(K, A) )
%   | then if ( publication(K, J) )
%   | | then return 0.12330680855834737;  // std dev = 0,495, 42,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   | | else return 0.22958685937307333;  // std dev = 0,467, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( tempadvisedby(A, L), publication(M, A) )
%   | | then return 0.07227557800260184;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( tempadvisedby(A, N), advisedby(P, N) )
%   | | | then return 0.14276680582652368;  // std dev = 3,666, 55,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | | | else return 0.11633771712773032;  // std dev = 5,298, 115,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=57 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, F), publication(G, E) )
%   | then if ( tempadvisedby(A, H), tempadvisedby(E, I) )
%   | | then return 0.029172569796196895;  // std dev = 0,485, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.10998731085434874;  // std dev = 0,491, 76,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=37 */
%   | else if ( ta(C, J, K), tempadvisedby(J, L) )
%   | | then if ( projectmember(M, L), publication(N, L) )
%   | | | then return 0.3594084703123641;  // std dev = 0,809, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0018115442557204663;  // std dev = 2,745, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else return 0.12111057693055173;  // std dev = 0,488, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( tempadvisedby(A, P), publication(Q, A) )
%   | then return 0.055532628464547186;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( advisedby(A, R), projectmember(S, R) )
%   | | then return 0.06211978065047959;  // std dev = 0,481, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( tempadvisedby(A, T) )
%   | | | then return 0.12695664433995993;  // std dev = 2,470, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.10324653364679327;  // std dev = 4,890, 98,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=52 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), publication(D, A) )
%   then if ( publication(D, C) )
%   | then return 0.007614811813520916;  // std dev = 0,483, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.09098473986441233;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( tempadvisedby(A, E) )
%   | then if ( tempadvisedby(F, E), publication(G, F) )
%   | | then if ( ta(H, F, I) )
%   | | | then return -0.005993355541966438;  // std dev = 1,552, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.05564124001586877;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( advisedby(J, E), publication(K, J) )
%   | | | then return 0.13641097848862885;  // std dev = 2,688, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | | else return 0.05706959516562152;  // std dev = 1,951, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( advisedby(A, L), projectmember(M, L) )
%   | | then return 0.10900656080989982;  // std dev = 0,479, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( ta(N, A, P), advisedby(A, Q) )
%   | | | then return 0.051519516706654146;  // std dev = 4,362, 78,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=36 */
%   | | | else return 0.07633737127897511;  // std dev = 5,240, 113,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=59 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( advisedby(A, C), publication(D, C) )
%   then if ( advisedby(A, E), projectmember(F, E) )
%   | then return 0.4915381400931414;  // std dev = 0,114, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(G, C), publication(H, G) )
%   | | then if ( publication(H, C), publication(D, A) )
%   | | | then return -3.761387634742319E-4;  // std dev = 1,542, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13487332248087652;  // std dev = 2,024, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( tempadvisedby(I, C), publication(D, A) )
%   | | | then return 0.021985920947358666;  // std dev = 2,979, 36,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.05261791197451488;  // std dev = 4,622, 88,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=46 */
%   else if ( advisedby(A, J), tempadvisedby(K, J) )
%   | then return 0.00118963033782738;  // std dev = 0,486, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( tempadvisedby(A, L), publication(M, A) )
%   | | then if ( publication(M, L) )
%   | | | then return 0.005847714119896735;  // std dev = 1,366, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.06887235870567235;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.0603474330511963;  // std dev = 0,489, 94,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=48 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( advisedby(A, C), publication(D, C) )
%   then if ( advisedby(E, C), publication(D, E) )
%   | then if ( ta(F, E, G) )
%   | | then if ( sameperson(A, E) )
%   | | | then return 0.025239520151580853;  // std dev = 2,649, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.07501032518949403;  // std dev = 3,566, 52,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | else if ( ta(H, A, I) )
%   | | | then return -0.04117679238008374;  // std dev = 2,298, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.036071187194686355;  // std dev = 2,702, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | else return 0.10076340927775265;  // std dev = 0,465, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   else if ( tempadvisedby(A, J) )
%   | then if ( tempadvisedby(K, J), publication(L, K) )
%   | | then return 0.0061639847608796995;  // std dev = 0,492, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else return 0.06753245886098365;  // std dev = 0,485, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | else if ( publication(M, A) )
%   | | then return 0.06530570316238953;  // std dev = 0,486, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else return -9.482133621942337E-4;  // std dev = 0,489, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */


Predicates from source: ['inphase(person,prequals).', 'samecourse(course,course).', 'tempadvisedby(person,person).', 'publication(title,person).', 'advisedby(person,person).', 'sameperson(person,person).', 'professor(person).', 'ta(course,person,quarter).', 'projectmember(project,person).']

Starting fold 1

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.026052236557006836
   Generating paths time   = 2.716691493988037
   Generating mappings time   = 3.8960068225860596
   Possible mappings   = [5187]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 6.638761281967163


Best mapping found: ['professor(A) -> female(A)', 'samecourse(A,B) -> workedunder(B,A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
0;false,false,false;workedunder(S, A).;false;false
0;false;workedunder(L, A), movie(M, L).;true;true
0;false,false;workedunder(Q, A), workedunder(Q, R).;false;true
0;false,true;movie(M, N), workedunder(N, P).;false;false
1;;genre(A, B) :- movie(E, A).;true;true
1;true;movie(E, F), workedunder(F, G).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true,false;workedunder(H, A).;false;false
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
2;;genre(A, B) :- movie(C, A).;true;true
2;true;movie(C, F), workedunder(F, G).;false;false
2;false;workedunder(H, A), movie(I, A).;true;true
2;false,true;workedunder(H, J).;true;false
2;false,true,true;movie(I, J).;false;false
2;false,false,true;movie(L, M), workedunder(M, N).;false;false
2;false,false,false;workedunder(P, A).;false;false
2;false,false;workedunder(K, A), movie(L, K).;true;true
3;;genre(A, B) :- workedunder(F, E).;true;true
3;true;workedunder(A, E).;true;true
3;false;workedunder(M, A), movie(N, A).;false;true
3;true,false,false;movie(K, A), workedunder(L, A).;false;false
3;true,false;workedunder(J, H).;false;true
3;true,true;workedunder(F, G).;false;false
3;false,false;workedunder(P, A), workedunder(P, Q).;false;false
4;;genre(A, B) :- movie(C, A).;true;true
4;true;workedunder(F, A), movie(C, F).;false;false
4;false;movie(G, A), workedunder(H, A).;true;true
4;false,true;workedunder(H, I).;true;false
4;false,true,true;movie(G, I).;false;false
4;false,false,false;workedunder(P, A), movie(Q, P).;false;false
4;false,false;workedunder(J, A), workedunder(J, K).;false;true
5;;genre(A, B) :- movie(E, A).;true;true
5;true;movie(E, F), female(F).;true;false
5;true,true;workedunder(F, G).;true;false
5;false,false;workedunder(L, A), movie(M, A).;false;true
5;false,true;movie(K, J).;false;false
5;false,false,false;workedunder(N, A), workedunder(N, P).;false;false
5;true,true,true;workedunder(H, C), workedunder(F, I).;false;false
5;false;workedunder(J, A), movie(K, A).;true;true
6;;genre(A, B) :- movie(G, E).;true;true
6;true;workedunder(H, A), workedunder(I, E).;false;true
6;false;workedunder(P, A), movie(Q, A).;false;true
6;false,false;workedunder(R, A), workedunder(R, S).;false;true
6;true,false;workedunder(L, J).;true;false
6;false,false,false;workedunder(T, A).;false;false
6;true,false,true;workedunder(L, M), movie(N, L).;false;false
7;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true
7;true;movie(D, C).;false;false
7;false,true,false;workedunder(E, J), movie(K, J).;false;false
7;false;workedunder(E, A).;true;true
7;false,true;workedunder(E, F), movie(G, F).;false;true
7;false,false,false;workedunder(Q, A).;false;false
7;false,false;workedunder(L, A), workedunder(L, M).;false;true
8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true
8;true;workedunder(E, A), workedunder(E, F).;false;true
8;false;workedunder(J, A), workedunder(J, K).;false;true
8;true,false,false;workedunder(C, I), movie(D, A).;false;false
8;false,false;workedunder(L, A), movie(M, A).;true;false
8;true,false;workedunder(C, G), movie(H, G).;true;true
8;false,false,true;movie(M, L).;false;false
8;true,false,true;movie(H, C), movie(D, A).;false;false
9;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true
9;true;workedunder(C, E), movie(D, E).;true;false
9;false;workedunder(J, A).;true;true
9;false,true;workedunder(J, K), movie(L, K).;false;false
9;true,true;workedunder(A, E).;false;false
9;false,false;movie(M, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.2970143868412816;  // std dev = 1,982, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.24701898473631773;  // std dev = 1,918, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, D) )
%   | then if ( workedunder(C, E) )
%   | | then return -0.1981626389355524;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, G) )
%   | | then return 0.5981632247449707;  // std dev = 3,65e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.45008047940765833;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.1685441689011167;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), female(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.0983344800449634;  // std dev = 1,147, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then if ( workedunder(E, A), workedunder(F, D) )
%   | then return 0.3210914436201389;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I), movie(J, G) )
%   | | | then return -0.15893280924598271;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return 0.2554312431571759;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.13882030862075267;  // std dev = 9,13e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0.20994065329142095;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), workedunder(G, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(I, A), movie(J, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12304094268795654;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then if ( workedunder(C, E), movie(D, E) )
%   | then if ( workedunder(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.17723066220218664;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.1103683510823643;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.357232
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 2.032 seconds
Total inference time: 1.18 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'true': [0.0, 0, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [1.982, 11, 11]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [1.918, 11, 11]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(A, D)', 'true,true': 'workedunder(C, E)', 'true,false': 'workedunder(F, G)'}, {'true,false,true': [3.65e-08, 0, 11], 'true,true,true': [1.05e-08, 11, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [1.29e-08, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 11]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), female(D)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.147, 11, 11], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, D)', 'true': 'workedunder(E, A), workedunder(F, D)', 'true,false': 'workedunder(G, H)', 'true,false,true': 'workedunder(G, I), movie(J, G)'}, {'true,true': [2.11e-08, 0, 11], 'true,false,true,true': [7.45e-09, 11, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'true': 'movie(D, C)', 'false': 'workedunder(E, A)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(F, A), workedunder(F, G)'}, {'false,false,false,false': [9.13e-09, 11, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 11]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'true': 'workedunder(E, A), workedunder(E, F)', 'false': 'workedunder(G, A), workedunder(G, H)', 'false,false': 'workedunder(I, A), movie(J, A)'}, {'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 11], 'false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'true': 'workedunder(C, E), movie(D, E)', 'false': 'workedunder(F, A)', 'true,true': 'workedunder(A, E)', 'false,false': 'movie(G, A)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 11, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [1.05e-08, 0, 11]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'false': [nan, -1.0092936587501423e-17], 'false,false,false': [nan, -1.0092936587501423e-17], 'false,false': [nan, -1.0092936587501423e-17]}, {'': [0.17847162811629388, nan], 'true': [0.17847162811629388, nan]}, {'': [0.16713951076378458, nan], 'true': [0.16713951076378458, nan]}, {'': [0.1585337202916329, nan], 'true': [1.0092936587501423e-17, 1.2111523905001707e-16], 'true,true': [1.0092936587501423e-17, nan], 'true,false': [1.2111523905001707e-16, nan]}, {'': [0.095674113873789, nan], 'true': [-4.0371746350005693e-17, 1.5139404881252134e-17]}, {'': [0.05980913536243706, nan], 'true': [0.05980913536243706, nan], 'true,true,true': [0.05980913536243706, nan], 'true,true': [0.05980913536243706, nan]}, {'': [0.05760582083491963, nan], 'true': [4.0371746350005693e-17, 5.046468293750712e-18], 'true,false,true': [5.046468293750712e-18, nan], 'true,false': [5.046468293750712e-18, nan]}, {'': [2.0185873175002847e-17, 7.569702440626067e-18], 'true': [2.0185873175002847e-17, nan], 'false': [nan, 7.569702440626067e-18], 'false,false,false': [nan, 7.569702440626067e-18], 'false,false': [nan, 7.569702440626067e-18]}, {'': [-1.5139404881252134e-17, -5.046468293750712e-18], 'true': [-1.5139404881252134e-17, nan], 'false': [nan, -5.046468293750712e-18], 'false,false': [nan, -5.046468293750712e-18]}, {'': [1.0092936587501423e-17, 0.0], 'true': [1.0092936587501423e-17, nan], 'false': [nan, 0.0], 'true,true': [nan, 1.0092936587501423e-17], 'false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(A, D).;true;true', '4;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(E, A), workedunder(F, D).;true;true', '7;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '9;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, E) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 2.469 seconds
Total inference time: 0.95 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 08:59:12
{'CLL': -0.352709, 'Recall': 1.0, 'F1': 0.888889, 'parameter': {'CLL': -0.357232, 'Recall': 1.0, 'F1': 0.888889, 'AUC ROC': 0.875, 'Inference time': 1.18, 'Learning time': 2.032, 'Precision': [0.8, 0.5], 'AUC PR': 0.8}, 'AUC ROC': 0.875, 'Inference time': 0.95, 'Mapping results': {'Knowledge compiling time': 0.026052236557006836, 'Generating paths time': 2.716691493988037, 'Possible mappings': [5187], 'Max mapping': 65536, 'Finding best mapping': 9.5367431640625e-07, 'Generating mappings time': 3.8960068225860596, 'Numbers preds mapping': [9], 'Total time': 6.638761281967163}, 'Learning time': 4.5009999999999994, 'Precision': [0.8, 0.5], 'AUC PR': 0.8}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.868 seconds
Total inference time: 0.681 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 08:59:15
{'CLL': -0.352709, 'Recall': 1.0, 'F1': 0.888889, 'AUC ROC': 0.875, 'Inference time': 0.681, 'Learning time': 1.868, 'Precision': [0.8, 0.5], 'AUC PR': 0.8}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.726963
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.879 seconds
Total inference time: 0.595 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 08:59:17
{'CLL': -0.726963, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.875, 'Inference time': 0.595, 'Learning time': 0.879, 'Precision': [nan, 0.5], 'AUC PR': 0.8}


Starting fold 2

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.01812148094177246
   Generating paths time   = 2.8862416744232178
   Generating mappings time   = 3.8438913822174072
   Possible mappings   = [5187]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 6.748263835906982


Best mapping found: ['professor(A) -> actor(A)', 'samecourse(A,B) -> workedunder(B,A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
0;false,false,false;workedunder(S, A).;false;false
0;false;workedunder(L, A), movie(M, L).;true;true
0;false,false;workedunder(Q, A), workedunder(Q, R).;false;true
0;false,true;movie(M, N), workedunder(N, P).;false;false
1;;genre(A, B) :- movie(E, A).;true;true
1;true;movie(E, F), workedunder(F, G).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true,false;workedunder(H, A).;false;false
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
2;;genre(A, B) :- movie(C, A).;true;true
2;true;movie(C, F), workedunder(F, G).;false;false
2;false;workedunder(H, A), movie(I, A).;true;true
2;false,true;workedunder(H, J).;true;false
2;false,true,true;movie(I, J).;false;false
2;false,false,true;movie(L, M), workedunder(M, N).;false;false
2;false,false,false;workedunder(P, A).;false;false
2;false,false;workedunder(K, A), movie(L, K).;true;true
3;;genre(A, B) :- workedunder(F, E).;true;true
3;true;workedunder(E, A).;true;true
3;false;workedunder(M, A), movie(N, A).;false;true
3;true,false,false;movie(K, A), workedunder(L, A).;false;false
3;true,false;workedunder(J, H).;false;true
3;true,true;workedunder(F, G).;false;false
3;false,false;workedunder(P, A), workedunder(P, Q).;false;false
4;;genre(A, B) :- movie(C, A).;true;true
4;true;workedunder(F, A), movie(C, F).;false;false
4;false;movie(G, A), workedunder(H, A).;true;true
4;false,true;workedunder(H, I).;true;false
4;false,true,true;movie(G, I).;false;false
4;false,false,false;workedunder(P, A), movie(Q, P).;false;false
4;false,false;workedunder(J, A), workedunder(J, K).;false;true
5;;genre(A, B) :- movie(E, A).;true;true
5;true;movie(E, F), actor(F).;true;false
5;true,true;workedunder(F, G).;true;false
5;false,false;workedunder(L, A), movie(M, A).;false;true
5;false,true;movie(K, J).;false;false
5;false,false,false;workedunder(N, A), workedunder(N, P).;false;false
5;true,true,true;workedunder(H, C), workedunder(F, I).;false;false
5;false;workedunder(J, A), movie(K, A).;true;true
6;;genre(A, B) :- movie(G, E).;true;true
6;true;workedunder(H, A), workedunder(I, E).;false;true
6;false;workedunder(P, A), movie(Q, A).;false;true
6;false,false;workedunder(R, A), workedunder(R, S).;false;true
6;true,false;workedunder(L, J).;true;false
6;false,false,false;workedunder(T, A).;false;false
6;true,false,true;workedunder(L, M), movie(N, L).;false;false
7;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true
7;true;movie(D, C).;false;false
7;false,true,false;workedunder(E, J), movie(K, J).;false;false
7;false;workedunder(E, A).;true;true
7;false,true;workedunder(E, F), movie(G, F).;false;true
7;false,false,false;workedunder(Q, A).;false;false
7;false,false;workedunder(L, A), workedunder(L, M).;false;true
8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true
8;true;workedunder(E, A), workedunder(E, F).;false;true
8;false;workedunder(J, A), workedunder(J, K).;false;true
8;true,false,false;workedunder(C, I), movie(D, A).;false;false
8;false,false;workedunder(L, A), movie(M, A).;true;false
8;true,false;workedunder(C, G), movie(H, G).;true;true
8;false,false,true;movie(M, L).;false;false
8;true,false,true;movie(H, C), movie(D, A).;false;false
9;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true
9;true;workedunder(C, E), movie(D, E).;true;false
9;false;workedunder(J, A).;true;true
9;false,true;workedunder(J, K), movie(L, K).;false;false
9;true,true;workedunder(E, A).;false;false
9;false,false;movie(M, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.29881865438287963;  // std dev = 2,140, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.24838259538055676;  // std dev = 2,084, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then return 0.2008123487653608;  // std dev = 2,041, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.49035653077655844;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.2325733106170486;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.11078847004515442;  // std dev = 1,675, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then if ( workedunder(E, A), workedunder(F, D) )
%   | then return 0.34122400473792547;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I), movie(J, G) )
%   | | | then return -0.21154754955852592;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return 0.26121369587710647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.17840814698563334;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0.20542943380383225;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), workedunder(G, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(I, A), movie(J, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.15373814909569547;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then if ( workedunder(C, E), movie(D, E) )
%   | then if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.16571843850404927;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.1347827798482824;  // std dev = 9,13e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.345782
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.63 seconds
Total inference time: 1.532 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'true': [0.961, 1, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [2.14, 12, 12]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [2.084, 12, 12]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,false,true': [2.041, 12, 12], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [1.49e-08, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), actor(D)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.675, 12, 12], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, D)', 'true': 'workedunder(E, A), workedunder(F, D)', 'true,false': 'workedunder(G, H)', 'true,false,true': 'workedunder(G, I), movie(J, G)'}, {'true,true': [0.961, 1, 12], 'true,false,true,true': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'true': 'movie(D, C)', 'false': 'workedunder(E, A)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(F, A), workedunder(F, G)'}, {'false,false,false,false': [7.45e-09, 11, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'true': 'workedunder(E, A), workedunder(E, F)', 'false': 'workedunder(G, A), workedunder(G, H)', 'false,false': 'workedunder(I, A), movie(J, A)'}, {'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.961, 1, 12], 'false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'true': 'workedunder(C, E), movie(D, E)', 'false': 'workedunder(F, A)', 'true,true': 'workedunder(E, A)', 'false,false': 'movie(G, A)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [9.13e-09, 11, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [0.961, 1, 12]}]]
[{'': [0.07100591715976314, -1.0092936587501423e-17], 'false': [nan, -1.0092936587501423e-17], 'false,false,false': [nan, -1.0092936587501423e-17], 'false,false': [nan, -1.0092936587501423e-17]}, {'': [0.19076867375623552, nan], 'true': [0.19076867375623552, nan]}, {'': [0.18100230240526075, nan], 'true': [0.18100230240526075, nan]}, {'': [0.17349358933502046, nan], 'true': [nan, 0.17349358933502046], 'true,false': [0.17349358933502046, nan]}, {'': [0.16821108784967428, nan], 'true': [0.07100591715976323, 2.0185873175002847e-17]}, {'': [0.11688983233052823, nan], 'true': [0.11688983233052823, nan], 'true,true,true': [0.11688983233052823, nan], 'true,true': [0.11688983233052823, nan]}, {'': [0.1143201564254656, nan], 'true': [0.0710059171597633, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.07100591715976332, 5.046468293750712e-18], 'true': [0.07100591715976332, nan], 'false': [nan, 5.046468293750712e-18], 'false,false,false': [nan, 5.046468293750712e-18], 'false,false': [nan, 5.046468293750712e-18]}, {'': [0.07100591715976334, -1.0092936587501423e-17], 'true': [0.07100591715976334, nan], 'false': [nan, -1.0092936587501423e-17], 'false,false': [nan, -1.0092936587501423e-17]}, {'': [0.07100591715976333, 7.569702440626067e-18], 'true': [0.07100591715976333, nan], 'false': [nan, 7.569702440626067e-18], 'true,true': [nan, 0.07100591715976333], 'false,false': [7.569702440626067e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '4;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(E, A), workedunder(F, D).;true;true', '7;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '9;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, E) )
%   then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 3.798 seconds
Total inference time: 0.789 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 08:59:32
{'CLL': -0.320018, 'Recall': 1.0, 'F1': 0.897436, 'parameter': {'CLL': -0.345782, 'Recall': 1.0, 'F1': 0.897436, 'AUC ROC': 0.885714, 'Inference time': 1.532, 'Learning time': 1.63, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953}, 'AUC ROC': 0.885714, 'Inference time': 0.789, 'Mapping results': {'Knowledge compiling time': 0.01812148094177246, 'Generating paths time': 2.8862416744232178, 'Possible mappings': [5187], 'Max mapping': 65536, 'Finding best mapping': 1.1920928955078125e-06, 'Generating mappings time': 3.8438913822174072, 'Numbers preds mapping': [9], 'Total time': 6.748263835906982}, 'Learning time': 5.428, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 3.04 seconds
Total inference time: 0.612 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 08:59:36
{'CLL': -0.320018, 'Recall': 1.0, 'F1': 0.897436, 'AUC ROC': 0.885714, 'Inference time': 0.612, 'Learning time': 3.04, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.75044
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.217 seconds
Total inference time: 1.028 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 08:59:39
{'CLL': -0.75044, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.885714, 'Inference time': 1.028, 'Learning time': 1.217, 'Precision': [nan, 0.5], 'AUC PR': 0.813953}


Starting fold 3

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.019948482513427734
   Generating paths time   = 2.7738962173461914
   Generating mappings time   = 3.9119796752929688
   Possible mappings   = [5187]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 6.7058327198028564


Best mapping found: ['professor(A) -> actor(A)', 'samecourse(A,B) -> workedunder(B,A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
0;false,false,false;workedunder(S, A).;false;false
0;false;workedunder(L, A), movie(M, L).;true;true
0;false,false;workedunder(Q, A), workedunder(Q, R).;false;true
0;false,true;movie(M, N), workedunder(N, P).;false;false
1;;genre(A, B) :- movie(E, A).;true;true
1;true;movie(E, F), workedunder(F, G).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true,false;workedunder(H, A).;false;false
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
2;;genre(A, B) :- movie(C, A).;true;true
2;true;movie(C, F), workedunder(F, G).;false;false
2;false;workedunder(H, A), movie(I, A).;true;true
2;false,true;workedunder(H, J).;true;false
2;false,true,true;movie(I, J).;false;false
2;false,false,true;movie(L, M), workedunder(M, N).;false;false
2;false,false,false;workedunder(P, A).;false;false
2;false,false;workedunder(K, A), movie(L, K).;true;true
3;;genre(A, B) :- workedunder(F, E).;true;true
3;true;workedunder(E, A).;true;true
3;false;workedunder(M, A), movie(N, A).;false;true
3;true,false,false;movie(K, A), workedunder(L, A).;false;false
3;true,false;workedunder(J, H).;false;true
3;true,true;workedunder(F, G).;false;false
3;false,false;workedunder(P, A), workedunder(P, Q).;false;false
4;;genre(A, B) :- movie(C, A).;true;true
4;true;workedunder(F, A), movie(C, F).;false;false
4;false;movie(G, A), workedunder(H, A).;true;true
4;false,true;workedunder(H, I).;true;false
4;false,true,true;movie(G, I).;false;false
4;false,false,false;workedunder(P, A), movie(Q, P).;false;false
4;false,false;workedunder(J, A), workedunder(J, K).;false;true
5;;genre(A, B) :- movie(E, A).;true;true
5;true;movie(E, F), actor(F).;true;false
5;true,true;workedunder(F, G).;true;false
5;false,false;workedunder(L, A), movie(M, A).;false;true
5;false,true;movie(K, J).;false;false
5;false,false,false;workedunder(N, A), workedunder(N, P).;false;false
5;true,true,true;workedunder(H, C), workedunder(F, I).;false;false
5;false;workedunder(J, A), movie(K, A).;true;true
6;;genre(A, B) :- movie(G, E).;true;true
6;true;workedunder(H, A), workedunder(I, E).;false;true
6;false;workedunder(P, A), movie(Q, A).;false;true
6;false,false;workedunder(R, A), workedunder(R, S).;false;true
6;true,false;workedunder(L, J).;true;false
6;false,false,false;workedunder(T, A).;false;false
6;true,false,true;workedunder(L, M), movie(N, L).;false;false
7;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true
7;true;movie(D, C).;false;false
7;false,true,false;workedunder(E, J), movie(K, J).;false;false
7;false;workedunder(E, A).;true;true
7;false,true;workedunder(E, F), movie(G, F).;false;true
7;false,false,false;workedunder(Q, A).;false;false
7;false,false;workedunder(L, A), workedunder(L, M).;false;true
8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true
8;true;workedunder(E, A), workedunder(E, F).;false;true
8;false;workedunder(J, A), workedunder(J, K).;false;true
8;true,false,false;workedunder(C, I), movie(D, A).;false;false
8;false,false;workedunder(L, A), movie(M, A).;true;false
8;true,false;workedunder(C, G), movie(H, G).;true;true
8;false,false,true;movie(M, L).;false;false
8;true,false,true;movie(H, C), movie(D, A).;false;false
9;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true
9;true;workedunder(C, E), movie(D, E).;true;false
9;false;workedunder(J, A).;true;true
9;false,true;workedunder(J, K), movie(L, K).;false;false
9;true,true;workedunder(E, A).;false;false
9;false,false;movie(M, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.3036065954523843;  // std dev = 2,821, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.25214894047360087;  // std dev = 2,787, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then return 0.20320439837597296;  // std dev = 2,760, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.3336998081790189;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.23453276150865052;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.11557225822567793;  // std dev = 2,563, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then if ( workedunder(E, A), workedunder(F, D) )
%   | then return 0.22340471342340965;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I), movie(J, G) )
%   | | | then return -0.21385355494120925;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return 0.16774509222347278;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.180094823046804;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0.12672258997967872;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), workedunder(G, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(I, A), movie(J, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1550146040867581;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then if ( workedunder(C, E), movie(D, E) )
%   | then if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09654164198156194;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.13577728013366275;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.314232
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.598 seconds
Total inference time: 1.424 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'true': [2.245, 7, 18], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [2.821, 18, 18]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [2.787, 18, 18]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,false,true': [2.76, 18, 18], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), actor(D)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.563, 18, 18], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, D)', 'true': 'workedunder(E, A), workedunder(F, D)', 'true,false': 'workedunder(G, H)', 'true,false,true': 'workedunder(G, I), movie(J, G)'}, {'true,true': [2.245, 7, 18], 'true,false,true,true': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'true': 'movie(D, C)', 'false': 'workedunder(E, A)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(F, A), workedunder(F, G)'}, {'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'true': 'workedunder(E, A), workedunder(E, F)', 'false': 'workedunder(G, A), workedunder(G, H)', 'false,false': 'workedunder(I, A), movie(J, A)'}, {'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [2.245, 7, 18], 'false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'true': 'workedunder(C, E), movie(D, E)', 'false': 'workedunder(F, A)', 'true,true': 'workedunder(E, A)', 'false,false': 'movie(G, A)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 11, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [2.245, 7, 18]}]]
[{'': [0.2015999999999996, -1.0092936587501423e-17], 'false': [nan, -1.0092936587501423e-17], 'false,false,false': [nan, -1.0092936587501423e-17], 'false,false': [nan, -1.0092936587501423e-17]}, {'': [0.22099738300738728, nan], 'true': [0.22099738300738728, nan]}, {'': [0.21572533239357292, nan], 'true': [0.21572533239357292, nan]}, {'': [0.21154375527674735, nan], 'true': [nan, 0.21154375527674735], 'true,false': [0.21154375527674735, nan]}, {'': [0.20851409694815537, nan], 'true': [0.2016, -1.0092936587501423e-17]}, {'': [0.1824582287668356, nan], 'true': [0.1824582287668356, nan], 'true,true,true': [0.1824582287668356, nan], 'true,true': [0.1824582287668356, nan]}, {'': [0.18056988282765207, nan], 'true': [0.20160000000000008, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.2016000000000001, -2.5232341468753557e-17], 'true': [0.2016000000000001, nan], 'false': [nan, -2.5232341468753557e-17], 'false,false,false': [nan, -2.5232341468753557e-17], 'false,false': [nan, -2.5232341468753557e-17]}, {'': [0.20160000000000003, -1.0092936587501423e-17], 'true': [0.20160000000000003, nan], 'false': [nan, -1.0092936587501423e-17], 'false,false': [nan, -1.0092936587501423e-17]}, {'': [0.20159999999999997, -2.523234146875356e-18], 'true': [0.20159999999999997, nan], 'false': [nan, -2.523234146875356e-18], 'true,true': [nan, 0.20159999999999997], 'false,false': [-2.523234146875356e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '4;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(E, A), workedunder(F, D).;true;true', '7;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '9;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, E) )
%   then return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 3.425 seconds
Total inference time: 0.911 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 08:59:55
{'CLL': -0.264596, 'Recall': 1.0, 'F1': 0.966667, 'parameter': {'CLL': -0.314232, 'Recall': 1.0, 'F1': 0.966667, 'AUC ROC': 0.965517, 'Inference time': 1.424, 'Learning time': 2.598, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484}, 'AUC ROC': 0.965517, 'Inference time': 0.911, 'Mapping results': {'Knowledge compiling time': 0.019948482513427734, 'Generating paths time': 2.7738962173461914, 'Possible mappings': [5187], 'Max mapping': 65536, 'Finding best mapping': 1.1920928955078125e-06, 'Generating mappings time': 3.9119796752929688, 'Numbers preds mapping': [9], 'Total time': 6.7058327198028564}, 'Learning time': 6.023, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.079 seconds
Total inference time: 0.831 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 08:59:59
{'CLL': -0.264596, 'Recall': 1.0, 'F1': 0.966667, 'AUC ROC': 0.965517, 'Inference time': 0.831, 'Learning time': 2.079, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.811362
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.846 seconds
Total inference time: 0.58 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 09:00:00
{'CLL': -0.811362, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.965517, 'Inference time': 0.58, 'Learning time': 0.846, 'Precision': [nan, 0.5], 'AUC PR': 0.935484}


Starting fold 4

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.030977964401245117
   Generating paths time   = 2.758715867996216
   Generating mappings time   = 3.8955368995666504
   Possible mappings   = [5187]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 6.685240268707275


Best mapping found: ['professor(A) -> actor(A)', 'samecourse(A,B) -> workedunder(B,A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
0;false,false,false;workedunder(S, A).;false;false
0;false;workedunder(L, A), movie(M, L).;true;true
0;false,false;workedunder(Q, A), workedunder(Q, R).;false;true
0;false,true;movie(M, N), workedunder(N, P).;false;false
1;;genre(A, B) :- movie(E, A).;true;true
1;true;movie(E, F), workedunder(F, G).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true,false;workedunder(H, A).;false;false
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
2;;genre(A, B) :- movie(C, A).;true;true
2;true;movie(C, F), workedunder(F, G).;false;false
2;false;workedunder(H, A), movie(I, A).;true;true
2;false,true;workedunder(H, J).;true;false
2;false,true,true;movie(I, J).;false;false
2;false,false,true;movie(L, M), workedunder(M, N).;false;false
2;false,false,false;workedunder(P, A).;false;false
2;false,false;workedunder(K, A), movie(L, K).;true;true
3;;genre(A, B) :- workedunder(F, E).;true;true
3;true;workedunder(E, A).;true;true
3;false;workedunder(M, A), movie(N, A).;false;true
3;true,false,false;movie(K, A), workedunder(L, A).;false;false
3;true,false;workedunder(J, H).;false;true
3;true,true;workedunder(F, G).;false;false
3;false,false;workedunder(P, A), workedunder(P, Q).;false;false
4;;genre(A, B) :- movie(C, A).;true;true
4;true;workedunder(F, A), movie(C, F).;false;false
4;false;movie(G, A), workedunder(H, A).;true;true
4;false,true;workedunder(H, I).;true;false
4;false,true,true;movie(G, I).;false;false
4;false,false,false;workedunder(P, A), movie(Q, P).;false;false
4;false,false;workedunder(J, A), workedunder(J, K).;false;true
5;;genre(A, B) :- movie(E, A).;true;true
5;true;movie(E, F), actor(F).;true;false
5;true,true;workedunder(F, G).;true;false
5;false,false;workedunder(L, A), movie(M, A).;false;true
5;false,true;movie(K, J).;false;false
5;false,false,false;workedunder(N, A), workedunder(N, P).;false;false
5;true,true,true;workedunder(H, C), workedunder(F, I).;false;false
5;false;workedunder(J, A), movie(K, A).;true;true
6;;genre(A, B) :- movie(G, E).;true;true
6;true;workedunder(H, A), workedunder(I, E).;false;true
6;false;workedunder(P, A), movie(Q, A).;false;true
6;false,false;workedunder(R, A), workedunder(R, S).;false;true
6;true,false;workedunder(L, J).;true;false
6;false,false,false;workedunder(T, A).;false;false
6;true,false,true;workedunder(L, M), movie(N, L).;false;false
7;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true
7;true;movie(D, C).;false;false
7;false,true,false;workedunder(E, J), movie(K, J).;false;false
7;false;workedunder(E, A).;true;true
7;false,true;workedunder(E, F), movie(G, F).;false;true
7;false,false,false;workedunder(Q, A).;false;false
7;false,false;workedunder(L, A), workedunder(L, M).;false;true
8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true
8;true;workedunder(E, A), workedunder(E, F).;false;true
8;false;workedunder(J, A), workedunder(J, K).;false;true
8;true,false,false;workedunder(C, I), movie(D, A).;false;false
8;false,false;workedunder(L, A), movie(M, A).;true;false
8;true,false;workedunder(C, G), movie(H, G).;true;true
8;false,false,true;movie(M, L).;false;false
8;true,false,true;movie(H, C), movie(D, A).;false;false
9;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true
9;true;workedunder(C, E), movie(D, E).;true;false
9;false;workedunder(J, A).;true;true
9;false,true;workedunder(J, K), movie(L, K).;false;false
9;true,true;workedunder(E, A).;false;false
9;false,false;movie(M, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.30172034469051234;  // std dev = 1,295, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.2506402379552865;  // std dev = 1,272, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then return 0.20222172723684;  // std dev = 1,255, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.39562503513233044;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.23374777259517932;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.11325598623232491;  // std dev = 1,120, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then if ( workedunder(E, A), workedunder(F, D) )
%   | then return 0.26963434870131414;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I), movie(J, G) )
%   | | | then return -0.21286182787029853;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return 0.20341723956363172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.17936989065422984;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0.155565466459258;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), workedunder(G, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(I, A), movie(J, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1544662759870971;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then if ( workedunder(C, E), movie(D, E) )
%   | then if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12077133496455857;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.13535026318038654;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.340511
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 2.528 seconds
Total inference time: 1.47 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [1.295, 4, 4]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [1.272, 4, 4]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,false,true': [1.255, 4, 4], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 3, 0], 'false': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), actor(D)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.12, 4, 4], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, D)', 'true': 'workedunder(E, A), workedunder(F, D)', 'true,false': 'workedunder(G, H)', 'true,false,true': 'workedunder(G, I), movie(J, G)'}, {'true,true': [0.894, 1, 4], 'true,false,true,true': [0.0, 3, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'true': 'movie(D, C)', 'false': 'workedunder(E, A)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(F, A), workedunder(F, G)'}, {'false,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'true': 'workedunder(E, A), workedunder(E, F)', 'false': 'workedunder(G, A), workedunder(G, H)', 'false,false': 'workedunder(I, A), movie(J, A)'}, {'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.894, 1, 4], 'false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'true': 'workedunder(C, E), movie(D, E)', 'false': 'workedunder(F, A)', 'true,true': 'workedunder(E, A)', 'false,false': 'movie(G, A)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [2.63e-09, 3, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [0.894, 1, 4]}]]
[{'': [0.15999999999999986, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.20948195373304385, nan], 'true': [0.20948195373304385, nan]}, {'': [0.20238477663281773, nan], 'true': [0.20238477663281773, nan]}, {'': [0.19682295849191858, nan], 'true': [nan, 0.19682295849191858], 'true,false': [0.19682295849191858, nan]}, {'': [0.19283831197815832, nan], 'true': [0.16, 0.0]}, {'': [0.15682908789441002, nan], 'true': [0.15682908789441002, nan], 'true,true,true': [0.15682908789441002, nan], 'true,true': [0.15682908789441002, nan]}, {'': [0.15456310009520896, nan], 'true': [0.16, -9.25185853854297e-18], 'true,false,true': [-9.25185853854297e-18, nan], 'true,false': [-9.25185853854297e-18, nan]}, {'': [0.16, 0.0], 'true': [0.16, nan], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.16, 0.0], 'true': [0.16, nan], 'false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.16, 2.3129646346357427e-18], 'true': [0.16, nan], 'false': [nan, 2.3129646346357427e-18], 'true,true': [nan, 0.16], 'false,false': [2.3129646346357427e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '4;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(E, A), workedunder(F, D).;true;true', '7;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '9;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, E) )
%   then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.981 seconds
Total inference time: 1.07 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 09:00:15
{'CLL': -0.300536, 'Recall': 1.0, 'F1': 0.914894, 'parameter': {'CLL': -0.340511, 'Recall': 1.0, 'F1': 0.914894, 'AUC ROC': 0.906977, 'Inference time': 1.47, 'Learning time': 2.528, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137}, 'AUC ROC': 0.906977, 'Inference time': 1.07, 'Mapping results': {'Knowledge compiling time': 0.030977964401245117, 'Generating paths time': 2.758715867996216, 'Possible mappings': [5187], 'Max mapping': 65536, 'Finding best mapping': 9.5367431640625e-07, 'Generating mappings time': 3.8955368995666504, 'Numbers preds mapping': [9], 'Total time': 6.685240268707275}, 'Learning time': 4.509, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.44 seconds
Total inference time: 0.865 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 09:00:17
{'CLL': -0.300536, 'Recall': 1.0, 'F1': 0.914894, 'AUC ROC': 0.906977, 'Inference time': 0.865, 'Learning time': 1.44, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.789772
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.751 seconds
Total inference time: 0.575 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 09:00:19
{'CLL': -0.789772, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.906977, 'Inference time': 0.575, 'Learning time': 0.751, 'Precision': [nan, 0.5], 'AUC PR': 0.843137}


Starting fold 5

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.03338027000427246
   Generating paths time   = 3.113635301589966
   Generating mappings time   = 3.7798779010772705
   Possible mappings   = [5187]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 6.926904201507568


Best mapping found: ['professor(A) -> actor(A)', 'samecourse(A,B) -> workedunder(B,A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
0;false,false,false;workedunder(S, A).;false;false
0;false;workedunder(L, A), movie(M, L).;true;true
0;false,false;workedunder(Q, A), workedunder(Q, R).;false;true
0;false,true;movie(M, N), workedunder(N, P).;false;false
1;;genre(A, B) :- movie(E, A).;true;true
1;true;movie(E, F), workedunder(F, G).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true,false;workedunder(H, A).;false;false
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
2;;genre(A, B) :- movie(C, A).;true;true
2;true;movie(C, F), workedunder(F, G).;false;false
2;false;workedunder(H, A), movie(I, A).;true;true
2;false,true;workedunder(H, J).;true;false
2;false,true,true;movie(I, J).;false;false
2;false,false,true;movie(L, M), workedunder(M, N).;false;false
2;false,false,false;workedunder(P, A).;false;false
2;false,false;workedunder(K, A), movie(L, K).;true;true
3;;genre(A, B) :- workedunder(F, E).;true;true
3;true;workedunder(E, A).;true;true
3;false;workedunder(M, A), movie(N, A).;false;true
3;true,false,false;movie(K, A), workedunder(L, A).;false;false
3;true,false;workedunder(J, H).;false;true
3;true,true;workedunder(F, G).;false;false
3;false,false;workedunder(P, A), workedunder(P, Q).;false;false
4;;genre(A, B) :- movie(C, A).;true;true
4;true;workedunder(F, A), movie(C, F).;false;false
4;false;movie(G, A), workedunder(H, A).;true;true
4;false,true;workedunder(H, I).;true;false
4;false,true,true;movie(G, I).;false;false
4;false,false,false;workedunder(P, A), movie(Q, P).;false;false
4;false,false;workedunder(J, A), workedunder(J, K).;false;true
5;;genre(A, B) :- movie(E, A).;true;true
5;true;movie(E, F), actor(F).;true;false
5;true,true;workedunder(F, G).;true;false
5;false,false;workedunder(L, A), movie(M, A).;false;true
5;false,true;movie(K, J).;false;false
5;false,false,false;workedunder(N, A), workedunder(N, P).;false;false
5;true,true,true;workedunder(H, C), workedunder(F, I).;false;false
5;false;workedunder(J, A), movie(K, A).;true;true
6;;genre(A, B) :- movie(G, E).;true;true
6;true;workedunder(H, A), workedunder(I, E).;false;true
6;false;workedunder(P, A), movie(Q, A).;false;true
6;false,false;workedunder(R, A), workedunder(R, S).;false;true
6;true,false;workedunder(L, J).;true;false
6;false,false,false;workedunder(T, A).;false;false
6;true,false,true;workedunder(L, M), movie(N, L).;false;false
7;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true
7;true;movie(D, C).;false;false
7;false,true,false;workedunder(E, J), movie(K, J).;false;false
7;false;workedunder(E, A).;true;true
7;false,true;workedunder(E, F), movie(G, F).;false;true
7;false,false,false;workedunder(Q, A).;false;false
7;false,false;workedunder(L, A), workedunder(L, M).;false;true
8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true
8;true;workedunder(E, A), workedunder(E, F).;false;true
8;false;workedunder(J, A), workedunder(J, K).;false;true
8;true,false,false;workedunder(C, I), movie(D, A).;false;false
8;false,false;workedunder(L, A), movie(M, A).;true;false
8;true,false;workedunder(C, G), movie(H, G).;true;true
8;false,false,true;movie(M, L).;false;false
8;true,false,true;movie(H, C), movie(D, A).;false;false
9;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true
9;true;workedunder(C, E), movie(D, E).;true;false
9;false;workedunder(J, A).;true;true
9;false,true;workedunder(J, K), movie(L, K).;false;false
9;true,true;workedunder(E, A).;false;false
9;false,false;movie(M, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.29701438684128156;  // std dev = 0,845, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.24701898473631792;  // std dev = 0,818, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then return 0.20000029290470922;  // std dev = 0,796, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5492937091929906;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.23186371637133243;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.10993804554769643;  // std dev = 0,606, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then if ( workedunder(E, A), workedunder(F, D) )
%   | then return 0.3866503533802099;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I), movie(J, G) )
%   | | | then return -0.2108610429037117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return 0.2998389867661456;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), workedunder(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.17790531387104533;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0.2408721900927926;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), workedunder(G, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(I, A), movie(J, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1533571497625051;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then if ( workedunder(C, E), movie(D, E) )
%   | then if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1996032518148907;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.13448563542811137;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.321301
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 1.152 seconds
Total inference time: 1.749 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [0.845, 2, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [0.818, 2, 2]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,false,true': [0.796, 2, 2], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), actor(D)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.606, 2, 2], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, D)', 'true': 'workedunder(E, A), workedunder(F, D)', 'true,false': 'workedunder(G, H)', 'true,false,true': 'workedunder(G, I), movie(J, G)'}, {'true,true': [0.0, 0, 2], 'true,false,true,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'true': 'movie(D, C)', 'false': 'workedunder(E, A)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(F, A), workedunder(F, G)'}, {'false,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'true': 'workedunder(E, A), workedunder(E, F)', 'false': 'workedunder(G, A), workedunder(G, H)', 'false,false': 'workedunder(I, A), movie(J, A)'}, {'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'true': 'workedunder(C, E), movie(D, E)', 'false': 'workedunder(F, A)', 'true,true': 'workedunder(E, A)', 'false,false': 'movie(G, A)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2]}]]
[{'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.17847162811629394, nan], 'true': [0.17847162811629394, nan]}, {'': [0.1671395107637846, nan], 'true': [0.1671395107637846, nan]}, {'': [0.15853372029163282, nan], 'true': [nan, 0.15853372029163282], 'true,false': [0.15853372029163282, nan]}, {'': [0.1525517308785702, nan], 'true': [0.0, 0.0]}, {'': [0.09186137819518979, nan], 'true': [0.09186137819518979, nan], 'true,true,true': [0.09186137819518979, nan], 'true,true': [0.09186137819518979, nan]}, {'': [0.08925496717229038, nan], 'true': [0.0, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'true,true': [nan, 0.0], 'false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '4;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(E, A), workedunder(F, D).;true;true', '7;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '9;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   return 0;  // std dev = 0,422, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,422, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,422, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,334, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, E) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.306709
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.992 seconds
Total inference time: 0.736 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 09:00:31
{'CLL': -0.306709, 'Recall': 1.0, 'F1': 0.909091, 'parameter': {'CLL': -0.321301, 'Recall': 1.0, 'F1': 0.909091, 'AUC ROC': 0.9, 'Inference time': 1.749, 'Learning time': 1.152, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333}, 'AUC ROC': 0.9, 'Inference time': 0.736, 'Mapping results': {'Knowledge compiling time': 0.03338027000427246, 'Generating paths time': 3.113635301589966, 'Possible mappings': [5187], 'Max mapping': 65536, 'Finding best mapping': 1.1920928955078125e-06, 'Generating mappings time': 3.7798779010772705, 'Numbers preds mapping': [9], 'Total time': 6.926904201507568}, 'Learning time': 2.144, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.914 seconds
Total inference time: 0.652 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 09:00:33
{'CLL': -1.052978, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.5, 'Inference time': 0.652, 'Learning time': 0.914, 'Precision': [nan, 0.5], 'AUC PR': 0.5}


WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.968 seconds
Total inference time: 0.746 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 09:00:35
{'CLL': -1.052978, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.5, 'Inference time': 0.746, 'Learning time': 0.968, 'Precision': [nan, 0.5], 'AUC PR': 0.5}


