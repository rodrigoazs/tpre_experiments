Starting experiment #3 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.28314893509951233;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then return 0.41370449065506687;  // std dev = 0,497, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | else return 0.30912932725637404;  // std dev = 0,498, 51,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   else if ( advisedby(A, I), publication(J, I) )
%   | then if ( advisedby(K, I), publication(J, K) )
%   | | then if ( ta(L, K, M), publication(J, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3812258581764354;  // std dev = 4,027, 65,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=34 */
%   | | else return 0.4945125714631487;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( advisedby(A, N), projectmember(P, N) )
%   | | then return 0.24276431971489695;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, Q) )
%   | | | then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.35814893509951146;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( publication(C, F), tempadvisedby(G, F) )
%   | then return 0.24358743467605454;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( advisedby(A, H) )
%   | | then return 0.24864574434288686;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.47747267445893615;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( advisedby(A, I), publication(J, I) )
%   | then if ( advisedby(K, I), publication(J, K) )
%   | | then if ( ta(L, A, M), ta(N, K, P) )
%   | | | then return 0.4153847991005589;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.3089585203150045;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.4384899269928549;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, Q) )
%   | | then if ( tempadvisedby(R, Q), publication(S, R) )
%   | | | then return 0.2390906081772538;  // std dev = 2,267, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3661684513847789;  // std dev = 3,402, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return 0.2558594256937682;  // std dev = 0,495, 45,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( tempadvisedby(A, F), publication(E, F) )
%   | then return 0.11016255574253504;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( advisedby(A, G) )
%   | | then return 0.20614944581307398;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else return 0.3214485558164156;  // std dev = 0,490, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( advisedby(A, H), publication(I, A) )
%   | then if ( tempadvisedby(J, H) )
%   | | then if ( publication(I, J) )
%   | | | then return 0.0854280693248247;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26884330237248627;  // std dev = 2,867, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.3947054196633099;  // std dev = 0,476, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, K), projectmember(L, K) )
%   | | then return 0.3530231283156222;  // std dev = 1,092, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( advisedby(A, M), publication(N, M) )
%   | | | then return 0.27135413427103927;  // std dev = 4,188, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.23721765443469028;  // std dev = 4,996, 101,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=48 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.20441520609395972;  // std dev = 0,495, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then return 0.14800061685429133;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( tempadvisedby(A, J), publication(K, J) )
%   | | | then return 0.2774655355063049;  // std dev = 1,463, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09682218969018355;  // std dev = 1,102, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( publication(L, A), advisedby(A, M) )
%   | then return 0.238739001554846;  // std dev = 0,494, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | else if ( tempadvisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, P) )
%   | | | then return 0.16173019288299179;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.3215824804707802;  // std dev = 1,932, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( advisedby(A, R), publication(S, R) )
%   | | | then return 0.2273889241242803;  // std dev = 2,854, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return 0.14680642421020146;  // std dev = 2,504, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then if ( sameperson(A, E) )
%   | | then if ( tempadvisedby(G, F) )
%   | | | then return 0.15589690178100382;  // std dev = 3,909, 62,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   | | | else return 0.10188672687135468;  // std dev = 2,086, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0.4350058571765484;  // std dev = 0,879, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( ta(C, H, I), advisedby(H, J) )
%   | | then if ( tempadvisedby(K, J), publication(L, K) )
%   | | | then return 0.018096570885120115;  // std dev = 1,415, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.14877278349916653;  // std dev = 2,634, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else return 0.1677608402100527;  // std dev = 0,494, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, M), tempadvisedby(N, M) )
%   | then if ( publication(P, M), ta(Q, N, R) )
%   | | then return 0.21059957192061124;  // std dev = 0,492, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | else return 0.11183040625286017;  // std dev = 0,495, 36,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | else return 0.1839373457616994;  // std dev = 0,493, 76,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( tempadvisedby(A, F), publication(E, F) )
%   | then return -2.7847454610567074E-4;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( advisedby(A, G), publication(E, G) )
%   | | then return 0.08471165841488025;  // std dev = 0,492, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else return 0.138120397446322;  // std dev = 0,492, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( publication(H, A), advisedby(A, I) )
%   | then if ( publication(H, I) )
%   | | then if ( advisedby(J, I), ta(K, J, L) )
%   | | | then return 0.14147829928571712;  // std dev = 2,919, 35,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.02164716740599461;  // std dev = 1,318, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.24217384616265647;  // std dev = 0,467, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( tempadvisedby(A, M) )
%   | | then return 0.14221473418193578;  // std dev = 0,492, 68,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   | | else if ( advisedby(A, N), publication(P, N) )
%   | | | then return 0.12936821085853747;  // std dev = 4,182, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.08380880951501661;  // std dev = 3,024, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then if ( advisedby(A, E), publication(F, E) )
%   | then return 0.5640292126107264;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.03766866727271708;  // std dev = 0,483, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( ta(G, A, H), advisedby(A, I) )
%   | then if ( advisedby(J, I), publication(K, J) )
%   | | then if ( ta(L, J, M), publication(K, I) )
%   | | | then return 0.11077862864078383;  // std dev = 3,239, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return -7.360832373982348E-4;  // std dev = 2,673, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0.17210436737138196;  // std dev = 1,086, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( tempadvisedby(A, N), publication(P, A) )
%   | | then if ( publication(P, N) )
%   | | | then return 0.010665843680811068;  // std dev = 1,366, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.09055382884952501;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(A, Q), projectmember(R, Q) )
%   | | | then return 0.16706335514475104;  // std dev = 1,054, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1031881616186641;  // std dev = 6,408, 169,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=88 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( publication(E, F), professor(F) )
%   | then if ( advisedby(G, F), ta(H, G, D) )
%   | | then if ( samecourse(C, H), tempadvisedby(I, F) )
%   | | | then return 0.04819086123996786;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 6.148552780100514E-4;  // std dev = 1,536, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.0960745110569358;  // std dev = 1,169, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.11255285848093416;  // std dev = 0,473, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( tempadvisedby(A, J), projectmember(K, J) )
%   | then return 0.12583135590083186;  // std dev = 1,054, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(L, A), advisedby(A, M) )
%   | | then if ( tempadvisedby(N, M) )
%   | | | then return 0.0564882489890379;  // std dev = 2,986, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.15117541665862477;  // std dev = 1,938, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( tempadvisedby(A, P) )
%   | | | then return 0.08090591573009295;  // std dev = 3,909, 63,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | | | else return 0.06450079229909238;  // std dev = 5,135, 109,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=54 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then return 0.04180905043404943;  // std dev = 0,488, 50,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   else if ( advisedby(A, F) )
%   | then if ( tempadvisedby(G, F), publication(H, A) )
%   | | then if ( publication(I, G) )
%   | | | then return 0.07635220080523467;  // std dev = 1,772, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.0234294900242248;  // std dev = 2,398, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.1135534537880021;  // std dev = 1,939, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.05788427917530573;  // std dev = 4,585, 87,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   | else if ( tempadvisedby(A, K) )
%   | | then if ( tempadvisedby(L, K), publication(M, L) )
%   | | | then return 0.012744545990980283;  // std dev = 2,266, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.08630081095575363;  // std dev = 3,343, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( publication(N, A) )
%   | | | then return 0.09062083146497157;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0043341246140239315;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then if ( advisedby(A, E), publication(F, E) )
%   | then return 0.3951754269406081;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.003920904230636863;  // std dev = 0,483, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( tempadvisedby(A, G), publication(H, A) )
%   | then if ( publication(H, G) )
%   | | then if ( ta(I, A, J) )
%   | | | then return -0.03401176262784892;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.007733186969441852;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.039998070708142236;  // std dev = 1,002, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(K, A, L), advisedby(A, M) )
%   | | then if ( ta(K, N, L), tempadvisedby(N, P) )
%   | | | then return 0.1397630982964341;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.024057334986398927;  // std dev = 4,271, 75,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=34 */
%   | | else if ( publication(Q, A), ta(R, A, S) )
%   | | | then return 0.10510998396177969;  // std dev = 1,056, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.044131249819421875;  // std dev = 6,393, 169,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=88 */


Predicates from source: ['inphase(person,prequals).', 'samecourse(course,course).', 'tempadvisedby(person,person).', 'publication(title,person).', 'advisedby(person,person).', 'sameperson(person,person).', 'professor(person).', 'ta(course,person,quarter).', 'projectmember(project,person).']

Starting fold 1

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.03118157386779785
   Generating paths time   = 4.1907641887664795
   Generating mappings time   = 5.756515026092529
   Possible mappings   = [5187]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 9.978470802307129


Best mapping found: ['professor(A) -> actor(A)', 'samecourse(A,B) -> workedunder(B,A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
0;false;workedunder(I, A), movie(J, I).;true;true
0;false,true;workedunder(I, K), movie(J, K).;true;false
0;false,true,true;movie(J, A).;false;false
0;false,false,false;workedunder(Q, A).;false;false
0;false,false;workedunder(N, A), workedunder(N, P).;false;true
1;;genre(A, B) :- movie(C, A).;true;true
1;true;movie(C, F), workedunder(F, G).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true,false;workedunder(H, A).;false;false
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
2;;genre(A, B) :- movie(E, A).;true;true
2;true;workedunder(F, A), movie(E, F).;false;true
2;false;workedunder(H, A), movie(I, A).;true;true
2;false,true;workedunder(H, J).;true;false
2;false,true,true;movie(I, J).;false;false
2;true,false;workedunder(G, A).;false;false
2;false,false,false;workedunder(M, A), movie(N, M).;false;false
2;false,false;workedunder(K, A), workedunder(K, L).;false;true
3;;genre(A, B) :- workedunder(F, E).;false;true
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false;movie(L, A), workedunder(M, A).;false;true
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(F, E).;true;true
4;true;workedunder(E, A).;true;true
4;false;workedunder(M, A), workedunder(M, N).;true;false
4;false,true;movie(P, M).;false;false
4;true,false;workedunder(J, H).;true;false
4;true,true;workedunder(F, G).;false;false
4;true,false,true;workedunder(J, K), movie(L, K).;false;false
5;;genre(A, B) :- movie(E, A).;true;true
5;true;workedunder(F, A), movie(E, F).;false;true
5;false;movie(H, A), workedunder(I, A).;true;true
5;false,true;movie(H, I).;true;false
5;false,true,true;workedunder(I, J).;false;false
5;true,false;workedunder(G, A), movie(E, G).;false;false
5;false,false,false;workedunder(N, A), movie(P, N).;false;false
5;false,false;workedunder(M, A).;false;true
6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
6;true;workedunder(E, A), movie(F, E).;false;false
6;false;workedunder(I, A).;true;true
6;false,true;workedunder(I, J), movie(K, J).;true;false
6;false,true,true;movie(K, I).;false;false
6;false,false,true;movie(P, N).;false;false
6;false,false,false;workedunder(Q, A), workedunder(Q, R).;false;false
6;false,false;workedunder(N, A), movie(P, A).;true;true
7;;genre(A, B) :- movie(E, A).;true;true
7;true;movie(E, F), actor(F).;true;false
7;true,true;workedunder(F, G).;true;false
7;false,false;movie(L, A), workedunder(M, A).;true;true
7;false,false,false;workedunder(P, A).;false;false
7;false,false,true;workedunder(M, N).;false;false
7;true,true,true;workedunder(H, C), workedunder(F, I).;false;false
7;false;workedunder(J, A), workedunder(J, K).;false;true
8;;genre(A, B) :- movie(E, A).;false;true
8;false,true,false;movie(J, A).;false;false
8;false;workedunder(F, A).;true;true
8;false,true;workedunder(F, G), movie(H, A).;true;true
8;false,true,true;movie(I, G).;false;false
8;false,false,true;workedunder(K, L), movie(M, L).;false;false
8;false,false,false;movie(N, A).;false;false
8;false,false;workedunder(K, A).;true;true
9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
9;true;workedunder(E, A), movie(F, E).;false;false
9;false;workedunder(G, A), movie(H, A).;true;true
9;false,true;movie(H, G).;false;false
9;false,false,true;workedunder(P, N).;false;false
9;false,false,false;movie(Q, A).;false;false
9;false,false;workedunder(M, A).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.2970143868412816;  // std dev = 1,982, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.6558459784192013;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16180800894656572;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.1781017839416223;  // std dev = 1,497, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then if ( workedunder(E, G), movie(H, G) )
%   | | | then return 0.14441627987343625;  // std dev = 1,447, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.4173826094543864;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.18480492619798009;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.3206230544636277;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), movie(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A), workedunder(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1585666830410459;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.05828753963094837;  // std dev = 0,923, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then return 0.04927685078037338;  // std dev = 0,914, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.23521452159814646;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), movie(H, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(J, A) )
%   | | | then return -0.15187968541862856;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.366453
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 5.281 seconds
Total inference time: 1.549 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'true': [0.0, 0, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [1.982, 11, 11]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A)'}, {'true,false,true': [0.0, 0, 0], 'true,true': [2.98e-08, 0, 11], 'true,false,false': [7.45e-09, 11, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [1.497, 11, 11], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)', 'true,false,true': 'workedunder(E, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [1.447, 11, 11], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 11], 'true,false,false': [1.05e-08, 11, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'workedunder(E, A), movie(F, E)', 'false': 'workedunder(G, A)', 'false,false,false': 'workedunder(J, A), workedunder(J, K)', 'false,false': 'workedunder(H, A), movie(I, A)'}, {'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 11]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), actor(D)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.923, 11, 11], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)'}, {'true': [0.914, 11, 11], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'workedunder(E, A), movie(F, E)', 'false': 'workedunder(G, A), movie(H, A)', 'false,false,false': 'movie(J, A)', 'false,false': 'workedunder(I, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 11]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'false': [nan, -1.0092936587501423e-17], 'false,false,false': [nan, -1.0092936587501423e-17], 'false,false': [nan, -1.0092936587501423e-17]}, {'': [0.17847162811629388, nan], 'true': [0.17847162811629388, nan]}, {'': [0.16713951076378458, nan], 'true': [8.074349270001139e-17, 5.046468293750712e-18], 'true,false': [nan, 5.046468293750712e-18]}, {'': [0.10185411746601693, nan]}, {'': [0.0951391487030297, nan], 'true': [nan, 0.0951391487030297], 'true,false,true': [0.0951391487030297, nan], 'true,false': [0.0951391487030297, nan]}, {'': [0.09065745702376753, nan], 'true': [-1.2111523905001707e-16, 1.0092936587501423e-17], 'true,false': [nan, 1.0092936587501423e-17]}, {'': [0.0, -1.5139404881252134e-17], 'true': [0.0, nan], 'false': [nan, -1.5139404881252134e-17], 'false,false,false': [nan, -1.5139404881252134e-17], 'false,false': [nan, -1.5139404881252134e-17]}, {'': [0.03873973197950725, nan], 'true': [0.03873973197950725, nan], 'true,true,true': [0.03873973197950725, nan], 'true,true': [0.03873973197950725, nan]}, {'': [0.037992779270484375, nan]}, {'': [-2.0185873175002847e-17, -1.0092936587501423e-17], 'true': [-2.0185873175002847e-17, nan], 'false': [nan, -1.0092936587501423e-17], 'false,false,false': [-1.0092936587501423e-17, nan], 'false,false': [nan, -1.0092936587501423e-17]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '5;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 3.812 seconds
Total inference time: 1.274 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 10:12:42
{'CLL': -0.352709, 'Recall': 1.0, 'F1': 0.888889, 'parameter': {'CLL': -0.366453, 'Recall': 1.0, 'F1': 0.888889, 'AUC ROC': 0.875, 'Inference time': 1.549, 'Learning time': 5.281, 'Precision': [0.8, 0.5], 'AUC PR': 0.8}, 'AUC ROC': 0.875, 'Inference time': 1.274, 'Mapping results': {'Knowledge compiling time': 0.03118157386779785, 'Generating paths time': 4.1907641887664795, 'Possible mappings': [5187], 'Max mapping': 65536, 'Finding best mapping': 9.5367431640625e-07, 'Generating mappings time': 5.756515026092529, 'Numbers preds mapping': [9], 'Total time': 9.978470802307129}, 'Learning time': 9.093, 'Precision': [0.8, 0.5], 'AUC PR': 0.8}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( director(A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 4.186 seconds
Total inference time: 1.126 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 10:12:48
{'CLL': -0.352709, 'Recall': 1.0, 'F1': 0.888889, 'AUC ROC': 0.875, 'Inference time': 1.126, 'Learning time': 4.186, 'Precision': [0.8, 0.5], 'AUC PR': 0.8}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.726963
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.453 seconds
Total inference time: 1.754 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 10:12:53
{'CLL': -0.726963, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.875, 'Inference time': 1.754, 'Learning time': 1.453, 'Precision': [nan, 0.5], 'AUC PR': 0.8}


Starting fold 2

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.031409263610839844
   Generating paths time   = 4.122349262237549
   Generating mappings time   = 4.680400371551514
   Possible mappings   = [5187]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 8.834170579910278


Best mapping found: ['professor(A) -> actor(A)', 'samecourse(A,B) -> workedunder(B,A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
0;false;workedunder(I, A), movie(J, I).;true;true
0;false,true;workedunder(I, K), movie(J, K).;true;false
0;false,true,true;movie(J, A).;false;false
0;false,false,false;workedunder(Q, A).;false;false
0;false,false;workedunder(N, A), workedunder(N, P).;false;true
1;;genre(A, B) :- movie(C, A).;true;true
1;true;movie(C, F), workedunder(F, G).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true,false;workedunder(H, A).;false;false
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
2;;genre(A, B) :- movie(E, A).;true;true
2;true;workedunder(F, A), movie(E, F).;false;true
2;false;workedunder(H, A), movie(I, A).;true;true
2;false,true;workedunder(H, J).;true;false
2;false,true,true;movie(I, J).;false;false
2;true,false;workedunder(G, A).;false;false
2;false,false,false;workedunder(M, A), movie(N, M).;false;false
2;false,false;workedunder(K, A), workedunder(K, L).;false;true
3;;genre(A, B) :- workedunder(F, E).;false;true
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false;movie(L, A), workedunder(M, A).;false;true
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(F, E).;true;true
4;true;workedunder(E, A).;true;true
4;false;workedunder(M, A), workedunder(M, N).;true;false
4;false,true;movie(P, M).;false;false
4;true,false;workedunder(J, H).;true;false
4;true,true;workedunder(F, G).;false;false
4;true,false,true;workedunder(J, K), movie(L, K).;false;false
5;;genre(A, B) :- movie(E, A).;true;true
5;true;workedunder(F, A), movie(E, F).;false;true
5;false;movie(H, A), workedunder(I, A).;true;true
5;false,true;movie(H, I).;true;false
5;false,true,true;workedunder(I, J).;false;false
5;true,false;workedunder(G, A), movie(E, G).;false;false
5;false,false,false;workedunder(N, A), movie(P, N).;false;false
5;false,false;workedunder(M, A).;false;true
6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
6;true;workedunder(E, A), movie(F, E).;false;false
6;false;workedunder(I, A).;true;true
6;false,true;workedunder(I, J), movie(K, J).;true;false
6;false,true,true;movie(K, I).;false;false
6;false,false,true;movie(P, N).;false;false
6;false,false,false;workedunder(Q, A), workedunder(Q, R).;false;false
6;false,false;workedunder(N, A), movie(P, A).;true;true
7;;genre(A, B) :- movie(E, A).;true;true
7;true;movie(E, F), actor(F).;true;false
7;true,true;workedunder(F, G).;true;false
7;false,false;movie(L, A), workedunder(M, A).;true;true
7;false,false,false;workedunder(P, A).;false;false
7;false,false,true;workedunder(M, N).;false;false
7;true,true,true;workedunder(H, C), workedunder(F, I).;false;false
7;false;workedunder(J, A), workedunder(J, K).;false;true
8;;genre(A, B) :- movie(E, A).;false;true
8;false,true,false;movie(J, A).;false;false
8;false;workedunder(F, A).;true;true
8;false,true;workedunder(F, G), movie(H, A).;true;true
8;false,true,true;movie(I, G).;false;false
8;false,false,true;workedunder(K, L), movie(M, L).;false;false
8;false,false,false;movie(N, A).;false;false
8;false,false;workedunder(K, A).;true;true
9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
9;true;workedunder(E, A), movie(F, E).;false;false
9;false;workedunder(G, A), movie(H, A).;true;true
9;false,true;movie(H, G).;false;false
9;false,false,true;workedunder(P, N).;false;false
9;false,false,false;movie(Q, A).;false;false
9;false,false;workedunder(M, A).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.29881865438287963;  // std dev = 2,140, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5956741381003415;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16205286419737067;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.18124293657340532;  // std dev = 1,742, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then if ( workedunder(E, G), movie(H, G) )
%   | | | then return 0.14597886548550898;  // std dev = 1,698, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.37251522214334515;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.18575034603848153;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.2830558348447616;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), movie(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A), workedunder(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.15927748105167067;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.05581230184115785;  // std dev = 1,302, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then return 0.04643919624336043;  // std dev = 1,294, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.19980237709154222;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), movie(H, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(J, A) )
%   | | | then return -0.15178877151766118;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.355223
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 3.802 seconds
Total inference time: 1.765 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'true': [0.961, 1, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [2.14, 12, 12]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A)'}, {'true,false,true': [0.0, 0, 0], 'true,true': [0.961, 1, 12], 'true,false,false': [0.0, 11, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [1.742, 12, 12], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)', 'true,false,true': 'workedunder(E, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [1.698, 12, 12], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,false,true': [0.0, 0, 0], 'true,true': [0.961, 1, 12], 'true,false,false': [7.45e-09, 11, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'workedunder(E, A), movie(F, E)', 'false': 'workedunder(G, A)', 'false,false,false': 'workedunder(J, A), workedunder(J, K)', 'false,false': 'workedunder(H, A), movie(I, A)'}, {'false,false,false,false': [1.05e-08, 11, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), actor(D)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.302, 12, 12], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)'}, {'true': [1.294, 12, 12], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'workedunder(E, A), movie(F, E)', 'false': 'workedunder(G, A), movie(H, A)', 'false,false,false': 'movie(J, A)', 'false,false': 'workedunder(I, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.05e-08, 11, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}]]
[{'': [0.07100591715976314, -1.0092936587501423e-17], 'false': [nan, -1.0092936587501423e-17], 'false,false,false': [nan, -1.0092936587501423e-17], 'false,false': [nan, -1.0092936587501423e-17]}, {'': [0.19076867375623552, nan], 'true': [0.19076867375623552, nan]}, {'': [0.18100230240526075, nan], 'true': [0.07100591715976333, 0.0], 'true,false': [nan, 0.0]}, {'': [0.12645378409069916, nan]}, {'': [0.12012065248090788, nan], 'true': [nan, 0.12012065248090788], 'true,false,true': [0.12012065248090788, nan], 'true,false': [0.12012065248090788, nan]}, {'': [0.11583557245508891, nan], 'true': [0.07100591715976333, 5.046468293750712e-18], 'true,false': [nan, 5.046468293750712e-18]}, {'': [0.07100591715976333, 1.0092936587501423e-17], 'true': [0.07100591715976333, nan], 'false': [nan, 1.0092936587501423e-17], 'false,false,false': [nan, 1.0092936587501423e-17], 'false,false': [nan, 1.0092936587501423e-17]}, {'': [0.0706034160829121, nan], 'true': [0.0706034160829121, nan], 'true,true,true': [0.0706034160829121, nan], 'true,true': [0.0706034160829121, nan]}, {'': [0.06976640397380092, nan]}, {'': [0.07100591715976336, 1.0092936587501423e-17], 'true': [0.07100591715976336, nan], 'false': [nan, 1.0092936587501423e-17], 'false,false,false': [1.0092936587501423e-17, nan], 'false,false': [nan, 1.0092936587501423e-17]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '5;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 4.506 seconds
Total inference time: 1.335 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 10:13:15
{'CLL': -0.320018, 'Recall': 1.0, 'F1': 0.897436, 'parameter': {'CLL': -0.355223, 'Recall': 1.0, 'F1': 0.897436, 'AUC ROC': 0.885714, 'Inference time': 1.765, 'Learning time': 3.802, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953}, 'AUC ROC': 0.885714, 'Inference time': 1.335, 'Mapping results': {'Knowledge compiling time': 0.031409263610839844, 'Generating paths time': 4.122349262237549, 'Possible mappings': [5187], 'Max mapping': 65536, 'Finding best mapping': 1.430511474609375e-06, 'Generating mappings time': 4.680400371551514, 'Numbers preds mapping': [9], 'Total time': 8.834170579910278}, 'Learning time': 8.308, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 4.131 seconds
Total inference time: 0.993 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 10:13:20
{'CLL': -0.320018, 'Recall': 1.0, 'F1': 0.897436, 'AUC ROC': 0.885714, 'Inference time': 0.993, 'Learning time': 4.131, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( director(A) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.75044
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.49 seconds
Total inference time: 1.196 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 10:13:23
{'CLL': -0.75044, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.885714, 'Inference time': 1.196, 'Learning time': 1.49, 'Precision': [nan, 0.5], 'AUC PR': 0.813953}


Starting fold 3

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.034979820251464844
   Generating paths time   = 3.4516382217407227
   Generating mappings time   = 4.341178894042969
   Possible mappings   = [5187]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 7.8278069496154785


Best mapping found: ['professor(A) -> female(A)', 'samecourse(A,B) -> workedunder(B,A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
0;false;workedunder(I, A), movie(J, I).;true;true
0;false,true;workedunder(I, K), movie(J, K).;true;false
0;false,true,true;movie(J, A).;false;false
0;false,false,false;workedunder(Q, A).;false;false
0;false,false;workedunder(N, A), workedunder(N, P).;false;true
1;;genre(A, B) :- movie(C, A).;true;true
1;true;movie(C, F), workedunder(F, G).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true,false;workedunder(H, A).;false;false
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
2;;genre(A, B) :- movie(E, A).;true;true
2;true;workedunder(F, A), movie(E, F).;false;true
2;false;workedunder(H, A), movie(I, A).;true;true
2;false,true;workedunder(H, J).;true;false
2;false,true,true;movie(I, J).;false;false
2;true,false;workedunder(G, A).;false;false
2;false,false,false;workedunder(M, A), movie(N, M).;false;false
2;false,false;workedunder(K, A), workedunder(K, L).;false;true
3;;genre(A, B) :- workedunder(F, E).;false;true
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false;movie(L, A), workedunder(M, A).;false;true
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(F, E).;true;true
4;true;workedunder(E, A).;true;true
4;false;workedunder(M, A), workedunder(M, N).;true;false
4;false,true;movie(P, M).;false;false
4;true,false;workedunder(J, H).;true;false
4;true,true;workedunder(F, G).;false;false
4;true,false,true;workedunder(J, K), movie(L, K).;false;false
5;;genre(A, B) :- movie(E, A).;true;true
5;true;workedunder(F, A), movie(E, F).;false;true
5;false;movie(H, A), workedunder(I, A).;true;true
5;false,true;movie(H, I).;true;false
5;false,true,true;workedunder(I, J).;false;false
5;true,false;workedunder(G, A), movie(E, G).;false;false
5;false,false,false;workedunder(N, A), movie(P, N).;false;false
5;false,false;workedunder(M, A).;false;true
6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
6;true;workedunder(E, A), movie(F, E).;false;false
6;false;workedunder(I, A).;true;true
6;false,true;workedunder(I, J), movie(K, J).;true;false
6;false,true,true;movie(K, I).;false;false
6;false,false,true;movie(P, N).;false;false
6;false,false,false;workedunder(Q, A), workedunder(Q, R).;false;false
6;false,false;workedunder(N, A), movie(P, A).;true;true
7;;genre(A, B) :- movie(E, A).;true;true
7;true;movie(E, F), female(F).;true;false
7;true,true;workedunder(F, G).;true;false
7;false,false;movie(L, A), workedunder(M, A).;true;true
7;false,false,false;workedunder(P, A).;false;false
7;false,false,true;workedunder(M, N).;false;false
7;true,true,true;workedunder(H, C), workedunder(F, I).;false;false
7;false;workedunder(J, A), workedunder(J, K).;false;true
8;;genre(A, B) :- movie(E, A).;false;true
8;false,true,false;movie(J, A).;false;false
8;false;workedunder(F, A).;true;true
8;false,true;workedunder(F, G), movie(H, A).;true;true
8;false,true,true;movie(I, G).;false;false
8;false,false,true;workedunder(K, L), movie(M, L).;false;false
8;false,false,false;movie(N, A).;false;false
8;false,false;workedunder(K, A).;true;true
9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
9;true;workedunder(E, A), movie(F, E).;false;false
9;false;workedunder(G, A), movie(H, A).;true;true
9;false,true;movie(H, G).;false;false
9;false,false,true;workedunder(P, N).;false;false
9;false,false,false;movie(Q, A).;false;false
9;false,false;workedunder(M, A).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.3036065954523843;  // std dev = 2,821, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.43468426925455816;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16270407948312035;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.191822590534415;  // std dev = 2,608, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then if ( workedunder(E, G), movie(H, G) )
%   | | | then return 0.15213130281527415;  // std dev = 2,579, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.25484500122609915;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.18892741522525966;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.19122216672275275;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), movie(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A), workedunder(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.16166085530776322;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), female(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.056923204613965245;  // std dev = 2,379, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then return 0.04516421072064327;  // std dev = 2,373, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.11926026825818874;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), movie(H, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(J, A) )
%   | | | then return -0.15374888192880223;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.333423
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 3.777 seconds
Total inference time: 1.882 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'true': [2.245, 7, 18], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [2.821, 18, 18]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A)'}, {'true,false,true': [0.0, 0, 0], 'true,true': [2.245, 7, 18], 'true,false,false': [7.45e-09, 11, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [2.608, 18, 18], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)', 'true,false,true': 'workedunder(E, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [2.579, 18, 18], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,false,true': [0.0, 0, 0], 'true,true': [2.245, 7, 18], 'true,false,false': [1.05e-08, 11, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'workedunder(E, A), movie(F, E)', 'false': 'workedunder(G, A)', 'false,false,false': 'workedunder(J, A), workedunder(J, K)', 'false,false': 'workedunder(H, A), movie(I, A)'}, {'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), female(D)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.379, 18, 18], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)'}, {'true': [2.373, 18, 18], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'workedunder(E, A), movie(F, E)', 'false': 'workedunder(G, A), movie(H, A)', 'false,false,false': 'movie(J, A)', 'false,false': 'workedunder(I, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.05e-08, 11, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}]]
[{'': [0.2015999999999996, -1.0092936587501423e-17], 'false': [nan, -1.0092936587501423e-17], 'false,false,false': [nan, -1.0092936587501423e-17], 'false,false': [nan, -1.0092936587501423e-17]}, {'': [0.22099738300738728, nan], 'true': [0.22099738300738728, nan]}, {'': [0.21572533239357292, nan], 'true': [0.20159999999999986, 5.046468293750712e-18], 'true,false': [nan, 5.046468293750712e-18]}, {'': [0.18895488036883698, nan]}, {'': [0.18473030108061328, nan], 'true': [nan, 0.18473030108061328], 'true,false,true': [0.18473030108061328, nan], 'true,false': [0.18473030108061328, nan]}, {'': [0.1817876839049742, nan], 'true': [0.20160000000000003, 1.0092936587501423e-17], 'true,false': [nan, 1.0092936587501423e-17]}, {'': [0.20159999999999997, 0.0], 'true': [0.20159999999999997, nan], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.15722427974311723, nan], 'true': [0.15722427974311723, nan], 'true,true,true': [0.15722427974311723, nan], 'true,true': [0.15722427974311723, nan]}, {'': [0.15641134376332536, nan]}, {'': [0.2015999999999999, 1.0092936587501423e-17], 'true': [0.2015999999999999, nan], 'false': [nan, 1.0092936587501423e-17], 'false,false,false': [1.0092936587501423e-17, nan], 'false,false': [nan, 1.0092936587501423e-17]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '5;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 4.844 seconds
Total inference time: 1.091 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 10:13:44
{'CLL': -0.264596, 'Recall': 1.0, 'F1': 0.966667, 'parameter': {'CLL': -0.333423, 'Recall': 1.0, 'F1': 0.966667, 'AUC ROC': 0.965517, 'Inference time': 1.882, 'Learning time': 3.777, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484}, 'AUC ROC': 0.965517, 'Inference time': 1.091, 'Mapping results': {'Knowledge compiling time': 0.034979820251464844, 'Generating paths time': 3.4516382217407227, 'Possible mappings': [5187], 'Max mapping': 65536, 'Finding best mapping': 9.5367431640625e-07, 'Generating mappings time': 4.341178894042969, 'Numbers preds mapping': [9], 'Total time': 7.8278069496154785}, 'Learning time': 8.621, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( director(A) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 5.79 seconds
Total inference time: 0.931 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 10:13:51
{'CLL': -0.264596, 'Recall': 1.0, 'F1': 0.966667, 'AUC ROC': 0.965517, 'Inference time': 0.931, 'Learning time': 5.79, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.811362
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.686 seconds
Total inference time: 1.281 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 10:13:54
{'CLL': -0.811362, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.965517, 'Inference time': 1.281, 'Learning time': 1.686, 'Precision': [nan, 0.5], 'AUC PR': 0.935484}


Starting fold 4

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.032418012619018555
   Generating paths time   = 4.085501670837402
   Generating mappings time   = 5.02237606048584
   Possible mappings   = [5187]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 9.140305757522583


Best mapping found: ['professor(A) -> actor(A)', 'samecourse(A,B) -> workedunder(B,A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
0;false;workedunder(I, A), movie(J, I).;true;true
0;false,true;workedunder(I, K), movie(J, K).;true;false
0;false,true,true;movie(J, A).;false;false
0;false,false,false;workedunder(Q, A).;false;false
0;false,false;workedunder(N, A), workedunder(N, P).;false;true
1;;genre(A, B) :- movie(C, A).;true;true
1;true;movie(C, F), workedunder(F, G).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true,false;workedunder(H, A).;false;false
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
2;;genre(A, B) :- movie(E, A).;true;true
2;true;workedunder(F, A), movie(E, F).;false;true
2;false;workedunder(H, A), movie(I, A).;true;true
2;false,true;workedunder(H, J).;true;false
2;false,true,true;movie(I, J).;false;false
2;true,false;workedunder(G, A).;false;false
2;false,false,false;workedunder(M, A), movie(N, M).;false;false
2;false,false;workedunder(K, A), workedunder(K, L).;false;true
3;;genre(A, B) :- workedunder(F, E).;false;true
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false;movie(L, A), workedunder(M, A).;false;true
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(F, E).;true;true
4;true;workedunder(E, A).;true;true
4;false;workedunder(M, A), workedunder(M, N).;true;false
4;false,true;movie(P, M).;false;false
4;true,false;workedunder(J, H).;true;false
4;true,true;workedunder(F, G).;false;false
4;true,false,true;workedunder(J, K), movie(L, K).;false;false
5;;genre(A, B) :- movie(E, A).;true;true
5;true;workedunder(F, A), movie(E, F).;false;true
5;false;movie(H, A), workedunder(I, A).;true;true
5;false,true;movie(H, I).;true;false
5;false,true,true;workedunder(I, J).;false;false
5;true,false;workedunder(G, A), movie(E, G).;false;false
5;false,false,false;workedunder(N, A), movie(P, N).;false;false
5;false,false;workedunder(M, A).;false;true
6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
6;true;workedunder(E, A), movie(F, E).;false;false
6;false;workedunder(I, A).;true;true
6;false,true;workedunder(I, J), movie(K, J).;true;false
6;false,true,true;movie(K, I).;false;false
6;false,false,true;movie(P, N).;false;false
6;false,false,false;workedunder(Q, A), workedunder(Q, R).;false;false
6;false,false;workedunder(N, A), movie(P, A).;true;true
7;;genre(A, B) :- movie(E, A).;true;true
7;true;movie(E, F), actor(F).;true;false
7;true,true;workedunder(F, G).;true;false
7;false,false;movie(L, A), workedunder(M, A).;true;true
7;false,false,false;workedunder(P, A).;false;false
7;false,false,true;workedunder(M, N).;false;false
7;true,true,true;workedunder(H, C), workedunder(F, I).;false;false
7;false;workedunder(J, A), workedunder(J, K).;false;true
8;;genre(A, B) :- movie(E, A).;false;true
8;false,true,false;movie(J, A).;false;false
8;false;workedunder(F, A).;true;true
8;false,true;workedunder(F, G), movie(H, A).;true;true
8;false,true,true;movie(I, G).;false;false
8;false,false,true;workedunder(K, L), movie(M, L).;false;false
8;false,false,false;movie(N, A).;false;false
8;false,false;workedunder(K, A).;true;true
9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
9;true;workedunder(E, A), movie(F, E).;false;false
9;false;workedunder(G, A), movie(H, A).;true;true
9;false,true;movie(H, G).;false;false
9;false,false,true;workedunder(P, N).;false;false
9;false,false,false;movie(Q, A).;false;false
9;false,false;workedunder(M, A).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.30172034469051234;  // std dev = 1,295, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.498492746475355;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16244727624482774;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.18729114333702548;  // std dev = 1,148, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then if ( workedunder(E, G), movie(H, G) )
%   | | | then return 0.14937296717531667;  // std dev = 1,130, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.3012434632420348;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.18756447778833155;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.22646966272421584;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), movie(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A), workedunder(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.16063939276494618;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.05507950603391015;  // std dev = 0,991, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then return 0.04455509336805733;  // std dev = 0,988, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.14924174625391112;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), movie(H, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(J, A) )
%   | | | then return -0.15258313343603003;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.355616
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.883 seconds
Total inference time: 2.258 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [1.295, 4, 4]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A)'}, {'true,false,true': [0.0, 0, 0], 'true,true': [0.894, 1, 4], 'true,false,false': [0.0, 3, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [1.148, 4, 4], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)', 'true,false,true': 'workedunder(E, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [1.13, 4, 4], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,false,true': [0.0, 0, 0], 'true,true': [0.894, 1, 4], 'true,false,false': [0.0, 3, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'workedunder(E, A), movie(F, E)', 'false': 'workedunder(G, A)', 'false,false,false': 'workedunder(J, A), workedunder(J, K)', 'false,false': 'workedunder(H, A), movie(I, A)'}, {'false,false,false,false': [3.73e-09, 3, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), actor(D)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.991, 4, 4], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)'}, {'true': [0.988, 4, 4], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'workedunder(E, A), movie(F, E)', 'false': 'workedunder(G, A), movie(H, A)', 'false,false,false': 'movie(J, A)', 'false,false': 'workedunder(I, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}]]
[{'': [0.15999999999999986, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.20948195373304385, nan], 'true': [0.20948195373304385, nan]}, {'': [0.20238477663281773, nan], 'true': [0.15999999999999992, 0.0], 'true,false': [nan, 0.0]}, {'': [0.16487698050829605, nan]}, {'': [0.15962154201755097, nan], 'true': [nan, 0.15962154201755097], 'true,false,true': [0.15962154201755097, nan], 'true,false': [0.15962154201755097, nan]}, {'': [0.15599996950336237, nan], 'true': [0.16, 0.0], 'true,false': [nan, 0.0]}, {'': [0.15999999999999998, 4.625929269271485e-18], 'true': [0.15999999999999998, nan], 'false': [nan, 4.625929269271485e-18], 'false,false,false': [nan, 4.625929269271485e-18], 'false,false': [nan, 4.625929269271485e-18]}, {'': [0.12286667295528653, nan], 'true': [0.12286667295528653, nan], 'true,true,true': [0.12286667295528653, nan], 'true,true': [0.12286667295528653, nan]}, {'': [0.12199552058962622, nan]}, {'': [0.16, -4.625929269271485e-18], 'true': [0.16, nan], 'false': [nan, -4.625929269271485e-18], 'false,false,false': [-4.625929269271485e-18, nan], 'false,false': [nan, -4.625929269271485e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '5;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 2.696 seconds
Total inference time: 1.202 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 10:14:13
{'CLL': -0.300536, 'Recall': 1.0, 'F1': 0.914894, 'parameter': {'CLL': -0.355616, 'Recall': 1.0, 'F1': 0.914894, 'AUC ROC': 0.906977, 'Inference time': 2.258, 'Learning time': 1.883, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137}, 'AUC ROC': 0.906977, 'Inference time': 1.202, 'Mapping results': {'Knowledge compiling time': 0.032418012619018555, 'Generating paths time': 4.085501670837402, 'Possible mappings': [5187], 'Max mapping': 65536, 'Finding best mapping': 1.1920928955078125e-06, 'Generating mappings time': 5.02237606048584, 'Numbers preds mapping': [9], 'Total time': 9.140305757522583}, 'Learning time': 4.579000000000001, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 3.055 seconds
Total inference time: 3.476 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 10:14:21
{'CLL': -0.300536, 'Recall': 1.0, 'F1': 0.914894, 'AUC ROC': 0.906977, 'Inference time': 3.476, 'Learning time': 3.055, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.789772
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.077 seconds
Total inference time: 1.077 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 10:14:23
{'CLL': -0.789772, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.906977, 'Inference time': 1.077, 'Learning time': 1.077, 'Precision': [nan, 0.5], 'AUC PR': 0.843137}


Starting fold 5

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.03616142272949219
   Generating paths time   = 3.715366840362549
   Generating mappings time   = 5.019395112991333
   Possible mappings   = [5187]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.6689300537109375e-06
   Total time   = 8.77093505859375


Best mapping found: ['professor(A) -> actor(A)', 'samecourse(A,B) -> workedunder(B,A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
0;false;workedunder(I, A), movie(J, I).;true;true
0;false,true;workedunder(I, K), movie(J, K).;true;false
0;false,true,true;movie(J, A).;false;false
0;false,false,false;workedunder(Q, A).;false;false
0;false,false;workedunder(N, A), workedunder(N, P).;false;true
1;;genre(A, B) :- movie(C, A).;true;true
1;true;movie(C, F), workedunder(F, G).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true,false;workedunder(H, A).;false;false
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
2;;genre(A, B) :- movie(E, A).;true;true
2;true;workedunder(F, A), movie(E, F).;false;true
2;false;workedunder(H, A), movie(I, A).;true;true
2;false,true;workedunder(H, J).;true;false
2;false,true,true;movie(I, J).;false;false
2;true,false;workedunder(G, A).;false;false
2;false,false,false;workedunder(M, A), movie(N, M).;false;false
2;false,false;workedunder(K, A), workedunder(K, L).;false;true
3;;genre(A, B) :- workedunder(F, E).;false;true
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false;movie(L, A), workedunder(M, A).;false;true
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(F, E).;true;true
4;true;workedunder(E, A).;true;true
4;false;workedunder(M, A), workedunder(M, N).;true;false
4;false,true;movie(P, M).;false;false
4;true,false;workedunder(J, H).;true;false
4;true,true;workedunder(F, G).;false;false
4;true,false,true;workedunder(J, K), movie(L, K).;false;false
5;;genre(A, B) :- movie(E, A).;true;true
5;true;workedunder(F, A), movie(E, F).;false;true
5;false;movie(H, A), workedunder(I, A).;true;true
5;false,true;movie(H, I).;true;false
5;false,true,true;workedunder(I, J).;false;false
5;true,false;workedunder(G, A), movie(E, G).;false;false
5;false,false,false;workedunder(N, A), movie(P, N).;false;false
5;false,false;workedunder(M, A).;false;true
6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
6;true;workedunder(E, A), movie(F, E).;false;false
6;false;workedunder(I, A).;true;true
6;false,true;workedunder(I, J), movie(K, J).;true;false
6;false,true,true;movie(K, I).;false;false
6;false,false,true;movie(P, N).;false;false
6;false,false,false;workedunder(Q, A), workedunder(Q, R).;false;false
6;false,false;workedunder(N, A), movie(P, A).;true;true
7;;genre(A, B) :- movie(E, A).;true;true
7;true;movie(E, F), actor(F).;true;false
7;true,true;workedunder(F, G).;true;false
7;false,false;movie(L, A), workedunder(M, A).;true;true
7;false,false,false;workedunder(P, A).;false;false
7;false,false,true;workedunder(M, N).;false;false
7;true,true,true;workedunder(H, C), workedunder(F, I).;false;false
7;false;workedunder(J, A), workedunder(J, K).;false;true
8;;genre(A, B) :- movie(E, A).;false;true
8;false,true,false;movie(J, A).;false;false
8;false;workedunder(F, A).;true;true
8;false,true;workedunder(F, G), movie(H, A).;true;true
8;false,true,true;movie(I, G).;false;false
8;false,false,true;workedunder(K, L), movie(M, L).;false;false
8;false,false,false;movie(N, A).;false;false
8;false,false;workedunder(K, A).;true;true
9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
9;true;workedunder(E, A), movie(F, E).;false;false
9;false;workedunder(G, A), movie(H, A).;true;true
9;false,true;movie(H, G).;false;false
9;false,false,true;workedunder(P, N).;false;false
9;false,false,false;movie(Q, A).;false;false
9;false,false;workedunder(M, A).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.29701438684128156;  // std dev = 0,845, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.6558459784192016;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16180800894656575;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.17810178394162224;  // std dev = 0,638, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then if ( workedunder(E, G), movie(H, G) )
%   | | | then return 0.1444162798734363;  // std dev = 0,617, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.4173826094543863;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1848049261979801;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.3206230544636278;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), movie(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A), workedunder(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1585666830410459;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.05828753963094845;  // std dev = 0,394, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then return 0.04927685078037344;  // std dev = 0,390, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.2352145215981465;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(G, A), movie(H, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(J, A) )
%   | | | then return -0.15187968541862853;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.329232
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 3.919 seconds
Total inference time: 1.975 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [0.845, 2, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A)'}, {'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,false': [0.0, 2, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'true': [0.638, 2, 2], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)', 'true,false,true': 'workedunder(E, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.617, 2, 2], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,false': [0.0, 2, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'workedunder(E, A), movie(F, E)', 'false': 'workedunder(G, A)', 'false,false,false': 'workedunder(J, A), workedunder(J, K)', 'false,false': 'workedunder(H, A), movie(I, A)'}, {'false,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), actor(D)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.394, 2, 2], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)'}, {'true': [0.39, 2, 2], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'workedunder(E, A), movie(F, E)', 'false': 'workedunder(G, A), movie(H, A)', 'false,false,false': 'movie(J, A)', 'false,false': 'workedunder(I, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}]]
[{'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.17847162811629394, nan], 'true': [0.17847162811629394, nan]}, {'': [0.1671395107637846, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.1018541174660169, nan]}, {'': [0.09513914870302978, nan], 'true': [nan, 0.09513914870302978], 'true,false,true': [0.09513914870302978, nan], 'true,false': [0.09513914870302978, nan]}, {'': [0.09065745702376753, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.03873973197950728, nan], 'true': [0.03873973197950728, nan], 'true,true,true': [0.03873973197950728, nan], 'true,true': [0.03873973197950728, nan]}, {'': [0.03799277927048438, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '5;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   return 0;  // std dev = 0,422, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,334, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,334, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,207, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   return 0;  // std dev = 0,207, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.319496
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 1.284 seconds
Total inference time: 1.086 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 10:14:42
{'CLL': -0.319496, 'Recall': 1.0, 'F1': 0.909091, 'parameter': {'CLL': -0.329232, 'Recall': 1.0, 'F1': 0.909091, 'AUC ROC': 0.9, 'Inference time': 1.975, 'Learning time': 3.919, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333}, 'AUC ROC': 0.9, 'Inference time': 1.086, 'Mapping results': {'Knowledge compiling time': 0.03616142272949219, 'Generating paths time': 3.715366840362549, 'Possible mappings': [5187], 'Max mapping': 65536, 'Finding best mapping': 1.6689300537109375e-06, 'Generating mappings time': 5.019395112991333, 'Numbers preds mapping': [9], 'Total time': 8.77093505859375}, 'Learning time': 5.203, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.167 seconds
Total inference time: 1.152 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 10:14:46
{'CLL': -1.052978, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.5, 'Inference time': 1.152, 'Learning time': 2.167, 'Precision': [nan, 0.5], 'AUC PR': 0.5}


WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.678 seconds
Total inference time: 0.904 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 10:14:48
{'CLL': -1.052978, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.5, 'Inference time': 0.904, 'Learning time': 0.678, 'Precision': [nan, 0.5], 'AUC PR': 0.5}


