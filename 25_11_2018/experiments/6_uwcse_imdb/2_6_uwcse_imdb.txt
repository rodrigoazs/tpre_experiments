Starting experiment #2 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else return 0.3343394112899885;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   else if ( advisedby(A, G), publication(H, G) )
%   | then if ( advisedby(I, G), publication(H, I) )
%   | | then if ( ta(J, I, K), ta(L, A, M) )
%   | | | then return 0.4735335504841277;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.36389606153629317;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, P) )
%   | | | then return 0.28672036367094095;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.41134042446121344;  // std dev = 3,408, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( publication(R, A) )
%   | | | then return 0.40360348055405776;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.26991364098186527;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.24415759818152227;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then return 0.3558713724755001;  // std dev = 0,495, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | else if ( ta(C, I, J), advisedby(I, K) )
%   | | | then return 0.24189946894348618;  // std dev = 3,011, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.30467057826294275;  // std dev = 1,868, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), projectmember(M, L) )
%   | then return 0.2421123968371836;  // std dev = 0,491, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( advisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, A) )
%   | | | then return 0.3078505988318288;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.3786504233237976;  // std dev = 3,633, 54,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | else if ( tempadvisedby(A, R) )
%   | | | then return 0.3412124530368767;  // std dev = 2,813, 32,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.23188311544392773;  // std dev = 1,704, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( tempadvisedby(A, F), publication(E, F) )
%   | then return 0.094845891690378;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.22405590701034575;  // std dev = 0,496, 47,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   else if ( advisedby(A, G), publication(H, A) )
%   | then if ( tempadvisedby(I, G) )
%   | | then if ( publication(H, I) )
%   | | | then return 0.08884974841997191;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2712468568013248;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.3862648370136054;  // std dev = 0,477, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, J), publication(K, J) )
%   | | then if ( advisedby(L, J), publication(M, L) )
%   | | | then return 0.2530974178975958;  // std dev = 3,926, 62,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=32 */
%   | | | else return 0.3859818852709731;  // std dev = 1,422, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( advisedby(A, N), projectmember(P, N) )
%   | | | then return 0.11713739717257428;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.256105196476609;  // std dev = 4,900, 97,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=48 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( advisedby(A, E), publication(F, A) )
%   | then return 0.16433209010980532;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then if ( sameperson(A, G) )
%   | | | then return 0.20636523123166076;  // std dev = 3,135, 40,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | | | else return 0.49879125034873856;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(C, I, J), advisedby(I, K) )
%   | | | then return 0.15367448882123566;  // std dev = 3,011, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.20940816287327566;  // std dev = 1,859, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), projectmember(M, L) )
%   | then return 0.1685881449284363;  // std dev = 0,485, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( advisedby(A, N), publication(P, A) )
%   | | then return 0.24012542738648787;  // std dev = 0,494, 49,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=27 */
%   | | else if ( publication(Q, A), tempadvisedby(A, R) )
%   | | | then return 0.142790047302894;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.2224484541440456;  // std dev = 4,281, 74,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), projectmember(D, C) )
%   then return 0.2475989835790044;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( tempadvisedby(A, E), publication(F, A) )
%   | then if ( publication(F, E) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.0353115845180102;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08420664818600718;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.1919702410564499;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(I, A, J), advisedby(A, K) )
%   | | then if ( advisedby(L, K), publication(M, L) )
%   | | | then return 0.13481844305063104;  // std dev = 4,266, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | | | else return 0.2807864942681322;  // std dev = 1,134, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(N, A) )
%   | | | then return 0.18754201684845767;  // std dev = 3,887, 62,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=34 */
%   | | | else return 0.15904030528425092;  // std dev = 5,440, 121,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=60 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), projectmember(D, C) )
%   then return 0.18926457291317184;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( advisedby(A, E), projectmember(F, E) )
%   | then if ( advisedby(G, E), ta(H, G, I) )
%   | | then if ( advisedby(A, J), publication(K, J) )
%   | | | then return 0.5894051168355542;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08749531046942081;  // std dev = 1,297, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.03247378489029257;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( advisedby(A, L), ta(M, A, N) )
%   | | then if ( publication(P, L), tempadvisedby(Q, L) )
%   | | | then return 0.11453347146244536;  // std dev = 3,673, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.06727083341448535;  // std dev = 2,352, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( advisedby(A, R) )
%   | | | then return 0.13951917236849826;  // std dev = 4,598, 86,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   | | | else return 0.11980668591456196;  // std dev = 4,812, 95,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=46 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C) )
%   then if ( tempadvisedby(D, C), publication(E, D) )
%   | then if ( ta(F, D, G) )
%   | | then return 0.03240823872690138;  // std dev = 0,489, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( sameperson(A, D), publication(E, C) )
%   | | | then return 0.03856900507994685;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10591921877695958;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.13756673206048017;  // std dev = 0,491, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   else if ( advisedby(A, H) )
%   | then if ( publication(I, A), projectmember(J, H) )
%   | | then return 0.19193428940487306;  // std dev = 1,068, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(K, A), ta(L, A, M) )
%   | | | then return 0.06523101779001435;  // std dev = 3,070, 39,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.0997682252608448;  // std dev = 5,745, 136,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=72 */
%   | else if ( publication(N, A) )
%   | | then return 0.12676301000120146;  // std dev = 0,492, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.028419425810571403;  // std dev = 0,488, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), advisedby(D, C) )
%   then if ( ta(E, D, F), ta(G, A, F) )
%   | then if ( publication(H, D) )
%   | | then return -0.02500514521493076;  // std dev = 0,483, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.10683902151626976;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(I, D), ta(J, D, K) )
%   | | then return 0.14756965955467877;  // std dev = 0,483, 26,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | else if ( publication(L, C) )
%   | | | then return 0.07718432218502091;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return -0.0781757651388159;  // std dev = 1,101, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( advisedby(A, M), publication(N, M) )
%   | then if ( advisedby(P, M), publication(N, P) )
%   | | then if ( ta(Q, P, R) )
%   | | | then return 0.08748649248852224;  // std dev = 4,461, 81,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=41 */
%   | | | else return 0.03314482979052506;  // std dev = 3,576, 52,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | | else return 0.12035604423212899;  // std dev = 0,468, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | else return 0.05458849274651017;  // std dev = 0,488, 59,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), projectmember(D, C) )
%   then return 0.10901317808919195;  // std dev = 1,057, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( ta(E, A, F), publication(G, A) )
%   | then if ( publication(G, H), tempadvisedby(I, H) )
%   | | then if ( advisedby(A, H), ta(J, I, F) )
%   | | | then return 0.12091716528791406;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.01877551928721343;  // std dev = 2,831, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( advisedby(A, K) )
%   | | | then return 0.04159631157338726;  // std dev = 1,306, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.2166301892408833;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( advisedby(A, L), publication(M, A) )
%   | | then if ( tempadvisedby(N, L) )
%   | | | then return 0.036760696298882456;  // std dev = 2,991, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.13140104563101188;  // std dev = 1,960, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( tempadvisedby(A, P), advisedby(Q, P) )
%   | | | then return 0.06181793911494228;  // std dev = 3,722, 57,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=29 */
%   | | | else return 0.045820390861523855;  // std dev = 5,268, 115,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=57 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), publication(D, A) )
%   then if ( publication(D, C) )
%   | then return -0.022922024507555594;  // std dev = 0,483, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.04413261607099431;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( tempadvisedby(A, E), advisedby(F, E) )
%   | then if ( ta(G, A, H), ta(G, F, I) )
%   | | then return -0.0264621728130034;  // std dev = 0,498, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( ta(J, A, K), ta(L, F, K) )
%   | | | then return -0.014732888753208806;  // std dev = 1,544, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0892580207187998;  // std dev = 2,999, 38,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | else if ( advisedby(A, M) )
%   | | then if ( publication(N, M), publication(N, A) )
%   | | | then return 0.02887468380967404;  // std dev = 4,167, 71,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
%   | | | else return 0.051042201941927816;  // std dev = 5,107, 109,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=57 */
%   | | else if ( publication(P, A) )
%   | | | then return 0.06906758574013498;  // std dev = 1,466, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.007612504716457846;  // std dev = 2,384, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */


Predicates from source: ['inphase(person,prequals).', 'tempadvisedby(person,person).', 'publication(title,person).', 'advisedby(person,person).', 'sameperson(person,person).', 'ta(course,person,quarter).', 'projectmember(project,person).']

Starting fold 1

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.0180971622467041
   Generating paths time   = 4.434874534606934
   Generating mappings time   = 0.3325459957122803
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 4.785528659820557


Best mapping found: ['advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;true;workedunder(F, A), movie(E, F).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;false,false,false;movie(R, A).;false;false
0;false,false;workedunder(N, A).;true;true
1;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
1;false,false,true;workedunder(N, P), movie(Q, A).;false;false
1;false;workedunder(L, A), movie(M, L).;false;true
1;false,false,false;workedunder(R, A).;false;false
1;false,false;workedunder(N, A).;true;true
2;;genre(A, B) :- movie(E, A).;true;true
2;true;workedunder(F, A), movie(E, F).;false;false
2;false;workedunder(G, A), movie(H, A).;true;true
2;false,true;workedunder(G, I).;true;false
2;false,true,true;movie(H, I).;false;false
2;false,false,true;workedunder(J, L), movie(M, L).;false;false
2;false,false,false;workedunder(N, A), movie(P, N).;false;false
2;false,false;workedunder(J, A), movie(K, J).;true;true
3;;genre(A, B) :- workedunder(E, A), movie(F, A).;false;true
3;false;workedunder(L, A), movie(M, L).;false;true
3;false,false,false;movie(Q, A), workedunder(R, A).;false;false
3;false,false;workedunder(N, A), movie(P, A).;false;true
4;;genre(A, B) :- workedunder(C, A), movie(D, C).;false;true
4;false;workedunder(E, A), movie(F, A).;true;true
4;false,true;movie(F, E).;false;false
4;false,false,true;workedunder(K, L), movie(M, L).;false;false
4;false,false,false;movie(N, A).;false;false
4;false,false;workedunder(K, A).;true;true
5;;genre(A, B) :- workedunder(C, A), movie(D, C).;false;true
5;false;workedunder(E, A), movie(F, E).;true;true
5;false,true;workedunder(E, G).;true;false
5;false,true,true;workedunder(J, A), movie(K, J).;false;false
5;false,false,true;movie(P, L), workedunder(L, Q).;false;false
5;false,false,false;workedunder(R, A).;false;false
5;false,false;workedunder(L, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true;workedunder(C, D), movie(E, D).;true;false
6;false,true,false;movie(K, A).;false;false
6;false;workedunder(H, A).;true;true
6;false,true;movie(I, A), movie(J, H).;false;true
6;true,true;workedunder(A, D), movie(E, C).;false;false
6;false,false;movie(N, A).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
7;true;movie(H, D).;false;true
7;false;workedunder(M, A), movie(N, M).;true;false
7;true,false,false;movie(L, C).;false;false
7;false,true;workedunder(M, P), movie(N, P).;false;false
7;true,false;movie(I, D).;false;true
8;;genre(A, B) :- workedunder(C, A), movie(D, C).;false;true
8;false,true,false;workedunder(K, A).;false;false
8;false;movie(G, A).;true;true
8;false,true;movie(G, H), workedunder(H, I).;true;true
8;false,true,true;workedunder(H, A).;false;false
8;false,false,true;workedunder(L, N).;false;false
8;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
8;false,false;workedunder(L, A), movie(M, A).;true;true
9;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true
9;true;movie(D, C).;false;false
9;false;workedunder(E, A), workedunder(E, F).;false;true
9;false,false,true;movie(N, M), movie(N, A).;false;false
9;false,false,false;movie(P, A).;false;false
9;false,false;workedunder(M, A).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), movie(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, A), workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( movie(E, D) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( movie(E, A) )
%   | then if ( movie(E, F), workedunder(F, G) )
%   | | then if ( workedunder(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 4.067 seconds
Total inference time: 1.53 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 11]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'true': [4.21e-08, 0, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [7.45e-09, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 11]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'movie(I, A), workedunder(J, A)', 'false,false': 'workedunder(G, A), movie(H, A)'}, {'true': [4.21e-08, 0, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.0, 0, 11], 'false,false,false,true': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'true': [2.11e-08, 0, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'true,true': 'workedunder(A, D), movie(E, C)', 'false,false': 'movie(G, A)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 11, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 11]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'movie(E, D)', 'false': 'workedunder(F, A), movie(G, F)'}, {'true,false': [0.0, 0, 0], 'false,false': [2.63e-09, 11, 0], 'true,true': [7.45e-09, 0, 11], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'false,true,true': 'workedunder(F, A)', 'false': 'movie(E, A)', 'false,true': 'movie(E, F), workedunder(F, G)'}, {'true': [7.45e-09, 0, 11], 'false,true,true,false': [2.63e-09, 11, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'true': 'movie(D, C)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [5.27e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [5.27e-09, 0, 11]}]]
[{'': [0.24999999999999958, nan], 'true': [-1.6148698540002277e-16, -1.0092936587501423e-17]}, {'': [1.6148698540002277e-16, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false,false': [nan, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18]}, {'': [0.11145008534151403, nan], 'true': [-2.0185873175002846e-16, 5.046468293750712e-18]}, {'': [1.6148698540002277e-16, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [-6.055761952500853e-17, 0.0], 'false': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,false': [nan, 0.0]}, {'': [4.0371746350005693e-17, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false,false': [nan, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18]}, {'': [-2.5232341468753557e-17, 0.0], 'true': [-2.5232341468753557e-17, nan], 'false': [nan, 0.0], 'true,true': [nan, -2.5232341468753557e-17], 'false,false': [0.0, nan]}, {'': [5.046468293750712e-18, 6.30808536718839e-19], 'true': [5.046468293750712e-18, nan], 'false': [nan, 6.30808536718839e-19]}, {'': [5.046468293750712e-18, 6.30808536718839e-19], 'false,true,true': [nan, 6.30808536718839e-19], 'false': [6.30808536718839e-19, nan], 'false,true': [6.30808536718839e-19, nan]}, {'': [2.523234146875356e-18, 2.523234146875356e-18], 'true': [2.523234146875356e-18, nan], 'false': [nan, 2.523234146875356e-18], 'false,false,false': [2.523234146875356e-18, nan], 'false,false': [nan, 2.523234146875356e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '3;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '4;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '5;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '9;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 2.003 seconds
Total inference time: 1.175 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 05:11:24
{'CLL': -0.352709, 'Recall': 1.0, 'F1': 0.888889, 'parameter': {'CLL': -0.352709, 'Recall': 1.0, 'F1': 0.888889, 'AUC ROC': 0.875, 'Inference time': 1.53, 'Learning time': 4.067, 'Precision': [0.8, 0.5], 'AUC PR': 0.8}, 'AUC ROC': 0.875, 'Inference time': 1.175, 'Mapping results': {'Knowledge compiling time': 0.0180971622467041, 'Generating paths time': 4.434874534606934, 'Possible mappings': [433], 'Max mapping': 4096, 'Finding best mapping': 1.430511474609375e-06, 'Generating mappings time': 0.3325459957122803, 'Numbers preds mapping': [7], 'Total time': 4.785528659820557}, 'Learning time': 6.07, 'Precision': [0.8, 0.5], 'AUC PR': 0.8}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 3.164 seconds
Total inference time: 1.273 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 05:11:29
{'CLL': -0.352709, 'Recall': 1.0, 'F1': 0.888889, 'AUC ROC': 0.875, 'Inference time': 1.273, 'Learning time': 3.164, 'Precision': [0.8, 0.5], 'AUC PR': 0.8}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.726963
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.149 seconds
Total inference time: 1.481 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 05:11:32
{'CLL': -0.726963, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.875, 'Inference time': 1.481, 'Learning time': 1.149, 'Precision': [nan, 0.5], 'AUC PR': 0.8}


Starting fold 2

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.031200170516967773
   Generating paths time   = 4.303777694702148
   Generating mappings time   = 0.4337894916534424
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 4.768779754638672


Best mapping found: ['advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;true;workedunder(F, A), movie(E, F).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;false,false,false;movie(R, A).;false;false
0;false,false;workedunder(N, A).;true;true
1;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
1;false,false,true;workedunder(N, P), movie(Q, A).;false;false
1;false;workedunder(L, A), workedunder(M, L).;false;true
1;false,false,false;workedunder(R, A).;false;false
1;false,false;workedunder(N, A).;true;true
2;;genre(A, B) :- movie(E, A).;true;true
2;true;workedunder(F, A), movie(E, F).;false;false
2;false;workedunder(G, A), movie(H, A).;true;true
2;false,true;workedunder(G, I).;true;false
2;false,true,true;movie(H, I).;false;false
2;false,false,true;workedunder(J, L), movie(M, L).;false;false
2;false,false,false;workedunder(N, A), workedunder(P, N).;false;false
2;false,false;workedunder(J, A), movie(K, J).;true;true
3;;genre(A, B) :- workedunder(E, A), movie(F, A).;false;true
3;false;workedunder(L, A), workedunder(M, L).;false;true
3;false,false,false;movie(Q, A), workedunder(R, A).;false;false
3;false,false;workedunder(N, A), movie(P, A).;false;true
4;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
4;false;workedunder(E, A), movie(F, A).;true;true
4;false,true;movie(F, E).;false;false
4;false,false,true;workedunder(K, L), movie(M, L).;false;false
4;false,false,false;movie(N, A).;false;false
4;false,false;workedunder(K, A).;true;true
5;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
5;false;workedunder(E, A), workedunder(F, E).;true;true
5;false,true;workedunder(E, G).;true;false
5;false,true,true;workedunder(J, A), movie(K, J).;false;false
5;false,false,true;movie(P, L), workedunder(L, Q).;false;false
5;false,false,false;workedunder(R, A).;false;false
5;false,false;workedunder(L, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true;workedunder(C, D), movie(E, D).;true;false
6;false,true,false;movie(K, A).;false;false
6;false;workedunder(H, A).;true;true
6;false,true;movie(I, A), workedunder(J, H).;false;true
6;true,true;workedunder(A, D), movie(E, C).;false;false
6;false,false;movie(N, A).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
7;true;movie(H, D).;false;true
7;false;workedunder(M, A), movie(N, M).;true;false
7;true,false,false;movie(L, C).;false;false
7;false,true;workedunder(M, P), movie(N, P).;false;false
7;true,false;movie(I, D).;false;true
8;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
8;false,true,false;workedunder(K, A).;false;false
8;false;movie(G, A).;true;true
8;false,true;movie(G, H), workedunder(H, I).;true;true
8;false,true,true;workedunder(H, A).;false;false
8;false,false,true;workedunder(L, N).;false;false
8;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
8;false,false;workedunder(L, A), movie(M, A).;true;true
9;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true
9;true;movie(D, C).;false;false
9;false;workedunder(E, A), workedunder(E, F).;false;true
9;false,false,true;movie(N, M), movie(N, A).;false;false
9;false,false,false;movie(P, A).;false;false
9;false,false;workedunder(M, A).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5123505661168763;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.3853022650638632;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), movie(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, A), workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), movie(F, A) )
%   | then if ( movie(F, E) )
%   | | then return 0.2920349799096258;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then if ( movie(H, G), workedunder(G, I) )
%   | | | then return 0.22699179224124724;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1812058810760637;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( movie(E, D) )
%   | then return 0.14804913120500338;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( movie(E, F), workedunder(F, G) )
%   | | then if ( workedunder(F, A) )
%   | | | then return 0.12328872166165511;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return 0.10427374705508957;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 3.209 seconds
Total inference time: 1.608 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.961, 1, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [7.45e-09, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'movie(I, A), workedunder(J, A)', 'false,false': 'workedunder(G, A), movie(H, A)'}, {'true': [0.961, 1, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,true': 'movie(F, E)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,true': [0.961, 1, 12], 'false,false,false,true': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,false,true': 'movie(H, G), workedunder(G, I)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'workedunder(J, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.0, 0, 0], 'false,false,false,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true,true': [0.961, 1, 12], 'false,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'true,true': 'workedunder(A, D), movie(E, C)', 'false,false': 'movie(G, A)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 11, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [0.961, 1, 12]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'movie(E, D)', 'false': 'workedunder(F, A), movie(G, F)'}, {'true,false': [0.0, 0, 0], 'false,false': [2.63e-09, 11, 0], 'true,true': [0.961, 1, 12], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,true,true': 'workedunder(F, A)', 'false': 'movie(E, A)', 'false,true': 'movie(E, F), workedunder(F, G)'}, {'true': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 11, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,true': [0.961, 1, 12], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'true': 'movie(D, C)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [5.27e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}]]
[{'': [0.24999999999999956, nan], 'true': [0.07100591715976314, -1.0092936587501423e-17]}, {'': [0.07100591715976333, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false,false': [nan, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18]}, {'': [0.13533629047183346, nan], 'true': [0.07100591715976351, 5.046468293750712e-18]}, {'': [0.0710059171597632, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [nan, 0.07520814223733167], 'false,false,false': [0.0, nan], 'false': [0.07100591715976336, 0.0], 'false,false': [nan, 0.0], 'false,true': [0.07100591715976336, nan]}, {'': [nan, 0.06265589574996693], 'false,false,true': [0.07100591715976326, nan], 'false': [nan, 0.06265589574996693], 'false,false,false': [nan, 2.523234146875356e-18], 'false,false': [0.07100591715976326, 2.523234146875356e-18]}, {'': [0.07100591715976336, 0.0], 'true': [0.07100591715976336, nan], 'false': [nan, 0.0], 'true,true': [nan, 0.07100591715976336], 'false,false': [0.0, nan]}, {'': [0.07100591715976333, 6.30808536718839e-19], 'true': [0.07100591715976333, nan], 'false': [nan, 6.30808536718839e-19]}, {'': [nan, 0.047586455214132066], 'false,true,true': [0.07100591715976333, 6.30808536718839e-19], 'false': [0.047586455214132045, nan], 'false,true': [0.047586455214132045, nan]}, {'': [0.07100591715976332, 2.523234146875356e-18], 'true': [0.07100591715976332, nan], 'false': [nan, 2.523234146875356e-18], 'false,false,false': [2.523234146875356e-18, nan], 'false,false': [nan, 2.523234146875356e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '3;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '4;;genre(A, B) :- workedunder(E, A), movie(F, A).;true;true', '5;;genre(A, B) :- workedunder(G, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(F, A).;true;true', '9;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 3.204 seconds
Total inference time: 0.966 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 05:11:47
{'CLL': -0.320018, 'Recall': 1.0, 'F1': 0.897436, 'parameter': {'CLL': -0.320018, 'Recall': 1.0, 'F1': 0.897436, 'AUC ROC': 0.885714, 'Inference time': 1.608, 'Learning time': 3.209, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953}, 'AUC ROC': 0.885714, 'Inference time': 0.966, 'Mapping results': {'Knowledge compiling time': 0.031200170516967773, 'Generating paths time': 4.303777694702148, 'Possible mappings': [433], 'Max mapping': 4096, 'Finding best mapping': 1.1920928955078125e-06, 'Generating mappings time': 0.4337894916534424, 'Numbers preds mapping': [7], 'Total time': 4.768779754638672}, 'Learning time': 6.413, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 3.277 seconds
Total inference time: 1.211 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 05:11:52
{'CLL': -0.320018, 'Recall': 1.0, 'F1': 0.897436, 'AUC ROC': 0.885714, 'Inference time': 1.211, 'Learning time': 3.277, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.75044
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.549 seconds
Total inference time: 1.227 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 05:11:55
{'CLL': -0.75044, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.885714, 'Inference time': 1.227, 'Learning time': 1.549, 'Precision': [nan, 0.5], 'AUC PR': 0.813953}


Starting fold 3

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.03656435012817383
   Generating paths time   = 4.527223825454712
   Generating mappings time   = 0.37953853607177734
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.9073486328125e-06
   Total time   = 4.94333815574646


Best mapping found: ['advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;true;workedunder(F, A), movie(E, F).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;false,false,false;movie(R, A).;false;false
0;false,false;workedunder(N, A).;true;true
1;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
1;false,false,true;workedunder(N, P), movie(Q, A).;false;false
1;false;workedunder(L, A), workedunder(M, L).;false;true
1;false,false,false;workedunder(R, A).;false;false
1;false,false;workedunder(N, A).;true;true
2;;genre(A, B) :- movie(E, A).;true;true
2;true;workedunder(F, A), movie(E, F).;false;false
2;false;workedunder(G, A), movie(H, A).;true;true
2;false,true;workedunder(G, I).;true;false
2;false,true,true;movie(H, I).;false;false
2;false,false,true;workedunder(J, L), movie(M, L).;false;false
2;false,false,false;workedunder(N, A), workedunder(P, N).;false;false
2;false,false;workedunder(J, A), movie(K, J).;true;true
3;;genre(A, B) :- workedunder(E, A), movie(F, A).;false;true
3;false;workedunder(L, A), workedunder(M, L).;false;true
3;false,false,false;movie(Q, A), workedunder(R, A).;false;false
3;false,false;workedunder(N, A), movie(P, A).;false;true
4;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
4;false;workedunder(E, A), movie(F, A).;true;true
4;false,true;movie(F, E).;false;false
4;false,false,true;workedunder(K, L), movie(M, L).;false;false
4;false,false,false;movie(N, A).;false;false
4;false,false;workedunder(K, A).;true;true
5;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
5;false;workedunder(E, A), workedunder(F, E).;true;true
5;false,true;workedunder(E, G).;true;false
5;false,true,true;workedunder(J, A), movie(K, J).;false;false
5;false,false,true;movie(P, L), workedunder(L, Q).;false;false
5;false,false,false;workedunder(R, A).;false;false
5;false,false;workedunder(L, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true;workedunder(C, D), movie(E, D).;true;false
6;false,true,false;movie(K, A).;false;false
6;false;workedunder(H, A).;true;true
6;false,true;movie(I, A), workedunder(J, H).;false;true
6;true,true;workedunder(D, A), movie(E, C).;false;false
6;false,false;movie(N, A).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
7;true;movie(H, D).;false;true
7;false;workedunder(M, A), movie(N, M).;true;false
7;true,false,false;movie(L, C).;false;false
7;false,true;workedunder(M, P), movie(N, P).;false;false
7;true,false;movie(I, D).;false;true
8;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
8;false,true,false;workedunder(K, A).;false;false
8;false;movie(G, A).;true;true
8;false,true;movie(G, H), workedunder(H, I).;true;true
8;false,true,true;workedunder(H, A).;false;false
8;false,false,true;workedunder(L, N).;false;false
8;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
8;false,false;workedunder(L, A), movie(M, A).;true;true
9;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true
9;true;movie(D, C).;false;false
9;false;workedunder(E, A), workedunder(E, F).;false;true
9;false,false,true;movie(N, M), movie(N, A).;false;false
9;false,false,false;movie(P, A).;false;false
9;false,false;workedunder(M, A).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.49238913840392534;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.39468718495146987;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.3029206894518932;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), movie(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, A), workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), movie(F, A) )
%   | then if ( movie(F, E) )
%   | | then return 0.2279628397230807;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then if ( movie(H, G), workedunder(G, I) )
%   | | | then return 0.1711293278244227;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(D, A), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.129208558439337;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( movie(E, D) )
%   | then return 0.09837607626228805;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( movie(E, F), workedunder(F, G) )
%   | | then if ( workedunder(F, A) )
%   | | | then return 0.07552905818195493;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return 0.05841806950104655;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 3.008 seconds
Total inference time: 1.469 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'true': [2.245, 7, 18], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [7.45e-09, 11, 0], 'false': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'movie(I, A), workedunder(J, A)', 'false,false': 'workedunder(G, A), movie(H, A)'}, {'true': [2.245, 7, 18], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,true': 'movie(F, E)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,true': [2.245, 7, 18], 'false,false,false,true': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,false,true': 'movie(H, G), workedunder(G, I)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'workedunder(J, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.0, 0, 0], 'false,false,false,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true,true': [2.245, 7, 18], 'false,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'true,true': 'workedunder(D, A), movie(E, C)', 'false,false': 'movie(G, A)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 11, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [2.245, 7, 18]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'movie(E, D)', 'false': 'workedunder(F, A), movie(G, F)'}, {'true,false': [0.0, 0, 0], 'false,false': [2.63e-09, 11, 0], 'true,true': [2.245, 7, 18], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,true,true': 'workedunder(F, A)', 'false': 'movie(E, A)', 'false,true': 'movie(E, F), workedunder(F, G)'}, {'true': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 11, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,true': [2.245, 7, 18], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'true': 'movie(D, C)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [5.27e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}]]
[{'': [0.2499999999999995, nan], 'true': [0.2015999999999996, -1.0092936587501423e-17]}, {'': [0.2016000000000001, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false,false': [nan, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18]}, {'': [0.1945443430451362, nan], 'true': [0.20160000000000053, 5.046468293750712e-18]}, {'': [0.2016000000000004, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [nan, 0.16181731640753824], 'false,false,false': [0.0, nan], 'false': [0.2016000000000001, 0.0], 'false,false': [nan, 0.0], 'false,true': [0.2016000000000001, nan]}, {'': [nan, 0.15394031595736635], 'false,false,true': [0.2016, nan], 'false': [nan, 0.15394031595736635], 'false,false,false': [nan, 2.523234146875356e-18], 'false,false': [0.2016, 2.523234146875356e-18]}, {'': [0.20160000000000003, 0.0], 'true': [0.20160000000000003, nan], 'false': [nan, 0.0], 'true,true': [nan, 0.20160000000000003], 'false,false': [0.0, nan]}, {'': [0.2016, 6.30808536718839e-19], 'true': [0.2016, nan], 'false': [nan, 6.30808536718839e-19]}, {'': [nan, 0.1443973137228396], 'false,true,true': [0.2015999999999999, 6.30808536718839e-19], 'false': [0.14439731372283962, nan], 'false,true': [0.14439731372283962, nan]}, {'': [0.20159999999999992, 2.523234146875356e-18], 'true': [0.20159999999999992, nan], 'false': [nan, 2.523234146875356e-18], 'false,false,false': [2.523234146875356e-18, nan], 'false,false': [nan, 2.523234146875356e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '3;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '4;;genre(A, B) :- workedunder(E, A), movie(F, A).;true;true', '5;;genre(A, B) :- workedunder(G, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(F, A).;true;true', '9;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 3.58 seconds
Total inference time: 0.982 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 05:12:10
{'CLL': -0.264596, 'Recall': 1.0, 'F1': 0.966667, 'parameter': {'CLL': -0.264596, 'Recall': 1.0, 'F1': 0.966667, 'AUC ROC': 0.965517, 'Inference time': 1.469, 'Learning time': 3.008, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484}, 'AUC ROC': 0.965517, 'Inference time': 0.982, 'Mapping results': {'Knowledge compiling time': 0.03656435012817383, 'Generating paths time': 4.527223825454712, 'Possible mappings': [433], 'Max mapping': 4096, 'Finding best mapping': 1.9073486328125e-06, 'Generating mappings time': 0.37953853607177734, 'Numbers preds mapping': [7], 'Total time': 4.94333815574646}, 'Learning time': 6.588, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( director(A) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 3.834 seconds
Total inference time: 0.932 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 05:12:15
{'CLL': -0.264596, 'Recall': 1.0, 'F1': 0.966667, 'AUC ROC': 0.965517, 'Inference time': 0.932, 'Learning time': 3.834, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( director(A) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.811362
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.621 seconds
Total inference time: 1.12 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 05:12:19
{'CLL': -0.811362, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.965517, 'Inference time': 1.12, 'Learning time': 1.621, 'Precision': [nan, 0.5], 'AUC PR': 0.935484}


Starting fold 4

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.03126358985900879
   Generating paths time   = 4.071101427078247
   Generating mappings time   = 0.3431088924407959
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 4.44548487663269


Best mapping found: ['advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;true;workedunder(F, A), movie(E, F).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;false,false,false;movie(R, A).;false;false
0;false,false;workedunder(N, A).;true;true
1;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
1;false,false,true;workedunder(N, P), movie(Q, A).;false;false
1;false;workedunder(L, A), workedunder(M, L).;false;true
1;false,false,false;workedunder(R, A).;false;false
1;false,false;workedunder(N, A).;true;true
2;;genre(A, B) :- movie(E, A).;true;true
2;true;workedunder(F, A), movie(E, F).;false;false
2;false;workedunder(G, A), movie(H, A).;true;true
2;false,true;workedunder(G, I).;true;false
2;false,true,true;movie(H, I).;false;false
2;false,false,true;workedunder(J, L), movie(M, L).;false;false
2;false,false,false;workedunder(N, A), workedunder(P, N).;false;false
2;false,false;workedunder(J, A), movie(K, J).;true;true
3;;genre(A, B) :- workedunder(E, A), movie(F, A).;false;true
3;false;workedunder(L, A), workedunder(M, L).;false;true
3;false,false,false;movie(Q, A), workedunder(R, A).;false;false
3;false,false;workedunder(N, A), movie(P, A).;false;true
4;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
4;false;workedunder(E, A), movie(F, A).;true;true
4;false,true;movie(F, E).;false;false
4;false,false,true;workedunder(K, L), movie(M, L).;false;false
4;false,false,false;movie(N, A).;false;false
4;false,false;workedunder(K, A).;true;true
5;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
5;false;workedunder(E, A), workedunder(F, E).;true;true
5;false,true;workedunder(E, G).;true;false
5;false,true,true;workedunder(J, A), movie(K, J).;false;false
5;false,false,true;movie(P, L), workedunder(L, Q).;false;false
5;false,false,false;workedunder(R, A).;false;false
5;false,false;workedunder(L, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true;workedunder(C, D), movie(E, D).;true;false
6;false,true,false;movie(K, A).;false;false
6;false;workedunder(H, A).;true;true
6;false,true;movie(I, A), workedunder(J, H).;false;true
6;true,true;workedunder(A, D), movie(E, C).;false;false
6;false,false;movie(N, A).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
7;true;movie(H, D).;false;true
7;false;workedunder(M, A), movie(N, M).;true;false
7;true,false,false;movie(L, C).;false;false
7;false,true;workedunder(M, P), movie(N, P).;false;false
7;true,false;movie(I, D).;false;true
8;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
8;false,true,false;workedunder(K, A).;false;false
8;false;movie(G, A).;true;true
8;false,true;movie(G, H), workedunder(H, I).;true;true
8;false,true,true;workedunder(H, A).;false;false
8;false,false,true;workedunder(L, N).;false;false
8;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
8;false,false;workedunder(L, A), movie(M, A).;true;true
9;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true
9;true;movie(D, C).;false;false
9;false;workedunder(E, A), workedunder(E, F).;false;true
9;false,false,true;movie(N, M), movie(N, A).;false;false
9;false,false,false;movie(P, A).;false;false
9;false,false;workedunder(M, A).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), movie(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, A), workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), movie(F, A) )
%   | then if ( movie(F, E) )
%   | | then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then if ( movie(H, G), workedunder(G, I) )
%   | | | then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( movie(E, D) )
%   | then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( movie(E, F), workedunder(F, G) )
%   | | then if ( workedunder(F, A) )
%   | | | then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 2.842 seconds
Total inference time: 2.894 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 3, 0], 'false': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [2.63e-09, 3, 0], 'false': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'movie(I, A), workedunder(J, A)', 'false,false': 'workedunder(G, A), movie(H, A)'}, {'true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,true': 'movie(F, E)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,true': [0.894, 1, 4], 'false,false,false,true': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,false,true': 'movie(H, G), workedunder(G, I)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'workedunder(J, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true,true': [0.894, 1, 4], 'false,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'true,true': 'workedunder(A, D), movie(E, C)', 'false,false': 'movie(G, A)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [0.894, 1, 4]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'movie(E, D)', 'false': 'workedunder(F, A), movie(G, F)'}, {'true,false': [0.0, 0, 0], 'false,false': [1.86e-09, 3, 0], 'true,true': [0.894, 1, 4], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,true,true': 'workedunder(F, A)', 'false': 'movie(E, A)', 'false,true': 'movie(E, F), workedunder(F, G)'}, {'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,true': [0.894, 1, 4], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'true': 'movie(D, C)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.32e-09, 3, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}]]
[{'': [0.24999999999999986, nan], 'true': [0.15999999999999986, 0.0]}, {'': [0.16, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.17200226808539504, nan], 'true': [0.15999999999999998, 2.3129646346357427e-18]}, {'': [0.15999999999999998, -1.1564823173178713e-18], 'false': [nan, -1.1564823173178713e-18], 'false,false,false': [nan, -1.1564823173178713e-18], 'false,false': [nan, -1.1564823173178713e-18]}, {'': [nan, 0.12780916797331965], 'false,false,false': [2.3129646346357427e-18, nan], 'false': [0.16, 2.3129646346357427e-18], 'false,false': [nan, 2.3129646346357427e-18], 'false,true': [0.16, nan]}, {'': [nan, 0.11781035319965033], 'false,false,true': [0.16, nan], 'false': [nan, 0.11781035319965033], 'false,false,false': [nan, 0.0], 'false,false': [0.16, 0.0]}, {'': [0.16, 0.0], 'true': [0.16, nan], 'false': [nan, 0.0], 'true,true': [nan, 0.16], 'false,false': [0.0, nan]}, {'': [0.16, 1.1564823173178713e-18], 'true': [0.16, nan], 'false': [nan, 1.1564823173178713e-18]}, {'': [nan, 0.10587514683359293], 'false,true,true': [0.16, -5.782411586589357e-19], 'false': [0.10587514683359293, nan], 'false,true': [0.10587514683359293, nan]}, {'': [0.16, 5.782411586589357e-19], 'true': [0.16, nan], 'false': [nan, 5.782411586589357e-19], 'false,false,false': [5.782411586589357e-19, nan], 'false,false': [nan, 5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '3;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '4;;genre(A, B) :- workedunder(E, A), movie(F, A).;true;true', '5;;genre(A, B) :- workedunder(G, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(F, A).;true;true', '9;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 3.739 seconds
Total inference time: 1.807 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 05:12:35
{'CLL': -0.300536, 'Recall': 1.0, 'F1': 0.914894, 'parameter': {'CLL': -0.300536, 'Recall': 1.0, 'F1': 0.914894, 'AUC ROC': 0.906977, 'Inference time': 2.894, 'Learning time': 2.842, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137}, 'AUC ROC': 0.906977, 'Inference time': 1.807, 'Mapping results': {'Knowledge compiling time': 0.03126358985900879, 'Generating paths time': 4.071101427078247, 'Possible mappings': [433], 'Max mapping': 4096, 'Finding best mapping': 1.430511474609375e-06, 'Generating mappings time': 0.3431088924407959, 'Numbers preds mapping': [7], 'Total time': 4.44548487663269}, 'Learning time': 6.5809999999999995, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 2.59 seconds
Total inference time: 1.095 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 05:12:40
{'CLL': -0.300536, 'Recall': 1.0, 'F1': 0.914894, 'AUC ROC': 0.906977, 'Inference time': 1.095, 'Learning time': 2.59, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.789772
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.099 seconds
Total inference time: 0.908 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 05:12:42
{'CLL': -0.789772, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.906977, 'Inference time': 0.908, 'Learning time': 1.099, 'Precision': [nan, 0.5], 'AUC PR': 0.843137}


Starting fold 5

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.03794264793395996
   Generating paths time   = 4.364662408828735
   Generating mappings time   = 0.42859578132629395
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.9073486328125e-06
   Total time   = 4.8312132358551025


Best mapping found: ['advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)'] 

Transferred target predicate: genre 

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;true;workedunder(F, A), movie(E, F).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;false,false,false;movie(R, A).;false;false
0;false,false;workedunder(N, A).;true;true
1;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
1;false,false,true;workedunder(N, P), movie(Q, A).;false;false
1;false;workedunder(L, A), workedunder(M, L).;false;true
1;false,false,false;workedunder(R, A).;false;false
1;false,false;workedunder(N, A).;true;true
2;;genre(A, B) :- movie(E, A).;true;true
2;true;workedunder(F, A), movie(E, F).;false;false
2;false;workedunder(G, A), movie(H, A).;true;true
2;false,true;workedunder(G, I).;true;false
2;false,true,true;movie(H, I).;false;false
2;false,false,true;workedunder(J, L), movie(M, L).;false;false
2;false,false,false;workedunder(N, A), workedunder(P, N).;false;false
2;false,false;workedunder(J, A), movie(K, J).;true;true
3;;genre(A, B) :- workedunder(E, A), movie(F, A).;false;true
3;false;workedunder(L, A), workedunder(M, L).;false;true
3;false,false,false;movie(Q, A), workedunder(R, A).;false;false
3;false,false;workedunder(N, A), movie(P, A).;false;true
4;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
4;false;workedunder(E, A), movie(F, A).;true;true
4;false,true;movie(F, E).;false;false
4;false,false,true;workedunder(K, L), movie(M, L).;false;false
4;false,false,false;movie(N, A).;false;false
4;false,false;workedunder(K, A).;true;true
5;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
5;false;workedunder(E, A), workedunder(F, E).;true;true
5;false,true;workedunder(E, G).;true;false
5;false,true,true;workedunder(J, A), movie(K, J).;false;false
5;false,false,true;movie(P, L), workedunder(L, Q).;false;false
5;false,false,false;workedunder(R, A).;false;false
5;false,false;workedunder(L, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true;workedunder(C, D), movie(E, D).;true;false
6;false,true,false;movie(K, A).;false;false
6;false;workedunder(H, A).;true;true
6;false,true;movie(I, A), workedunder(J, H).;false;true
6;true,true;workedunder(A, D), movie(E, C).;false;false
6;false,false;movie(N, A).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
7;true;movie(H, D).;false;true
7;false;workedunder(M, A), movie(N, M).;true;false
7;true,false,false;movie(L, C).;false;false
7;false,true;workedunder(M, P), movie(N, P).;false;false
7;true,false;movie(I, D).;false;true
8;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
8;false,true,false;workedunder(K, A).;false;false
8;false;movie(G, A).;true;true
8;false,true;movie(G, H), workedunder(H, I).;true;true
8;false,true,true;workedunder(H, A).;false;false
8;false,false,true;workedunder(L, N).;false;false
8;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
8;false,false;workedunder(L, A), movie(M, A).;true;true
9;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true
9;true;movie(D, C).;false;false
9;false;workedunder(E, A), workedunder(E, F).;false;true
9;false,false,true;movie(N, M), movie(N, A).;false;false
9;false,false,false;movie(P, A).;false;false
9;false,false;workedunder(M, A).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), movie(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, A), workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), movie(F, A) )
%   | then if ( movie(F, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then if ( movie(H, G), workedunder(G, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( movie(E, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( movie(E, F), workedunder(F, G) )
%   | | then if ( workedunder(F, A) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then if ( movie(D, C) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.301095
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 1.54 seconds
Total inference time: 1.399 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'movie(I, A), workedunder(J, A)', 'false,false': 'workedunder(G, A), movie(H, A)'}, {'true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,true': 'movie(F, E)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'false,false,false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,false,true': 'movie(H, G), workedunder(G, I)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false,false': 'workedunder(J, A)', 'false,false': 'workedunder(G, A)'}, {'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'true,true': 'workedunder(A, D), movie(E, C)', 'false,false': 'movie(G, A)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'true': 'movie(E, D)', 'false': 'workedunder(F, A), movie(G, F)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 2, 0], 'true,true': [0.0, 0, 2], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false,true,true': 'workedunder(F, A)', 'false': 'movie(E, A)', 'false,true': 'movie(E, F), workedunder(F, G)'}, {'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 2], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'true': 'movie(D, C)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}]]
[{'': [0.25, nan], 'true': [0.0, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.11145008534151418, nan], 'true': [0.0, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [nan, 0.04272553559876201], 'false,false,false': [0.0, nan], 'false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,true': [0.0, nan]}, {'': [nan, 0.028960720834012167], 'false,false,true': [0.0, nan], 'false': [nan, 0.028960720834012167], 'false,false,false': [nan, 0.0], 'false,false': [0.0, 0.0]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'true,true': [nan, 0.0], 'false,false': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0]}, {'': [nan, 0.01222913466736446], 'false,true,true': [0.0, 0.0], 'false': [0.01222913466736446, nan], 'false,true': [0.01222913466736446, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '3;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '4;;genre(A, B) :- workedunder(E, A), movie(F, A).;true;true', '5;;genre(A, B) :- workedunder(G, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(F, A).;true;true', '9;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.301095
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 1.944 seconds
Total inference time: 1.245 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 05:12:54
{'CLL': -0.301095, 'Recall': 1.0, 'F1': 0.909091, 'parameter': {'CLL': -0.301095, 'Recall': 1.0, 'F1': 0.909091, 'AUC ROC': 0.9, 'Inference time': 1.399, 'Learning time': 1.54, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333}, 'AUC ROC': 0.9, 'Inference time': 1.245, 'Mapping results': {'Knowledge compiling time': 0.03794264793395996, 'Generating paths time': 4.364662408828735, 'Possible mappings': [433], 'Max mapping': 4096, 'Finding best mapping': 1.9073486328125e-06, 'Generating mappings time': 0.42859578132629395, 'Numbers preds mapping': [7], 'Total time': 4.8312132358551025}, 'Learning time': 3.484, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.645 seconds
Total inference time: 1.127 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 05:12:57
{'CLL': -1.052978, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.5, 'Inference time': 1.127, 'Learning time': 1.645, 'Precision': [nan, 0.5], 'AUC PR': 0.5}


WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.664 seconds
Total inference time: 1.31 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 05:13:00
{'CLL': -1.052978, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.5, 'Inference time': 1.31, 'Learning time': 0.664, 'Precision': [nan, 0.5], 'AUC PR': 0.5}


