Starting experiment #11 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( tempadvisedby(A, G), publication(E, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3581489350995123;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, J, L), ta(M, A, N) )
%   | | | then return 0.4735335504841277;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.36389606153629317;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, P), projectmember(Q, P) )
%   | | then return 0.24276431971489695;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, R) )
%   | | | then return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.3470378239884017;  // std dev = 4,742, 90,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=44 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.2431522573300012;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then return 0.3547765852918454;  // std dev = 0,496, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | else return 0.26263828416975843;  // std dev = 0,497, 51,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   else if ( advisedby(A, I), publication(J, I) )
%   | then if ( tempadvisedby(K, I), publication(L, A) )
%   | | then if ( publication(L, K) )
%   | | | then return 0.14118393216516253;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3250919781421736;  // std dev = 2,691, 29,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else return 0.3769606593804927;  // std dev = 0,494, 47,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=27 */
%   | else if ( advisedby(A, M), projectmember(N, M) )
%   | | then return 0.2105717177991725;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, P) )
%   | | | then return 0.41779418357704884;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.3104538971777386;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( advisedby(A, F) )
%   | then return 0.20416130465148977;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else return 0.2683081656353682;  // std dev = 0,496, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( publication(G, A), advisedby(A, H) )
%   | then if ( tempadvisedby(I, H) )
%   | | then if ( publication(G, I) )
%   | | | then return 0.11831212036507505;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.27247117461827397;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.3832383738004729;  // std dev = 0,477, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, J) )
%   | | then if ( tempadvisedby(K, J), publication(L, K) )
%   | | | then return 0.18877298877048498;  // std dev = 2,267, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3163244345513004;  // std dev = 3,401, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( advisedby(A, M), publication(N, M) )
%   | | | then return 0.269828465656574;  // std dev = 4,189, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.18274423304524257;  // std dev = 3,023, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then if ( sameperson(A, E) )
%   | | then if ( tempadvisedby(G, F) )
%   | | | then return 0.19799194940314788;  // std dev = 3,908, 62,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   | | | else return 0.1447637253369033;  // std dev = 2,088, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0.49081707884991993;  // std dev = 0,891, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( ta(C, H, I), advisedby(H, J) )
%   | | then return 0.14919443317947623;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( tempadvisedby(A, K), publication(L, K) )
%   | | | then return 0.2746184007444962;  // std dev = 1,474, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10862042763298982;  // std dev = 1,097, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( tempadvisedby(A, M), publication(N, A) )
%   | then return 0.1504371828042899;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( tempadvisedby(A, P) )
%   | | then return 0.2650220201063431;  // std dev = 0,494, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else return 0.21400432161218055;  // std dev = 0,495, 112,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=58 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), publication(D, A) )
%   then return 0.10583532628184328;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else if ( ta(E, A, F) )
%   | then if ( ta(E, G, H), advisedby(G, I) )
%   | | then if ( tempadvisedby(J, I), publication(K, J) )
%   | | | then return 0.06518993760320864;  // std dev = 2,479, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.16940034546560057;  // std dev = 4,788, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | | else if ( tempadvisedby(A, L), publication(M, L) )
%   | | | then return 0.3121813556217598;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08569741457392441;  // std dev = 1,097, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tempadvisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, P) )
%   | | | then return 0.11012507058996995;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.2617213213365426;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( advisedby(A, R) )
%   | | | then return 0.17587586865046473;  // std dev = 4,941, 100,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=53 */
%   | | | else return 0.09492072984532812;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then if ( advisedby(A, E), publication(F, E) )
%   | then return 0.5970474282004544;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(G, A) )
%   | | then return 0.1647005438187319;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( advisedby(H, C), publication(I, H) )
%   | | | then return 0.017727411999963565;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.017727411999963583;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( tempadvisedby(A, J), projectmember(K, J) )
%   | then return 0.2273238146804139;  // std dev = 1,032, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(L, A), ta(M, A, N) )
%   | | then if ( publication(L, P), tempadvisedby(Q, P) )
%   | | | then return 0.0778730633210096;  // std dev = 3,072, 39,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.15248366749897607;  // std dev = 1,539, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( publication(R, A), advisedby(A, S) )
%   | | | then return 0.14965479389281913;  // std dev = 3,448, 49,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=27 */
%   | | | else return 0.11865400954627993;  // std dev = 6,282, 161,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=81 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( publication(C, A), tempadvisedby(A, D) )
%   then if ( publication(C, D) )
%   | then return 0.019263299305084795;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.1320246000204729;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( tempadvisedby(A, E) )
%   | then if ( tempadvisedby(F, E), publication(G, F) )
%   | | then if ( publication(G, E) )
%   | | | then return 0.07198925803627941;  // std dev = 1,653, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.029219285554683932;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.12875260170729458;  // std dev = 0,487, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | else if ( advisedby(A, H), publication(I, H) )
%   | | then if ( advisedby(J, H), publication(I, J) )
%   | | | then return 0.08915215765922768;  // std dev = 5,723, 133,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=66 */
%   | | | else return 0.15909001071653078;  // std dev = 2,146, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.1200957311864495;  // std dev = 2,140, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.04623017720225985;  // std dev = 2,838, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then return 0.10390184334874633;  // std dev = 0,460, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( ta(E, A, F) )
%   | then if ( publication(G, A), advisedby(A, H) )
%   | | then if ( tempadvisedby(I, H), publication(J, H) )
%   | | | then return 0.06792639194471031;  // std dev = 2,711, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return -0.04693677052893426;  // std dev = 1,415, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( ta(E, K, L), publication(M, K) )
%   | | | then return 0.10146929973830565;  // std dev = 3,302, 46,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | | | else return 0.032778958613355204;  // std dev = 3,458, 49,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | else if ( publication(N, A), advisedby(A, P) )
%   | | then if ( publication(N, P) )
%   | | | then return 0.07033149041587815;  // std dev = 3,219, 42,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   | | | else return 0.21234642361311407;  // std dev = 1,177, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( tempadvisedby(A, Q) )
%   | | | then return 0.09201576314992645;  // std dev = 2,779, 32,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.06421323826962409;  // std dev = 3,481, 49,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then return 0.07982685907475633;  // std dev = 0,459, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( ta(E, A, F) )
%   | then if ( ta(E, G, H), publication(I, G) )
%   | | then if ( tempadvisedby(A, J), publication(I, J) )
%   | | | then return -0.04705301362475106;  // std dev = 1,366, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.06688198784836505;  // std dev = 4,288, 77,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=37 */
%   | | else if ( ta(E, K, L), advisedby(K, M) )
%   | | | then return 0.012811677668874356;  // std dev = 3,132, 40,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.07777452961576081;  // std dev = 1,455, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( advisedby(A, N), publication(P, A) )
%   | | then if ( advisedby(Q, N), ta(R, Q, S) )
%   | | | then return 0.08621217383902358;  // std dev = 3,129, 41,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return -0.024226272803676563;  // std dev = 1,393, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( advisedby(A, T), tempadvisedby(U, T) )
%   | | | then return 0.07715031540426524;  // std dev = 2,336, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.04911389560534742;  // std dev = 3,792, 59,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C) )
%   then if ( tempadvisedby(D, C), publication(E, D) )
%   | then if ( ta(F, D, G) )
%   | | then return -0.014521406143866766;  // std dev = 0,488, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( sameperson(A, D), publication(E, C) )
%   | | | then return 0.0031041058418693757;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06620305901090691;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.0713177067279199;  // std dev = 0,485, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, J, L) )
%   | | | then return 0.056538715945454794;  // std dev = 4,451, 81,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=41 */
%   | | | else return 0.0052169737246108485;  // std dev = 3,565, 52,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | | else return 0.08634553233686793;  // std dev = 0,465, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | else if ( advisedby(A, M), tempadvisedby(N, M) )
%   | | then return -0.009465358825110876;  // std dev = 0,485, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.044288758737539236;  // std dev = 0,489, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */


Predicates from source: ['inphase(person,prequals).', 'tempadvisedby(person,person).', 'ta(course,person,quarter).', 'advisedby(person,person).', 'sameperson(person,person).', 'publication(title,person).', 'projectmember(project,person).']

Starting fold 1

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.03134274482727051
   Generating paths time   = 3.4076499938964844
   Generating mappings time   = 0.35565638542175293
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 3.794661045074463


Best mapping found: ['sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false;workedunder(H, A), movie(I, H).;true;true
0;true;workedunder(F, A), movie(E, F).;false;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,false;workedunder(P, A), workedunder(Q, P).;false;true
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;false,false,false;workedunder(R, A).;false;false
1;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true,true;movie(L, K).;false;false
1;false,false;workedunder(M, A), workedunder(N, M).;false;true
1;false,true;workedunder(I, K), movie(L, A).;true;false
1;false,false,false;workedunder(P, A).;false;false
2;;genre(A, B) :- movie(C, A).;true;true
2;true;workedunder(F, A).;false;false
2;false,false,true;workedunder(J, K), movie(L, K).;false;false
2;false;movie(G, A), workedunder(H, A).;true;true
2;false,true,true;movie(G, I).;false;false
2;false,false;workedunder(J, A).;true;true
2;false,true;workedunder(H, I).;true;false
2;false,false,false;workedunder(M, A), movie(N, M).;false;false
3;;genre(A, B) :- workedunder(F, E).;true;true
3;false;workedunder(M, A), movie(N, A).;false;true
3;true,true;workedunder(F, G).;false;false
3;true;workedunder(A, E).;true;true
3;true,false,false;workedunder(K, A), movie(L, K).;false;false
3;true,false;workedunder(J, H).;false;true
3;false,false;workedunder(P, A).;false;false
4;;genre(A, B) :- workedunder(C, A), movie(D, A).;false;true
4;false,false,true;workedunder(N, P), movie(Q, P).;false;false
4;false;workedunder(I, G).;true;true
4;false,true,false;workedunder(L, A), movie(M, L).;false;false
4;false,false;workedunder(N, A).;true;true
4;false,true;workedunder(I, J), movie(K, J).;false;true
4;false,false,false;workedunder(R, A).;false;false
5;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;true;true
5;false;workedunder(J, A), workedunder(K, J).;false;true
5;true;workedunder(E, A), movie(F, E).;false;true
5;false,false,true;movie(L, P), workedunder(P, Q).;false;false
5;true,false,false;workedunder(C, H), movie(I, H).;false;false
5;true,false;movie(G, A).;false;true
5;false,false;movie(L, A).;true;true
5;false,false,false;movie(R, A), workedunder(S, A).;false;false
6;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true
6;true;movie(C, D).;false;false
6;false,false,true;workedunder(H, J), movie(I, J).;false;false
6;false;workedunder(E, A).;true;true
6;false,true,true;movie(G, E).;false;false
6;false,false;workedunder(H, A), movie(I, H).;true;true
6;false,true;workedunder(E, F), movie(G, F).;true;false
6;false,false,false;movie(K, A).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
7;false,false,true;movie(N, P).;false;false
7;false;movie(G, A), workedunder(H, A).;true;true
7;false,true,false;movie(M, K).;false;false
7;false,false;movie(N, A), workedunder(P, A).;true;true
7;false,true;workedunder(H, I), movie(J, H).;false;true
7;false,false,false;workedunder(Q, A).;false;false
8;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
8;false,false,true;workedunder(N, Q).;false;false
8;false;movie(I, G).;true;true
8;false,true,false;workedunder(M, K).;false;false
8;false,false;workedunder(N, A), movie(P, A).;true;true
8;false,true;workedunder(J, A), movie(I, J).;false;true
8;false,false,false;workedunder(T, A), workedunder(T, U).;false;false
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true;workedunder(A, D), movie(E, C).;false;false
9;true;workedunder(C, D), movie(E, D).;true;false
9;false;workedunder(H, A), movie(I, H).;true;true
9;false,false;workedunder(M, A), workedunder(M, N).;false;false
9;false,true;workedunder(H, J), movie(I, J).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, D) )
%   | then if ( workedunder(C, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, G) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, G), movie(H, G) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H), workedunder(H, I) )
%   | | | then return 0.0849937455905463;  // std dev = 0,798, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then if ( movie(C, D) )
%   | then return 0.23935700108516403;  // std dev = 2,58e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), movie(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.0920459433977766;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), workedunder(F, A) )
%   | then if ( workedunder(F, G), movie(H, F) )
%   | | then return 0.19852082828804782;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(I, A), workedunder(J, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08463679078745934;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, F) )
%   | then if ( workedunder(G, A), movie(E, G) )
%   | | then return 0.16880983112775336;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( workedunder(H, I) )
%   | | | then return -0.07830602720680804;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14642805445214568;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07283771686569031;  // std dev = 5,89e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.351463
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.905 seconds
Total inference time: 2.284 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A), movie(C, E)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [0.0, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false': 'workedunder(G, A), workedunder(H, G)', 'false,false,false': 'workedunder(I, A)'}, {'false,false,false,false': [5.27e-09, 11, 0], 'true': [4.21e-08, 0, 11], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)'}, {'true,false': [7.45e-09, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 11]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,false': 'workedunder(F, G)', 'true,true': 'workedunder(C, E)', 'true': 'workedunder(A, D)'}, {'true,true,true': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [4.21e-08, 0, 11], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(E, G), movie(H, G)'}, {'false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 11], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false': 'movie(G, A)', 'false,false,true': 'movie(G, H), workedunder(H, I)'}, {'false,false,true,true': [0.798, 11, 11], 'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A)', 'true': 'movie(C, D)', 'false,false': 'workedunder(F, A), movie(G, F)', 'false,false,false': 'movie(H, A)'}, {'false,false,false,false': [0.0, 0, 0], 'true,true': [2.58e-08, 0, 11], 'false,false,false,true': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'movie(E, A), workedunder(F, A)', 'false,false': 'movie(I, A), workedunder(J, A)', 'false,true': 'workedunder(F, G), movie(H, F)', 'false,false,false': 'workedunder(K, A)'}, {'false,false,false,false': [0.0, 11, 0], 'true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.49e-08, 0, 11], 'false,false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'movie(E, F)', 'false,true': 'workedunder(G, A), movie(E, G)', 'false,true,false': 'workedunder(H, I)'}, {'false,true,false,true': [5.27e-09, 11, 0], 'true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [1.49e-08, 0, 11], 'false,true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true,true': 'workedunder(A, D), movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false,false': 'workedunder(H, A), workedunder(H, I)'}, {'true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 11], 'false,true': [0.0, 0, 0], 'false,false,false': [5.89e-09, 11, 0]}]]
[{'': [0.24999999999999958, nan], 'true,false': [nan, -1.0092936587501423e-17], 'true': [-1.6148698540002277e-16, -1.0092936587501423e-17]}, {'': [1.6148698540002277e-16, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18], 'false,false,false': [nan, 2.523234146875356e-18]}, {'': [0.11145008534151403, nan], 'true': [-2.0185873175002846e-16, 5.046468293750712e-18]}, {'': [0.06736877561142736, nan], 'true,false': [1.6148698540002277e-16, nan], 'true,true': [0.0, nan], 'true': [0.0, 1.6148698540002277e-16]}, {'': [-6.055761952500853e-17, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan]}, {'': [nan, 0.028960720834012174], 'false': [nan, 0.028960720834012174], 'false,false': [0.028960720834012178, nan], 'false,false,true': [0.028960720834012178, nan]}, {'': [6.055761952500853e-17, -3.784851220313033e-18], 'false': [nan, -3.784851220313033e-18], 'true': [6.055761952500853e-17, nan], 'false,false': [nan, -3.784851220313033e-18], 'false,false,false': [-3.784851220313033e-18, nan]}, {'': [nan, 0.020044559310127514], 'false': [2.0185873175002847e-17, -1.261617073437678e-18], 'false,false': [nan, -1.261617073437678e-18], 'false,true': [2.0185873175002847e-17, nan], 'false,false,false': [nan, -1.261617073437678e-18]}, {'': [nan, 0.015266561860106765], 'false': [0.015266561860106763, nan], 'false,true': [2.0185873175002847e-17, 2.523234146875356e-18], 'false,true,false': [2.523234146875356e-18, nan]}, {'': [-5.046468293750712e-18, 3.1540426835941946e-18], 'false': [nan, 3.1540426835941946e-18], 'true,true': [nan, -5.046468293750712e-18], 'true': [-5.046468293750712e-18, nan], 'false,false': [nan, 3.1540426835941946e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(A, D).;true;true', '4;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '6;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '7;;genre(A, B) :- movie(E, A), workedunder(F, A).;true;true', '8;;genre(A, B) :- workedunder(G, A), movie(E, G).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.404 seconds
Total inference time: 1.035 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:16:28
{'Recall': 1.0, 'F1': 0.888889, 'AUC PR': 0.8, 'Learning time': 3.309, 'AUC ROC': 0.875, 'Inference time': 1.035, 'Precision': [0.8, 0.5], 'Mapping results': {'Generating mappings time': 0.35565638542175293, 'Possible mappings': [433], 'Generating paths time': 3.4076499938964844, 'Total time': 3.794661045074463, 'Numbers preds mapping': [7], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 4096, 'Knowledge compiling time': 0.03134274482727051}, 'parameter': {'Recall': 1.0, 'F1': 0.888889, 'AUC PR': 0.8, 'Learning time': 1.905, 'AUC ROC': 0.875, 'Inference time': 2.284, 'Precision': [0.8, 0.5], 'CLL': -0.351463}, 'CLL': -0.352709}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.758 seconds
Total inference time: 1.322 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 03:16:32
{'Recall': 1.0, 'F1': 0.888889, 'AUC PR': 0.8, 'Learning time': 1.758, 'AUC ROC': 0.875, 'Inference time': 1.322, 'Precision': [0.8, 0.5], 'CLL': -0.352709}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.726963
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.822 seconds
Total inference time: 0.651 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 03:16:33
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.8, 'Learning time': 0.822, 'AUC ROC': 0.875, 'Inference time': 0.651, 'Precision': [nan, 0.5], 'CLL': -0.726963}


Starting fold 2

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.017397165298461914
   Generating paths time   = 3.2506964206695557
   Generating mappings time   = 0.2845771312713623
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 3.552680253982544


Best mapping found: ['sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false;workedunder(H, A), movie(I, H).;true;true
0;true;workedunder(F, A), movie(E, F).;false;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,false;workedunder(P, A), workedunder(Q, P).;false;true
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;false,false,false;workedunder(R, A).;false;false
1;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true,true;movie(L, K).;false;false
1;false,false;workedunder(M, A), workedunder(N, M).;false;true
1;false,true;workedunder(I, K), movie(L, A).;true;false
1;false,false,false;workedunder(P, A).;false;false
2;;genre(A, B) :- movie(C, A).;true;true
2;true;workedunder(F, A).;false;false
2;false,false,true;workedunder(J, K), movie(L, K).;false;false
2;false;movie(G, A), workedunder(H, A).;true;true
2;false,true,true;movie(G, I).;false;false
2;false,false;workedunder(J, A).;true;true
2;false,true;workedunder(H, I).;true;false
2;false,false,false;workedunder(M, A), movie(N, M).;false;false
3;;genre(A, B) :- workedunder(F, E).;true;true
3;false;workedunder(M, A), movie(N, A).;false;true
3;true,true;workedunder(F, G).;false;false
3;true;workedunder(A, E).;true;true
3;true,false,false;workedunder(K, A), movie(L, K).;false;false
3;true,false;workedunder(J, H).;false;true
3;false,false;workedunder(P, A).;false;false
4;;genre(A, B) :- workedunder(C, A), movie(D, A).;false;true
4;false,false,true;workedunder(N, P), movie(Q, P).;false;false
4;false;workedunder(I, G).;true;true
4;false,true,false;workedunder(L, A), movie(M, L).;false;false
4;false,false;workedunder(N, A).;true;true
4;false,true;workedunder(I, J), movie(K, J).;false;true
4;false,false,false;workedunder(R, A).;false;false
5;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;true;true
5;false;workedunder(J, A), workedunder(K, J).;false;true
5;true;workedunder(E, A), movie(F, E).;false;true
5;false,false,true;movie(L, P), workedunder(P, Q).;false;false
5;true,false,false;workedunder(C, H), movie(I, H).;false;false
5;true,false;movie(G, A).;false;true
5;false,false;movie(L, A).;true;true
5;false,false,false;movie(R, A), workedunder(S, A).;false;false
6;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true
6;true;movie(C, D).;false;false
6;false,false,true;workedunder(H, J), movie(I, J).;false;false
6;false;workedunder(E, A).;true;true
6;false,true,true;movie(G, E).;false;false
6;false,false;workedunder(H, A), movie(I, H).;true;true
6;false,true;workedunder(E, F), movie(G, F).;true;false
6;false,false,false;movie(K, A).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
7;false,false,true;movie(N, P).;false;false
7;false;movie(G, A), workedunder(H, A).;true;true
7;false,true,false;movie(M, K).;false;false
7;false,false;movie(N, A), workedunder(P, A).;true;true
7;false,true;workedunder(H, I), movie(J, H).;false;true
7;false,false,false;workedunder(Q, A).;false;false
8;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
8;false,false,true;workedunder(N, Q).;false;false
8;false;movie(I, G).;true;true
8;false,true,false;workedunder(M, K).;false;false
8;false,false;workedunder(N, A), movie(P, A).;true;true
8;false,true;workedunder(J, A), movie(I, J).;false;true
8;false,false,false;workedunder(T, A), workedunder(T, U).;false;false
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true;workedunder(A, D), movie(E, C).;false;false
9;true;workedunder(C, D), movie(E, D).;true;false
9;false;workedunder(H, A), movie(I, H).;true;true
9;false,false;workedunder(M, A), workedunder(M, N).;false;false
9;false,true;workedunder(H, J), movie(I, J).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.5123505661168763;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, D) )
%   | then if ( workedunder(C, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, G) )
%   | | then return 0.3853022650638632;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.2920349799096258;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, G), movie(H, G) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H), workedunder(H, I) )
%   | | | then return 0.08391087641099375;  // std dev = 1,226, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then if ( movie(C, D) )
%   | then return 0.20953781621100837;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), movie(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.0919554842138842;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), workedunder(F, A) )
%   | then if ( workedunder(F, G), movie(H, F) )
%   | | then return 0.16868535375783297;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(I, A), workedunder(J, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08455993709271782;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, F) )
%   | then if ( workedunder(G, A), movie(E, G) )
%   | | then return 0.13878447841363067;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( workedunder(H, I) )
%   | | | then return -0.07823997317641573;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11623125909741781;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07278036876592021;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.322522
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.92 seconds
Total inference time: 1.682 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A), movie(C, E)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [0.961, 1, 12], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false': 'workedunder(G, A), workedunder(H, G)', 'false,false,false': 'workedunder(I, A)'}, {'false,false,false,false': [5.27e-09, 11, 0], 'true': [0.961, 1, 12], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)'}, {'true,false': [7.45e-09, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,false': 'workedunder(F, G)', 'true,true': 'workedunder(C, E)', 'true': 'workedunder(A, D)'}, {'true,true,true': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.961, 1, 12], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(E, G), movie(H, G)'}, {'false,true,false': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false': 'movie(G, A)', 'false,false,true': 'movie(G, H), workedunder(H, I)'}, {'false,false,true,true': [1.226, 12, 12], 'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A)', 'true': 'movie(C, D)', 'false,false': 'workedunder(F, A), movie(G, F)', 'false,false,false': 'movie(H, A)'}, {'false,false,false,false': [0.0, 0, 0], 'true,true': [0.961, 1, 12], 'false,false,false,true': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'movie(E, A), workedunder(F, A)', 'false,false': 'movie(I, A), workedunder(J, A)', 'false,true': 'workedunder(F, G), movie(H, F)', 'false,false,false': 'workedunder(K, A)'}, {'false,false,false,false': [6.45e-09, 11, 0], 'true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.961, 1, 12], 'false,false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'movie(E, F)', 'false,true': 'workedunder(G, A), movie(E, G)', 'false,true,false': 'workedunder(H, I)'}, {'false,true,false,true': [3.73e-09, 11, 0], 'true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.961, 1, 12], 'false,true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true,true': 'workedunder(A, D), movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false,false': 'workedunder(H, A), workedunder(H, I)'}, {'true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0], 'false,false,false': [3.73e-09, 11, 0]}]]
[{'': [0.24999999999999956, nan], 'true,false': [nan, -1.0092936587501423e-17], 'true': [0.07100591715976314, -1.0092936587501423e-17]}, {'': [0.07100591715976333, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18], 'false,false,false': [nan, 2.523234146875356e-18]}, {'': [0.13533629047183346, nan], 'true': [0.07100591715976351, 5.046468293750712e-18]}, {'': [0.09731751852547608, nan], 'true,false': [0.0710059171597632, nan], 'true,true': [0.0, nan], 'true': [0.0, 0.0710059171597632]}, {'': [0.07100591715976336, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan]}, {'': [nan, 0.06265589574996693], 'false': [nan, 0.06265589574996693], 'false,false': [0.06265589574996693, nan], 'false,false,true': [0.06265589574996693, nan]}, {'': [0.07100591715976332, 0.0], 'false': [nan, 0.0], 'true': [0.07100591715976332, nan], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.05438349047426617], 'false': [0.07100591715976336, 3.784851220313033e-18], 'false,false': [nan, 3.784851220313033e-18], 'false,true': [0.07100591715976336, nan], 'false,false,false': [nan, 3.784851220313033e-18]}, {'': [nan, 0.05015467144778557], 'false': [0.0501546714477856, nan], 'false,true': [0.07100591715976332, 1.261617073437678e-18], 'false,true,false': [1.261617073437678e-18, nan]}, {'': [0.07100591715976332, 1.261617073437678e-18], 'false': [nan, 1.261617073437678e-18], 'true,true': [nan, 0.07100591715976332], 'true': [0.07100591715976332, nan], 'false,false': [nan, 1.261617073437678e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(A, D).;true;true', '4;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '6;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '7;;genre(A, B) :- movie(E, A), workedunder(F, A).;true;true', '8;;genre(A, B) :- workedunder(G, A), movie(E, G).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 2.729 seconds
Total inference time: 1.299 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:16:46
{'Recall': 1.0, 'F1': 0.897436, 'AUC PR': 0.813953, 'Learning time': 4.649, 'AUC ROC': 0.885714, 'Inference time': 1.299, 'Precision': [0.813953, 0.5], 'Mapping results': {'Generating mappings time': 0.2845771312713623, 'Possible mappings': [433], 'Generating paths time': 3.2506964206695557, 'Total time': 3.552680253982544, 'Numbers preds mapping': [7], 'Finding best mapping': 1.430511474609375e-06, 'Max mapping': 4096, 'Knowledge compiling time': 0.017397165298461914}, 'parameter': {'Recall': 1.0, 'F1': 0.897436, 'AUC PR': 0.813953, 'Learning time': 1.92, 'AUC ROC': 0.885714, 'Inference time': 1.682, 'Precision': [0.813953, 0.5], 'CLL': -0.322522}, 'CLL': -0.320018}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 4.677 seconds
Total inference time: 0.635 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 03:16:51
{'Recall': 1.0, 'F1': 0.897436, 'AUC PR': 0.813953, 'Learning time': 4.677, 'AUC ROC': 0.885714, 'Inference time': 0.635, 'Precision': [0.813953, 0.5], 'CLL': -0.320018}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.75044
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.341 seconds
Total inference time: 0.807 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 03:16:54
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.813953, 'Learning time': 1.341, 'AUC ROC': 0.885714, 'Inference time': 0.807, 'Precision': [nan, 0.5], 'CLL': -0.75044}


Starting fold 3

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.030716896057128906
   Generating paths time   = 2.589648723602295
   Generating mappings time   = 0.2623720169067383
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 2.8827459812164307


Best mapping found: ['sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false;workedunder(H, A), movie(I, H).;true;true
0;true;workedunder(F, A), movie(E, F).;false;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,false;workedunder(P, A), workedunder(Q, P).;false;true
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;false,false,false;workedunder(R, A).;false;false
1;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true,true;movie(L, K).;false;false
1;false,false;workedunder(M, A), workedunder(N, M).;false;true
1;false,true;workedunder(I, K), movie(L, A).;true;false
1;false,false,false;workedunder(P, A).;false;false
2;;genre(A, B) :- movie(C, A).;true;true
2;true;workedunder(F, A).;false;false
2;false,false,true;workedunder(J, K), movie(L, K).;false;false
2;false;movie(G, A), workedunder(H, A).;true;true
2;false,true,true;movie(G, I).;false;false
2;false,false;workedunder(J, A).;true;true
2;false,true;workedunder(H, I).;true;false
2;false,false,false;workedunder(M, A), movie(N, M).;false;false
3;;genre(A, B) :- workedunder(F, E).;true;true
3;false;workedunder(M, A), movie(N, A).;false;true
3;true,true;workedunder(F, G).;false;false
3;true;workedunder(A, E).;true;true
3;true,false,false;workedunder(K, A), movie(L, K).;false;false
3;true,false;workedunder(J, H).;false;true
3;false,false;workedunder(P, A).;false;false
4;;genre(A, B) :- workedunder(C, A), movie(D, A).;false;true
4;false,false,true;workedunder(N, P), movie(Q, P).;false;false
4;false;workedunder(I, G).;true;true
4;false,true,false;workedunder(L, A), movie(M, L).;false;false
4;false,false;workedunder(N, A).;true;true
4;false,true;workedunder(I, J), movie(K, J).;false;true
4;false,false,false;workedunder(R, A).;false;false
5;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;true;true
5;false;workedunder(J, A), workedunder(K, J).;false;true
5;true;workedunder(E, A), movie(F, E).;false;true
5;false,false,true;movie(L, P), workedunder(P, Q).;false;false
5;true,false,false;workedunder(C, H), movie(I, H).;false;false
5;true,false;movie(G, A).;false;true
5;false,false;movie(L, A).;true;true
5;false,false,false;movie(R, A), workedunder(S, A).;false;false
6;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true
6;true;movie(C, D).;false;false
6;false,false,true;workedunder(H, J), movie(I, J).;false;false
6;false;workedunder(E, A).;true;true
6;false,true,true;movie(G, E).;false;false
6;false,false;workedunder(H, A), movie(I, H).;true;true
6;false,true;workedunder(E, F), movie(G, F).;true;false
6;false,false,false;movie(K, A).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
7;false,false,true;movie(N, P).;false;false
7;false;movie(G, A), workedunder(H, A).;true;true
7;false,true,false;movie(M, K).;false;false
7;false,false;movie(N, A), workedunder(P, A).;true;true
7;false,true;workedunder(H, I), movie(J, H).;false;true
7;false,false,false;workedunder(Q, A).;false;false
8;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
8;false,false,true;workedunder(N, Q).;false;false
8;false;movie(I, G).;true;true
8;false,true,false;workedunder(M, K).;false;false
8;false,false;workedunder(N, A), movie(P, A).;true;true
8;false,true;workedunder(J, A), movie(I, J).;false;true
8;false,false,false;workedunder(T, A), workedunder(T, U).;false;false
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true;workedunder(A, D), movie(E, C).;false;false
9;true;workedunder(C, D), movie(E, D).;true;false
9;false;workedunder(H, A), movie(I, H).;true;true
9;false,false;workedunder(M, A), workedunder(M, N).;false;false
9;false,true;workedunder(H, J), movie(I, J).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.49238913840392534;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.39468718495146987;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, D) )
%   | then if ( workedunder(C, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, G) )
%   | | then return 0.3029206894518932;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.2279628397230807;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, G), movie(H, G) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H), workedunder(H, I) )
%   | | | then return 0.09281113695383897;  // std dev = 2,354, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then if ( movie(C, D) )
%   | then return 0.14826830795057272;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), movie(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.09270135692417089;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), workedunder(F, A) )
%   | then if ( workedunder(F, G), movie(H, F) )
%   | | then return 0.11241116071955215;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(I, A), workedunder(J, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08519330675011703;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, F) )
%   | then if ( workedunder(G, A), movie(E, G) )
%   | | then return 0.08595735780965401;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else if ( workedunder(H, I) )
%   | | | then return -0.07878410101743259;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.06625163134300038;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07325259859736293;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.272375
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 3.961 seconds
Total inference time: 1.553 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A), movie(C, E)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [2.245, 7, 18], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false': 'workedunder(G, A), workedunder(H, G)', 'false,false,false': 'workedunder(I, A)'}, {'false,false,false,false': [5.27e-09, 11, 0], 'true': [2.245, 7, 18], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)'}, {'true,false': [7.45e-09, 11, 0], 'false': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,false': 'workedunder(F, G)', 'true,true': 'workedunder(C, E)', 'true': 'workedunder(A, D)'}, {'true,true,true': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.245, 7, 18], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(E, G), movie(H, G)'}, {'false,true,false': [0.0, 0, 0], 'true': [2.245, 7, 18], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false': 'movie(G, A)', 'false,false,true': 'movie(G, H), workedunder(H, I)'}, {'false,false,true,true': [2.354, 18, 18], 'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A)', 'true': 'movie(C, D)', 'false,false': 'workedunder(F, A), movie(G, F)', 'false,false,false': 'movie(H, A)'}, {'false,false,false,false': [0.0, 0, 0], 'true,true': [2.245, 7, 18], 'false,false,false,true': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'movie(E, A), workedunder(F, A)', 'false,false': 'movie(I, A), workedunder(J, A)', 'false,true': 'workedunder(F, G), movie(H, F)', 'false,false,false': 'workedunder(K, A)'}, {'false,false,false,false': [0.0, 11, 0], 'true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [2.245, 7, 18], 'false,false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'movie(E, F)', 'false,true': 'workedunder(G, A), movie(E, G)', 'false,true,false': 'workedunder(H, I)'}, {'false,true,false,true': [0.0, 11, 0], 'true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [2.245, 7, 18], 'false,true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true,true': 'workedunder(A, D), movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false,false': 'workedunder(H, A), workedunder(H, I)'}, {'true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0], 'false,false,false': [3.73e-09, 11, 0]}]]
[{'': [0.2499999999999995, nan], 'true,false': [nan, -1.0092936587501423e-17], 'true': [0.2015999999999996, -1.0092936587501423e-17]}, {'': [0.2016000000000001, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18], 'false,false,false': [nan, 2.523234146875356e-18]}, {'': [0.1945443430451362, nan], 'true': [0.20160000000000053, 5.046468293750712e-18]}, {'': [0.1747217246282939, nan], 'true,false': [0.2016000000000004, nan], 'true,true': [0.0, nan], 'true': [0.0, 0.2016000000000004]}, {'': [0.2016000000000001, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan]}, {'': [nan, 0.15394031595736635], 'false': [nan, 0.15394031595736635], 'false,false': [0.15394031595736635, nan], 'false,false,true': [0.15394031595736635, nan]}, {'': [0.20160000000000003, -2.523234146875356e-18], 'false': [nan, -2.523234146875356e-18], 'true': [0.20160000000000003, nan], 'false,false': [nan, -2.523234146875356e-18], 'false,false,false': [-2.523234146875356e-18, nan]}, {'': [nan, 0.14828554747692302], 'false': [0.20160000000000003, 0.0], 'false,false': [nan, 0.0], 'false,true': [0.20160000000000003, nan], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.14575882003899004], 'false': [0.14575882003899, nan], 'false,true': [0.2016, -1.261617073437678e-18], 'false,true,false': [-1.261617073437678e-18, nan]}, {'': [0.20159999999999992, 1.261617073437678e-18], 'false': [nan, 1.261617073437678e-18], 'true,true': [nan, 0.20159999999999992], 'true': [0.20159999999999992, nan], 'false,false': [nan, 1.261617073437678e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(A, D).;true;true', '4;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '6;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '7;;genre(A, B) :- movie(E, A), workedunder(F, A).;true;true', '8;;genre(A, B) :- workedunder(G, A), movie(E, G).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.939 seconds
Total inference time: 0.851 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:17:06
{'Recall': 1.0, 'F1': 0.966667, 'AUC PR': 0.935484, 'Learning time': 5.9, 'AUC ROC': 0.965517, 'Inference time': 0.851, 'Precision': [0.935484, 0.5], 'Mapping results': {'Generating mappings time': 0.2623720169067383, 'Possible mappings': [433], 'Generating paths time': 2.589648723602295, 'Total time': 2.8827459812164307, 'Numbers preds mapping': [7], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 4096, 'Knowledge compiling time': 0.030716896057128906}, 'parameter': {'Recall': 1.0, 'F1': 0.966667, 'AUC PR': 0.935484, 'Learning time': 3.961, 'AUC ROC': 0.965517, 'Inference time': 1.553, 'Precision': [0.935484, 0.5], 'CLL': -0.272375}, 'CLL': -0.264596}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.852 seconds
Total inference time: 0.644 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 03:17:10
{'Recall': 1.0, 'F1': 0.966667, 'AUC PR': 0.935484, 'Learning time': 2.852, 'AUC ROC': 0.965517, 'Inference time': 0.644, 'Precision': [0.935484, 0.5], 'CLL': -0.264596}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.811362
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.054 seconds
Total inference time: 0.575 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 03:17:12
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.935484, 'Learning time': 1.054, 'AUC ROC': 0.965517, 'Inference time': 0.575, 'Precision': [nan, 0.5], 'CLL': -0.811362}


Starting fold 4

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.016403675079345703
   Generating paths time   = 2.8376874923706055
   Generating mappings time   = 0.22612810134887695
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 3.0802268981933594


Best mapping found: ['sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false;workedunder(H, A), movie(I, H).;true;true
0;true;workedunder(F, A), movie(E, F).;false;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,false;workedunder(P, A), workedunder(Q, P).;false;true
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;false,false,false;workedunder(R, A).;false;false
1;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true,true;movie(L, K).;false;false
1;false,false;workedunder(M, A), workedunder(N, M).;false;true
1;false,true;workedunder(I, K), movie(L, A).;true;false
1;false,false,false;workedunder(P, A).;false;false
2;;genre(A, B) :- movie(C, A).;true;true
2;true;workedunder(F, A).;false;false
2;false,false,true;workedunder(J, K), movie(L, K).;false;false
2;false;movie(G, A), workedunder(H, A).;true;true
2;false,true,true;movie(G, I).;false;false
2;false,false;workedunder(J, A).;true;true
2;false,true;workedunder(H, I).;true;false
2;false,false,false;workedunder(M, A), movie(N, M).;false;false
3;;genre(A, B) :- workedunder(F, E).;true;true
3;false;workedunder(M, A), movie(N, A).;false;true
3;true,true;workedunder(F, G).;false;false
3;true;workedunder(A, E).;true;true
3;true,false,false;workedunder(K, A), movie(L, K).;false;false
3;true,false;workedunder(J, H).;false;true
3;false,false;workedunder(P, A).;false;false
4;;genre(A, B) :- workedunder(C, A), movie(D, A).;false;true
4;false,false,true;workedunder(N, P), movie(Q, P).;false;false
4;false;workedunder(I, G).;true;true
4;false,true,false;workedunder(L, A), movie(M, L).;false;false
4;false,false;workedunder(N, A).;true;true
4;false,true;workedunder(I, J), movie(K, J).;false;true
4;false,false,false;workedunder(R, A).;false;false
5;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;true;true
5;false;workedunder(J, A), workedunder(K, J).;false;true
5;true;workedunder(E, A), movie(F, E).;false;true
5;false,false,true;movie(L, P), workedunder(P, Q).;false;false
5;true,false,false;workedunder(C, H), movie(I, H).;false;false
5;true,false;movie(G, A).;false;true
5;false,false;movie(L, A).;true;true
5;false,false,false;movie(R, A), workedunder(S, A).;false;false
6;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true
6;true;movie(C, D).;false;false
6;false,false,true;workedunder(H, J), movie(I, J).;false;false
6;false;workedunder(E, A).;true;true
6;false,true,true;movie(G, E).;false;false
6;false,false;workedunder(H, A), movie(I, H).;true;true
6;false,true;workedunder(E, F), movie(G, F).;true;false
6;false,false,false;movie(K, A).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
7;false,false,true;movie(N, P).;false;false
7;false;movie(G, A), workedunder(H, A).;true;true
7;false,true,false;movie(M, K).;false;false
7;false,false;movie(N, A), workedunder(P, A).;true;true
7;false,true;workedunder(H, I), movie(J, H).;false;true
7;false,false,false;workedunder(Q, A).;false;false
8;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
8;false,false,true;workedunder(N, Q).;false;false
8;false;movie(I, G).;true;true
8;false,true,false;workedunder(M, K).;false;false
8;false,false;workedunder(N, A), movie(P, A).;true;true
8;false,true;workedunder(J, A), movie(I, J).;false;true
8;false,false,false;workedunder(T, A), workedunder(T, U).;false;false
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true;workedunder(A, D), movie(E, C).;false;false
9;true;workedunder(C, D), movie(E, D).;true;false
9;false;workedunder(H, A), movie(I, H).;true;true
9;false,false;workedunder(M, A), workedunder(M, N).;false;false
9;false,true;workedunder(H, J), movie(I, J).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, D) )
%   | then if ( workedunder(C, E) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, G) )
%   | | then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, G), movie(H, G) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H), workedunder(H, I) )
%   | | | then return 0.08710547468208353;  // std dev = 0,971, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then if ( movie(C, D) )
%   | then return 0.1699568055648703;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), movie(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.0922225800678476;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), workedunder(F, A) )
%   | then if ( workedunder(F, G), movie(H, F) )
%   | | then return 0.13128943076582072;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(I, A), workedunder(J, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08478682953449611;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, F) )
%   | then if ( workedunder(G, A), movie(E, G) )
%   | | then return 0.10287419696914575;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( workedunder(H, I) )
%   | | | then return -0.07843495903450498;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.08160330498622399;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0729496378729847;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.306342
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.594 seconds
Total inference time: 1.729 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A), movie(C, E)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [0.894, 1, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 3, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false': 'workedunder(G, A), workedunder(H, G)', 'false,false,false': 'workedunder(I, A)'}, {'false,false,false,false': [0.0, 3, 0], 'true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)'}, {'true,false': [2.63e-09, 3, 0], 'false': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,false': 'workedunder(F, G)', 'true,true': 'workedunder(C, E)', 'true': 'workedunder(A, D)'}, {'true,true,true': [0.0, 3, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.894, 1, 4], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(E, G), movie(H, G)'}, {'false,true,false': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false': 'movie(G, A)', 'false,false,true': 'movie(G, H), workedunder(H, I)'}, {'false,false,true,true': [0.971, 4, 4], 'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A)', 'true': 'movie(C, D)', 'false,false': 'workedunder(F, A), movie(G, F)', 'false,false,false': 'movie(H, A)'}, {'false,false,false,false': [0.0, 0, 0], 'true,true': [0.894, 1, 4], 'false,false,false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'movie(E, A), workedunder(F, A)', 'false,false': 'movie(I, A), workedunder(J, A)', 'false,true': 'workedunder(F, G), movie(H, F)', 'false,false,false': 'workedunder(K, A)'}, {'false,false,false,false': [1.86e-09, 3, 0], 'true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'movie(E, F)', 'false,true': 'workedunder(G, A), movie(E, G)', 'false,true,false': 'workedunder(H, I)'}, {'false,true,false,true': [0.0, 3, 0], 'true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.894, 1, 4], 'false,true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true,true': 'workedunder(A, D), movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false,false': 'workedunder(H, A), workedunder(H, I)'}, {'true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 3, 0]}]]
[{'': [0.24999999999999986, nan], 'true,false': [nan, 0.0], 'true': [0.15999999999999986, 0.0]}, {'': [0.16, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.17200226808539504, nan], 'true': [0.15999999999999998, 2.3129646346357427e-18]}, {'': [0.14475994169199063, nan], 'true,false': [0.15999999999999998, nan], 'true,true': [-1.1564823173178713e-18, nan], 'true': [-1.1564823173178713e-18, 0.15999999999999998]}, {'': [0.16, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan], 'false,true': [2.3129646346357427e-18, nan]}, {'': [nan, 0.11781035319965033], 'false': [nan, 0.11781035319965033], 'false,false': [0.11781035319965033, nan], 'false,false,true': [0.11781035319965033, nan]}, {'': [0.16, -1.1564823173178713e-18], 'false': [nan, -1.1564823173178713e-18], 'true': [0.16, nan], 'false,false': [nan, -1.1564823173178713e-18], 'false,false,false': [-1.1564823173178713e-18, nan]}, {'': [nan, 0.11094272271844616], 'false': [0.16, 1.1564823173178713e-18], 'false,false': [nan, 1.1564823173178713e-18], 'false,true': [0.16, nan], 'false,false,false': [nan, 1.1564823173178713e-18]}, {'': [nan, 0.10770461173064598], 'false': [0.10770461173064598, nan], 'false,true': [0.16, 0.0], 'false,true,false': [0.0, nan]}, {'': [0.16, 0.0], 'false': [nan, 0.0], 'true,true': [nan, 0.16], 'true': [0.16, nan], 'false,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(A, D).;true;true', '4;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '6;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '7;;genre(A, B) :- movie(E, A), workedunder(F, A).;true;true', '8;;genre(A, B) :- workedunder(G, A), movie(E, G).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.133 seconds
Total inference time: 0.669 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:17:20
{'Recall': 1.0, 'F1': 0.914894, 'AUC PR': 0.843137, 'Learning time': 2.7270000000000003, 'AUC ROC': 0.906977, 'Inference time': 0.669, 'Precision': [0.843137, 0.5], 'Mapping results': {'Generating mappings time': 0.22612810134887695, 'Possible mappings': [433], 'Generating paths time': 2.8376874923706055, 'Total time': 3.0802268981933594, 'Numbers preds mapping': [7], 'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 4096, 'Knowledge compiling time': 0.016403675079345703}, 'parameter': {'Recall': 1.0, 'F1': 0.914894, 'AUC PR': 0.843137, 'Learning time': 1.594, 'AUC ROC': 0.906977, 'Inference time': 1.729, 'Precision': [0.843137, 0.5], 'CLL': -0.306342}, 'CLL': -0.300536}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.702 seconds
Total inference time: 0.746 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 03:17:23
{'Recall': 1.0, 'F1': 0.914894, 'AUC PR': 0.843137, 'Learning time': 1.702, 'AUC ROC': 0.906977, 'Inference time': 0.746, 'Precision': [0.843137, 0.5], 'CLL': -0.300536}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.789772
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.821 seconds
Total inference time: 0.612 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 03:17:25
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.843137, 'Learning time': 0.821, 'AUC ROC': 0.906977, 'Inference time': 0.612, 'Precision': [nan, 0.5], 'CLL': -0.789772}


Starting fold 5

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.01627182960510254
   Generating paths time   = 2.598301649093628
   Generating mappings time   = 0.22824573516845703
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 2.8428266048431396


Best mapping found: ['sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false;workedunder(H, A), movie(I, H).;true;true
0;true;workedunder(F, A), movie(E, F).;false;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,false;workedunder(P, A), workedunder(Q, P).;false;true
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;false,false,false;workedunder(R, A).;false;false
1;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
1;false;workedunder(I, A), movie(J, I).;true;true
1;false,true,true;movie(L, K).;false;false
1;false,false;workedunder(M, A), workedunder(N, M).;false;true
1;false,true;workedunder(I, K), movie(L, A).;true;false
1;false,false,false;workedunder(P, A).;false;false
2;;genre(A, B) :- movie(C, A).;true;true
2;true;workedunder(F, A).;false;false
2;false,false,true;workedunder(J, K), movie(L, K).;false;false
2;false;movie(G, A), workedunder(H, A).;true;true
2;false,true,true;movie(G, I).;false;false
2;false,false;workedunder(J, A).;true;true
2;false,true;workedunder(H, I).;true;false
2;false,false,false;workedunder(M, A), movie(N, M).;false;false
3;;genre(A, B) :- workedunder(F, E).;true;true
3;false;workedunder(M, A), movie(N, A).;false;true
3;true,true;workedunder(F, G).;false;false
3;true;workedunder(A, E).;true;true
3;true,false,false;workedunder(K, A), movie(L, K).;false;false
3;true,false;workedunder(J, H).;false;true
3;false,false;workedunder(P, A).;false;false
4;;genre(A, B) :- workedunder(C, A), movie(D, A).;false;true
4;false,false,true;workedunder(N, P), movie(Q, P).;false;false
4;false;workedunder(I, G).;true;true
4;false,true,false;workedunder(L, A), movie(M, L).;false;false
4;false,false;workedunder(N, A).;true;true
4;false,true;workedunder(I, J), movie(K, J).;false;true
4;false,false,false;workedunder(R, A).;false;false
5;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;true;true
5;false;workedunder(J, A), workedunder(K, J).;false;true
5;true;workedunder(E, A), movie(F, E).;false;true
5;false,false,true;movie(L, P), workedunder(P, Q).;false;false
5;true,false,false;workedunder(C, H), movie(I, H).;false;false
5;true,false;movie(G, A).;false;true
5;false,false;movie(L, A).;true;true
5;false,false,false;movie(R, A), workedunder(S, A).;false;false
6;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true
6;true;movie(C, D).;false;false
6;false,false,true;workedunder(H, J), movie(I, J).;false;false
6;false;workedunder(E, A).;true;true
6;false,true,true;movie(G, E).;false;false
6;false,false;workedunder(H, A), movie(I, H).;true;true
6;false,true;workedunder(E, F), movie(G, F).;true;false
6;false,false,false;movie(K, A).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
7;false,false,true;movie(N, P).;false;false
7;false;movie(G, A), workedunder(H, A).;true;true
7;false,true,false;movie(M, K).;false;false
7;false,false;movie(N, A), workedunder(P, A).;true;true
7;false,true;workedunder(H, I), movie(J, H).;false;true
7;false,false,false;workedunder(Q, A).;false;false
8;;genre(A, B) :- workedunder(C, A), workedunder(D, C).;false;true
8;false,false,true;workedunder(N, Q).;false;false
8;false;movie(I, G).;true;true
8;false,true,false;workedunder(M, K).;false;false
8;false,false;workedunder(N, A), movie(P, A).;true;true
8;false,true;workedunder(J, A), movie(I, J).;false;true
8;false,false,false;workedunder(T, A), workedunder(T, U).;false;false
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true;workedunder(A, D), movie(E, C).;false;false
9;true;workedunder(C, D), movie(E, D).;true;false
9;false;workedunder(H, A), movie(I, H).;true;true
9;false,false;workedunder(M, A), workedunder(M, N).;false;false
9;false,true;workedunder(H, J), movie(I, J).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, D) )
%   | then if ( workedunder(C, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, G) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, G), movie(H, G) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A), workedunder(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H), workedunder(H, I) )
%   | | | then return 0.08499374559054629;  // std dev = 0,340, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then if ( movie(C, D) )
%   | then return 0.23935700108516422;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), movie(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.09204594339777658;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), workedunder(F, A) )
%   | then if ( workedunder(F, G), movie(H, F) )
%   | | then return 0.19852082828804796;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(I, A), workedunder(J, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08463679078745934;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, F) )
%   | then if ( workedunder(G, A), movie(E, G) )
%   | | then return 0.16880983112775338;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( workedunder(H, I) )
%   | | | then return -0.07830602720680806;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14642805445214568;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07283771686569032;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302038
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 1.197 seconds
Total inference time: 1.831 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A), movie(C, E)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false': 'workedunder(G, A), workedunder(H, G)', 'false,false,false': 'workedunder(I, A)'}, {'false,false,false,false': [0.0, 2, 0], 'true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)'}, {'true,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,false': 'workedunder(F, G)', 'true,true': 'workedunder(C, E)', 'true': 'workedunder(A, D)'}, {'true,true,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, F)', 'false,true': 'workedunder(E, G), movie(H, G)'}, {'false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'workedunder(E, A), workedunder(F, E)', 'false,false': 'movie(G, A)', 'false,false,true': 'movie(G, H), workedunder(H, I)'}, {'false,false,true,true': [0.34, 2, 2], 'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A)', 'true': 'movie(C, D)', 'false,false': 'workedunder(F, A), movie(G, F)', 'false,false,false': 'movie(H, A)'}, {'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false,false,false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'movie(E, A), workedunder(F, A)', 'false,false': 'movie(I, A), workedunder(J, A)', 'false,true': 'workedunder(F, G), movie(H, F)', 'false,false,false': 'workedunder(K, A)'}, {'false,false,false,false': [0.0, 2, 0], 'true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(D, C)', 'false': 'movie(E, F)', 'false,true': 'workedunder(G, A), movie(E, G)', 'false,true,false': 'workedunder(H, I)'}, {'false,true,false,true': [0.0, 2, 0], 'true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true,true': 'workedunder(A, D), movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false,false': 'workedunder(H, A), workedunder(H, I)'}, {'true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 2, 0]}]]
[{'': [0.25, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.11145008534151418, nan], 'true': [0.0, 0.0]}, {'': [0.06736877561142736, nan], 'true,false': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, 0.0]}, {'': [0.0, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan]}, {'': [nan, 0.028960720834012167], 'false': [nan, 0.028960720834012167], 'false,false': [0.028960720834012167, nan], 'false,false,true': [0.028960720834012167, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'true': [0.0, nan], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.02004455931012752], 'false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.015266561860106762], 'false': [0.015266561860106762, nan], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'true,true': [nan, 0.0], 'true': [0.0, nan], 'false,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '2;;genre(A, B) :- workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(A, D).;true;true', '4;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '6;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '7;;genre(A, B) :- movie(E, A), workedunder(F, A).;true;true', '8;;genre(A, B) :- workedunder(G, A), movie(E, G).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,170, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.299463
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 1.135 seconds
Total inference time: 0.79 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:17:33
{'Recall': 1.0, 'F1': 0.909091, 'AUC PR': 0.833333, 'Learning time': 2.332, 'AUC ROC': 0.9, 'Inference time': 0.79, 'Precision': [0.833333, 0.5], 'Mapping results': {'Generating mappings time': 0.22824573516845703, 'Possible mappings': [433], 'Generating paths time': 2.598301649093628, 'Total time': 2.8428266048431396, 'Numbers preds mapping': [7], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 4096, 'Knowledge compiling time': 0.01627182960510254}, 'parameter': {'Recall': 1.0, 'F1': 0.909091, 'AUC PR': 0.833333, 'Learning time': 1.197, 'AUC ROC': 0.9, 'Inference time': 1.831, 'Precision': [0.833333, 0.5], 'CLL': -0.302038}, 'CLL': -0.299463}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.998 seconds
Total inference time: 0.619 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 03:17:35
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.5, 'Learning time': 0.998, 'AUC ROC': 0.5, 'Inference time': 0.619, 'Precision': [nan, 0.5], 'CLL': -1.052978}


WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.528 seconds
Total inference time: 0.55 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 03:17:36
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.5, 'Learning time': 0.528, 'AUC ROC': 0.5, 'Inference time': 0.55, 'Precision': [nan, 0.5], 'CLL': -1.052978}


