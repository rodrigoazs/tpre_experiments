Starting experiment #10 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else return 0.3343394112899885;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   else if ( advisedby(A, G), publication(H, G) )
%   | then if ( advisedby(I, G), publication(H, I) )
%   | | then if ( ta(J, I, K), ta(L, A, M) )
%   | | | then return 0.4735335504841277;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.36389606153629317;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, P) )
%   | | | then return 0.28672036367094095;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.41134042446121344;  // std dev = 3,408, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( publication(R, A) )
%   | | | then return 0.40360348055405776;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.26991364098186527;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( tempadvisedby(A, F), publication(C, F) )
%   | then return 0.14573025403358983;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( advisedby(A, G) )
%   | | then return 0.24415759818152227;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else return 0.38382549212882794;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, A, L), ta(M, J, N) )
%   | | | then return 0.40564015880039006;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.3135977252686114;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.43201604470553195;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, P) )
%   | | then if ( tempadvisedby(Q, P), publication(R, Q) )
%   | | | then return 0.24811816884741297;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3535696551594697;  // std dev = 3,408, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return 0.26147489333905416;  // std dev = 0,496, 45,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then if ( sameperson(A, E) )
%   | | then return 0.23273354940742713;  // std dev = 0,496, 80,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=38 */
%   | | else return 0.5432652576992743;  // std dev = 0,890, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then return 0.18800887543860748;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( tempadvisedby(A, J), publication(K, J) )
%   | | | then return 0.31054658910299116;  // std dev = 1,469, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.14147733594084333;  // std dev = 1,097, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( advisedby(A, L), projectmember(M, L) )
%   | then return 0.1967692213912891;  // std dev = 0,488, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( publication(N, A), tempadvisedby(A, P) )
%   | | then return 0.20848477447886868;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( advisedby(A, Q), tempadvisedby(R, Q) )
%   | | | then return 0.2739366922456712;  // std dev = 3,672, 54,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.30162430485799374;  // std dev = 4,114, 69,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( publication(C, F), tempadvisedby(G, F) )
%   | then return 0.15760872330480893;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else return 0.2152751508573573;  // std dev = 0,491, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, J, L), publication(I, A) )
%   | | | then return 0.3669336474469688;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21179312166173941;  // std dev = 4,911, 97,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=50 */
%   | | else return 0.2907525594721247;  // std dev = 0,479, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, M), advisedby(N, M) )
%   | | then if ( ta(P, A, Q), ta(R, N, Q) )
%   | | | then return 0.13578792217141145;  // std dev = 1,707, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.2381722437554774;  // std dev = 3,487, 50,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | else if ( advisedby(A, S), publication(T, A) )
%   | | | then return 0.2808657487089111;  // std dev = 1,305, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.15874890255192856;  // std dev = 3,264, 44,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.16009097169531275;  // std dev = 0,492, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then if ( ta(J, G, D), tempadvisedby(K, I) )
%   | | | then return 0.35951038606242874;  // std dev = 0,790, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09422628258702592;  // std dev = 2,868, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else return 0.15468399295017352;  // std dev = 0,492, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), projectmember(M, L) )
%   | then return 0.1178589363121536;  // std dev = 0,484, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( advisedby(A, N), publication(P, A) )
%   | | then if ( tempadvisedby(Q, N) )
%   | | | then return 0.15065968160871138;  // std dev = 2,823, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.2877539688449239;  // std dev = 1,957, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( advisedby(A, R), tempadvisedby(S, R) )
%   | | | then return 0.20344094963985926;  // std dev = 2,335, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.15542768623751632;  // std dev = 3,815, 59,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( tempadvisedby(A, F), publication(E, F) )
%   | then return 8.758340071901941E-4;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( advisedby(A, G) )
%   | | then if ( tempadvisedby(H, G) )
%   | | | then return 0.11195718902966736;  // std dev = 2,892, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return -0.004525466680223189;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.17698913497215177;  // std dev = 0,488, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( advisedby(A, I), publication(J, A) )
%   | then if ( tempadvisedby(K, I), publication(J, K) )
%   | | then return -0.04747546211947377;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.16200283466413368;  // std dev = 0,492, 50,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else if ( tempadvisedby(A, L) )
%   | | then return 0.13755797167263062;  // std dev = 0,492, 68,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   | | else if ( advisedby(A, M), tempadvisedby(N, M) )
%   | | | then return 0.1338427130634076;  // std dev = 3,814, 60,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | else return 0.08952506864091213;  // std dev = 3,470, 49,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( publication(E, F), tempadvisedby(G, F) )
%   | then if ( ta(H, G, D), advisedby(A, F) )
%   | | then return 0.1505618806013016;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( advisedby(A, I), publication(E, G) )
%   | | | then return 0.14817609687804556;  // std dev = 1,219, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03366468742870804;  // std dev = 2,576, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | else return 0.11378898702899931;  // std dev = 0,486, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( publication(J, A), tempadvisedby(A, K) )
%   | then return 0.057008764711349726;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( publication(L, A) )
%   | | then if ( advisedby(A, M), tempadvisedby(N, M) )
%   | | | then return 0.08274687922719168;  // std dev = 2,987, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.1653363628924712;  // std dev = 2,201, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( tempadvisedby(A, P), advisedby(Q, P) )
%   | | | then return 0.11215159851674074;  // std dev = 3,644, 55,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | | | else return 0.08669560250767411;  // std dev = 5,197, 111,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=55 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( tempadvisedby(A, F), publication(C, F) )
%   | then return -0.006833574937996116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.06360569302468956;  // std dev = 0,492, 47,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   else if ( advisedby(A, G) )
%   | then if ( tempadvisedby(H, G), publication(I, H) )
%   | | then if ( publication(I, A) )
%   | | | then return -0.055826473739145066;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.14214023888244756;  // std dev = 2,023, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( tempadvisedby(J, G), publication(K, A) )
%   | | | then return 0.03723952226123513;  // std dev = 2,396, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.08215955396754909;  // std dev = 4,842, 97,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=52 */
%   | else if ( tempadvisedby(A, L) )
%   | | then if ( tempadvisedby(M, L), publication(N, M) )
%   | | | then return 0.03547495628336147;  // std dev = 2,267, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.09941695387161965;  // std dev = 3,348, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return 0.0294358031071951;  // std dev = 0,490, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, F), publication(G, E) )
%   | then return 0.06254658762646631;  // std dev = 0,489, 86,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=41 */
%   | else if ( ta(C, H, I), tempadvisedby(H, J) )
%   | | then if ( projectmember(K, J), publication(L, J) )
%   | | | then return 0.2919392127884102;  // std dev = 0,816, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.041491244491982465;  // std dev = 2,737, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else return 0.08522647822830436;  // std dev = 0,487, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( advisedby(A, M), projectmember(N, M) )
%   | then return 0.023645465588550824;  // std dev = 0,483, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( advisedby(A, P), publication(Q, P) )
%   | | then if ( tempadvisedby(R, P), ta(S, R, T) )
%   | | | then return 0.09130658935683075;  // std dev = 2,741, 31,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.035734227953700806;  // std dev = 3,384, 47,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=25 */
%   | | else if ( tempadvisedby(A, U), publication(W, A) )
%   | | | then return 0.03516961040915785;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07910756760639658;  // std dev = 3,306, 45,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | then return 0.05383496127092956;  // std dev = 0,484, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( publication(C, I), tempadvisedby(I, J) )
%   | | then return 0.08339807803371783;  // std dev = 1,219, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( advisedby(A, K), tempadvisedby(L, K) )
%   | | | then return 0.025293196330160257;  // std dev = 2,262, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.021118910854665617;  // std dev = 1,536, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( publication(M, A) )
%   | then if ( publication(M, N), advisedby(P, N) )
%   | | then if ( ta(Q, P, R), publication(S, P) )
%   | | | then return 0.08444662723453593;  // std dev = 2,996, 38,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | | else return -0.04269481787554513;  // std dev = 2,115, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0.11320469962309937;  // std dev = 0,472, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( tempadvisedby(A, T) )
%   | | then return 0.05191163228385125;  // std dev = 0,487, 61,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | else return 0.03276649249780931;  // std dev = 0,493, 105,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=52 */


Predicates from source: ['inphase(person,prequals).', 'tempadvisedby(person,person).', 'ta(course,person,quarter).', 'advisedby(person,person).', 'sameperson(person,person).', 'publication(title,person).', 'projectmember(project,person).']

Starting fold 1

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.016407489776611328
   Generating paths time   = 2.7719881534576416
   Generating mappings time   = 0.22687888145446777
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 3.0152840614318848


Best mapping found: ['sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;true;workedunder(F, A), movie(E, F).;false;false
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,false;workedunder(N, A).;true;true
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false,false,false;movie(R, A).;false;false
1;;genre(A, B) :- movie(C, A).;true;true
1;false;workedunder(H, A), movie(I, H).;true;true
1;true;workedunder(F, A), movie(C, F).;false;true
1;false,false,true;workedunder(P, Q), movie(R, Q).;false;false
1;true,false;workedunder(G, A).;false;false
1;false,false;workedunder(P, A).;true;false
1;false,true;workedunder(H, J), movie(I, J).;false;false
2;;genre(A, B) :- workedunder(F, E).;true;true
2;false;workedunder(L, A), workedunder(M, L).;false;true
2;true;workedunder(A, E).;false;true
2;true,false,false;workedunder(J, A), movie(K, J).;false;false
2;true,false;workedunder(I, G).;false;true
2;false,false;movie(N, A), workedunder(P, A).;false;true
2;false,false,false;workedunder(Q, A), workedunder(Q, R).;false;false
3;;genre(A, B) :- movie(C, A).;true;true
3;true;movie(C, F), workedunder(F, G).;false;false
3;false;workedunder(H, A), movie(I, H).;true;true
3;false,true,true;movie(I, A).;false;false
3;false,false;workedunder(M, A), workedunder(M, N).;false;true
3;false,true;workedunder(H, J), movie(I, J).;true;false
3;false,false,false;workedunder(S, A), movie(T, A).;false;false
4;;genre(A, B) :- workedunder(F, E).;false;true
4;false;workedunder(L, A), workedunder(M, L).;false;true
4;false,false;workedunder(N, A), movie(P, A).;true;true
4;false,false,true;workedunder(N, Q).;false;false
4;false,false,false;workedunder(R, A), workedunder(R, S).;false;false
5;;genre(A, B) :- movie(E, A).;true;true
5;false;workedunder(I, A), movie(J, A).;true;true
5;true;workedunder(F, A), movie(E, F).;false;true
5;true,false,true;workedunder(G, H).;false;false
5;true,false;workedunder(G, A).;true;false
5;false,false;workedunder(L, A).;false;true
5;false,true;workedunder(I, K), movie(J, K).;false;false
5;false,false,false;workedunder(M, A), workedunder(M, N).;false;false
6;;genre(A, B) :- movie(E, A).;true;true
6;true,true;workedunder(F, A).;false;true
6;true;movie(E, F), workedunder(F, G).;true;false
6;false,false,true;workedunder(M, A), workedunder(M, N).;false;false
6;false;movie(J, A), workedunder(K, A).;false;true
6;false,false;movie(L, A).;true;true
6;true,true,false;workedunder(I, A), movie(E, G).;false;false
6;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
7;;genre(A, B) :- movie(C, A).;true;true
7;true;workedunder(F, A), movie(C, F).;false;false
7;false,false,true;workedunder(L, M), movie(N, M).;false;false
7;false;workedunder(G, A).;true;true
7;false,true,false;workedunder(G, J), movie(K, A).;false;false
7;false,true,true;movie(I, A).;false;false
7;false,false;workedunder(L, A).;true;false
7;false,true;workedunder(G, H), movie(I, H).;true;true
8;;genre(A, B) :- movie(G, E).;false;true
8;false;workedunder(M, A), workedunder(N, M).;false;true
8;false,false;workedunder(P, A), movie(Q, P).;true;true
8;false,false,true;workedunder(P, R).;false;false
8;false,false,false;workedunder(U, A), movie(W, A).;false;false
9;;genre(A, B) :- movie(C, A).;true;true
9;false;movie(M, A).;true;true
9;true;workedunder(H, F).;false;true
9;true,false,false;workedunder(K, A), workedunder(K, L).;false;false
9;true,false;movie(C, I), workedunder(J, I).;false;true
9;false,true,true;movie(S, P).;false;false
9;false,false;workedunder(T, A).;false;false
9;false,true;movie(M, N), workedunder(N, P).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, D) )
%   | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( workedunder(E, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.15795862733523683;  // std dev = 1,217, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.1313611393852472;  // std dev = 1,165, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.34925658984211166;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13121114347339868;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then if ( workedunder(D, A) )
%   | | then return 0.2745686464294966;  // std dev = 1,83e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( workedunder(F, A), movie(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11696361954121094;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.22337011624314093;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.10541385938620106;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then return 0.04556971937807382;  // std dev = 0,663, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, E) )
%   | then return 0.04014292726449171;  // std dev = 0,657, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.355131
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 2.926 seconds
Total inference time: 1.097 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 11]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [4.21e-08, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,false': 'workedunder(E, F)', 'true': 'workedunder(A, D)'}, {'false': [0.0, 0, 0], 'true,true': [7.45e-09, 11, 0], 'true,false,true': [0.0, 0, 11], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [1.217, 11, 11]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.165, 11, 11]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [2.98e-08, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(D, A)', 'true': 'movie(C, D), workedunder(D, E)', 'true,true,false': 'workedunder(F, A), movie(C, E)'}, {'true,true,true': [1.83e-08, 0, 11], 'true,true,false,false': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 11]}], ['genre(A, B)', {'': 'movie(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.663, 11, 11]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [0.657, 11, 11]}]]
[{'': [0.24999999999999958, nan], 'true': [-1.6148698540002277e-16, -1.0092936587501423e-17]}, {'': [0.17847162811629388, nan], 'true,false': [nan, 2.523234146875356e-18], 'true': [1.6148698540002277e-16, 2.523234146875356e-18]}, {'': [0.11145008534151403, nan], 'true,false': [-2.0185873175002846e-16, nan], 'true': [5.046468293750712e-18, -2.0185873175002846e-16]}, {'': [0.06736877561142736, nan], 'true': [0.06736877561142736, nan]}, {'': [0.061657492460009095, nan]}, {'': [0.05771231068933613, nan], 'true,false': [nan, -2.523234146875356e-18], 'true': [8.074349270001139e-17, -2.523234146875356e-18]}, {'': [0.038324378824039246, nan], 'true,true': [3.027880976250427e-17, 0.0], 'true': [0.038324378824039246, nan], 'true,true,false': [nan, 0.0]}, {'': [0.02702472565765892, nan], 'true': [-4.0371746350005693e-17, -2.523234146875356e-18]}, {'': [0.020007624559262232, nan]}, {'': [0.019612650231608266, nan], 'true': [0.019612650231608266, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '2;;genre(A, B) :- workedunder(A, D).;true;true', '5;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(D, A).;true;true', '7;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.558 seconds
Total inference time: 1.03 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:14:10
{'Recall': 1.0, 'F1': 0.888889, 'AUC PR': 0.8, 'Learning time': 4.484, 'AUC ROC': 0.875, 'Inference time': 1.03, 'Precision': [0.8, 0.5], 'Mapping results': {'Generating mappings time': 0.22687888145446777, 'Possible mappings': [433], 'Generating paths time': 2.7719881534576416, 'Total time': 3.0152840614318848, 'Numbers preds mapping': [7], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 4096, 'Knowledge compiling time': 0.016407489776611328}, 'parameter': {'Recall': 1.0, 'F1': 0.888889, 'AUC PR': 0.8, 'Learning time': 2.926, 'AUC ROC': 0.875, 'Inference time': 1.097, 'Precision': [0.8, 0.5], 'CLL': -0.355131}, 'CLL': -0.352709}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 3.803 seconds
Total inference time: 0.667 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:14:14
{'Recall': 1.0, 'F1': 0.888889, 'AUC PR': 0.8, 'Learning time': 3.803, 'AUC ROC': 0.875, 'Inference time': 0.667, 'Precision': [0.8, 0.5], 'CLL': -0.352709}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.726963
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.87 seconds
Total inference time: 1.211 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:14:17
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.8, 'Learning time': 0.87, 'AUC ROC': 0.875, 'Inference time': 1.211, 'Precision': [nan, 0.5], 'CLL': -0.726963}


Starting fold 2

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.03139352798461914
   Generating paths time   = 2.8137972354888916
   Generating mappings time   = 0.25008487701416016
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 3.0952858924865723


Best mapping found: ['sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;true;workedunder(F, A), movie(E, F).;false;false
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,false;workedunder(N, A).;true;true
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false,false,false;movie(R, A).;false;false
1;;genre(A, B) :- movie(C, A).;true;true
1;false;workedunder(H, A), movie(I, H).;true;true
1;true;workedunder(F, A), movie(C, F).;false;true
1;false,false,true;workedunder(P, Q), movie(R, Q).;false;false
1;true,false;workedunder(G, A).;false;false
1;false,false;workedunder(P, A).;true;false
1;false,true;workedunder(H, J), movie(I, J).;false;false
2;;genre(A, B) :- workedunder(F, E).;true;true
2;false;workedunder(L, A), workedunder(M, L).;false;true
2;true;workedunder(A, E).;false;true
2;true,false,false;workedunder(J, A), movie(K, J).;false;false
2;true,false;workedunder(I, G).;false;true
2;false,false;movie(N, A), workedunder(P, A).;false;true
2;false,false,false;workedunder(Q, A), workedunder(Q, R).;false;false
3;;genre(A, B) :- movie(C, A).;true;true
3;true;movie(C, F), workedunder(F, G).;false;false
3;false;workedunder(H, A), movie(I, H).;true;true
3;false,true,true;movie(I, A).;false;false
3;false,false;workedunder(M, A), workedunder(M, N).;false;true
3;false,true;workedunder(H, J), movie(I, J).;true;false
3;false,false,false;workedunder(S, A), movie(T, A).;false;false
4;;genre(A, B) :- workedunder(F, E).;false;true
4;false;workedunder(L, A), workedunder(M, L).;false;true
4;false,false;workedunder(N, A), movie(P, A).;true;true
4;false,false,true;workedunder(N, Q).;false;false
4;false,false,false;workedunder(R, A), workedunder(R, S).;false;false
5;;genre(A, B) :- movie(E, A).;true;true
5;false;workedunder(I, A), movie(J, A).;true;true
5;true;workedunder(F, A), movie(E, F).;false;true
5;true,false,true;workedunder(G, H).;false;false
5;true,false;workedunder(G, A).;true;false
5;false,false;workedunder(L, A).;false;true
5;false,true;workedunder(I, K), movie(J, K).;false;false
5;false,false,false;workedunder(M, A), workedunder(M, N).;false;false
6;;genre(A, B) :- movie(E, A).;true;true
6;true,true;workedunder(F, A).;false;true
6;true;movie(E, F), workedunder(F, G).;true;false
6;false,false,true;workedunder(M, A), workedunder(M, N).;false;false
6;false;movie(J, A), workedunder(K, A).;false;true
6;false,false;movie(L, A).;true;true
6;true,true,false;workedunder(I, A), movie(E, G).;false;false
6;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
7;;genre(A, B) :- movie(C, A).;true;true
7;true;workedunder(F, A), movie(C, F).;false;false
7;false,false,true;workedunder(L, M), movie(N, M).;false;false
7;false;workedunder(G, A).;true;true
7;false,true,false;workedunder(G, J), movie(K, A).;false;false
7;false,true,true;movie(I, A).;false;false
7;false,false;workedunder(L, A).;true;false
7;false,true;workedunder(G, H), movie(I, H).;true;true
8;;genre(A, B) :- movie(G, E).;false;true
8;false;workedunder(M, A), workedunder(N, M).;false;true
8;false,false;workedunder(P, A), movie(Q, P).;true;true
8;false,false,true;workedunder(P, R).;false;false
8;false,false,false;workedunder(U, A), movie(W, A).;false;false
9;;genre(A, B) :- movie(C, A).;true;true
9;false;movie(M, A).;true;true
9;true;workedunder(H, F).;false;true
9;true,false,false;workedunder(K, A), workedunder(K, L).;false;false
9;true,false;movie(C, I), workedunder(J, I).;false;true
9;false,true,true;movie(S, P).;false;false
9;false,false;workedunder(T, A).;false;false
9;false,true;movie(M, N), workedunder(N, P).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, D) )
%   | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( workedunder(E, F) )
%   | | then return 0.5123505661168763;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.16214040922766773;  // std dev = 1,528, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.13325474485941094;  // std dev = 1,483, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.31320300985955757;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13190525897060162;  // std dev = 9,13e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then if ( workedunder(D, A) )
%   | | then return 0.24172638957477396;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( workedunder(F, A), movie(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11752056078601435;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.19168194689807652;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.10586966914178522;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then return 0.04023523413818434;  // std dev = 1,141, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, E) )
%   | then return 0.034755852434401796;  // std dev = 1,136, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.339137
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.592 seconds
Total inference time: 1.503 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [0.961, 1, 12], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,false': 'workedunder(E, F)', 'true': 'workedunder(A, D)'}, {'false': [0.0, 0, 0], 'true,true': [7.45e-09, 11, 0], 'true,false,true': [0.961, 1, 12], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [1.528, 12, 12]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.483, 12, 12]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [0.961, 1, 12], 'true,false,true': [0.0, 0, 0], 'true,false,false': [9.13e-09, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(D, A)', 'true': 'movie(C, D), workedunder(D, E)', 'true,true,false': 'workedunder(F, A), movie(C, E)'}, {'true,true,true': [0.961, 1, 12], 'true,true,false,false': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'movie(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.141, 12, 12]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [1.136, 12, 12]}]]
[{'': [0.24999999999999956, nan], 'true': [0.07100591715976314, -1.0092936587501423e-17]}, {'': [0.19076867375623552, nan], 'true,false': [nan, 2.523234146875356e-18], 'true': [0.07100591715976333, 2.523234146875356e-18]}, {'': [0.13533629047183346, nan], 'true,false': [0.07100591715976351, nan], 'true': [5.046468293750712e-18, 0.07100591715976351]}, {'': [0.09731751852547608, nan], 'true': [0.09731751852547608, nan]}, {'': [0.09161532846397692, nan]}, {'': [0.0876479204932752, nan], 'true,false': [nan, 7.569702440626067e-18], 'true': [0.07100591715976337, 7.569702440626067e-18]}, {'': [0.07050207162494876, nan], 'true,true': [0.07100591715976336, 0.0], 'true': [0.07050207162494876, nan], 'true,true,false': [nan, 0.0]}, {'': [0.06044206950621634, nan], 'true': [0.0710059171597633, -2.523234146875356e-18]}, {'': [0.05422571389933271, nan]}, {'': [0.053784899432964633, nan], 'true': [0.053784899432964633, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '2;;genre(A, B) :- workedunder(A, D).;true;true', '5;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(D, A).;true;true', '7;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 3.249 seconds
Total inference time: 0.545 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:14:28
{'Recall': 1.0, 'F1': 0.897436, 'AUC PR': 0.813953, 'Learning time': 4.841, 'AUC ROC': 0.885714, 'Inference time': 0.545, 'Precision': [0.813953, 0.5], 'Mapping results': {'Generating mappings time': 0.25008487701416016, 'Possible mappings': [433], 'Generating paths time': 2.8137972354888916, 'Total time': 3.0952858924865723, 'Numbers preds mapping': [7], 'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 4096, 'Knowledge compiling time': 0.03139352798461914}, 'parameter': {'Recall': 1.0, 'F1': 0.897436, 'AUC PR': 0.813953, 'Learning time': 1.592, 'AUC ROC': 0.885714, 'Inference time': 1.503, 'Precision': [0.813953, 0.5], 'CLL': -0.339137}, 'CLL': -0.320018}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 2.534 seconds
Total inference time: 0.717 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:14:31
{'Recall': 1.0, 'F1': 0.897436, 'AUC PR': 0.813953, 'Learning time': 2.534, 'AUC ROC': 0.885714, 'Inference time': 0.717, 'Precision': [0.813953, 0.5], 'CLL': -0.320018}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.75044
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.042 seconds
Total inference time: 1.271 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:14:34
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.813953, 'Learning time': 1.042, 'AUC ROC': 0.885714, 'Inference time': 1.271, 'Precision': [nan, 0.5], 'CLL': -0.75044}


Starting fold 3

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.03348207473754883
   Generating paths time   = 2.8116133213043213
   Generating mappings time   = 0.22924089431762695
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 3.0743460655212402


Best mapping found: ['sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;true;workedunder(F, A), movie(E, F).;false;false
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,false;workedunder(N, A).;true;true
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false,false,false;movie(R, A).;false;false
1;;genre(A, B) :- movie(C, A).;true;true
1;false;workedunder(H, A), movie(I, H).;true;true
1;true;workedunder(F, A), movie(C, F).;false;true
1;false,false,true;workedunder(P, Q), movie(R, Q).;false;false
1;true,false;workedunder(G, A).;false;false
1;false,false;workedunder(P, A).;true;false
1;false,true;workedunder(H, J), movie(I, J).;false;false
2;;genre(A, B) :- workedunder(F, E).;true;true
2;false;workedunder(L, A), workedunder(M, L).;false;true
2;true;workedunder(A, E).;false;true
2;true,false,false;workedunder(J, A), movie(K, J).;false;false
2;true,false;workedunder(I, G).;false;true
2;false,false;movie(N, A), workedunder(P, A).;false;true
2;false,false,false;workedunder(Q, A), workedunder(Q, R).;false;false
3;;genre(A, B) :- movie(C, A).;true;true
3;true;movie(C, F), workedunder(F, G).;false;false
3;false;workedunder(H, A), movie(I, H).;true;true
3;false,true,true;movie(I, A).;false;false
3;false,false;workedunder(M, A), workedunder(M, N).;false;true
3;false,true;workedunder(H, J), movie(I, J).;true;false
3;false,false,false;workedunder(S, A), movie(T, A).;false;false
4;;genre(A, B) :- workedunder(F, E).;false;true
4;false;workedunder(L, A), workedunder(M, L).;false;true
4;false,false;workedunder(N, A), movie(P, A).;true;true
4;false,false,true;workedunder(N, Q).;false;false
4;false,false,false;workedunder(R, A), workedunder(R, S).;false;false
5;;genre(A, B) :- movie(E, A).;true;true
5;false;workedunder(I, A), movie(J, A).;true;true
5;true;workedunder(F, A), movie(E, F).;false;true
5;true,false,true;workedunder(G, H).;false;false
5;true,false;workedunder(G, A).;true;false
5;false,false;workedunder(L, A).;false;true
5;false,true;workedunder(I, K), movie(J, K).;false;false
5;false,false,false;workedunder(M, A), workedunder(M, N).;false;false
6;;genre(A, B) :- movie(E, A).;true;true
6;true,true;workedunder(F, A).;false;true
6;true;movie(E, F), workedunder(F, G).;true;false
6;false,false,true;workedunder(M, A), workedunder(M, N).;false;false
6;false;movie(J, A), workedunder(K, A).;false;true
6;false,false;movie(L, A).;true;true
6;true,true,false;workedunder(I, A), movie(E, G).;false;false
6;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
7;;genre(A, B) :- movie(C, A).;true;true
7;true;workedunder(F, A), movie(C, F).;false;false
7;false,false,true;workedunder(L, M), movie(N, M).;false;false
7;false;workedunder(G, A).;true;true
7;false,true,false;workedunder(G, J), movie(K, A).;false;false
7;false,true,true;movie(I, A).;false;false
7;false,false;workedunder(L, A).;true;false
7;false,true;workedunder(G, H), movie(I, H).;true;true
8;;genre(A, B) :- movie(G, E).;false;true
8;false;workedunder(M, A), workedunder(N, M).;false;true
8;false,false;workedunder(P, A), movie(Q, P).;true;true
8;false,false,true;workedunder(P, R).;false;false
8;false,false,false;workedunder(U, A), movie(W, A).;false;false
9;;genre(A, B) :- movie(C, A).;true;true
9;false;movie(M, A).;true;true
9;true;workedunder(H, F).;false;true
9;true,false,false;workedunder(K, A), workedunder(K, L).;false;false
9;true,false;movie(C, I), workedunder(J, I).;false;true
9;false,true,true;movie(S, P).;false;false
9;false,false;workedunder(T, A).;false;false
9;false,true;movie(M, N), workedunder(N, P).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.49238913840392534;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, D) )
%   | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( workedunder(E, F) )
%   | | then return 0.39468718495146987;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.17931826699808692;  // std dev = 2,508, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.14329883704659097;  // std dev = 2,476, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.22303937193820061;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13505369642297585;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then if ( workedunder(D, A) )
%   | | then return 0.16747407941432896;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else if ( workedunder(F, A), movie(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12004029125719538;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.12652351589904703;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.10792737836467134;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then return 0.03700628944860617;  // std dev = 2,308, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, E) )
%   | then return 0.029988155527875357;  // std dev = 2,305, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.310071
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 4.475 seconds
Total inference time: 1.247 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [2.245, 7, 18], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,false': 'workedunder(E, F)', 'true': 'workedunder(A, D)'}, {'false': [0.0, 0, 0], 'true,true': [7.45e-09, 11, 0], 'true,false,true': [2.245, 7, 18], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [2.508, 18, 18]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.476, 18, 18]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [2.245, 7, 18], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(D, A)', 'true': 'movie(C, D), workedunder(D, E)', 'true,true,false': 'workedunder(F, A), movie(C, E)'}, {'true,true,true': [2.245, 7, 18], 'true,true,false,false': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 11, 0], 'false': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'movie(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.308, 18, 18]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [2.305, 18, 18]}]]
[{'': [0.2499999999999995, nan], 'true': [0.2015999999999996, -1.0092936587501423e-17]}, {'': [0.22099738300738728, nan], 'true,false': [nan, 2.523234146875356e-18], 'true': [0.2016000000000001, 2.523234146875356e-18]}, {'': [0.1945443430451362, nan], 'true,false': [0.20160000000000053, nan], 'true': [5.046468293750712e-18, 0.20160000000000053]}, {'': [0.1747217246282939, nan], 'true': [0.1747217246282939, nan]}, {'': [0.1703120314760143, nan]}, {'': [0.16720943483201298, nan], 'true,false': [nan, 2.523234146875356e-18], 'true': [0.20160000000000014, 2.523234146875356e-18]}, {'': [0.15754069534662551, nan], 'true,true': [0.20159999999999992, 0.0], 'true': [0.15754069534662551, nan], 'true,true,false': [nan, 0.0]}, {'': [0.15166356944505463, nan], 'true': [0.20160000000000003, 0.0]}, {'': [0.1480158698607351, nan]}, {'': [0.14758254712413968, nan], 'true': [0.14758254712413968, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '2;;genre(A, B) :- workedunder(A, D).;true;true', '5;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(D, A).;true;true', '7;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.023 seconds
Total inference time: 0.739 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:14:46
{'Recall': 1.0, 'F1': 0.966667, 'AUC PR': 0.935484, 'Learning time': 6.497999999999999, 'AUC ROC': 0.965517, 'Inference time': 0.739, 'Precision': [0.935484, 0.5], 'Mapping results': {'Generating mappings time': 0.22924089431762695, 'Possible mappings': [433], 'Generating paths time': 2.8116133213043213, 'Total time': 3.0743460655212402, 'Numbers preds mapping': [7], 'Finding best mapping': 1.430511474609375e-06, 'Max mapping': 4096, 'Knowledge compiling time': 0.03348207473754883}, 'parameter': {'Recall': 1.0, 'F1': 0.966667, 'AUC PR': 0.935484, 'Learning time': 4.475, 'AUC ROC': 0.965517, 'Inference time': 1.247, 'Precision': [0.935484, 0.5], 'CLL': -0.310071}, 'CLL': -0.264596}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( director(A) )
%   then return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 4.477 seconds
Total inference time: 0.679 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:14:52
{'Recall': 1.0, 'F1': 0.966667, 'AUC PR': 0.935484, 'Learning time': 4.477, 'AUC ROC': 0.965517, 'Inference time': 0.679, 'Precision': [0.935484, 0.5], 'CLL': -0.264596}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.811362
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.505 seconds
Total inference time: 1.047 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:14:55
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.935484, 'Learning time': 1.505, 'AUC ROC': 0.965517, 'Inference time': 1.047, 'Precision': [nan, 0.5], 'CLL': -0.811362}


Starting fold 4

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.03001999855041504
   Generating paths time   = 2.7100508213043213
   Generating mappings time   = 0.23297762870788574
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 2.9730582237243652


Best mapping found: ['sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;true;workedunder(F, A), movie(E, F).;false;false
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,false;workedunder(N, A).;true;true
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false,false,false;movie(R, A).;false;false
1;;genre(A, B) :- movie(C, A).;true;true
1;false;workedunder(H, A), movie(I, H).;true;true
1;true;workedunder(F, A), movie(C, F).;false;true
1;false,false,true;workedunder(P, Q), movie(R, Q).;false;false
1;true,false;workedunder(G, A).;false;false
1;false,false;workedunder(P, A).;true;false
1;false,true;workedunder(H, J), movie(I, J).;false;false
2;;genre(A, B) :- workedunder(F, E).;true;true
2;false;workedunder(L, A), workedunder(M, L).;false;true
2;true;workedunder(A, E).;false;true
2;true,false,false;workedunder(J, A), movie(K, J).;false;false
2;true,false;workedunder(I, G).;false;true
2;false,false;movie(N, A), workedunder(P, A).;false;true
2;false,false,false;workedunder(Q, A), workedunder(Q, R).;false;false
3;;genre(A, B) :- movie(C, A).;true;true
3;true;movie(C, F), workedunder(F, G).;false;false
3;false;workedunder(H, A), movie(I, H).;true;true
3;false,true,true;movie(I, A).;false;false
3;false,false;workedunder(M, A), workedunder(M, N).;false;true
3;false,true;workedunder(H, J), movie(I, J).;true;false
3;false,false,false;workedunder(S, A), movie(T, A).;false;false
4;;genre(A, B) :- workedunder(F, E).;false;true
4;false;workedunder(L, A), workedunder(M, L).;false;true
4;false,false;workedunder(N, A), movie(P, A).;true;true
4;false,false,true;workedunder(N, Q).;false;false
4;false,false,false;workedunder(R, A), workedunder(R, S).;false;false
5;;genre(A, B) :- movie(E, A).;true;true
5;false;workedunder(I, A), movie(J, A).;true;true
5;true;workedunder(F, A), movie(E, F).;false;true
5;true,false,true;workedunder(G, H).;false;false
5;true,false;workedunder(G, A).;true;false
5;false,false;workedunder(L, A).;false;true
5;false,true;workedunder(I, K), movie(J, K).;false;false
5;false,false,false;workedunder(M, A), workedunder(M, N).;false;false
6;;genre(A, B) :- movie(E, A).;true;true
6;true,true;workedunder(F, A).;false;true
6;true;movie(E, F), workedunder(F, G).;true;false
6;false,false,true;workedunder(M, A), workedunder(M, N).;false;false
6;false;movie(J, A), workedunder(K, A).;false;true
6;false,false;movie(L, A).;true;true
6;true,true,false;workedunder(I, A), movie(E, G).;false;false
6;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
7;;genre(A, B) :- movie(C, A).;true;true
7;true;workedunder(F, A), movie(C, F).;false;false
7;false,false,true;workedunder(L, M), movie(N, M).;false;false
7;false;workedunder(G, A).;true;true
7;false,true,false;workedunder(G, J), movie(K, A).;false;false
7;false,true,true;movie(I, A).;false;false
7;false,false;workedunder(L, A).;true;false
7;false,true;workedunder(G, H), movie(I, H).;true;true
8;;genre(A, B) :- movie(G, E).;false;true
8;false;workedunder(M, A), workedunder(N, M).;false;true
8;false,false;workedunder(P, A), movie(Q, P).;true;true
8;false,false,true;workedunder(P, R).;false;false
8;false,false,false;workedunder(U, A), movie(W, A).;false;false
9;;genre(A, B) :- movie(C, A).;true;true
9;false;movie(M, A).;true;true
9;true;workedunder(H, F).;false;true
9;true,false,false;workedunder(K, A), workedunder(K, L).;false;false
9;true,false;movie(C, I), workedunder(J, I).;false;true
9;false,true,true;movie(S, P).;false;false
9;false,false;workedunder(T, A).;false;false
9;false,true;movie(M, N), workedunder(N, P).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( workedunder(E, F) )
%   | | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.17153349828640083;  // std dev = 1,076, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.13848346963203217;  // std dev = 1,057, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.2580652792574381;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13358857820223102;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then if ( workedunder(D, A) )
%   | | then return 0.1950343092517008;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( workedunder(F, A), movie(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11886905983073708;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.14950097762850117;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.10697181521430317;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then return 0.03625984322785154;  // std dev = 0,941, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, E) )
%   | then return 0.03018131799500448;  // std dev = 0,939, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.335512
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 3.35 seconds
Total inference time: 1.097 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 3, 0], 'false': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [0.894, 1, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,false': 'workedunder(E, F)', 'true': 'workedunder(A, D)'}, {'false': [0.0, 0, 0], 'true,true': [2.63e-09, 3, 0], 'true,false,true': [0.894, 1, 4], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [1.076, 4, 4]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.057, 4, 4]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [0.894, 1, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 3, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(D, A)', 'true': 'movie(C, D), workedunder(D, E)', 'true,true,false': 'workedunder(F, A), movie(C, E)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false,false': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [2.63e-09, 3, 0], 'false': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'movie(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.941, 4, 4]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [0.939, 4, 4]}]]
[{'': [0.24999999999999986, nan], 'true': [0.15999999999999986, 0.0]}, {'': [0.20948195373304385, nan], 'true,false': [nan, 0.0], 'true': [0.16, 0.0]}, {'': [0.17200226808539504, nan], 'true,false': [0.15999999999999998, nan], 'true': [2.3129646346357427e-18, 0.15999999999999998]}, {'': [0.14475994169199063, nan], 'true': [0.14475994169199063, nan]}, {'': [0.13958031734850312, nan]}, {'': [0.1359514243897747, nan], 'true,false': [nan, -2.3129646346357427e-18], 'true': [0.16, -2.3129646346357427e-18]}, {'': [0.1230942168253059, nan], 'true,true': [0.15999999999999998, 2.3129646346357427e-18], 'true': [0.1230942168253059, nan], 'true,true,false': [nan, 2.3129646346357427e-18]}, {'': [0.11541678753170032, nan], 'true': [0.16, 2.3129646346357427e-18]}, {'': [0.11068278368319408, nan]}, {'': [0.11023121797968219, nan], 'true': [0.11023121797968219, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '2;;genre(A, B) :- workedunder(A, D).;true;true', '5;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(D, A).;true;true', '7;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 3.079 seconds
Total inference time: 0.65 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:15:07
{'Recall': 1.0, 'F1': 0.914894, 'AUC PR': 0.843137, 'Learning time': 6.429, 'AUC ROC': 0.906977, 'Inference time': 0.65, 'Precision': [0.843137, 0.5], 'Mapping results': {'Generating mappings time': 0.23297762870788574, 'Possible mappings': [433], 'Generating paths time': 2.7100508213043213, 'Total time': 2.9730582237243652, 'Numbers preds mapping': [7], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 4096, 'Knowledge compiling time': 0.03001999855041504}, 'parameter': {'Recall': 1.0, 'F1': 0.914894, 'AUC PR': 0.843137, 'Learning time': 3.35, 'AUC ROC': 0.906977, 'Inference time': 1.097, 'Precision': [0.843137, 0.5], 'CLL': -0.335512}, 'CLL': -0.300536}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 4.324 seconds
Total inference time: 0.624 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:15:12
{'Recall': 1.0, 'F1': 0.914894, 'AUC PR': 0.843137, 'Learning time': 4.324, 'AUC ROC': 0.906977, 'Inference time': 0.624, 'Precision': [0.843137, 0.5], 'CLL': -0.300536}


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.789772
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.812 seconds
Total inference time: 0.618 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:15:14
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.843137, 'Learning time': 0.812, 'AUC ROC': 0.906977, 'Inference time': 0.618, 'Precision': [nan, 0.5], 'CLL': -0.789772}


Starting fold 5

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.016414165496826172
   Generating paths time   = 2.837254524230957
   Generating mappings time   = 0.24465322494506836
   Possible mappings   = [433]
   Max mapping   = 4096
   Numbers predicates mapping   = [7]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 3.0983307361602783


Best mapping found: ['sameperson(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;true;workedunder(F, A), movie(E, F).;false;false
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,false;workedunder(N, A).;true;true
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false,false,false;movie(R, A).;false;false
1;;genre(A, B) :- movie(C, A).;true;true
1;false;workedunder(H, A), movie(I, H).;true;true
1;true;workedunder(F, A), movie(C, F).;false;true
1;false,false,true;workedunder(P, Q), movie(R, Q).;false;false
1;true,false;workedunder(G, A).;false;false
1;false,false;workedunder(P, A).;true;false
1;false,true;workedunder(H, J), movie(I, J).;false;false
2;;genre(A, B) :- workedunder(F, E).;true;true
2;false;workedunder(L, A), workedunder(M, L).;false;true
2;true;workedunder(A, E).;false;true
2;true,false,false;workedunder(J, A), movie(K, J).;false;false
2;true,false;workedunder(I, G).;false;true
2;false,false;movie(N, A), workedunder(P, A).;false;true
2;false,false,false;workedunder(Q, A), workedunder(Q, R).;false;false
3;;genre(A, B) :- movie(C, A).;true;true
3;true;movie(C, F), workedunder(F, G).;false;false
3;false;workedunder(H, A), movie(I, H).;true;true
3;false,true,true;movie(I, A).;false;false
3;false,false;workedunder(M, A), workedunder(M, N).;false;true
3;false,true;workedunder(H, J), movie(I, J).;true;false
3;false,false,false;workedunder(S, A), movie(T, A).;false;false
4;;genre(A, B) :- workedunder(F, E).;false;true
4;false;workedunder(L, A), workedunder(M, L).;false;true
4;false,false;workedunder(N, A), movie(P, A).;true;true
4;false,false,true;workedunder(N, Q).;false;false
4;false,false,false;workedunder(R, A), workedunder(R, S).;false;false
5;;genre(A, B) :- movie(E, A).;true;true
5;false;workedunder(I, A), movie(J, A).;true;true
5;true;workedunder(F, A), movie(E, F).;false;true
5;true,false,true;workedunder(G, H).;false;false
5;true,false;workedunder(G, A).;true;false
5;false,false;workedunder(L, A).;false;true
5;false,true;workedunder(I, K), movie(J, K).;false;false
5;false,false,false;workedunder(M, A), workedunder(M, N).;false;false
6;;genre(A, B) :- movie(E, A).;true;true
6;true,true;workedunder(F, A).;false;true
6;true;movie(E, F), workedunder(F, G).;true;false
6;false,false,true;workedunder(M, A), workedunder(M, N).;false;false
6;false;movie(J, A), workedunder(K, A).;false;true
6;false,false;movie(L, A).;true;true
6;true,true,false;workedunder(I, A), movie(E, G).;false;false
6;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
7;;genre(A, B) :- movie(C, A).;true;true
7;true;workedunder(F, A), movie(C, F).;false;false
7;false,false,true;workedunder(L, M), movie(N, M).;false;false
7;false;workedunder(G, A).;true;true
7;false,true,false;workedunder(G, J), movie(K, A).;false;false
7;false,true,true;movie(I, A).;false;false
7;false,false;workedunder(L, A).;true;false
7;false,true;workedunder(G, H), movie(I, H).;true;true
8;;genre(A, B) :- movie(G, E).;false;true
8;false;workedunder(M, A), workedunder(N, M).;false;true
8;false,false;workedunder(P, A), movie(Q, P).;true;true
8;false,false,true;workedunder(P, R).;false;false
8;false,false,false;workedunder(U, A), movie(W, A).;false;false
9;;genre(A, B) :- movie(C, A).;true;true
9;false;movie(M, A).;true;true
9;true;workedunder(H, F).;false;true
9;true,false,false;workedunder(K, A), workedunder(K, L).;false;false
9;true,false;movie(C, I), workedunder(J, I).;false;true
9;false,true,true;movie(S, P).;false;false
9;false,false;workedunder(T, A).;false;false
9;false,true;movie(M, N), workedunder(N, P).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then if ( workedunder(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workedunder(E, F) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then return 0.15795862733523686;  // std dev = 0,519, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.13136113938524718;  // std dev = 0,497, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.3492565898421117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1312111434733987;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), workedunder(D, E) )
%   | then if ( workedunder(D, A) )
%   | | then return 0.27456864642949663;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( workedunder(F, A), movie(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11696361954121094;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.22337011624314085;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.10541385938620104;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then return 0.045569719378073775;  // std dev = 0,283, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, E) )
%   | then return 0.040142927264491673;  // std dev = 0,280, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.314195
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 4.001 seconds
Total inference time: 1.031 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)', 'true,false': 'workedunder(E, F)', 'true': 'workedunder(A, D)'}, {'false': [0.0, 0, 0], 'true,true': [0.0, 2, 0], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'movie(C, D), workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [0.519, 2, 2]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.497, 2, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'false': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(D, A)', 'true': 'movie(C, D), workedunder(D, E)', 'true,true,false': 'workedunder(F, A), movie(C, E)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'movie(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.283, 2, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [0.28, 2, 2]}]]
[{'': [0.25, nan], 'true': [0.0, 0.0]}, {'': [0.17847162811629394, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.11145008534151418, nan], 'true,false': [0.0, nan], 'true': [0.0, 0.0]}, {'': [0.06736877561142736, nan], 'true': [0.06736877561142736, nan]}, {'': [0.06165749246000911, nan]}, {'': [0.05771231068933612, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.03832437882403923, nan], 'true,true': [0.0, 0.0], 'true': [0.03832437882403923, nan], 'true,true,false': [nan, 0.0]}, {'': [0.02702472565765892, nan], 'true': [0.0, 0.0]}, {'': [0.020007624559262242, nan]}, {'': [0.019612650231608277, nan], 'true': [0.019612650231608277, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '2;;genre(A, B) :- workedunder(A, D).;true;true', '5;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '6;;genre(A, B) :- workedunder(D, A).;true;true', '7;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(A, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,260, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,260, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   return 0;  // std dev = 0,144, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   return 0;  // std dev = 0,144, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.306709
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 1.388 seconds
Total inference time: 0.936 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:15:26
{'Recall': 1.0, 'F1': 0.909091, 'AUC PR': 0.833333, 'Learning time': 5.389, 'AUC ROC': 0.9, 'Inference time': 0.936, 'Precision': [0.833333, 0.5], 'Mapping results': {'Generating mappings time': 0.24465322494506836, 'Possible mappings': [433], 'Generating paths time': 2.837254524230957, 'Total time': 3.0983307361602783, 'Numbers preds mapping': [7], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 4096, 'Knowledge compiling time': 0.016414165496826172}, 'parameter': {'Recall': 1.0, 'F1': 0.909091, 'AUC PR': 0.833333, 'Learning time': 4.001, 'AUC ROC': 0.9, 'Inference time': 1.031, 'Precision': [0.833333, 0.5], 'CLL': -0.314195}, 'CLL': -0.306709}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.222 seconds
Total inference time: 0.603 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:15:29
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.5, 'Learning time': 2.222, 'AUC ROC': 0.5, 'Inference time': 0.603, 'Precision': [nan, 0.5], 'CLL': -1.052978}


WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.521 seconds
Total inference time: 0.618 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:15:30
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.5, 'Learning time': 0.521, 'AUC ROC': 0.5, 'Inference time': 0.618, 'Precision': [nan, 0.5], 'CLL': -1.052978}


