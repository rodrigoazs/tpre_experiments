Starting experiment #10 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

Starting experiment #10 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), ta(L, K, M) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(N, B) )
%   | | | then return 0.7734031723876481;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 7,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.5261862825807958;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.730924492272118;  // std dev = 0,069, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109543;  // std dev = 4,21e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | | then return 0.36908066213317675;  // std dev = 1,530, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.6022753891158077;  // std dev = 2,439, 50,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   else return -0.12544463852839158;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(G, A, H), ta(G, I, F) )
%   | | then if ( samecourse(E, G) )
%   | | | then return 0.4104895662080564;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5671300726719913;  // std dev = 0,030, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5667237536875326;  // std dev = 0,081, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | then if ( publication(J, B) )
%   | | | then return 0.5081090089455164;  // std dev = 0,915, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3024623706773498;  // std dev = 1,492, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( hasposition(L, C), tempadvisedby(M, L) )
%   | | | then return 0.5171363622026371;  // std dev = 1,893, 50,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return 0.41333218051658055;  // std dev = 1,254, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( student(B) )
%   | then return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.06665108093539125;  // std dev = 0,234, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(D, B) )
%   | | then return 0.4832735363650322;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | | then return 0.37082603560124605;  // std dev = 0,910, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.42312950259263293;  // std dev = 0,050, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | then return 0.1989724807816173;  // std dev = 0,897, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(J, A, K), tempadvisedby(L, B) )
%   | | | then return 0.43710338066355103;  // std dev = 0,977, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.3373953354148376;  // std dev = 2,617, 59,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=49 */
%   else return -0.10198219881178268;  // std dev = 0,012, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(E, A, G) )
%   | | then return 0.21138175112056987;  // std dev = 0,891, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.33575979386228666;  // std dev = 0,136, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( hasposition(J, C), publication(H, J) )
%   | | | then return 0.1821774009152755;  // std dev = 1,607, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.4943897493439308;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.3024422110382;  // std dev = 1,892, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return 0.21588925327923925;  // std dev = 1,242, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( professor(B) )
%   | then if ( publication(L, B) )
%   | | then return -0.09657013203512142;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.01737321598229774;  // std dev = 0,721, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09265882983204124;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, D, G) )
%   | | | then return 0.24679209934558374;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.31721625477344473;  // std dev = 0,072, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.22199314086425945;  // std dev = 0,904, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.2657196116140792;  // std dev = 0,071, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( publication(K, A), publication(L, B) )
%   | | then if ( publication(K, M), publication(L, M) )
%   | | | then return -0.17520260802262014;  // std dev = 1,014, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2800521051551832;  // std dev = 0,606, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( tempadvisedby(N, B) )
%   | | | then return 0.24648892510216866;  // std dev = 1,490, 39,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return 0.19127277683166236;  // std dev = 1,955, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   else return -0.08555536518474743;  // std dev = 0,015, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), publication(D, E) )
%   | | then return 0.2565527783256903;  // std dev = 0,076, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.2244236842557787;  // std dev = 0,165, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.19360770594039864;  // std dev = 0,895, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( publication(I, A) )
%   | | then if ( hasposition(J, C), publication(I, J) )
%   | | | then return -0.03773069979584517;  // std dev = 1,557, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.29762998121525186;  // std dev = 0,098, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( hasposition(K, C), tempadvisedby(L, K) )
%   | | | then return 0.20657486466866823;  // std dev = 1,652, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | | else return 0.04207816073413717;  // std dev = 1,191, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( professor(B) )
%   | then return -0.06361702055412312;  // std dev = 0,217, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.07872422669769724;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.20455607525486375;  // std dev = 0,129, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.12331770738506645;  // std dev = 0,891, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.18371802077283272;  // std dev = 0,068, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( projectmember(J, B) )
%   | | then if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return 0.2065237484092503;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22579074932858773;  // std dev = 0,673, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(N, A) )
%   | | | then return 0.056773935746929384;  // std dev = 1,524, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.14230018490458762;  // std dev = 2,181, 56,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=50 */
%   else return -0.07364596779010989;  // std dev = 0,016, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( ta(H, E, I) )
%   | | | then return 0.18388137029639615;  // std dev = 0,098, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.046017998742137786;  // std dev = 0,874, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.15836138796593413;  // std dev = 0,075, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(J, A) )
%   | | then if ( hasposition(K, C), publication(J, K) )
%   | | | then return -0.0533525781109059;  // std dev = 1,534, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.22943756162880974;  // std dev = 0,084, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( hasposition(L, C), tempadvisedby(M, L) )
%   | | | then return 0.1437067113409298;  // std dev = 1,653, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | | else return 0.002917233340806672;  // std dev = 1,191, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( student(B) )
%   | then return -0.06835872282005878;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.05913604359926785;  // std dev = 0,215, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( projectmember(D, B) )
%   | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.15502853000116767;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17954632086278674;  // std dev = 0,671, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(H, A), publication(H, B) )
%   | | then if ( ta(I, A, J), tempadvisedby(K, B) )
%   | | | then return 0.10788431397998376;  // std dev = 0,902, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.13840229309738916;  // std dev = 0,067, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( publication(L, A), tempadvisedby(M, B) )
%   | | | then return -0.0026381717290676373;  // std dev = 0,942, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09512960607410675;  // std dev = 2,343, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   else if ( professor(B) )
%   | then if ( publication(N, B) )
%   | | then return -0.0682139898221269;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.013377939197650587;  // std dev = 0,711, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06413161520706753;  // std dev = 4,21e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Predicates from source: ['advisedby(person,person).', 'tempadvisedby(person,person).', 'ta(course,person,quarter).', 'samecourse(course,course).', 'student(person).', 'publication(title,person).', 'professor(person).', 'hasposition(person,faculty).', 'projectmember(project,person).']

Starting fold 1

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.01771092414855957
   Generating paths time   = 2.891228437423706
   Generating mappings time   = 0.35598111152648926
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 3.2649295330047607


Best mapping found: ['publication(A,B) -> movie(A,B)', 'professor(A) -> director(A)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

Target train facts examples: 159
Target train pos examples: 56
Target train neg examples: 56

Target test facts examples: 537
Target test pos examples: 326
Target test neg examples: 326

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false;movie(I, A).;true;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(L, A).;false;false
1;true;movie(G, A), movie(G, B).;false;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true,false;genre(L, C).;false;false
2;true,true;movie(J, B).;false;false
2;true;movie(J, A).;true;true
2;false;actor(B).;false;false
3;;workedunder(A, B) :- director(B), actor(A).;true;false
3;true,false;movie(I, H).;false;false
3;true,true;movie(C, D).;false;false
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;false;director(B).;true;false
4;true,true;genre(J, C), movie(H, J).;false;false
4;true;movie(H, A).;true;true
4;true,false;movie(K, B).;false;false
4;false,true;movie(L, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true,false;movie(K, A), movie(L, B).;true;false
5;true,true;movie(E, D).;false;false
5;true;movie(C, A), movie(C, B).;true;true
5;true,false,true;movie(K, M), movie(L, M).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;false;false
6;true,true;movie(D, E).;false;false
6;true;movie(D, B), movie(D, A).;true;true
6;true,false,true;genre(J, C), movie(I, J).;false;false
6;true,false,false;genre(K, C).;false;false
6;true,false;movie(I, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false;genre(B, J).;false;true
7;true,true;movie(C, D).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(N, A).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;actor(B).;false;false
8;true;movie(D, A), movie(D, B).;false;true
8;true,false,true;genre(K, C), movie(J, K).;false;false
8;true,false,false;genre(L, C).;false;false
8;true,false;movie(J, A).;true;true
9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
9;false;director(B).;true;false
9;true;genre(B, D).;false;true
9;true,false,false;movie(L, A).;false;false
9;true,false;movie(H, A), movie(H, B).;false;true
9;false,true;movie(N, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, C), movie(D, E) )
%   | | then return 0.3134591607855986;  // std dev = 0,410, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25655312949795045;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1226308450418712;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,97e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.21073268045892357;  // std dev = 3,65e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.11003534702957246;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17781125850726218;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.09971318845872554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15328585986932744;  // std dev = 4,47e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.09111230842343153;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(B, D) )
%   | then return 0.1306006680026002;  // std dev = 0,216, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125487
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.084 seconds
Total inference time: 2.071 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'false': [5.16e-08, 55, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 55, 0], 'true,true': [0.0, 0, 56], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'actor(B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)'}, {'true,true,true': [1.03e-07, 0, 56], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 1, 0], 'false,true': [3.8e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 56], 'false': [3.33e-08, 55, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true,true': 'genre(E, C), movie(D, E)', 'true': 'movie(D, A)'}, {'true,true,true': [0.41, 1, 56], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 55, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, H), movie(G, H)'}, {'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'false': [1.97e-08, 55, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true': 'movie(D, B), movie(D, A)', 'true,false,true': 'genre(G, C), movie(F, G)', 'false': 'director(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true': [3.65e-08, 0, 56], 'false,false': [1.49e-08, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'genre(B, E)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [5.16e-08, 0, 56], 'false': [1.05e-08, 55, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(E, A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,true': [4.47e-08, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [1.49e-08, 55, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true': 'genre(B, D)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.216, 1, 56], 'false,false': [0.0, 55, 0], 'false,true': [0.0, 0, 0]}]]
[{'': [0.017236072637734554, 4.844609562000683e-17], 'true,false': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true,false': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'false': [2.62416351275037e-17, nan], 'true,true': [1.9032394707859825e-16, 0.0], 'true': [0.007683847065712494, nan]}, {'': [0.004644692439814939, 2.0185873175002847e-17], 'true,false': [0.0, nan], 'true,true': [-3.489272363107635e-16, nan], 'true': [-3.489272363107635e-16, 0.0]}, {'': [0.0029456817402654088, -2.0185873175002845e-18], 'false': [nan, -2.0185873175002845e-18], 'true,true': [0.0029456817402654088, nan], 'true': [0.0029456817402654088, nan]}, {'': [0.002478210910026975, 7.065055611250995e-18], 'true,false': [0.0, nan], 'true,true': [-2.3790493384824782e-17, nan], 'true': [-2.3790493384824782e-17, 0.0], 'true,false,true': [nan, 0.0]}, {'': [0.0017734561827320115, 4.037174635000569e-18], 'true,false': [0.0, nan], 'true,true': [2.3790493384824782e-17, nan], 'true': [2.3790493384824782e-17, 0.0], 'true,false,true': [0.0, nan], 'false': [nan, 4.037174635000569e-18]}, {'': [0.0013275191890340615, 2.0185873175002845e-18], 'true,false': [0.0, nan], 'true,true': [4.7580986769649563e-17, nan], 'true': [4.7580986769649563e-17, 0.0]}, {'': [0.0010295186276491318, 4.037174635000569e-18], 'false': [4.037174635000569e-18, nan], 'true': [3.568574007723718e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0008211805944656018, -1.5139404881252134e-18], 'false': [nan, -3.0278809762504268e-18], 'true': [0.0008211805944656018, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;true;movie(D, A), movie(D, B).;true;true', '9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5331103429149548;  // std dev = 0,120, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4203215730716789;  // std dev = 0,020, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17738214267363117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.32010041882497403;  // std dev = 5,16e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.30903262147126487;  // std dev = 0,086, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2580580071343183;  // std dev = 0,024, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.19741417209703532;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,97e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21179625602056754;  // std dev = 0,021, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16798873541875273;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17859158205291875;  // std dev = 0,018, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14579897247880666;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15387797727678082;  // std dev = 0,016, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1285616281335897;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( female(A) )
%   | then return 0.1328795750313607;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.12837978738989608;  // std dev = 0,045, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140824
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.412 seconds
Total inference time: 2.28 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:04:08
{'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 4.496, 'AUC ROC': 1.0, 'Inference time': 2.28, 'Precision': [1.0, 0.5], 'Mapping results': {'Generating mappings time': 0.35598111152648926, 'Possible mappings': [864], 'Generating paths time': 2.891228437423706, 'Total time': 3.2649295330047607, 'Numbers preds mapping': [9], 'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 65536, 'Knowledge compiling time': 0.01771092414855957}, 'parameter': {'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 2.084, 'AUC ROC': 1.0, 'Inference time': 2.071, 'Precision': [1.0, 0.5], 'CLL': -0.125487}, 'CLL': -0.140824}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.692818318046742;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5367928709789455;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.40340088328536905;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3078944297924054;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.24240066496454704;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.2097577156325355;  // std dev = 2,98e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.19670004057326632;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16371858628713248;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.139091093402249;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1201377116837435;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.903675
   AUC PR    = 0.837662
   CLL	      = -0.289355
   Precision = 0.840206 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913165


Total learning time: 3.937 seconds
Total inference time: 0.933 seconds
AUC ROC: 0.903675


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:04:13
{'Recall': 1.0, 'F1': 0.913165, 'AUC PR': 0.837662, 'Learning time': 3.937, 'AUC ROC': 0.903675, 'Inference time': 0.933, 'Precision': [0.840206, 0.5], 'CLL': -0.289355}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.903675
   AUC PR    = 0.837662
   CLL	      = -0.727406
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.304 seconds
Total inference time: 0.758 seconds
AUC ROC: 0.903675


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:04:15
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.837662, 'Learning time': 1.304, 'AUC ROC': 0.903675, 'Inference time': 0.758, 'Precision': [nan, 0.5], 'CLL': -0.727406}


Starting fold 2

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.03500819206237793
   Generating paths time   = 2.5392186641693115
   Generating mappings time   = 0.31165122985839844
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 2.8858890533447266


Best mapping found: ['publication(A,B) -> movie(A,B)', 'professor(A) -> director(A)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

Target train facts examples: 150
Target train pos examples: 58
Target train neg examples: 58

Target test facts examples: 546
Target test pos examples: 324
Target test neg examples: 324

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false;movie(I, A).;true;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(L, A).;false;false
1;true;movie(G, A), movie(G, B).;false;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true,false;genre(L, C).;false;false
2;true,true;movie(J, B).;false;false
2;true;movie(J, A).;true;true
2;false;actor(B).;false;false
3;;workedunder(A, B) :- director(B), actor(A).;true;false
3;true,false;movie(I, H).;false;false
3;true,true;movie(C, D).;false;false
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;false;director(B).;true;false
4;true,true;genre(J, C), movie(H, J).;false;false
4;true;movie(H, A).;true;true
4;true,false;movie(K, B).;false;false
4;false,true;movie(L, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true,false;movie(K, A), movie(L, B).;true;false
5;true,true;movie(E, D).;false;false
5;true;movie(C, A), movie(C, B).;true;true
5;true,false,true;movie(K, M), movie(L, M).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;false;false
6;true,true;movie(D, E).;false;false
6;true;movie(D, B), movie(D, A).;true;true
6;true,false,true;genre(J, C), movie(I, J).;false;false
6;true,false,false;genre(K, C).;false;false
6;true,false;movie(I, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false;genre(B, J).;false;true
7;true,true;movie(C, D).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(N, A).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;actor(B).;false;false
8;true;movie(D, A), movie(D, B).;false;true
8;true,false,true;genre(K, C), movie(J, K).;false;false
8;true,false,false;genre(L, C).;false;false
8;true,false;movie(J, A).;true;true
9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
9;false;director(B).;true;false
9;true;genre(B, D).;false;true
9;true,false,false;movie(L, A).;false;false
9;true,false;movie(H, A), movie(H, B).;false;true
9;false,true;movie(N, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, C), movie(D, E) )
%   | | then return 0.31370501456100713;  // std dev = 0,410, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2565062397237695;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.10392102545599229;  // std dev = 0,026, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.21069958979184916;  // std dev = 7,30e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.11190539754705205;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07742773117059418;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17778701004819017;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.08666608876831586;  // std dev = 0,021, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1532674793777896;  // std dev = 3,33e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.09363855949953613;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06648910510528956;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(B, D) )
%   | then return 0.12746070090433084;  // std dev = 0,291, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.126064
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.807 seconds
Total inference time: 1.536 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'false': [5.16e-08, 56, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 56, 0], 'true,true': [0.0, 0, 58], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'actor(B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)'}, {'true,true,true': [1.19e-07, 0, 58], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 2, 0], 'false,true': [3.94e-08, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 58], 'false': [3.8e-08, 56, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true,true': 'genre(E, C), movie(D, E)', 'true': 'movie(D, A)'}, {'true,true,true': [0.41, 1, 58], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 56, 0], 'true,true,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, H), movie(G, H)'}, {'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'false': [1.83e-08, 56, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.026, 2, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true': 'movie(D, B), movie(D, A)', 'true,false,true': 'genre(G, C), movie(F, G)', 'false': 'director(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true': [7.3e-08, 0, 58], 'false,false': [1.83e-08, 56, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'genre(B, E)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 58], 'false': [7.45e-09, 56, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.021, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(E, A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,true': [3.33e-08, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true': [1.67e-08, 56, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true': 'genre(B, D)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.291, 2, 58], 'false,false': [0.0, 56, 0], 'false,true': [0.0, 0, 0]}]]
[{'': [0.03222222222222181, 4.7580986769649563e-17], 'true,false': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.0230030098461001, -2.973811673103098e-17], 'true,false': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0]}, {'': [0.014364677666239759, 1.586032892321652e-17], 'false': [2.7755575615628914e-17, nan], 'true,true': [2.4501473646900006e-16, 0.0], 'true': [0.014364677666239759, nan]}, {'': [0.008683086634361459, 2.577303450022685e-17], 'true,false': [0.0, nan], 'true,true': [-3.3689526264487507e-16, nan], 'true': [-3.3689526264487507e-16, 0.0]}, {'': [0.005506846810506941, -9.912705577010326e-19], 'false': [nan, -9.912705577010326e-19], 'true,true': [0.002847550778199424, 0.0], 'true': [0.005506846810506941, nan]}, {'': [0.004197620033379794, 5.9476233462061954e-18], 'true,false': [0.0003510479659360466, nan], 'true,true': [-1.9907447338106256e-16, nan], 'true': [-1.9907447338106256e-16, 0.0003510479659360466], 'true,false,true': [0.0003510479659360466, nan]}, {'': [0.0030145794177924698, 5.9476233462061954e-18], 'false': [nan, 5.9476233462061954e-18], 'true,true': [9.188052617587502e-17, nan], 'true': [9.188052617587502e-17, 0.00029717736969158207], 'true,false,true': [0.0, 0.0], 'true,false': [0.00029717736969158207, nan]}, {'': [0.002260572309527997, 9.912705577010326e-19], 'true,false': [0.00021290919464213038, nan], 'true,true': [0.0, nan], 'true': [0.0, 0.00021290919464213038]}, {'': [0.0017604330287289065, 4.956352788505163e-18], 'true,false': [0.0001842732184763182, nan], 'true': [1.914177628664063e-17, 0.0001842732184763182], 'false': [4.956352788505163e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.0014073860034736466, -1.982541115402065e-18], 'false': [nan, -2.9738116731030977e-18], 'true': [0.0014073860034736466, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;true;genre(E, C), movie(D, E).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true,false;genre(G, C), movie(F, G).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;true,false;genre(F, C), movie(E, F).;true;true', '8;true;movie(D, A), movie(D, B).;true;true', '9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5235720169872421;  // std dev = 0,142, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.5382463645683382;  // std dev = 0,106, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.42291829403183534;  // std dev = 0,013, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17706371681642905;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C), movie(E, D) )
%   | then if ( female(A) )
%   | | then return 0.30371381217855725;  // std dev = 0,102, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.31104026962823894;  // std dev = 0,075, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2607229028259809;  // std dev = 0,015, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1968599561695889;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21367191521430204;  // std dev = 0,013, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1675776778260079;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.18209446017687686;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1788406358601906;  // std dev = 4,21e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.1454841477685756;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15491366433255016;  // std dev = 0,001, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.12831387574450343;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.12735446303402;  // std dev = 0,045, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140785
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.195 seconds
Total inference time: 1.117 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:34
{'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 9.002, 'AUC ROC': 1.0, 'Inference time': 1.117, 'Precision': [1.0, 0.5], 'Mapping results': {'Generating mappings time': 0.31165122985839844, 'Possible mappings': [864], 'Generating paths time': 2.5392186641693115, 'Total time': 2.8858890533447266, 'Numbers preds mapping': [9], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 65536, 'Knowledge compiling time': 0.03500819206237793}, 'parameter': {'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 5.807, 'AUC ROC': 1.0, 'Inference time': 1.536, 'Precision': [1.0, 0.5], 'CLL': -0.126064}, 'CLL': -0.140785}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.6989783104778774;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.541086978177925;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4066344623991659;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.3025884514838787;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3107971418551718;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.23719304019103774;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2452701034529891;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.19142843787805347;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.19961850189633581;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.19704130244869125;  // std dev = 0,049, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.36428450834325343;  // std dev = 0,797, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16771875489870317;  // std dev = 0,044, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.3257930210983801;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14559662832943784;  // std dev = 0,039, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.2903050856307372;  // std dev = 0,691, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.179547
   Precision = 0.841558 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913963


Total learning time: 4.952 seconds
Total inference time: 1.006 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:04:41
{'Recall': 1.0, 'F1': 0.913963, 'AUC PR': 1.0, 'Learning time': 4.952, 'AUC ROC': 1.0, 'Inference time': 1.006, 'Precision': [0.841558, 0.5], 'CLL': -0.179547}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */


Results
   AUC ROC   = 0.903949
   AUC PR    = 0.837936
   CLL	      = -0.732972
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.07 seconds
Total inference time: 0.994 seconds
AUC ROC: 0.903949


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:04:45
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.837936, 'Learning time': 2.07, 'AUC ROC': 0.903949, 'Inference time': 0.994, 'Precision': [nan, 0.5], 'CLL': -0.732972}


Starting fold 3

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.018612146377563477
   Generating paths time   = 2.7902369499206543
   Generating mappings time   = 0.31163477897644043
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 3.120493173599243


Best mapping found: ['publication(A,B) -> movie(A,B)', 'professor(A) -> director(A)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

Target train facts examples: 163
Target train pos examples: 178
Target train neg examples: 178

Target test facts examples: 533
Target test pos examples: 204
Target test neg examples: 204

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false;movie(I, A).;true;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(L, A).;false;false
1;true;movie(G, A), movie(G, B).;false;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true,false;genre(L, C).;false;false
2;true,true;movie(J, B).;false;false
2;true;movie(J, A).;true;true
2;false;actor(B).;false;false
3;;workedunder(A, B) :- director(B), actor(A).;true;false
3;true,false;movie(I, H).;false;false
3;true,true;movie(C, D).;false;false
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;false;director(B).;true;false
4;true,true;genre(J, C), movie(H, J).;false;false
4;true;movie(H, A).;true;true
4;true,false;movie(K, B).;false;false
4;false,true;movie(L, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true,false;movie(K, A), movie(L, B).;true;false
5;true,true;movie(E, D).;false;false
5;true;movie(C, A), movie(C, B).;true;true
5;true,false,true;movie(K, M), movie(L, M).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;false;false
6;true,true;movie(D, E).;false;false
6;true;movie(D, B), movie(D, A).;true;true
6;true,false,true;genre(J, C), movie(I, J).;false;false
6;true,false,false;genre(K, C).;false;false
6;true,false;movie(I, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false;genre(B, J).;false;true
7;true,true;movie(C, D).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(N, A).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;actor(B).;false;false
8;true;movie(D, A), movie(D, B).;false;true
8;true,false,true;genre(K, C), movie(J, K).;false;false
8;true,false,false;genre(L, C).;false;false
8;true,false;movie(J, A).;true;true
9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
9;false;director(B).;true;false
9;true;genre(B, D).;false;true
9;true,false,false;movie(L, A).;false;false
9;true,false;movie(H, A), movie(H, B).;false;true
9;false,true;movie(N, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0.30712539016606777;  // std dev = 2,850, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.43439164876689973;  // std dev = 0,365, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.12315601817729212;  // std dev = 0,150, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10429320596924664;  // std dev = 0,124, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, C), movie(D, E) )
%   | | then return 0.28232774466955324;  // std dev = 1,352, 141,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=129 */
%   | | else return -0.09089396751196839;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.18505127545100228;  // std dev = 2,158, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09246471894814631;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2789919755275839;  // std dev = 0,427, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.11707346489268405;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12763305402155076;  // std dev = 0,194, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08930174656649947;  // std dev = 0,198, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.20937445642892258;  // std dev = 1,15e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.10484219106342052;  // std dev = 0,002, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07437873138396857;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.11874233120598077;  // std dev = 1,762, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.0783000313860978;  // std dev = 3,80e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.19679083918311943;  // std dev = 0,432, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.08297480816049525;  // std dev = 0,062, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( movie(F, A) )
%   | | | then return -0.15353168874376033;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07810297533290371;  // std dev = 0,242, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.14996629298066222;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.08847811738745824;  // std dev = 0,001, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06424506790070975;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0677311681009173;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0.0829609035643873;  // std dev = 1,509, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(B, D) )
%   | then return 0.10106676468931548;  // std dev = 0,900, 152,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, B) )
%   | | then return 0.07058781071800975;  // std dev = 1,495, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06357757152743654;  // std dev = 4,83e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097942
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.221 seconds
Total inference time: 1.133 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'false': [9.42e-08, 134, 0], 'true,true': [1.09e-06, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [4.59e-08, 44, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 134, 0], 'true,true': [0.0, 0, 178], 'true,false,true': [0.0, 44, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'actor(B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)'}, {'true,true,true': [4.77e-07, 0, 129], 'true,false': [0.0, 0, 0], 'false,false': [2.85, 29, 49], 'true,true,false': [1.05e-08, 23, 0], 'false,true': [9.54e-08, 126, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.365, 0, 178], 'false': [0.124, 134, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.15, 44, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true,true': 'genre(E, C), movie(D, E)', 'true': 'movie(D, A)', 'false,true': 'movie(F, B)'}, {'true,true,true': [1.352, 12, 129], 'true,true,false': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [2.158, 29, 49], 'false,false': [0.0, 126, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, H), movie(G, H)'}, {'true,true,true': [0.427, 0, 178], 'true,false,false': [0.0, 0, 0], 'false': [0.198, 134, 0], 'true,false,true,false': [0.194, 40, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true': 'movie(D, B), movie(D, A)', 'true,false,true': 'genre(G, C), movie(F, G)', 'false': 'director(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true': [1.15e-07, 0, 129], 'false,false': [3.8e-08, 126, 0], 'true,false,true,false': [6.45e-09, 11, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [1.762, 29, 49], 'true,false,true,true': [0.002, 12, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'genre(B, E)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false': 'movie(F, A)'}, {'true,true,true': [0.432, 0, 178], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.062, 23, 0], 'false': [0.242, 134, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false,true': [1.29e-08, 21, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(E, A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,true': [4.21e-08, 0, 129], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [3.73e-09, 11, 0], 'false,false': [1.509, 29, 49], 'false,true': [0.0, 126, 0], 'true,false,true,true': [0.001, 12, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true': 'genre(B, D)', 'false,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true': [0.9, 23, 129], 'false,true,true': [1.495, 29, 49], 'false,false': [4.83e-08, 126, 0]}]]
[{'': [0.15891567242919188, 6.628197161941232e-17], 'true,false': [4.794144879063176e-17, nan], 'true': [6.706246045376226e-15, 4.794144879063176e-17], 'true,false,true': [4.794144879063176e-17, nan]}, {'': [0.11344775516652696, -2.6512788647764932e-17], 'true,false': [-2.7755575615628914e-17, nan], 'true': [-3.193450497798203e-15, -2.7755575615628914e-17]}, {'': [0.057249377286753104, 0.08135941927804699], 'false': [7.225260953909749e-17, 0.10412266355706305], 'true,true': [1.7625866313428842e-15, 4.827056628805028e-18], 'true': [0.057249377286753104, nan]}, {'': [0.050102651617699306, 0.0001145519984067139], 'true,false': [0.0005090887646135175, nan], 'true,true': [0.0007499614158413787, nan], 'true': [0.0007499614158413787, 0.0005090887646135175]}, {'': [0.021370908109535004, 0.041022303591801805], 'false': [0.05972093493415587, -2.819614030794048e-17], 'true,true': [0.01295762292499579, -5.046468293750712e-18], 'true': [0.021370908109535004, nan], 'false,true': [0.05972093493415587, nan]}, {'': [0.027142850333360436, 0.00029247933682736174], 'true,false': [0.0008623749724162779, nan], 'true,true': [0.001022830288508654, nan], 'true': [0.001022830288508654, 0.0008623749724162779], 'true,false,true': [0.0, 0.0009384756585151394]}, {'': [0.011565625569308163, 0.024396340651951443], 'true,false': [0.00023168120505426393, nan], 'true,true': [1.0327656043024712e-16, nan], 'true': [1.0327656043024712e-16, 0.00023168120505426393], 'true,false,true': [2.1885467034234626e-07, 3.784851220313033e-18], 'false': [0.03982523913711306, 1.1454682000100821e-17]}, {'': [0.016718570055795013, 0.0004375001691713886], 'true,false': [0.00016858384429697043, 7.93016446160826e-18], 'true,true': [0.0010504822725089023, nan], 'true': [0.0010504822725089023, 0.0013301203003559853], 'true,false,false': [7.93016446160826e-18, nan]}, {'': [0.006631035527893044, 0.016528220964422656], 'false': [-1.409807015397024e-17, 0.029202063367722575], 'true': [1.3770208057366282e-17, 0.00014661698013608982], 'true,false': [0.00014661698013608982, nan], 'true,false,true': [1.6163678117261013e-07, 1.261617073437678e-18]}, {'': [0.0053264549704087555, 0.0152030436428115], 'false': [0.028643943342947828, 1.850371707708594e-17], 'true': [0.0053264549704087555, nan], 'false,true': [0.028643943342947828, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;false;actor(B).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;false;director(B).;true;true', '4;true;genre(E, C), movie(D, E).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true,false;movie(F, H), movie(G, H).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true,false;genre(G, C), movie(F, G).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '6;false;director(B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true,false;genre(B, E).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;true,false;genre(F, C), movie(E, F).;true;true', '8;true;movie(D, A), movie(D, B).;true;true', '8;false;actor(B).;true;true', '9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '9;false;director(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.39383027184147146;  // std dev = 0,286, 62,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=47 */
%   | | else return 0.4960168531960713;  // std dev = 0,190, 90,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 2,02e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4346834682703537;  // std dev = 0,197, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1336190133291574;  // std dev = 0,205, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10159632948783638;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C), movie(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.33833904956175387;  // std dev = 0,126, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.14545548947495526;  // std dev = 0,029, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.3169828598013212;  // std dev = 8,43e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.09076637513837671;  // std dev = 0,006, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.0926912761892608;  // std dev = 7,60e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26318885510695983;  // std dev = 0,140, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.10661448307006499;  // std dev = 0,153, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08519371402179254;  // std dev = 0,000412, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2189252699830056;  // std dev = 0,096, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11684018249910387;  // std dev = 0,024, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.20622308030660308;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.07616539695123611;  // std dev = 0,009, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.07877610430647942;  // std dev = 3,65e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.184602543282634;  // std dev = 0,010, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.17788395946089042;  // std dev = 0,009, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( genre(B, D) )
%   | | then if ( female(A) )
%   | | | then return -0.10192698956586212;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.11166872861351505;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.069994271025332;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.0732640780590192;  // std dev = 0,000846, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.16642321282049188;  // std dev = 2,98e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.15359745675463912;  // std dev = 4,94e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.09296806688592213;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.10106228430746667;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842531001385332;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.14960431358328324;  // std dev = 0,002, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.06643966123435939;  // std dev = 0,008, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.14459788092795023;  // std dev = 2,58e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.13467306906431747;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( female(A) )
%   | | then return -0.08541961107708887;  // std dev = 8,33e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.09224394543322832;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13155124952089445;  // std dev = 0,002, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.06243564699684998;  // std dev = 0,007, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.06419036855195621;  // std dev = 4,08e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097173
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.401 seconds
Total inference time: 1.312 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:05:07
{'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 15.622, 'AUC ROC': 1.0, 'Inference time': 1.312, 'Precision': [1.0, 0.5], 'Mapping results': {'Generating mappings time': 0.31163477897644043, 'Possible mappings': [864], 'Generating paths time': 2.7902369499206543, 'Total time': 3.120493173599243, 'Numbers preds mapping': [9], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 65536, 'Knowledge compiling time': 0.018612146377563477}, 'parameter': {'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 7.221, 'AUC ROC': 1.0, 'Inference time': 1.133, 'Precision': [1.0, 0.5], 'CLL': -0.097942}, 'CLL': -0.097173}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.12544463852839122;  // std dev = 6,66e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.11231637819360615;  // std dev = 1,04e-07, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.10159632948783644;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.09269127618926074;  // std dev = 8,30e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.0851847513883968;  // std dev = 7,15e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109153;  // std dev = 7,88e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.07324622576333727;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06419184008202626;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.779 seconds
Total inference time: 1.04 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:05:16
{'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 7.779, 'AUC ROC': 1.0, 'Inference time': 1.04, 'Precision': [1.0, 0.5], 'CLL': -0.094637}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.702563
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.876 seconds
Total inference time: 0.972 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:05:19
{'Recall': 0.0, 'F1': nan, 'AUC PR': 1.0, 'Learning time': 1.876, 'AUC ROC': 1.0, 'Inference time': 0.972, 'Precision': [nan, 0.5], 'CLL': -0.702563}


Starting fold 4

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.05930972099304199
   Generating paths time   = 2.7648353576660156
   Generating mappings time   = 0.3178999423980713
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 3.142056465148926


Best mapping found: ['publication(A,B) -> movie(A,B)', 'professor(A) -> director(A)', 'projectmember(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

Target train facts examples: 106
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 590
Target test pos examples: 337
Target test neg examples: 337

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false;movie(I, A).;true;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(L, A).;false;false
1;true;movie(G, A), movie(G, B).;false;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true,false;genre(L, C).;false;false
2;true,true;movie(J, B).;false;false
2;true;movie(J, A).;true;true
2;false;actor(B).;false;false
3;;workedunder(A, B) :- director(B), actor(A).;true;false
3;true,false;movie(I, H).;false;false
3;true,true;movie(C, D).;false;false
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;false;director(B).;true;false
4;true,true;genre(J, C), movie(H, J).;false;false
4;true;movie(H, A).;true;true
4;true,false;movie(K, B).;false;false
4;false,true;movie(L, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true,false;movie(K, A), movie(L, B).;true;false
5;true,true;movie(E, D).;false;false
5;true;movie(C, A), movie(C, B).;true;true
5;true,false,true;movie(K, M), movie(L, M).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;false;false
6;true,true;movie(D, E).;false;false
6;true;movie(D, B), movie(D, A).;true;true
6;true,false,true;genre(J, C), movie(I, J).;false;false
6;true,false,false;genre(K, C).;false;false
6;true,false;movie(I, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false;movie(J, B).;false;true
7;true,true;movie(C, D).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(N, A).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;actor(B).;false;false
8;true;movie(D, A), movie(D, B).;false;true
8;true,false,true;genre(K, C), movie(J, K).;false;false
8;true,false,false;genre(L, C).;false;false
8;true,false;movie(J, A).;true;true
9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
9;false;director(B).;true;false
9;true;movie(D, B).;false;true
9;true,false,false;movie(L, A).;false;false
9;true,false;movie(H, A), movie(H, B).;false;true
9;false,true;movie(N, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, C), movie(D, E) )
%   | | then return 0.26506142670926736;  // std dev = 1,017, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2658924197701948;  // std dev = 6,66e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.11751798903364168;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11751798903364168;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.21730244557561898;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.1058675652050498;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18261073821391427;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.0962561989411196;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15691422309144173;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.08820200790069554;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10782534954258173;  // std dev = 0,538, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125527
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.032 seconds
Total inference time: 1.292 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'false': [3.8e-08, 38, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [0.0, 38, 0], 'true,true': [0.0, 0, 45], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'actor(B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 7, 0], 'false,true': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 45], 'false': [0.0, 38, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true,true': 'genre(E, C), movie(D, E)', 'true': 'movie(D, A)'}, {'true,true,true': [1.017, 7, 45], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 38, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, H), movie(G, H)'}, {'true,true,true': [6.66e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'false': [2.24e-08, 38, 0], 'true,false,true,false': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true': 'movie(D, B), movie(D, A)', 'true,false,true': 'genre(G, C), movie(F, G)', 'false': 'director(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false,false': [0.0, 38, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [3.73e-09, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 45], 'false': [1.05e-08, 38, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.73e-09, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(E, A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.0, 38, 0], 'true,false,true,true': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.538, 7, 45], 'false,false': [0.0, 38, 0], 'false,true': [0.0, 0, 0]}]]
[{'': [0.11649408284023735, 3.7981314000334304e-17], 'true,false': [-7.93016446160826e-18, nan], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.0831635545216455, -1.7529837230923523e-17], 'true,false': [-1.982541115402065e-18, nan], 'true': [-9.473903143468002e-16, -1.982541115402065e-18]}, {'': [0.05193310189730332, -1.1686558153949016e-17], 'false': [-8.764918615461762e-18, nan], 'true,true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true': [0.05193310189730332, nan]}, {'': [0.0313922549076915, -8.764918615461762e-18], 'true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.019909088333742615, -1.1686558153949016e-17], 'false': [nan, -1.1686558153949016e-17], 'true,true': [0.019909088333742615, nan], 'true': [0.019909088333742615, nan]}, {'': [0.017125042750526866, 1.3147377923192643e-17], 'true,false': [0.0, nan], 'true,true': [9.868649107779169e-17, nan], 'true': [9.868649107779169e-17, 0.0], 'true,false,true': [0.0, 0.0]}, {'': [0.012166508727223609, 0.0], 'false': [nan, 0.0], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 1.982541115402065e-18], 'true,false,true': [1.982541115402065e-18, nan], 'true,false': [1.982541115402065e-18, nan]}, {'': [0.009059368387959411, 2.921639538487254e-18], 'true,false': [1.982541115402065e-18, nan], 'true,true': [-6.41462192005646e-17, nan], 'true': [-6.41462192005646e-17, 1.982541115402065e-18]}, {'': [0.006999193605463783, -7.304098846218135e-19], 'true,false': [0.0, nan], 'true': [-2.960594732333751e-17, 0.0], 'false': [-7.304098846218135e-19, nan], 'true,false,true': [0.0, nan]}, {'': [0.005567591079733572, -1.460819769243627e-18], 'false': [nan, -1.460819769243627e-18], 'true': [0.005567591079733572, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true,false;movie(F, H), movie(G, H).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;true;movie(D, A), movie(D, B).;true;true', '9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.45264600367860897;  // std dev = 0,241, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.46976607585655455;  // std dev = 0,223, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360642;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4394978435719034;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1676462803244372;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.335660631710244;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14553658693201824;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26534906095527533;  // std dev = 0,010, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.12835507053031564;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.219124461921109;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.21620915443362687;  // std dev = 2,98e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.11466655082944417;  // std dev = 0,000783, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18233292285772218;  // std dev = 0,000912, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10353014111476669;  // std dev = 0,000716, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1581266528004357;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.15624484750872406;  // std dev = 3,49e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.09430815333383137;  // std dev = 0,000659, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13819540146984535;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1367343014538306;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.0865553121470873;  // std dev = 0,000610, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.135818
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.095 seconds
Total inference time: 1.073 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:36
{'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 9.126999999999999, 'AUC ROC': 1.0, 'Inference time': 1.073, 'Precision': [1.0, 0.5], 'Mapping results': {'Generating mappings time': 0.3178999423980713, 'Possible mappings': [864], 'Generating paths time': 2.7648353576660156, 'Total time': 3.142056465148926, 'Numbers preds mapping': [9], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 65536, 'Knowledge compiling time': 0.05930972099304199}, 'parameter': {'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 4.032, 'AUC ROC': 1.0, 'Inference time': 1.292, 'Precision': [1.0, 0.5], 'CLL': -0.125527}, 'CLL': -0.135818}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.689 seconds
Total inference time: 1.074 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:05:43
{'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 5.689, 'AUC ROC': 1.0, 'Inference time': 1.074, 'Precision': [1.0, 0.5], 'CLL': -0.094637}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.702563
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.143 seconds
Total inference time: 1.149 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:05:46
{'Recall': 0.0, 'F1': nan, 'AUC PR': 1.0, 'Learning time': 1.143, 'AUC ROC': 1.0, 'Inference time': 1.149, 'Precision': [nan, 0.5], 'CLL': -0.702563}


Starting fold 5

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.030500173568725586
   Generating paths time   = 2.7317023277282715
   Generating mappings time   = 0.30589866638183594
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 3.068110942840576


Best mapping found: ['publication(A,B) -> movie(A,B)', 'professor(A) -> director(A)', 'projectmember(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'student(A) -> actor(A)'] 

Transferred target predicate: workedunder 

Target train facts examples: 118
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 578
Target test pos examples: 337
Target test neg examples: 337

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false;movie(I, A).;true;true
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(L, A).;false;false
1;true;movie(G, A), movie(G, B).;false;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true,false;genre(L, C).;false;false
2;true,true;movie(J, B).;false;false
2;true;movie(J, A).;true;true
2;false;actor(B).;false;false
3;;workedunder(A, B) :- director(B), actor(A).;true;false
3;true,false;movie(I, H).;false;false
3;true,true;movie(C, D).;false;false
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;false;director(B).;true;false
4;true,true;genre(J, C), movie(H, J).;false;false
4;true;movie(H, A).;true;true
4;true,false;movie(K, B).;false;false
4;false,true;movie(L, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true,false;movie(K, A), movie(L, B).;true;false
5;true,true;movie(E, D).;false;false
5;true;movie(C, A), movie(C, B).;true;true
5;true,false,true;movie(K, M), movie(L, M).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;false;false
6;true,true;movie(D, E).;false;false
6;true;movie(D, B), movie(D, A).;true;true
6;true,false,true;genre(J, C), movie(I, J).;false;false
6;true,false,false;genre(K, C).;false;false
6;true,false;movie(I, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false;movie(J, B).;false;true
7;true,true;movie(C, D).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(N, A).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;actor(B).;false;false
8;true;movie(D, A), movie(D, B).;false;true
8;true,false,true;genre(K, C), movie(J, K).;false;false
8;true,false,false;genre(L, C).;false;false
8;true,false;movie(J, A).;true;true
9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
9;false;director(B).;true;false
9;true;movie(D, B).;false;true
9;true,false,false;movie(L, A).;false;false
9;true,false;movie(H, A), movie(H, B).;false;true
9;false,true;movie(N, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, C), movie(D, E) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.3207118471601494;  // std dev = 2,58e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), movie(G, H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.15274385809367078;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.12850150583884312;  // std dev = 0,195, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, B) )
%   | | then return 0.13400703000801095;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109577
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.151 seconds
Total inference time: 1.469 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'false': [4.21e-08, 44, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)'}, {'false': [3.16e-08, 44, 0], 'true,true': [0.0, 0, 45], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'actor(B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 35], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 10], 'true,true,false': [0.0, 1, 0], 'false,true': [1.49e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 45], 'false': [2.11e-08, 44, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true,true': 'genre(E, C), movie(D, E)', 'true': 'movie(D, A)', 'false,true': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 35], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [2.58e-08, 0, 10], 'false,false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, A), movie(G, B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(F, H), movie(G, H)'}, {'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true': 'movie(D, B), movie(D, A)', 'true,false,true': 'genre(G, C), movie(F, G)', 'false': 'director(B)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true': [5.37e-08, 0, 35], 'false,false': [0.0, 44, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 45], 'false': [1.18e-08, 44, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(E, A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,true': [0.0, 0, 35], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 10], 'false,true': [9.13e-09, 44, 0], 'true,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true': 'movie(D, B)', 'false,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true': [0.195, 1, 35], 'false,true,true': [5.27e-09, 0, 10], 'false,false': [0.0, 44, 0]}]]
[{'': [0.021266540642723226, 4.0371746350005693e-17], 'true,false': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.015181896531630958, 2.2709107321878203e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0]}, {'': [0.012039361070842395, 0.06726754122121566], 'false': [5.046468293750712e-18, -1.3322676295501878e-16], 'true,true': [-2.0301221021717148e-16, 0.0], 'true': [0.012039361070842395, nan]}, {'': [0.005730803218362994, 1.0092936587501423e-17], 'true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.0046154127961625475, 0.025787703242051048], 'false': [6.661338147750939e-17, -3.784851220313033e-18], 'true,true': [-1.2688263138573217e-17, 0.0], 'true': [0.0046154127961625475, nan], 'false,true': [6.661338147750939e-17, nan]}, {'': [0.0024635773866361816, 1.0092936587501423e-17], 'true,false': [0.0, nan], 'true,true': [-2.960594732333751e-17, nan], 'true': [-2.960594732333751e-17, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.0022483216979789747, 0.012562051391882144], 'true,false': [0.0, nan], 'true,true': [8.247371040072592e-17, nan], 'true': [8.247371040072592e-17, 0.0], 'true,false,true': [nan, 0.0], 'false': [-2.7755575615628914e-17, 0.0]}, {'': [0.0013328055598378111, 3.1540426835941946e-18], 'true,false': [0.0, nan], 'true,true': [-8.388351741612294e-17, nan], 'true': [-8.388351741612294e-17, 0.0]}, {'': [0.0013210484980177202, 0.007381096369877044], 'false': [1.8924256101565167e-18, -8.326672684688674e-18], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.001060877873205172, 0.005927444624892194], 'false': [2.7755575615628915e-18, -2.523234146875356e-18], 'true': [0.001060877873205172, nan], 'false,true': [2.7755575615628915e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;false;actor(B).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;false;director(B).;true;true', '4;true;genre(E, C), movie(D, E).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true;movie(C, A), movie(C, B).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;false;director(B).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;false;actor(B).;true;true', '8;true;movie(D, A), movie(D, B).;true;true', '9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '9;false;director(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5182729470274017;  // std dev = 0,153, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4209315791277766;  // std dev = 0,029, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17522745731868575;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C), movie(E, D) )
%   | then if ( female(A) )
%   | | then return 0.30145785222811394;  // std dev = 0,110, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.3199676740326334;  // std dev = 2,98e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.3199676740326334;  // std dev = 1,49e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25870557730833865;  // std dev = 0,035, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19422420260642873;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0851847513883968;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21326350673870412;  // std dev = 0,028, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.16561673354218745;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.20873067457388444;  // std dev = 1,67e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1789286234936555;  // std dev = 0,026, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1439782796480966;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15479052041862973;  // std dev = 0,022, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.12712610182441153;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.15183858978613918;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( female(A) )
%   | then return 0.12492266111527567;  // std dev = 0,058, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.13243755217858746;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( director(B) )
%   | then return 0.1332999037136824;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10824
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.597 seconds
Total inference time: 1.19 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:59
{'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 5.747999999999999, 'AUC ROC': 1.0, 'Inference time': 1.19, 'Precision': [1.0, 0.5], 'Mapping results': {'Generating mappings time': 0.30589866638183594, 'Possible mappings': [864], 'Generating paths time': 2.7317023277282715, 'Total time': 3.068110942840576, 'Numbers preds mapping': [9], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 65536, 'Knowledge compiling time': 0.030500173568725586}, 'parameter': {'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 2.151, 'AUC ROC': 1.0, 'Inference time': 1.469, 'Precision': [1.0, 0.5], 'CLL': -0.109577}, 'CLL': -0.10824}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.6861389866026452;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5321349378684588;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3999123396959217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3047860505335217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.23934386074685432;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.19360164133068228;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.20975771563253573;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1605656866455847;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.17709649774527747;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.16542775201789628;  // std dev = 0,083, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.3197645944650544;  // std dev = 0,616, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.14385447188457903;  // std dev = 0,074, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.2907205430207032;  // std dev = 0,588, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.213649
   Precision = 0.844612 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.915761


Total learning time: 7.302 seconds
Total inference time: 1.074 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:06:07
{'Recall': 1.0, 'F1': 0.915761, 'AUC PR': 1.0, 'Learning time': 7.302, 'AUC ROC': 1.0, 'Inference time': 1.074, 'Precision': [0.844612, 0.5], 'CLL': -0.213649}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */


Results
   AUC ROC   = 0.907946
   AUC PR    = 0.844488
   CLL	      = -0.726634
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.211 seconds
Total inference time: 0.814 seconds
AUC ROC: 0.907946


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:06:09
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.844488, 'Learning time': 1.211, 'AUC ROC': 0.907946, 'Inference time': 0.814, 'Precision': [nan, 0.5], 'CLL': -0.726634}


