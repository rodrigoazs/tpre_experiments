Starting experiment #4 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), ta(L, K, M) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(N, B) )
%   | | | then return 0.7734031723876481;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 7,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.5261862825807958;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.730924492272118;  // std dev = 0,069, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then if ( ta(H, A, I) )
%   | | | then return 0.6041490710758831;  // std dev = 0,915, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7194734122109542;  // std dev = 7,30e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( tempadvisedby(J, B), publication(K, A) )
%   | | | then return 0.36908066213317675;  // std dev = 1,530, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.6022753891158077;  // std dev = 2,439, 50,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   else return -0.12544463852839158;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(E, A, G) )
%   | | then return 0.4104895662080564;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5668366200721044;  // std dev = 0,087, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.5036627885986859;  // std dev = 0,919, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3024623706773498;  // std dev = 1,492, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( hasposition(J, C), tempadvisedby(K, J) )
%   | | | then return 0.5182669928123037;  // std dev = 1,894, 50,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return 0.41333218051658055;  // std dev = 1,254, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( student(B) )
%   | then return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( publication(L, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.0551230450865158;  // std dev = 0,736, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), publication(D, E) )
%   | | then return 0.4763226489634504;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.3677208292319739;  // std dev = 0,916, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.4252380343457741;  // std dev = 0,067, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(I, A) )
%   | | then if ( hasposition(J, C), publication(I, J) )
%   | | | then return 0.10542655687972279;  // std dev = 1,665, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.5243706052999585;  // std dev = 0,157, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( hasposition(K, C), tempadvisedby(L, K) )
%   | | | then return 0.4072116847529329;  // std dev = 1,644, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | | else return 0.23264390853184744;  // std dev = 1,192, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( student(B) )
%   | then return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.06169471073240645;  // std dev = 0,231, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.332294689549939;  // std dev = 0,150, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.20688586074803425;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3322925290423029;  // std dev = 0,038, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then if ( publication(J, L), publication(K, L) )
%   | | | then return -0.07296550885525571;  // std dev = 1,047, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3380567840575219;  // std dev = 0,628, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( ta(M, A, N) )
%   | | | then return 0.32096963183112764;  // std dev = 1,325, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return 0.25733878633229273;  // std dev = 2,038, 38,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   else return -0.09315851941394428;  // std dev = 0,021, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.13803027341298688;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.26840911150306374;  // std dev = 0,127, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( ta(G, A, H) )
%   | | then if ( ta(G, I, J), tempadvisedby(I, K) )
%   | | | then return 0.31887634279289495;  // std dev = 0,100, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.19651363789142892;  // std dev = 1,693, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else if ( publication(L, B), publication(L, A) )
%   | | | then return 0.2609388184348387;  // std dev = 0,020, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.14560116700211004;  // std dev = 2,158, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   else return -0.08558151638263352;  // std dev = 0,019, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), tempadvisedby(E, D) )
%   | then if ( sameperson(B, D), publication(F, B) )
%   | | then if ( ta(G, E, H) )
%   | | | then return 0.20086748935094026;  // std dev = 0,917, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return 0.12978075301725167;  // std dev = 1,690, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | else if ( publication(I, A), publication(I, E) )
%   | | | then return 0.3970722092098239;  // std dev = 0,215, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18798910311435793;  // std dev = 1,609, 44,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | else if ( publication(J, A) )
%   | | then return 0.2686120977513872;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.05356760947506292;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.049256254083433294;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( professor(B) )
%   | then return -0.0601462894635842;  // std dev = 0,219, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.0787140756253058;  // std dev = 4,08e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.24209412519314336;  // std dev = 0,078, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1780582528589495;  // std dev = 0,034, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.19546954743874378;  // std dev = 0,134, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.15036207958211847;  // std dev = 0,891, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( publication(K, A) )
%   | | then if ( publication(K, L), ta(M, L, N) )
%   | | | then return 0.1915758774411677;  // std dev = 1,186, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.10059875037023024;  // std dev = 1,011, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( tempadvisedby(P, B), publication(Q, P) )
%   | | | then return 0.216408357463685;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14456103126335962;  // std dev = 2,150, 57,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=51 */
%   else return -0.07369097064793567;  // std dev = 0,020, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), publication(D, E) )
%   | | then return 0.19904874548387605;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(D, F), ta(G, F, H) )
%   | | | then return 0.12560168876919994;  // std dev = 0,905, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.15710140053743107;  // std dev = 0,048, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then return -0.026036841314572522;  // std dev = 0,736, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(K, A, L), tempadvisedby(M, B) )
%   | | | then return 0.1701662732852024;  // std dev = 0,996, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.10175882086894339;  // std dev = 2,286, 57,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   else if ( student(B) )
%   | then return -0.06834758990083854;  // std dev = 1,49e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( publication(N, B) )
%   | | then return -0.07216598181121626;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.013153729065675265;  // std dev = 0,712, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.009264676164260632;  // std dev = 0,887, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.14580844851778021;  // std dev = 0,108, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | then if ( publication(G, I), student(I) )
%   | | | then return 0.09939475317609192;  // std dev = 1,264, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return -0.07195134998683529;  // std dev = 0,952, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.11818301125822275;  // std dev = 1,567, 42,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return 0.06987026400826245;  // std dev = 1,483, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.06458595172823653;  // std dev = 0,021, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */


Predicates from source: ['advisedby(person,person).', 'student(person).', 'hasposition(person,faculty).', 'tempadvisedby(person,person).', 'publication(title,person).', 'sameperson(person,person).', 'professor(person).', 'ta(course,person,quarter).']

Starting fold 1

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.023581504821777344
   Generating paths time   = 4.252573728561401
   Generating mappings time   = 0.2620666027069092
   Possible mappings   = [288]
   Max mapping   = 16384
   Numbers predicates mapping   = [8]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 4.538231611251831


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 159
Target train pos examples: 56
Target train neg examples: 56

Target test facts examples: 537
Target test pos examples: 326
Target test neg examples: 326

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(G, A), movie(G, B).;false;true
1;true,false;movie(K, A).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(H, A).;true;true
2;false;actor(B).;false;true
2;true,false;genre(J, C).;false;false
2;true,true;movie(H, B).;false;false
2;false,false;movie(L, B).;false;false
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, A), movie(D, B).;true;true
3;false;actor(B).;false;false
3;true,false,false;genre(K, C).;false;false
3;true,false;movie(I, A).;true;true
3;true,true;movie(D, E).;false;false
3;true,false,true;genre(J, C), movie(I, J).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, B), movie(C, A).;false;true
4;true,false,true;movie(J, L), movie(K, L).;false;false
4;true,false;movie(J, A), movie(K, B).;true;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(L, B), movie(L, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;genre(D, C).;true;true
6;false;director(B).;false;false
6;true,false,false;movie(K, B).;false;false
6;true,true,false;movie(I, A), movie(I, E).;false;false
6;true,false;movie(J, A).;false;true
6;true,true;movie(F, B).;false;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(Q, P).;false;false
7;true,false;movie(K, A).;true;true
7;true,true;movie(E, D).;false;false
7;true,false,true;movie(K, L).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
8;false;actor(B).;false;true
8;true,true,false;movie(D, F).;false;false
8;true,false;movie(J, I).;false;false
8;true,true;movie(D, E).;false;true
8;false,false;movie(N, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(G, B).;true;true
9;true,true;movie(G, I), actor(I).;false;false
9;true,false;movie(J, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.20469570738054216;  // std dev = 0,286, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1778354072548556;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.09497157366234624;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15330416428607482;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.08711663223980547;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.13067452148508338;  // std dev = 0,213, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.1248
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.586 seconds
Total inference time: 2.537 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 1, 0], 'false': [5.16e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A)', 'false': 'actor(B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.03e-07, 0, 56], 'false,true': [3.8e-08, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'genre(G, C), movie(F, G)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [3.33e-08, 55, 0], 'true,true,true': [0.0, 0, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 1, 0], 'false': [1.83e-08, 55, 0], 'true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'director(B)', 'true,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [1.49e-08, 55, 0], 'true,true,true': [0.286, 1, 56], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)'}, {'true,false,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [1.49e-08, 55, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true,true': [0.213, 1, 56], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.017236072637734554, 4.844609562000683e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'true': [0.007683847065712494, nan], 'false': [2.62416351275037e-17, nan], 'true,true': [1.9032394707859825e-16, 0.0]}, {'': [0.004644692439814939, 2.0185873175002847e-17], 'true': [-3.489272363107635e-16, 0.0], 'false': [2.0185873175002847e-17, nan], 'true,false': [0.0, nan], 'true,true': [-3.489272363107635e-16, nan], 'true,false,true': [0.0, nan]}, {'': [0.0029456817402654088, -3.0278809762504268e-18], 'true': [-1.2688263138573217e-16, 0.0], 'true,false,true': [nan, 0.0], 'true,false': [0.0, nan]}, {'': [0.001996676351744731, 6.0557619525008536e-18], 'true': [-3.172065784643304e-17, 0.0]}, {'': [0.0014349399424219715, 4.037174635000569e-18], 'true': [0.0014349399424219715, nan], 'false': [nan, 4.037174635000569e-18], 'true,true': [0.0014349399424219715, nan]}, {'': [0.001282771417322517, 2.0185873175002845e-18], 'true': [-1.1895246692412391e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-1.1895246692412391e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0009962822180731418, 4.037174635000569e-18], 'true': [-4.3615904538845435e-17, 0.0], 'false': [4.037174635000569e-18, nan], 'true,true': [-4.3615904538845435e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0007958291122952621, -3.0278809762504268e-18], 'true': [0.0007958291122952621, nan], 'true,true': [0.0007958291122952621, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;true;movie(D, A), movie(D, B).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5331103429149548;  // std dev = 0,120, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4203215730716789;  // std dev = 0,020, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17738214267363117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32261875832735304;  // std dev = 0,018, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15296051391952323;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2564745572796132;  // std dev = 0,016, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1341761471394236;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.20876204750961225;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.2014021100964352;  // std dev = 0,060, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1786151201634191;  // std dev = 0,016, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14217980151668425;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1538956163686154;  // std dev = 0,014, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12570479113895325;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13311689868609008;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1282684936513127;  // std dev = 0,045, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137652
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.867 seconds
Total inference time: 2.332 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 14:58:27
{'CLL': -0.137652, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.1248, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 2.537, 'Learning time': 4.586, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 2.332, 'Mapping results': {'Knowledge compiling time': 0.023581504821777344, 'Generating paths time': 4.252573728561401, 'Possible mappings': [288], 'Max mapping': 16384, 'Finding best mapping': 9.5367431640625e-07, 'Generating mappings time': 0.2620666027069092, 'Numbers preds mapping': [8], 'Total time': 4.538231611251831}, 'Learning time': 10.453, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.692818318046742;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5367928709789455;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.40340088328536905;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3078944297924054;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.24240066496454704;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return 0.20288525507502564;  // std dev = 0,130, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.1781002678527207;  // std dev = 1,49e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16274177988221666;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.15350489269744724;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1383491510875724;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13460087793477848;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.11955833649328516;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.903675
   AUC PR    = 0.837662
   CLL	      = -0.289326
   Precision = 0.840206 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913165


Total learning time: 8.274 seconds
Total inference time: 2.01 seconds
AUC ROC: 0.903675


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 14:58:38
{'CLL': -0.289326, 'Recall': 1.0, 'F1': 0.913165, 'AUC ROC': 0.903675, 'Inference time': 2.01, 'Learning time': 8.274, 'Precision': [0.840206, 0.5], 'AUC PR': 0.837662}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.903675
   AUC PR    = 0.837662
   CLL	      = -0.727406
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.089 seconds
Total inference time: 1.519 seconds
AUC ROC: 0.903675


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 14:58:42
{'CLL': -0.727406, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.903675, 'Inference time': 1.519, 'Learning time': 2.089, 'Precision': [nan, 0.5], 'AUC PR': 0.837662}


Starting fold 2

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.022467613220214844
   Generating paths time   = 4.628923416137695
   Generating mappings time   = 0.32186293601989746
   Possible mappings   = [288]
   Max mapping   = 16384
   Numbers predicates mapping   = [8]
   Finding best mapping   = 2.1457672119140625e-06
   Total time   = 4.973266363143921


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 150
Target train pos examples: 58
Target train neg examples: 58

Target test facts examples: 546
Target test pos examples: 324
Target test neg examples: 324

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(G, A), movie(G, B).;false;true
1;true,false;movie(K, A).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(H, A).;true;true
2;false;actor(B).;false;true
2;true,false;genre(J, C).;false;false
2;true,true;movie(H, B).;false;false
2;false,false;movie(L, B).;false;false
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, A), movie(D, B).;true;true
3;false;actor(B).;false;false
3;true,false,false;genre(K, C).;false;false
3;true,false;movie(I, A).;true;true
3;true,true;movie(D, E).;false;false
3;true,false,true;genre(J, C), movie(I, J).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, B), movie(C, A).;false;true
4;true,false,true;movie(J, L), movie(K, L).;false;false
4;true,false;movie(J, A), movie(K, B).;true;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(L, B), movie(L, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;genre(D, C).;true;true
6;false;director(B).;false;false
6;true,false,false;movie(K, B).;false;false
6;true,true,false;movie(I, A), movie(I, E).;false;false
6;true,false;movie(J, A).;false;true
6;true,true;movie(F, B).;false;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(Q, P).;false;false
7;true,false;movie(K, A).;true;true
7;true,true;movie(E, D).;false;false
7;true,false,true;movie(K, L).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
8;false;actor(B).;false;true
8;true,true,false;movie(D, F).;false;false
8;true,false;movie(J, I).;false;false
8;true,true;movie(D, E).;false;true
8;false,false;movie(N, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(G, B).;true;true
9;true,true;movie(G, I), actor(I).;false;false
9;true,false;movie(J, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.20013989995374806;  // std dev = 0,401, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.17850248968197865;  // std dev = 5,77e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.09458071492239328;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15380960936526583;  // std dev = 3,33e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.08678597410382945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.1276722146941647;  // std dev = 0,299, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125554
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.803 seconds
Total inference time: 2.913 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'false': [5.16e-08, 56, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A)', 'false': 'actor(B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 58], 'false,true': [3.94e-08, 56, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'genre(G, C), movie(F, G)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'false,true': [3.8e-08, 56, 0], 'true,true,true': [0.0, 0, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'false': [0.0, 56, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 2, 0], 'false': [1.83e-08, 56, 0], 'true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'director(B)', 'true,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [1.83e-08, 56, 0], 'true,true,true': [0.401, 2, 58], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [5.77e-08, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [7.45e-09, 56, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)'}, {'true,false,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [1.67e-08, 56, 0], 'true,true,true': [3.33e-08, 0, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0], 'true,true,true': [0.299, 2, 58], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.03222222222222181, 4.7580986769649563e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0230030098461001, -2.973811673103098e-17], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014364677666239759, 1.586032892321652e-17], 'true': [0.014364677666239759, nan], 'false': [2.7755575615628914e-17, nan], 'true,true': [2.4501473646900006e-16, 0.0]}, {'': [0.008683086634361459, 2.577303450022685e-17], 'true': [-3.3689526264487507e-16, 0.0], 'false': [2.577303450022685e-17, nan], 'true,false': [0.0, nan], 'true,true': [-3.3689526264487507e-16, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.005506846810506941, -1.982541115402065e-18], 'true': [-1.5313421029312505e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0037327151297170975, 5.9476233462061954e-18], 'true': [-3.062684205862501e-17, 0.0]}, {'': [0.002682568974502808, 5.9476233462061954e-18], 'true': [0.002682568974502808, nan], 'false': [nan, 5.9476233462061954e-18], 'true,true': [0.002682568974502808, nan]}, {'': [0.002402954069414291, 9.912705577010326e-19], 'true': [5.74253288599219e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [5.74253288599219e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0018652231208446835, 4.956352788505163e-18], 'true': [1.914177628664063e-17, 0.0], 'false': [4.956352788505163e-18, nan], 'true,true': [1.914177628664063e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0014893123378043568, -2.9738116731030977e-18], 'true': [0.0014893123378043568, nan], 'true,true': [0.0014893123378043568, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '3;true,false;genre(G, C), movie(F, G).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;true;movie(D, A), movie(D, B).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5235720169872421;  // std dev = 0,142, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.5382463645683382;  // std dev = 0,106, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.42291829403183534;  // std dev = 0,013, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.17706371681642905;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3264879912347468;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.3232694490984813;  // std dev = 5,16e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.15271915959310292;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926105;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25767290676873933;  // std dev = 0,001, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13398786498193146;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.19700473249304737;  // std dev = 0,071, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.20238070478599365;  // std dev = 0,052, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18000914718857255;  // std dev = 0,001, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14179890762552688;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15495003371494223;  // std dev = 0,001, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12540353331808046;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.12746014147884233;  // std dev = 0,045, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137916
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.427 seconds
Total inference time: 2.69 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 14:59:05
{'CLL': -0.137916, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.125554, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 2.913, 'Learning time': 5.803, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 2.69, 'Mapping results': {'Knowledge compiling time': 0.022467613220214844, 'Generating paths time': 4.628923416137695, 'Possible mappings': [288], 'Max mapping': 16384, 'Finding best mapping': 2.1457672119140625e-06, 'Generating mappings time': 0.32186293601989746, 'Numbers preds mapping': [8], 'Total time': 4.973266363143921}, 'Learning time': 10.23, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.6989783104778774;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.541086978177925;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4066344623991659;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.3025884514838787;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3107971418551718;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.23719304019103774;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2452701034529891;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.19142843787805347;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.19961850189633581;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.19704130244869125;  // std dev = 0,049, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.36428450834325343;  // std dev = 0,797, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.16771875489870317;  // std dev = 0,044, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.3257930210983801;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14559662832943784;  // std dev = 0,039, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.2903050856307372;  // std dev = 0,691, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.179547
   Precision = 0.841558 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913963


Total learning time: 8.072 seconds
Total inference time: 1.549 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 14:59:15
{'CLL': -0.179547, 'Recall': 1.0, 'F1': 0.913963, 'AUC ROC': 1.0, 'Inference time': 1.549, 'Learning time': 8.072, 'Precision': [0.841558, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 0.903949
   AUC PR    = 0.837936
   CLL	      = -0.732972
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.202 seconds
Total inference time: 1.626 seconds
AUC ROC: 0.903949


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 14:59:20
{'CLL': -0.732972, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.903949, 'Inference time': 1.626, 'Learning time': 3.202, 'Precision': [nan, 0.5], 'AUC PR': 0.837936}


Starting fold 3

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.041960954666137695
   Generating paths time   = 4.354307174682617
   Generating mappings time   = 0.3490893840789795
   Possible mappings   = [288]
   Max mapping   = 16384
   Numbers predicates mapping   = [8]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 4.745368003845215


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 163
Target train pos examples: 178
Target train neg examples: 178

Target test facts examples: 533
Target test pos examples: 204
Target test neg examples: 204

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(G, A), movie(G, B).;false;true
1;true,false;movie(K, A).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(H, A).;true;true
2;false;actor(B).;false;true
2;true,false;genre(J, C).;false;false
2;true,true;movie(H, B).;false;false
2;false,false;movie(L, B).;false;false
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, A), movie(D, B).;true;true
3;false;actor(B).;false;false
3;true,false,false;genre(K, C).;false;false
3;true,false;movie(I, A).;true;true
3;true,true;movie(D, E).;false;false
3;true,false,true;genre(J, C), movie(I, J).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, B), movie(C, A).;false;true
4;true,false,true;movie(J, L), movie(K, L).;false;false
4;true,false;movie(J, A), movie(K, B).;true;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(L, B), movie(L, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;genre(D, C).;true;true
6;false;director(B).;false;false
6;true,false,false;movie(K, B).;false;false
6;true,true,false;movie(I, A), movie(I, E).;false;false
6;true,false;movie(J, A).;false;true
6;true,true;movie(F, B).;false;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(Q, P).;false;false
7;true,false;movie(K, A).;true;true
7;true,true;movie(E, D).;false;false
7;true,false,true;movie(K, L).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
8;false;actor(B).;false;true
8;true,true,false;movie(D, F).;false;false
8;true,false;movie(J, I).;false;false
8;true,true;movie(D, E).;false;true
8;false,false;movie(N, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(G, B).;true;true
9;true,true;movie(G, I), actor(I).;false;false
9;true,false;movie(J, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, B) )
%   | | then return 0.30712539016606777;  // std dev = 2,850, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1015963294878364;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0.24623281818069068;  // std dev = 2,670, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3474939838538853;  // std dev = 0,580, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13871525068935683;  // std dev = 0,277, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09792499041812769;  // std dev = 0,240, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2739235456979117;  // std dev = 0,515, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11973087025919436;  // std dev = 0,260, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.0896465820226191;  // std dev = 0,224, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.16054853936703917;  // std dev = 1,219, 152,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.11996694807967369;  // std dev = 1,819, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.07807600689732283;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1989177419241827;  // std dev = 0,461, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12138483012261782;  // std dev = 0,250, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07848510354099145;  // std dev = 0,269, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15041035811635128;  // std dev = 5,58e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.07639573199468198;  // std dev = 0,006, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06752521079824442;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(H, B) )
%   | | then return 0.08215779641418337;  // std dev = 1,572, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.10003537684139355;  // std dev = 1,650, 222,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0698255732083808;  // std dev = 0,295, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097731
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.939 seconds
Total inference time: 2.235 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.09e-06, 0, 178], 'true,false,true,true': [4.59e-08, 44, 0], 'false': [9.42e-08, 134, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true': [0.0, 44, 0], 'true,true': [0.0, 0, 178], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 134, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A)', 'false': 'actor(B)', 'true,true': 'movie(D, B)', 'false,false': 'movie(E, B)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [9.54e-08, 126, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [2.85, 29, 49], 'true,true,true': [4.77e-07, 0, 129], 'true,true,false': [1.05e-08, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'genre(G, C), movie(F, G)'}, {'true,false,true,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 11, 0], 'false,true': [0.0, 126, 0], 'true,true,true': [3.77e-07, 0, 129], 'false,false': [2.67, 29, 49]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.58, 0, 178], 'true,false,true,true': [0.0, 4, 0], 'false': [0.24, 134, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.277, 40, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.26, 44, 0], 'false': [0.224, 134, 0], 'true,true': [0.515, 0, 178]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'director(B)', 'true,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 126, 0], 'true,true,true': [1.219, 23, 129], 'false,true': [1.819, 29, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.461, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.25, 44, 0], 'false': [0.269, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)', 'false,false': 'movie(H, B)'}, {'true,false,true': [0.006, 23, 0], 'true,true,true': [5.58e-08, 0, 129], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 126, 0], 'false,false,true': [1.572, 29, 49], 'false,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,false': [0.0, 0, 0], 'false': [0.295, 134, 0], 'true,true,true': [1.65, 44, 178], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.15891567242919188, 6.628197161941232e-17], 'true': [6.706246045376226e-15, 4.794144879063176e-17], 'true,false,true': [4.794144879063176e-17, nan], 'true,false': [4.794144879063176e-17, nan]}, {'': [0.11344775516652696, -2.6512788647764932e-17], 'true': [-3.193450497798203e-15, -2.7755575615628914e-17], 'true,false': [-2.7755575615628914e-17, nan]}, {'': [0.057249377286753104, 0.08135941927804699], 'true': [0.057249377286753104, nan], 'false': [7.225260953909749e-17, 0.10412266355706305], 'true,true': [1.7625866313428842e-15, 4.827056628805028e-18], 'false,false': [0.10412266355706305, nan]}, {'': [0.03460580977131374, 0.06352241371946962], 'true': [1.1016166445893026e-15, -1.206764157201257e-17], 'false': [-3.172065784643304e-17, 0.09140944253505334], 'true,false': [-1.206764157201257e-17, nan], 'true,true': [1.1016166445893026e-15, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.0388178854625321, 0.00043142029291369326], 'true': [0.0018883568799754015, 0.0019173059135011868], 'true,false,true': [0.0, 0.001916472302234451], 'true,false': [0.0019173059135011868, nan]}, {'': [0.026127342287938428, 0.00037335721377959553], 'true': [0.0014922476723587532, 0.0015372443635959848]}, {'': [0.00978181791165184, 0.025481673818891503], 'true': [0.00978181791165184, nan], 'false': [0.042419634964400016, -2.9077269692563625e-17], 'true,true': [0.00978181791165184, nan]}, {'': [0.01754116300216904, 0.0005384731811708158], 'true': [0.0011927189527521807, 0.0014182065837860423], 'true,false,true': [0.0014182065837860423, nan], 'true,true': [0.0011927189527521807, nan], 'true,false': [0.0014182065837860423, nan]}, {'': [0.006606253756151803, 0.017401642497071594], 'true': [2.4097864100390994e-17, 1.5538703218141654e-06], 'false': [-2.7315010923317342e-17, 0.03167360408069723], 'true,false': [1.5538703218141654e-06, nan], 'true,true': [2.4097864100390994e-17, nan], 'false,false': [0.03167360408069723, nan]}, {'': [0.0122635349403698, 0.0006511739657194322], 'true': [0.0122635349403698, nan], 'true,true': [0.0122635349403698, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '2;false;actor(B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '3;false;actor(B).;true;true', '3;true,false;genre(G, C), movie(F, G).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '4;true,false;movie(D, F), movie(E, F).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;false;director(B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;true;movie(D, A), movie(D, B).;true;true', '8;false;actor(B).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.39383027184147146;  // std dev = 0,286, 62,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=47 */
%   | | else return 0.4960168531960713;  // std dev = 0,190, 90,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 2,02e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4412053622353926;  // std dev = 0,138, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.16285711596688546;  // std dev = 0,032, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1015963294878364;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.41751358415831047;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.33694599990009066;  // std dev = 0,015, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32791440175380004;  // std dev = 0,020, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.12068847805836358;  // std dev = 0,106, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.11563848912346349;  // std dev = 0,126, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2662864177016935;  // std dev = 0,013, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.26008220537974763;  // std dev = 0,017, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.10850486593267328;  // std dev = 0,020, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.10440782368832993;  // std dev = 0,026, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.08518475138839678;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.22866047250571714;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.2136872410458573;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( female(A) )
%   | | then return -0.11249395042549354;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.12409803885675295;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2056171020477024;  // std dev = 0,006, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.07640161794325172;  // std dev = 0,008, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.07877675473109154;  // std dev = 7,07e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.18277102948760954;  // std dev = 0,009, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1796558921335812;  // std dev = 0,010, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.08983638297775122;  // std dev = 0,015, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.08684454312275985;  // std dev = 0,020, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07325586102800787;  // std dev = 0,000443, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.16419756430989343;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.154964274349476;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( female(A) )
%   | | then return -0.09382116338652528;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10292629652137018;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.06842636364944527;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1493781227960019;  // std dev = 0,006, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.06583197189136195;  // std dev = 0,009, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13731180419671188;  // std dev = 0,006, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1355367138600821;  // std dev = 0,007, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07653173811213208;  // std dev = 0,012, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.07424571698589919;  // std dev = 0,016, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06420915911757002;  // std dev = 0,000821, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097365
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.749 seconds
Total inference time: 1.847 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 14:59:51
{'CLL': -0.097365, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.097731, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 2.235, 'Learning time': 9.939, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 1.847, 'Mapping results': {'Knowledge compiling time': 0.041960954666137695, 'Generating paths time': 4.354307174682617, 'Possible mappings': [288], 'Max mapping': 16384, 'Finding best mapping': 1.1920928955078125e-06, 'Generating mappings time': 0.3490893840789795, 'Numbers preds mapping': [8], 'Total time': 4.745368003845215}, 'Learning time': 20.688000000000002, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.12544463852839122;  // std dev = 6,66e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.11231637819360615;  // std dev = 1,04e-07, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.10159632948783644;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.09269127618926074;  // std dev = 8,30e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.0851847513883968;  // std dev = 7,15e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109153;  // std dev = 7,88e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333727;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.06419184008202626;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.405 seconds
Total inference time: 1.459 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 15:00:02
{'CLL': -0.094637, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.459, 'Learning time': 8.405, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.702563
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.292 seconds
Total inference time: 0.972 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 15:00:07
{'CLL': -0.702563, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'Inference time': 0.972, 'Learning time': 3.292, 'Precision': [nan, 0.5], 'AUC PR': 1.0}


Starting fold 4

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.025159358978271484
   Generating paths time   = 4.473872423171997
   Generating mappings time   = 0.20531129837036133
   Possible mappings   = [288]
   Max mapping   = 16384
   Numbers predicates mapping   = [8]
   Finding best mapping   = 2.1457672119140625e-06
   Total time   = 4.7043538093566895


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 106
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 590
Target test pos examples: 337
Target test neg examples: 337

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(G, A), movie(G, B).;false;true
1;true,false;movie(K, A).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(H, A).;true;true
2;false;actor(B).;false;true
2;true,false;genre(J, C).;false;false
2;true,true;movie(H, B).;false;false
2;false,false;movie(L, B).;false;false
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, A), movie(D, B).;true;true
3;false;actor(B).;false;false
3;true,false,false;genre(K, C).;false;false
3;true,false;movie(I, A).;true;true
3;true,true;movie(D, E).;false;false
3;true,false,true;genre(J, C), movie(I, J).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, B), movie(C, A).;false;true
4;true,false,true;movie(J, L), movie(K, L).;false;false
4;true,false;movie(J, A), movie(K, B).;true;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(L, B), movie(L, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;genre(D, C).;true;true
6;false;director(B).;false;false
6;true,false,false;movie(K, B).;false;false
6;true,true,false;movie(I, A), movie(I, E).;false;false
6;true,false;movie(J, A).;false;true
6;true,true;movie(F, B).;false;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(Q, P).;false;false
7;true,false;movie(K, A).;true;true
7;true,true;movie(E, D).;false;false
7;true,false,true;movie(K, L).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
8;false;actor(B).;false;true
8;true,true,false;movie(D, F).;false;false
8;true,false;movie(J, I).;false;false
8;true,true;movie(D, E).;false;true
8;false,false;movie(N, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(G, B).;true;true
9;true,true;movie(G, I), actor(I).;false;false
9;true,false;movie(J, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17091653692973957;  // std dev = 0,710, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1828281171291931;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.09210764254450075;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15707810827565177;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.08468920393438226;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.10834073940330245;  // std dev = 0,531, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.126056
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.712 seconds
Total inference time: 4.705 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.23e-07, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'false': [3.8e-08, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true': [0.0, 7, 0], 'true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A)', 'false': 'actor(B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false,true': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'genre(G, C), movie(F, G)'}, {'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 38, 0], 'true,true,true': [0.0, 0, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [0.0, 4, 0], 'false': [0.0, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [2.63e-09, 7, 0], 'false': [2.24e-08, 38, 0], 'true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'director(B)', 'true,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 38, 0], 'true,true,true': [0.71, 7, 45], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'false': [1.05e-08, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, G)'}, {'true,false,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 38, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 38, 0], 'true,true,true': [0.531, 7, 45], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.11649408284023735, 3.7981314000334304e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false,true': [-7.93016446160826e-18, nan], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.0831635545216455, -1.7529837230923523e-17], 'true': [-9.473903143468002e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.05193310189730332, -1.1686558153949016e-17], 'true': [0.05193310189730332, nan], 'false': [-8.764918615461762e-18, nan], 'true,true': [-3.947459643111668e-17, -1.982541115402065e-18]}, {'': [0.0313922549076915, -8.764918615461762e-18], 'true': [-4.144832625267251e-16, 0.0], 'false': [-8.764918615461762e-18, nan], 'true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan], 'true,false,true': [0.0, nan]}, {'': [0.019909088333742615, -8.764918615461762e-18], 'true': [1.973729821555834e-17, 0.0], 'true,false,true': [0.0, 2.3129646346357427e-18], 'true,false': [0.0, nan]}, {'': [0.013495010447801522, 1.3147377923192643e-17], 'true': [-2.960594732333751e-17, 9.912705577010326e-19]}, {'': [0.00969838176228774, 0.0], 'true': [0.00969838176228774, nan], 'false': [nan, 0.0], 'true,true': [0.00969838176228774, nan]}, {'': [0.008805749505701023, 2.921639538487254e-18], 'true': [-1.4802973661668754e-17, -2.9738116731030977e-18], 'true,false,true': [-2.9738116731030977e-18, nan], 'true,true': [-1.4802973661668754e-17, nan], 'true,false': [-2.9738116731030977e-18, nan]}, {'': [0.006809246107536266, -7.304098846218135e-19], 'true': [-4.9343245538895844e-17, -3.96508223080413e-18], 'false': [-7.304098846218135e-19, nan], 'true,true': [-4.9343245538895844e-17, nan], 'true,false': [-3.96508223080413e-18, nan]}, {'': [0.005421707183958129, -1.460819769243627e-18], 'true': [0.005421707183958129, nan], 'true,true': [0.005421707183958129, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '4;true,false;movie(D, F), movie(E, F).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;true;movie(D, A), movie(D, B).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.46548605781206776;  // std dev = 0,228, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360642;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4395204759281211;  // std dev = 8,43e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16772884387541018;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.33567481637355406;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.14559973166194437;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.26535795138504287;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12840469939258484;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21692757459908896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11470646098459933;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1823376596694083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10356286191160938;  // std dev = 1,32e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.15670829018848612;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.15670829018848606;  // std dev = 3,73e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.09433542379584907;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13709444570320017;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13709444570320006;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.0865783619863394;  // std dev = 1,61e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 1,61e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06419184008202619;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.132426
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.609 seconds
Total inference time: 2.171 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 15:00:36
{'CLL': -0.132426, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.126056, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 4.705, 'Learning time': 4.712, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 2.171, 'Mapping results': {'Knowledge compiling time': 0.025159358978271484, 'Generating paths time': 4.473872423171997, 'Possible mappings': [288], 'Max mapping': 16384, 'Finding best mapping': 2.1457672119140625e-06, 'Generating mappings time': 0.20531129837036133, 'Numbers preds mapping': [8], 'Total time': 4.7043538093566895}, 'Learning time': 12.321, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.171 seconds
Total inference time: 2.192 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 15:00:43
{'CLL': -0.094637, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 2.192, 'Learning time': 4.171, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.702563
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.747 seconds
Total inference time: 1.583 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 15:00:48
{'CLL': -0.702563, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'Inference time': 1.583, 'Learning time': 2.747, 'Precision': [nan, 0.5], 'AUC PR': 1.0}


Starting fold 5

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.04259896278381348
   Generating paths time   = 4.423441171646118
   Generating mappings time   = 0.3549189567565918
   Possible mappings   = [288]
   Max mapping   = 16384
   Numbers predicates mapping   = [8]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 4.820968389511108


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'student(A) -> female(A)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 118
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 578
Target test pos examples: 337
Target test neg examples: 337

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- female(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- female(A), director(B).;true;false
1;true;movie(G, A), movie(G, B).;false;true
1;true,false;movie(K, A).;false;false
2;;workedunder(A, B) :- female(A), genre(B, C).;true;true
2;true;movie(H, A).;true;true
2;false;female(B).;false;true
2;true,false;genre(J, C).;false;false
2;true,true;movie(H, B).;false;false
2;false,false;movie(L, B).;false;false
3;;workedunder(A, B) :- genre(B, C), female(A).;true;true
3;true;movie(D, A), movie(D, B).;true;true
3;false;female(B).;false;false
3;true,false,false;genre(K, C).;false;false
3;true,false;movie(I, A).;true;true
3;true,true;movie(D, E).;false;false
3;true,false,true;genre(J, C), movie(I, J).;false;false
4;;workedunder(A, B) :- female(A), director(B).;true;false
4;true;movie(C, B), movie(C, A).;false;true
4;true,false,true;movie(J, L), movie(K, L).;false;false
4;true,false;movie(J, A), movie(K, B).;true;false
5;;workedunder(A, B) :- director(B), female(A).;true;false
5;true;movie(L, B), movie(L, A).;false;false
6;;workedunder(A, B) :- genre(B, C), female(A).;true;true
6;true;genre(D, C).;true;true
6;false;director(B).;false;false
6;true,false,false;movie(K, B).;false;false
6;true,true,false;movie(I, A), movie(I, E).;false;false
6;true,false;movie(J, A).;false;true
6;true,true;movie(F, B).;false;true
7;;workedunder(A, B) :- director(B), female(A).;true;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(Q, P).;false;false
7;true,false;movie(K, A).;true;true
7;true,true;movie(E, D).;false;false
7;true,false,true;movie(K, L).;false;false
8;;workedunder(A, B) :- genre(B, C), female(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
8;false;female(B).;false;true
8;true,true,false;movie(D, F).;false;false
8;true,false;movie(J, I).;false;false
8;true,true;movie(D, E).;false;true
8;false,false;movie(N, B).;false;false
9;;workedunder(A, B) :- director(B), female(A).;true;false
9;true;movie(G, B).;true;true
9;true,true;movie(G, I), female(I).;false;false
9;true,false;movie(J, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19148226843284502;  // std dev = 3,830, 66,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.16653882456488214;  // std dev = 3,830, 66,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.19123909051776847;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( movie(E, B) )
%   | | then return 0.34916158629007443;  // std dev = 3,322, 49,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583098;  // std dev = 5,16e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.16339000458164007;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.2859854867304378;  // std dev = 3,312, 49,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=28 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3409387354799577;  // std dev = 0,163, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.08272088083141971;  // std dev = 3,540, 66,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2692600958830186;  // std dev = 0,145, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.06742144311849378;  // std dev = 3,529, 66,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18840952276207265;  // std dev = 0,275, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.574073473329688;  // std dev = 0,856, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.24744687121439457;  // std dev = 0,596, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.17343580621429855;  // std dev = 0,014, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.09358094776486611;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.036265565620489944;  // std dev = 2,831, 66,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15154344540772552;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.08593929087525429;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.13497755096831052;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( movie(H, B) )
%   | | then return 0.12077819318503112;  // std dev = 2,647, 49,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), female(D) )
%   | | then return 0.12372333579971821;  // std dev = 0,208, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.016375009643686766;  // std dev = 2,754, 66,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */


Results
   AUC ROC   = 0.970723
   AUC PR    = 0.965498
   CLL	      = -0.369032
   Precision = 0.905914 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.950635


Total learning time: 7.791 seconds
Total inference time: 2.827 seconds
AUC ROC: 0.970723


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [8.43e-08, 0, 23], 'true,false,true,true': [0.0, 1, 0], 'false': [3.83, 44, 22], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [5.96e-08, 0, 23], 'true,false,false': [0.0, 0, 0], 'false': [3.83, 44, 22]}], ['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'movie(D, A)', 'false': 'female(B)', 'true,true': 'movie(D, B)', 'false,false': 'movie(E, B)'}, {'false,false,false': [0.0, 0, 0], 'false,true': [1.49e-08, 23, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [3.322, 21, 28], 'true,true,true': [0.0, 0, 17], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), female(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'female(B)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'genre(G, C), movie(F, G)'}, {'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'false,true': [0.0, 23, 0], 'true,true,true': [5.16e-08, 0, 17], 'false,false': [3.312, 21, 28]}], ['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.163, 0, 23], 'true,false,true,true': [0.0, 1, 0], 'false': [3.54, 44, 22], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 1, 0], 'false': [3.529, 44, 22], 'true,true': [0.145, 0, 23]}], ['workedunder(A, B)', {'': 'genre(B, C), female(A)', 'true': 'genre(D, C)', 'false': 'director(B)', 'true,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.596, 44, 0], 'true,true,true': [0.275, 1, 17], 'false,true': [0.856, 0, 28]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.014, 0, 23], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false': [2.831, 44, 22]}], ['workedunder(A, B)', {'': 'genre(B, C), female(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'female(B)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)', 'false,false': 'movie(H, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 17], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 23, 0], 'false,false,true': [2.647, 21, 28], 'false,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), female(D)'}, {'true,false': [0.0, 0, 0], 'false': [2.754, 44, 22], 'true,true,true': [0.208, 1, 23], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.039930555555556024, 0.22222222222222276], 'true': [3.089316242435218e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.028505885046352653, 0.222222222222222], 'true': [1.544658121217609e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02339075865192249, 0.21675046043314436], 'true': [0.02339075865192249, nan], 'false': [9.654113257610057e-18, 0.2252021876902658], 'true,true': [-2.0898315757650005e-16, 0.0], 'false,false': [0.2252021876902658, nan]}, {'': [0.014139125745608347, 0.19628412127232236], 'true': [1.5673736818237505e-16, 0.0], 'false': [-9.654113257610057e-18, 0.22390940597941253], 'true,false': [0.0, nan], 'true,true': [1.5673736818237505e-16, nan], 'true,false,true': [nan, 0.0]}, {'': [0.008619234977134071, 0.18986566071684088], 'true': [0.001159193198122357, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.005887796619539735, 0.1886982921210533], 'true': [0.0009091565370253135, 0.0]}, {'': [0.004199323934156162, 0.17549366980085931], 'true': [0.004199323934156162, nan], 'false': [0.026145525756421976, 0.008073968079204382], 'true,true': [0.004199323934156162, nan]}, {'': [0.0028555594570902295, 0.12143110653819375], 'true': [8.966428362084075e-06, 0.0], 'true,false,true': [0.0, nan], 'true,true': [8.966428362084075e-06, nan], 'true,false': [0.0, nan]}, {'': [0.0029591569461471295, 0.11152898530246327], 'true': [-9.79608551139844e-18, 0.0], 'false': [-9.654113257610057e-18, 0.14298414457363293], 'true,false': [0.0, nan], 'true,true': [-9.79608551139844e-18, nan], 'false,false': [0.14298414457363293, nan]}, {'': [0.0017950178658654285, 0.1148763186873686], 'true': [0.0017950178658654285, nan], 'true,true': [0.0017950178658654285, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- female(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- female(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- female(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '2;false;female(B).;true;true', '3;;workedunder(A, B) :- genre(B, C), female(A).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '3;false;female(B).;true;true', '4;;workedunder(A, B) :- female(A), director(B).;true;true', '4;true;movie(C, B), movie(C, A).;true;true', '5;;workedunder(A, B) :- director(B), female(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- director(B), female(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), female(A).;true;true', '8;true;movie(D, A), movie(D, B).;true;true', '8;false;female(B).;true;true', '9;;workedunder(A, B) :- director(B), female(A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.5182729470274018;  // std dev = 0,153, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.42656121790101553;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.17522745731868578;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.4175135841583101;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32525042184155917;  // std dev = 0,013, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.15132451894701304;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2582686999986014;  // std dev = 0,011, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.13289799626119947;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.08518475138839679;  // std dev = 1,97e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.19818296727194543;  // std dev = 0,066, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.20975771563253573;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18072747798471908;  // std dev = 0,009, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14060310906405207;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.17709649774527747;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15644955493361262;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.1244560323580767;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.15275242069154965;  // std dev = 8,68e-05, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.1258301311907153;  // std dev = 0,050, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.1340060363289544;  // std dev = 2,47e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */


Results
   AUC ROC   = 0.92542
   AUC PR    = 0.860079
   CLL	      = -0.207619
   Precision = 0.905914 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.950635


Total learning time: 5.185 seconds
Total inference time: 2.208 seconds
AUC ROC: 0.92542


Refined model AUC ROC: 0.92542


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 15:01:13
{'CLL': -0.207619, 'Recall': 1.0, 'F1': 0.950635, 'parameter': {'CLL': -0.369032, 'Recall': 1.0, 'F1': 0.950635, 'AUC ROC': 0.970723, 'Inference time': 2.827, 'Learning time': 7.791, 'Precision': [0.905914, 0.5], 'AUC PR': 0.965498}, 'AUC ROC': 0.92542, 'Inference time': 2.208, 'Mapping results': {'Knowledge compiling time': 0.04259896278381348, 'Generating paths time': 4.423441171646118, 'Possible mappings': [288], 'Max mapping': 16384, 'Finding best mapping': 1.430511474609375e-06, 'Generating mappings time': 0.3549189567565918, 'Numbers preds mapping': [8], 'Total time': 4.820968389511108}, 'Learning time': 12.975999999999999, 'Precision': [0.905914, 0.5], 'AUC PR': 0.860079}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.6861389866026452;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5321349378684588;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3999123396959217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3047860505335217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.23934386074685432;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.19360164133068228;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.20975771563253573;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1605656866455847;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.17709649774527747;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.16542775201789628;  // std dev = 0,083, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.3197645944650544;  // std dev = 0,616, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.14385447188457903;  // std dev = 0,074, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.2907205430207032;  // std dev = 0,588, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.213649
   Precision = 0.844612 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.915761


Total learning time: 7.614 seconds
Total inference time: 2.192 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 15:01:24
{'CLL': -0.213649, 'Recall': 1.0, 'F1': 0.915761, 'AUC ROC': 1.0, 'Inference time': 2.192, 'Learning time': 7.614, 'Precision': [0.844612, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */


Results
   AUC ROC   = 0.907946
   AUC PR    = 0.844488
   CLL	      = -0.726634
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.962 seconds
Total inference time: 1.321 seconds
AUC ROC: 0.907946


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 15:01:28
{'CLL': -0.726634, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.907946, 'Inference time': 1.321, 'Learning time': 2.962, 'Precision': [nan, 0.5], 'AUC PR': 0.844488}


