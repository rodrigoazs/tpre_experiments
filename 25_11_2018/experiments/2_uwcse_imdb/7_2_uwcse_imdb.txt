Starting experiment #7 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.724815601766179;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.7797175625504926;  // std dev = 1,920, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return 0.6581489350995123;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.14185106490048768;  // std dev = 7,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G), ta(F, H, E) )
%   | | then if ( ta(D, H, I) )
%   | | | then return 0.5256950918092174;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7303613515079144;  // std dev = 0,023, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.7300232666615513;  // std dev = 0,058, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( tempadvisedby(J, B), publication(K, A) )
%   | | then if ( publication(K, B) )
%   | | | then return 0.6522008798821627;  // std dev = 0,936, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.35278351751188713;  // std dev = 1,611, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.6574000232806397;  // std dev = 1,921, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return 0.5014287972424673;  // std dev = 1,472, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.12544463852839158;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(G, A, H), ta(G, I, F) )
%   | | then if ( samecourse(E, G) )
%   | | | then return 0.41001242454928033;  // std dev = 0,882, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.566186639284322;  // std dev = 0,028, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5659334224417465;  // std dev = 0,074, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | then if ( publication(J, B) )
%   | | | then return 0.5086244615824396;  // std dev = 0,931, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.28493280367514356;  // std dev = 1,593, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( hasposition(L, C), tempadvisedby(M, L) )
%   | | | then return 0.5207342638112227;  // std dev = 1,880, 50,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return 0.42273558501744957;  // std dev = 1,274, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( student(B) )
%   | then return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.06374087151318292;  // std dev = 0,237, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, H) )
%   | | | then return 0.4505323574828249;  // std dev = 0,117, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.29525657317008164;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4324429706251932;  // std dev = 0,087, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), publication(J, B) )
%   | | then if ( publication(I, K), publication(J, K) )
%   | | | then return -0.07182108677407048;  // std dev = 1,082, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4605474337164236;  // std dev = 0,818, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.39583153433178486;  // std dev = 1,547, 39,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return 0.33683018050223174;  // std dev = 1,942, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   else return -0.10200726556038733;  // std dev = 0,013, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( ta(H, E, I) )
%   | | | then return 0.3439779289913104;  // std dev = 0,107, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22208237379794146;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.33094588561216903;  // std dev = 0,078, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | then return 0.10488820443447673;  // std dev = 0,855, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(L, A, M), tempadvisedby(N, B) )
%   | | | then return 0.34578016111557114;  // std dev = 1,008, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.25985565570297164;  // std dev = 2,476, 57,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   else if ( student(B) )
%   | then return -0.09265672241251545;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( publication(P, B) )
%   | | then return -0.09682213755590421;  // std dev = 6,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.02826886772543996;  // std dev = 0,724, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.3281892000963477;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | | then return 0.20073390589518358;  // std dev = 0,890, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.2627412714156255;  // std dev = 0,066, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( publication(H, J), publication(I, J) )
%   | | | then return -0.11336594074243471;  // std dev = 1,056, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.28638585996501653;  // std dev = 0,767, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return 0.3280471715813036;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21439923558313112;  // std dev = 2,477, 65,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=57 */
%   else return -0.08558330025423073;  // std dev = 0,017, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( ta(H, G, I) )
%   | | | then return 0.23384084945487357;  // std dev = 0,085, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.11274992325105589;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2143077120179408;  // std dev = 0,063, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | then return 0.02824339513187556;  // std dev = 0,809, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(L, B), ta(M, A, N) )
%   | | | then return 0.2274260181559157;  // std dev = 1,022, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.1574508128483497;  // std dev = 2,429, 57,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   else if ( professor(B) )
%   | then if ( publication(P, B) )
%   | | then return -0.08200217287124285;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.009890937778130438;  // std dev = 0,714, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07872053557289968;  // std dev = 2,98e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(G, A, H), ta(G, I, F) )
%   | | then if ( samecourse(E, G) )
%   | | | then return 0.036432800729335656;  // std dev = 0,880, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1885415634439082;  // std dev = 0,063, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.19284996801435159;  // std dev = 0,130, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | then if ( ta(L, A, M) )
%   | | | then return 0.16129471537582124;  // std dev = 1,130, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.027524734772251487;  // std dev = 1,268, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else if ( hasposition(N, C), tempadvisedby(P, N) )
%   | | | then return 0.16953469987896147;  // std dev = 1,711, 45,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | | else return 0.08561541657430707;  // std dev = 1,266, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( professor(B) )
%   | then return -0.057474730780005576;  // std dev = 0,218, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.07319745367959822;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(D, B) )
%   | | then return 0.2069046925726915;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | | then return 0.10440971652169914;  // std dev = 0,895, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.16173021538431964;  // std dev = 0,087, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( publication(H, J), ta(K, J, L) )
%   | | | then return 0.22064281422552906;  // std dev = 0,715, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.45104829452861034;  // std dev = 0,200, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( projectmember(M, B) )
%   | | | then return 0.2003298023851075;  // std dev = 0,069, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11510982319910354;  // std dev = 2,485, 67,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=59 */
%   else return -0.0688667609384582;  // std dev = 0,020, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( ta(H, G, I) )
%   | | | then return 0.16307268195678817;  // std dev = 0,093, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03075397863418199;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.14008845363414782;  // std dev = 0,083, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | then if ( hasposition(L, C), publication(J, L) )
%   | | | then return -0.05172699660204727;  // std dev = 1,056, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.23808670902362117;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( hasposition(M, C), tempadvisedby(N, M) )
%   | | | then return 0.11352586566843996;  // std dev = 2,020, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0.03321547204519821;  // std dev = 1,259, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( professor(B) )
%   | then return -0.05306436539840216;  // std dev = 0,216, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.06412520986688695;  // std dev = 1,49e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Predicates from source: ['advisedby(person,person).', 'samecourse(course,course).', 'student(person).', 'hasposition(person,faculty).', 'tempadvisedby(person,person).', 'publication(title,person).', 'professor(person).', 'ta(course,person,quarter).', 'projectmember(project,person).']

Starting fold 1

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.0167849063873291
   Generating paths time   = 2.7124180793762207
   Generating mappings time   = 0.3369898796081543
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 3.066202163696289


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> genre(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 159
Target train pos examples: 56
Target train neg examples: 56

Target test facts examples: 537
Target test pos examples: 326
Target test neg examples: 326

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, J).;false;false
0;true,false,false;movie(M, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(K, A).;true;true
1;true,true;movie(K, B).;false;false
1;true,false;movie(L, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(J, A).;true;true
2;false;actor(B).;false;false
2;true,true;movie(J, B).;false;false
2;true,false;genre(L, C).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, B), movie(C, A).;false;true
3;true,false,true;movie(I, K), movie(J, K).;false;false
3;true,false;movie(I, A), movie(J, B).;true;false
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;false;true
4;false;actor(B).;false;true
4;false,false;movie(P, B).;false;false
4;true,false;movie(K, J).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, B), movie(C, A).;true;true
5;true,false,false;movie(L, K).;false;false
5;true,false;movie(H, A), movie(I, B).;true;true
5;true,true;movie(C, D).;false;false
5;true,false,true;movie(H, J), movie(I, J).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, A), movie(D, B).;false;true
6;false,true;movie(P, B).;false;false
6;false;director(B).;true;false
6;true,false;movie(K, J).;false;false
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(J, B).;false;true
7;false;director(B).;false;false
7;true,false;genre(N, C).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,false,false;genre(B, M).;false;false
8;true,false;movie(H, A).;true;true
8;true,true;movie(C, D).;false;false
8;true,false,true;movie(H, J).;false;false
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(D, A), movie(D, B).;false;true
9;false;director(B).;false;false
9;true,false,false;genre(M, C).;false;false
9;true,false;movie(J, A).;true;true
9;true,false,true;genre(L, C), movie(J, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 2,98e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), movie(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,97e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1727045201398631;  // std dev = 0,248, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15331310511358096;  // std dev = 4,71e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.08586855531125158;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13445127562726086;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.07936360851871285;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125226
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.833 seconds
Total inference time: 1.262 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 1, 0], 'false': [5.16e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A)', 'false': 'actor(B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.03e-07, 0, 56], 'false,true': [3.8e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 0, 0], 'false': [2.98e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false': 'movie(E, F)'}, {'true,false,true': [0.0, 1, 0], 'false,true': [0.0, 55, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), movie(F, G)'}, {'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [1.97e-08, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false': 'movie(E, F)'}, {'true,false,true': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.49e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'director(B)'}, {'true,false': [0.0, 0, 0], 'false,false': [1.05e-08, 55, 0], 'true,true': [0.248, 1, 56], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [4.71e-08, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false': [1.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false,false': [0.0, 55, 0]}]]
[{'': [0.017236072637734554, 4.844609562000683e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true': [0.012304599783948732, nan], 'true,true': [-1.9032394707859825e-16, 0.0]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'true': [0.007683847065712494, nan], 'false': [2.62416351275037e-17, nan], 'true,true': [1.9032394707859825e-16, 0.0]}, {'': [0.004644692439814939, 1.6148698540002276e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,false,true': [nan, 0.0], 'true,false': [0.0, nan]}, {'': [0.0029456817402654088, -2.0185873175002845e-18], 'true': [-1.2688263138573217e-16, 0.0], 'false': [-2.0185873175002845e-18, nan], 'true,false': [0.0, nan]}, {'': [0.001996676351744731, 7.065055611250995e-18], 'true': [-3.172065784643304e-17, 0.0], 'true,false,true': [nan, 0.0], 'true,true': [-3.172065784643304e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0014349399424219715, 4.037174635000569e-18], 'true': [-1.586032892321652e-17, 0.0], 'false': [nan, 4.037174635000569e-18], 'true,false': [0.0, nan]}, {'': [0.0010802101680417507, 2.0185873175002845e-18], 'true': [0.0010802101680417507, nan], 'false': [nan, 2.0185873175002845e-18]}, {'': [0.0009860389456080615, 4.037174635000569e-18], 'true': [3.9650822308041306e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [3.9650822308041306e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0007879781662701731, -3.0278809762504268e-18], 'true': [-4.7580986769649563e-17, 0.0], 'true,false,true': [0.0, nan], 'false': [nan, -3.0278809762504268e-18], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;true;movie(D, A), movie(D, B).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, A), movie(D, B).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.6913094771863096;  // std dev = 0,152, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.536145926220138;  // std dev = 0,141, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4235035095911341;  // std dev = 0,043, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3286282882167381;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783624;  // std dev = 2,98e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3247876516565417;  // std dev = 0,039, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2605669423443135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25795861400136005;  // std dev = 0,034, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.21356129601421725;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,97e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21172836668745995;  // std dev = 0,030, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1798812570548414;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.174946657883151;  // std dev = 3,80e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.17066698636955963;  // std dev = 0,060, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15460521974967736;  // std dev = 0,025, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1785259383940193;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1354599865037573;  // std dev = 0,023, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1538273695299147;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143891
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.187 seconds
Total inference time: 1.035 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 02:21:18
{'CLL': -0.143891, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.125226, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.262, 'Learning time': 2.833, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 1.035, 'Mapping results': {'Knowledge compiling time': 0.0167849063873291, 'Generating paths time': 2.7124180793762207, 'Possible mappings': [864], 'Max mapping': 65536, 'Finding best mapping': 1.1920928955078125e-06, 'Generating mappings time': 0.3369898796081543, 'Numbers preds mapping': [9], 'Total time': 3.066202163696289}, 'Learning time': 7.0200000000000005, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.692818318046742;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5367928709789455;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.40340088328536905;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3078944297924054;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.24240066496454704;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.2097577156325355;  // std dev = 2,98e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.19670004057326632;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16371858628713248;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.139091093402249;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1201377116837435;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.903675
   AUC PR    = 0.837662
   CLL	      = -0.289355
   Precision = 0.840206 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913165


Total learning time: 3.33 seconds
Total inference time: 1.058 seconds
AUC ROC: 0.903675


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 02:21:23
{'CLL': -0.289355, 'Recall': 1.0, 'F1': 0.913165, 'AUC ROC': 0.903675, 'Inference time': 1.058, 'Learning time': 3.33, 'Precision': [0.840206, 0.5], 'AUC PR': 0.837662}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.903675
   AUC PR    = 0.837662
   CLL	      = -0.727406
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.346 seconds
Total inference time: 0.85 seconds
AUC ROC: 0.903675


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 02:21:25
{'CLL': -0.727406, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.903675, 'Inference time': 0.85, 'Learning time': 1.346, 'Precision': [nan, 0.5], 'AUC PR': 0.837662}


Starting fold 2

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.032911062240600586
   Generating paths time   = 2.7540881633758545
   Generating mappings time   = 0.34570980072021484
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 3.1327195167541504


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> genre(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 150
Target train pos examples: 58
Target train neg examples: 58

Target test facts examples: 546
Target test pos examples: 324
Target test neg examples: 324

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, J).;false;false
0;true,false,false;movie(M, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(K, A).;true;true
1;true,true;movie(K, B).;false;false
1;true,false;movie(L, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(J, A).;true;true
2;false;actor(B).;false;false
2;true,true;movie(J, B).;false;false
2;true,false;genre(L, C).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, B), movie(C, A).;false;true
3;true,false,true;movie(I, K), movie(J, K).;false;false
3;true,false;movie(I, A), movie(J, B).;true;false
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;false;true
4;false;actor(B).;false;true
4;false,false;movie(P, B).;false;false
4;true,false;movie(K, J).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, B), movie(C, A).;true;true
5;true,false,false;movie(L, K).;false;false
5;true,false;movie(H, A), movie(I, B).;true;true
5;true,true;movie(C, D).;false;false
5;true,false,true;movie(H, J), movie(I, J).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, A), movie(D, B).;false;true
6;false,true;movie(P, B).;false;false
6;false;director(B).;true;false
6;true,false;movie(K, J).;false;false
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(J, B).;false;true
7;false;director(B).;false;false
7;true,false;genre(N, C).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,false,false;genre(B, M).;false;false
8;true,false;movie(H, A).;true;true
8;true,true;movie(C, D).;false;false
8;true,false,true;movie(H, J).;false;false
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(D, A), movie(D, B).;false;true
9;false;director(B).;false;false
9;true,false,false;genre(M, C).;false;false
9;true,false;movie(J, A).;true;true
9;true,false,true;genre(L, C), movie(J, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 2,79e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), movie(F, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1687517402949902;  // std dev = 0,348, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1538269117778661;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.08555878876017856;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1348519864832323;  // std dev = 5,37e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.07909783921164981;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07909783921164981;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.126244
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.865 seconds
Total inference time: 1.277 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'false': [5.16e-08, 56, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A)', 'false': 'actor(B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 58], 'false,true': [3.94e-08, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'false': [2.79e-08, 56, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false': 'movie(E, F)'}, {'true,false,true': [0.0, 2, 0], 'false,true': [0.0, 56, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), movie(F, G)'}, {'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [1.83e-08, 56, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false': 'movie(E, F)'}, {'true,false,true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.83e-08, 56, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'director(B)'}, {'true,false': [0.0, 0, 0], 'false,false': [7.45e-09, 56, 0], 'true,true': [0.348, 2, 58], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [1.67e-08, 56, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,true': [5.37e-08, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false,false': [0.0, 56, 0]}]]
[{'': [0.03222222222222181, 4.7580986769649563e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0230030098461001, -2.973811673103098e-17], 'true': [0.0230030098461001, nan], 'true,true': [-1.2250736823450003e-16, 0.0]}, {'': [0.014364677666239759, 1.586032892321652e-17], 'true': [0.014364677666239759, nan], 'false': [2.7755575615628914e-17, nan], 'true,true': [2.4501473646900006e-16, 0.0]}, {'': [0.008683086634361459, 1.3877787807814457e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.005506846810506941, -9.912705577010326e-19], 'true': [-1.5313421029312505e-16, 0.0], 'false': [-9.912705577010326e-19, nan], 'true,false': [0.0, nan]}, {'': [0.0037327151297170975, 5.9476233462061954e-18], 'true': [-3.062684205862501e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-3.062684205862501e-17, nan], 'true,false': [0.0, nan]}, {'': [0.002682568974502808, 5.9476233462061954e-18], 'true': [-2.2970131543968756e-17, 0.0], 'false': [nan, 5.9476233462061954e-18], 'true,false': [0.0, nan]}, {'': [0.002019414330219523, 9.912705577010326e-19], 'true': [0.002019414330219523, nan], 'false': [nan, 9.912705577010326e-19]}, {'': [0.0018465109944895623, 4.956352788505163e-18], 'true': [-1.5313421029312504e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-1.5313421029312504e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0014749570105903164, -2.9738116731030977e-18], 'true': [4.976861834526564e-17, 0.0], 'true,false,true': [0.0, 0.0], 'false': [nan, -2.9738116731030977e-18], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;true;movie(D, A), movie(D, B).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, A), movie(D, B).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, A), movie(D, B).;true;true', '9;true,false;genre(F, C), movie(E, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.6792392193186044;  // std dev = 0,180, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.6978088468073818;  // std dev = 0,134, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5278590498094256;  // std dev = 0,167, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.5405956329485367;  // std dev = 0,124, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4290464603100109;  // std dev = 0,028, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.3276005729238762;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783627;  // std dev = 2,79e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3285464122910443;  // std dev = 0,025, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2598705604534924;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2605141302961594;  // std dev = 0,022, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.21307302276259382;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2135258848703603;  // std dev = 0,019, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17952553651533487;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.16691842382027772;  // std dev = 0,071, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.16967229293517477;  // std dev = 0,053, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15629949606034785;  // std dev = 0,016, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17787950293292704;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13677738838074752;  // std dev = 0,015, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.15333851088831604;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.144921
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.215 seconds
Total inference time: 1.203 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 02:21:37
{'CLL': -0.144921, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.126244, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.277, 'Learning time': 2.865, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 1.203, 'Mapping results': {'Knowledge compiling time': 0.032911062240600586, 'Generating paths time': 2.7540881633758545, 'Possible mappings': [864], 'Max mapping': 65536, 'Finding best mapping': 1.430511474609375e-06, 'Generating mappings time': 0.34570980072021484, 'Numbers preds mapping': [9], 'Total time': 3.1327195167541504}, 'Learning time': 5.08, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.6989783104778774;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.541086978177925;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4066344623991659;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.3025884514838787;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3107971418551718;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.23719304019103774;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2452701034529891;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.19142843787805347;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.19961850189633581;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.19704130244869125;  // std dev = 0,049, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.36428450834325343;  // std dev = 0,797, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.16771875489870317;  // std dev = 0,044, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.3257930210983801;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14559662832943784;  // std dev = 0,039, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.2903050856307372;  // std dev = 0,691, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.179547
   Precision = 0.841558 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913963


Total learning time: 3.859 seconds
Total inference time: 1.049 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 02:21:42
{'CLL': -0.179547, 'Recall': 1.0, 'F1': 0.913963, 'AUC ROC': 1.0, 'Inference time': 1.049, 'Learning time': 3.859, 'Precision': [0.841558, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */


Results
   AUC ROC   = 0.903949
   AUC PR    = 0.837936
   CLL	      = -0.732972
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.228 seconds
Total inference time: 0.843 seconds
AUC ROC: 0.903949


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 02:21:44
{'CLL': -0.732972, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.903949, 'Inference time': 0.843, 'Learning time': 1.228, 'Precision': [nan, 0.5], 'AUC PR': 0.837936}


Starting fold 3

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.031347036361694336
   Generating paths time   = 2.8422627449035645
   Generating mappings time   = 0.34395384788513184
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 3.217573404312134


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> genre(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 163
Target train pos examples: 178
Target train neg examples: 178

Target test facts examples: 533
Target test pos examples: 204
Target test neg examples: 204

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, J).;false;false
0;true,false,false;movie(M, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(K, A).;true;true
1;true,true;movie(K, B).;false;false
1;true,false;movie(L, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(J, A).;true;true
2;false;actor(B).;false;false
2;true,true;movie(J, B).;false;false
2;true,false;genre(L, C).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, B), movie(C, A).;false;true
3;true,false,true;movie(I, K), movie(J, K).;false;false
3;true,false;movie(I, A), movie(J, B).;true;false
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;false;true
4;false;actor(B).;false;true
4;false,false;movie(P, B).;false;false
4;true,false;movie(K, J).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, B), movie(C, A).;true;true
5;true,false,false;movie(L, K).;false;false
5;true,false;movie(H, A), movie(I, B).;true;true
5;true,true;movie(C, D).;false;false
5;true,false,true;movie(H, J), movie(I, J).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, A), movie(D, B).;false;true
6;false,true;movie(P, B).;false;false
6;false;director(B).;true;false
6;true,false;movie(K, J).;false;false
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(J, B).;false;true
7;false;director(B).;false;false
7;true,false;genre(N, C).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,false,false;genre(B, M).;false;false
8;true,false;movie(H, A).;true;true
8;true,true;movie(C, D).;false;false
8;true,false,true;movie(H, J).;false;false
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(D, A), movie(D, B).;false;true
9;false;director(B).;false;false
9;true,false,false;genre(M, C).;false;false
9;true,false;movie(J, A).;true;true
9;true,false,true;genre(L, C), movie(J, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0.30712539016606777;  // std dev = 2,850, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.43439164876689973;  // std dev = 0,365, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1253119870462377;  // std dev = 0,143, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10429320596924646;  // std dev = 0,124, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.31704604347713655;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, F) )
%   | | then return -0.0910595031707007;  // std dev = 0,004, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09246471894814631;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(G, B) )
%   | | then return 0.1851177318073174;  // std dev = 2,158, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.27419616863613927;  // std dev = 0,466, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), movie(F, G) )
%   | | | then return -0.08531199880479977;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12072202372550334;  // std dev = 0,224, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08930227215843828;  // std dev = 0,198, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2044642497634177;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, F) )
%   | | then return -0.0754241372736294;  // std dev = 0,008, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.11917541282044432;  // std dev = 1,768, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07829999345458986;  // std dev = 2,58e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13635356301754956;  // std dev = 1,076, 152,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.09911621623188989;  // std dev = 1,734, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.0728324786162757;  // std dev = 5,58e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1758771498896698;  // std dev = 0,462, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1216922359124903;  // std dev = 0,291, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07445096937700112;  // std dev = 0,293, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13292762915204773;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.07192919538552119;  // std dev = 0,006, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07060266839965132;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.06941168293762638;  // std dev = 1,525, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.06349131206838193;  // std dev = 4,47e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096179
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.534 seconds
Total inference time: 1.072 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.09e-06, 0, 178], 'true,false,true,true': [4.59e-08, 44, 0], 'false': [9.42e-08, 134, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 134, 0], 'true,true,true': [0.0, 0, 178], 'true,true,false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A)', 'false': 'actor(B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [1.05e-08, 23, 0], 'false,false': [2.85, 29, 49], 'true,true,true': [4.77e-07, 0, 129], 'false,true': [9.54e-08, 126, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.365, 0, 178], 'true,false,true,true': [0.0, 4, 0], 'false': [0.124, 134, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.143, 40, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false': 'movie(E, F)', 'false,false': 'movie(G, B)'}, {'true,false,true': [0.004, 23, 0], 'true,true': [0.0, 0, 129], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 126, 0], 'false,false,true': [2.158, 29, 49], 'false,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), movie(F, G)'}, {'true,true,true': [0.466, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.224, 40, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [0.198, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false': 'movie(E, F)', 'false,true': 'movie(G, B)'}, {'true,false,true': [0.008, 23, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [2.58e-08, 126, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.768, 29, 49], 'true,true': [0.0, 0, 129]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'director(B)'}, {'true,false': [0.0, 0, 0], 'false,false': [5.58e-08, 126, 0], 'true,true': [1.076, 23, 129], 'false,true': [1.734, 29, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.462, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.291, 44, 0], 'false': [0.293, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,true': [0.0, 0, 129], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 11, 0], 'false,true': [1.525, 29, 49], 'true,false,true,true': [0.006, 12, 0], 'false,false': [4.47e-08, 126, 0]}]]
[{'': [0.15891567242919188, 6.628197161941232e-17], 'true': [6.706246045376226e-15, 4.794144879063176e-17], 'true,false,true': [4.794144879063176e-17, nan], 'true,false': [4.794144879063176e-17, nan]}, {'': [0.11344775516652696, -2.6512788647764932e-17], 'true': [0.11344775516652696, nan], 'true,true': [-3.193450497798203e-15, -2.7755575615628914e-17]}, {'': [0.057249377286753104, 0.08135941927804699], 'true': [0.057249377286753104, nan], 'false': [7.225260953909749e-17, 0.10412266355706305], 'true,true': [1.7625866313428842e-15, 4.827056628805028e-18]}, {'': [0.050102651617699306, 0.0001145519984067719], 'true': [0.0007499614158413787, 0.0005090887646135175], 'true,false,true': [0.0, 0.0005088674216723821], 'true,false': [0.0005090887646135175, nan]}, {'': [0.02138834040950741, 0.04101490726660056], 'true': [-2.7540416114732565e-17, 5.60564880857964e-07], 'false': [-2.6433881538694202e-17, 0.059678805810152794], 'true,false': [5.60564880857964e-07, nan], 'false,false': [0.059678805810152794, nan]}, {'': [0.025606983186780643, 0.00029255068667482153], 'true': [0.0012199917849860813, 0.0012444537810590345], 'true,false,true': [0.0, 0.0012549109896299454], 'true,true': [0.0012199917849860813, nan], 'true,false': [0.0012444537810590345, nan]}, {'': [0.010060431545332421, 0.024536802221610265], 'true': [-2.478637450325931e-16, 2.523064160806547e-06], 'false': [0.04008707922486175, 5.28677630773884e-18], 'true,false': [2.523064160806547e-06, nan], 'false,true': [0.04008707922486175, nan]}, {'': [0.0076167498754035265, 0.02172752575013155], 'true': [0.0076167498754035265, nan], 'false': [0.03856426519903935, 2.4671622769447922e-17]}, {'': [0.015414292606820394, 0.0006423559284527118], 'true': [0.001198762805818957, 0.0019249956470103393], 'true,false,true': [0.0019249956470103393, nan], 'true,true': [0.001198762805818957, nan], 'true,false': [0.0019249956470103393, nan]}, {'': [0.005356301704722085, 0.015567254622926963], 'true': [-1.1016166445893026e-16, 2.275268259856008e-06], 'true,false,true': [3.5193476884814536e-06, -1.261617073437678e-18], 'false': [0.02980473095890448, 1.586032892321652e-17], 'true,false': [2.275268259856008e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '2;false;actor(B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '3;true,false;movie(D, F), movie(E, F).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;true;movie(D, A), movie(D, B).;true;true', '4;false;actor(B).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '5;true,false;movie(E, G), movie(F, G).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, A), movie(D, B).;true;true', '6;false;director(B).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;false;director(B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, A), movie(D, B).;true;true', '9;false;director(B).;true;true', '9;true,false;genre(F, C), movie(E, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5400217908149866;  // std dev = 0,346, 113,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=89 */
%   | | else return 0.5644425772129087;  // std dev = 0,327, 109,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.40638843572298033;  // std dev = 0,341, 62,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=47 */
%   | | else return 0.5226102707838003;  // std dev = 0,226, 90,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5982872014917212;  // std dev = 0,014, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.17563349430965036;  // std dev = 0,211, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.469291231737353;  // std dev = 0,248, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.23283238770496248;  // std dev = 0,234, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.22415932404373415;  // std dev = 0,271, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10125989938733858;  // std dev = 0,015, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.36293811377850393;  // std dev = 0,179, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.23595146352521754;  // std dev = 0,062, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( actor(B) )
%   | then return -0.09271957370468813;  // std dev = 6,99e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3386701764265853;  // std dev = 0,013, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.12763589471021836;  // std dev = 0,134, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2793547145608323;  // std dev = 0,186, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.16459201076935906;  // std dev = 0,147, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.16240380634622628;  // std dev = 0,180, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08476986172150147;  // std dev = 0,020, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.23070896975205152;  // std dev = 0,138, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.17158943740761362;  // std dev = 0,050, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21631999423289908;  // std dev = 0,010, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.10011744719918653;  // std dev = 0,094, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.07882924114542553;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1923454006140842;  // std dev = 0,121, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1485688456799672;  // std dev = 0,044, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.18189523379264047;  // std dev = 0,009, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.09147853700043862;  // std dev = 0,086, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.0732917555783033;  // std dev = 3,65e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16207061024532762;  // std dev = 0,117, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then return -0.11226992739735743;  // std dev = 0,078, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11361762945419399;  // std dev = 0,023, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06797262505945549;  // std dev = 0,023, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.14319204439907282;  // std dev = 0,096, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11846455320673596;  // std dev = 0,036, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.13616409746907415;  // std dev = 0,007, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( director(A) )
%   | | | then return -0.05645695682443181;  // std dev = 1,86e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0841785892851443;  // std dev = 0,006, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.06425670901997725;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100355
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.451 seconds
Total inference time: 1.088 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 02:22:04
{'CLL': -0.100355, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.096179, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.072, 'Learning time': 5.534, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 1.088, 'Mapping results': {'Knowledge compiling time': 0.031347036361694336, 'Generating paths time': 2.8422627449035645, 'Possible mappings': [864], 'Max mapping': 65536, 'Finding best mapping': 1.1920928955078125e-06, 'Generating mappings time': 0.34395384788513184, 'Numbers preds mapping': [9], 'Total time': 3.217573404312134}, 'Learning time': 13.985, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.12544463852839122;  // std dev = 6,66e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.11231637819360615;  // std dev = 1,04e-07, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.10159632948783644;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.09269127618926074;  // std dev = 8,30e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.0851847513883968;  // std dev = 7,15e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109153;  // std dev = 7,88e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333727;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.06419184008202626;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.226 seconds
Total inference time: 0.951 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 02:22:11
{'CLL': -0.094637, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.951, 'Learning time': 5.226, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.702563
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.965 seconds
Total inference time: 0.854 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 02:22:14
{'CLL': -0.702563, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'Inference time': 0.854, 'Learning time': 1.965, 'Precision': [nan, 0.5], 'AUC PR': 1.0}


Starting fold 4

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.0237729549407959
   Generating paths time   = 2.6396565437316895
   Generating mappings time   = 0.3423590660095215
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 3.0057973861694336


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 106
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 590
Target test pos examples: 337
Target test neg examples: 337

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, J).;false;false
0;true,false,false;movie(M, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(K, A).;true;true
1;true,true;movie(K, B).;false;false
1;true,false;movie(L, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(J, A).;true;true
2;false;actor(B).;false;false
2;true,true;movie(J, B).;false;false
2;true,false;genre(L, C).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, B), movie(C, A).;false;true
3;true,false,true;movie(I, K), movie(J, K).;false;false
3;true,false;movie(I, A), movie(J, B).;true;false
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;false;true
4;false;actor(B).;false;true
4;false,false;movie(P, B).;false;false
4;true,false;movie(K, J).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, B), movie(C, A).;true;true
5;true,false,false;movie(L, K).;false;false
5;true,false;movie(H, A), movie(I, B).;true;true
5;true,true;movie(C, D).;false;false
5;true,false,true;movie(H, J), movie(I, J).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, A), movie(D, B).;false;true
6;false,true;movie(P, B).;false;false
6;false;director(B).;true;false
6;true,false;movie(K, J).;false;false
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(J, B).;false;true
7;false;director(B).;false;false
7;true,false;genre(N, C).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,false,false;movie(M, B).;false;false
8;true,false;movie(H, A).;true;true
8;true,true;movie(C, D).;false;false
8;true,false,true;movie(H, J).;false;false
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(D, A), movie(D, B).;false;true
9;false;director(B).;false;false
9;true,false,false;genre(M, C).;false;false
9;true,false;movie(J, A).;true;true
9;true,false,true;genre(L, C), movie(J, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, F) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), movie(F, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1433965157345025;  // std dev = 0,616, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.157156298770806;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.08359576755223444;  // std dev = 4,56e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13744240248402156;  // std dev = 1,49e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.07741060817226376;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.124787
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.523 seconds
Total inference time: 1.583 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.23e-07, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'false': [3.8e-08, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 38, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A)', 'false': 'actor(B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false,true': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 4, 0], 'false': [0.0, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false': 'movie(E, F)'}, {'true,false,true': [0.0, 7, 0], 'false,true': [0.0, 38, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.98e-08, 0, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 3, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [2.24e-08, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false': 'movie(E, F)'}, {'true,false,true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [5.58e-08, 0, 45]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'director(B)'}, {'true,false': [0.0, 0, 0], 'false,false': [1.05e-08, 38, 0], 'true,true': [0.616, 7, 45], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [4.71e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [4.56e-09, 7, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,true': [1.49e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'false,false': [0.0, 38, 0]}]]
[{'': [0.11649408284023735, 3.7981314000334304e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false,true': [-7.93016446160826e-18, nan], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.0831635545216455, -1.7529837230923523e-17], 'true': [0.0831635545216455, nan], 'true,true': [-9.473903143468002e-16, -1.982541115402065e-18]}, {'': [0.05193310189730332, -1.1686558153949016e-17], 'true': [0.05193310189730332, nan], 'false': [-8.764918615461762e-18, nan], 'true,true': [-3.947459643111668e-17, -1.982541115402065e-18]}, {'': [0.0313922549076915, -1.0225738384705389e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false,true': [0.0, -1.1564823173178713e-18], 'true,false': [0.0, nan]}, {'': [0.019909088333742615, -1.1686558153949016e-17], 'true': [1.973729821555834e-17, 0.0], 'false': [-1.1686558153949016e-17, nan], 'true,false': [0.0, nan]}, {'': [0.013495010447801522, 1.3147377923192643e-17], 'true': [-2.960594732333751e-17, 9.912705577010326e-19], 'true,false,true': [0.0, 0.0], 'true,true': [-2.960594732333751e-17, nan], 'true,false': [9.912705577010326e-19, nan]}, {'': [0.00969838176228774, 0.0], 'true': [6.908054375445419e-17, -9.912705577010326e-19], 'false': [nan, 0.0], 'true,false': [-9.912705577010326e-19, nan]}, {'': [0.007300856491242112, 2.921639538487254e-18], 'true': [0.007300856491242112, nan], 'false': [nan, 2.921639538487254e-18]}, {'': [0.006752178473826328, -7.304098846218135e-19], 'true': [4.9343245538895844e-17, 2.9738116731030977e-18], 'true,false,true': [2.9738116731030977e-18, nan], 'true,true': [4.9343245538895844e-17, nan], 'true,false': [2.9738116731030977e-18, nan]}, {'': [0.005377578439068807, -1.460819769243627e-18], 'true': [4.934324553889585e-18, -9.912705577010326e-19], 'true,false,true': [-9.912705577010326e-19, nan], 'false': [nan, -1.460819769243627e-18], 'true,false': [-9.912705577010326e-19, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '3;true,false;movie(D, F), movie(E, F).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;true;movie(D, A), movie(D, B).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '5;true,false;movie(E, G), movie(F, G).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, A), movie(D, B).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5894860197895166;  // std dev = 0,305, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.6111505851930897;  // std dev = 0,282, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.4652409841117757;  // std dev = 0,286, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.4805229679314999;  // std dev = 0,264, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360642;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.46486235527093134;  // std dev = 0,027, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.29719792311410503;  // std dev = 0,009, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.35945317799561977;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.35099126389977003;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.23905656418793544;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2814680010322624;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2757431841076246;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.1983078363494291;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.22817244440590345;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.22418903412767247;  // std dev = 4,47e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.16865301727029963;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.19048961586223045;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.18761104474984333;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.14630872693035754;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.16282985153166152;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.16067431704175483;  // std dev = 2,58e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.12896348297799742;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.14183263789132527;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.14016819653610427;  // std dev = 1,83e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.11515695066069574;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143564
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.546 seconds
Total inference time: 2.055 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 02:22:29
{'CLL': -0.143564, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.124787, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.583, 'Learning time': 3.523, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 2.055, 'Mapping results': {'Knowledge compiling time': 0.0237729549407959, 'Generating paths time': 2.6396565437316895, 'Possible mappings': [864], 'Max mapping': 65536, 'Finding best mapping': 9.5367431640625e-07, 'Generating mappings time': 0.3423590660095215, 'Numbers preds mapping': [9], 'Total time': 3.0057973861694336}, 'Learning time': 7.069, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.43 seconds
Total inference time: 1.169 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 02:22:34
{'CLL': -0.094637, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.169, 'Learning time': 3.43, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.702563
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.293 seconds
Total inference time: 0.709 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 02:22:36
{'CLL': -0.702563, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'Inference time': 0.709, 'Learning time': 1.293, 'Precision': [nan, 0.5], 'AUC PR': 1.0}


Starting fold 5

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.03926491737365723
   Generating paths time   = 3.181051015853882
   Generating mappings time   = 0.3409600257873535
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 3.561285972595215


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 118
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 578
Target test pos examples: 337
Target test neg examples: 337

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, J).;false;false
0;true,false,false;movie(M, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(K, A).;true;true
1;true,true;movie(K, B).;false;false
1;true,false;movie(L, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(J, A).;true;true
2;false;actor(B).;false;false
2;true,true;movie(J, B).;false;false
2;true,false;genre(L, C).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, B), movie(C, A).;false;true
3;true,false,true;movie(I, K), movie(J, K).;false;false
3;true,false;movie(I, A), movie(J, B).;true;false
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;false;true
4;false;actor(B).;false;true
4;false,false;movie(P, B).;false;false
4;true,false;movie(K, J).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, B), movie(C, A).;true;true
5;true,false,false;movie(L, K).;false;false
5;true,false;movie(H, A), movie(I, B).;true;true
5;true,true;movie(C, D).;false;false
5;true,false,true;movie(H, J), movie(I, J).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, A), movie(D, B).;false;true
6;false,true;movie(P, B).;false;false
6;false;director(B).;true;false
6;true,false;movie(K, J).;false;false
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(J, B).;false;true
7;false;director(B).;false;false
7;true,false;genre(N, C).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,false,false;movie(M, B).;false;false
8;true,false;movie(H, A).;true;true
8;true,true;movie(C, D).;false;false
8;true,false,true;movie(H, J).;false;false
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(D, A), movie(D, B).;false;true
9;false;director(B).;false;false
9;true,false,false;genre(M, C).;false;false
9;true,false;movie(J, A).;true;true
9;true,false,true;genre(L, C), movie(J, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( movie(G, B) )
%   | | then return 0.3207118471601494;  // std dev = 2,58e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), movie(F, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.17014253320337155;  // std dev = 0,247, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1534454987329606;  // std dev = 0,003, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.08566766502563528;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13473426863277102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07919126617428077;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.1339256261185767;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109598
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.649 seconds
Total inference time: 1.647 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.23e-07, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'false': [4.21e-08, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [3.16e-08, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A)', 'false': 'actor(B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 10], 'true,true,true': [0.0, 0, 35], 'false,true': [1.49e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'false': [1.49e-08, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false': 'movie(E, F)', 'false,false': 'movie(G, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 35], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 44, 0], 'false,false,true': [2.58e-08, 0, 10], 'false,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false': [2.11e-08, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false': 'movie(E, F)', 'false,true': 'movie(G, B)'}, {'true,false,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 44, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 10], 'true,true': [5.37e-08, 0, 35]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'director(B)'}, {'true,false': [0.0, 0, 0], 'false,false': [1.18e-08, 44, 0], 'true,true': [0.247, 1, 35], 'false,true': [7.45e-09, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.003, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false': [9.13e-09, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,true': [0.0, 0, 35], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'false,true': [7.45e-09, 0, 10], 'true,false,true,true': [0.0, 0, 0], 'false,false': [0.0, 44, 0]}]]
[{'': [0.021266540642723226, 4.0371746350005693e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.015181896531630958, 2.2709107321878203e-17], 'true': [0.015181896531630958, nan], 'true,true': [-9.473903143468002e-16, 0.0]}, {'': [0.012039361070842395, 0.06726754122121566], 'true': [0.012039361070842395, nan], 'false': [5.046468293750712e-18, -1.3322676295501878e-16], 'true,true': [-2.0301221021717148e-16, 0.0]}, {'': [0.005730803218362994, 5.046468293750712e-18], 'true': [-4.144832625267251e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0046154127961625475, 0.025787703242051048], 'true': [-1.2688263138573217e-17, 0.0], 'false': [-3.784851220313033e-18, 6.661338147750939e-17], 'true,false': [0.0, nan], 'false,false': [6.661338147750939e-17, nan]}, {'': [0.0024635773866361816, 1.0092936587501423e-17], 'true': [-2.960594732333751e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-2.960594732333751e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0022483216979789747, 0.012562051391882144], 'true': [8.247371040072592e-17, 0.0], 'false,true': [-2.7755575615628914e-17, nan], 'false': [-2.7755575615628914e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0016925167997529325, 0.009456601801794454], 'true': [0.0016925167997529325, nan], 'false': [5.551115123125783e-18, 3.1540426835941946e-18]}, {'': [0.0012160542952553445, 1.8924256101565167e-18], 'true': [1.4065702476825e-07, 0.0], 'true,false,true': [0.0, nan], 'true,true': [1.4065702476825e-07, nan], 'true,false': [0.0, nan]}, {'': [0.0012359141246040693, 0.005922576605640832], 'true': [-2.5376526277146434e-17, 0.0], 'true,false,true': [nan, 0.0], 'false': [5.551115123125783e-18, -2.523234146875356e-18], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '2;false;actor(B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;true;movie(D, A), movie(D, B).;true;true', '4;false;actor(B).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, A), movie(D, B).;true;true', '6;false;director(B).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;false;director(B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, A), movie(D, B).;true;true', '9;false;director(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.6842684934301482;  // std dev = 0,169, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5204068161054338;  // std dev = 0,180, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.5605717397455287;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.42485737034842913;  // std dev = 0,054, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.323622036764284;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783633;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32661104080383385;  // std dev = 0,046, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.25715702510590305;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.322594131967776;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25859849216795355;  // std dev = 0,042, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2111587598367726;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0851847513883968;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2127174441796611;  // std dev = 0,035, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.17812341706004817;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.21031379773045322;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.16579820198176806;  // std dev = 0,077, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.17425401204651442;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( director(B) )
%   | then return 0.17750566876745041;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1550374800975544;  // std dev = 0,032, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17632621407453095;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13630603124253993;  // std dev = 0,027, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1521592690101097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.134020400171789;  // std dev = 0,006, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114903
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.228 seconds
Total inference time: 1.404 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 02:22:50
{'CLL': -0.114903, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.109598, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.647, 'Learning time': 4.649, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 1.404, 'Mapping results': {'Knowledge compiling time': 0.03926491737365723, 'Generating paths time': 3.181051015853882, 'Possible mappings': [864], 'Max mapping': 65536, 'Finding best mapping': 1.430511474609375e-06, 'Generating mappings time': 0.3409600257873535, 'Numbers preds mapping': [9], 'Total time': 3.561285972595215}, 'Learning time': 6.877000000000001, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.6861389866026452;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5321349378684588;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3999123396959217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3047860505335217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.23934386074685432;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.19360164133068228;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.20975771563253573;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1605656866455847;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.17709649774527747;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.16542775201789628;  // std dev = 0,083, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.3197645944650544;  // std dev = 0,616, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14385447188457903;  // std dev = 0,074, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.2907205430207032;  // std dev = 0,588, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.213649
   Precision = 0.844612 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.915761


Total learning time: 3.622 seconds
Total inference time: 1.12 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 02:22:55
{'CLL': -0.213649, 'Recall': 1.0, 'F1': 0.915761, 'AUC ROC': 1.0, 'Inference time': 1.12, 'Learning time': 3.622, 'Precision': [0.844612, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */


Results
   AUC ROC   = 0.907946
   AUC PR    = 0.844488
   CLL	      = -0.726634
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.641 seconds
Total inference time: 0.746 seconds
AUC ROC: 0.907946


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 02:22:58
{'CLL': -0.726634, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.907946, 'Inference time': 0.746, 'Learning time': 1.641, 'Precision': [nan, 0.5], 'AUC PR': 0.844488}


