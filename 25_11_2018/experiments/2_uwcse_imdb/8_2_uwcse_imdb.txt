Starting experiment #8 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), ta(L, K, M) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(N, B) )
%   | | | then return 0.7734031723876481;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 7,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G), ta(F, H, E) )
%   | | then if ( ta(D, H, I) )
%   | | | then return 0.5261862825807958;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7312209353581769;  // std dev = 0,024, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.7308104757005569;  // std dev = 0,064, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( tempadvisedby(J, B), publication(K, A) )
%   | | then if ( publication(K, B) )
%   | | | then return 0.6522008798821627;  // std dev = 0,936, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.36908066213317675;  // std dev = 1,530, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.6538754683101603;  // std dev = 1,912, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return 0.4908910471366949;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.12544463852839158;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( publication(D, E), ta(F, E, G) )
%   | | then if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return 0.5795284293757195;  // std dev = 0,074, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5085625196062943;  // std dev = 0,929, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.5645022409650265;  // std dev = 0,045, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( tempadvisedby(J, B), publication(K, A) )
%   | | then if ( publication(K, L), ta(M, L, N) )
%   | | | then return 0.5440760251546006;  // std dev = 0,936, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.17182180748758613;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( hasposition(P, C), tempadvisedby(Q, P) )
%   | | | then return 0.5120620907831278;  // std dev = 2,107, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0.40189778971311596;  // std dev = 1,245, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( professor(B) )
%   | then return -0.0620543933556656;  // std dev = 0,238, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.2849102107037839;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4349238239481816;  // std dev = 0,117, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | | then return 0.28818145542349705;  // std dev = 0,887, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.43435602056880984;  // std dev = 0,024, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return 0.07915152967219151;  // std dev = 0,804, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3447227253953346;  // std dev = 2,578, 58,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   else return -0.10202181816779755;  // std dev = 0,013, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G), ta(D, H, G) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.3599657348667792;  // std dev = 0,109, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23858121876187632;  // std dev = 0,872, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.33157638707381676;  // std dev = 0,099, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | then if ( publication(J, B), publication(L, K) )
%   | | | then return 0.3605022935608738;  // std dev = 0,084, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18464776688541912;  // std dev = 1,508, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.29648675091094373;  // std dev = 1,903, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return 0.21943574152256048;  // std dev = 1,445, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.09304758469525168;  // std dev = 0,012, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( ta(H, G, I) )
%   | | | then return 0.2810241843072619;  // std dev = 0,098, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1570175028461109;  // std dev = 0,871, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.26277294332210116;  // std dev = 0,091, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then if ( hasposition(L, C), publication(J, L) )
%   | | | then return -0.10342467219902016;  // std dev = 1,080, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.35083522041265985;  // std dev = 0,118, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( hasposition(M, C), tempadvisedby(N, M) )
%   | | | then return 0.24105289522236295;  // std dev = 1,948, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.13390185418998643;  // std dev = 1,231, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( professor(B) )
%   | then return -0.06477398954520396;  // std dev = 0,219, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.08512384700978548;  // std dev = 5,37e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then return 0.25176236325366863;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.16270735990757884;  // std dev = 0,880, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.21528621671771722;  // std dev = 0,076, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), professor(J) )
%   | | | then return 0.03432486989018942;  // std dev = 1,551, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.2923887020629498;  // std dev = 0,113, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return 0.27755293067541886;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17654575329570912;  // std dev = 2,188, 57,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=51 */
%   else return -0.07920409225000659;  // std dev = 0,015, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(G, A, H), ta(G, I, F) )
%   | | then if ( samecourse(E, G) )
%   | | | then return 0.05220251368068514;  // std dev = 0,866, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19642416352555955;  // std dev = 0,052, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.18681807059254674;  // std dev = 0,096, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | then if ( publication(L, K), publication(J, A) )
%   | | | then return 0.20163516574339;  // std dev = 0,072, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08226283046259329;  // std dev = 1,580, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | else if ( tempadvisedby(M, B) )
%   | | | then return 0.23718493937108492;  // std dev = 0,561, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13837224147521418;  // std dev = 1,998, 48,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=43 */
%   else if ( professor(B) )
%   | then return -0.06081983049687434;  // std dev = 0,216, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.07316832067530038;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, H) )
%   | | | then return 0.1819372688685388;  // std dev = 0,100, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.05661957102875068;  // std dev = 0,861, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.15926014326131369;  // std dev = 0,091, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), professor(J) )
%   | | | then return -0.00316293672049366;  // std dev = 1,535, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.21670197854978998;  // std dev = 0,100, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( projectmember(K, B) )
%   | | | then return 0.19903297084346605;  // std dev = 0,070, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1175699315259453;  // std dev = 2,177, 56,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=50 */
%   else return -0.06885663295503455;  // std dev = 0,016, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( ta(F, A, G), ta(F, E, H) )
%   | | | then return 0.19534521666718108;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11742190503261193;  // std dev = 0,883, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else return 0.14529857708401947;  // std dev = 0,009, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(I, A), publication(J, B) )
%   | | then if ( publication(I, K), publication(J, K) )
%   | | | then return -0.16547646564378904;  // std dev = 0,984, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16203905254651466;  // std dev = 0,395, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( hasposition(L, C), tempadvisedby(M, L) )
%   | | | then return 0.11520635459336453;  // std dev = 1,913, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.019373340217679266;  // std dev = 1,244, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( professor(B) )
%   | then return -0.056164606538301756;  // std dev = 0,215, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.0641017932716741;  // std dev = 7,45e-09, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Predicates from source: ['advisedby(person,person).', 'samecourse(course,course).', 'student(person).', 'hasposition(person,faculty).', 'tempadvisedby(person,person).', 'publication(title,person).', 'professor(person).', 'ta(course,person,quarter).', 'projectmember(project,person).']

Starting fold 1

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.016733407974243164
   Generating paths time   = 2.6047565937042236
   Generating mappings time   = 0.3345918655395508
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 2.9560916423797607


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> genre(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 159
Target train pos examples: 56
Target train neg examples: 56

Target test facts examples: 537
Target test pos examples: 326
Target test neg examples: 326

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(K, A).;true;true
1;true,true;movie(K, B).;false;false
1;true,false;movie(L, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;false;director(B).;false;false
2;true,true;movie(D, E).;true;false
2;true,false,false;genre(P, C).;false;false
2;true,false;movie(K, A).;true;true
2;true,true,true;movie(I, H).;false;false
2;true,false,true;movie(K, L).;false;false
3;;workedunder(A, B) :- director(B), actor(A).;true;false
3;true;movie(G, A), movie(G, B).;false;true
3;true,false;movie(L, K).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(I, A).;false;true
4;true,false,true;movie(J, B), movie(L, K).;false;false
4;true,false,false;movie(M, B).;false;false
4;true,false;movie(J, A).;true;true
5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;true;movie(D, B), movie(D, A).;false;true
5;false;director(B).;false;false
5;true,false,false;genre(M, C).;false;false
5;true,false;movie(J, A), movie(K, B).;true;true
5;true,false,true;genre(L, C), movie(J, L).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,false;movie(L, K).;false;false
6;true,false;movie(I, A).;true;true
6;true,true;movie(C, D).;false;false
6;true,false,true;movie(I, J), director(J).;false;false
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(J, B).;true;false
7;false;director(B).;false;false
7;true,true;movie(L, K), movie(J, A).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,true;movie(I, J), director(J).;false;false
8;true,false,false;genre(B, K).;false;false
8;true,false;movie(I, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(D, B), movie(D, A).;false;true
9;false;director(B).;false;false
9;true,false,false;genre(L, C).;false;false
9;true,false;movie(I, A), movie(J, B).;true;true
9;true,false,true;movie(I, K), movie(J, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(F, G) )
%   | | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(H, A) )
%   | | then if ( movie(H, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.3134591607855986;  // std dev = 0,410, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25655312949795045;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( genre(G, C), movie(E, G) )
%   | | | then return -0.1226308450418712;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.21073268045892357;  // std dev = 3,65e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11003534702957246;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F), movie(D, A) )
%   | | then return 0.17781125850726218;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09971318845872554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15328585986932744;  // std dev = 4,47e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09111230842343153;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1344300203221034;  // std dev = 6,14e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), movie(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08384306188957968;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.118315
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.205 seconds
Total inference time: 1.735 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 1, 0], 'false': [5.16e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,true,true': 'movie(F, G)', 'false': 'director(B)', 'true,false': 'movie(H, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(H, I)'}, {'false,false': [3.8e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true,true': [1.03e-07, 0, 56], 'true,false,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'false': [3.33e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 55, 0], 'true,true': [0.41, 1, 56]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'genre(G, C), movie(E, G)'}, {'true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false,false': [1.83e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [3.65e-08, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'director(B)', 'true,true': 'movie(E, F), movie(D, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 1, 0], 'false,false': [1.05e-08, 55, 0], 'true,true,true': [5.16e-08, 0, 56], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [4.47e-08, 0, 56], 'true,false,true,true': [0.0, 1, 0], 'false': [1.49e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), movie(F, G)'}, {'true,true': [6.14e-08, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'false,false': [0.0, 55, 0]}]]
[{'': [0.017236072637734554, 4.844609562000683e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true': [0.012304599783948732, nan], 'true,true': [-1.9032394707859825e-16, 0.0]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,true': [1.9032394707859825e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true,true': [1.9032394707859825e-16, nan], 'false': [nan, 2.62416351275037e-17]}, {'': [0.004644692439814939, 2.0185873175002847e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0029456817402654088, -2.0185873175002845e-18], 'true': [0.0029456817402654088, nan]}, {'': [0.002478210910026975, 7.065055611250995e-18], 'true': [-2.3790493384824782e-17, 0.0], 'true,false,true': [0.0, nan], 'false': [nan, 6.0557619525008536e-18], 'true,false': [0.0, nan]}, {'': [0.0017734561827320115, 2.0185873175002845e-18], 'true': [2.3790493384824782e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [2.3790493384824782e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0013275191890340615, 2.0185873175002845e-18], 'true': [0.0013275191890340615, nan], 'false': [nan, 2.0185873175002845e-18], 'true,true': [4.7580986769649563e-17, 0.0]}, {'': [0.0010295186276491318, 4.037174635000569e-18], 'true': [3.568574007723718e-17, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0008211805944656018, -3.0278809762504268e-18], 'true': [6.740639792367021e-17, 0.0], 'true,false,true': [nan, 0.0], 'false': [nan, -3.0278809762504268e-18], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, A), movie(D, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '5;true;movie(D, B), movie(D, A).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;true;movie(E, F), movie(D, A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, B), movie(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.6913094771863096;  // std dev = 0,152, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5589621067898783;  // std dev = 0,026, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22260640147938018;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4201923719708212;  // std dev = 0,026, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18646460659223113;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.31934646083793183;  // std dev = 2,98e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.30932208600868016;  // std dev = 0,087, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25802499884792546;  // std dev = 0,027, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.20582288106600236;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,97e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2117736553519034;  // std dev = 0,024, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17420505771692296;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109177;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, E), movie(F, A) )
%   | then if ( female(A) )
%   | | then return 0.17567604721050956;  // std dev = 3,65e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.17021418635199081;  // std dev = 0,060, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15461824567985688;  // std dev = 0,021, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17363168658006448;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.13546970576863934;  // std dev = 0,019, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15011033449250266;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.132595
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.54 seconds
Total inference time: 1.915 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 05:44:49
{'CLL': -0.132595, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.118315, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.735, 'Learning time': 2.205, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 1.915, 'Mapping results': {'Knowledge compiling time': 0.016733407974243164, 'Generating paths time': 2.6047565937042236, 'Possible mappings': [864], 'Max mapping': 65536, 'Finding best mapping': 1.430511474609375e-06, 'Generating mappings time': 0.3345918655395508, 'Numbers preds mapping': [9], 'Total time': 2.9560916423797607}, 'Learning time': 5.745, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.692818318046742;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5367928709789455;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.40340088328536905;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3078944297924054;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.24240066496454704;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.2097577156325355;  // std dev = 2,98e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.19670004057326632;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16371858628713248;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.139091093402249;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1201377116837435;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.903675
   AUC PR    = 0.837662
   CLL	      = -0.289355
   Precision = 0.840206 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913165


Total learning time: 3.314 seconds
Total inference time: 1.067 seconds
AUC ROC: 0.903675


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 05:44:54
{'CLL': -0.289355, 'Recall': 1.0, 'F1': 0.913165, 'AUC ROC': 0.903675, 'Inference time': 1.067, 'Learning time': 3.314, 'Precision': [0.840206, 0.5], 'AUC PR': 0.837662}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.903675
   AUC PR    = 0.837662
   CLL	      = -0.727406
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.774 seconds
Total inference time: 1.093 seconds
AUC ROC: 0.903675


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 05:44:57
{'CLL': -0.727406, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.903675, 'Inference time': 1.093, 'Learning time': 1.774, 'Precision': [nan, 0.5], 'AUC PR': 0.837662}


Starting fold 2

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.01834273338317871
   Generating paths time   = 2.7527108192443848
   Generating mappings time   = 0.3424563407897949
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 3.1135194301605225


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> genre(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 150
Target train pos examples: 58
Target train neg examples: 58

Target test facts examples: 546
Target test pos examples: 324
Target test neg examples: 324

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(K, A).;true;true
1;true,true;movie(K, B).;false;false
1;true,false;movie(L, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;false;director(B).;false;false
2;true,true;movie(D, E).;true;false
2;true,false,false;genre(P, C).;false;false
2;true,false;movie(K, A).;true;true
2;true,true,true;movie(I, H).;false;false
2;true,false,true;movie(K, L).;false;false
3;;workedunder(A, B) :- director(B), actor(A).;true;false
3;true;movie(G, A), movie(G, B).;false;true
3;true,false;movie(L, K).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(I, A).;false;true
4;true,false,true;movie(J, B), movie(L, K).;false;false
4;true,false,false;movie(M, B).;false;false
4;true,false;movie(J, A).;true;true
5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;true;movie(D, B), movie(D, A).;false;true
5;false;director(B).;false;false
5;true,false,false;genre(M, C).;false;false
5;true,false;movie(J, A), movie(K, B).;true;true
5;true,false,true;genre(L, C), movie(J, L).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,false;movie(L, K).;false;false
6;true,false;movie(I, A).;true;true
6;true,true;movie(C, D).;false;false
6;true,false,true;movie(I, J), director(J).;false;false
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(J, B).;true;false
7;false;director(B).;false;false
7;true,true;movie(L, K), movie(J, A).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,true;movie(I, J), director(J).;false;false
8;true,false,false;genre(B, K).;false;false
8;true,false;movie(I, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(D, B), movie(D, A).;false;true
9;false;director(B).;false;false
9;true,false,false;genre(L, C).;false;false
9;true,false;movie(I, A), movie(J, B).;true;true
9;true,false,true;movie(I, K), movie(J, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(F, G) )
%   | | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(H, A) )
%   | | then if ( movie(H, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.3069317430485027;  // std dev = 0,575, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25780010463533476;  // std dev = 1,03e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( genre(G, C), movie(E, G) )
%   | | | then return -0.12193027188422127;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12193027188422127;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2116122885221122;  // std dev = 6,32e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.10946603354343344;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F), movie(D, A) )
%   | | then return 0.1784555484356207;  // std dev = 4,47e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09924220969856745;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15377405445688802;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09071670494451642;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.13481077551341003;  // std dev = 5,16e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), movie(F, G) )
%   | | | then return -0.08350639390864026;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.118594
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.547 seconds
Total inference time: 1.356 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'false': [5.16e-08, 56, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,true,true': 'movie(F, G)', 'false': 'director(B)', 'true,false': 'movie(H, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(H, I)'}, {'false,false': [3.94e-08, 56, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true,true': [1.19e-07, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'false': [3.8e-08, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0], 'true,true': [0.575, 2, 58]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'genre(G, C), movie(E, G)'}, {'true,true': [1.03e-07, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false,false': [1.83e-08, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [6.32e-08, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'director(B)', 'true,true': 'movie(E, F), movie(D, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 2, 0], 'false,false': [7.45e-09, 56, 0], 'true,true,true': [4.47e-08, 0, 58], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'false': [1.67e-08, 56, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), movie(F, G)'}, {'true,true': [5.16e-08, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false,false': [0.0, 56, 0]}]]
[{'': [0.03222222222222181, 4.7580986769649563e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0230030098461001, -2.973811673103098e-17], 'true': [0.0230030098461001, nan], 'true,true': [-1.2250736823450003e-16, 0.0]}, {'': [0.014364677666239759, 1.586032892321652e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,true': [2.4501473646900006e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true,true': [2.4501473646900006e-16, nan], 'false': [nan, 2.7755575615628914e-17]}, {'': [0.008683086634361459, 2.577303450022685e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.005506846810506941, -9.912705577010326e-19], 'true': [0.005506846810506941, nan]}, {'': [0.004646288451887763, 5.9476233462061954e-18], 'true': [1.8376105235175005e-16, 0.0], 'true,false,true': [0.0, 0.0], 'false': [nan, 5.9476233462061954e-18], 'true,false': [0.0, nan]}, {'': [0.0033218304201249197, 0.0], 'true': [6.891039463190627e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [6.891039463190627e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0024848503347887833, 9.912705577010326e-19], 'true': [0.0024848503347887833, nan], 'false': [nan, 9.912705577010326e-19], 'true,true': [3.4455197315953135e-17, 0.0]}, {'': [0.001926106901719519, 4.956352788505163e-18], 'true': [-1.5313421029312504e-17, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0015357880082991955, -2.9738116731030977e-18], 'true': [4.594026308793751e-17, 0.0], 'true,false,true': [0.0, nan], 'false': [nan, -2.9738116731030977e-18], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, A), movie(D, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '5;true;movie(D, B), movie(D, A).;true;true', '5;true,false;genre(G, C), movie(E, G).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;true;movie(E, F), movie(D, A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, B), movie(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.6792392193186044;  // std dev = 0,180, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.6978088468073818;  // std dev = 0,134, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5622849568829554;  // std dev = 0,017, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.22212888411027426;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42266728282135424;  // std dev = 0,016, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18611885648820614;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3037736573028103;  // std dev = 0,103, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3104050541671477;  // std dev = 0,076, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.26065041548338086;  // std dev = 0,018, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.20514566203534684;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21362117688742066;  // std dev = 0,002, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17370702697374352;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109179;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, E), movie(F, A) )
%   | then return 0.1689226052786201;  // std dev = 0,059, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15633294759173366;  // std dev = 0,002, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17302139234136016;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.13875834992926012;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13577404093813694;  // std dev = 2,36e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.14964586792370022;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.133966
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.379 seconds
Total inference time: 1.868 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 05:45:10
{'CLL': -0.133966, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.118594, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.356, 'Learning time': 2.547, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 1.868, 'Mapping results': {'Knowledge compiling time': 0.01834273338317871, 'Generating paths time': 2.7527108192443848, 'Possible mappings': [864], 'Max mapping': 65536, 'Finding best mapping': 9.5367431640625e-07, 'Generating mappings time': 0.3424563407897949, 'Numbers preds mapping': [9], 'Total time': 3.1135194301605225}, 'Learning time': 5.926, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.6989783104778774;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.541086978177925;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4066344623991659;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.3025884514838787;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3107971418551718;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.23719304019103774;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2452701034529891;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.19142843787805347;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.19961850189633581;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.19704130244869125;  // std dev = 0,049, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.36428450834325343;  // std dev = 0,797, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16771875489870317;  // std dev = 0,044, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.3257930210983801;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.14559662832943784;  // std dev = 0,039, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.2903050856307372;  // std dev = 0,691, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.179547
   Precision = 0.841558 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913963


Total learning time: 4.169 seconds
Total inference time: 1.443 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 05:45:17
{'CLL': -0.179547, 'Recall': 1.0, 'F1': 0.913963, 'AUC ROC': 1.0, 'Inference time': 1.443, 'Learning time': 4.169, 'Precision': [0.841558, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */


Results
   AUC ROC   = 0.903949
   AUC PR    = 0.837936
   CLL	      = -0.732972
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.339 seconds
Total inference time: 1.049 seconds
AUC ROC: 0.903949


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 05:45:20
{'CLL': -0.732972, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.903949, 'Inference time': 1.049, 'Learning time': 1.339, 'Precision': [nan, 0.5], 'AUC PR': 0.837936}


Starting fold 3

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.028948545455932617
   Generating paths time   = 2.6734673976898193
   Generating mappings time   = 0.33403444290161133
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 3.0364603996276855


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> genre(B,A)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 163
Target train pos examples: 178
Target train neg examples: 178

Target test facts examples: 533
Target test pos examples: 204
Target test neg examples: 204

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(K, A).;true;true
1;true,true;movie(K, B).;false;false
1;true,false;movie(L, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;false;director(B).;false;false
2;true,true;movie(D, E).;true;false
2;true,false,false;genre(P, C).;false;false
2;true,false;movie(K, A).;true;true
2;true,true,true;movie(I, H).;false;false
2;true,false,true;movie(K, L).;false;false
3;;workedunder(A, B) :- director(B), actor(A).;true;false
3;true;movie(G, A), movie(G, B).;false;true
3;true,false;movie(L, K).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(I, A).;false;true
4;true,false,true;movie(J, B), movie(L, K).;false;false
4;true,false,false;movie(M, B).;false;false
4;true,false;movie(J, A).;true;true
5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;true;movie(D, B), movie(D, A).;false;true
5;false;director(B).;false;false
5;true,false,false;genre(M, C).;false;false
5;true,false;movie(J, A), movie(K, B).;true;true
5;true,false,true;genre(L, C), movie(J, L).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,false;movie(L, K).;false;false
6;true,false;movie(I, A).;true;true
6;true,true;movie(C, D).;false;false
6;true,false,true;movie(I, J), director(J).;false;false
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(J, B).;true;false
7;false;director(B).;false;false
7;true,true;movie(L, K), movie(J, A).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,true;movie(I, J), director(J).;false;false
8;true,false,false;genre(B, K).;false;false
8;true,false;movie(I, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(D, B), movie(D, A).;false;true
9;false;director(B).;false;false
9;true,false,false;genre(L, C).;false;false
9;true,false;movie(I, A), movie(J, B).;true;true
9;true,false,true;movie(I, K), movie(J, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(F, G) )
%   | | | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(H, A) )
%   | | then if ( movie(H, I) )
%   | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.30712539016606777;  // std dev = 2,850, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43439164876689973;  // std dev = 0,365, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then return -0.12315601817729212;  // std dev = 0,150, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10429320596924664;  // std dev = 0,124, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.24466597730959094;  // std dev = 2,656, 222,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09495540081523991;  // std dev = 0,114, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2665795560254079;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( genre(G, C), movie(E, G) )
%   | | | then return -0.11323626334663238;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11323626334663238;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.1431971319092823;  // std dev = 2,007, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.08479894370306516;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2370069068202419;  // std dev = 0,416, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1408933639392821;  // std dev = 0,268, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08211357537080081;  // std dev = 0,169, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F), movie(D, A) )
%   | | then return 0.18010550150034868;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.09011498652652204;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.09452690392456838;  // std dev = 1,690, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.07271095873814011;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1742009991815661;  // std dev = 0,415, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12751178726151127;  // std dev = 0,309, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07234211528303038;  // std dev = 0,201, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.13354873766158093;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), movie(F, G) )
%   | | | then return -0.07379131539015643;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0737913153901564;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.06670417534159623;  // std dev = 1,483, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.06351685134821672;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0963
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.78 seconds
Total inference time: 1.26 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.09e-06, 0, 178], 'true,false,true,true': [4.59e-08, 44, 0], 'false': [9.42e-08, 134, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 134, 0], 'true,true,true': [0.0, 0, 178], 'true,true,false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,true,true': 'movie(F, G)', 'false': 'director(B)', 'true,false': 'movie(H, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(H, I)'}, {'false,false': [9.54e-08, 126, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false,true': [2.85, 29, 49], 'true,true,true,true': [4.77e-07, 0, 129], 'true,false,true,true': [1.05e-08, 23, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.15, 44, 0], 'true,true': [0.365, 0, 178], 'true,false,false': [0.0, 0, 0], 'false': [0.124, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.114, 134, 0], 'true,true': [2.656, 44, 178]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'genre(G, C), movie(E, G)'}, {'true,true': [0.0, 0, 129], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 11, 0], 'false,true': [2.007, 29, 49], 'true,false,true,true': [0.0, 12, 0], 'false,false': [0.0, 126, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.416, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.268, 44, 0], 'false': [0.169, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'director(B)', 'true,true': 'movie(E, F), movie(D, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 23, 0], 'false,false': [0.0, 126, 0], 'true,true,true': [0.0, 0, 129], 'false,true': [1.69, 29, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.415, 0, 178], 'true,false,true,true': [0.309, 44, 0], 'false': [0.201, 134, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), movie(F, G)'}, {'true,true': [0.0, 0, 129], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [1.05e-08, 19, 0], 'false,true': [1.483, 29, 49], 'true,false,true,true': [0.0, 4, 0], 'false,false': [0.0, 126, 0]}]]
[{'': [0.15891567242919188, 6.628197161941232e-17], 'true': [6.706246045376226e-15, 4.794144879063176e-17], 'true,false,true': [4.794144879063176e-17, nan], 'true,false': [4.794144879063176e-17, nan]}, {'': [0.11344775516652696, -2.6512788647764932e-17], 'true': [0.11344775516652696, nan], 'true,true': [-3.193450497798203e-15, -2.7755575615628914e-17]}, {'': [0.057249377286753104, 0.08135941927804699], 'true': [1.7625866313428842e-15, 4.827056628805028e-18], 'false': [0.10412266355706305, 7.225260953909749e-17], 'true,true': [1.7625866313428842e-15, nan], 'true,false': [4.827056628805028e-18, nan], 'true,true,true': [1.7625866313428842e-15, nan], 'true,false,true': [4.827056628805028e-18, nan]}, {'': [0.050102651617699306, 0.0001145519984067139], 'true': [0.0007499614158413787, 0.0005090887646135175], 'true,false': [0.0005090887646135175, nan]}, {'': [0.031769583587334865, 9.770506456830527e-05], 'true': [0.031769583587334865, nan]}, {'': [0.018525778569359136, 0.03201960904865403], 'true': [-1.1016166445893026e-16, 7.240584943207542e-18], 'true,false,true': [-9.25185853854297e-18, -7.569702440626067e-18], 'false': [0.05163693347332529, -2.2909364000201642e-17], 'true,false': [7.240584943207542e-18, nan]}, {'': [0.023796934412749975, 0.0002119280243783274], 'true': [0.0009727975653525211, 0.001626738036861876], 'true,false,true': [0.001626738036861876, nan], 'true,true': [0.0009727975653525211, nan], 'true,false': [0.001626738036861876, nan]}, {'': [0.009377064826329124, 0.020606730895451085], 'true': [0.009377064826329124, nan], 'false': [0.036619863520044864, -1.850371707708594e-17], 'true,true': [-7.573614431551455e-17, -9.654113257610057e-18]}, {'': [0.01567278975071432, 0.0003026887243395481], 'true': [0.0009683108824322892, 0.0021705871153347408], 'true,false,true': [0.0021705871153347408, nan], 'true,false': [0.0021705871153347408, nan]}, {'': [0.005520733473758151, 0.01479065245643076], 'true': [-2.7540416114732565e-17, 6.033820786006285e-18], 'true,false,true': [0.0, 5.843279076974508e-18], 'false': [0.028209485132075114, -1.057355261547768e-17], 'true,false': [6.033820786006285e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, A), movie(D, B).;true;true', '2;false;director(B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '5;true;movie(D, B), movie(D, A).;true;true', '5;false;director(B).;true;true', '5;true,false;genre(G, C), movie(E, G).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;true;movie(E, F), movie(D, A).;true;true', '7;false;director(B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, B), movie(D, A).;true;true', '9;false;director(B).;true;true', '9;true,false;movie(E, G), movie(F, G).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5400217908149866;  // std dev = 0,346, 113,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=89 */
%   | | else return 0.5644425772129087;  // std dev = 0,327, 109,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5953899343810255;  // std dev = 0,032, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.19888235433849988;  // std dev = 0,009, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5982872014917212;  // std dev = 0,014, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.17563349430965036;  // std dev = 0,211, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44854244073302957;  // std dev = 0,039, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.17102200718766267;  // std dev = 0,018, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10125989938733876;  // std dev = 0,015, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34184356791290577;  // std dev = 0,035, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1481209441504111;  // std dev = 0,016, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.09240967459338188;  // std dev = 0,014, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.26905191415769725;  // std dev = 0,026, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.128833737817767;  // std dev = 0,006, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.27084969641097184;  // std dev = 0,012, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.11783793724980231;  // std dev = 0,125, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.08523292590264232;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2217991006548274;  // std dev = 0,004, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2179269573588842;  // std dev = 0,002, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.11550114862477018;  // std dev = 0,002, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11882404155904107;  // std dev = 0,002, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then return -0.078818119751937;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.07212898815210687;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, E), movie(F, A) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.18621448468606316;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.18312062867743037;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return -0.10369647347974509;  // std dev = 0,000936, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(H, A), movie(H, B) )
%   | | then if ( female(A) )
%   | | | then return 0.18550405118499305;  // std dev = 4,94e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.18241935277104218;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( director(A) )
%   | | | then return -0.0674481438053892;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10737433764198932;  // std dev = 0,005, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07328210854600906;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.15937426925883638;  // std dev = 0,003, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.157256994927254;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.09480446050324877;  // std dev = 0,001, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.0972326988594656;  // std dev = 0,001, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then return -0.06845838577093037;  // std dev = 1,49e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.06332751106172457;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.1393875099636234;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.13755779872960142;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( movie(E, F), movie(G, F) )
%   | | then if ( female(A) )
%   | | | then return -0.08606234360856412;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08754221037752377;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(H, A), movie(H, B) )
%   | | then return 0.13864941778221562;  // std dev = 0,000639, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( director(A) )
%   | | | then return -0.05967337473653422;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08936441853008333;  // std dev = 0,003, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.06421955059789843;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097155
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.195 seconds
Total inference time: 1.712 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 05:45:40
{'CLL': -0.097155, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.0963, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.26, 'Learning time': 5.78, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 1.712, 'Mapping results': {'Knowledge compiling time': 0.028948545455932617, 'Generating paths time': 2.6734673976898193, 'Possible mappings': [864], 'Max mapping': 65536, 'Finding best mapping': 9.5367431640625e-07, 'Generating mappings time': 0.33403444290161133, 'Numbers preds mapping': [9], 'Total time': 3.0364603996276855}, 'Learning time': 12.975000000000001, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.12544463852839122;  // std dev = 6,66e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.11231637819360615;  // std dev = 1,04e-07, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.10159632948783644;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.09269127618926074;  // std dev = 8,30e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.0851847513883968;  // std dev = 7,15e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.07877675473109153;  // std dev = 7,88e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333727;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06419184008202626;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.962 seconds
Total inference time: 1.628 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 05:45:48
{'CLL': -0.094637, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.628, 'Learning time': 5.962, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.702563
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.116 seconds
Total inference time: 0.891 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 05:45:52
{'CLL': -0.702563, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'Inference time': 0.891, 'Learning time': 2.116, 'Precision': [nan, 0.5], 'AUC PR': 1.0}


Starting fold 4

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.01731085777282715
   Generating paths time   = 3.1946945190429688
   Generating mappings time   = 0.5036447048187256
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.6689300537109375e-06
   Total time   = 3.715660810470581


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 106
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 590
Target test pos examples: 337
Target test neg examples: 337

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(K, A).;true;true
1;true,true;movie(K, B).;false;false
1;true,false;movie(L, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;false;director(B).;false;false
2;true,true;movie(D, E).;true;false
2;true,false,false;genre(P, C).;false;false
2;true,false;movie(K, A).;true;true
2;true,true,true;movie(I, H).;false;false
2;true,false,true;movie(K, L).;false;false
3;;workedunder(A, B) :- director(B), actor(A).;true;false
3;true;movie(G, A), movie(G, B).;false;true
3;true,false;movie(L, K).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(I, A).;false;true
4;true,false,true;movie(J, B), movie(L, K).;false;false
4;true,false,false;movie(M, B).;false;false
4;true,false;movie(J, A).;true;true
5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;true;movie(D, B), movie(D, A).;false;true
5;false;director(B).;false;false
5;true,false,false;genre(M, C).;false;false
5;true,false;movie(J, A), movie(K, B).;true;true
5;true,false,true;genre(L, C), movie(J, L).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,false;movie(L, K).;false;false
6;true,false;movie(I, A).;true;true
6;true,true;movie(C, D).;false;false
6;true,false,true;movie(I, J), director(J).;false;false
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(J, B).;true;false
7;false;director(B).;false;false
7;true,true;movie(L, K), movie(J, A).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,true;movie(I, J), director(J).;false;false
8;true,false,false;movie(K, B).;false;false
8;true,false;movie(I, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(D, B), movie(D, A).;false;true
9;false;director(B).;false;false
9;true,false,false;genre(L, C).;false;false
9;true,false;movie(I, A), movie(J, B).;true;true
9;true,false,true;movie(I, K), movie(J, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(F, G) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(H, A) )
%   | | then if ( movie(H, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.26506142670926736;  // std dev = 1,017, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2658924197701948;  // std dev = 6,66e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( genre(G, C), movie(E, G) )
%   | | | then return -0.11751798903364166;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.21730244557561898;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.10586756520504982;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F), movie(D, A) )
%   | | then return 0.18261073821391427;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09625619894111968;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15691422309144173;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.08820200790069554;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.13725441210859132;  // std dev = 3,49e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), movie(F, G) )
%   | | | then return -0.08136148123890846;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08136148123890846;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.119077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.001 seconds
Total inference time: 1.48 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.23e-07, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'false': [3.8e-08, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 38, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,true,true': 'movie(F, G)', 'false': 'director(B)', 'true,false': 'movie(H, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(H, I)'}, {'false,false': [0.0, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 7, 0], 'true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 38, 0], 'true,true': [1.017, 7, 45]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'genre(G, C), movie(E, G)'}, {'true,true': [6.66e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'false,false': [2.24e-08, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'director(B)', 'true,true': 'movie(E, F), movie(D, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 7, 0], 'false,false': [1.05e-08, 38, 0], 'true,true,true': [0.0, 0, 45], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'false': [0.0, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), movie(F, G)'}, {'true,true': [3.49e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'false,false': [0.0, 38, 0]}]]
[{'': [0.11649408284023735, 3.7981314000334304e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false,true': [-7.93016446160826e-18, nan], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.0831635545216455, -1.7529837230923523e-17], 'true': [0.0831635545216455, nan], 'true,true': [-9.473903143468002e-16, -1.982541115402065e-18]}, {'': [0.05193310189730332, -1.1686558153949016e-17], 'true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,true,true': [-3.947459643111668e-17, nan], 'false': [nan, -8.764918615461762e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.0313922549076915, -8.764918615461762e-18], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.019909088333742615, -1.1686558153949016e-17], 'true': [0.019909088333742615, nan]}, {'': [0.017125042750526866, 1.3147377923192643e-17], 'true': [9.868649107779169e-17, 0.0], 'true,false,true': [0.0, nan], 'false': [nan, 1.3147377923192643e-17], 'true,false': [0.0, nan]}, {'': [0.01216650872722369, 0.0], 'true': [-8.881784197001253e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan], 'true,false': [0.0, nan]}, {'': [0.009059368387959411, 2.921639538487254e-18], 'true': [0.009059368387959411, nan], 'false': [nan, 2.921639538487254e-18], 'true,true': [-6.41462192005646e-17, -1.982541115402065e-18]}, {'': [0.006999193605463783, -7.304098846218135e-19], 'true': [-2.960594732333751e-17, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.005567591079733572, -1.460819769243627e-18], 'true': [2.7138785046392715e-17, 9.912705577010326e-19], 'true,false,true': [0.0, 0.0], 'false': [nan, -1.460819769243627e-18], 'true,false': [9.912705577010326e-19, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, A), movie(D, B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '5;true;movie(D, B), movie(D, A).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;true;movie(E, F), movie(D, A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, B), movie(D, A).;true;true', '9;true,false;movie(E, G), movie(F, G).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5894860197895166;  // std dev = 0,305, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.6111505851930897;  // std dev = 0,282, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5832158693056174;  // std dev = 0,015, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20802651085303023;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360642;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4385092601109628;  // std dev = 0,015, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1758261403458574;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33498705511027194;  // std dev = 0,014, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15177977420830074;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.26489193429745556;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13325413753469775;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21660132245767147;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11860152877843914;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, E), movie(F, A) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.1821003705816936;  // std dev = 0,009, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10675343295114105;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15652959173557354;  // std dev = 0,008, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09699283762877117;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1369558042686464;  // std dev = 0,007, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, F), movie(G, F) )
%   | | then return -0.08882349657874271;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.129701
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.461 seconds
Total inference time: 1.471 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 05:46:06
{'CLL': -0.129701, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.119077, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.48, 'Learning time': 3.001, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 1.471, 'Mapping results': {'Knowledge compiling time': 0.01731085777282715, 'Generating paths time': 3.1946945190429688, 'Possible mappings': [864], 'Max mapping': 65536, 'Finding best mapping': 1.6689300537109375e-06, 'Generating mappings time': 0.5036447048187256, 'Numbers preds mapping': [9], 'Total time': 3.715660810470581}, 'Learning time': 6.462, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.938 seconds
Total inference time: 0.928 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 05:46:12
{'CLL': -0.094637, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.928, 'Learning time': 4.938, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.702563
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.16 seconds
Total inference time: 0.945 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 05:46:16
{'CLL': -0.702563, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'Inference time': 0.945, 'Learning time': 2.16, 'Precision': [nan, 0.5], 'AUC PR': 1.0}


Starting fold 5

Target predicate: workedunder
Mapping Results
   Knowledge compiling time   = 0.017168521881103516
   Generating paths time   = 2.6699182987213135
   Generating mappings time   = 0.33072614669799805
   Possible mappings   = [864]
   Max mapping   = 65536
   Numbers predicates mapping   = [9]
   Finding best mapping   = 1.6689300537109375e-06
   Total time   = 3.017822742462158


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'projectmember(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

Target train facts examples: 118
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 578
Target test pos examples: 337
Target test neg examples: 337

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false,true;movie(I, K).;false;false
0;true,false,false;movie(N, B).;false;false
0;true,false;movie(I, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(K, A).;true;true
1;true,true;movie(K, B).;false;false
1;true,false;movie(L, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;false;director(B).;false;false
2;true,true;movie(D, E).;true;false
2;true,false,false;genre(P, C).;false;false
2;true,false;movie(K, A).;true;true
2;true,true,true;movie(I, H).;false;false
2;true,false,true;movie(K, L).;false;false
3;;workedunder(A, B) :- director(B), actor(A).;true;false
3;true;movie(G, A), movie(G, B).;false;true
3;true,false;movie(L, K).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(I, A).;false;true
4;true,false,true;movie(J, B), movie(L, K).;false;false
4;true,false,false;movie(M, B).;false;false
4;true,false;movie(J, A).;true;true
5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;true;movie(D, B), movie(D, A).;false;true
5;false;director(B).;false;false
5;true,false,false;genre(M, C).;false;false
5;true,false;movie(J, A), movie(K, B).;true;true
5;true,false,true;genre(L, C), movie(J, L).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, B), movie(C, A).;true;true
6;true,false,false;movie(L, K).;false;false
6;true,false;movie(I, A).;true;true
6;true,true;movie(C, D).;false;false
6;true,false,true;movie(I, J), director(J).;false;false
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(J, B).;true;false
7;false;director(B).;false;false
7;true,true;movie(L, K), movie(J, A).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, B), movie(C, A).;false;true
8;true,false,true;movie(I, J), director(J).;false;false
8;true,false,false;movie(K, B).;false;false
8;true,false;movie(I, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(D, B), movie(D, A).;false;true
9;false;director(B).;false;false
9;true,false,false;genre(L, C).;false;false
9;true,false;movie(I, A), movie(J, B).;true;true
9;true,false,true;movie(I, K), movie(J, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(F, G) )
%   | | | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(H, A) )
%   | | then if ( movie(H, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.31172482273951;  // std dev = 0,409, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25688406571860356;  // std dev = 5,16e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( genre(G, C), movie(E, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12244436533446545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.2568840657186037;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.21096619520946366;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.10988386049367667;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F), movie(D, A) )
%   | | then return 0.17798235393415826;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.09958790555491852;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.17798235393415815;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15341553723906312;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.0910071031568373;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.13453118136876618;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), movie(F, G) )
%   | | | then return -0.083753549840975;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.13453118136876618;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106885
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.634 seconds
Total inference time: 1.609 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.23e-07, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'false': [4.21e-08, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [3.16e-08, 44, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,true,true': 'movie(F, G)', 'false': 'director(B)', 'true,false': 'movie(H, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(H, I)'}, {'false,false': [1.49e-08, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 10], 'true,true,true,true': [0.0, 0, 35], 'true,false,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0], 'true,true': [0.409, 1, 45]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'genre(G, C), movie(E, G)'}, {'true,true': [5.16e-08, 0, 35], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'false,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 0, 0], 'false,false': [2.24e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'director(B)', 'true,true': 'movie(E, F), movie(D, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 1, 0], 'false,false': [1.18e-08, 44, 0], 'true,true,true': [0.0, 0, 35], 'false,true': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.11e-08, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'false': [9.13e-09, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), movie(F, G)'}, {'true,true': [1.05e-08, 0, 35], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'false,false': [0.0, 44, 0]}]]
[{'': [0.021266540642723226, 4.0371746350005693e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.015181896531630958, 2.2709107321878203e-17], 'true': [0.015181896531630958, nan], 'true,true': [-9.473903143468002e-16, 0.0]}, {'': [0.012039361070842395, 0.06726754122121566], 'true': [-2.0301221021717148e-16, 0.0], 'true,true,true': [-2.0301221021717148e-16, nan], 'false': [-1.3322676295501878e-16, 5.046468293750712e-18], 'true,false': [0.0, nan], 'true,true': [-2.0301221021717148e-16, nan], 'true,false,true': [0.0, nan]}, {'': [0.005730803218362994, 1.0092936587501423e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0036344973571725593, -3.784851220313033e-18], 'true': [0.0036344973571725593, nan]}, {'': [0.0038859197925783023, 0.017655992208598224], 'true': [7.612957883143931e-17, 0.0], 'true,false,true': [nan, 0.0], 'false': [-2.2204460492503132e-17, 1.1354553660939102e-17], 'true,false': [0.0, nan]}, {'': [0.002189278885166242, 0.0], 'true': [-3.947459643111668e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,false': [0.0, nan]}, {'': [0.002080697309682985, 0.009523645978395435], 'true': [0.002080697309682985, nan], 'false': [0.0, 3.1540426835941946e-18], 'true,true': [-1.9032394707859827e-17, 0.0]}, {'': [0.0012705147548273555, 1.8924256101565167e-18], 'true': [9.86864910777917e-18, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0012867961695801067, 0.005958837198900578], 'true': [3.1720657846433043e-18, 0.0], 'true,false,true': [0.0, nan], 'false': [-2.7755575615628915e-18, -2.523234146875356e-18], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, A), movie(D, B).;true;true', '2;false;director(B).;true;true', '3;;workedunder(A, B) :- director(B), actor(A).;true;true', '3;true;movie(C, A), movie(C, B).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '5;true;movie(D, B), movie(D, A).;true;true', '5;false;director(B).;true;true', '6;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;true;movie(C, B), movie(C, A).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;true;movie(E, F), movie(D, A).;true;true', '7;false;director(B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, B), movie(D, A).;true;true', '9;false;director(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.6842684934301482;  // std dev = 0,169, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5595802534599584;  // std dev = 0,026, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2213903197676109;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.5605717397455287;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.420820794555787;  // std dev = 0,029, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1855826081306939;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.30647128107954963;  // std dev = 0,097, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.31903640259911054;  // std dev = 0,000390, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25851148137926394;  // std dev = 0,027, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.20455184343527102;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.25936773773795363;  // std dev = 0,014, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21225219185585445;  // std dev = 0,027, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17326871467431332;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, E), movie(F, A) )
%   | then if ( female(A) )
%   | | then return 0.16395914345575197;  // std dev = 0,076, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.1754008488886996;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.1793387890940422;  // std dev = 0,011, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15505485257535648;  // std dev = 0,025, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17193920323885126;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.13596681766963556;  // std dev = 0,021, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.14882016010409346;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.13526312196012377;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11647
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.91 seconds
Total inference time: 1.803 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 05:46:29
{'CLL': -0.11647, 'Recall': 1.0, 'F1': 1.0, 'parameter': {'CLL': -0.106885, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.609, 'Learning time': 2.634, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}, 'AUC ROC': 1.0, 'Inference time': 1.803, 'Mapping results': {'Knowledge compiling time': 0.017168521881103516, 'Generating paths time': 2.6699182987213135, 'Possible mappings': [864], 'Max mapping': 65536, 'Finding best mapping': 1.6689300537109375e-06, 'Generating mappings time': 0.33072614669799805, 'Numbers preds mapping': [9], 'Total time': 3.017822742462158}, 'Learning time': 5.5440000000000005, 'Precision': [1.0, 0.5], 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.6861389866026452;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5321349378684588;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3999123396959217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3047860505335217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.23934386074685432;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.19360164133068228;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.20975771563253573;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1605656866455847;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.17709649774527747;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16542775201789628;  // std dev = 0,083, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.3197645944650544;  // std dev = 0,616, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14385447188457903;  // std dev = 0,074, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.2907205430207032;  // std dev = 0,588, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.213649
   Precision = 0.844612 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.915761


Total learning time: 4.768 seconds
Total inference time: 1.96 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 05:46:36
{'CLL': -0.213649, 'Recall': 1.0, 'F1': 0.915761, 'AUC ROC': 1.0, 'Inference time': 1.96, 'Learning time': 4.768, 'Precision': [0.844612, 0.5], 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */


Results
   AUC ROC   = 0.907946
   AUC PR    = 0.844488
   CLL	      = -0.726634
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.346 seconds
Total inference time: 0.911 seconds
AUC ROC: 0.907946


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 05:46:39
{'CLL': -0.726634, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.907946, 'Inference time': 0.911, 'Learning time': 1.346, 'Precision': [nan, 0.5], 'AUC PR': 0.844488}


