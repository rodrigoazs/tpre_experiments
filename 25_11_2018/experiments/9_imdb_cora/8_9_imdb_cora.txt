Starting experiment #8 for 9_imdb_cora

Start learning from source dataset

Source train facts examples: 696
Source train pos examples: 382
Source train neg examples: 382

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048804;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839202;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360675;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783649;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926053;  // std dev = 1,13e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 9,19e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109143;  // std dev = 2,98e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333703;  // std dev = 8,56e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420307;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202618;  // std dev = 4,71e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */


Predicates from source: ['workedunder(person,person).', 'director(person).', 'movie(movie,person).', 'actor(person).']

Starting fold 1

Target predicate: sameauthor
Mapping Results
   Knowledge compiling time   = 0.08853316307067871
   Generating paths time   = 2.7077507972717285
   Generating mappings time   = 0.002653360366821289
   Possible mappings   = [6]
   Max mapping   = 121
   Numbers predicates mapping   = [4]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.7989444732666016


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

Target train facts examples: 7254
Target train pos examples: 209
Target train neg examples: 16

Target test facts examples: 34492
Target test pos examples: 603
Target test neg examples: 58

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7870378239883978;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.662488340457355;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5156213669758928;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3876955880049945;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2940939243456708;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.22896466584551245;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18317125213999816;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15002240685857746;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.12526566858187835;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10624539867445687;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.724138
   AUC PR    = 0.949606
   CLL	      = -0.255665
   Precision = 0.949606 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.974152


Total learning time: 5.134 seconds
Total inference time: 1.893 seconds
AUC ROC: 0.724138


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.855, 16, 209], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.855, 16, 209], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.855, 16, 209], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.855, 16, 209], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.855, 16, 209], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.855, 16, 209], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.855, 16, 209], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.855, 16, 209], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.855, 16, 209], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.855, 16, 209], 'false': [0.0, 0, 0]}]]
[{'': [0.06605432098765972, nan]}, {'': [0.06605432098765264, nan]}, {'': [0.06605432098765675, nan]}, {'': [0.06605432098765261, nan]}, {'': [0.06605432098765453, nan]}, {'': [0.06605432098765375, nan]}, {'': [0.06605432098765465, nan]}, {'': [0.06605432098765432, nan]}, {'': [0.066054320987654, nan]}, {'': [0.06605432098765424, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then return 0.6914822684328449;  // std dev = 0,373, 96,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=80 */
%   | else return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.7518526675222028;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5296304452999799;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.7302664973147038;  // std dev = 0,065, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7224854359608386;  // std dev = 0,107, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.6232851875207982;  // std dev = 0,061, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4156680846565321;  // std dev = 3,516, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.5662835398208705;  // std dev = 0,082, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.5584090196602275;  // std dev = 0,134, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.47051391078649357;  // std dev = 0,064, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3154110677046846;  // std dev = 3,515, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.4258722447352197;  // std dev = 0,082, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.4198530622636554;  // std dev = 0,135, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.2460391484167996;  // std dev = 0,399, 78,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=62 */
%   | | else return 0.3265208700363946;  // std dev = 0,074, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.32234985920294645;  // std dev = 0,123, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( author(F, A), title(F, E) )
%   | | then return 0.32387312081863684;  // std dev = 0,089, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.17488756544184555;  // std dev = 3,510, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | | else return 0.25921374642777484;  // std dev = 0,065, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.25632078298975425;  // std dev = 0,108, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.2588216459763901;  // std dev = 0,079, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1338236365856115;  // std dev = 3,511, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.21265803787365617;  // std dev = 0,057, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.21058781335169507;  // std dev = 0,095, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( author(F, A), title(F, E) )
%   | | then return 0.22683959723782454;  // std dev = 0,094, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.10261660880742852;  // std dev = 3,508, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | | else return 0.17925217534892382;  // std dev = 0,050, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.17771730451595763;  // std dev = 0,084, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.1906628217138541;  // std dev = 0,083, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.08050351304637486;  // std dev = 3,509, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.15439794600493875;  // std dev = 0,044, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.15322278147630472;  // std dev = 0,075, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.07146091256902554;  // std dev = 0,398, 78,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=62 */
%   | | else return 0.1353113416240533;  // std dev = 0,040, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.13438645490218631;  // std dev = 0,067, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.766569
   AUC PR    = 0.962435
   CLL	      = -0.2897
   Precision = 0.949606 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.974152


Total learning time: 13.901 seconds
Total inference time: 23.481 seconds
AUC ROC: 0.766569


Refined model AUC ROC: 0.766569


Dataset: 9_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 06:40:04
{'CLL': -0.2897, 'Recall': 1.0, 'F1': 0.974152, 'parameter': {'CLL': -0.255665, 'Recall': 1.0, 'F1': 0.974152, 'AUC ROC': 0.724138, 'Inference time': 1.893, 'Learning time': 5.134, 'Precision': [0.949606, 0.5], 'AUC PR': 0.949606}, 'AUC ROC': 0.766569, 'Inference time': 23.481, 'Mapping results': {'Knowledge compiling time': 0.08853316307067871, 'Generating paths time': 2.7077507972717285, 'Possible mappings': [6], 'Max mapping': 121, 'Finding best mapping': 9.5367431640625e-07, 'Generating mappings time': 0.002653360366821289, 'Numbers preds mapping': [4], 'Total time': 2.7989444732666016}, 'Learning time': 19.035, 'Precision': [0.949606, 0.5], 'AUC PR': 0.962435}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( author(E, A), title(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6359267128772905;  // std dev = 0,416, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( author(E, A), title(E, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5398498420741679;  // std dev = 0,416, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( author(E, A), title(E, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4289562725350857;  // std dev = 0,416, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( author(E, B), title(E, D) )
%   | | then return 0.5049460413210095;  // std dev = 0,151, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.31915400958324486;  // std dev = 0,413, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.25081221710650714;  // std dev = 0,399, 78,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=62 */
%   | else return 0.32071184716014955;  // std dev = 3,33e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( author(E, B), title(E, D) )
%   | then return 0.3084735533777968;  // std dev = 0,055, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordauthor(A, C) )
%   | | then if ( author(F, A), title(F, D) )
%   | | | then return 0.288443620501581;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17211193662889734;  // std dev = 3,498, 68,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=52 */
%   | | else return 0.25517224256948956;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.2551722425694898;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( author(E, B), title(E, D) )
%   | then return 0.2475640627196737;  // std dev = 0,048, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordauthor(A, C) )
%   | | then return 0.1369603931330213;  // std dev = 0,413, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.2097577156325358;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.11482747291433189;  // std dev = 0,398, 78,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=62 */
%   | else return 0.175664351400929;  // std dev = 0,017, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( author(E, B), title(E, D) )
%   | then return 0.18505591946110483;  // std dev = 0,041, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordauthor(A, C) )
%   | | then return 0.08147682058600197;  // std dev = 0,413, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.15292928888177493;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.1527438580936714;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( author(E, A), title(E, D) )
%   | | then return 0.16089587146574513;  // std dev = 0,062, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06549890655747796;  // std dev = 0,413, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return 0.13263175332887722;  // std dev = 0,018, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.13400703000801106;  // std dev = 5,58e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */


Results
   AUC ROC   = 0.468891
   AUC PR    = 0.920251
   CLL	      = -0.368887
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 15.586 seconds
Total inference time: 6.006 seconds
AUC ROC: 0.468891


Dataset: 9_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 06:40:26
{'CLL': -0.368887, 'Recall': 1.0, 'F1': 0.954114, 'AUC ROC': 0.468891, 'Inference time': 6.006, 'Learning time': 15.586, 'Precision': [0.912254, 0.5], 'AUC PR': 0.920251}


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( author(E, A), title(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6359267128772905;  // std dev = 0,416, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */


Results
   AUC ROC   = 0.357694
   AUC PR    = 0.866927
   CLL	      = -1.26245
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 5.414 seconds
Total inference time: 3.661 seconds
AUC ROC: 0.357694


Dataset: 9_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 06:40:35
{'CLL': -1.26245, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.357694, 'Inference time': 3.661, 'Learning time': 5.414, 'Precision': [nan, 0.5], 'AUC PR': 0.866927}


Starting fold 2

Target predicate: sameauthor
Mapping Results
   Knowledge compiling time   = 0.19011139869689941
   Generating paths time   = 4.878746509552002
   Generating mappings time   = 0.004753589630126953
   Possible mappings   = [6]
   Max mapping   = 121
   Numbers predicates mapping   = [4]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 5.073622941970825


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

Target train facts examples: 8894
Target train pos examples: 122
Target train neg examples: 20

Target test facts examples: 32852
Target test pos examples: 690
Target test neg examples: 54

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7966104735610489;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6701860162815748;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.521000173904994;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3916498696084713;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2975214947349439;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23226801019815924;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18647488053184677;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15334928569517428;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.12860778205329093;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1095875440488626;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.62963
   AUC PR    = 0.945205
   CLL	      = -0.258457
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 5.99 seconds
Total inference time: 2.755 seconds
AUC ROC: 0.62963


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.74, 8, 122], 'false': [0.0, 12, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.74, 8, 122], 'false': [5.27e-09, 12, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.74, 8, 122], 'false': [9.13e-09, 12, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.74, 8, 122], 'false': [0.0, 12, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.74, 8, 122], 'false': [5.27e-09, 12, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.74, 8, 122], 'false': [5.27e-09, 12, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.74, 8, 122], 'false': [3.73e-09, 12, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.74, 8, 122], 'false': [3.73e-09, 12, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.74, 8, 122], 'false': [2.63e-09, 12, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.74, 8, 122], 'false': [5.89e-09, 12, 0]}]]
[{'': [0.05775147928994478, -1.1564823173178714e-17]}, {'': [0.05775147928993674, 2.3129646346357427e-18]}, {'': [0.057751479289940406, 6.938893903907228e-18]}, {'': [0.057751479289941336, 0.0]}, {'': [0.05775147928994032, 2.3129646346357427e-18]}, {'': [0.05775147928994095, 2.3129646346357427e-18]}, {'': [0.05775147928994094, 1.1564823173178713e-18]}, {'': [0.057751479289940774, 1.1564823173178713e-18]}, {'': [0.057751479289940844, 5.782411586589357e-19]}, {'': [0.05775147928994075, 2.8912057932946786e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.499220773881868;  // std dev = 0,298, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4208050190658723;  // std dev = 0,041, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.36619101959563904;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.32295649078154026;  // std dev = 0,037, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.28293936806520775;  // std dev = 0,297, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.25671064343184136;  // std dev = 0,033, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.26241739609312287;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21111253147773776;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.21084828774453157;  // std dev = 0,028, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.17359359906064703;  // std dev = 0,298, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17857757650996955;  // std dev = 0,034, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.18419752668987863;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.13237273320901327;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.15386985204385792;  // std dev = 0,030, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.11583985088981223;  // std dev = 0,298, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13528943451798128;  // std dev = 0,032, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.141619917053693;  // std dev = 1,18e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.08876018189526;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.569243
   AUC PR    = 0.934792
   CLL	      = -0.253575
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 8.922 seconds
Total inference time: 2.916 seconds
AUC ROC: 0.569243


Refined model AUC ROC: 0.569243


Dataset: 9_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:41:02
{'CLL': -0.253575, 'Recall': 1.0, 'F1': 0.971831, 'parameter': {'CLL': -0.258457, 'Recall': 1.0, 'F1': 0.971831, 'AUC ROC': 0.62963, 'Inference time': 2.755, 'Learning time': 5.99, 'Precision': [0.945205, 0.5], 'AUC PR': 0.945205}, 'AUC ROC': 0.569243, 'Inference time': 2.916, 'Mapping results': {'Knowledge compiling time': 0.19011139869689941, 'Generating paths time': 4.878746509552002, 'Possible mappings': [6], 'Max mapping': 121, 'Finding best mapping': 1.430511474609375e-06, 'Generating mappings time': 0.004753589630126953, 'Numbers preds mapping': [4], 'Total time': 5.073622941970825}, 'Learning time': 14.912, 'Precision': [0.945205, 0.5], 'AUC PR': 0.934792}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.758148935099513;  // std dev = 0,300, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.7242094762470882;  // std dev = 0,060, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.6362469723389278;  // std dev = 0,299, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5600892937443024;  // std dev = 0,074, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5758119089471244;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.48238629698163726;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.42108739528248806;  // std dev = 0,074, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.3736202044382067;  // std dev = 0,298, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3242398437704038;  // std dev = 0,080, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3399459479465707;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2716180351764659;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2576122903095703;  // std dev = 0,070, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2682575564710438;  // std dev = 2,79e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2093011638158169;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.21150061408384588;  // std dev = 0,061, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.21895977689090348;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.16500960704157197;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17838694491684706;  // std dev = 0,054, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.18381692729045196;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.13278088636754282;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15373082073930322;  // std dev = 0,048, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15782309902761468;  // std dev = 1,49e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1086898077341441;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13478309691664359;  // std dev = 0,043, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.09738499196530556;  // std dev = 0,298, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.569243
   AUC PR    = 0.934792
   CLL	      = -0.253576
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 10.533 seconds
Total inference time: 2.431 seconds
AUC ROC: 0.569243


Dataset: 9_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 06:41:16
{'CLL': -0.253576, 'Recall': 1.0, 'F1': 0.971831, 'AUC ROC': 0.569243, 'Inference time': 2.431, 'Learning time': 10.533, 'Precision': [0.945205, 0.5], 'AUC PR': 0.934792}


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.580515
   AUC PR    = 0.938127
   CLL	      = -1.222152
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.332 seconds
Total inference time: 3.514 seconds
AUC ROC: 0.580515


Dataset: 9_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 06:41:23
{'CLL': -1.222152, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.580515, 'Inference time': 3.514, 'Learning time': 3.332, 'Precision': [nan, 0.5], 'AUC PR': 0.938127}


Starting fold 3

Target predicate: sameauthor
Mapping Results
   Knowledge compiling time   = 0.11074519157409668
   Generating paths time   = 2.8184616565704346
   Generating mappings time   = 0.002663135528564453
   Possible mappings   = [6]
   Max mapping   = 121
   Numbers predicates mapping   = [4]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 2.931877374649048


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

Target train facts examples: 9155
Target train pos examples: 151
Target train neg examples: 4

Target test facts examples: 32591
Target test pos examples: 661
Target test neg examples: 70

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.8323424834866066;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.698845893395818;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5409946853316354;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.40656478352990505;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.31073437611251203;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2452079090461179;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.19955514587821926;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1666316310048982;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.14205263897659914;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1231347582007454;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.685714
   AUC PR    = 0.937589
   CLL	      = -0.256513
   Precision = 0.937589 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967789


Total learning time: 6.864 seconds
Total inference time: 1.792 seconds
AUC ROC: 0.685714


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [1.974, 4, 151], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [1.974, 4, 151], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [1.974, 4, 151], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [1.974, 4, 151], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [1.974, 4, 151], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [1.974, 4, 151], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [1.974, 4, 151], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [1.974, 4, 151], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [1.974, 4, 151], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [1.974, 4, 151], 'false': [0.0, 0, 0]}]]
[{'': [0.02514047866805994, nan]}, {'': [0.025140478668053523, nan]}, {'': [0.02514047866805412, nan]}, {'': [0.025140478668053523, nan]}, {'': [0.025140478668054807, nan]}, {'': [0.025140478668053867, nan]}, {'': [0.025140478668053995, nan]}, {'': [0.025140478668053936, nan]}, {'': [0.025140478668054293, nan]}, {'': [0.025140478668054102, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7672398441904213;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.7781489350995119;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.8581489350995117;  // std dev = 2,38e-07, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.7456577950541283;  // std dev = 0,023, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6534298561597717;  // std dev = 1,354, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.6540052287018572;  // std dev = 0,245, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then return 0.6549653625650375;  // std dev = 0,241, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.7214274608374258;  // std dev = 0,054, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.4237059346696596;  // std dev = 0,909, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.489417158509881;  // std dev = 0,921, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.5607676531659934;  // std dev = 0,018, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.5087412889549703;  // std dev = 1,353, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.5712335309280333;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5574076385719419;  // std dev = 0,057, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.31878834980359777;  // std dev = 0,909, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3679087733500195;  // std dev = 0,920, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.42155737348133837;  // std dev = 0,018, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.3825971401257837;  // std dev = 1,353, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.4293881718471137;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.41904894597938147;  // std dev = 0,057, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.23858024900609887;  // std dev = 0,918, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.27981815893039275;  // std dev = 0,912, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.32347096951321486;  // std dev = 0,016, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.2899510898443242;  // std dev = 1,354, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.32877384683031524;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3217655192662941;  // std dev = 0,051, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.1825634854677037;  // std dev = 0,918, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.21727538301772575;  // std dev = 0,915, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.25706373528098875;  // std dev = 0,014, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.22526825128158193;  // std dev = 1,354, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.2606660075846325;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2558985856131783;  // std dev = 0,045, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | | then return 0.2860458510021492;  // std dev = 0,087, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.17609865070523967;  // std dev = 1,350, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.158866955003672;  // std dev = 0,228, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then return 0.15255006514316877;  // std dev = 0,229, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.21413879155789345;  // std dev = 0,155, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.08793961720949127;  // std dev = 0,900, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.135129257392263;  // std dev = 0,905, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.18009843024149624;  // std dev = 0,018, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.14513662425534496;  // std dev = 1,352, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.18912190519262534;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.17820783821494066;  // std dev = 0,064, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | | then return 0.21319113437010184;  // std dev = 0,083, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1192704201418135;  // std dev = 1,351, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.10100057203913687;  // std dev = 0,228, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then return 0.10607901383413135;  // std dev = 0,230, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.1562458984578532;  // std dev = 0,143, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F), haswordauthor(B, D) )
%   | | | then return 0.19973448049216935;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08232378891594169;  // std dev = 0,793, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.10093946898497151;  // std dev = 1,351, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.14857160196155655;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then return 0.09147850465443813;  // std dev = 0,231, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.13676487707786558;  // std dev = 0,129, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.800303
   AUC PR    = 0.969721
   CLL	      = -0.266139
   Precision = 0.937589 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967789


Total learning time: 13.002 seconds
Total inference time: 5.186 seconds
AUC ROC: 0.800303


Refined model AUC ROC: 0.800303


Dataset: 9_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 06:41:54
{'CLL': -0.266139, 'Recall': 1.0, 'F1': 0.967789, 'parameter': {'CLL': -0.256513, 'Recall': 1.0, 'F1': 0.967789, 'AUC ROC': 0.685714, 'Inference time': 1.792, 'Learning time': 6.864, 'Precision': [0.937589, 0.5], 'AUC PR': 0.937589}, 'AUC ROC': 0.800303, 'Inference time': 5.186, 'Mapping results': {'Knowledge compiling time': 0.11074519157409668, 'Generating paths time': 2.8184616565704346, 'Possible mappings': [6], 'Max mapping': 121, 'Finding best mapping': 7.152557373046875e-07, 'Generating mappings time': 0.002663135528564453, 'Numbers preds mapping': [4], 'Total time': 2.931877374649048}, 'Learning time': 19.866, 'Precision': [0.937589, 0.5], 'AUC PR': 0.969721}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(B, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7672398441904211;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.8581489350995117;  // std dev = 2,38e-07, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then if ( haswordauthor(B, E), haswordauthor(A, C) )
%   | | then return 0.7518526675222027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4739677240518402;  // std dev = 0,850, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( haswordauthor(A, C) )
%   | | then if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6465415686654065;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.7194734122109543;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | then if ( haswordauthor(B, I) )
%   | | then return 0.647850842115198;  // std dev = 0,283, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109538;  // std dev = 2,53e-07, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then return 0.5982265566734745;  // std dev = 0,036, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5044629797645589;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.49255349889157646;  // std dev = 0,235, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | then return 0.49408688004839607;  // std dev = 0,229, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.5596805873062454;  // std dev = 0,118, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.28192282164782795;  // std dev = 0,865, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.3709410308982423;  // std dev = 0,270, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.4169142645772221;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.4149005046512899;  // std dev = 0,119, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then if ( haswordauthor(B, E), haswordauthor(A, C) )
%   | | then return 0.3720378460904591;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13123492358986283;  // std dev = 0,817, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( haswordauthor(A, C) )
%   | | then if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return 0.32084242640887173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.27887459893491123;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.33478767911651;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | then if ( haswordauthor(B, I) )
%   | | then return 0.28098025034630825;  // std dev = 0,272, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.3203413721135858;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32257264666285435;  // std dev = 0,051, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.13423240861043398;  // std dev = 0,853, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.22143568594053553;  // std dev = 0,262, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.25460571145804395;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | then return 0.3370476853569915;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0.216551229427896;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.2647552911784157;  // std dev = 1,49e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.256484071749402;  // std dev = 0,045, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.10684463399674614;  // std dev = 0,856, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.17607566413395978;  // std dev = 0,264, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.20935751271706934;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | then return 0.2662903097299121;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0.1724522017192443;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.21650471773239974;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.21068846880022582;  // std dev = 0,039, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.08618875090774508;  // std dev = 0,859, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.14314251025789018;  // std dev = 0,266, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.17680295463231385;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, G) )
%   | | then return 0.14964787066245866;  // std dev = 0,271, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.18202951347366975;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.1777817281935366;  // std dev = 0,034, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then return 0.06841585043852703;  // std dev = 0,871, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.119548034128976;  // std dev = 0,264, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.15252116776756713;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, G) )
%   | | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.1931821335185192;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11485163526292631;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.1564758386219327;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.15326537749655406;  // std dev = 0,030, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then return 0.05635594466693803;  // std dev = 0,872, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.10042943875082172;  // std dev = 0,266, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.13383317449995566;  // std dev = 0,000918, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, G) )
%   | | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.16484018908081377;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09671504531498294;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.1369138315943515;  // std dev = 1,29e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.1344153542421966;  // std dev = 0,027, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */


Results
   AUC ROC   = 0.467711
   AUC PR    = 0.922482
   CLL	      = -0.340028
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 15.504 seconds
Total inference time: 3.469 seconds
AUC ROC: 0.467711


Dataset: 9_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 06:42:13
{'CLL': -0.340028, 'Recall': 1.0, 'F1': 0.949713, 'AUC ROC': 0.467711, 'Inference time': 3.469, 'Learning time': 15.504, 'Precision': [0.904241, 0.5], 'AUC PR': 0.922482}


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(B, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7672398441904211;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.8581489350995117;  // std dev = 2,38e-07, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */


Results
   AUC ROC   = 0.361184
   AUC PR    = 0.867023
   CLL	      = -1.221808
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.698 seconds
Total inference time: 2.274 seconds
AUC ROC: 0.361184


Dataset: 9_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 06:42:19
{'CLL': -1.221808, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.361184, 'Inference time': 2.274, 'Learning time': 3.698, 'Precision': [nan, 0.5], 'AUC PR': 0.867023}


Starting fold 4

Target predicate: sameauthor
Mapping Results
   Knowledge compiling time   = 0.0748133659362793
   Generating paths time   = 2.57494854927063
   Generating mappings time   = 0.0026702880859375
   Possible mappings   = [6]
   Max mapping   = 121
   Numbers predicates mapping   = [4]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 2.6524388790130615


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

Target train facts examples: 7971
Target train pos examples: 158
Target train neg examples: 16

Target test facts examples: 33775
Target test pos examples: 654
Target test neg examples: 58

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.8099561640151723;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6809038096058014;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5284825663747693;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.39719039176974347;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3023776209869051;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23698715759628264;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.191220720417513;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15814910131754492;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1334484328508451;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.11444708609402138;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.655172
   AUC PR    = 0.942363
   CLL	      = -0.255786
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 7.655 seconds
Total inference time: 2.021 seconds
AUC ROC: 0.655172


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.759, 8, 158], 'false': [0.0, 8, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.759, 8, 158], 'false': [0.0, 8, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.759, 8, 158], 'false': [0.0, 8, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.759, 8, 158], 'false': [3.73e-09, 8, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.759, 8, 158], 'false': [0.0, 8, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.759, 8, 158], 'false': [3.73e-09, 8, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.759, 8, 158], 'false': [0.0, 8, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.759, 8, 158], 'false': [2.63e-09, 8, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.759, 8, 158], 'false': [0.0, 8, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [2.759, 8, 158], 'false': [0.0, 8, 0]}]]
[{'': [0.045870227899556054, -6.938893903907228e-18]}, {'': [0.045870227899547665, 0.0]}, {'': [0.04587022789954968, -1.734723475976807e-18]}, {'': [0.045870227899550815, 1.734723475976807e-18]}, {'': [0.04587022789955062, 0.0]}, {'': [0.04587022789955009, 1.734723475976807e-18]}, {'': [0.04587022789955017, 0.0]}, {'': [0.045870227899549997, 8.673617379884035e-19]}, {'': [0.04587022789954986, 0.0]}, {'': [0.04587022789954993, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | | | then return 0.7470378239884012;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.8581489350995127;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.5851860008555358;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.735875837400709;  // std dev = 0,038, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.40800997913062725;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5614770222501632;  // std dev = 0,070, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | then if ( haswordauthor(A, F) )
%   | | | then return 0.4612598391067553;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.32253871860431443;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | | then return 0.4910320732717307;  // std dev = 1,218, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.5553664367462836;  // std dev = 3,21e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.42176466589242767;  // std dev = 0,049, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.3488463256948424;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.2498503872852124;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.432415688102861;  // std dev = 0,047, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.24657898909601675;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.41745645659610686;  // std dev = 0,003, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.3239814334251089;  // std dev = 0,056, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.26212705508354195;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.1856162084699097;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.33006956493646694;  // std dev = 0,027, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.18815500522864573;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.3206731469864268;  // std dev = 0,002, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.25657666245675315;  // std dev = 0,036, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.19945264276423416;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.14115168038898;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.263469178599797;  // std dev = 0,037, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.13924876808333667;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.255145852490562;  // std dev = 0,002, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.21098457874493845;  // std dev = 0,041, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.15451336627983223;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.10472881024912578;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.21510706746847788;  // std dev = 0,020, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.10613985798487306;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.20973908423645263;  // std dev = 0,002, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.1775281939187588;  // std dev = 0,026, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.12179491558002786;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.08018484141926946;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.18208483924170749;  // std dev = 0,028, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.07913776568804633;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.17708283892947765;  // std dev = 0,002, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.15307403282069607;  // std dev = 0,023, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.09745354768081692;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.06088253552954396;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then return 0.15580661182611996;  // std dev = 0,026, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | | | then return 0.06010141887385304;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.15276385454034275;  // std dev = 8,30e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.13426521664897118;  // std dev = 0,027, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.07895233872555119;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.045854123373320434;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.13704540952364888;  // std dev = 0,014, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.046440666591219294;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.13398191811660262;  // std dev = 0,002, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.629363
   AUC PR    = 0.928403
   CLL	      = -0.261364
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 12.793 seconds
Total inference time: 3.632 seconds
AUC ROC: 0.629363


Refined model AUC ROC: 0.629363


Dataset: 9_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 06:42:50
{'CLL': -0.261364, 'Recall': 1.0, 'F1': 0.970326, 'parameter': {'CLL': -0.255786, 'Recall': 1.0, 'F1': 0.970326, 'AUC ROC': 0.655172, 'Inference time': 2.021, 'Learning time': 7.655, 'Precision': [0.942363, 0.5], 'AUC PR': 0.942363}, 'AUC ROC': 0.629363, 'Inference time': 3.632, 'Mapping results': {'Knowledge compiling time': 0.0748133659362793, 'Generating paths time': 2.57494854927063, 'Possible mappings': [6], 'Max mapping': 121, 'Finding best mapping': 7.152557373046875e-07, 'Generating mappings time': 0.0026702880859375, 'Numbers preds mapping': [4], 'Total time': 2.6524388790130615}, 'Learning time': 20.448, 'Precision': [0.942363, 0.5], 'AUC PR': 0.928403}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.5851860008555358;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.5553664367462843;  // std dev = 1,03e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.4612598391067553;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5553664367462836;  // std dev = 3,32e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.3488463256948424;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.41751358415831047;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.3207118471601495;  // std dev = 2,11e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.26212705508354195;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.3207118471601494;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.19945264276423416;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.24943130095222288;  // std dev = 0,118, 100,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=98 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.2101813604316695;  // std dev = 0,003, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.15451336627983223;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.09757640477927293;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2107109164305867;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.17740719770662056;  // std dev = 0,002, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.12179491558002786;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.0738270298306603;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1777953101635164;  // std dev = 1,05e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.15297954012583967;  // std dev = 0,002, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.09745354768081692;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.056135893173478925;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.1527438580936708;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15327377097564776;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.13419101421252783;  // std dev = 0,002, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.07895233872555119;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.04287350726734244;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.13442058897419248;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.632342
   AUC PR    = 0.928822
   CLL	      = -0.26183
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 20.166 seconds
Total inference time: 5.158 seconds
AUC ROC: 0.632342


Dataset: 9_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 06:43:17
{'CLL': -0.26183, 'Recall': 1.0, 'F1': 0.970326, 'AUC ROC': 0.632342, 'Inference time': 5.158, 'Learning time': 20.166, 'Precision': [0.942363, 0.5], 'AUC PR': 0.928822}


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.783745
   AUC PR    = 0.973723
   CLL	      = -1.221459
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.921 seconds
Total inference time: 2.758 seconds
AUC ROC: 0.783745


Dataset: 9_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 06:43:25
{'CLL': -1.221459, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.783745, 'Inference time': 2.758, 'Learning time': 4.921, 'Precision': [nan, 0.5], 'AUC PR': 0.973723}


Starting fold 5

Target predicate: sameauthor
Mapping Results
   Knowledge compiling time   = 0.10706043243408203
   Generating paths time   = 3.389939308166504
   Generating mappings time   = 0.0025641918182373047
   Possible mappings   = [6]
   Max mapping   = 121
   Numbers predicates mapping   = [4]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 3.4995715618133545


Best mapping found: ['workedunder(A,B) -> sameauthor(A,B)', 'movie(A,B) -> haswordauthor(B,A)'] 

Transferred target predicate: sameauthor 

Target train facts examples: 8472
Target train pos examples: 172
Target train neg examples: 18

Target test facts examples: 33274
Target test pos examples: 640
Target test neg examples: 56

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7929315437951615;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6672286583325434;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5189342160940956;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3901282969327416;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.29619880730637854;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2309904888781173;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18519538758533224;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15205934164006435;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1273106151181766;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10828905626740594;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.678571
   AUC PR    = 0.946746
   CLL	      = -0.255769
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 7.335 seconds
Total inference time: 2.16 seconds
AUC ROC: 0.678571


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.349, 12, 172], 'false': [0.0, 6, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.349, 12, 172], 'false': [0.0, 6, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.349, 12, 172], 'false': [0.0, 6, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.349, 12, 172], 'false': [0.0, 6, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.349, 12, 172], 'false': [2.63e-09, 6, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.349, 12, 172], 'false': [2.63e-09, 6, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.349, 12, 172], 'false': [0.0, 6, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.349, 12, 172], 'false': [0.0, 6, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.349, 12, 172], 'false': [1.86e-09, 6, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [3.349, 12, 172], 'false': [0.0, 6, 0]}]]
[{'': [0.060964083175810056, -6.938893903907228e-18]}, {'': [0.06096408317580048, -2.3129646346357427e-18]}, {'': [0.06096408317580515, 0.0]}, {'': [0.06096408317580519, 0.0]}, {'': [0.06096408317580405, 1.1564823173178713e-18]}, {'': [0.0609640831758035, 1.1564823173178713e-18]}, {'': [0.06096408317580343, -1.1564823173178713e-18]}, {'': [0.060964083175803305, 0.0]}, {'': [0.06096408317580364, 5.782411586589357e-19]}, {'': [0.060964083175803416, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.8581489350995116;  // std dev = 2,23e-07, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.524815601766179;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.858148935099512;  // std dev = 1,03e-07, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.719473412210954;  // std dev = 2,06e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.7194734122109547;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.498380757744019;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.448295606241962;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.7194734122109544;  // std dev = 4,21e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.5553664367462835;  // std dev = 4,04e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.5553664367462845;  // std dev = 5,96e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.3990418766037683;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.36236334632262296;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.4175135841583099;  // std dev = 2,15e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.471219362531756;  // std dev = 0,263, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.359008001215884;  // std dev = 1,451, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.2807538536965853;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.3207118471601504;  // std dev = 4,21e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.4541859654483953;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.18291080604367949;  // std dev = 0,477, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.32765861364548404;  // std dev = 0,060, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.18169318696383932;  // std dev = 1,485, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.273086761824332;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.3582288783920587;  // std dev = 0,411, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10922291266596769;  // std dev = 9,67e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1890945131748203;  // std dev = 0,926, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.25993628314547756;  // std dev = 0,052, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.16161624119649257;  // std dev = 1,457, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.15906983736787075;  // std dev = 1,568, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.2537950440227425;  // std dev = 0,062, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2097577156325357;  // std dev = 1,23e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09904096315575023;  // std dev = 8,87e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14352299161460821;  // std dev = 0,923, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.2587994452653574;  // std dev = 0,292, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.16483347840230367;  // std dev = 1,426, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.11982638937763475;  // std dev = 1,568, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.20881811977766848;  // std dev = 0,055, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.1770964977452772;  // std dev = 8,16e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09054758038697797;  // std dev = 8,19e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10916881355141943;  // std dev = 0,924, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then if ( author(I, B), venue(I, H) )
%   | | | then return 0.25362061408486064;  // std dev = 0,383, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.12435811464941922;  // std dev = 1,498, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | else if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | then return 0.07626999627445329;  // std dev = 1,444, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.17642858801251904;  // std dev = 0,048, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.1527438580936713;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.08336240206125306;  // std dev = 7,60e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.08338622276336272;  // std dev = 0,926, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.1617364224004561;  // std dev = 0,089, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.059183686262742265;  // std dev = 1,445, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.05090722090572194;  // std dev = 1,544, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.15225137422393553;  // std dev = 0,043, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.13400703000801115;  // std dev = 3,65e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.07720968011247908;  // std dev = 7,08e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.063985004276396;  // std dev = 0,928, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.0301767809472804;  // std dev = 0,542, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.1267474958360818;  // std dev = 1,467, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.10033985452809117;  // std dev = 1,463, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.681501
   AUC PR    = 0.960507
   CLL	      = -0.526641
   Precision = 0.942959 at threshold = 0.5
   Recall    = 0.826563
   F1        = 0.880933


Total learning time: 16.617 seconds
Total inference time: 5.002 seconds
AUC ROC: 0.681501


Refined model AUC ROC: 0.681501


Dataset: 9_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 06:44:00
{'CLL': -0.526641, 'Recall': 0.826563, 'F1': 0.880933, 'parameter': {'CLL': -0.255769, 'Recall': 1.0, 'F1': 0.972644, 'AUC ROC': 0.678571, 'Inference time': 2.16, 'Learning time': 7.335, 'Precision': [0.946746, 0.5], 'AUC PR': 0.946746}, 'AUC ROC': 0.681501, 'Inference time': 5.002, 'Mapping results': {'Knowledge compiling time': 0.10706043243408203, 'Generating paths time': 3.389939308166504, 'Possible mappings': [6], 'Max mapping': 121, 'Finding best mapping': 7.152557373046875e-07, 'Generating mappings time': 0.0025641918182373047, 'Numbers preds mapping': [4], 'Total time': 3.4995715618133545}, 'Learning time': 23.952, 'Precision': [0.942959, 0.5], 'AUC PR': 0.960507}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.8581489350995116;  // std dev = 2,23e-07, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.7092127648867461;  // std dev = 2,441, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.719473412210954;  // std dev = 2,06e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.7194734122109547;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.22833536363464216;  // std dev = 1,401, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6050920926162505;  // std dev = 2,409, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.5553664367462835;  // std dev = 4,04e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.5553664367462845;  // std dev = 5,96e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.21382293903525543;  // std dev = 1,756, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.5032659887619213;  // std dev = 2,085, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.4175135841583099;  // std dev = 2,15e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.41751358415831014;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | | then return 0.12067576224198;  // std dev = 1,650, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.3982792688733756;  // std dev = 2,062, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.3207118471601504;  // std dev = 4,21e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.27745788867675364;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16393133114591082;  // std dev = 0,965, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.27330213840000483;  // std dev = 1,682, 45,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | | else return 0.3437583397548764;  // std dev = 1,605, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2551722425694897;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.2642869915502422;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.0031466159957558304;  // std dev = 1,730, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.24115665253373064;  // std dev = 1,834, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2097577156325357;  // std dev = 1,23e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.2702865541010433;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.08619276542153387;  // std dev = 0,900, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.2161760197351314;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.1758582223118942;  // std dev = 2,304, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1770964977452772;  // std dev = 8,16e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.48660952343080366;  // std dev = 0,078, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14056073940235034;  // std dev = 0,587, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.13145988985899476;  // std dev = 1,603, 45,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | | else return 0.1991964751672812;  // std dev = 1,553, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1527438580936713;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.2449994112415398;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07673463690968126;  // std dev = 0,720, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.1630472736657449;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.10814772348731104;  // std dev = 2,269, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.13400703000801115;  // std dev = 3,65e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.3895459816262874;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.11222055054575479;  // std dev = 0,510, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.09134863071164542;  // std dev = 1,594, 45,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | | else return 0.142415922374408;  // std dev = 1,565, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.547712
   AUC PR    = 0.917657
   CLL	      = -0.451886
   Precision = 0.942238 at threshold = 0.5
   Recall    = 0.815625
   F1        = 0.874372


Total learning time: 11.13 seconds
Total inference time: 2.627 seconds
AUC ROC: 0.547712


Dataset: 9_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 06:44:14
{'CLL': -0.451886, 'Recall': 0.815625, 'F1': 0.874372, 'AUC ROC': 0.547712, 'Inference time': 2.627, 'Learning time': 11.13, 'Precision': [0.942238, 0.5], 'AUC PR': 0.917657}


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.8581489350995116;  // std dev = 2,23e-07, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.7092127648867461;  // std dev = 2,441, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.56236
   AUC PR    = 0.922148
   CLL	      = -1.274269
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.415 seconds
Total inference time: 2.215 seconds
AUC ROC: 0.56236


Dataset: 9_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 06:44:21
{'CLL': -1.274269, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.56236, 'Inference time': 2.215, 'Learning time': 3.415, 'Precision': [nan, 0.5], 'AUC PR': 0.922148}


