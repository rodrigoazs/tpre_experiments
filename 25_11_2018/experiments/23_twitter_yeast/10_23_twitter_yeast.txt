Starting experiment #10 for 23_twitter_yeast

Start learning from source dataset

Source train facts examples: 1936
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.2964275307959968;  // std dev = 0,496, 883,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.07860348055405686;  // std dev = 0,415, 440,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.21328912201540123;  // std dev = 7,001, 214,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=76 */
%   | | | else return 0.10139217834275562;  // std dev = 2,610, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.6000495830476718;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.21775484642956294;  // std dev = 6,837, 203,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=73 */
%   | | | else return 0.18507201202258786;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6268989350995098;  // std dev = 5,333, 160,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=123 */
%   | | | else return 0.0803711573217344;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.25638528861780885;  // std dev = 0,496, 883,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06876317488019071;  // std dev = 0,415, 440,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.185293030215141;  // std dev = 7,001, 214,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=76 */
%   | | | else return 0.08859606418774053;  // std dev = 2,610, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.5104166107811955;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.18912816282710912;  // std dev = 6,837, 203,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=73 */
%   | | | else return 0.1610175259758761;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5324550902984299;  // std dev = 5,333, 160,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=123 */
%   | | | else return 0.07030324498182235;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.21509116460174346;  // std dev = 0,496, 883,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.05970118237981284;  // std dev = 0,415, 440,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.15754897010847807;  // std dev = 7,001, 214,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=76 */
%   | | | else return 0.07665626203138412;  // std dev = 2,610, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.40776385953863115;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.1606952980993124;  // std dev = 6,837, 203,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=73 */
%   | | | else return 0.13752260537158653;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.4236494694466789;  // std dev = 5,333, 160,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=123 */
%   | | | else return 0.061022104415313035;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.1756006461110938;  // std dev = 0,496, 883,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.020348626260562882;  // std dev = 0,392, 206,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13137691730259538;  // std dev = 7,001, 214,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=76 */
%   | | | else return 0.07709589220659564;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.31188074436489177;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.133848057372361;  // std dev = 6,837, 203,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=73 */
%   | | | else return 0.11550318916810978;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.3227872526571044;  // std dev = 5,333, 160,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=123 */
%   | | | else return 0.05259950478597565;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.14020651269075163;  // std dev = 0,496, 883,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01747198825263723;  // std dev = 0,392, 206,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.10773358484616437;  // std dev = 7,001, 214,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=76 */
%   | | | else return 0.0659330538898739;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.23437351721893054;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.10959866374817946;  // std dev = 6,837, 203,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=73 */
%   | | | else return 0.09560520045818097;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.24232695172585994;  // std dev = 5,333, 160,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=123 */
%   | | | else return 0.04506156572157876;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11006787093277247;  // std dev = 0,496, 883,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.014971160778515548;  // std dev = 0,392, 206,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.08713328971594034;  // std dev = 7,001, 214,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=76 */
%   | | | else return 0.05594092128163511;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.17616233347092475;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.08849132382681484;  // std dev = 6,837, 203,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=73 */
%   | | | else return 0.07817108805981869;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.18258894841420809;  // std dev = 5,333, 160,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=123 */
%   | | | else return 0.03839689936532517;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08535687246609928;  // std dev = 0,496, 883,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.012805520766718727;  // std dev = 0,392, 206,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.06969814044599196;  // std dev = 7,001, 214,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=76 */
%   | | | else return 0.047137776617349685;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.13348754461837817;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.07065479356419609;  // std dev = 6,837, 203,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=73 */
%   | | | else return 0.0632779877768077;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.13910208877491007;  // std dev = 5,333, 160,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=123 */
%   | | | else return 0.03256600389501996;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.06562839850270327;  // std dev = 0,496, 883,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.010936426973489455;  // std dev = 0,392, 206,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.055272278134458584;  // std dev = 7,001, 214,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=76 */
%   | | | else return 0.039486843868092245;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.10218407762633143;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.0559246520440977;  // std dev = 6,837, 203,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=73 */
%   | | | else return 0.05081113436407256;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.10728966923593049;  // std dev = 5,333, 160,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=123 */
%   | | | else return 0.027510392484601905;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.05016194433807427;  // std dev = 0,496, 883,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.009327908415308731;  // std dev = 0,392, 206,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04354124161135464;  // std dev = 7,001, 214,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=76 */
%   | | | else return 0.03291327072724474;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.07898416912320304;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.04397075661501517;  // std dev = 6,837, 203,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=73 */
%   | | | else return 0.04054067546152519;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.08369558274303115;  // std dev = 5,333, 160,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=123 */
%   | | | else return 0.02316052837029378;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.03818467110241631;  // std dev = 0,496, 883,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.007947042152937896;  // std dev = 0,392, 206,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.03412567528900347;  // std dev = 7,001, 214,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=76 */
%   | | | else return 0.027319436337232682;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.061567673051422606;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.03439657880969535;  // std dev = 6,837, 203,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=73 */
%   | | | else return 0.03218425428294496;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.06592348542167595;  // std dev = 5,333, 160,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=123 */
%   | | | else return 0.019442152765119736;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */


Predicates from source: ['follows(account,account).', 'tweets(account,word).', 'accounttype(account,type).']

Starting fold 1

Target predicate: interaction
Mapping Results
   Knowledge compiling time   = 0.06467390060424805
   Generating paths time   = 2.6498913764953613
   Generating mappings time   = 0.0220644474029541
   Possible mappings   = [128]
   Max mapping   = 729
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 2.7366387844085693


Best mapping found: ['tweets(A,B) -> complex(A,B)', 'follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: interaction 

Target train facts examples: 2689
Target train pos examples: 1915
Target train neg examples: 1915

Target test facts examples: 8221
Target test pos examples: 2559
Target test neg examples: 2559

******************************************
Performing Parameter Learning
******************************************
Refine
0;;interaction(A, B) :- function(A, C), function(B, C).;true;true
0;false;complex(B, G), complex(A, G).;false;true
0;true;complex(A, D), complex(B, D).;false;true
0;false,false,true;complex(B, I).;false;false
0;true,false,false;complex(B, F).;false;false
0;true,false;complex(A, E).;false;true
0;false,false;complex(A, H).;true;true
0;false,false,false;complex(B, J).;false;false
1;;interaction(A, B) :- function(A, C), function(B, C).;true;true
1;false;complex(A, G), complex(B, G).;false;true
1;true;complex(A, D), complex(B, D).;false;true
1;false,false,true;complex(B, I).;false;false
1;true,false,false;complex(B, F).;false;false
1;true,false;complex(A, E).;false;true
1;false,false;complex(A, H).;true;true
1;false,false,false;complex(B, J).;false;false
2;;interaction(A, B) :- function(A, C), function(B, C).;true;true
2;false;complex(B, G), complex(A, G).;false;true
2;true;complex(A, D), complex(B, D).;false;true
2;false,false,true;complex(B, I).;false;false
2;true,false,false;complex(B, F).;false;false
2;true,false;complex(A, E).;false;true
2;false,false;complex(A, H).;true;true
2;false,false,false;complex(B, J).;false;false
3;;interaction(A, B) :- function(A, C), function(B, C).;true;true
3;false;complex(B, H), complex(A, H).;false;true
3;true;complex(A, D), complex(B, D).;false;true
3;false,false,true;complex(B, J).;false;false
3;true,false,false;complex(B, G).;false;false
3;true,false;complex(A, E), complex(B, F).;false;true
3;false,false;complex(A, I).;true;true
3;false,false,false;complex(B, K).;false;false
4;;interaction(A, B) :- function(A, C), function(B, C).;true;true
4;false;complex(A, H), complex(B, H).;false;true
4;true;complex(B, D), complex(A, D).;false;true
4;false,false,true;complex(B, J).;false;false
4;true,false,false;complex(B, G).;false;false
4;true,false;complex(A, E), complex(B, F).;false;true
4;false,false;complex(A, I).;true;true
4;false,false,false;complex(B, K).;false;false
5;;interaction(A, B) :- function(A, C), function(B, C).;true;true
5;false;complex(B, H), complex(A, H).;false;true
5;true;complex(A, D), complex(B, D).;false;true
5;false,false,true;complex(B, J).;false;false
5;true,false,false;complex(B, G).;false;false
5;true,false;complex(A, E), complex(B, F).;false;true
5;false,false;complex(A, I).;true;true
5;false,false,false;complex(B, K).;false;false
6;;interaction(A, B) :- function(A, C), function(B, C).;true;true
6;false;complex(A, H), complex(B, H).;false;true
6;true;complex(B, D), complex(A, D).;false;true
6;false,false,true;complex(B, J).;false;false
6;true,false,false;complex(B, G).;false;false
6;true,false;complex(A, E), complex(B, F).;false;true
6;false,false;complex(A, I).;true;true
6;false,false,false;complex(B, K).;false;false
7;;interaction(A, B) :- function(A, C), function(B, C).;true;true
7;false;complex(A, H), complex(B, H).;false;true
7;true;complex(B, D), complex(A, D).;false;true
7;false,false,true;complex(B, J).;false;false
7;true,false,false;complex(B, G).;false;false
7;true,false;complex(A, E), complex(B, F).;false;true
7;false,false;complex(A, I).;true;true
7;false,false,false;complex(B, K).;false;false
8;;interaction(A, B) :- function(A, C), function(B, C).;true;true
8;false;complex(B, H), complex(A, H).;false;true
8;true;complex(A, D), complex(B, D).;false;true
8;false,false,true;complex(B, J).;false;false
8;true,false,false;complex(B, G).;false;false
8;true,false;complex(A, E), complex(B, F).;false;true
8;false,false;complex(A, I).;true;true
8;false,false,false;complex(B, K).;false;false
9;;interaction(A, B) :- function(A, C), function(B, C).;true;true
9;false;complex(B, H), complex(A, H).;false;true
9;true;complex(A, D), complex(B, D).;false;true
9;false,false,true;complex(B, J).;false;false
9;true,false,false;complex(B, G).;false;false
9;true,false;complex(A, E), complex(B, F).;false;true
9;false,false;complex(A, I).;true;true
9;false,false,false;complex(B, K).;false;false


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.8196873966379739;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E) )
%   | | then return 0.4721024234716008;  // std dev = 12,364, 645,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=396 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.5303897377750938;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.5201405199522426;  // std dev = 12,631, 713,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=472 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.18879409638983422;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.2353559976998288;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.1609658365079625;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.2563140727141864;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.688708700815712;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E) )
%   | | then return 0.4044461450155158;  // std dev = 12,364, 645,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=396 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.45291682660776517;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.44441744072178707;  // std dev = 12,631, 713,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=472 */
%   else if ( complex(A, G), complex(B, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.1642239042623809;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.20422579004642036;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.14022037444613225;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.2221650495001744;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.5339272109474118;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E) )
%   | | then return 0.32969832476727057;  // std dev = 12,364, 645,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=396 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.36577480049862626;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.3594959741590696;  // std dev = 12,631, 713,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=472 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.14017868744088544;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.17303472235789763;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.12021439179525507;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.18759976728044142;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.4012523491151745;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.283819727178847;  // std dev = 6,739, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.2830984281430881;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.266481083042224;  // std dev = 16,343, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.11762290394007925;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.14347983951284385;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.10158286451777711;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.15472693764286122;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.30597716653683027;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.21646290838614898;  // std dev = 6,739, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.21409766376621012;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.20243926312408056;  // std dev = 16,342, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.09723961009090103;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.11680957807384852;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.08475839775680881;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.12511343097902763;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.24051322310232084;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.16294452822999853;  // std dev = 6,739, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.16067350278455905;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.15220970766292055;  // std dev = 16,342, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.07939217158688776;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.0936924266537756;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.06996158799314253;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.09958760758613247;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.1947855850368083;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.12223237696733073;  // std dev = 6,739, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.12068693035127982;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.11421213541517215;  // std dev = 16,342, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.064163784493181;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.0742807717232692;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.05723135522314038;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.07832207905660622;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.16176939808047844;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.0918135433427219;  // std dev = 6,739, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.09105627435138448;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.08586445527452077;  // std dev = 16,342, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.05143540197482682;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.0583698981818758;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.04647422093968841;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.06104871915342079;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.1371132938219507;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.06918492743958504;  // std dev = 6,739, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.06907007001667649;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.06476823177521536;  // std dev = 16,342, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.04096736967472085;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.0455613147247801;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.0375149482173169;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.047273526452949806;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.11814007732365525;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.05232055138821354;  // std dev = 6,739, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.05266120084773414;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.04902800121742352;  // std dev = 16,342, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.03246567195921783;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.03538604875365235;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.030138571970584085;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.03643178878928285;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */


Results
   AUC ROC   = 0.666344
   AUC PR    = 0.684339
   CLL	      = -0.641497
   Precision = 0.609791 at threshold = 0.5
   Recall    = 0.671747
   F1        = 0.639271


Total learning time: 57.197 seconds
Total inference time: 3.741 seconds
AUC ROC: 0.666344


Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(B, G), complex(A, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [16.162, 656, 434], 'true,true': [1.387, 2, 50], 'false,false,false,true': [7.743, 198, 86], 'true,false,false,false': [12.631, 241, 472], 'true,false,true': [12.364, 249, 396], 'false,false,true,false': [12.098, 388, 235], 'true,false,false,true': [8.117, 98, 201], 'false,true': [0.0, 0, 0], 'false,false,true,true': [5.239, 83, 41]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(A, G), complex(B, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [16.162, 656, 434], 'true,true': [1.387, 2, 50], 'false,false,false,true': [7.743, 198, 86], 'true,false,false,false': [12.631, 241, 472], 'true,false,true': [12.364, 249, 396], 'false,false,true,false': [12.098, 388, 235], 'true,false,false,true': [8.117, 98, 201], 'false,true': [0.0, 0, 0], 'false,false,true,true': [5.239, 83, 41]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(B, G), complex(A, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [16.162, 656, 434], 'true,true': [1.387, 2, 50], 'false,false,false,true': [7.743, 198, 86], 'true,false,false,false': [12.631, 241, 472], 'true,false,true': [12.364, 249, 396], 'false,false,true,false': [12.098, 388, 235], 'true,false,false,true': [8.117, 98, 201], 'false,true': [0.0, 0, 0], 'false,false,true,true': [5.239, 83, 41]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [16.162, 656, 434], 'true,true': [1.387, 2, 50], 'false,false,false,true': [7.743, 198, 86], 'true,false,false,false': [16.343, 419, 742], 'true,false,true': [6.739, 71, 126], 'false,false,true,false': [12.098, 388, 235], 'true,false,false,true': [8.117, 98, 201], 'false,true': [0.0, 0, 0], 'false,false,true,true': [5.239, 83, 41]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [16.162, 656, 434], 'true,true': [1.387, 2, 50], 'false,false,false,true': [7.743, 198, 86], 'true,false,false,false': [16.342, 419, 742], 'true,false,true': [6.739, 71, 126], 'false,false,true,false': [12.098, 388, 235], 'true,false,false,true': [8.117, 98, 201], 'false,true': [0.0, 0, 0], 'false,false,true,true': [5.239, 83, 41]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [16.162, 656, 434], 'true,true': [1.387, 2, 50], 'false,false,false,true': [7.743, 198, 86], 'true,false,false,false': [16.342, 419, 742], 'true,false,true': [6.739, 71, 126], 'false,false,true,false': [12.098, 388, 235], 'true,false,false,true': [8.117, 98, 201], 'false,true': [0.0, 0, 0], 'false,false,true,true': [5.239, 83, 41]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [16.162, 656, 434], 'true,true': [1.387, 2, 50], 'false,false,false,true': [7.743, 198, 86], 'true,false,false,false': [16.342, 419, 742], 'true,false,true': [6.739, 71, 126], 'false,false,true,false': [12.098, 388, 235], 'true,false,false,true': [8.117, 98, 201], 'false,true': [0.0, 0, 0], 'false,false,true,true': [5.239, 83, 41]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [16.162, 656, 434], 'true,true': [1.387, 2, 50], 'false,false,false,true': [7.743, 198, 86], 'true,false,false,false': [16.342, 419, 742], 'true,false,true': [6.739, 71, 126], 'false,false,true,false': [12.098, 388, 235], 'true,false,false,true': [8.117, 98, 201], 'false,true': [0.0, 0, 0], 'false,false,true,true': [5.239, 83, 41]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [16.162, 656, 434], 'true,true': [1.387, 2, 50], 'false,false,false,true': [7.743, 198, 86], 'true,false,false,false': [16.342, 419, 742], 'true,false,true': [6.739, 71, 126], 'false,false,true,false': [12.098, 388, 235], 'true,false,false,true': [8.117, 98, 201], 'false,true': [0.0, 0, 0], 'false,false,true,true': [5.239, 83, 41]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [16.162, 656, 434], 'true,true': [1.387, 2, 50], 'false,false,false,true': [7.743, 198, 86], 'true,false,false,false': [16.342, 419, 742], 'true,false,true': [6.739, 71, 126], 'false,false,true,false': [12.098, 388, 235], 'true,false,false,true': [8.117, 98, 201], 'false,true': [0.0, 0, 0], 'false,false,true,true': [5.239, 83, 41]}]]
[{'': [0.2260465966670334, 0.23444858124933934], 'true,false': [0.23701460248782452, 0.22276847787030027], 'true': [0.03698224852071041, 0.22893385134079197], 'false,false,true': [0.22131893860562035, 0.23492189452476106], 'true,false,false': [0.22033310589367483, 0.22375872643689632], 'false': [nan, 0.23444858124930865], 'false,false': [0.23296398445186575, 0.23522731365829921], 'false,false,false': [0.21111882562983608, 0.23962966080294915]}, {'': [0.22487272406577985, 0.23416339911123613], 'true,false': [0.23701460248782308, 0.22276164874688228], 'true': [0.03698224852071075, 0.22873877756175034], 'false,false,true': [0.22131893860562002, 0.2349218945247539], 'true,false,false': [0.22033310589366453, 0.22375872643690273], 'false': [nan, 0.2341633991112522], 'false,false': [0.2328853686870758, 0.2348376562442055], 'false,false,false': [0.21111882562983517, 0.2396296608029831]}, {'': [0.22372362725166178, 0.23390221112812537], 'true,false': [0.23701460248783832, 0.22275481775111414], 'true': [0.03698224852070938, 0.22854373581962506], 'false,false,true': [0.22131893860561994, 0.2349218945247501], 'true,false,false': [0.22033310589367314, 0.22375872643688965], 'false': [nan, 0.23390221112813467], 'false,false': [0.2328132912643435, 0.2344811566279309], 'false,false,false': [0.21111882562983428, 0.2396296608029454]}, {'': [0.22308825155096149, 0.2336961125821524], 'true,false': [0.23051354067355564, 0.22811067664543322], 'true': [0.036982248520710304, 0.2284166952953188], 'false,false,true': [0.22131893860561913, 0.23492189452475903], 'true,false,false': [0.22033310589366986, 0.23005713465055233], 'false': [nan, 0.23369611258215117], 'false,false': [0.2327564001108475, 0.23419969820530293], 'false,false,false': [0.21111882562983464, 0.23962966080297432]}, {'': [0.22284517163119433, 0.23355278977566934], 'true,false': [0.23051354067355445, 0.22807042555218726], 'true': [0.036982248520709894, 0.22837507003730986], 'false,false,true': [0.2213189386056191, 0.2349218945247586], 'true,false,false': [0.22033310589367355, 0.23003523327525882], 'false': [nan, 0.2335527897756632], 'false,false': [0.23271686136545028, 0.23400362566528324], 'false,false,false': [0.21111882562983464, 0.2396296608029578]}, {'': [0.22274795791111948, 0.23346302959742862], 'true,false': [0.23051354067355662, 0.22805437297095352], 'true': [0.03698224852071016, 0.2283552302712281], 'false,false,true': [0.22131893860561816, 0.23492189452476442], 'true,false,false': [0.22033310589367028, 0.2300282112659238], 'false': [nan, 0.23346302959742588], 'false,false': [0.23269215132018362, 0.2338805104748124], 'false,false,false': [0.211118825629835, 0.23962966080297157]}, {'': [0.22270627317228095, 0.23341143996996172], 'true,false': [0.23051354067355478, 0.22804979045369228], 'true': [0.03698224852071011, 0.22834739899304227], 'false,false,true': [0.22131893860562027, 0.23492189452475717], 'true,false,false': [0.2203331058936702, 0.23002853361330802], 'false': [nan, 0.23341143996995303], 'false,false': [0.23267801029769594, 0.233809529606709], 'false,false,false': [0.2111188256298363, 0.23962966080295497]}, {'': [0.22268549522714984, 0.23338383723501516], 'true,false': [0.23051354067355473, 0.22805005888501612], 'true': [0.03698224852071013, 0.22834544178923835], 'false,false,true': [0.22131893860561874, 0.23492189452476078], 'true,false,false': [0.2203331058936704, 0.2300319365366552], 'false': [nan, 0.2333838372350173], 'false,false': [0.23267049756594033, 0.23377142193476386], 'false,false,false': [0.21111882562983392, 0.23962966080296322]}, {'': [0.22267231470525808, 0.2333699691118283], 'true,false': [0.23051354067355606, 0.22805212489448065], 'true': [0.03698224852070998, 0.228346071092548], 'false,false,true': [0.22131893860561977, 0.234921894524759], 'true,false,false': [0.2203331058936706, 0.23003626496353607], 'false': [nan, 0.23336996911182406], 'false,false': [0.23266676199268427, 0.23375220661328494], 'false,false,false': [0.21111882562983417, 0.2396296608029672]}, {'': [0.2226616351028995, 0.23336341151076884], 'true,false': [0.2305135406735553, 0.22805464701737188], 'true': [0.036982248520710054, 0.22834766416311933], 'false,false,true': [0.22131893860562019, 0.23492189452476078], 'true,false,false': [0.22033310589367067, 0.2300405231980972], 'false': [nan, 0.233363411510769], 'false,false': [0.2326650209807468, 0.23374308559104046], 'false,false,false': [0.21111882562983572, 0.23962966080296474]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '0;false;complex(B, G), complex(A, G).;true;true', '0;true;complex(A, D), complex(B, D).;true;true', '0;false,false,true;complex(B, I).;true;true', '0;true,false,false;complex(B, F).;true;true', '0;true,false;complex(A, E).;true;true', '0;false,false;complex(A, H).;true;true', '0;false,false,false;complex(B, J).;true;true', '1;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '1;false;complex(A, G), complex(B, G).;true;true', '1;true;complex(A, D), complex(B, D).;true;true', '1;false,false,true;complex(B, I).;true;true', '1;true,false,false;complex(B, F).;true;true', '1;true,false;complex(A, E).;true;true', '1;false,false;complex(A, H).;true;true', '1;false,false,false;complex(B, J).;true;true', '2;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '2;false;complex(B, G), complex(A, G).;true;true', '2;true;complex(A, D), complex(B, D).;true;true', '2;false,false,true;complex(B, I).;true;true', '2;true,false,false;complex(B, F).;true;true', '2;true,false;complex(A, E).;true;true', '2;false,false;complex(A, H).;true;true', '2;false,false,false;complex(B, J).;true;true', '3;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '3;false;complex(B, H), complex(A, H).;true;true', '3;true;complex(A, D), complex(B, D).;true;true', '3;false,false,true;complex(B, J).;true;true', '3;true,false,false;complex(B, G).;true;true', '3;true,false;complex(A, E), complex(B, F).;true;true', '3;false,false;complex(A, I).;true;true', '3;false,false,false;complex(B, K).;true;true', '4;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '4;false;complex(A, H), complex(B, H).;true;true', '4;true;complex(B, D), complex(A, D).;true;true', '4;false,false,true;complex(B, J).;true;true', '4;true,false,false;complex(B, G).;true;true', '4;true,false;complex(A, E), complex(B, F).;true;true', '4;false,false;complex(A, I).;true;true', '4;false,false,false;complex(B, K).;true;true', '5;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '5;false;complex(B, H), complex(A, H).;true;true', '5;true;complex(A, D), complex(B, D).;true;true', '5;false,false,true;complex(B, J).;true;true', '5;true,false,false;complex(B, G).;true;true', '5;true,false;complex(A, E), complex(B, F).;true;true', '5;false,false;complex(A, I).;true;true', '5;false,false,false;complex(B, K).;true;true', '6;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '6;false;complex(A, H), complex(B, H).;true;true', '6;true;complex(B, D), complex(A, D).;true;true', '6;false,false,true;complex(B, J).;true;true', '6;true,false,false;complex(B, G).;true;true', '6;true,false;complex(A, E), complex(B, F).;true;true', '6;false,false;complex(A, I).;true;true', '6;false,false,false;complex(B, K).;true;true', '7;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '7;false;complex(A, H), complex(B, H).;true;true', '7;true;complex(B, D), complex(A, D).;true;true', '7;false,false,true;complex(B, J).;true;true', '7;true,false,false;complex(B, G).;true;true', '7;true,false;complex(A, E), complex(B, F).;true;true', '7;false,false;complex(A, I).;true;true', '7;false,false,false;complex(B, K).;true;true', '8;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '8;false;complex(B, H), complex(A, H).;true;true', '8;true;complex(A, D), complex(B, D).;true;true', '8;false,false,true;complex(B, J).;true;true', '8;true,false,false;complex(B, G).;true;true', '8;true,false;complex(A, E), complex(B, F).;true;true', '8;false,false;complex(A, I).;true;true', '8;false,false,false;complex(B, K).;true;true', '9;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '9;false;complex(B, H), complex(A, H).;true;true', '9;true;complex(A, D), complex(B, D).;true;true', '9;false,false,true;complex(B, J).;true;true', '9;true,false,false;complex(B, G).;true;true', '9;true,false;complex(A, E), complex(B, F).;true;true', '9;false,false;complex(A, I).;true;true', '9;false,false,false;complex(B, K).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.8196873966379739;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E) )
%   | | then if ( phenotype(A, F), phenotype(B, F) )
%   | | | then return 0.6769408814082347;  // std dev = 4,702, 149,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=122 */
%   | | | else return 0.41056828993821787;  // std dev = 11,074, 496,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=274 */
%   | | else return 0.5231686979453574;  // std dev = 0,472, 1.012,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=673 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.18879409638983422;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.2353559976998288;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.1609658365079625;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.2563140727141864;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.688708700815712;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E) )
%   | | then if ( phenotype(B, F), phenotype(A, F) )
%   | | | then return 0.573347656859003;  // std dev = 4,702, 149,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=122 */
%   | | | else return 0.352920858240701;  // std dev = 11,074, 496,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=274 */
%   | | else return 0.4469296740484419;  // std dev = 0,472, 1.012,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=673 */
%   else if ( complex(A, G), complex(B, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.1642239042623809;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.20422579004642036;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.14022037444613225;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.2221650495001744;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.5339272109474118;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E) )
%   | | then if ( phenotype(A, F), phenotype(B, F) )
%   | | | then return 0.45286059164561127;  // std dev = 4,702, 149,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=122 */
%   | | | else return 0.290595566582866;  // std dev = 11,074, 496,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=274 */
%   | | else return 0.361353892027105;  // std dev = 0,472, 1.012,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=673 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.14017868744088544;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.17303472235789763;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.12021439179525507;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.18759976728044142;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.4012523491151745;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.2599988174376818;  // std dev = 0,472, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.2872807701021824;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.2685955728042151;  // std dev = 16,187, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.11762290394007925;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.14347983951284385;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.10158286451777711;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.15472693764286122;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.30597716653683027;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.19869619401831026;  // std dev = 0,472, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.21743386679760243;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.20456045124290373;  // std dev = 16,182, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.09723961009090103;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.11680957807384852;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.08475839775680881;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.12511343097902763;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.24051322310232084;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.15050650736389679;  // std dev = 0,472, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.16320006289825575;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.15416298510359686;  // std dev = 16,181, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.07939217158688776;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.0936924266537756;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.06996158799314253;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.09958760758613247;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.1947855850368083;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.11381202055087788;  // std dev = 0,472, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.12256349724692629;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.11592167061302172;  // std dev = 16,182, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.064163784493181;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.0742807717232692;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.05723135522314038;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.07832207905660622;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.16176939808047844;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.08621524341555321;  // std dev = 0,472, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.0924461545508581;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.087318033204851;  // std dev = 16,183, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.05143540197482682;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.0583698981818758;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.04647422093968841;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.06104871915342079;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.1371132938219507;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.06550867024080276;  // std dev = 0,472, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.07010395926456785;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.06598404206753875;  // std dev = 16,185, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.04096736967472085;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.0455613147247801;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.0375149482173169;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.047273526452949806;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.11814007732365525;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.049936946535927736;  // std dev = 0,472, 197,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.05343546505771486;  // std dev = 8,117, 299,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=201 */
%   | | | else return 0.0500351879479049;  // std dev = 16,187, 1.161,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=742 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.03246567195921783;  // std dev = 5,239, 124,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.03538604875365235;  // std dev = 12,098, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.030138571970584085;  // std dev = 7,743, 284,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | | | else return 0.03643178878928285;  // std dev = 16,162, 1.090,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=434 */


Results
   AUC ROC   = 0.672107
   AUC PR    = 0.695614
   CLL	      = -0.636958
   Precision = 0.609791 at threshold = 0.5
   Recall    = 0.671747
   F1        = 0.639271


Total learning time: 51.228 seconds
Total inference time: 4.243 seconds
AUC ROC: 0.672107


Refined model AUC ROC: 0.672107


Dataset: 23_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 06:26:55
{'Recall': 0.671747, 'F1': 0.639271, 'AUC PR': 0.695614, 'Learning time': 108.42500000000001, 'AUC ROC': 0.672107, 'Inference time': 4.243, 'Precision': [0.609791, 0.5], 'Mapping results': {'Generating mappings time': 0.0220644474029541, 'Possible mappings': [128], 'Generating paths time': 2.6498913764953613, 'Total time': 2.7366387844085693, 'Numbers preds mapping': [3], 'Finding best mapping': 1.430511474609375e-06, 'Max mapping': 729, 'Knowledge compiling time': 0.06467390060424805}, 'parameter': {'Recall': 0.671747, 'F1': 0.639271, 'AUC PR': 0.684339, 'Learning time': 57.197, 'AUC ROC': 0.666344, 'Inference time': 3.741, 'Precision': [0.609791, 0.5], 'CLL': -0.641497}, 'CLL': -0.636958}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( phenotype(B, D), phenotype(A, D) )
%   | then return 0.689609609256812;  // std dev = 0,374, 267,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=222 */
%   | else if ( location(B, E), location(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.4883458716421776;  // std dev = 10,320, 457,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=288 */
%   | | | else return 0.5969724645112728;  // std dev = 9,056, 425,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=314 */
%   | | else if ( enzyme(B, G), location(A, H) )
%   | | | then return 0.11814893509951148;  // std dev = 4,386, 100,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=26 */
%   | | | else return 0.44293154379516037;  // std dev = 10,569, 460,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=269 */
%   else if ( enzyme(B, I), phenotype(A, J) )
%   | then return 0.13131966680683013;  // std dev = 0,446, 205,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=56 */
%   | else if ( complex(B, K), location(A, L) )
%   | | then return 0.16362443942227592;  // std dev = 0,461, 347,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=106 */
%   | | else if ( proteinclass(A, M), function(B, N) )
%   | | | then return 0.19312430455764176;  // std dev = 6,725, 203,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=68 */
%   | | | else return 0.27249739776422194;  // std dev = 18,207, 1.366,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=566 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( phenotype(B, D), phenotype(A, D) )
%   | then return 0.5836625593348788;  // std dev = 0,374, 267,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=222 */
%   | else if ( location(A, E), enzyme(B, F) )
%   | | then if ( location(B, E) )
%   | | | then return 0.3731593611766627;  // std dev = 5,857, 143,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=85 */
%   | | | else return 0.10314948706469908;  // std dev = 4,386, 100,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=26 */
%   | | else if ( location(B, G), location(A, G) )
%   | | | then return 0.47836252110807614;  // std dev = 12,436, 739,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=517 */
%   | | | else return 0.3800654406182296;  // std dev = 10,569, 460,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=269 */
%   else if ( proteinclass(B, H), enzyme(B, I) )
%   | then return 0.07411682096353035;  // std dev = 0,426, 120,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=29 */
%   | else if ( enzyme(B, J), complex(A, K) )
%   | | then return 0.11448202771967239;  // std dev = 0,446, 120,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=33 */
%   | | else if ( proteinclass(A, L), complex(B, M) )
%   | | | then return -0.007577362630517517;  // std dev = 2,430, 45,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | | else return 0.22173464705030085;  // std dev = 20,941, 1.836,000 (wgt'ed) examples reached here.  /* #neg=1.109 #pos=727 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( enzyme(B, D), location(A, E) )
%   | then if ( location(B, E), phenotype(B, F) )
%   | | then return 0.4043648439954129;  // std dev = 0,445, 94,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=68 */
%   | | else if ( enzyme(A, D) )
%   | | | then return 0.5877124387979756;  // std dev = 0,946, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.14182151219008618;  // std dev = 6,214, 177,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=65 */
%   | else if ( phenotype(A, G), phenotype(B, G) )
%   | | then return 0.4635022164806362;  // std dev = 0,371, 230,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=192 */
%   | | else return 0.35694736289130025;  // std dev = 0,473, 1.199,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=786 */
%   else if ( enzyme(B, H), phenotype(A, I) )
%   | then return 0.0960815867333146;  // std dev = 0,444, 205,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=56 */
%   | else if ( complex(B, J), location(A, K) )
%   | | then return 0.11545670521980986;  // std dev = 0,459, 347,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=106 */
%   | | else if ( phenotype(A, L), function(B, M) )
%   | | | then return 0.16463529094630458;  // std dev = 12,214, 637,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=239 */
%   | | | else return 0.2132848151809186;  // std dev = 15,076, 932,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=395 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.3053960179039366;  // std dev = 0,447, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(A, E), enzyme(B, F) )
%   | | then return 0.09307032546748552;  // std dev = 0,443, 105,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | else if ( phenotype(B, G), location(B, H) )
%   | | | then return 0.29735816303358137;  // std dev = 7,624, 278,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=192 */
%   | | | else return 0.19552633377007714;  // std dev = 8,220, 273,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=149 */
%   else if ( enzyme(B, I), proteinclass(B, J) )
%   | then return 0.040098645294656274;  // std dev = 0,425, 120,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=29 */
%   | else if ( location(B, K), location(A, K) )
%   | | then if ( proteinclass(A, L), phenotype(B, M) )
%   | | | then return -0.001676240472431693;  // std dev = 2,162, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.17099723254307833;  // std dev = 15,027, 939,000 (wgt'ed) examples reached here.  /* #neg=557 #pos=382 */
%   | | else if ( function(B, N), phenotype(A, P) )
%   | | | then return 0.09095734349433379;  // std dev = 10,514, 512,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=163 */
%   | | | else return 0.17088051142341928;  // std dev = 11,194, 520,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=216 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( complex(B, D), phenotype(B, E) )
%   | then return 0.26073865022659265;  // std dev = 0,432, 431,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=319 */
%   | else if ( phenotype(B, F), phenotype(A, F) )
%   | | then return 0.314421923207822;  // std dev = 0,344, 126,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=109 */
%   | | else if ( complex(A, G), location(B, H) )
%   | | | then return 0.11357537983508723;  // std dev = 9,754, 401,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=212 */
%   | | | else return 0.20951785194582892;  // std dev = 12,792, 751,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=479 */
%   else if ( proteinclass(B, I), enzyme(B, J) )
%   | then return 0.033583400758475226;  // std dev = 0,425, 120,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=29 */
%   | else if ( complex(B, K) )
%   | | then if ( phenotype(A, L), phenotype(B, M) )
%   | | | then return 0.22134746564218086;  // std dev = 4,481, 82,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=37 */
%   | | | else return 0.04635885051302109;  // std dev = 7,532, 281,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=80 */
%   | | else if ( function(B, N), phenotype(A, P) )
%   | | | then return 0.10582586739520665;  // std dev = 13,283, 773,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=278 */
%   | | | else return 0.1472215939329922;  // std dev = 14,553, 865,000 (wgt'ed) examples reached here.  /* #neg=493 #pos=372 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.1795981095923121;  // std dev = 0,446, 1.053,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=747 */
%   | else if ( location(B, E), location(A, F) )
%   | | then if ( proteinclass(A, G), enzyme(A, H) )
%   | | | then return 0.3631114451093087;  // std dev = 1,978, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return 0.08097213983128036;  // std dev = 10,248, 475,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=249 */
%   | | else return 0.20644338982234017;  // std dev = 0,468, 156,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=103 */
%   else if ( enzyme(B, I), proteinclass(B, J) )
%   | then return 0.02800858056578716;  // std dev = 0,425, 120,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=29 */
%   | else if ( location(A, K), location(B, K) )
%   | | then if ( phenotype(B, L), phenotype(A, M) )
%   | | | then return 0.1834500863465489;  // std dev = 5,527, 124,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=57 */
%   | | | else return 0.09973934227022337;  // std dev = 14,116, 845,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=331 */
%   | | else if ( phenotype(B, N), enzyme(B, P) )
%   | | | then return -0.09739939011464702;  // std dev = 2,393, 42,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return 0.0900292642704201;  // std dev = 15,126, 990,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=372 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.35407317688988843;  // std dev = 0,193, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   else if ( function(B, D), function(A, D) )
%   | then if ( enzyme(B, E), complex(B, F) )
%   | | then if ( phenotype(B, G), location(A, H) )
%   | | | then return 0.12178996743075549;  // std dev = 2,436, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.10461774384186835;  // std dev = 2,727, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.09702484088709595;  // std dev = 14,355, 964,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=611 */
%   | | | else return 0.14648736597368311;  // std dev = 11,314, 629,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=433 */
%   | else if ( phenotype(A, J), function(B, K) )
%   | | then if ( location(B, L), location(A, L) )
%   | | | then return 0.10070486592681056;  // std dev = 10,018, 425,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=171 */
%   | | | else return 0.03306340653302906;  // std dev = 10,692, 543,000 (wgt'ed) examples reached here.  /* #neg=375 #pos=168 */
%   | | else if ( complex(B, M) )
%   | | | then return 0.02588030818587354;  // std dev = 6,972, 240,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=69 */
%   | | | else return 0.09616989380261332;  // std dev = 14,908, 913,000 (wgt'ed) examples reached here.  /* #neg=525 #pos=388 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then return 0.14380148539237939;  // std dev = 0,393, 318,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=244 */
%   else if ( phenotype(A, D), function(B, E) )
%   | then if ( location(B, F), location(A, F) )
%   | | then if ( proteinclass(A, G), phenotype(B, H) )
%   | | | then return 0.19655117947046333;  // std dev = 2,982, 54,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | | | else return 0.06455163910958861;  // std dev = 13,662, 794,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=405 */
%   | | else if ( phenotype(B, I), complex(B, J) )
%   | | | then return 0.15812716927506368;  // std dev = 4,727, 96,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=53 */
%   | | | else return 0.010623827677251646;  // std dev = 12,678, 745,000 (wgt'ed) examples reached here.  /* #neg=485 #pos=260 */
%   | else if ( location(B, K) )
%   | | then if ( proteinclass(A, L), location(A, K) )
%   | | | then return -3.3960968006385505E-4;  // std dev = 4,406, 97,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=45 */
%   | | | else return 0.07721519252823333;  // std dev = 18,577, 1.553,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=776 */
%   | | else if ( function(B, M), function(A, M) )
%   | | | then return 0.2596923765798863;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | | else return 0.12044963222526434;  // std dev = 5,885, 139,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=66 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.2521239804932534;  // std dev = 0,193, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else return 0.06615887289921932;  // std dev = 0,458, 1.657,000 (wgt'ed) examples reached here.  /* #neg=588 #pos=1.069 */
%   else if ( complex(B, E), location(A, F) )
%   | then if ( phenotype(A, G), phenotype(B, H) )
%   | | then if ( location(B, F), complex(A, I) )
%   | | | then return -0.06305099680365132;  // std dev = 2,362, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.16677620703994242;  // std dev = 3,884, 64,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   | | else return -0.004038167162335994;  // std dev = 0,442, 298,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=81 */
%   | else if ( phenotype(B, J), phenotype(A, J) )
%   | | then if ( enzyme(B, K), complex(A, L) )
%   | | | then return 0.026040643575081228;  // std dev = 1,246, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.20489736666309988;  // std dev = 2,440, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else if ( function(B, M), phenotype(A, N) )
%   | | | then return 0.033366713647553385;  // std dev = 13,032, 768,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=265 */
%   | | | else return 0.05597646125948154;  // std dev = 15,047, 932,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=395 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then return 0.09554421716474543;  // std dev = 0,391, 318,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=244 */
%   else if ( enzyme(B, D) )
%   | then if ( location(A, E), location(B, E) )
%   | | then if ( proteinclass(B, F) )
%   | | | then return -0.01347444471480564;  // std dev = 4,569, 103,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=42 */
%   | | | else return 0.06351342403122555;  // std dev = 7,714, 253,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=123 */
%   | | else if ( proteinclass(B, G), complex(A, H) )
%   | | | then return 0.12929501390507844;  // std dev = 3,190, 46,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return -0.040355733263016474;  // std dev = 7,249, 286,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=77 */
%   | else if ( proteinclass(B, I), phenotype(A, J) )
%   | | then if ( complex(B, K), phenotype(B, L) )
%   | | | then return 0.1193054562730894;  // std dev = 3,099, 52,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=36 */
%   | | | else return -0.04289573427337149;  // std dev = 5,903, 141,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=57 */
%   | | else if ( function(B, M), function(A, M) )
%   | | | then return 0.066242335143249;  // std dev = 15,153, 1.072,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=714 */
%   | | | else return 0.034851793153824265;  // std dev = 19,073, 1.559,000 (wgt'ed) examples reached here.  /* #neg=955 #pos=604 */


Results
   AUC ROC   = 0.675942
   AUC PR    = 0.700407
   CLL	      = -0.642204
   Precision = 0.6209 at threshold = 0.5
   Recall    = 0.636186
   F1        = 0.62845


Total learning time: 106.44 seconds
Total inference time: 2.981 seconds
AUC ROC: 0.675942


Dataset: 23_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 06:28:45
{'Recall': 0.636186, 'F1': 0.62845, 'AUC PR': 0.700407, 'Learning time': 106.44, 'AUC ROC': 0.675942, 'Inference time': 2.981, 'Precision': [0.6209, 0.5], 'CLL': -0.642204}


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(B, D), location(A, D) )
%   | then if ( phenotype(B, E), phenotype(A, E) )
%   | | then if ( enzyme(B, F), proteinclass(A, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7135706218464983;  // std dev = 4,531, 166,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=142 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.4883458716421776;  // std dev = 10,320, 457,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=288 */
%   | | | else return 0.5969724645112728;  // std dev = 9,056, 425,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=314 */
%   | else if ( enzyme(B, I), location(A, J) )
%   | | then if ( phenotype(A, K), proteinclass(B, L) )
%   | | | then return 0.3947343009531699;  // std dev = 3,193, 41,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return -0.0012260649004877215;  // std dev = 2,781, 64,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=9 */
%   | | else if ( location(B, M), phenotype(B, N) )
%   | | | then return 0.548796417113897;  // std dev = 7,707, 278,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=192 */
%   | | | else return 0.403936480887056;  // std dev = 8,227, 273,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=149 */
%   else if ( enzyme(B, P), phenotype(A, Q) )
%   | then if ( enzyme(R, P), proteinclass(R, S) )
%   | | then if ( phenotype(R, Q), complex(A, T) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.07663367359613994;  // std dev = 1,675, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | | else if ( complex(A, U) )
%   | | | then return 0.11305089588382522;  // std dev = 4,401, 102,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
%   | | | else return 0.32753669020155207;  // std dev = 3,493, 49,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | else if ( proteinclass(A, W), function(B, X) )
%   | | then if ( complex(B, Y), location(A, Z) )
%   | | | then return 0.02481560176617901;  // std dev = 2,415, 42,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return 0.19312430455764173;  // std dev = 6,725, 203,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=68 */
%   | | else if ( enzyme(B, AB), proteinclass(B, BB) )
%   | | | then return 0.15814893509951197;  // std dev = 3,834, 70,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | | else return 0.26039752972786523;  // std dev = 19,620, 1.601,000 (wgt'ed) examples reached here.  /* #neg=957 #pos=644 */


Results
   AUC ROC   = 0.661341
   AUC PR    = 0.670386
   CLL	      = -0.901813
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 17.101 seconds
Total inference time: 3.074 seconds
AUC ROC: 0.661341


Dataset: 23_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 06:29:06
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.670386, 'Learning time': 17.101, 'AUC ROC': 0.661341, 'Inference time': 3.074, 'Precision': [nan, 0.5], 'CLL': -0.901813}


Starting fold 2

Target predicate: interaction
Mapping Results
   Knowledge compiling time   = 0.060228824615478516
   Generating paths time   = 2.5129404067993164
   Generating mappings time   = 0.02227163314819336
   Possible mappings   = [128]
   Max mapping   = 729
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 2.5954489707946777


Best mapping found: ['tweets(A,B) -> complex(A,B)', 'follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: interaction 

Target train facts examples: 2790
Target train pos examples: 1170
Target train neg examples: 1170

Target test facts examples: 8120
Target test pos examples: 3304
Target test neg examples: 3304

******************************************
Performing Parameter Learning
******************************************
Refine
0;;interaction(A, B) :- function(A, C), function(B, C).;true;true
0;false;complex(B, G), complex(A, G).;false;true
0;true;complex(A, D), complex(B, D).;false;true
0;false,false,true;complex(B, I).;false;false
0;true,false,false;complex(B, F).;false;false
0;true,false;complex(A, E).;false;true
0;false,false;complex(A, H).;true;true
0;false,false,false;complex(B, J).;false;false
1;;interaction(A, B) :- function(A, C), function(B, C).;true;true
1;false;complex(A, G), complex(B, G).;false;true
1;true;complex(A, D), complex(B, D).;false;true
1;false,false,true;complex(B, I).;false;false
1;true,false,false;complex(B, F).;false;false
1;true,false;complex(A, E).;false;true
1;false,false;complex(A, H).;true;true
1;false,false,false;complex(B, J).;false;false
2;;interaction(A, B) :- function(A, C), function(B, C).;true;true
2;false;complex(B, G), complex(A, G).;false;true
2;true;complex(A, D), complex(B, D).;false;true
2;false,false,true;complex(B, I).;false;false
2;true,false,false;complex(B, F).;false;false
2;true,false;complex(A, E).;false;true
2;false,false;complex(A, H).;true;true
2;false,false,false;complex(B, J).;false;false
3;;interaction(A, B) :- function(A, C), function(B, C).;true;true
3;false;complex(B, H), complex(A, H).;false;true
3;true;complex(A, D), complex(B, D).;false;true
3;false,false,true;complex(B, J).;false;false
3;true,false,false;complex(B, G).;false;false
3;true,false;complex(A, E), complex(B, F).;false;true
3;false,false;complex(A, I).;true;true
3;false,false,false;complex(B, K).;false;false
4;;interaction(A, B) :- function(A, C), function(B, C).;true;true
4;false;complex(A, H), complex(B, H).;false;true
4;true;complex(B, D), complex(A, D).;false;true
4;false,false,true;complex(B, J).;false;false
4;true,false,false;complex(B, G).;false;false
4;true,false;complex(A, E), complex(B, F).;false;true
4;false,false;complex(A, I).;true;true
4;false,false,false;complex(B, K).;false;false
5;;interaction(A, B) :- function(A, C), function(B, C).;true;true
5;false;complex(B, H), complex(A, H).;false;true
5;true;complex(A, D), complex(B, D).;false;true
5;false,false,true;complex(B, J).;false;false
5;true,false,false;complex(B, G).;false;false
5;true,false;complex(A, E), complex(B, F).;false;true
5;false,false;complex(A, I).;true;true
5;false,false,false;complex(B, K).;false;false
6;;interaction(A, B) :- function(A, C), function(B, C).;true;true
6;false;complex(A, H), complex(B, H).;false;true
6;true;complex(B, D), complex(A, D).;false;true
6;false,false,true;complex(B, J).;false;false
6;true,false,false;complex(B, G).;false;false
6;true,false;complex(A, E), complex(B, F).;false;true
6;false,false;complex(A, I).;true;true
6;false,false,false;complex(B, K).;false;false
7;;interaction(A, B) :- function(A, C), function(B, C).;true;true
7;false;complex(A, H), complex(B, H).;false;true
7;true;complex(B, D), complex(A, D).;false;true
7;false,false,true;complex(B, J).;false;false
7;true,false,false;complex(B, G).;false;false
7;true,false;complex(A, E), complex(B, F).;false;true
7;false,false;complex(A, I).;true;true
7;false,false,false;complex(B, K).;false;false
8;;interaction(A, B) :- function(A, C), function(B, C).;true;true
8;false;complex(B, H), complex(A, H).;false;true
8;true;complex(A, D), complex(B, D).;false;true
8;false,false,true;complex(B, J).;false;false
8;true,false,false;complex(B, G).;false;false
8;true,false;complex(A, E), complex(B, F).;false;true
8;false,false;complex(A, I).;true;true
8;false,false,false;complex(B, K).;false;false
9;;interaction(A, B) :- function(A, C), function(B, C).;true;true
9;false;complex(B, H), complex(A, H).;false;true
9;true;complex(A, D), complex(B, D).;false;true
9;false,false,true;complex(B, J).;false;false
9;true,false,false;complex(B, G).;false;false
9;true,false;complex(A, E), complex(B, F).;false;true
9;false,false;complex(A, I).;true;true
9;false,false,false;complex(B, K).;false;false


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.7797175625504916;  // std dev = 2,715, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E) )
%   | | then return 0.4197325128121177;  // std dev = 12,958, 682,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=383 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.4263307532813272;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.48114358750592534;  // std dev = 9,372, 374,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=233 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.11102249831790272;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.21735070893542818;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.2436911037742098;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.20712254213763148;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.6565962386575928;  // std dev = 2,715, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E) )
%   | | then return 0.3606175341407841;  // std dev = 12,958, 682,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=383 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.3661541469362579;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.41198603284791296;  // std dev = 9,372, 374,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=233 */
%   else if ( complex(A, G), complex(B, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.09696320728559908;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.18878116886065913;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.21136523411239813;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.1799941632122313;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.5115010924972757;  // std dev = 2,715, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E) )
%   | | then return 0.2964879866680709;  // std dev = 12,958, 682,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=383 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.30071538695208355;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.33535397136346723;  // std dev = 9,372, 374,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=233 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.0837728746898699;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.16041082271571916;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.1788439180365647;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.1531939236535796;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.3846820415776139;  // std dev = 2,715, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.25901720894612773;  // std dev = 8,243, 280,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=164 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.23787544627726223;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.23929901922970878;  // std dev = 13,708, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.07167400231302103;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.13362488347709559;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.14798147140765613;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.12794623713015463;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.2915033334991755;  // std dev = 2,715, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.19971125176254473;  // std dev = 8,243, 280,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=164 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.18331093131071427;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.1836094419172307;  // std dev = 13,707, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.06079609669654267;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.10943047792233054;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.12014806843874273;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.10513405183487176;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.2264838017139705;  // std dev = 2,715, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.1514401174032118;  // std dev = 8,243, 280,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=164 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.13910368539629206;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.1389434686906813;  // std dev = 13,706, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.05118456030281413;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.08836907917299174;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.09607436910619672;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.08523157477030976;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.18070078428146605;  // std dev = 2,715, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.11393261602649944;  // std dev = 8,243, 280,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=164 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.10474385345181186;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.10448481710409982;  // std dev = 13,706, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.042817374944134165;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.07056885038063523;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.07592204119108574;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.06835143050459577;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.1475427431665389;  // std dev = 2,715, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.08547947879170817;  // std dev = 8,243, 280,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=164 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.07862174972232983;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.07841537783651505;  // std dev = 13,706, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.035624377664579245;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.05586617154952125;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.05946329698111927;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.054348578301371915;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.12278205829257809;  // std dev = 2,715, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.06412304470024406;  // std dev = 8,243, 280,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=164 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.05896887270190189;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.058857114491347194;  // std dev = 13,706, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.029505393496688168;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.04393234623954331;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.04626352996609966;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.0429291446843086;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.10376909932479167;  // std dev = 2,715, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.04814976428180514;  // std dev = 8,243, 280,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=164 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.04424392614123265;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.04422115680913671;  // std dev = 13,706, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.02434520659264256;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.03437242044015285;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.03581688394972818;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.03373667129142227;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */


Results
   AUC ROC   = 0.646779
   AUC PR    = 0.676033
   CLL	      = -0.651734
   Precision = 0.635873 at threshold = 0.5
   Recall    = 0.606235
   F1        = 0.6207


Total learning time: 37.929 seconds
Total inference time: 3.503 seconds
AUC ROC: 0.646779


Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(B, G), complex(A, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [8.802, 222, 119], 'true,true': [2.715, 8, 94], 'false,false,false,true': [4.434, 51, 32], 'true,false,false,false': [9.372, 141, 233], 'true,false,true': [12.958, 299, 383], 'false,false,true,false': [10.189, 289, 162], 'true,false,false,true': [7.347, 95, 125], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.054, 65, 22]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(A, G), complex(B, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [8.802, 222, 119], 'true,true': [2.715, 8, 94], 'false,false,false,true': [4.434, 51, 32], 'true,false,false,false': [9.372, 141, 233], 'true,false,true': [12.958, 299, 383], 'false,false,true,false': [10.189, 289, 162], 'true,false,false,true': [7.347, 95, 125], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.054, 65, 22]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(B, G), complex(A, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [8.802, 222, 119], 'true,true': [2.715, 8, 94], 'false,false,false,true': [4.434, 51, 32], 'true,false,false,false': [9.372, 141, 233], 'true,false,true': [12.958, 299, 383], 'false,false,true,false': [10.189, 289, 162], 'true,false,false,true': [7.347, 95, 125], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.054, 65, 22]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [8.802, 222, 119], 'true,true': [2.715, 8, 94], 'false,false,false,true': [4.434, 51, 32], 'true,false,false,false': [13.708, 324, 452], 'true,false,true': [8.243, 116, 164], 'false,false,true,false': [10.189, 289, 162], 'true,false,false,true': [7.347, 95, 125], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.054, 65, 22]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [8.802, 222, 119], 'true,true': [2.715, 8, 94], 'false,false,false,true': [4.434, 51, 32], 'true,false,false,false': [13.707, 324, 452], 'true,false,true': [8.243, 116, 164], 'false,false,true,false': [10.189, 289, 162], 'true,false,false,true': [7.347, 95, 125], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.054, 65, 22]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [8.802, 222, 119], 'true,true': [2.715, 8, 94], 'false,false,false,true': [4.434, 51, 32], 'true,false,false,false': [13.706, 324, 452], 'true,false,true': [8.243, 116, 164], 'false,false,true,false': [10.189, 289, 162], 'true,false,false,true': [7.347, 95, 125], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.054, 65, 22]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [8.802, 222, 119], 'true,true': [2.715, 8, 94], 'false,false,false,true': [4.434, 51, 32], 'true,false,false,false': [13.706, 324, 452], 'true,false,true': [8.243, 116, 164], 'false,false,true,false': [10.189, 289, 162], 'true,false,false,true': [7.347, 95, 125], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.054, 65, 22]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [8.802, 222, 119], 'true,true': [2.715, 8, 94], 'false,false,false,true': [4.434, 51, 32], 'true,false,false,false': [13.706, 324, 452], 'true,false,true': [8.243, 116, 164], 'false,false,true,false': [10.189, 289, 162], 'true,false,false,true': [7.347, 95, 125], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.054, 65, 22]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [8.802, 222, 119], 'true,true': [2.715, 8, 94], 'false,false,false,true': [4.434, 51, 32], 'true,false,false,false': [13.706, 324, 452], 'true,false,true': [8.243, 116, 164], 'false,false,true,false': [10.189, 289, 162], 'true,false,false,true': [7.347, 95, 125], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.054, 65, 22]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [8.802, 222, 119], 'true,true': [2.715, 8, 94], 'false,false,false,true': [4.434, 51, 32], 'true,false,false,false': [13.706, 324, 452], 'true,false,true': [8.243, 116, 164], 'false,false,true,false': [10.189, 289, 162], 'true,false,false,true': [7.347, 95, 125], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.054, 65, 22]}]]
[{'': [0.23877445910336903, 0.22696673164448297], 'false': [nan, 0.22696673164448794], 'true': [0.07227989234909792, 0.24348411965290354], 'false,false,true': [0.18892852424362622, 0.23017585950905192], 'true,false,false': [0.24535123966942532, 0.23487231547942847], 'true,false': [0.246207462956106, 0.23945402396579998], 'false,false': [0.22503834938710382, 0.22930202029192198], 'false,false,false': [0.2368994048483104, 0.22719102862892745]}, {'': [0.23597623840861728, 0.22671178113863136], 'false': [nan, 0.2267117811386307], 'true': [0.07227989234909708, 0.24325982329757204], 'false,false,true': [0.18892852424362472, 0.2301758595090487], 'true,false,false': [0.2453512396694206, 0.23487231547941992], 'true,false': [0.2462074629561162, 0.23924324144863648], 'false,false': [0.22464859429620115, 0.22924642760362102], 'false,false,false': [0.2368994048483091, 0.2271910286289227]}, {'': [0.23321846840671093, 0.22648421337584898], 'false': [nan, 0.22648421337584923], 'true': [0.07227989234909575, 0.2430363910348193], 'false,false,true': [0.18892852424362475, 0.23017585950905228], 'true,false,false': [0.24535123966942335, 0.2348723154794241], 'true,false': [0.24620746295612092, 0.2390331946171537], 'false,false': [0.2243019455342817, 0.22919506892504393], 'false,false,false': [0.2368994048483079, 0.22719102862892895]}, {'': [0.2316243790138323, 0.22630329336334276], 'false': [nan, 0.2263032933633421], 'true': [0.07227989234909656, 0.24288404767821203], 'false,false,true': [0.18892852424362577, 0.2301758595090497], 'true,false,false': [0.24535123966942068, 0.2421544573201058], 'true,false': [0.24265306122448616, 0.24286092266209058], 'false,false': [0.22402601831709937, 0.22915468507071599], 'false,false,false': [0.23689940484830915, 0.22719102862892257]}, {'': [0.23095445572958367, 0.2261730544642527], 'false': [nan, 0.22617305446425529], 'true': [0.0722798923490964, 0.24283151225059216], 'false,false,true': [0.18892852424362513, 0.23017585950904845], 'true,false,false': [0.24535123966941946, 0.2421079050267843], 'true,false': [0.24265306122449, 0.24282431958009282], 'false,false': [0.223826391635601, 0.22912697813181393], 'false,false,false': [0.23689940484830987, 0.2271910286289265]}, {'': [0.23067061194967028, 0.22608679650656918], 'false': [nan, 0.2260867965065691], 'true': [0.07227989234909621, 0.24280002628557798], 'false,false,true': [0.1889285242436256, 0.230175859509047], 'true,false,false': [0.2453512396694223, 0.24208603212900534], 'true,false': [0.24265306122449054, 0.2428072671277719], 'false,false': [0.22369318849851696, 0.22910999807846386], 'false,false,false': [0.23689940484830949, 0.22719102862892576]}, {'': [0.23053915667934935, 0.22603349021945743], 'false': [nan, 0.2260334902194579], 'true': [0.0722798923490965, 0.24278356471717635], 'false,false,true': [0.188928524243625, 0.23017585950905153], 'true,false,false': [0.2453512396694217, 0.2420778532232945], 'true,false': [0.2426530612244892, 0.24280090193758694], 'false,false': [0.2236101520870757, 0.2291005123096831], 'false,false,false': [0.2368994048483087, 0.22719102862892684]}, {'': [0.2304685840290468, 0.22600240780185432], 'false': [nan, 0.22600240780185374], 'true': [0.07227989234909632, 0.24277608999344], 'false,false,true': [0.18892852424362533, 0.2301758595090481], 'true,false,false': [0.24535123966942132, 0.24207653039545976], 'true,false': [0.2426530612244909, 0.24279986708253662], 'false,false': [0.2235612943779568, 0.2290956076173265], 'false,false,false': [0.23689940484830832, 0.22719102862892684]}, {'': [0.23042331305221686, 0.2259851761180804], 'false': [nan, 0.22598517611808108], 'true': [0.0722798923490963, 0.24277341080902934], 'false,false,true': [0.18892852424362527, 0.23017585950904973], 'true,false,false': [0.24535123966942265, 0.24207826836619356], 'true,false': [0.24265306122448957, 0.24280121598421367], 'false,false': [0.22353396641636009, 0.2290932394479986], 'false,false,false': [0.23689940484830832, 0.2271910286289225]}, {'': [0.23038913505394734, 0.22597605763081843], 'false': [nan, 0.22597605763081996], 'true': [0.07227989234909657, 0.2427730675090481], 'false,false,true': [0.1889285242436256, 0.23017585950904562], 'true,false,false': [0.2453512396694217, 0.24208110773085031], 'true,false': [0.24265306122449048, 0.24280342611975553], 'false,false': [0.22351938126254586, 0.22909217033333304], 'false,false,false': [0.2368994048483091, 0.22719102862892604]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '0;false;complex(B, G), complex(A, G).;true;true', '0;true;complex(A, D), complex(B, D).;true;true', '0;false,false,true;complex(B, I).;true;true', '0;true,false,false;complex(B, F).;true;true', '0;true,false;complex(A, E).;true;true', '0;false,false;complex(A, H).;true;true', '0;false,false,false;complex(B, J).;true;true', '1;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '1;false;complex(A, G), complex(B, G).;true;true', '1;true;complex(A, D), complex(B, D).;true;true', '1;false,false,true;complex(B, I).;true;true', '1;true,false,false;complex(B, F).;true;true', '1;true,false;complex(A, E).;true;true', '1;false,false;complex(A, H).;true;true', '1;false,false,false;complex(B, J).;true;true', '2;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '2;false;complex(B, G), complex(A, G).;true;true', '2;true;complex(A, D), complex(B, D).;true;true', '2;false,false,true;complex(B, I).;true;true', '2;true,false,false;complex(B, F).;true;true', '2;true,false;complex(A, E).;true;true', '2;false,false;complex(A, H).;true;true', '2;false,false,false;complex(B, J).;true;true', '3;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '3;false;complex(B, H), complex(A, H).;true;true', '3;true;complex(A, D), complex(B, D).;true;true', '3;false,false,true;complex(B, J).;true;true', '3;true,false,false;complex(B, G).;true;true', '3;true,false;complex(A, E), complex(B, F).;true;true', '3;false,false;complex(A, I).;true;true', '3;false,false,false;complex(B, K).;true;true', '4;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '4;false;complex(A, H), complex(B, H).;true;true', '4;true;complex(B, D), complex(A, D).;true;true', '4;false,false,true;complex(B, J).;true;true', '4;true,false,false;complex(B, G).;true;true', '4;true,false;complex(A, E), complex(B, F).;true;true', '4;false,false;complex(A, I).;true;true', '4;false,false,false;complex(B, K).;true;true', '5;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '5;false;complex(B, H), complex(A, H).;true;true', '5;true;complex(A, D), complex(B, D).;true;true', '5;false,false,true;complex(B, J).;true;true', '5;true,false,false;complex(B, G).;true;true', '5;true,false;complex(A, E), complex(B, F).;true;true', '5;false,false;complex(A, I).;true;true', '5;false,false,false;complex(B, K).;true;true', '6;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '6;false;complex(A, H), complex(B, H).;true;true', '6;true;complex(B, D), complex(A, D).;true;true', '6;false,false,true;complex(B, J).;true;true', '6;true,false,false;complex(B, G).;true;true', '6;true,false;complex(A, E), complex(B, F).;true;true', '6;false,false;complex(A, I).;true;true', '6;false,false,false;complex(B, K).;true;true', '7;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '7;false;complex(A, H), complex(B, H).;true;true', '7;true;complex(B, D), complex(A, D).;true;true', '7;false,false,true;complex(B, J).;true;true', '7;true,false,false;complex(B, G).;true;true', '7;true,false;complex(A, E), complex(B, F).;true;true', '7;false,false;complex(A, I).;true;true', '7;false,false,false;complex(B, K).;true;true', '8;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '8;false;complex(B, H), complex(A, H).;true;true', '8;true;complex(A, D), complex(B, D).;true;true', '8;false,false,true;complex(B, J).;true;true', '8;true,false,false;complex(B, G).;true;true', '8;true,false;complex(A, E), complex(B, F).;true;true', '8;false,false;complex(A, I).;true;true', '8;false,false,false;complex(B, K).;true;true', '9;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '9;false;complex(B, H), complex(A, H).;true;true', '9;true;complex(A, D), complex(B, D).;true;true', '9;false,false,true;complex(B, J).;true;true', '9;true,false,false;complex(B, G).;true;true', '9;true,false;complex(A, E), complex(B, F).;true;true', '9;false,false;complex(A, I).;true;true', '9;false,false,false;complex(B, K).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.7797175625504916;  // std dev = 0,269, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E) )
%   | | then if ( location(B, F), location(A, F) )
%   | | | then return 0.4909433923743348;  // std dev = 10,031, 433,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=274 */
%   | | | else return 0.2958999391155737;  // std dev = 7,828, 249,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=109 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.4263307532813272;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.48114358750592534;  // std dev = 9,372, 374,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=233 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then return 0.20015637004374578;  // std dev = 0,474, 538,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=184 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.2436911037742098;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.20712254213763148;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.6565962386575928;  // std dev = 0,269, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E) )
%   | | then if ( location(B, F), location(A, F) )
%   | | | then return 0.4201497066527278;  // std dev = 10,031, 433,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=274 */
%   | | | else return 0.2559361936937883;  // std dev = 7,828, 249,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=109 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.3661541469362579;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.41198603284791296;  // std dev = 9,372, 374,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=233 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then return 0.17400396407323274;  // std dev = 0,474, 538,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=184 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.21136523411239813;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.1799941632122313;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.5115010924972757;  // std dev = 0,269, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E) )
%   | | then if ( phenotype(A, F), phenotype(B, F) )
%   | | | then return 0.4358010095730079;  // std dev = 5,156, 130,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=92 */
%   | | | else return 0.2620762651419614;  // std dev = 11,605, 552,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=291 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.30071538695208355;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.33535397136346723;  // std dev = 9,372, 374,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=233 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then return 0.14825969468266292;  // std dev = 0,474, 538,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=184 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.1788439180365647;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.1531939236535796;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.3846820415776139;  // std dev = 0,269, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then return 0.3014494950146233;  // std dev = 6,958, 217,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=143 */
%   | | | else return 0.05654755271981798;  // std dev = 3,724, 63,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | else if ( complex(B, H) )
%   | | | then return 0.23787544627726223;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.24296472605132913;  // std dev = 13,626, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(B, I), complex(A, I) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, J) )
%   | | then return 0.12404498735641169;  // std dev = 0,474, 538,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=184 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.14798147140765613;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.12794623713015463;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.2915033334991755;  // std dev = 0,269, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then if ( proteinclass(B, G), location(B, H) )
%   | | | then return 0.2910118021414646;  // std dev = 4,496, 102,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=72 */
%   | | | else return 0.1293031838461638;  // std dev = 6,483, 178,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=92 */
%   | | else if ( complex(B, I) )
%   | | | then return 0.18331093131071427;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.18692383033515864;  // std dev = 13,620, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(A, J), complex(B, J) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, K) )
%   | | then return 0.10216343867624667;  // std dev = 0,474, 538,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=184 */
%   | | else if ( complex(B, L) )
%   | | | then return 0.12014806843874273;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.10513405183487176;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.2264838017139705;  // std dev = 0,269, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then return 0.18134787592661308;  // std dev = 6,917, 217,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=143 */
%   | | | else return 0.01047464007526398;  // std dev = 3,718, 63,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | else if ( complex(B, H) )
%   | | | then return 0.13910368539629206;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.14178561251997504;  // std dev = 13,618, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(B, I), complex(A, I) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, J) )
%   | | then return 0.08304562145704814;  // std dev = 0,474, 538,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=184 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.09607436910619672;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.08523157477030976;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.18070078428146605;  // std dev = 0,269, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.10739498777003137;  // std dev = 0,472, 280,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=164 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.10474385345181186;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.10684638281393884;  // std dev = 13,616, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return -0.022340743628347356;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.08398746698918508;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.07592204119108574;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.06835143050459577;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.1475427431665389;  // std dev = 0,269, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.08138316292954292;  // std dev = 0,472, 280,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=164 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.07862174972232983;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.08034288975996516;  // std dev = 13,616, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return -0.017906855262862495;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.06692222237440124;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.05946329698111927;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.054348578301371915;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.12278205829257809;  // std dev = 0,269, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.06169023145397148;  // std dev = 0,472, 280,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=164 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.05896887270190189;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.06041467715740877;  // std dev = 13,616, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return -0.014385544243274205;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.052889377125925285;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.04626352996609966;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.0429291446843086;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.10376909932479167;  // std dev = 0,269, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.04681372660357664;  // std dev = 0,472, 280,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=164 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.04424392614123265;  // std dev = 7,347, 220,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=125 */
%   | | | else return 0.045472529482909106;  // std dev = 13,616, 776,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=452 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return -0.011577847870476466;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.041537529442873845;  // std dev = 10,189, 451,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=162 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.03581688394972818;  // std dev = 4,434, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.03373667129142227;  // std dev = 8,802, 341,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=119 */


Results
   AUC ROC   = 0.650803
   AUC PR    = 0.683596
   CLL	      = -0.649546
   Precision = 0.664601 at threshold = 0.5
   Recall    = 0.551755
   F1        = 0.602944


Total learning time: 42.102 seconds
Total inference time: 4.159 seconds
AUC ROC: 0.650803


Refined model AUC ROC: 0.650803


Dataset: 23_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 06:30:37
{'Recall': 0.551755, 'F1': 0.602944, 'AUC PR': 0.683596, 'Learning time': 80.031, 'AUC ROC': 0.650803, 'Inference time': 4.159, 'Precision': [0.664601, 0.5], 'Mapping results': {'Generating mappings time': 0.02227163314819336, 'Possible mappings': [128], 'Generating paths time': 2.5129404067993164, 'Total time': 2.5954489707946777, 'Numbers preds mapping': [3], 'Finding best mapping': 1.430511474609375e-06, 'Max mapping': 729, 'Knowledge compiling time': 0.060228824615478516}, 'parameter': {'Recall': 0.606235, 'F1': 0.6207, 'AUC PR': 0.676033, 'Learning time': 37.929, 'AUC ROC': 0.646779, 'Inference time': 3.503, 'Precision': [0.635873, 0.5], 'CLL': -0.651734}, 'CLL': -0.649546}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.5383814932390425;  // std dev = 0,466, 860,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=585 */
%   | else if ( phenotype(B, E), location(B, F) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.5654660082702446;  // std dev = 4,120, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   | | | else return 0.39805503838589407;  // std dev = 7,274, 213,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=115 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.08765713182082385;  // std dev = 3,284, 61,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | | else return 0.24703782398840246;  // std dev = 6,205, 162,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=63 */
%   else if ( proteinclass(A, H), location(B, I) )
%   | then return 0.11469343771731336;  // std dev = 0,437, 191,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=49 */
%   | else if ( location(B, J), phenotype(A, K) )
%   | | then return 0.19148226843284166;  // std dev = 0,471, 336,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=112 */
%   | | else if ( function(B, L), complex(A, M) )
%   | | | then return 0.21566188846738932;  // std dev = 6,658, 193,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=69 */
%   | | | else return 0.29203323262017017;  // std dev = 7,710, 242,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=105 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.7015552188078419;  // std dev = 0,267, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( phenotype(A, E), phenotype(B, E) )
%   | | then return 0.5274158016024816;  // std dev = 0,434, 263,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=197 */
%   | | else if ( location(B, F), location(A, F) )
%   | | | then return 0.38822398138088043;  // std dev = 11,783, 583,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=355 */
%   | | | else return 0.25680969765536216;  // std dev = 10,222, 430,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=189 */
%   else if ( location(B, G), proteinclass(A, H) )
%   | then return 0.10015043210276893;  // std dev = 0,437, 191,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=49 */
%   | else if ( phenotype(A, I), location(B, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.22046039319233102;  // std dev = 6,958, 204,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=79 */
%   | | | else return 0.08320549123154916;  // std dev = 4,975, 132,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   | | else if ( complex(A, L), function(B, M) )
%   | | | then return 0.1873309765999618;  // std dev = 6,658, 193,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=69 */
%   | | | else return 0.25264398390323867;  // std dev = 7,710, 242,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=105 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( phenotype(B, D), phenotype(A, D) )
%   | then return 0.44319157847303664;  // std dev = 0,417, 300,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=232 */
%   | else if ( location(A, E), location(B, E) )
%   | | then if ( complex(B, F), complex(A, F) )
%   | | | then return 0.5719510547340068;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0.31437091937896433;  // std dev = 11,783, 583,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=355 */
%   | | else if ( location(B, G), phenotype(B, H) )
%   | | | then return 0.29725484117961076;  // std dev = 7,283, 213,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=115 */
%   | | | else return 0.13321114603480583;  // std dev = 7,008, 220,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=75 */
%   else if ( proteinclass(A, I), location(B, J) )
%   | then return 0.08647801533660163;  // std dev = 0,437, 191,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=49 */
%   | else if ( complex(B, K), complex(A, L) )
%   | | then return 0.036982762113853374;  // std dev = 0,425, 55,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.22595638494584247;  // std dev = 8,092, 268,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=114 */
%   | | | else return 0.14986668468270598;  // std dev = 10,066, 448,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=159 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.43327351095112066;  // std dev = 0,264, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   | else if ( location(B, E), phenotype(B, F) )
%   | | then if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.22802852971986637;  // std dev = 8,513, 311,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=188 */
%   | | | else return 0.31189855701273417;  // std dev = 9,958, 465,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=314 */
%   | | else if ( complex(B, I), proteinclass(B, J) )
%   | | | then return 0.38242679848436045;  // std dev = 3,180, 57,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | | | else return 0.1459632377334444;  // std dev = 10,278, 443,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=198 */
%   else if ( function(B, K), proteinclass(A, L) )
%   | then return 0.08069007440470008;  // std dev = 0,446, 253,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=70 */
%   | else if ( phenotype(A, M), location(B, N) )
%   | | then return 0.11347814871634944;  // std dev = 0,468, 336,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=112 */
%   | | else if ( complex(A, P), function(B, Q) )
%   | | | then return 0.1190974517696259;  // std dev = 5,758, 147,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=51 */
%   | | | else return 0.2024161329864078;  // std dev = 7,480, 226,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=102 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.22435746635461487;  // std dev = 0,453, 860,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=585 */
%   | else if ( complex(B, E), location(A, F) )
%   | | then if ( phenotype(A, G), phenotype(B, G) )
%   | | | then return 0.2693128673534631;  // std dev = 1,945, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.016657718829273672;  // std dev = 5,495, 139,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=46 */
%   | | else if ( phenotype(B, H), location(B, I) )
%   | | | then return 0.23313794531028045;  // std dev = 6,666, 194,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=124 */
%   | | | else return 0.11873296765478088;  // std dev = 6,202, 163,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=63 */
%   else if ( location(A, J), proteinclass(B, K) )
%   | then return 0.04241699979649655;  // std dev = 0,444, 125,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   | else if ( phenotype(A, L), complex(A, M) )
%   | | then if ( phenotype(B, N) )
%   | | | then return 0.05850222801074099;  // std dev = 3,130, 49,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.16127611743064374;  // std dev = 8,639, 311,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=126 */
%   | | else return 0.08657919699540101;  // std dev = 0,466, 477,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=160 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.31395692084600707;  // std dev = 0,226, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | else return 0.1994247308384914;  // std dev = 0,438, 289,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=209 */
%   else if ( function(B, E), function(A, E) )
%   | then if ( phenotype(A, F), location(A, G) )
%   | | then if ( proteinclass(B, H), location(B, G) )
%   | | | then return 0.20321323454965065;  // std dev = 5,512, 149,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=104 */
%   | | | else return 0.08204752702611842;  // std dev = 11,901, 594,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=286 */
%   | | else if ( location(B, I), location(A, I) )
%   | | | then return 0.20640468410982923;  // std dev = 6,366, 215,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=156 */
%   | | | else return 0.12503228006720338;  // std dev = 5,306, 120,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=57 */
%   | else if ( proteinclass(B, J), complex(A, K) )
%   | | then return -0.0456759865045297;  // std dev = 0,384, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( proteinclass(A, L), enzyme(A, M) )
%   | | | then return -0.04111527888155705;  // std dev = 2,347, 37,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return 0.09379660666631064;  // std dev = 13,822, 841,000 (wgt'ed) examples reached here.  /* #neg=536 #pos=305 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.22408254260368576;  // std dev = 0,259, 102,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=94 */
%   else if ( phenotype(B, D), phenotype(A, D) )
%   | then if ( proteinclass(B, E), proteinclass(A, F) )
%   | | then if ( enzyme(B, G), complex(A, H) )
%   | | | then return 0.4814636537861764;  // std dev = 0,316, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.20848454253685486;  // std dev = 2,625, 43,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=33 */
%   | | else if ( complex(A, I), enzyme(B, J) )
%   | | | then return -0.038709275404952274;  // std dev = 2,176, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.15154796615565336;  // std dev = 6,511, 220,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=160 */
%   | else if ( function(B, K), proteinclass(A, L) )
%   | | then if ( function(A, K), proteinclass(B, M) )
%   | | | then return 0.14100209398142174;  // std dev = 5,178, 121,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=77 */
%   | | | else return 0.03271475791793629;  // std dev = 9,813, 456,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=168 */
%   | | else if ( complex(B, N), complex(A, P) )
%   | | | then return 0.03487357288897624;  // std dev = 6,216, 180,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=78 */
%   | | | else return 0.09479509545607012;  // std dev = 16,713, 1.192,000 (wgt'ed) examples reached here.  /* #neg=648 #pos=544 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.12618912698626258;  // std dev = 0,419, 326,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=244 */
%   else if ( function(B, D), function(A, D) )
%   | then if ( phenotype(A, E), location(A, F) )
%   | | then if ( proteinclass(B, G), location(B, F) )
%   | | | then return 0.12581306587524482;  // std dev = 5,522, 149,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=104 */
%   | | | else return 0.04542275359177519;  // std dev = 11,882, 594,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=286 */
%   | | else if ( phenotype(B, H), proteinclass(A, I) )
%   | | | then return 0.17779183144312705;  // std dev = 3,475, 67,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=50 */
%   | | | else return 0.0950634434348161;  // std dev = 7,495, 268,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=163 */
%   | else if ( enzyme(A, J), complex(B, K) )
%   | | then if ( phenotype(A, L), location(B, M) )
%   | | | then return 0.28232710837504904;  // std dev = 2,018, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return -0.06596316470557553;  // std dev = 0,846, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( proteinclass(A, N), phenotype(B, P) )
%   | | | then return -0.0735872886395993;  // std dev = 2,253, 42,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | | else return 0.04982290630062627;  // std dev = 13,937, 873,000 (wgt'ed) examples reached here.  /* #neg=566 #pos=307 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(B, C), location(B, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then if ( enzyme(A, G) )
%   | | then return 0.15307553653465802;  // std dev = 0,468, 71,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | else return 0.02281327101469199;  // std dev = 0,449, 364,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=205 */
%   | else if ( enzyme(B, H), phenotype(A, I) )
%   | | then return 0.18982567728332653;  // std dev = 0,434, 79,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=60 */
%   | | else if ( location(A, J), complex(B, K) )
%   | | | then return 0.03980001162104334;  // std dev = 6,816, 229,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=129 */
%   | | | else return 0.10570546884738272;  // std dev = 7,758, 279,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=175 */
%   else if ( complex(A, L), complex(B, L) )
%   | then return 0.21248484850223304;  // std dev = 0,154, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( enzyme(B, M) )
%   | | then return -0.0406052940133618;  // std dev = 0,450, 138,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
%   | | else if ( complex(A, N), phenotype(A, P) )
%   | | | then return 0.06326785413115149;  // std dev = 10,854, 498,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=215 */
%   | | | else return 0.03639011876114292;  // std dev = 11,879, 640,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=252 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.08356957568625771;  // std dev = 0,419, 326,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=244 */
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( complex(B, F), phenotype(B, G) )
%   | | then if ( enzyme(B, H), complex(A, I) )
%   | | | then return -0.23049223585097078;  // std dev = 0,964, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.010404349579875682;  // std dev = 6,272, 167,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=77 */
%   | | else if ( complex(B, J), location(B, E) )
%   | | | then return 0.11756326733852603;  // std dev = 4,974, 132,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=84 */
%   | | | else return 0.028073169283139646;  // std dev = 15,413, 1.051,000 (wgt'ed) examples reached here.  /* #neg=615 #pos=436 */
%   | else if ( location(B, K), location(A, K) )
%   | | then if ( proteinclass(A, L), phenotype(B, M) )
%   | | | then return 0.14563084582592098;  // std dev = 3,461, 69,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=50 */
%   | | | else return 0.057185817557378206;  // std dev = 7,356, 264,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=149 */
%   | | else if ( proteinclass(A, N), location(B, P) )
%   | | | then return -0.20329301504381123;  // std dev = 1,532, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.0452700491809731;  // std dev = 8,283, 296,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=125 */


Results
   AUC ROC   = 0.66774
   AUC PR    = 0.696874
   CLL	      = -0.648762
   Precision = 0.693009 at threshold = 0.5
   Recall    = 0.483051
   F1        = 0.569288


Total learning time: 76.321 seconds
Total inference time: 3.837 seconds
AUC ROC: 0.66774


Dataset: 23_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 06:31:57
{'Recall': 0.483051, 'F1': 0.569288, 'AUC PR': 0.696874, 'Learning time': 76.321, 'AUC ROC': 0.66774, 'Inference time': 3.837, 'Precision': [0.693009, 0.5], 'CLL': -0.648762}


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(B, D), location(A, D) )
%   | then if ( complex(B, E), complex(A, E) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0.7704296368538984;  // std dev = 2,136, 57,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return 0.834339411289988;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | else if ( phenotype(A, G), phenotype(B, G) )
%   | | | then return 0.6278118564478241;  // std dev = 5,617, 178,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=137 */
%   | | | else return 0.4670683176037967;  // std dev = 11,783, 583,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=355 */
%   | else if ( phenotype(B, H), location(B, I) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.5654660082702446;  // std dev = 4,120, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   | | | else return 0.39805503838589407;  // std dev = 7,274, 213,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=115 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.08765713182082385;  // std dev = 3,284, 61,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | | else return 0.24703782398840246;  // std dev = 6,205, 162,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=63 */
%   else if ( proteinclass(A, K), location(B, L) )
%   | then if ( phenotype(A, M), phenotype(B, M) )
%   | | then if ( enzyme(B, N) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( complex(A, P), proteinclass(B, Q) )
%   | | | then return -0.0918510649004878;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.12522968044112634;  // std dev = 5,614, 161,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=43 */
%   | else if ( phenotype(A, R), location(B, S) )
%   | | then if ( complex(A, T) )
%   | | | then return 0.24540383706029692;  // std dev = 6,958, 204,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=79 */
%   | | | else return 0.10814893509951104;  // std dev = 4,975, 132,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   | | else if ( function(B, U), complex(A, W) )
%   | | | then return 0.21566188846738932;  // std dev = 6,658, 193,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=69 */
%   | | | else return 0.29203323262017017;  // std dev = 7,710, 242,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=105 */


Results
   AUC ROC   = 0.663266
   AUC PR    = 0.692922
   CLL	      = -0.915916
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 16.381 seconds
Total inference time: 2.724 seconds
AUC ROC: 0.663266


Dataset: 23_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 06:32:17
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.692922, 'Learning time': 16.381, 'AUC ROC': 0.663266, 'Inference time': 2.724, 'Precision': [nan, 0.5], 'CLL': -0.915916}


Starting fold 3

Target predicate: interaction
Mapping Results
   Knowledge compiling time   = 0.09048652648925781
   Generating paths time   = 2.936683177947998
   Generating mappings time   = 0.023651123046875
   Possible mappings   = [128]
   Max mapping   = 729
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 3.0508320331573486


Best mapping found: ['tweets(A,B) -> complex(A,B)', 'follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: interaction 

Target train facts examples: 2827
Target train pos examples: 686
Target train neg examples: 686

Target test facts examples: 8083
Target test pos examples: 3788
Target test neg examples: 3788

******************************************
Performing Parameter Learning
******************************************
Refine
0;;interaction(A, B) :- function(A, C), function(B, C).;true;true
0;false;complex(B, G), complex(A, G).;false;true
0;true;complex(A, D), complex(B, D).;false;true
0;false,false,true;complex(B, I).;false;false
0;true,false,false;complex(B, F).;false;false
0;true,false;complex(A, E).;false;true
0;false,false;complex(A, H).;true;true
0;false,false,false;complex(B, J).;false;false
1;;interaction(A, B) :- function(A, C), function(B, C).;true;true
1;false;complex(A, G), complex(B, G).;false;true
1;true;complex(A, D), complex(B, D).;false;true
1;false,false,true;complex(B, I).;false;false
1;true,false,false;complex(B, F).;false;false
1;true,false;complex(A, E).;false;true
1;false,false;complex(A, H).;true;true
1;false,false,false;complex(B, J).;false;false
2;;interaction(A, B) :- function(A, C), function(B, C).;true;true
2;false;complex(B, G), complex(A, G).;false;true
2;true;complex(A, D), complex(B, D).;false;true
2;false,false,true;complex(B, I).;false;false
2;true,false,false;complex(B, F).;false;false
2;true,false;complex(A, E).;false;true
2;false,false;complex(A, H).;true;true
2;false,false,false;complex(B, J).;false;false
3;;interaction(A, B) :- function(A, C), function(B, C).;true;true
3;false;complex(B, H), complex(A, H).;false;true
3;true;complex(A, D), complex(B, D).;false;true
3;false,false,true;complex(B, J).;false;false
3;true,false,false;complex(B, G).;false;false
3;true,false;complex(A, E), complex(B, F).;false;true
3;false,false;complex(A, I).;true;true
3;false,false,false;complex(B, K).;false;false
4;;interaction(A, B) :- function(A, C), function(B, C).;true;true
4;false;complex(A, H), complex(B, H).;false;true
4;true;complex(B, D), complex(A, D).;false;true
4;false,false,true;complex(B, J).;false;false
4;true,false,false;complex(B, G).;false;false
4;true,false;complex(A, E), complex(B, F).;false;true
4;false,false;complex(A, I).;true;true
4;false,false,false;complex(B, K).;false;false
5;;interaction(A, B) :- function(A, C), function(B, C).;true;true
5;false;complex(B, H), complex(A, H).;false;true
5;true;complex(A, D), complex(B, D).;false;true
5;false,false,true;complex(B, J).;false;false
5;true,false,false;complex(B, G).;false;false
5;true,false;complex(A, E), complex(B, F).;false;true
5;false,false;complex(A, I).;true;true
5;false,false,false;complex(B, K).;false;false
6;;interaction(A, B) :- function(A, C), function(B, C).;true;true
6;false;complex(A, H), complex(B, H).;false;true
6;true;complex(B, D), complex(A, D).;false;true
6;false,false,true;complex(B, J).;false;false
6;true,false,false;complex(B, G).;false;false
6;true,false;complex(A, E), complex(B, F).;false;true
6;false,false;complex(A, I).;true;true
6;false,false,false;complex(B, K).;false;false
7;;interaction(A, B) :- function(A, C), function(B, C).;true;true
7;false;complex(A, H), complex(B, H).;false;true
7;true;complex(B, D), complex(A, D).;false;true
7;false,false,true;complex(B, J).;false;false
7;true,false,false;complex(B, G).;false;false
7;true,false;complex(A, E), complex(B, F).;false;true
7;false,false;complex(A, I).;true;true
7;false,false,false;complex(B, K).;false;false
8;;interaction(A, B) :- function(A, C), function(B, C).;true;true
8;false;complex(B, H), complex(A, H).;false;true
8;true;complex(A, D), complex(B, D).;false;true
8;false,false,true;complex(B, J).;false;false
8;true,false,false;complex(B, G).;false;false
8;true,false;complex(A, E), complex(B, F).;false;true
8;false,false;complex(A, I).;true;true
8;false,false,false;complex(B, K).;false;false
9;;interaction(A, B) :- function(A, C), function(B, C).;true;true
9;false;complex(B, H), complex(A, H).;false;true
9;true;complex(A, D), complex(B, D).;false;true
9;false,false,true;complex(B, J).;false;false
9;true,false,false;complex(B, G).;false;false
9;true,false;complex(A, E), complex(B, F).;false;true
9;false,false;complex(A, I).;true;true
9;false,false,false;complex(B, K).;false;false


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.834526887855416;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then return 0.33935194261830565;  // std dev = 8,149, 266,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=128 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.45814893509951315;  // std dev = 4,899, 100,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.571111898062472;  // std dev = 6,649, 216,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=154 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.14116780302404067;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.1472484611658643;  // std dev = 6,585, 211,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=61 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.17393840878372227;  // std dev = 5,361, 133,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.23928101057120693;  // std dev = 7,906, 265,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=101 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.7005942268486597;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then return 0.2928347809811207;  // std dev = 8,149, 266,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=128 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.39279418357705;  // std dev = 4,899, 100,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.4865868698179254;  // std dev = 6,649, 216,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=154 */
%   else if ( complex(A, G), complex(B, G) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.12310004502626207;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.12836210814420854;  // std dev = 6,585, 211,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=61 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.15141887538285753;  // std dev = 5,361, 133,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.2075885745472628;  // std dev = 7,906, 265,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=101 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.5422132021576933;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then return 0.24395253525967903;  // std dev = 8,149, 266,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=128 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.32092546969114016;  // std dev = 4,899, 100,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.3904618302032658;  // std dev = 6,649, 216,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=154 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.10586231690733508;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.11028346345514485;  // std dev = 6,585, 211,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=61 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.1295515042266739;  // std dev = 5,361, 133,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.17577301698514383;  // std dev = 7,906, 265,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=101 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.40748537734386725;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.2838281047897136;  // std dev = 5,538, 125,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.2520656448143289;  // std dev = 4,899, 100,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.22895655821781008;  // std dev = 8,996, 357,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.08989990167309866;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.09351228087534562;  // std dev = 6,585, 211,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.1091154162920227;  // std dev = 5,361, 133,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.14560439971347272;  // std dev = 7,906, 265,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=101 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.31156439986671935;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.22276083806083802;  // std dev = 5,538, 125,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.19292386438161457;  // std dev = 4,899, 100,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.17558087608686745;  // std dev = 8,983, 357,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.07550386487498519;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.07837998956989346;  // std dev = 6,585, 211,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.09065224019578946;  // std dev = 5,361, 133,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.11838768539272021;  // std dev = 7,906, 265,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=101 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.24603089807386008;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.17083023120014237;  // std dev = 5,538, 125,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.14565792934085867;  // std dev = 4,899, 100,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.13322265220532598;  // std dev = 8,977, 357,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.06281282639169541;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.06504863123422772;  // std dev = 6,585, 211,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.07444518256514711;  // std dev = 5,361, 133,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.09482039138619902;  // std dev = 7,906, 265,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=101 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.20039385391321113;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.12930045636432164;  // std dev = 5,538, 125,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.10936989620321778;  // std dev = 4,899, 100,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.10065142657495728;  // std dev = 8,974, 357,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.05183762343078412;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.05353721826432346;  // std dev = 6,585, 211,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.06055339579176176;  // std dev = 5,361, 133,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.07505945551408805;  // std dev = 7,906, 265,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=101 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.16748871223040665;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.09725183575764845;  // std dev = 5,538, 125,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.08203625432353177;  // std dev = 4,899, 100,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.07597888719366633;  // std dev = 8,974, 357,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.04249610525959395;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.043760550712895946;  // std dev = 6,585, 211,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.04887321658236303;  // std dev = 5,361, 133,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.05888963645786922;  // std dev = 7,906, 265,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=101 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.14292525837492503;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.07297215483470376;  // std dev = 5,538, 125,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.06159524961500491;  // std dev = 4,899, 100,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.057397366523734616;  // std dev = 8,974, 357,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.03464791614951096;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.03556839569196492;  // std dev = 6,585, 211,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.03920185120994783;  // std dev = 5,361, 133,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.04589574127945385;  // std dev = 7,906, 265,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=101 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.12401912032216288;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.054732395333086034;  // std dev = 5,538, 125,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=71 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.04632822707005463;  // std dev = 4,899, 100,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.043418913956470497;  // std dev = 8,975, 357,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.02812351559171237;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.02877815587584228;  // std dev = 6,585, 211,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=61 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.03128979195783283;  // std dev = 5,361, 133,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.03559163014621651;  // std dev = 7,906, 265,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=101 */


Results
   AUC ROC   = 0.651287
   AUC PR    = 0.660525
   CLL	      = -0.657635
   Precision = 0.645863 at threshold = 0.5
   Recall    = 0.478089
   F1        = 0.549454


Total learning time: 25.872 seconds
Total inference time: 4.571 seconds
AUC ROC: 0.651287


Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(B, G), complex(A, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [7.906, 164, 101], 'true,true': [1.711, 3, 124], 'false,false,false,true': [5.361, 91, 42], 'true,false,false,false': [6.649, 62, 154], 'true,false,true': [8.149, 138, 128], 'false,false,true,false': [6.585, 150, 61], 'true,false,false,true': [4.899, 40, 60], 'false,true': [0.0, 0, 1], 'false,false,true,true': [3.279, 38, 15]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(A, G), complex(B, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [7.906, 164, 101], 'true,true': [1.711, 3, 124], 'false,false,false,true': [5.361, 91, 42], 'true,false,false,false': [6.649, 62, 154], 'true,false,true': [8.149, 138, 128], 'false,false,true,false': [6.585, 150, 61], 'true,false,false,true': [4.899, 40, 60], 'false,true': [0.0, 0, 1], 'false,false,true,true': [3.279, 38, 15]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(B, G), complex(A, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [7.906, 164, 101], 'true,true': [1.711, 3, 124], 'false,false,false,true': [5.361, 91, 42], 'true,false,false,false': [6.649, 62, 154], 'true,false,true': [8.149, 138, 128], 'false,false,true,false': [6.585, 150, 61], 'true,false,false,true': [4.899, 40, 60], 'false,true': [0.0, 0, 1], 'false,false,true,true': [3.279, 38, 15]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [7.906, 164, 101], 'true,true': [1.711, 3, 124], 'false,false,false,true': [5.361, 91, 42], 'true,false,false,false': [8.996, 146, 211], 'true,false,true': [5.538, 54, 71], 'false,false,true,false': [6.585, 150, 61], 'true,false,false,true': [4.899, 40, 60], 'false,true': [0.0, 0, 1], 'false,false,true,true': [3.279, 38, 15]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [7.906, 164, 101], 'true,true': [1.711, 3, 124], 'false,false,false,true': [5.361, 91, 42], 'true,false,false,false': [8.983, 146, 211], 'true,false,true': [5.538, 54, 71], 'false,false,true,false': [6.585, 150, 61], 'true,false,false,true': [4.899, 40, 60], 'false,true': [0.0, 0, 1], 'false,false,true,true': [3.279, 38, 15]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [7.906, 164, 101], 'true,true': [1.711, 3, 124], 'false,false,false,true': [5.361, 91, 42], 'true,false,false,false': [8.977, 146, 211], 'true,false,true': [5.538, 54, 71], 'false,false,true,false': [6.585, 150, 61], 'true,false,false,true': [4.899, 40, 60], 'false,true': [0.0, 0, 1], 'false,false,true,true': [3.279, 38, 15]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [7.906, 164, 101], 'true,true': [1.711, 3, 124], 'false,false,false,true': [5.361, 91, 42], 'true,false,false,false': [8.974, 146, 211], 'true,false,true': [5.538, 54, 71], 'false,false,true,false': [6.585, 150, 61], 'true,false,false,true': [4.899, 40, 60], 'false,true': [0.0, 0, 1], 'false,false,true,true': [3.279, 38, 15]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [7.906, 164, 101], 'true,true': [1.711, 3, 124], 'false,false,false,true': [5.361, 91, 42], 'true,false,false,false': [8.974, 146, 211], 'true,false,true': [5.538, 54, 71], 'false,false,true,false': [6.585, 150, 61], 'true,false,false,true': [4.899, 40, 60], 'false,true': [0.0, 0, 1], 'false,false,true,true': [3.279, 38, 15]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [7.906, 164, 101], 'true,true': [1.711, 3, 124], 'false,false,false,true': [5.361, 91, 42], 'true,false,false,false': [8.974, 146, 211], 'true,false,true': [5.538, 54, 71], 'false,false,true,false': [6.585, 150, 61], 'true,false,false,true': [4.899, 40, 60], 'false,true': [0.0, 0, 1], 'false,false,true,true': [3.279, 38, 15]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [7.906, 164, 101], 'true,true': [1.711, 3, 124], 'false,false,false,true': [5.361, 91, 42], 'true,false,false,false': [8.975, 146, 211], 'true,false,true': [5.538, 54, 71], 'false,false,true,false': [6.585, 150, 61], 'true,false,false,true': [4.899, 40, 60], 'false,true': [0.0, 0, 1], 'false,false,true,true': [3.279, 38, 15]}]]
[{'': [0.22526811238140773, 0.22171718205788188], 'false': [0.0, 0.22137667600697555], 'true': [0.0230640461280963, 0.2423211818471717], 'false,false,true': [0.2029191883232462, 0.20552099009456254], 'true,false,false': [0.23999999999999957, 0.2046467764060409], 'true,false': [0.2496466730736652, 0.21859477647813297], 'false,false': [0.20500459136822805, 0.23020252013838344], 'false,false,false': [0.21606648199446102, 0.23587041651833632]}, {'': [0.21525414134911458, 0.22104229794402805], 'true,false': [0.2496466730736577, 0.21773741226369273], 'true': [0.023064046128093558, 0.23900151132854347], 'false,false,true': [0.20291918832324596, 0.20552099009456157], 'true,false,false': [0.23999999999999855, 0.20464677640603332], 'false': [0.0, 0.22091129479231242], 'false,false': [0.20500310153782964, 0.22995451630218883], 'false,false,false': [0.21606648199445927, 0.23587041651833673]}, {'': [0.20543689259688105, 0.22041650063177004], 'true,false': [0.24964667307366636, 0.21688043750729954], 'true': [0.023064046128094286, 0.23570278743336986], 'false,false,true': [0.2029191883232461, 0.2055209900945633], 'true,false,false': [0.24000000000000077, 0.20464677640603496], 'false': [0.0, 0.2204892511940391], 'false,false': [0.20500179499781046, 0.22972787556792648], 'false,false,false': [0.21606648199445921, 0.2358704165183368]}, {'': [0.19967847079644627, 0.21995865202540263], 'true,false': [0.24537599999999837, 0.22968313909797872], 'true': [0.023064046128090928, 0.2334721013219892], 'false,false,true': [0.2029191883232463, 0.20552099009456093], 'true,false,false': [0.24000000000000077, 0.22667640654027363], 'false': [0.0, 0.2201548947544373], 'false,false': [0.20500075248771357, 0.2295487664403721], 'false,false,false': [0.2160664819944593, 0.23587041651833116]}, {'': [0.19757127974839533, 0.21966277335500456], 'true,false': [0.24537600000000026, 0.22914280112357455], 'true': [0.02306404612809227, 0.2329467512607589], 'false,false,true': [0.20291918832324704, 0.2055209900945614], 'true,false,false': [0.24000000000000035, 0.22603575291839123], 'false': [0.0, 0.21991885498997563], 'false,false': [0.2049999859685673, 0.22942367855451135], 'false,false,false': [0.21606648199445894, 0.23587041651833593]}, {'': [0.19663559864120658, 0.21948299242258573], 'true,false': [0.24537599999999996, 0.22887689556973295], 'true': [0.02306404612809214, 0.23262577340850302], 'false,false,true': [0.20291918832324732, 0.20552099009456348], 'true,false,false': [0.23999999999999932, 0.22572734281822618], 'false': [0.0, 0.21976755247770322], 'false,false': [0.20499946075940303, 0.2293448897712782], 'false,false,false': [0.2160664819944595, 0.23587041651833338]}, {'': [0.19619502270929445, 0.2193789465286388], 'true,false': [0.24537599999999962, 0.22876764994735527], 'true': [0.023064046128092434, 0.2324553345904217], 'false,false,true': [0.2029191883232463, 0.20552099009456068], 'true,false,false': [0.2399999999999993, 0.22560470064611637], 'false': [0.0, 0.21967803763653795], 'false,false': [0.20499912216931848, 0.22929933868021365], 'false,false,false': [0.21606648199445894, 0.23587041651833318]}, {'': [0.1959707730999455, 0.2193213179670089], 'true,false': [0.24537600000000015, 0.22873925235464515], 'true': [0.023064046128092208, 0.2323795422444734], 'false,false,true': [0.20291918832324726, 0.20552099009456234], 'true,false,false': [0.23999999999999969, 0.22557695248789944], 'false': [0.0, 0.21962853868269624], 'false,false': [0.20499891521573993, 0.22927484199866432], 'false,false,false': [0.21606648199445944, 0.23587041651833432]}, {'': [0.19584226805952007, 0.21929054695601016], 'true,false': [0.24537600000000062, 0.2287486715222283], 'true': [0.023064046128092406, 0.23235605942680437], 'false,false,true': [0.20291918832324662, 0.20552099009456135], 'true,false,false': [0.24000000000000035, 0.22559318282921986], 'false': [0.0, 0.2196027511607572], 'false,false': [0.20499879462820683, 0.22926248864822033], 'false,false,false': [0.21606648199445963, 0.23587041651833582]}, {'': [0.19575543360899098, 0.2192745365664689], 'true,false': [0.24537599999999946, 0.22877322602606473], 'true': [0.023064046128092285, 0.23235833898765867], 'false,false,true': [0.20291918832324654, 0.20552099009456207], 'true,false,false': [0.23999999999999966, 0.22562661931024894], 'false': [0.0, 0.21959005952423746], 'false,false': [0.2049987274415266, 0.22925663635653126], 'false,false,false': [0.21606648199445994, 0.23587041651833224]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '0;false;complex(B, G), complex(A, G).;true;true', '1;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '1;false;complex(A, G), complex(B, G).;true;true', '2;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '2;false;complex(B, G), complex(A, G).;true;true', '3;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '3;false;complex(B, H), complex(A, H).;true;true', '4;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '4;false;complex(A, H), complex(B, H).;true;true', '5;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '5;false;complex(B, H), complex(A, H).;true;true', '6;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '6;false;complex(A, H), complex(B, H).;true;true', '7;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '7;false;complex(A, H), complex(B, H).;true;true', '8;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '8;false;complex(B, H), complex(A, H).;true;true', '9;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '9;false;complex(B, H), complex(A, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.834526887855416;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then if ( phenotype(A, F), phenotype(B, F) )
%   | | | then return 0.7291166770349955;  // std dev = 1,867, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return 0.28793616914206654;  // std dev = 7,589, 235,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=101 */
%   | | else if ( location(A, G), location(B, G) )
%   | | | then return 0.6292932137064744;  // std dev = 5,956, 201,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=155 */
%   | | | else return 0.3711924133603812;  // std dev = 5,360, 115,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=59 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then return 0.09172557743527761;  // std dev = 0,423, 137,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=32 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.2771965541471295;  // std dev = 7,150, 210,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=88 */
%   | | | else return 0.1724346493852269;  // std dev = 8,239, 315,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=99 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.7005942268486597;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( location(B, E), location(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.34099060197502473;  // std dev = 6,521, 175,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=93 */
%   | | | else return 0.5344170255170695;  // std dev = 5,956, 201,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=155 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -1.678992446838036E-4;  // std dev = 1,528, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.28810806595168725;  // std dev = 6,850, 190,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=91 */
%   else if ( complex(A, I), complex(B, I) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then return 0.08018897727709591;  // std dev = 0,423, 137,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=32 */
%   | | else if ( phenotype(B, L), location(A, M) )
%   | | | then return 0.10652556770504211;  // std dev = 5,019, 126,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=35 */
%   | | | else return 0.21119239261893175;  // std dev = 9,685, 399,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=152 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.5422132021576933;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( location(B, E), location(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.2831285744068857;  // std dev = 6,508, 175,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=93 */
%   | | | else return 0.4250585536925632;  // std dev = 5,956, 201,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=155 */
%   | | else if ( location(B, G) )
%   | | | then return 0.1868107465224869;  // std dev = 6,186, 161,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=68 */
%   | | | else return 0.3436783088219678;  // std dev = 3,302, 45,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then return 0.06948383747966981;  // std dev = 0,423, 137,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=32 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.2116792728054215;  // std dev = 7,139, 210,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=88 */
%   | | | else return 0.12239100909317954;  // std dev = 8,229, 315,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=99 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( phenotype(B, D), phenotype(A, D) )
%   | then return 0.44990353378016995;  // std dev = 0,249, 82,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=76 */
%   | else if ( complex(A, E), complex(B, E) )
%   | | then return 0.3962237036577282;  // std dev = 0,183, 86,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=83 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.14948247289377975;  // std dev = 7,550, 235,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=101 */
%   | | | else return 0.28532571420563285;  // std dev = 7,923, 306,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=206 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(B, H), location(A, I) )
%   | | then if ( enzyme(A, J), complex(B, K) )
%   | | | then return 0.19738650035503774;  // std dev = 2,019, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.031416336050311786;  // std dev = 4,831, 130,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=31 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return -0.04655754576859632;  // std dev = 1,962, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return 0.14879291057335126;  // std dev = 10,519, 480,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=176 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.24280665970299156;  // std dev = 0,402, 502,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=371 */
%   | else if ( location(B, E), phenotype(A, F) )
%   | | then return 0.04010941514528964;  // std dev = 0,452, 68,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | | else if ( phenotype(B, G), proteinclass(A, H) )
%   | | | then return 0.3961586566591063;  // std dev = 1,428, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.15513920746877977;  // std dev = 5,617, 129,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=63 */
%   else if ( complex(A, I), complex(B, I) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(B, J), complex(A, K) )
%   | | then if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return -0.13457272591821026;  // std dev = 0,948, 28,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | | else return 0.08145463905549027;  // std dev = 6,436, 197,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=60 */
%   | | else if ( proteinclass(A, N) )
%   | | | then return 0.23253994487560972;  // std dev = 3,691, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.10081919959010227;  // std dev = 9,222, 382,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=132 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( phenotype(A, D), phenotype(B, D) )
%   | then return 0.29229290983737627;  // std dev = 0,249, 82,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=76 */
%   | else if ( complex(A, E), complex(B, E) )
%   | | then return 0.2513165175181734;  // std dev = 0,184, 86,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=83 */
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return -0.08465328838449357;  // std dev = 2,755, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.14468552248047825;  // std dev = 10,488, 499,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=295 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(B, I), location(A, I) )
%   | | then if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.07097020015705438;  // std dev = 1,767, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.1335105332838437;  // std dev = 7,776, 255,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=103 */
%   | | else if ( location(A, L) )
%   | | | then return 0.03677979216128606;  // std dev = 8,161, 336,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=94 */
%   | | | else return 0.17689375775023045;  // std dev = 3,173, 41,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.20856414386785654;  // std dev = 0,151, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then if ( phenotype(A, F), phenotype(B, F) )
%   | | | then return 0.26380785219617453;  // std dev = 1,888, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return 0.045138603673306084;  // std dev = 7,470, 235,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=101 */
%   | | else return 0.13703743182316055;  // std dev = 0,447, 316,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=214 */
%   else if ( complex(A, G), complex(B, G) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, H), proteinclass(B, I) )
%   | | then if ( location(B, H), phenotype(A, J) )
%   | | | then return 0.13794867605427757;  // std dev = 1,858, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.059570516192163504;  // std dev = 3,153, 60,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | else if ( location(A, K), phenotype(B, L) )
%   | | | then return 0.020315475770760687;  // std dev = 4,854, 123,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
%   | | | else return 0.08664614263160612;  // std dev = 10,165, 463,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=167 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.12098580842919844;  // std dev = 0,398, 502,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=371 */
%   | else if ( complex(A, E), enzyme(B, F) )
%   | | then return 0.25208450048051795;  // std dev = 0,462, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( location(B, G), location(A, H) )
%   | | | then return -0.011400453419056687;  // std dev = 5,300, 130,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=51 */
%   | | | else return 0.11328907851080829;  // std dev = 3,959, 66,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=37 */
%   else if ( complex(A, I), complex(B, I) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(B, J), complex(B, K) )
%   | | then if ( enzyme(B, L) )
%   | | | then return 0.18840672800589087;  // std dev = 2,029, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.0485979635888238;  // std dev = 3,766, 84,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
%   | | else if ( location(B, M), location(A, M) )
%   | | | then return 0.09630825842571031;  // std dev = 7,347, 235,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=94 */
%   | | | else return 0.034135616490729555;  // std dev = 8,192, 325,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=99 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.1552239294186617;  // std dev = 0,151, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(B, E), enzyme(B, F) )
%   | | then if ( proteinclass(B, G), phenotype(B, H) )
%   | | | then return 0.2637804408312124;  // std dev = 1,772, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.40123114341022403;  // std dev = 1,435, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else return 0.0709870355043799;  // std dev = 0,456, 540,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=323 */
%   else if ( complex(B, I), complex(A, I) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(B, J), enzyme(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.27207352660475104;  // std dev = 1,538, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.07857067771235293;  // std dev = 2,215, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( proteinclass(B, M), location(A, N) )
%   | | | then return -0.04534091036687744;  // std dev = 3,535, 74,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | | else return 0.044740082124888905;  // std dev = 10,928, 556,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=188 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.13356082518395065;  // std dev = 0,151, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( enzyme(B, E), complex(B, F) )
%   | | then return -0.06505551875735509;  // std dev = 0,434, 42,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.1039016220147393;  // std dev = 2,862, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.06890126629831553;  // std dev = 10,141, 495,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=308 */
%   else if ( complex(B, I), complex(A, I) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(B, J), complex(A, K) )
%   | | then if ( enzyme(B, L), proteinclass(A, M) )
%   | | | then return 0.3757624364819772;  // std dev = 1,375, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.013239710323404538;  // std dev = 6,263, 216,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=55 */
%   | | else if ( enzyme(A, N), proteinclass(A, P) )
%   | | | then return 0.26840489630069164;  // std dev = 2,343, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return 0.03276675973287292;  // std dev = 9,505, 412,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=143 */


Results
   AUC ROC   = 0.662509
   AUC PR    = 0.689603
   CLL	      = -0.654534
   Precision = 0.726149 at threshold = 0.5
   Recall    = 0.387804
   F1        = 0.505593


Total learning time: 33.96 seconds
Total inference time: 4.855 seconds
AUC ROC: 0.662509


Refined model AUC ROC: 0.662509


Dataset: 23_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 06:33:30
{'Recall': 0.387804, 'F1': 0.505593, 'AUC PR': 0.689603, 'Learning time': 59.832, 'AUC ROC': 0.662509, 'Inference time': 4.855, 'Precision': [0.726149, 0.5], 'Mapping results': {'Generating mappings time': 0.023651123046875, 'Possible mappings': [128], 'Generating paths time': 2.936683177947998, 'Total time': 3.0508320331573486, 'Numbers preds mapping': [3], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 729, 'Knowledge compiling time': 0.09048652648925781}, 'parameter': {'Recall': 0.478089, 'F1': 0.549454, 'AUC PR': 0.660525, 'Learning time': 25.872, 'AUC ROC': 0.651287, 'Inference time': 4.571, 'Precision': [0.645863, 0.5], 'CLL': -0.657635}, 'CLL': -0.654534}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.8347114350995104;  // std dev = 0,151, 128,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=125 */
%   else if ( location(B, D), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(B, F) )
%   | | | then return 0.3966104735610518;  // std dev = 5,392, 117,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=63 */
%   | | | else return 0.2289354519534462;  // std dev = 6,444, 178,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=66 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.38446472457319764;  // std dev = 5,758, 133,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=70 */
%   | | | else return 0.5276768320952171;  // std dev = 7,180, 233,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=156 */
%   | else if ( function(A, H), function(B, H) )
%   | | then if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.04564893509951222;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.3370963035205652;  // std dev = 6,886, 190,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=91 */
%   | | else if ( location(A, K), phenotype(B, L) )
%   | | | then return 0.055517356152143954;  // std dev = 3,470, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | | else return 0.18040807131213746;  // std dev = 8,108, 301,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=97 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.7007419134886805;  // std dev = 0,151, 128,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=125 */
%   else if ( location(A, D), location(B, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.2591317873787611;  // std dev = 2,811, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return -0.05258027166164239;  // std dev = 1,857, 32,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( phenotype(A, H), phenotype(B, H) )
%   | | | then return 0.6955390568451438;  // std dev = 1,621, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0.3483806293018137;  // std dev = 11,791, 569,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=312 */
%   | else if ( function(A, I), function(B, I) )
%   | | then if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.04000075842466888;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.2909237543212848;  // std dev = 6,886, 190,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=91 */
%   | | else if ( location(A, L) )
%   | | | then return 0.11823667041649356;  // std dev = 8,217, 336,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=94 */
%   | | | else return 0.2737632343432933;  // std dev = 3,178, 41,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.5419441053314331;  // std dev = 0,152, 126,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=123 */
%   | else if ( complex(A, E) )
%   | | then if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.0465308168663661;  // std dev = 2,694, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.2281706566080027;  // std dev = 7,826, 252,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=119 */
%   | | else if ( complex(B, H) )
%   | | | then return 0.2676851592531824;  // std dev = 5,743, 133,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=70 */
%   | | | else return 0.38407620026950173;  // std dev = 7,168, 233,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=156 */
%   else if ( function(A, I), function(B, I) )
%   | then if ( phenotype(B, J), phenotype(A, J) )
%   | | then return 0.5893115289963876;  // std dev = 0,390, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( phenotype(A, K), location(B, L) )
%   | | | then return 0.08229957097357822;  // std dev = 3,425, 59,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.2616902380951246;  // std dev = 5,861, 137,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=68 */
%   | else return 0.11700721817702692;  // std dev = 0,455, 378,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=113 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.35620685467537866;  // std dev = 0,406, 502,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=371 */
%   | else if ( location(B, E) )
%   | | then return 0.15383697517718872;  // std dev = 0,484, 162,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=69 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.06586238324627822;  // std dev = 1,884, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.4083008905232469;  // std dev = 2,495, 30,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   else if ( complex(A, G), phenotype(A, H) )
%   | then return 0.009869778467064614;  // std dev = 0,418, 138,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=33 */
%   | else if ( proteinclass(A, I) )
%   | | then if ( enzyme(B, J), complex(A, K) )
%   | | | then return 0.4570580533380486;  // std dev = 1,383, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.17424236917905286;  // std dev = 4,474, 83,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=34 */
%   | | else if ( phenotype(B, L), function(A, M) )
%   | | | then return 0.025573461499555597;  // std dev = 4,804, 120,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=33 */
%   | | | else return 0.10598369473804042;  // std dev = 8,394, 313,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=114 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.2744751540803758;  // std dev = 0,405, 502,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=371 */
%   | else if ( enzyme(B, E), enzyme(A, E) )
%   | | then return 0.6373407188282245;  // std dev = 0,050, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13613859789096136;  // std dev = 0,485, 203,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=91 */
%   else if ( location(A, F) )
%   | then if ( phenotype(B, G) )
%   | | then return 0.009249004697084923;  // std dev = 0,429, 148,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=39 */
%   | | else if ( complex(A, H), location(B, I) )
%   | | | then return 0.02967573267903945;  // std dev = 5,830, 178,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=49 */
%   | | | else return 0.10436455554425224;  // std dev = 8,282, 296,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=114 */
%   | else if ( phenotype(B, J), proteinclass(B, K) )
%   | | then return 0.43090629425628574;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( proteinclass(B, L), enzyme(B, M) )
%   | | | then return -0.2454852837094388;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.21472298060568235;  // std dev = 2,942, 35,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.20987411855796867;  // std dev = 0,405, 502,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=371 */
%   | else if ( complex(A, E) )
%   | | then if ( phenotype(B, F), phenotype(A, F) )
%   | | | then return 0.4632514060357967;  // std dev = 0,959, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.024048556385066318;  // std dev = 4,253, 84,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.029100323633476918;  // std dev = 2,761, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.20577598911948505;  // std dev = 4,355, 82,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=47 */
%   else if ( location(A, H), proteinclass(B, I) )
%   | then return -0.02405121114640612;  // std dev = 0,422, 77,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then return 0.0015576731311672594;  // std dev = 0,418, 123,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=29 */
%   | | else if ( proteinclass(A, L) )
%   | | | then return 0.1828478483677266;  // std dev = 4,382, 77,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=36 */
%   | | | else return 0.06273660695743752;  // std dev = 9,185, 386,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=135 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then return 0.13937234482359778;  // std dev = 0,429, 709,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=466 */
%   else if ( location(A, D) )
%   | then if ( enzyme(A, E), complex(B, F) )
%   | | then if ( proteinclass(B, G) )
%   | | | then return 0.6766835173330256;  // std dev = 0,189, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0921251259702309;  // std dev = 2,530, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( proteinclass(B, H) )
%   | | | then return -0.04753743447580805;  // std dev = 3,487, 74,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | | else return 0.042972777746969115;  // std dev = 10,459, 517,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=171 */
%   | else if ( phenotype(B, I), complex(B, J) )
%   | | then if ( proteinclass(B, K) )
%   | | | then return 0.33097822607124816;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11711326527563692;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(B, L) )
%   | | | then return 0.36712330981976654;  // std dev = 1,083, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.13035973961462746;  // std dev = 2,509, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( phenotype(B, D), phenotype(A, D) )
%   | then return 0.2449393745212786;  // std dev = 0,245, 82,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=76 */
%   | else if ( complex(A, E) )
%   | | then return 0.0361969150069123;  // std dev = 0,434, 321,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=184 */
%   | | else if ( enzyme(B, F) )
%   | | | then return 0.016642500480649868;  // std dev = 3,028, 40,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | | | else return 0.16461211931203668;  // std dev = 7,172, 266,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=185 */
%   else if ( complex(A, G), phenotype(A, H) )
%   | then return -0.006299487668546513;  // std dev = 0,415, 138,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=33 */
%   | else if ( phenotype(B, I), complex(B, J) )
%   | | then if ( enzyme(B, K) )
%   | | | then return 0.216599518649717;  // std dev = 1,860, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.07101539492168782;  // std dev = 3,570, 75,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | else if ( enzyme(B, L), location(A, M) )
%   | | | then return -0.039372660199636526;  // std dev = 3,236, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.07366162575280188;  // std dev = 9,268, 380,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=148 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.18256868346905256;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then if ( phenotype(B, F), phenotype(A, F) )
%   | | | then return 0.23973892352838297;  // std dev = 1,850, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return -0.028431122399231724;  // std dev = 7,394, 235,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=101 */
%   | | else return 0.11095684354480191;  // std dev = 0,444, 316,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=214 */
%   else if ( phenotype(B, G), location(A, H) )
%   | then return -0.012273640676862608;  // std dev = 0,419, 148,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=39 */
%   | else if ( complex(A, I), location(B, J) )
%   | | then if ( proteinclass(A, K) )
%   | | | then return -0.03562074437094499;  // std dev = 2,571, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.022095180717558876;  // std dev = 5,247, 141,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=40 */
%   | | else if ( proteinclass(B, L), phenotype(A, M) )
%   | | | then return 0.3369123845498973;  // std dev = 1,257, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.046409470040464265;  // std dev = 8,643, 327,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=125 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.1561126251829923;  // std dev = 0,153, 128,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=125 */
%   else if ( location(B, D), complex(A, E) )
%   | then if ( enzyme(B, F), location(A, G) )
%   | | then if ( location(A, D), complex(B, H) )
%   | | | then return -0.0863818700120251;  // std dev = 1,969, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.17179310615888094;  // std dev = 3,394, 55,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=28 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return -0.11720550614763595;  // std dev = 2,404, 57,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | | else return 0.0013656992552044296;  // std dev = 8,608, 348,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=139 */
%   | else if ( location(A, K), enzyme(B, L) )
%   | | then if ( proteinclass(B, M), phenotype(B, N) )
%   | | | then return 0.15448754556291983;  // std dev = 1,843, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return -0.10402400764988351;  // std dev = 3,710, 70,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | else if ( complex(B, P), function(A, Q) )
%   | | | then return 0.020538417232358344;  // std dev = 6,253, 194,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=84 */
%   | | | else return 0.08225149346011232;  // std dev = 10,138, 485,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=260 */


Results
   AUC ROC   = 0.658973
   AUC PR    = 0.687189
   CLL	      = -0.656874
   Precision = 0.684065 at threshold = 0.5
   Recall    = 0.456705
   F1        = 0.547728


Total learning time: 43.08 seconds
Total inference time: 4.035 seconds
AUC ROC: 0.658973


Dataset: 23_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 06:34:18
{'Recall': 0.456705, 'F1': 0.547728, 'AUC PR': 0.687189, 'Learning time': 43.08, 'AUC ROC': 0.658973, 'Inference time': 4.035, 'Precision': [0.684065, 0.5], 'CLL': -0.656874}


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then if ( phenotype(B, E) )
%   | | then if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.832507909458486;  // std dev = 0,987, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return 0.8581489350995118;  // std dev = 1,79e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.8010060779566543;  // std dev = 1,373, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else if ( complex(A, I) )
%   | | then if ( phenotype(A, J), phenotype(B, J) )
%   | | | then return 0.7291166770349955;  // std dev = 1,867, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return 0.28793616914206654;  // std dev = 7,589, 235,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=101 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.6292932137064744;  // std dev = 5,956, 201,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=155 */
%   | | | else return 0.3711924133603812;  // std dev = 5,360, 115,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=59 */
%   else if ( complex(A, L), phenotype(A, M) )
%   | then if ( enzyme(A, N) )
%   | | then if ( proteinclass(B, P) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( phenotype(B, Q) )
%   | | | then return -0.030739953789376686;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.1803711573217332;  // std dev = 4,433, 90,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | else if ( location(A, R), location(B, R) )
%   | | then if ( phenotype(B, S), complex(B, T) )
%   | | | then return 0.11396288858788445;  // std dev = 2,861, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.31922677941089067;  // std dev = 6,442, 167,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=77 */
%   | | else if ( proteinclass(A, U) )
%   | | | then return 0.2867203636709397;  // std dev = 3,928, 63,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=27 */
%   | | | else return 0.14386322081379949;  // std dev = 7,171, 252,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=72 */


Results
   AUC ROC   = 0.64675
   AUC PR    = 0.672374
   CLL	      = -0.912506
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.177 seconds
Total inference time: 3.709 seconds
AUC ROC: 0.64675


Dataset: 23_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 06:34:32
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.672374, 'Learning time': 10.177, 'AUC ROC': 0.64675, 'Inference time': 3.709, 'Precision': [nan, 0.5], 'CLL': -0.912506}


Starting fold 4

Target predicate: interaction
Mapping Results
   Knowledge compiling time   = 0.05543088912963867
   Generating paths time   = 4.138031244277954
   Generating mappings time   = 0.039737701416015625
   Possible mappings   = [128]
   Max mapping   = 729
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.6689300537109375e-06
   Total time   = 4.233211994171143


Best mapping found: ['tweets(A,B) -> complex(A,B)', 'follows(A,B) -> interaction(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: interaction 

Target train facts examples: 2604
Target train pos examples: 703
Target train neg examples: 703

Target test facts examples: 8306
Target test pos examples: 3771
Target test neg examples: 3771

******************************************
Performing Parameter Learning
******************************************
Refine
0;;interaction(A, B) :- function(A, C), function(B, C).;true;true
0;false;complex(B, G), complex(A, G).;false;true
0;true;complex(A, D), complex(B, D).;false;true
0;false,false,true;complex(B, I).;false;false
0;true,false,false;complex(B, F).;false;false
0;true,false;complex(A, E).;false;true
0;false,false;complex(A, H).;true;true
0;false,false,false;complex(B, J).;false;false
1;;interaction(A, B) :- function(A, C), function(B, C).;true;true
1;false;complex(A, G), complex(B, G).;false;true
1;true;complex(A, D), complex(B, D).;false;true
1;false,false,true;complex(B, I).;false;false
1;true,false,false;complex(B, F).;false;false
1;true,false;complex(A, E).;false;true
1;false,false;complex(A, H).;true;true
1;false,false,false;complex(B, J).;false;false
2;;interaction(A, B) :- function(A, C), function(B, C).;true;true
2;false;complex(B, G), complex(A, G).;false;true
2;true;complex(A, D), complex(B, D).;false;true
2;false,false,true;complex(B, I).;false;false
2;true,false,false;complex(B, F).;false;false
2;true,false;complex(A, E).;false;true
2;false,false;complex(A, H).;true;true
2;false,false,false;complex(B, J).;false;false
3;;interaction(A, B) :- function(A, C), function(B, C).;true;true
3;false;complex(B, H), complex(A, H).;false;true
3;true;complex(A, D), complex(B, D).;false;true
3;false,false,true;complex(B, J).;false;false
3;true,false,false;complex(B, G).;false;false
3;true,false;complex(A, E), complex(B, F).;false;true
3;false,false;complex(A, I).;true;true
3;false,false,false;complex(B, K).;false;false
4;;interaction(A, B) :- function(A, C), function(B, C).;true;true
4;false;complex(A, H), complex(B, H).;false;true
4;true;complex(B, D), complex(A, D).;false;true
4;false,false,true;complex(B, J).;false;false
4;true,false,false;complex(B, G).;false;false
4;true,false;complex(A, E), complex(B, F).;false;true
4;false,false;complex(A, I).;true;true
4;false,false,false;complex(B, K).;false;false
5;;interaction(A, B) :- function(A, C), function(B, C).;true;true
5;false;complex(B, H), complex(A, H).;false;true
5;true;complex(A, D), complex(B, D).;false;true
5;false,false,true;complex(B, J).;false;false
5;true,false,false;complex(B, G).;false;false
5;true,false;complex(A, E), complex(B, F).;false;true
5;false,false;complex(A, I).;true;true
5;false,false,false;complex(B, K).;false;false
6;;interaction(A, B) :- function(A, C), function(B, C).;true;true
6;false;complex(A, H), complex(B, H).;false;true
6;true;complex(B, D), complex(A, D).;false;true
6;false,false,true;complex(B, J).;false;false
6;true,false,false;complex(B, G).;false;false
6;true,false;complex(A, E), complex(B, F).;false;true
6;false,false;complex(A, I).;true;true
6;false,false,false;complex(B, K).;false;false
7;;interaction(A, B) :- function(A, C), function(B, C).;true;true
7;false;complex(A, H), complex(B, H).;false;true
7;true;complex(B, D), complex(A, D).;false;true
7;false,false,true;complex(B, J).;false;false
7;true,false,false;complex(B, G).;false;false
7;true,false;complex(A, E), complex(B, F).;false;true
7;false,false;complex(A, I).;true;true
7;false,false,false;complex(B, K).;false;false
8;;interaction(A, B) :- function(A, C), function(B, C).;true;true
8;false;complex(B, H), complex(A, H).;false;true
8;true;complex(A, D), complex(B, D).;false;true
8;false,false,true;complex(B, J).;false;false
8;true,false,false;complex(B, G).;false;false
8;true,false;complex(A, E), complex(B, F).;false;true
8;false,false;complex(A, I).;true;true
8;false,false,false;complex(B, K).;false;false
9;;interaction(A, B) :- function(A, C), function(B, C).;true;true
9;false;complex(B, H), complex(A, H).;false;true
9;true;complex(A, D), complex(B, D).;false;true
9;false,false,true;complex(B, J).;false;false
9;true,false,false;complex(B, G).;false;false
9;true,false;complex(A, E), complex(B, F).;false;true
9;false,false;complex(A, I).;true;true
9;false,false,false;complex(B, K).;false;false


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.834526887855416;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then return 0.2589271452162403;  // std dev = 7,856, 257,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=103 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.29512372501547973;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.4651358346628277;  // std dev = 7,391, 229,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=139 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.09344305274657119;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.2137044906550692;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.18507201202258786;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.3609579238635532;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.7005942268486597;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then return 0.22439884273110716;  // std dev = 7,856, 257,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=103 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.25527541927737746;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.3986309861052425;  // std dev = 7,391, 229,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=139 */
%   else if ( complex(A, G), complex(B, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.08168328864042064;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.18564982421862344;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.1610175259758761;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.31111525637278725;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.5422132021576933;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then return 0.18940602668876336;  // std dev = 7,856, 257,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=103 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.21420554965544972;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.32532504915853294;  // std dev = 7,391, 229,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=139 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.0707602882901818;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.15784188460092102;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.13752260537158653;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.25826508688945;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.40748537734386725;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.09229088487599736;  // std dev = 4,534, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.1749353405173308;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.22856864495756118;  // std dev = 9,777, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.06080115416453141;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.13160723478603278;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.11550318916810978;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.20748429553496786;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.31156439986671935;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.07483619388556695;  // std dev = 4,534, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.13973153528405807;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.17865147277768428;  // std dev = 9,772, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.05186901535993096;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.10790767653003595;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.09560520045818097;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.16255833855477422;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.24603089807386008;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.06010653782583973;  // std dev = 4,534, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.10974219211836966;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.13731696721184375;  // std dev = 9,769, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.04397215751306843;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.0872602774476824;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.07817108805981869;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.125178802591819;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.20039385391321113;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.047913087107059146;  // std dev = 4,534, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.08514053340926438;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.10451297682009786;  // std dev = 9,768, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.037076392265265434;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.06978777293621709;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.0632779877768077;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.09534046199320333;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.16748871223040665;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.03796846204358483;  // std dev = 4,534, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.06548845838453378;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.0791258629552226;  // std dev = 9,767, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.031117949007423824;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.05533353411196089;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.05081113436407256;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.0721345112628992;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.14292525837492503;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.02995026002105194;  // std dev = 4,534, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.05007371139432328;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.05975017523332202;  // std dev = 9,767, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.026015085297604604;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.04358166884586853;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.04054067546152519;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.05436641375105478;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.12401912032216288;  // std dev = 1,711, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.02354167592735943;  // std dev = 4,534, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.03813065317593867;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.045068932189973064;  // std dev = 9,766, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.02167751367883733;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.03415124515065642;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.03218425428294496;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.040884857143098176;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */


Results
   AUC ROC   = 0.597062
   AUC PR    = 0.629915
   CLL	      = -0.675115
   Precision = 0.71149 at threshold = 0.5
   Recall    = 0.29886
   F1        = 0.420915


Total learning time: 22.617 seconds
Total inference time: 3.415 seconds
AUC ROC: 0.597062


Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(B, G), complex(A, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [9.434, 177, 179], 'true,true': [1.711, 3, 124], 'false,false,false,true': [4.784, 70, 34], 'true,false,false,false': [7.391, 90, 139], 'true,false,true': [7.856, 154, 103], 'false,false,true,false': [6.422, 116, 64], 'true,false,false,true': [5.411, 67, 52], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.473, 26, 8]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(A, G), complex(B, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [9.434, 177, 179], 'true,true': [1.711, 3, 124], 'false,false,false,true': [4.784, 70, 34], 'true,false,false,false': [7.391, 90, 139], 'true,false,true': [7.856, 154, 103], 'false,false,true,false': [6.422, 116, 64], 'true,false,false,true': [5.411, 67, 52], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.473, 26, 8]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, I)', 'true,false,false': 'complex(B, F)', 'false': 'complex(B, G), complex(A, G)', 'false,false': 'complex(A, H)', 'false,false,false': 'complex(B, J)'}, {'false,false,false,false': [9.434, 177, 179], 'true,true': [1.711, 3, 124], 'false,false,false,true': [4.784, 70, 34], 'true,false,false,false': [7.391, 90, 139], 'true,false,true': [7.856, 154, 103], 'false,false,true,false': [6.422, 116, 64], 'true,false,false,true': [5.411, 67, 52], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.473, 26, 8]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [9.434, 177, 179], 'true,true': [1.711, 3, 124], 'false,false,false,true': [4.784, 70, 34], 'true,false,false,false': [9.777, 183, 211], 'true,false,true': [4.534, 61, 31], 'false,false,true,false': [6.422, 116, 64], 'true,false,false,true': [5.411, 67, 52], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.473, 26, 8]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [9.434, 177, 179], 'true,true': [1.711, 3, 124], 'false,false,false,true': [4.784, 70, 34], 'true,false,false,false': [9.772, 183, 211], 'true,false,true': [4.534, 61, 31], 'false,false,true,false': [6.422, 116, 64], 'true,false,false,true': [5.411, 67, 52], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.473, 26, 8]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [9.434, 177, 179], 'true,true': [1.711, 3, 124], 'false,false,false,true': [4.784, 70, 34], 'true,false,false,false': [9.769, 183, 211], 'true,false,true': [4.534, 61, 31], 'false,false,true,false': [6.422, 116, 64], 'true,false,false,true': [5.411, 67, 52], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.473, 26, 8]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [9.434, 177, 179], 'true,true': [1.711, 3, 124], 'false,false,false,true': [4.784, 70, 34], 'true,false,false,false': [9.768, 183, 211], 'true,false,true': [4.534, 61, 31], 'false,false,true,false': [6.422, 116, 64], 'true,false,false,true': [5.411, 67, 52], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.473, 26, 8]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(B, D), complex(A, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(A, H), complex(B, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [9.434, 177, 179], 'true,true': [1.711, 3, 124], 'false,false,false,true': [4.784, 70, 34], 'true,false,false,false': [9.767, 183, 211], 'true,false,true': [4.534, 61, 31], 'false,false,true,false': [6.422, 116, 64], 'true,false,false,true': [5.411, 67, 52], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.473, 26, 8]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [9.434, 177, 179], 'true,true': [1.711, 3, 124], 'false,false,false,true': [4.784, 70, 34], 'true,false,false,false': [9.767, 183, 211], 'true,false,true': [4.534, 61, 31], 'false,false,true,false': [6.422, 116, 64], 'true,false,false,true': [5.411, 67, 52], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.473, 26, 8]}], ['interaction(A, B)', {'': 'function(A, C), function(B, C)', 'true,false': 'complex(A, E), complex(B, F)', 'true': 'complex(A, D), complex(B, D)', 'false,false,true': 'complex(B, J)', 'true,false,false': 'complex(B, G)', 'false': 'complex(B, H), complex(A, H)', 'false,false': 'complex(A, I)', 'false,false,false': 'complex(B, K)'}, {'false,false,false,false': [9.434, 177, 179], 'true,true': [1.711, 3, 124], 'false,false,false,true': [4.784, 70, 34], 'true,false,false,false': [9.766, 183, 211], 'true,false,true': [4.534, 61, 31], 'false,false,true,false': [6.422, 116, 64], 'true,false,false,true': [5.411, 67, 52], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.473, 26, 8]}]]
[{'': [0.24495356684283634, 0.24404767145964357], 'false': [nan, 0.24404767145964365], 'true': [0.0230640461280963, 0.2498026091114031], 'false,false,true': [0.179930795847751, 0.2291358024691359], 'true,false,false': [0.24602782289386357, 0.23855380332183274], 'true,false': [0.24015503641236313, 0.24761362135024875], 'false,false': [0.22325093894663298, 0.24863421550094855], 'false,false,false': [0.22004437869822627, 0.2499921095821278]}, {'': [0.23173334313018035, 0.24194573550342577], 'true,false': [0.24015503641236136, 0.2457339497626194], 'true': [0.023064046128093558, 0.24719484673160608], 'false,false,true': [0.17993079584775068, 0.22913580246913667], 'true,false,false': [0.24602782289386357, 0.23855380332183182], 'false': [nan, 0.24194573550342327], 'false,false': [0.22276266288939187, 0.24716331194131075], 'false,false,false': [0.22004437869822552, 0.24999210958212129]}, {'': [0.21880621935831335, 0.23996829648720086], 'true,false': [0.2401550364123615, 0.24388803668685316], 'true': [0.023064046128094286, 0.24464519296493764], 'false,false,true': [0.1799307958477505, 0.2291358024691373], 'true,false,false': [0.2460278228938631, 0.23855380332182896], 'false': [nan, 0.23996829648720205], 'false,false': [0.22233157465118142, 0.2457721855633791], 'false,false,false': [0.22004437869822474, 0.2499921095821212]}, {'': [0.21100263094242433, 0.2384433835427049], 'true,false': [0.2234168241965972, 0.24393134617038523], 'true': [0.023064046128090928, 0.24278917018227525], 'false,false,true': [0.17993079584775104, 0.22913580246913665], 'true,false,false': [0.2460278228938632, 0.24263088079210757], 'false': [nan, 0.23844338354270517], 'false,false': [0.22198816945024885, 0.24470167003789878], 'false,false,false': [0.22004437869822555, 0.24999210958212212]}, {'': [0.20718638068374592, 0.2374434454425097], 'true,false': [0.223416824196596, 0.24348922532806686], 'true': [0.02306404612809227, 0.24159538412601478], 'false,false,true': [0.1799307958477511, 0.22913580246913479], 'true,false,false': [0.24602782289386402, 0.24237111411352366], 'false': [nan, 0.23744344544251142], 'false,false': [0.22173784633503454, 0.2440056676151792], 'false,false,false': [0.22004437869822538, 0.24999210958211976]}, {'': [0.20535968132327068, 0.2368632844556944], 'true,false': [0.22341682419659675, 0.24324635761228752], 'true': [0.02306404612809214, 0.24087755195075425], 'false,false,true': [0.17993079584775115, 0.22913580246913742], 'true,false,false': [0.2460278228938632, 0.2422298886703817], 'false': [nan, 0.236863284455695], 'false,false': [0.22156860016210056, 0.24360795750869904], 'false,false,false': [0.22004437869822552, 0.24999210958212031]}, {'': [0.20443618846256373, 0.2365547536332056], 'true,false': [0.22341682419659856, 0.2431206916210554], 'true': [0.023064046128092434, 0.24047448431363433], 'false,false,true': [0.1799307958477506, 0.22913580246913784], 'true,false,false': [0.24602782289386402, 0.24215559349681745], 'false': [nan, 0.23655475363320536], 'false,false': [0.22146117984939478, 0.24340118949670247], 'false,false,false': [0.2200443786982246, 0.24999210958212442]}, {'': [0.20393240769789162, 0.2364003727631748], 'true,false': [0.22341682419659697, 0.24305771666885892], 'true': [0.023064046128092208, 0.24025713540862983], 'false,false,true': [0.17993079584775093, 0.22913580246913476], 'true,false,false': [0.24602782289386396, 0.24211751284693414], 'false': [nan, 0.2364003727631726], 'false,false': [0.2213965480919399, 0.24330087547945384], 'false,false,false': [0.22004437869822388, 0.24999210958212123]}, {'': [0.2036316188911308, 0.2363264941261784], 'true,false': [0.22341682419659636, 0.24302682504367676], 'true': [0.023064046128092406, 0.24014271319349415], 'false,false,true': [0.17993079584775065, 0.22913580246913517], 'true,false,false': [0.24602782289386327, 0.24209871213536602], 'false': [nan, 0.23632649412617832], 'false,false': [0.22135942267943853, 0.2432547642635588], 'false,false,false': [0.22004437869822538, 0.24999210958212378]}, {'': [0.2034330877362131, 0.23629242100646988], 'true,false': [0.22341682419659667, 0.24301206771120173], 'true': [0.023064046128092285, 0.2400834488170074], 'false,false,true': [0.17993079584775085, 0.22913580246913748], 'true,false,false': [0.2460278228938627, 0.24209005088302146], 'false': [nan, 0.23629242100647102], 'false,false': [0.22133897757091486, 0.24323456369110621], 'false,false,false': [0.22004437869822427, 0.24999210958212256]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '0;false;complex(B, G), complex(A, G).;true;true', '0;true;complex(A, D), complex(B, D).;true;true', '0;false,false,true;complex(B, I).;true;true', '0;true,false,false;complex(B, F).;true;true', '0;true,false;complex(A, E).;true;true', '0;false,false;complex(A, H).;true;true', '0;false,false,false;complex(B, J).;true;true', '1;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '1;false;complex(A, G), complex(B, G).;true;true', '1;true;complex(A, D), complex(B, D).;true;true', '1;false,false,true;complex(B, I).;true;true', '1;true,false,false;complex(B, F).;true;true', '1;true,false;complex(A, E).;true;true', '1;false,false;complex(A, H).;true;true', '1;false,false,false;complex(B, J).;true;true', '2;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '2;false;complex(B, G), complex(A, G).;true;true', '2;true;complex(A, D), complex(B, D).;true;true', '2;false,false,true;complex(B, I).;true;true', '2;true,false,false;complex(B, F).;true;true', '2;true,false;complex(A, E).;true;true', '2;false,false;complex(A, H).;true;true', '2;false,false,false;complex(B, J).;true;true', '3;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '3;false;complex(B, H), complex(A, H).;true;true', '3;true;complex(A, D), complex(B, D).;true;true', '3;false,false,true;complex(B, J).;true;true', '3;true,false,false;complex(B, G).;true;true', '3;true,false;complex(A, E), complex(B, F).;true;true', '3;false,false;complex(A, I).;true;true', '3;false,false,false;complex(B, K).;true;true', '4;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '4;false;complex(A, H), complex(B, H).;true;true', '4;true;complex(B, D), complex(A, D).;true;true', '4;false,false,true;complex(B, J).;true;true', '4;true,false,false;complex(B, G).;true;true', '4;true,false;complex(A, E), complex(B, F).;true;true', '4;false,false;complex(A, I).;true;true', '4;false,false,false;complex(B, K).;true;true', '5;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '5;false;complex(B, H), complex(A, H).;true;true', '5;true;complex(A, D), complex(B, D).;true;true', '5;false,false,true;complex(B, J).;true;true', '5;true,false,false;complex(B, G).;true;true', '5;true,false;complex(A, E), complex(B, F).;true;true', '5;false,false;complex(A, I).;true;true', '5;false,false,false;complex(B, K).;true;true', '6;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '6;false;complex(A, H), complex(B, H).;true;true', '6;true;complex(B, D), complex(A, D).;true;true', '6;false,false,true;complex(B, J).;true;true', '6;true,false,false;complex(B, G).;true;true', '6;true,false;complex(A, E), complex(B, F).;true;true', '6;false,false;complex(A, I).;true;true', '6;false,false,false;complex(B, K).;true;true', '7;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '7;false;complex(A, H), complex(B, H).;true;true', '7;true;complex(B, D), complex(A, D).;true;true', '7;false,false,true;complex(B, J).;true;true', '7;true,false,false;complex(B, G).;true;true', '7;true,false;complex(A, E), complex(B, F).;true;true', '7;false,false;complex(A, I).;true;true', '7;false,false,false;complex(B, K).;true;true', '8;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '8;false;complex(B, H), complex(A, H).;true;true', '8;true;complex(A, D), complex(B, D).;true;true', '8;false,false,true;complex(B, J).;true;true', '8;true,false,false;complex(B, G).;true;true', '8;true,false;complex(A, E), complex(B, F).;true;true', '8;false,false;complex(A, I).;true;true', '8;false,false,false;complex(B, K).;true;true', '9;;interaction(A, B) :- function(A, C), function(B, C).;true;true', '9;false;complex(B, H), complex(A, H).;true;true', '9;true;complex(A, D), complex(B, D).;true;true', '9;false,false,true;complex(B, J).;true;true', '9;true,false,false;complex(B, G).;true;true', '9;true,false;complex(A, E), complex(B, F).;true;true', '9;false,false;complex(A, I).;true;true', '9;false,false,false;complex(B, K).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.834526887855416;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then if ( proteinclass(A, F), phenotype(B, G) )
%   | | | then return 0.4634120929942483;  // std dev = 3,013, 38,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.2234457387524816;  // std dev = 7,126, 219,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=80 */
%   | | else if ( complex(B, H) )
%   | | | then return 0.29512372501547973;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.4651358346628277;  // std dev = 7,391, 229,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=139 */
%   else if ( complex(B, I), complex(A, I) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, J) )
%   | | then return 0.19459753323035484;  // std dev = 0,472, 214,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=72 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.18507201202258786;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.3609579238635532;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.7005942268486597;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then if ( complex(B, F), enzyme(A, G) )
%   | | | then return 0.4743610876445822;  // std dev = 2,179, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.2017817255381146;  // std dev = 7,417, 236,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=89 */
%   | | else if ( complex(B, H) )
%   | | | then return 0.25527541927737746;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.3986309861052425;  // std dev = 7,391, 229,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=139 */
%   else if ( complex(A, I), complex(B, I) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, J) )
%   | | then return 0.16922069871988124;  // std dev = 0,472, 214,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=72 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.1610175259758761;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.31111525637278725;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.5422132021576933;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E) )
%   | | then return 0.18863781276827396;  // std dev = 0,486, 257,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=103 */
%   | | else if ( complex(B, F) )
%   | | | then return 0.21420554965544972;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.32532504915853294;  // std dev = 7,391, 229,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=139 */
%   else if ( complex(B, G), complex(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(B, I) )
%   | | | then return 0.04315679752109069;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.16341823542958914;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, J) )
%   | | | then return 0.13752260537158653;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.25826508688945;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.40748537734386725;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.08137469863474249;  // std dev = 0,463, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.1749353405173308;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.23073570431170223;  // std dev = 9,747, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.03636884103228894;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.13677100763574385;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.11550318916810978;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.20748429553496786;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.31156439986671935;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.06570213690381181;  // std dev = 0,463, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.13973153528405807;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.18060260124210156;  // std dev = 9,739, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.03050981128927605;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.11249865772768736;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.09560520045818097;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.16255833855477422;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.24603089807386008;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.05261925610258261;  // std dev = 0,463, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.10974219211836966;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.13898635577970156;  // std dev = 9,734, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.025496593817385255;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.09120815905933781;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.07817108805981869;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.125178802591819;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.20039385391321113;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.04187335450480389;  // std dev = 0,463, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.08514053340926438;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.10589579611175927;  // std dev = 9,732, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.021238427933022677;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.07309433151639756;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.0632779877768077;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.09534046199320333;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.16748871223040665;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.03315649178821228;  // std dev = 0,462, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.06548845838453378;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.08024906698074122;  // std dev = 9,730, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(A, H), complex(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.01764366703996887;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.058047237633155065;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.05081113436407256;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.0721345112628992;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.14292525837492503;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.026152961762212573;  // std dev = 0,462, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.05007371139432328;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.060651915023659;  // std dev = 9,729, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.014624362903065223;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.04577472590800742;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.04054067546152519;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.05436641375105478;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(A, C), function(B, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.12401912032216288;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), complex(B, F) )
%   | | then return 0.020567110204501998;  // std dev = 0,462, 92,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( complex(B, G) )
%   | | | then return 0.03813065317593867;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.04578779454656145;  // std dev = 9,729, 394,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=211 */
%   else if ( complex(B, H), complex(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( complex(A, I) )
%   | | then if ( complex(B, J) )
%   | | | then return 0.012099072866136828;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.035903095641684764;  // std dev = 6,422, 180,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | else if ( complex(B, K) )
%   | | | then return 0.03218425428294496;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.040884857143098176;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=179 */


Results
   AUC ROC   = 0.60201
   AUC PR    = 0.634795
   CLL	      = -0.67543
   Precision = 0.71149 at threshold = 0.5
   Recall    = 0.29886
   F1        = 0.420915


Total learning time: 20.091 seconds
Total inference time: 4.018 seconds
AUC ROC: 0.60201


Refined model AUC ROC: 0.60201


Dataset: 23_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 06:35:28
{'Recall': 0.29886, 'F1': 0.420915, 'AUC PR': 0.634795, 'Learning time': 42.708, 'AUC ROC': 0.60201, 'Inference time': 4.018, 'Precision': [0.71149, 0.5], 'Mapping results': {'Generating mappings time': 0.039737701416015625, 'Possible mappings': [128], 'Generating paths time': 4.138031244277954, 'Total time': 4.233211994171143, 'Numbers preds mapping': [3], 'Finding best mapping': 1.6689300537109375e-06, 'Max mapping': 729, 'Knowledge compiling time': 0.05543088912963867}, 'parameter': {'Recall': 0.29886, 'F1': 0.420915, 'AUC PR': 0.629915, 'Learning time': 22.617, 'AUC ROC': 0.597062, 'Inference time': 3.415, 'Precision': [0.71149, 0.5], 'CLL': -0.675115}, 'CLL': -0.67543}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.834526887855416;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   else if ( complex(A, D) )
%   | then if ( phenotype(B, E), complex(B, F) )
%   | | then if ( enzyme(A, G), phenotype(A, E) )
%   | | | then return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.08481560176617903;  // std dev = 3,626, 75,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | else if ( phenotype(A, H), phenotype(B, H) )
%   | | | then return 0.597279369882121;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return 0.2270013941159038;  // std dev = 9,231, 366,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=135 */
%   | else if ( complex(B, I) )
%   | | then if ( phenotype(B, J), location(B, K) )
%   | | | then return 0.2878364350995134;  // std dev = 5,601, 128,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=55 */
%   | | | else return 0.1844647245731952;  // std dev = 4,570, 95,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.4631311415052025;  // std dev = 8,195, 281,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=170 */
%   | | | else return 0.344991040362668;  // std dev = 8,715, 304,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=148 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.7005942268486597;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   else if ( complex(A, D) )
%   | then if ( phenotype(B, E), phenotype(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.6345477042503042;  // std dev = 1,326, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.23450806313685177;  // std dev = 2,287, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.03494894190555351;  // std dev = 2,683, 44,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.19722382818248477;  // std dev = 9,473, 388,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=142 */
%   | else if ( complex(B, I) )
%   | | then if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.40826377528870766;  // std dev = 2,395, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.18758528663862914;  // std dev = 6,775, 199,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=72 */
%   | | else if ( location(B, L), location(A, L) )
%   | | | then return 0.3969567611868877;  // std dev = 8,195, 281,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=170 */
%   | | | else return 0.2976102262434985;  // std dev = 8,715, 304,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=148 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( complex(B, D), complex(A, D) )
%   | then return 0.5422132021576933;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( complex(A, E), location(B, F) )
%   | | then return 0.18834492851810816;  // std dev = 0,478, 252,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=100 */
%   | | else return 0.3040343752395108;  // std dev = 0,489, 353,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=194 */
%   else if ( complex(A, G) )
%   | then if ( enzyme(A, H) )
%   | | then return -0.1451303727496588;  // std dev = 0,193, 25,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else if ( location(B, I) )
%   | | | then return 0.20078679063446017;  // std dev = 6,018, 152,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=61 */
%   | | | else return 0.06858182396831959;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else if ( complex(B, J), proteinclass(B, K) )
%   | | then return -0.06811884656166865;  // std dev = 0,348, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( proteinclass(B, L), proteinclass(A, M) )
%   | | | then return 0.563849610335568;  // std dev = 1,322, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.22521344047548214;  // std dev = 10,289, 427,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=201 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.40748537734386725;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   else if ( complex(B, D) )
%   | then if ( enzyme(A, E), proteinclass(A, F) )
%   | | then if ( phenotype(B, G), phenotype(A, G) )
%   | | | then return 0.5309294312048963;  // std dev = 1,032, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.2162635616949406;  // std dev = 2,301, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( phenotype(B, H), phenotype(A, I) )
%   | | | then return 0.02074792282786906;  // std dev = 4,103, 92,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | | | else return 0.12606433501720168;  // std dev = 7,146, 224,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=81 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( phenotype(B, L) )
%   | | | then return 0.27737044872190647;  // std dev = 2,686, 34,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | | | else return -0.05205561109916871;  // std dev = 2,545, 46,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else if ( function(B, M), function(A, M) )
%   | | | then return 0.26034496372306115;  // std dev = 9,023, 343,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=190 */
%   | | | else return 0.184919653209185;  // std dev = 11,130, 507,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=235 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.31156439986671935;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   else if ( complex(B, D), function(A, E) )
%   | then if ( function(B, E), enzyme(A, F) )
%   | | then if ( phenotype(B, G), phenotype(A, H) )
%   | | | then return 0.40843791951735503;  // std dev = 1,902, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return 0.18304188801101168;  // std dev = 2,572, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( phenotype(B, I), phenotype(A, J) )
%   | | | then return -0.02000843560874636;  // std dev = 3,824, 87,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=19 */
%   | | | else return 0.0918682283942372;  // std dev = 6,794, 206,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=72 */
%   | else if ( complex(A, K) )
%   | | then if ( phenotype(B, L), proteinclass(A, M) )
%   | | | then return 0.3220806297951583;  // std dev = 2,459, 29,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | | else return 0.10176943713675372;  // std dev = 8,430, 316,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=117 */
%   | | else if ( phenotype(B, N), enzyme(B, P) )
%   | | | then return 0.046145288787037136;  // std dev = 3,381, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | | else return 0.19711043018272636;  // std dev = 11,434, 542,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=300 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.24603089807386008;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   else if ( enzyme(A, D), enzyme(B, E) )
%   | then if ( enzyme(F, D), phenotype(F, G) )
%   | | then if ( phenotype(B, G), phenotype(A, G) )
%   | | | then return 0.3592612962158642;  // std dev = 0,877, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.05257612688555552;  // std dev = 1,991, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( proteinclass(B, H) )
%   | | | then return -0.09743057100503523;  // std dev = 0,786, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4682158552284623;  // std dev = 1,478, 25,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else if ( enzyme(A, I) )
%   | | then if ( phenotype(B, J), phenotype(A, K) )
%   | | | then return 0.1944172131313557;  // std dev = 3,191, 51,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=32 */
%   | | | else return -0.008774412270046904;  // std dev = 4,908, 124,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   | | else if ( complex(B, L), function(A, M) )
%   | | | then return 0.06845440756021419;  // std dev = 7,701, 274,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=91 */
%   | | | else return 0.13143279659604826;  // std dev = 13,647, 771,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=382 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.15460550490066688;  // std dev = 0,412, 484,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=309 */
%   | else if ( location(A, E), location(B, F) )
%   | | then if ( phenotype(B, G), complex(B, H) )
%   | | | then return 0.145570044958136;  // std dev = 3,250, 46,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return -0.004965425635020045;  // std dev = 5,830, 153,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=55 */
%   | | else return 0.17425414905112713;  // std dev = 0,410, 49,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=33 */
%   else if ( phenotype(B, I), proteinclass(B, J) )
%   | then if ( phenotype(A, K), enzyme(B, L) )
%   | | then return -0.3852143227855643;  // std dev = 0,238, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0013133373293321797;  // std dev = 0,437, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else if ( complex(B, M), enzyme(A, N) )
%   | | then return -0.27054657019556466;  // std dev = 0,060, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, P), enzyme(A, Q) )
%   | | | then return -0.14206616857149976;  // std dev = 0,857, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.09451985461556907;  // std dev = 11,939, 586,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=268 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( complex(A, D), complex(B, D) )
%   | then return 0.1743494521771559;  // std dev = 0,152, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   | else if ( proteinclass(B, E), enzyme(A, F) )
%   | | then if ( complex(B, G) )
%   | | | then return 0.35521034750571956;  // std dev = 0,924, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.20823084469853634;  // std dev = 1,963, 26,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( complex(A, H), complex(B, I) )
%   | | | then return -0.004806666188656865;  // std dev = 4,068, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | | else return 0.10616371775723096;  // std dev = 10,402, 487,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=257 */
%   else if ( complex(B, J), enzyme(A, K) )
%   | then return -0.22204691582289768;  // std dev = 0,052, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( phenotype(B, L), proteinclass(B, M) )
%   | | then return -0.02702340283858617;  // std dev = 0,429, 49,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( phenotype(A, N), proteinclass(B, P) )
%   | | | then return 0.24413060433793896;  // std dev = 2,150, 23,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.059379588664645724;  // std dev = 11,774, 583,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=256 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then if ( location(B, D), location(A, D) )
%   | then return 0.21179294183825018;  // std dev = 0,304, 77,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=66 */
%   | else return -0.04366998893645824;  // std dev = 0,372, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   else if ( phenotype(B, E) )
%   | then if ( complex(B, F), complex(A, F) )
%   | | then return 0.1486360406511511;  // std dev = 0,151, 43,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return -0.05519469130051817;  // std dev = 3,594, 73,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.021397938505871978;  // std dev = 8,647, 331,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=137 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(B, K), complex(B, L) )
%   | | | then return 0.30467815704490453;  // std dev = 0,916, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.08490747317411608;  // std dev = 2,924, 61,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( enzyme(A, M), location(B, N) )
%   | | | then return 0.17530259416248803;  // std dev = 3,139, 64,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | | | else return 0.06737392667184768;  // std dev = 12,887, 736,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=374 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.13142175539300677;  // std dev = 0,150, 127,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=124 */
%   else if ( location(B, D) )
%   | then if ( phenotype(B, E), phenotype(A, E) )
%   | | then if ( complex(A, F), complex(B, G) )
%   | | | then return -0.047063961442366554;  // std dev = 1,373, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.19035639971418283;  // std dev = 2,696, 49,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=37 */
%   | | else if ( phenotype(B, H) )
%   | | | then return 0.006952465802347295;  // std dev = 9,337, 400,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=155 */
%   | | | else return 0.054207545788878604;  // std dev = 12,595, 699,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=335 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), proteinclass(J, K) )
%   | | | then return 0.04899720090676328;  // std dev = 3,545, 55,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
%   | | | else return 0.38442834785513313;  // std dev = 0,915, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( function(A, L), function(B, M) )
%   | | | then return -0.11639663155172787;  // std dev = 3,186, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.24391377213187876;  // std dev = 0,887, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.605515
   AUC PR    = 0.647318
   CLL	      = -0.680024
   Precision = 0.651138 at threshold = 0.5
   Recall    = 0.318748
   F1        = 0.427986


Total learning time: 42.77 seconds
Total inference time: 3.05 seconds
AUC ROC: 0.605515


Dataset: 23_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 06:36:15
{'Recall': 0.318748, 'F1': 0.427986, 'AUC PR': 0.647318, 'Learning time': 42.77, 'AUC ROC': 0.605515, 'Inference time': 3.05, 'Precision': [0.651138, 0.5], 'CLL': -0.680024}


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then if ( phenotype(A, D), phenotype(B, E) )
%   | then return 0.8581489350995121;  // std dev = 2,06e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else if ( proteinclass(A, F), phenotype(A, G) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(B, H), phenotype(B, I) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.844064428057259;  // std dev = 0,993, 71,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=70 */
%   else if ( complex(A, J) )
%   | then if ( phenotype(A, K), phenotype(B, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.7331489350995123;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.2929315437951645;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.06269438964496693;  // std dev = 2,676, 44,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.22412831654281015;  // std dev = 9,488, 388,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=142 */
%   | else if ( complex(B, P) )
%   | | then if ( function(A, Q), function(B, Q) )
%   | | | then return 0.29512372501547973;  // std dev = 5,411, 119,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | | else return 0.1850720120225879;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( location(A, R), location(B, R) )
%   | | | then return 0.4631311415052025;  // std dev = 8,195, 281,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=170 */
%   | | | else return 0.344991040362668;  // std dev = 8,715, 304,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=148 */


Results
   AUC ROC   = 0.593821
   AUC PR    = 0.613304
   CLL	      = -0.931535
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.158 seconds
Total inference time: 2.664 seconds
AUC ROC: 0.593821


Dataset: 23_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 06:36:26
{'Recall': 0.0, 'F1': nan, 'AUC PR': 0.613304, 'Learning time': 8.158, 'AUC ROC': 0.593821, 'Inference time': 2.664, 'Precision': [nan, 0.5], 'CLL': -0.931535}


