Starting experiment #1 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( tempadvisedby(A, G), publication(E, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3581489350995123;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, J, L), ta(M, A, N) )
%   | | | then return 0.4735335504841277;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.36389606153629317;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, P), projectmember(Q, P) )
%   | | then return 0.24276431971489695;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( tempadvisedby(A, R), projectmember(S, R) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3528857772047747;  // std dev = 4,873, 95,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=47 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( advisedby(A, F) )
%   | then return 0.2431522573300012;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else return 0.3160804424194091;  // std dev = 0,498, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( advisedby(A, G), publication(H, G) )
%   | then if ( advisedby(I, G), publication(H, I) )
%   | | then if ( ta(J, A, K), ta(L, I, M) )
%   | | | then return 0.40564015880039006;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.3135977252686114;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.43201604470553195;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, P) )
%   | | | then return 0.23812534128822152;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3609624521700118;  // std dev = 3,407, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( publication(R, A) )
%   | | | then return 0.3609729747047911;  // std dev = 1,650, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.2256604357815853;  // std dev = 2,866, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.2508631366527695;  // std dev = 0,496, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then return 0.19019015070339199;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( tempadvisedby(A, J), publication(K, J) )
%   | | | then return 0.3132494148185758;  // std dev = 1,469, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.13839371582818094;  // std dev = 1,101, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( advisedby(A, L), projectmember(M, L) )
%   | then return 0.2067562256250335;  // std dev = 0,487, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( advisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, A) )
%   | | | then return 0.25445329729058314;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.32032003484472144;  // std dev = 3,634, 54,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | else if ( tempadvisedby(A, R) )
%   | | | then return 0.2895015671525968;  // std dev = 2,808, 32,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.18076432424968494;  // std dev = 1,703, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F) )
%   | then return 0.1580186077201741;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( publication(E, G), tempadvisedby(H, G) )
%   | | then return 0.14993025212712546;  // std dev = 0,494, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.38072598521535267;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( publication(I, A), advisedby(A, J) )
%   | then if ( tempadvisedby(K, J) )
%   | | then if ( publication(I, K) )
%   | | | then return 0.0376737221808362;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22247978800291393;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.33270455563932827;  // std dev = 0,475, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, L), projectmember(M, L) )
%   | | then return 0.2848441950065291;  // std dev = 1,070, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(N, A), tempadvisedby(A, P) )
%   | | | then return 0.14350905952235316;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.20311153671127244;  // std dev = 6,373, 165,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=83 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then if ( sameperson(A, E) )
%   | | then return 0.14453757268766598;  // std dev = 0,495, 80,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=38 */
%   | | else return 0.4548922154952847;  // std dev = 0,874, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then if ( tempadvisedby(J, I), publication(K, J) )
%   | | | then return 0.009721780938839094;  // std dev = 1,415, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.14076000330070998;  // std dev = 2,634, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else return 0.1557354353123104;  // std dev = 0,494, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), projectmember(M, L) )
%   | then return 0.12723921051452214;  // std dev = 0,486, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( publication(N, A), tempadvisedby(A, P) )
%   | | then return 0.1133841177596926;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( tempadvisedby(A, Q) )
%   | | | then return 0.2123673841491882;  // std dev = 2,464, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.17533472092201832;  // std dev = 4,909, 98,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=52 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( advisedby(A, F), tempadvisedby(G, F) )
%   | then if ( ta(H, G, E) )
%   | | then return 0.17513136520357264;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09822123789345762;  // std dev = 0,494, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else return 0.07228338513239535;  // std dev = 0,485, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else if ( publication(I, A), advisedby(A, J) )
%   | then if ( publication(I, J) )
%   | | then if ( advisedby(K, J), ta(L, K, M) )
%   | | | then return 0.15104750544041415;  // std dev = 2,925, 35,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.025827700903755524;  // std dev = 1,320, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.2385081241665425;  // std dev = 0,468, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( tempadvisedby(A, N) )
%   | | then return 0.13716531607432214;  // std dev = 0,493, 68,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   | | else if ( advisedby(A, P), tempadvisedby(Q, P) )
%   | | | then return 0.1337215031669064;  // std dev = 3,819, 60,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | else return 0.08907868286550187;  // std dev = 3,466, 49,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( tempadvisedby(A, F) )
%   | then return 0.02141596128037402;  // std dev = 1,086, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( advisedby(A, G) )
%   | | then if ( tempadvisedby(H, G) )
%   | | | then return 0.08664306153783102;  // std dev = 2,890, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return -0.017398889576102954;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.17719047580833883;  // std dev = 1,065, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( publication(I, A), advisedby(A, J) )
%   | then return 0.11580499737054109;  // std dev = 0,492, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | else if ( tempadvisedby(A, K) )
%   | | then if ( tempadvisedby(L, K), publication(M, L) )
%   | | | then return 0.04150646683907425;  // std dev = 2,267, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.13275632521732766;  // std dev = 3,353, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( advisedby(A, N), publication(P, N) )
%   | | | then return 0.10102125286806066;  // std dev = 4,175, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.05986277139368079;  // std dev = 3,024, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.07801561814432521;  // std dev = 0,491, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then if ( tempadvisedby(J, I), publication(K, J) )
%   | | | then return -0.04496608323324397;  // std dev = 1,417, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.059570998294154916;  // std dev = 2,631, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else return 0.06456352199372149;  // std dev = 0,492, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), tempadvisedby(M, L) )
%   | then if ( ta(N, M, P), publication(Q, L) )
%   | | then if ( publication(R, M) )
%   | | | then return 0.16386828134175785;  // std dev = 1,526, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.09554575369365624;  // std dev = 2,330, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( projectmember(S, L), publication(T, A) )
%   | | | then return 0.07088782207720101;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.016768533153658182;  // std dev = 2,786, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else return 0.0886063247123449;  // std dev = 0,491, 76,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( publication(C, A), tempadvisedby(A, D) )
%   then if ( publication(C, D) )
%   | then if ( ta(E, A, F) )
%   | | then return -0.04062809675637091;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.002438232531247908;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.08120031999011255;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( advisedby(A, G), projectmember(H, G) )
%   | then if ( advisedby(I, G), ta(J, I, K) )
%   | | then return 0.1720984024319628;  // std dev = 0,472, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.024652842919475376;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( ta(L, A, M), advisedby(A, N) )
%   | | then if ( advisedby(P, N), publication(Q, P) )
%   | | | then return 0.027312315925698508;  // std dev = 4,216, 73,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=33 */
%   | | | else return 0.12750441659841957;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(R, A) )
%   | | | then return 0.07280958091555538;  // std dev = 3,730, 58,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return 0.05655011422164368;  // std dev = 5,309, 116,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=59 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( publication(C, A), tempadvisedby(A, D) )
%   then if ( publication(C, D) )
%   | then return -0.01284485076173586;  // std dev = 0,483, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.06133757151443009;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( tempadvisedby(A, E) )
%   | then if ( tempadvisedby(F, E), publication(G, F) )
%   | | then if ( ta(H, F, I) )
%   | | | then return -0.030585467514182684;  // std dev = 1,551, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0449235720374115;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.0718100982003606;  // std dev = 0,488, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | else if ( advisedby(A, J), publication(K, J) )
%   | | then if ( advisedby(L, J), publication(K, L) )
%   | | | then return 0.03479195782018837;  // std dev = 5,706, 133,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=66 */
%   | | | else return 0.09844192463135866;  // std dev = 2,185, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( advisedby(A, M), tempadvisedby(N, M) )
%   | | | then return -0.013232000932108759;  // std dev = 2,171, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.04905597649484746;  // std dev = 2,811, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */


Starting fold 1

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos	 examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false,false;tempadvisedby(A, R), projectmember(S, R).;false;false
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;true;advisedby(A, F), publication(E, F).;false;true
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,true;advisedby(J, H), publication(I, J).;true;false
1;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
1;false;advisedby(A, G), publication(H, G).;true;true
1;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
1;false,false,false;publication(R, A).;false;false
1;false,false;tempadvisedby(A, N).;true;true
1;true;advisedby(A, F).;false;false
1;false,true,true;ta(J, A, K), ta(L, I, M).;false;false
1;false,true;advisedby(I, G), publication(H, I).;true;false
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false,false,false;tempadvisedby(A, R).;false;false
2;false,false;advisedby(A, N).;true;true
2;false,false,true;tempadvisedby(P, N), publication(Q, A).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;false;advisedby(A, L), projectmember(M, L).;false;true
2;true;ta(C, E, D), advisedby(E, F).;false;true
3;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
3;false;publication(I, A), advisedby(A, J).;true;true
3;false,false,false;publication(N, A), tempadvisedby(A, P).;false;false
3;false,false;tempadvisedby(A, L), projectmember(M, L).;false;true
3;true;advisedby(A, F).;false;true
3;true,false;publication(E, G), tempadvisedby(H, G).;false;false
3;false,true,true;publication(I, K).;false;false
3;false,true;tempadvisedby(K, J).;true;false
4;;inphase(A, B) :- ta(C, A, D).;true;true
4;true,true;sameperson(A, E).;false;false
4;false;advisedby(A, L), projectmember(M, L).;false;true
4;false,false,false;tempadvisedby(A, Q).;false;false
4;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
4;false,false;publication(N, A), tempadvisedby(A, P).;false;true
4;true,false;ta(C, G, H), advisedby(G, I).;true;false
4;true;ta(C, E, D), advisedby(E, F).;true;true
5;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
5;true,true;ta(H, G, E).;false;false
5;false;publication(I, A), advisedby(A, J).;true;true
5;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
5;false,false;tempadvisedby(A, N).;false;true
5;true;advisedby(A, F), tempadvisedby(G, F).;true;false
5;false,true,true;advisedby(K, J), ta(L, K, M).;false;false
5;false,true;publication(I, J).;true;false
6;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
6;false;publication(I, A), advisedby(A, J).;false;true
6;false,false,false;advisedby(A, N), publication(P, N).;false;false
6;true,false,true;tempadvisedby(H, G).;false;false
6;false,false;tempadvisedby(A, K).;true;true
6;false,false,true;tempadvisedby(L, K), publication(M, L).;false;false
6;true,false;advisedby(A, G).;true;false
6;true;tempadvisedby(A, F).;false;true
7;;inphase(A, B) :- ta(C, A, D).;true;true
7;false,true,false;projectmember(S, L), publication(T, A).;false;false
7;false;advisedby(A, L), tempadvisedby(M, L).;true;false
7;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
7;false,true;ta(N, M, P), publication(Q, L).;true;true
7;true,false;ta(C, G, H), advisedby(G, I).;true;false
7;false,true,true;publication(R, M).;false;false
7;true;ta(C, E, D), advisedby(E, F).;false;true
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;true,true;ta(E, A, F).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false,true;advisedby(P, N), publication(Q, P).;false;false
8;false,false,false;publication(R, A).;false;false
8;false,false;ta(L, A, M), advisedby(A, N).;true;true
8;true;publication(C, D).;true;false
8;false,true;advisedby(I, G), ta(J, I, K).;false;false
9;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
9;false;tempadvisedby(A, E).;true;true
9;false,false,true;advisedby(L, J), publication(K, L).;false;false
9;false,false,false;advisedby(A, M), tempadvisedby(N, M).;false;false
9;false,false;advisedby(A, J), publication(K, J).;true;true
9;true;publication(C, D).;false;false
9;false,true,true;ta(H, F, I).;false;false
9;false,true;tempadvisedby(F, E), publication(G, F).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109542;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.2215250292763393;  // std dev = 1,566, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.5002131558403854;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.13637023346435795;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.12830007847517144;  // std dev = 1,170, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.34804117623637526;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.13542257003772978;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2737454750658212;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then return -0.12033481306242616;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.057314207518385694;  // std dev = 0,776, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.21302927201615532;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, F) )
%   | then return -0.11382179867182232;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.1794923358166991;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return -0.10283575895454698;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.354252
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 0.861 seconds
Total inference time: 0.644 seconds
AUC ROC: 0.875


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.133156
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.48 seconds
Parameter learned model CLL: -0.133156


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, F)', 'true': 'workedunder(C, D)', 'false,true': 'workedunder(E, G)'}, {'true,true': [0.0, 0, 11], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, E)', 'false,true': 'workedunder(D, F)'}, {'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [1.86e-09, 11, 0], 'true': [1.49e-08, 0, 11]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.566, 11, 11]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, A)', 'false,false': 'movie(F, G)', 'true': 'workedunder(C, D)'}, {'true,true': [0.0, 0, 11], 'false,false,true': [7.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.17, 11, 11]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)'}, {'false,false': [0.0, 11, 0], 'true': [6.45e-09, 0, 11], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false': 'workedunder(E, F)'}, {'false,false,true': [0.0, 11, 0], 'true': [0.0, 0, 11], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.776, 11, 11]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(E, F)', 'true': 'workedunder(C, D)'}, {'true,true': [0.0, 0, 11], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, F)', 'true': 'workedunder(C, D)'}, {'true,true': [0.0, 0, 11], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 11, 0]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'false': [-1.0092936587501423e-17, nan], 'true': [-1.6148698540002277e-16, nan], 'false,true': [-1.0092936587501423e-17, nan]}, {'': [1.6148698540002277e-16, 2.523234146875356e-18], 'false': [2.523234146875356e-18, nan], 'false,true': [2.523234146875356e-18, nan]}, {'': [0.11145008534151403, nan]}, {'': [0.0, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false': [5.046468293750712e-18, nan], 'true': [0.0, nan]}, {'': [0.062195810698099964, nan]}, {'': [4.0371746350005693e-17, 0.0], 'false': [nan, 0.0]}, {'': [-2.0185873175002847e-17, -2.523234146875356e-18], 'false': [nan, -2.523234146875356e-18], 'false,false': [-2.523234146875356e-18, nan]}, {'': [0.027384169050170663, nan]}, {'': [-2.0185873175002847e-17, -5.046468293750712e-18], 'false': [-5.046468293750712e-18, nan], 'true': [-2.0185873175002847e-17, nan]}, {'': [-5.046468293750712e-18, -1.1354553660939102e-17], 'false': [-1.1354553660939102e-17, nan], 'true': [-5.046468293750712e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
1;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
5;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
8;;genre(A, B) :- workedunder(C, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 0.855 seconds
Total inference time: 0.515 seconds
AUC ROC: 0.875


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.457 seconds
Refined model CLL: -0.094637


Refining iteration 2
********************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
1;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- actor(A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- actor(A).;true;true
5;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
7;;genre(A, B) :- actor(A).;true;true
8;;genre(A, B) :- workedunder(C, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 0.628 seconds
Total inference time: 0.528 seconds
AUC ROC: 0.875


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.461 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 3.7419999999999995 seconds
Total inference time: 0.515 seconds
AUC ROC: 0.875
Total revision time: 3.7419999999999995
Best scored revision CLL: -0.094637


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:13
{'Inference time': 0.515, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'CLL': -0.352709, 'Learning time': 3.7419999999999995, 'AUC ROC': 0.875, 'parameter': {'Inference time': 0.644, 'F1': 0.888889, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'CLL': -0.354252, 'Learning time': 0.861, 'AUC ROC': 0.875, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

Starting fold 2

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos	 examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false,false;tempadvisedby(A, R), projectmember(S, R).;false;false
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;true;advisedby(A, F), publication(E, F).;false;true
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,true;advisedby(J, H), publication(I, J).;true;false
1;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
1;false;advisedby(A, G), publication(H, G).;true;true
1;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
1;false,false,false;publication(R, A).;false;false
1;false,false;tempadvisedby(A, N).;true;true
1;true;advisedby(A, F).;false;false
1;false,true,true;ta(J, A, K), ta(L, I, M).;false;false
1;false,true;advisedby(I, G), publication(H, I).;true;false
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false,false,false;tempadvisedby(A, R).;false;false
2;false,false;advisedby(A, N).;true;true
2;false,false,true;tempadvisedby(P, N), publication(Q, A).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;false;advisedby(A, L), projectmember(M, L).;false;true
2;true;ta(C, E, D), advisedby(E, F).;false;true
3;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
3;false;publication(I, A), advisedby(A, J).;true;true
3;false,false,false;publication(N, A), tempadvisedby(A, P).;false;false
3;false,false;tempadvisedby(A, L), projectmember(M, L).;false;true
3;true;advisedby(A, F).;false;true
3;true,false;publication(E, G), tempadvisedby(H, G).;false;false
3;false,true,true;publication(I, K).;false;false
3;false,true;tempadvisedby(K, J).;true;false
4;;inphase(A, B) :- ta(C, A, D).;true;true
4;true,true;sameperson(A, E).;false;false
4;false;advisedby(A, L), projectmember(M, L).;false;true
4;false,false,false;tempadvisedby(A, Q).;false;false
4;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
4;false,false;publication(N, A), tempadvisedby(A, P).;false;true
4;true,false;ta(C, G, H), advisedby(G, I).;true;false
4;true;ta(C, E, D), advisedby(E, F).;true;true
5;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
5;true,true;ta(H, G, E).;false;false
5;false;publication(I, A), advisedby(A, J).;true;true
5;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
5;false,false;tempadvisedby(A, N).;false;true
5;true;advisedby(A, F), tempadvisedby(G, F).;true;false
5;false,true,true;advisedby(K, J), ta(L, K, M).;false;false
5;false,true;publication(I, J).;true;false
6;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
6;false;publication(I, A), advisedby(A, J).;false;true
6;false,false,false;advisedby(A, N), publication(P, N).;false;false
6;true,false,true;tempadvisedby(H, G).;false;false
6;false,false;tempadvisedby(A, K).;true;true
6;false,false,true;tempadvisedby(L, K), publication(M, L).;false;false
6;true,false;advisedby(A, G).;true;false
6;true;tempadvisedby(A, F).;false;true
7;;inphase(A, B) :- ta(C, A, D).;true;true
7;false,true,false;projectmember(S, L), publication(T, A).;false;false
7;false;advisedby(A, L), tempadvisedby(M, L).;true;false
7;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
7;false,true;ta(N, M, P), publication(Q, L).;true;true
7;true,false;ta(C, G, H), advisedby(G, I).;true;false
7;false,true,true;publication(R, M).;false;false
7;true;ta(C, E, D), advisedby(E, F).;false;true
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;true,true;ta(E, A, F).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false,true;advisedby(P, N), publication(Q, P).;false;false
8;false,false,false;publication(R, A).;false;false
8;false,false;ta(L, A, M), advisedby(A, N).;true;true
8;true;publication(C, D).;true;false
8;false,true;advisedby(I, G), ta(J, I, K).;false;false
9;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
9;false;tempadvisedby(A, E).;true;true
9;false,false,true;advisedby(L, J), publication(K, L).;false;false
9;false,false,false;advisedby(A, M), tempadvisedby(N, M).;false;false
9;false,false;advisedby(A, J), publication(K, J).;true;true
9;true;publication(C, D).;false;false
9;false,true,true;ta(H, F, I).;false;false
9;false,true;tempadvisedby(F, E), publication(G, F).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.22604488330790526;  // std dev = 1,802, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.45675549767123047;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.13690342743409517;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.1302622000414589;  // std dev = 1,487, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3119387228258979;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.13612058479727152;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.24084717461085145;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then return -0.12089173852433242;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.05370562954480235;  // std dev = 1,208, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.18065580086084737;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, F) )
%   | then return -0.11393131117041279;  // std dev = 2,28e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.14764410433093975;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return -0.10292581718110562;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.333495
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 0.872 seconds
Total inference time: 0.654 seconds
AUC ROC: 0.885714


Results scoring model
   AUC ROC   = 0.958333
   AUC PR    = 0.923077
   CLL	      = -0.223737
   Precision = 0.923077 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.96


Total scoring time: 0.485 seconds
Parameter learned model CLL: -0.223737


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, F)', 'true': 'workedunder(C, D)', 'false,true': 'workedunder(E, G)'}, {'true,true': [0.961, 1, 12], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, E)', 'false,true': 'workedunder(D, F)'}, {'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [1.86e-09, 11, 0], 'true': [0.266, 1, 12]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.802, 12, 12]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, A)', 'false,false': 'movie(F, G)', 'true': 'workedunder(C, D)'}, {'true,true': [0.961, 1, 12], 'false,false,true': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.487, 12, 12]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)'}, {'false,false': [1.86e-09, 11, 0], 'true': [0.266, 1, 12], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false': 'workedunder(E, F)'}, {'false,false,true': [0.0, 11, 0], 'true': [0.266, 1, 12], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.208, 12, 12]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(E, F)', 'true': 'workedunder(C, D)'}, {'true,true': [0.266, 1, 12], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.28e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, F)', 'true': 'workedunder(C, D)'}, {'true,true': [0.961, 1, 12], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.63e-09, 11, 0]}]]
[{'': [0.07100591715976314, -1.0092936587501423e-17], 'false': [-1.0092936587501423e-17, nan], 'false,true': [-1.0092936587501423e-17, nan], 'true': [0.07100591715976314, nan]}, {'': [0.07100591715976333, 2.523234146875356e-18], 'false': [2.523234146875356e-18, nan], 'false,true': [2.523234146875356e-18, nan]}, {'': [0.13533629047183346, nan]}, {'': [0.0710059171597634, -7.569702440626067e-18], 'false': [nan, -7.569702440626067e-18], 'false,false': [-7.569702440626067e-18, nan], 'true': [0.0710059171597634, nan]}, {'': [0.09210103133023939, nan]}, {'': [0.07100591715976323, 0.0], 'false': [nan, 0.0]}, {'': [0.07100591715976336, -5.046468293750712e-18], 'false': [nan, -5.046468293750712e-18], 'false,false': [-5.046468293750712e-18, nan]}, {'': [0.06075765223288233, nan]}, {'': [0.07100591715976333, 2.523234146875356e-18], 'false': [2.523234146875356e-18, nan], 'true': [0.07100591715976333, nan]}, {'': [0.07100591715976333, 7.569702440626067e-18], 'false': [7.569702440626067e-18, nan], 'true': [0.07100591715976333, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
1;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
5;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
8;;genre(A, B) :- workedunder(C, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.168 seconds
Total inference time: 0.555 seconds
AUC ROC: 0.885714


Results scoring model
   AUC ROC   = 0.958333
   AUC PR    = 0.923077
   CLL	      = -0.194242
   Precision = 0.923077 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.96


Total scoring time: 0.442 seconds
Refined model CLL: -0.194242


Refining iteration 2
********************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
1;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- actor(A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- actor(A).;true;true
5;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
7;;genre(A, B) :- actor(A).;true;true
8;;genre(A, B) :- workedunder(C, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.029 seconds
Total inference time: 0.536 seconds
AUC ROC: 0.885714


Results scoring model
   AUC ROC   = 0.958333
   AUC PR    = 0.923077
   CLL	      = -0.194242
   Precision = 0.923077 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.96


Total scoring time: 0.453 seconds
Refined model CLL: -0.194242


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 4.449 seconds
Total inference time: 0.555 seconds
AUC ROC: 0.885714
Total revision time: 4.449
Best scored revision CLL: -0.194242


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:20
{'Inference time': 0.555, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'CLL': -0.320018, 'Learning time': 4.449, 'AUC ROC': 0.885714, 'parameter': {'Inference time': 0.654, 'F1': 0.897436, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'CLL': -0.333495, 'Learning time': 0.872, 'AUC ROC': 0.885714, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

Starting fold 3

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos	 examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false,false;tempadvisedby(A, R), projectmember(S, R).;false;false
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;true;advisedby(A, F), publication(E, F).;false;true
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,true;advisedby(J, H), publication(I, J).;true;false
1;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
1;false;advisedby(A, G), publication(H, G).;true;true
1;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
1;false,false,false;publication(R, A).;false;false
1;false,false;tempadvisedby(A, N).;true;true
1;true;advisedby(A, F).;false;false
1;false,true,true;ta(J, A, K), ta(L, I, M).;false;false
1;false,true;advisedby(I, G), publication(H, I).;true;false
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false,false,false;tempadvisedby(A, R).;false;false
2;false,false;advisedby(A, N).;true;true
2;false,false,true;tempadvisedby(P, N), publication(Q, A).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;false;advisedby(A, L), projectmember(M, L).;false;true
2;true;ta(C, E, D), advisedby(E, F).;false;true
3;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
3;false;publication(I, A), advisedby(A, J).;true;true
3;false,false,false;publication(N, A), tempadvisedby(A, P).;false;false
3;false,false;tempadvisedby(A, L), projectmember(M, L).;false;true
3;true;advisedby(A, F).;false;true
3;true,false;publication(E, G), tempadvisedby(H, G).;false;false
3;false,true,true;publication(I, K).;false;false
3;false,true;tempadvisedby(K, J).;true;false
4;;inphase(A, B) :- ta(C, A, D).;true;true
4;true,true;sameperson(A, E).;false;false
4;false;advisedby(A, L), projectmember(M, L).;false;true
4;false,false,false;tempadvisedby(A, Q).;false;false
4;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
4;false,false;publication(N, A), tempadvisedby(A, P).;false;true
4;true,false;ta(C, G, H), advisedby(G, I).;true;false
4;true;ta(C, E, D), advisedby(E, F).;true;true
5;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
5;true,true;ta(H, G, E).;false;false
5;false;publication(I, A), advisedby(A, J).;true;true
5;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
5;false,false;tempadvisedby(A, N).;false;true
5;true;advisedby(A, F), tempadvisedby(G, F).;true;false
5;false,true,true;advisedby(K, J), ta(L, K, M).;false;false
5;false,true;publication(I, J).;true;false
6;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
6;false;publication(I, A), advisedby(A, J).;false;true
6;false,false,false;advisedby(A, N), publication(P, N).;false;false
6;true,false,true;tempadvisedby(H, G).;false;false
6;false,false;tempadvisedby(A, K).;true;true
6;false,false,true;tempadvisedby(L, K), publication(M, L).;false;false
6;true,false;advisedby(A, G).;true;false
6;true;tempadvisedby(A, F).;false;true
7;;inphase(A, B) :- ta(C, A, D).;true;true
7;false,true,false;projectmember(S, L), publication(T, A).;false;false
7;false;advisedby(A, L), tempadvisedby(M, L).;true;false
7;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
7;false,true;ta(N, M, P), publication(Q, L).;true;true
7;true,false;ta(C, G, H), advisedby(G, I).;true;false
7;false,true,true;publication(R, M).;false;false
7;true;ta(C, E, D), advisedby(E, F).;false;true
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;true,true;ta(E, A, F).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false,true;advisedby(P, N), publication(Q, P).;false;false
8;false,false,false;publication(R, A).;false;false
8;false,false;ta(L, A, M), advisedby(A, N).;true;true
8;true;publication(C, D).;true;false
8;false,true;advisedby(I, G), ta(J, I, K).;false;false
9;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
9;false;tempadvisedby(A, E).;true;true
9;false,false,true;advisedby(L, J), publication(K, L).;false;false
9;false,false,false;advisedby(A, M), tempadvisedby(N, M).;false;false
9;false,false;advisedby(A, J), publication(K, J).;true;true
9;true;publication(C, D).;false;false
9;false,true,true;ta(H, F, I).;false;false
9;false,true;tempadvisedby(F, E), publication(G, F).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.23976942954603;  // std dev = 2,646, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.34003398980794736;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.13853322814260766;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.1411856477435625;  // std dev = 2,479, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.22211820217774172;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.13885007619607936;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.16679090165368063;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then return -0.12306459764977054;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.05378552849262927;  // std dev = 2,338, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.11311866307506709;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, F) )
%   | then return -0.11578113249409308;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.08648166800331543;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return -0.10444489604620853;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.295855
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.006 seconds
Total inference time: 0.658 seconds
AUC ROC: 0.965517


Results scoring model
   AUC ROC   = 0.805556
   AUC PR    = 0.72
   CLL	      = -0.449347
   Precision = 0.72 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.837209


Total scoring time: 0.582 seconds
Parameter learned model CLL: -0.449347


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, F)', 'true': 'workedunder(C, D)', 'false,true': 'workedunder(E, G)'}, {'true,true': [2.245, 7, 18], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, E)', 'false,true': 'workedunder(D, F)'}, {'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [1.86e-09, 11, 0], 'true': [0.449, 7, 18]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.646, 18, 18]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, A)', 'false,false': 'movie(F, G)', 'true': 'workedunder(C, D)'}, {'true,true': [2.245, 7, 18], 'false,false,true': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.479, 18, 18]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)'}, {'false,false': [1.86e-09, 11, 0], 'true': [0.449, 7, 18], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false': 'workedunder(E, F)'}, {'false,false,true': [5.27e-09, 11, 0], 'true': [0.449, 7, 18], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.338, 18, 18]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(E, F)', 'true': 'workedunder(C, D)'}, {'true,true': [0.449, 7, 18], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, F)', 'true': 'workedunder(C, D)'}, {'true,true': [2.245, 7, 18], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 11, 0]}]]
[{'': [0.2015999999999996, -1.0092936587501423e-17], 'false': [-1.0092936587501423e-17, nan], 'false,true': [-1.0092936587501423e-17, nan], 'true': [0.2015999999999996, nan]}, {'': [0.2016000000000001, 2.523234146875356e-18], 'false': [2.523234146875356e-18, nan], 'false,true': [2.523234146875356e-18, nan]}, {'': [0.1945443430451362, nan]}, {'': [0.20160000000000022, -5.046468293750712e-18], 'false': [nan, -5.046468293750712e-18], 'false,false': [-5.046468293750712e-18, nan], 'true': [0.20160000000000022, nan]}, {'': [0.1706658713149335, nan]}, {'': [0.20159999999999992, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18]}, {'': [0.2016, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false': [2.523234146875356e-18, nan]}, {'': [0.15185923235937138, nan]}, {'': [0.20159999999999997, -5.046468293750712e-18], 'false': [-5.046468293750712e-18, nan], 'true': [0.20159999999999997, nan]}, {'': [0.20160000000000008, -2.523234146875356e-18], 'false': [-2.523234146875356e-18, nan], 'true': [0.20160000000000008, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
1;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
5;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
8;;genre(A, B) :- workedunder(C, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.231 seconds
Total inference time: 0.545 seconds
AUC ROC: 0.965517


Results scoring model
   AUC ROC   = 0.805556
   AUC PR    = 0.72
   CLL	      = -0.43418
   Precision = 0.72 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.837209


Total scoring time: 0.463 seconds
Refined model CLL: -0.43418


Refining iteration 2
********************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
1;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- actor(A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- actor(A).;true;true
5;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
7;;genre(A, B) :- actor(A).;true;true
8;;genre(A, B) :- workedunder(C, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.066 seconds
Total inference time: 0.522 seconds
AUC ROC: 0.965517


Results scoring model
   AUC ROC   = 0.805556
   AUC PR    = 0.72
   CLL	      = -0.43418
   Precision = 0.72 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.837209


Total scoring time: 0.518 seconds
Refined model CLL: -0.43418


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 4.866 seconds
Total inference time: 0.545 seconds
AUC ROC: 0.965517
Total revision time: 4.866
Best scored revision CLL: -0.43418


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:28
{'Inference time': 0.545, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'CLL': -0.264596, 'Learning time': 4.866, 'AUC ROC': 0.965517, 'parameter': {'Inference time': 0.658, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'CLL': -0.295855, 'Learning time': 1.006, 'AUC ROC': 0.965517, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

Starting fold 4

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos	 examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false,false;tempadvisedby(A, R), projectmember(S, R).;false;false
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;true;advisedby(A, F), publication(E, F).;false;true
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,true;advisedby(J, H), publication(I, J).;true;false
1;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
1;false;advisedby(A, G), publication(H, G).;true;true
1;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
1;false,false,false;publication(R, A).;false;false
1;false,false;tempadvisedby(A, N).;true;true
1;true;advisedby(A, F).;false;false
1;false,true,true;ta(J, A, K), ta(L, I, M).;false;false
1;false,true;advisedby(I, G), publication(H, I).;true;false
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false,false,false;tempadvisedby(A, R).;false;false
2;false,false;advisedby(A, N).;true;true
2;false,false,true;tempadvisedby(P, N), publication(Q, A).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;false;advisedby(A, L), projectmember(M, L).;false;true
2;true;ta(C, E, D), advisedby(E, F).;false;true
3;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
3;false;publication(I, A), advisedby(A, J).;true;true
3;false,false,false;publication(N, A), tempadvisedby(A, P).;false;false
3;false,false;tempadvisedby(A, L), projectmember(M, L).;false;true
3;true;advisedby(A, F).;false;true
3;true,false;publication(E, G), tempadvisedby(H, G).;false;false
3;false,true,true;publication(I, K).;false;false
3;false,true;tempadvisedby(K, J).;true;false
4;;inphase(A, B) :- ta(C, A, D).;true;true
4;true,true;sameperson(A, E).;false;false
4;false;advisedby(A, L), projectmember(M, L).;false;true
4;false,false,false;tempadvisedby(A, Q).;false;false
4;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
4;false,false;publication(N, A), tempadvisedby(A, P).;false;true
4;true,false;ta(C, G, H), advisedby(G, I).;true;false
4;true;ta(C, E, D), advisedby(E, F).;true;true
5;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
5;true,true;ta(H, G, E).;false;false
5;false;publication(I, A), advisedby(A, J).;true;true
5;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
5;false,false;tempadvisedby(A, N).;false;true
5;true;advisedby(A, F), tempadvisedby(G, F).;true;false
5;false,true,true;advisedby(K, J), ta(L, K, M).;false;false
5;false,true;publication(I, J).;true;false
6;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
6;false;publication(I, A), advisedby(A, J).;false;true
6;false,false,false;advisedby(A, N), publication(P, N).;false;false
6;true,false,true;tempadvisedby(H, G).;false;false
6;false,false;tempadvisedby(A, K).;true;true
6;false,false,true;tempadvisedby(L, K), publication(M, L).;false;false
6;true,false;advisedby(A, G).;true;false
6;true;tempadvisedby(A, F).;false;true
7;;inphase(A, B) :- ta(C, A, D).;true;true
7;false,true,false;projectmember(S, L), publication(T, A).;false;false
7;false;advisedby(A, L), tempadvisedby(M, L).;true;false
7;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
7;false,true;ta(N, M, P), publication(Q, L).;true;true
7;true,false;ta(C, G, H), advisedby(G, I).;true;false
7;false,true,true;publication(R, M).;false;false
7;true;ta(C, E, D), advisedby(E, F).;false;true
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;true,true;ta(E, A, F).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false,true;advisedby(P, N), publication(Q, P).;false;false
8;false,false,false;publication(R, A).;false;false
8;false,false;ta(L, A, M), advisedby(A, N).;true;true
8;true;publication(C, D).;true;false
8;false,true;advisedby(I, G), ta(J, I, K).;false;false
9;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
9;false;tempadvisedby(A, E).;true;true
9;false,false,true;advisedby(L, J), publication(K, L).;false;false
9;false,false,false;advisedby(A, M), tempadvisedby(N, M).;false;false
9;false,false;advisedby(A, J), publication(K, J).;true;true
9;true;publication(C, D).;false;false
9;false,true,true;ta(H, F, I).;false;false
9;false,true;tempadvisedby(F, E), publication(G, F).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5580193346218546;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.23409923944267316;  // std dev = 1,173, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.38655270713914897;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.13785792350709075;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.13589411097609744;  // std dev = 1,058, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2569284345764438;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.13762468421756882;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.19421163996410945;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then return -0.12209006905555404;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.05196735767083174;  // std dev = 0,962, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.13719447965230375;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, F) )
%   | then return -0.11477098554717098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.10724812612711195;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return -0.10361585853229892;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.324815
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.746 seconds
Total inference time: 0.665 seconds
AUC ROC: 0.906977


Results scoring model
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.361795
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total scoring time: 0.436 seconds
Parameter learned model CLL: -0.361795


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, F)', 'true': 'workedunder(C, D)', 'false,true': 'workedunder(E, G)'}, {'true,true': [0.894, 1, 4], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, E)', 'false,true': 'workedunder(D, F)'}, {'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true': [0.4, 1, 4]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.173, 4, 4]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, A)', 'false,false': 'movie(F, G)', 'true': 'workedunder(C, D)'}, {'true,true': [0.894, 1, 4], 'false,false,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.058, 4, 4]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)'}, {'false,false': [0.0, 3, 0], 'true': [0.4, 1, 4], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false': 'workedunder(E, F)'}, {'false,false,true': [3.73e-09, 3, 0], 'true': [0.4, 1, 4], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.962, 4, 4]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(E, F)', 'true': 'workedunder(C, D)'}, {'true,true': [0.4, 1, 4], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.86e-09, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, F)', 'true': 'workedunder(C, D)'}, {'true,true': [0.894, 1, 4], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0]}]]
[{'': [0.15999999999999986, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan], 'true': [0.15999999999999986, nan]}, {'': [0.16, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan]}, {'': [0.17200226808539504, nan]}, {'': [0.15999999999999998, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan], 'true': [0.15999999999999998, nan]}, {'': [0.13999098467868984, nan]}, {'': [0.16000000000000003, -2.3129646346357427e-18], 'false': [nan, -2.3129646346357427e-18]}, {'': [0.15999999999999998, 4.625929269271485e-18], 'false': [nan, 4.625929269271485e-18], 'false,false': [4.625929269271485e-18, nan]}, {'': [0.1156616194902351, nan]}, {'': [0.15999999999999998, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan], 'true': [0.15999999999999998, nan]}, {'': [0.16, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan], 'true': [0.16, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
1;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
5;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
8;;genre(A, B) :- workedunder(C, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.732 seconds
Total inference time: 0.525 seconds
AUC ROC: 0.906977


Results scoring model
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.341891
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total scoring time: 0.409 seconds
Refined model CLL: -0.341891


Refining iteration 2
********************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
1;;genre(A, B) :- workedunder(C, A).;true;true
2;;genre(A, B) :- actor(A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
4;;genre(A, B) :- actor(A).;true;true
5;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
7;;genre(A, B) :- actor(A).;true;true
8;;genre(A, B) :- workedunder(C, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.57 seconds
Total inference time: 0.533 seconds
AUC ROC: 0.906977


Results scoring model
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.341891
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total scoring time: 0.411 seconds
Refined model CLL: -0.341891


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 3.304 seconds
Total inference time: 0.525 seconds
AUC ROC: 0.906977
Total revision time: 3.304
Best scored revision CLL: -0.341891


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:34
{'Inference time': 0.525, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'CLL': -0.300536, 'Learning time': 3.304, 'AUC ROC': 0.906977, 'parameter': {'Inference time': 0.665, 'F1': 0.914894, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'CLL': -0.324815, 'Learning time': 0.746, 'AUC ROC': 0.906977, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

Starting fold 5

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos	 examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
0;false;advisedby(A, H), publication(I, H).;true;true
0;false,false,false;tempadvisedby(A, R), projectmember(S, R).;false;false
0;false,false;advisedby(A, P), projectmember(Q, P).;false;true
0;true;advisedby(A, F), publication(E, F).;false;true
0;true,false;tempadvisedby(A, G), publication(E, G).;false;false
0;false,true,true;ta(K, J, L), ta(M, A, N).;false;false
0;false,true;advisedby(J, H), publication(I, J).;true;false
1;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
1;false;advisedby(A, G), publication(H, G).;true;true
1;false,false,true;tempadvisedby(P, N), publication(Q, P).;false;false
1;false,false,false;publication(R, A).;false;false
1;false,false;tempadvisedby(A, N).;true;true
1;true;advisedby(A, F).;false;false
1;false,true,true;ta(J, A, K), ta(L, I, M).;false;false
1;false,true;advisedby(I, G), publication(H, I).;true;false
2;;inphase(A, B) :- ta(C, A, D).;true;true
2;true,false,false;tempadvisedby(A, J), publication(K, J).;false;false
2;false,false,false;tempadvisedby(A, R).;false;false
2;false,false;advisedby(A, N).;true;true
2;false,false,true;tempadvisedby(P, N), publication(Q, A).;false;false
2;true,false;ta(C, G, H), advisedby(G, I).;false;true
2;false;advisedby(A, L), projectmember(M, L).;false;true
2;true;ta(C, E, D), advisedby(E, F).;false;true
3;;inphase(A, B) :- ta(C, A, D), publication(E, A).;true;true
3;false;publication(I, A), advisedby(A, J).;true;true
3;false,false,false;publication(N, A), tempadvisedby(A, P).;false;false
3;false,false;tempadvisedby(A, L), projectmember(M, L).;false;true
3;true;advisedby(A, F).;false;true
3;true,false;publication(E, G), tempadvisedby(H, G).;false;false
3;false,true,true;publication(I, K).;false;false
3;false,true;tempadvisedby(K, J).;true;false
4;;inphase(A, B) :- ta(C, A, D).;true;true
4;true,true;sameperson(A, E).;false;false
4;false;advisedby(A, L), projectmember(M, L).;false;true
4;false,false,false;tempadvisedby(A, Q).;false;false
4;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
4;false,false;publication(N, A), tempadvisedby(A, P).;false;true
4;true,false;ta(C, G, H), advisedby(G, I).;true;false
4;true;ta(C, E, D), advisedby(E, F).;true;true
5;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
5;true,true;ta(H, G, E).;false;false
5;false;publication(I, A), advisedby(A, J).;true;true
5;false,false,false;advisedby(A, P), tempadvisedby(Q, P).;false;false
5;false,false;tempadvisedby(A, N).;false;true
5;true;advisedby(A, F), tempadvisedby(G, F).;true;false
5;false,true,true;advisedby(K, J), ta(L, K, M).;false;false
5;false,true;publication(I, J).;true;false
6;;inphase(A, B) :- publication(C, A), ta(D, A, E).;true;true
6;false;publication(I, A), advisedby(A, J).;false;true
6;false,false,false;advisedby(A, N), publication(P, N).;false;false
6;true,false,true;tempadvisedby(H, G).;false;false
6;false,false;tempadvisedby(A, K).;true;true
6;false,false,true;tempadvisedby(L, K), publication(M, L).;false;false
6;true,false;advisedby(A, G).;true;false
6;true;tempadvisedby(A, F).;false;true
7;;inphase(A, B) :- ta(C, A, D).;true;true
7;false,true,false;projectmember(S, L), publication(T, A).;false;false
7;false;advisedby(A, L), tempadvisedby(M, L).;true;false
7;true,false,true;tempadvisedby(J, I), publication(K, J).;false;false
7;false,true;ta(N, M, P), publication(Q, L).;true;true
7;true,false;ta(C, G, H), advisedby(G, I).;true;false
7;false,true,true;publication(R, M).;false;false
7;true;ta(C, E, D), advisedby(E, F).;false;true
8;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
8;true,true;ta(E, A, F).;false;false
8;false;advisedby(A, G), projectmember(H, G).;true;true
8;false,false,true;advisedby(P, N), publication(Q, P).;false;false
8;false,false,false;publication(R, A).;false;false
8;false,false;ta(L, A, M), advisedby(A, N).;true;true
8;true;publication(C, D).;true;false
8;false,true;advisedby(I, G), ta(J, I, K).;false;false
9;;inphase(A, B) :- publication(C, A), tempadvisedby(A, D).;true;true
9;false;tempadvisedby(A, E).;true;true
9;false,false,true;advisedby(L, J), publication(K, L).;false;false
9;false,false,false;advisedby(A, M), tempadvisedby(N, M).;false;false
9;false,false;advisedby(A, J), publication(K, J).;true;true
9;true;publication(C, D).;false;false
9;false,true,true;ta(H, F, I).;false;false
9;false,true;tempadvisedby(F, E), publication(G, F).;true;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.22152502927633905;  // std dev = 0,668, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.5002131558403854;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.13637023346435792;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.1283000784751715;  // std dev = 0,499, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3480411762363753;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.13542257003772976;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.27374547506582114;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, F) )
%   | | then return -0.12033481306242612;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.057314207518385736;  // std dev = 0,331, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.2130292720161553;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, F) )
%   | then return -0.11382179867182231;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.1794923358166991;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, F) )
%   | then return -0.10283575895454694;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.310033
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.697 seconds
Total inference time: 0.663 seconds
AUC ROC: 0.9


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.133156
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.433 seconds
Parameter learned model CLL: -0.133156


Structure after Parameter Learning
[['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, F)', 'true': 'workedunder(C, D)', 'false,true': 'workedunder(E, G)'}, {'true,true': [0.0, 0, 2], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, E)', 'false,true': 'workedunder(D, F)'}, {'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.668, 2, 2]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, A)', 'false,false': 'movie(F, G)', 'true': 'workedunder(C, D)'}, {'true,true': [0.0, 0, 2], 'false,false,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.499, 2, 2]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)'}, {'false,false': [0.0, 2, 0], 'true': [0.0, 0, 2], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false': 'workedunder(E, F)'}, {'false,false,true': [0.0, 2, 0], 'true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.331, 2, 2]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(E, F)', 'true': 'workedunder(C, D)'}, {'true,true': [0.0, 0, 2], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(E, F)', 'true': 'workedunder(C, D)'}, {'true,true': [0.0, 0, 2], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0]}]]
[{'': [0.0, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan]}, {'': [0.11145008534151418, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan], 'true': [0.0, nan]}, {'': [0.062195810698099915, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan]}, {'': [0.02738416905017063, nan]}, {'': [0.0, 0.0], 'false': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'false': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;genre(A, B) :- workedunder(C, A).;true;true
1;;genre(A, B) :- workedunder(C, A).;true;true
3;;genre(A, B) :- workedunder(C, A).;true;true
5;;genre(A, B) :- workedunder(C, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
8;;genre(A, B) :- workedunder(C, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,334, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,260, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,170, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.300991
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.61 seconds
Total inference time: 0.53 seconds
AUC ROC: 0.9


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.135492
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.445 seconds
Refined model CLL: -0.135492


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.310033
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 2.1849999999999996 seconds
Total inference time: 0.663 seconds
AUC ROC: 0.9
Total revision time: 2.1849999999999996
Best scored revision CLL: -0.133156


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:38
{'Inference time': 0.663, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'CLL': -0.310033, 'Learning time': 2.1849999999999996, 'AUC ROC': 0.9, 'parameter': {'Inference time': 0.663, 'F1': 0.909091, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'CLL': -0.310033, 'Learning time': 0.697, 'AUC ROC': 0.9, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

