Starting experiment #1 for 9_imdb_cora

Start learning from source dataset

Source train facts examples: 696
Source train pos examples: 382
Source train neg examples: 382

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048804;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839202;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360675;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783649;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926053;  // std dev = 1,13e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 9,19e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109143;  // std dev = 2,98e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333703;  // std dev = 8,56e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420307;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202618;  // std dev = 4,71e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */


Starting fold 1

Target train facts examples: 7254
Target train pos examples: 209
Target train neg examples: 16

Target test facts examples: 34492
Target test pos	 examples: 603
Target test neg examples: 58

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.7702368471874215;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.6489578875773111;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.5061552205141917;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.38079139171230814;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.28818643066895006;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.22332807994132664;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253548;  // std dev = 5,77e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.17757217457833163;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.1444131226973962;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.11965698879053165;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1340070300080108;  // std dev = 4,21e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else return 0.10066260786997791;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */


Results
   AUC ROC   = 0.608624
   AUC PR    = 0.948609
   CLL	      = -0.314973
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 1.328 seconds
Total inference time: 1.648 seconds
AUC ROC: 0.608624


Results scoring model
   AUC ROC   = 0.602871
   AUC PR    = 0.957477
   CLL	      = -0.289475
   Precision = 0.928889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.963134


Total scoring time: 0.787 seconds
Parameter learned model CLL: -0.289475


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [2.31e-07, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [5.77e-08, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [3.82, 16, 166], 'true': [4.21e-08, 0, 43]}]]
[{'': [1.2393187251629655e-15, 0.08018355271103159]}, {'': [-9.914549801303723e-16, 0.08018355271102807]}, {'': [-4.131062417209885e-17, 0.0801835527110287]}, {'': [-3.7179561754888965e-16, 0.08018355271102633]}, {'': [0.0, 0.08018355271102497]}, {'': [-2.0655312086049424e-17, 0.08018355271102559]}, {'': [7.745742032268534e-17, 0.0801835527110255]}, {'': [-7.745742032268534e-17, 0.08018355271102547]}, {'': [-4.6474452193611206e-17, 0.08018355271102527]}, {'': [4.131062417209885e-17, 0.08018355271102547]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
1;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
2;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
3;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
4;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
5;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
6;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
7;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
8;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
9;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5724346493852267;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.8581489350995112;  // std dev = 4,62e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.7733921696315487;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.48382654410150666;  // std dev = 3,364, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.6125454330646455;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3873713241645019;  // std dev = 3,361, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.5553664367462846;  // std dev = 5,16e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.5553664367462834;  // std dev = 4,38e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.46144645242121607;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29734178015201124;  // std dev = 3,359, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.4175135841583103;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.4175135841583097;  // std dev = 2,73e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( author(F, A), title(F, E) )
%   | | then return 0.40198324117909096;  // std dev = 0,141, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.217319787242026;  // std dev = 3,340, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.32071184716014955;  // std dev = 2,58e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.3207118471601503;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( author(F, A), title(F, E) )
%   | | then return 0.31130421525395197;  // std dev = 0,123, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.16354044529538966;  // std dev = 3,341, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.25517224256948956;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.2551722425694897;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253548;  // std dev = 5,77e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.13417779333960259;  // std dev = 0,433, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else return 0.20732778785777586;  // std dev = 0,029, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.2097577156325356;  // std dev = 1,49e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.25388370472124044;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09193533468381714;  // std dev = 3,343, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.1753202673124098;  // std dev = 0,026, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.1770964977452773;  // std dev = 5,16e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( author(F, B), title(F, E) )
%   | | then return 0.22741935163834337;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.0693768699889493;  // std dev = 3,341, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.1514003955271001;  // std dev = 0,023, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.1527438580936713;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1340070300080108;  // std dev = 4,21e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.19761533320115465;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0532156161201769;  // std dev = 3,340, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.13296100211626777;  // std dev = 0,020, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.13400703000801087;  // std dev = 6,83e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */


Results
   AUC ROC   = 0.572883
   AUC PR    = 0.938351
   CLL	      = -0.367038
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 5.242 seconds
Total inference time: 2.62 seconds
AUC ROC: 0.572883


Results scoring model
   AUC ROC   = 0.913876
   AUC PR    = 0.993341
   CLL	      = -0.242993
   Precision = 0.928889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.963134


Total scoring time: 0.937 seconds
Refined model CLL: -0.242993


Refining iteration 2
********************************
Candidate for revision
0;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
0;false;haswordauthor(A, D), haswordtitle(E, D).;true;true
0;false,true,true;author(F, B), title(F, E).;true;true
0;false,true;haswordauthor(B, D).;true;true
1;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
1;false;haswordauthor(A, D), haswordtitle(E, D).;true;true
1;false,true,true;author(F, A), title(F, E).;true;true
1;false,true;haswordauthor(B, D).;true;true
2;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
2;false;haswordauthor(B, D), haswordtitle(E, D).;true;true
2;false,true,true;author(F, B), title(F, E).;true;true
2;false,true;haswordauthor(A, D).;true;true
3;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
3;false;haswordauthor(A, D), haswordtitle(E, D).;true;true
3;false,true,true;author(F, B), title(F, E).;true;true
3;false,true;haswordauthor(B, D).;true;true
4;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
4;false,true,false;haswordauthor(B, D).;true;true
4;false;haswordauthor(A, D), haswordtitle(E, D).;true;true
4;false,true;author(F, A), title(F, E).;true;true
5;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
5;false,true,false;haswordauthor(B, D).;true;true
5;false;haswordauthor(A, D), haswordtitle(E, D).;true;true
5;false,true;author(F, A), title(F, E).;true;true
6;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
6;false;haswordauthor(A, D), haswordtitle(E, D).;true;true
6;false,true;haswordauthor(B, D).;true;true
7;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
7;false;haswordauthor(A, D), haswordtitle(E, D).;true;true
7;false,true,true;author(F, A), title(F, E).;true;true
7;false,true;haswordauthor(B, D).;true;true
8;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
8;false,true,false;haswordauthor(B, D).;true;true
8;false;haswordauthor(A, D), haswordtitle(E, D).;true;true
8;false,true;author(F, B), title(F, E).;true;true
9;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
9;false;haswordauthor(A, D), haswordtitle(E, D).;true;true
9;false,true,true;author(F, A), title(F, E).;true;true
9;false,true;haswordauthor(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5724346493852267;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.8581489350995112;  // std dev = 4,62e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.7733921696315487;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.48382654410150666;  // std dev = 3,364, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.555366436746284;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.6125454330646455;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3873713241645019;  // std dev = 3,361, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.5553664367462846;  // std dev = 5,16e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.5553664367462834;  // std dev = 4,38e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.46144645242121607;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29734178015201124;  // std dev = 3,359, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.4175135841583103;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.4175135841583097;  // std dev = 2,73e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601494;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( author(F, A), title(F, E) )
%   | | then return 0.40198324117909096;  // std dev = 0,141, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.217319787242026;  // std dev = 3,340, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.32071184716014955;  // std dev = 2,58e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.3207118471601503;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( author(F, A), title(F, E) )
%   | | then return 0.31130421525395197;  // std dev = 0,123, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.16354044529538966;  // std dev = 3,341, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.25517224256948956;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.2551722425694897;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253548;  // std dev = 5,77e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.13417779333960259;  // std dev = 0,433, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else return 0.20732778785777586;  // std dev = 0,029, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.2097577156325356;  // std dev = 1,49e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.17709649774527753;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.25388370472124044;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09193533468381714;  // std dev = 3,343, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.1753202673124098;  // std dev = 0,026, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.1770964977452773;  // std dev = 5,16e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( author(F, B), title(F, E) )
%   | | then return 0.22741935163834337;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.0693768699889493;  // std dev = 3,341, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.1514003955271001;  // std dev = 0,023, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.1527438580936713;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1340070300080108;  // std dev = 4,21e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.19761533320115465;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0532156161201769;  // std dev = 3,340, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.13296100211626777;  // std dev = 0,020, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.13400703000801087;  // std dev = 6,83e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */


Results
   AUC ROC   = 0.572883
   AUC PR    = 0.938351
   CLL	      = -0.367038
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 2.198 seconds
Total inference time: 2.55 seconds
AUC ROC: 0.572883


Results scoring model
   AUC ROC   = 0.913876
   AUC PR    = 0.993341
   CLL	      = -0.242993
   Precision = 0.928889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.963134


Total scoring time: 0.956 seconds
Refined model CLL: -0.242993


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.572883
   AUC PR    = 0.938351
   CLL	      = -0.367038
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 11.448 seconds
Total inference time: 2.62 seconds
AUC ROC: 0.572883
Total revision time: 11.448
Best scored revision CLL: -0.242993


Dataset: 9_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:15:28
{'Inference time': 2.62, 'F1': 0.954114, 'Precision': [0.912254, 0.5], 'AUC PR': 0.938351, 'CLL': -0.367038, 'Learning time': 11.448, 'AUC ROC': 0.572883, 'parameter': {'Inference time': 1.648, 'F1': 0.954114, 'Precision': [0.912254, 0.5], 'AUC PR': 0.948609, 'CLL': -0.314973, 'Learning time': 1.328, 'AUC ROC': 0.608624, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

Starting fold 2

Target train facts examples: 8894
Target train pos examples: 122
Target train neg examples: 20

Target test facts examples: 32852
Target test pos	 examples: 690
Target test neg examples: 54

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7966104735610489;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6701860162815748;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.521000173904994;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3916498696084713;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2975214947349439;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23226801019815924;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18647488053184677;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15334928569517428;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.12860778205329093;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1095875440488626;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.62963
   AUC PR    = 0.945205
   CLL	      = -0.258457
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 1.241 seconds
Total inference time: 1.334 seconds
AUC ROC: 0.62963


Results scoring model
   AUC ROC   = 0.8
   AUC PR    = 0.938462
   CLL	      = -0.255744
   Precision = 0.938462 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.968254


Total scoring time: 0.725 seconds
Parameter learned model CLL: -0.255744


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [9.13e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.89e-09, 12, 0], 'true': [2.74, 8, 122]}]]
[{'': [0.05775147928994478, -1.1564823173178714e-17]}, {'': [0.05775147928993674, 2.3129646346357427e-18]}, {'': [0.057751479289940406, 6.938893903907228e-18]}, {'': [0.057751479289941336, 0.0]}, {'': [0.05775147928994032, 2.3129646346357427e-18]}, {'': [0.05775147928994095, 2.3129646346357427e-18]}, {'': [0.05775147928994094, 1.1564823173178713e-18]}, {'': [0.057751479289940774, 1.1564823173178713e-18]}, {'': [0.057751479289940844, 5.782411586589357e-19]}, {'': [0.05775147928994075, 2.8912057932946786e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2780496975590654;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21383763039487122;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1682663346557149;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1351817638661356;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.11050708250003509;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13400703000801098;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.09798910595951871;  // std dev = 0,297, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.573001
   AUC PR    = 0.935755
   CLL	      = -0.253523
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 3.03 seconds
Total inference time: 1.953 seconds
AUC ROC: 0.573001


Results scoring model
   AUC ROC   = 0.901639
   AUC PR    = 0.981201
   CLL	      = -0.244464
   Precision = 0.938462 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.968254


Total scoring time: 0.822 seconds
Refined model CLL: -0.244464


Refining iteration 2
********************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
0;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
0;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
1;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true
2;true;haswordauthor(B, D), haswordvenue(E, D).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
3;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
4;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
5;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true
6;true;haswordauthor(B, D), haswordvenue(E, D).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
7;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
8;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;true;haswordauthor(A, D), haswordvenue(E, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2780496975590654;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21383763039487122;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1682663346557149;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1351817638661356;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.11050708250003509;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13400703000801098;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09163300171566717;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.573001
   AUC PR    = 0.935755
   CLL	      = -0.25356
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 2.016 seconds
Total inference time: 1.904 seconds
AUC ROC: 0.573001


Results scoring model
   AUC ROC   = 0.901639
   AUC PR    = 0.981201
   CLL	      = -0.244328
   Precision = 0.938462 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.968254


Total scoring time: 0.809 seconds
Refined model CLL: -0.244328


Refining iteration 3
********************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
0;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
0;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
1;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true
2;true;haswordauthor(B, D), haswordvenue(E, D).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
3;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
4;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
5;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;true,false;haswordauthor(A, F), haswordvenue(G, F).;true;true
6;true;haswordauthor(B, D), haswordvenue(E, D).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
7;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
8;true;haswordauthor(A, D), haswordvenue(E, D).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;true,false;haswordauthor(B, F), haswordvenue(G, F).;true;true
9;true;haswordauthor(A, D), haswordvenue(E, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2780496975590654;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21383763039487122;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1682663346557149;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1351817638661356;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.11050708250003509;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13400703000801098;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09163300171566717;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.573001
   AUC PR    = 0.935755
   CLL	      = -0.25356
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 1.955 seconds
Total inference time: 1.915 seconds
AUC ROC: 0.573001


Results scoring model
   AUC ROC   = 0.901639
   AUC PR    = 0.981201
   CLL	      = -0.244328
   Precision = 0.938462 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.968254


Total scoring time: 0.832 seconds
Refined model CLL: -0.244328


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.573001
   AUC PR    = 0.935755
   CLL	      = -0.25356
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 11.430000000000001 seconds
Total inference time: 1.904 seconds
AUC ROC: 0.573001
Total revision time: 11.430000000000001
Best scored revision CLL: -0.244328


Dataset: 9_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:15:48
{'Inference time': 1.904, 'F1': 0.971831, 'Precision': [0.945205, 0.5], 'AUC PR': 0.935755, 'CLL': -0.25356, 'Learning time': 11.430000000000001, 'AUC ROC': 0.573001, 'parameter': {'Inference time': 1.334, 'F1': 0.971831, 'Precision': [0.945205, 0.5], 'AUC PR': 0.945205, 'CLL': -0.258457, 'Learning time': 1.241, 'AUC ROC': 0.62963, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

Starting fold 3

Target train facts examples: 9155
Target train pos examples: 151
Target train neg examples: 4

Target test facts examples: 32591
Target test pos	 examples: 661
Target test neg examples: 70

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.8248156017661773;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.6928183180467439;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.5553664367462844;  // std dev = 9,42e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.5367928709789459;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.40340088328536944;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.30789442979240556;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.24240066496454704;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.1967000405732664;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.16371858628713246;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.13909109340224837;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.13400703000801115;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else return 0.12013771168374324;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */


Results
   AUC ROC   = 0.605144
   AUC PR    = 0.943016
   CLL	      = -0.319898
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 1.509 seconds
Total inference time: 1.718 seconds
AUC ROC: 0.605144


Results scoring model
   AUC ROC   = 0.615894
   AUC PR    = 0.985507
   CLL	      = -0.19125
   Precision = 0.974194 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986928


Total scoring time: 0.804 seconds
Parameter learned model CLL: -0.19125


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [2.38e-07, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [9.42e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [2.98e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [5.37e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [3.49e-08, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)'}, {'false': [1.966, 4, 116], 'true': [0.0, 0, 35]}]]
[{'': [1.6240976817373718e-15, 0.0322222222222256]}, {'': [-6.0903663065151445e-16, 0.03222222222222175]}, {'': [2.5376526277146434e-16, 0.03222222222222181]}, {'': [-2.791417890486108e-16, 0.03222222222222134]}, {'': [2.5376526277146434e-17, 0.03222222222222211]}, {'': [-1.2688263138573217e-17, 0.0322222222222219]}, {'': [8.247371040072592e-17, 0.032222222222222055]}, {'': [-5.075305255429287e-17, 0.03222222222222206]}, {'': [3.489272363107635e-17, 0.032222222222222235]}, {'': [0.0, 0.03222222222222224]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
1;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
2;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
3;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
4;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
5;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
6;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
7;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
8;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
9;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.7405018762759829;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.4368806042083894;  // std dev = 0,844, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6094189343461087;  // std dev = 0,894, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.6249475655895571;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.7194734122109542;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.5553664367462844;  // std dev = 9,42e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.35091215388782643;  // std dev = 0,850, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4800519526006239;  // std dev = 0,885, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.4893127157293236;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5553664367462836;  // std dev = 2,31e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.5395844394511811;  // std dev = 0,146, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3565247697502238;  // std dev = 1,314, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.35943237157836677;  // std dev = 0,217, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then return 0.36125856523156114;  // std dev = 0,210, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.42468673841964144;  // std dev = 0,190, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.143529566167629;  // std dev = 0,841, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.264209521110853;  // std dev = 0,843, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.33478844135461233;  // std dev = 0,048, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.2695808239558211;  // std dev = 1,315, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.3330888962386926;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.32194017042828443;  // std dev = 0,048, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.10701428502808201;  // std dev = 0,843, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20295202676836915;  // std dev = 0,844, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.26484557372100703;  // std dev = 0,042, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.20800740322456035;  // std dev = 1,316, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.26360085434069525;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2560187264918039;  // std dev = 0,042, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.07419420267420566;  // std dev = 0,859, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1616117777313477;  // std dev = 0,830, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.2166221387288629;  // std dev = 0,036, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.1641721117369911;  // std dev = 1,317, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.2156942391827608;  // std dev = 2,58e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.210360647537856;  // std dev = 0,037, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | | then return 0.2881161761779528;  // std dev = 0,217, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1299636596341389;  // std dev = 1,315, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.12634195605074117;  // std dev = 0,206, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then return 0.13000300603438844;  // std dev = 0,207, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.18266350685727178;  // std dev = 0,193, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.0018796275416997539;  // std dev = 0,827, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09604410496361733;  // std dev = 0,831, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.15698628373491227;  // std dev = 0,019, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.10661861358418918;  // std dev = 1,316, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.16342345661861124;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.15362032863082012;  // std dev = 0,054, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.13400703000801115;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return -0.005257744382850611;  // std dev = 0,844, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0820148663404485;  // std dev = 0,817, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.1373172608826119;  // std dev = 0,017, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.08866391752209722;  // std dev = 1,317, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.14229025223239433;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.13469621128462628;  // std dev = 0,049, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */


Results
   AUC ROC   = 0.575924
   AUC PR    = 0.943281
   CLL	      = -0.358228
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 5.152 seconds
Total inference time: 2.076 seconds
AUC ROC: 0.575924


Results scoring model
   AUC ROC   = 0.966887
   AUC PR    = 0.999113
   CLL	      = -0.17613
   Precision = 0.974194 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986928


Total scoring time: 0.938 seconds
Refined model CLL: -0.17613


Refining iteration 2
********************************
Candidate for revision
0;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
0;false;haswordauthor(A, D), haswordvenue(E, D).;true;true
0;false,false,true;haswordauthor(B, H).;true;true
0;false,false;haswordauthor(A, H), haswordtitle(I, H).;true;true
0;false,true;haswordauthor(B, D).;true;true
1;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
1;false;haswordauthor(A, D), haswordvenue(E, D).;true;true
1;false,false,true;haswordauthor(A, H).;true;true
1;false,false;haswordauthor(B, H), haswordtitle(I, H).;true;true
1;false,true;haswordauthor(B, D).;true;true
2;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
2;false;haswordauthor(A, D), haswordvenue(E, D).;true;true
2;false,false,true;haswordauthor(A, H).;true;true
2;false,false;haswordauthor(B, H), haswordtitle(I, H).;true;true
2;false,true;haswordauthor(B, D).;true;true
3;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
3;false;haswordauthor(A, D), haswordtitle(E, D).;true;true
3;false,false;haswordauthor(B, H), haswordtitle(I, H).;true;true
4;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
4;false;haswordauthor(B, D), haswordvenue(E, D).;true;true
4;false,false,true;haswordauthor(A, H).;true;true
4;false,false;haswordauthor(B, H), haswordtitle(I, H).;true;true
4;false,true;haswordauthor(A, D).;true;true
5;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
5;false;haswordauthor(B, D), haswordvenue(E, D).;true;true
5;false,false,true;haswordauthor(A, H).;true;true
5;false,false;haswordauthor(B, H), haswordtitle(I, H).;true;true
5;false,true;haswordauthor(A, D).;true;true
6;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
6;false;haswordauthor(B, D), haswordvenue(E, D).;true;true
6;false,false,true;haswordauthor(A, H).;true;true
6;false,false;haswordauthor(B, H), haswordtitle(I, H).;true;true
6;false,true;haswordauthor(A, D).;true;true
7;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
7;false;haswordauthor(B, D), haswordtitle(E, D).;true;true
7;false,false;haswordauthor(A, H), haswordtitle(I, H).;true;true
8;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
8;false;haswordauthor(A, D), haswordvenue(E, D).;true;true
8;false,false,true;haswordauthor(A, H).;true;true
8;false,false;haswordauthor(B, H), haswordtitle(I, H).;true;true
8;false,true;haswordauthor(B, D).;true;true
9;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
9;false;haswordauthor(A, D), haswordvenue(E, D).;true;true
9;false,false,true;haswordauthor(A, H).;true;true
9;false,false;haswordauthor(B, H), haswordtitle(I, H).;true;true
9;false,true;haswordauthor(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.7405018762759829;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.4368806042083894;  // std dev = 0,844, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6094189343461087;  // std dev = 0,894, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.6249475655895571;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.7194734122109542;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.5553664367462844;  // std dev = 9,42e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.35091215388782643;  // std dev = 0,850, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4800519526006239;  // std dev = 0,885, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.4893127157293236;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5553664367462836;  // std dev = 2,31e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | then if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.5395844394511811;  // std dev = 0,146, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3565247697502238;  // std dev = 1,314, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.35943237157836677;  // std dev = 0,217, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(B, J), haswordtitle(K, J) )
%   | | then return 0.36125856523156114;  // std dev = 0,210, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.42468673841964144;  // std dev = 0,190, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.143529566167629;  // std dev = 0,841, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.264209521110853;  // std dev = 0,843, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.33478844135461233;  // std dev = 0,048, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.2695808239558211;  // std dev = 1,315, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.3330888962386926;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.32194017042828443;  // std dev = 0,048, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.10701428502808201;  // std dev = 0,843, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20295202676836915;  // std dev = 0,844, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.26484557372100703;  // std dev = 0,042, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.20800740322456035;  // std dev = 1,316, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.26360085434069525;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2560187264918039;  // std dev = 0,042, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.07419420267420566;  // std dev = 0,859, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1616117777313477;  // std dev = 0,830, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.2166221387288629;  // std dev = 0,036, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.1641721117369911;  // std dev = 1,317, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.2156942391827608;  // std dev = 2,58e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.210360647537856;  // std dev = 0,037, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | then if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | | then return 0.2881161761779528;  // std dev = 0,217, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1299636596341389;  // std dev = 1,315, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.12634195605074117;  // std dev = 0,206, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(A, J), haswordtitle(K, J) )
%   | | then return 0.13000300603438844;  // std dev = 0,207, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.18266350685727178;  // std dev = 0,193, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.1527438580936709;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.0018796275416997539;  // std dev = 0,827, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09604410496361733;  // std dev = 0,831, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.15698628373491227;  // std dev = 0,019, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.10661861358418918;  // std dev = 1,316, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.16342345661861124;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.15362032863082012;  // std dev = 0,054, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.13400703000801115;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return -0.005257744382850611;  // std dev = 0,844, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0820148663404485;  // std dev = 0,817, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.1373172608826119;  // std dev = 0,017, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.08866391752209722;  // std dev = 1,317, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.14229025223239433;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.13469621128462628;  // std dev = 0,049, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */


Results
   AUC ROC   = 0.495461
   AUC PR    = 0.881716
   CLL	      = -0.360903
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 2.956 seconds
Total inference time: 2.09 seconds
AUC ROC: 0.495461


Results scoring model
   AUC ROC   = 0.966887
   AUC PR    = 0.999113
   CLL	      = -0.17613
   Precision = 0.974194 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986928


Total scoring time: 0.955 seconds
Refined model CLL: -0.17613


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.575924
   AUC PR    = 0.943281
   CLL	      = -0.358228
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 12.314 seconds
Total inference time: 2.076 seconds
AUC ROC: 0.575924
Total revision time: 12.314
Best scored revision CLL: -0.17613


Dataset: 9_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:16:08
{'Inference time': 2.076, 'F1': 0.949713, 'Precision': [0.904241, 0.5], 'AUC PR': 0.943281, 'CLL': -0.358228, 'Learning time': 12.314, 'AUC ROC': 0.575924, 'parameter': {'Inference time': 1.718, 'F1': 0.949713, 'Precision': [0.904241, 0.5], 'AUC PR': 0.943016, 'CLL': -0.319898, 'Learning time': 1.509, 'AUC ROC': 0.605144, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

Starting fold 4

Target train facts examples: 7971
Target train pos examples: 158
Target train neg examples: 16

Target test facts examples: 33775
Target test pos	 examples: 654
Target test neg examples: 58

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.8099561640151723;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6809038096058014;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5284825663747693;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.39719039176974347;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3023776209869051;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23698715759628264;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.191220720417513;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15814910131754492;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1334484328508451;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.11444708609402138;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.655172
   AUC PR    = 0.942363
   CLL	      = -0.255786
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 1.163 seconds
Total inference time: 1.332 seconds
AUC ROC: 0.655172


Results scoring model
   AUC ROC   = 0.75
   AUC PR    = 0.951807
   CLL	      = -0.235883
   Precision = 0.951807 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.975309


Total scoring time: 0.762 seconds
Parameter learned model CLL: -0.235883


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}]]
[{'': [0.045870227899556054, -6.938893903907228e-18]}, {'': [0.045870227899547665, 0.0]}, {'': [0.04587022789954968, -1.734723475976807e-18]}, {'': [0.045870227899550815, 1.734723475976807e-18]}, {'': [0.04587022789955062, 0.0]}, {'': [0.04587022789955009, 1.734723475976807e-18]}, {'': [0.04587022789955017, 0.0]}, {'': [0.045870227899549997, 8.673617379884035e-19]}, {'': [0.04587022789954986, 0.0]}, {'': [0.04587022789954993, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.5851860008555358;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.5553664367462843;  // std dev = 1,03e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.4612598391067553;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5553664367462836;  // std dev = 3,32e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.3488463256948424;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.41751358415831047;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.3207118471601495;  // std dev = 2,11e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.26212705508354195;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.3207118471601494;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.19945264276423416;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | | | then return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2551722425694895;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.20975771563253576;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.15451336627983223;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.20975771563253573;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.12179491558002786;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.17709649774527716;  // std dev = 3,65e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.09745354768081692;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.15274385809367091;  // std dev = 1,83e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15274385809367055;  // std dev = 8,16e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.13400703000801112;  // std dev = 1,05e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.07895233872555119;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.1279382800593622;  // std dev = 0,130, 81,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=79 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.669132
   AUC PR    = 0.942215
   CLL	      = -0.261216
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 6.501 seconds
Total inference time: 3.021 seconds
AUC ROC: 0.669132


Results scoring model
   AUC ROC   = 0.96519
   AUC PR    = 0.996372
   CLL	      = -0.205957
   Precision = 0.951807 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.975309


Total scoring time: 0.987 seconds
Refined model CLL: -0.205957


Refining iteration 2
********************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
0;true,true;haswordvenue(F, D).;true;true
0;true,false,true;haswordvenue(I, G).;true;true
0;true,false;haswordauthor(B, G), haswordtitle(H, G).;true;true
0;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;true,true;haswordvenue(F, D).;true;true
1;true,false,true;haswordvenue(I, G).;true;true
1;true,false;haswordauthor(B, G), haswordtitle(H, G).;true;true
1;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;true,true;haswordvenue(F, D).;true;true
2;true,false,true;haswordvenue(I, G).;true;true
2;true,false;haswordauthor(A, G), haswordtitle(H, G).;true;true
2;true;haswordauthor(B, D), haswordtitle(E, D).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;true,true;haswordvenue(F, D).;true;true
3;true,false,true;haswordvenue(I, G).;true;true
3;true,false;haswordauthor(B, G), haswordtitle(H, G).;true;true
3;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;true,true;haswordvenue(F, D).;true;true
4;true,false,true;haswordvenue(I, G).;true;true
4;true,false;haswordauthor(A, G), haswordtitle(H, G).;true;true
4;true;haswordauthor(B, D), haswordtitle(E, D).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;true,true;haswordvenue(F, D).;true;true
5;true,false,false;haswordauthor(B, I), haswordtitle(J, I).;true;true
5;true,false;haswordauthor(B, G), haswordvenue(H, G).;true;true
5;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;true,true;haswordvenue(F, D).;true;true
6;true,false,true;haswordvenue(I, G).;true;true
6;true,false;haswordauthor(A, G), haswordtitle(H, G).;true;true
6;true;haswordauthor(B, D), haswordtitle(E, D).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;true,true;haswordvenue(F, D).;true;true
7;true,false,true;haswordvenue(I, G).;true;true
7;true,false;haswordauthor(A, G), haswordtitle(H, G).;true;true
7;true;haswordauthor(B, D), haswordtitle(E, D).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;true,true;haswordvenue(F, D).;true;true
8;true,false,true;haswordvenue(I, G).;true;true
8;true,false;haswordauthor(B, G), haswordtitle(H, G).;true;true
8;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;true,true;haswordvenue(F, D).;true;true
9;true,false;haswordauthor(B, G), haswordvenue(H, G).;true;true
9;true;haswordauthor(A, D), haswordtitle(E, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | | then return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | | then return 0.5851860008555358;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.5553664367462843;  // std dev = 1,03e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | | then return 0.4612598391067553;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, I), haswordtitle(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5553664367462836;  // std dev = 3,32e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | | then return 0.3488463256948424;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.41751358415831047;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.3207118471601495;  // std dev = 2,11e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | | then return 0.26212705508354195;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, I), haswordtitle(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return 0.3207118471601494;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | | then return 0.19945264276423416;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( haswordauthor(B, K), haswordtitle(L, K) )
%   | | | then return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2551722425694895;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.20975771563253576;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | | then return 0.15451336627983223;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, I), haswordtitle(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.20975771563253573;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | | then return 0.12179491558002786;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, I), haswordtitle(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.17709649774527716;  // std dev = 3,65e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | | then return 0.09745354768081692;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | | then if ( haswordvenue(K, I) )
%   | | | then return 0.15274385809367091;  // std dev = 1,83e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15274385809367055;  // std dev = 8,16e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.13400703000801112;  // std dev = 1,05e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | | then return 0.07895233872555119;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.1279382800593622;  // std dev = 0,130, 81,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=79 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.670239
   AUC PR    = 0.942316
   CLL	      = -0.260621
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 2.335 seconds
Total inference time: 3.068 seconds
AUC ROC: 0.670239


Results scoring model
   AUC ROC   = 0.96519
   AUC PR    = 0.996372
   CLL	      = -0.205957
   Precision = 0.951807 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.975309


Total scoring time: 1.005 seconds
Refined model CLL: -0.205957


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.669132
   AUC PR    = 0.942215
   CLL	      = -0.261216
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 12.753 seconds
Total inference time: 3.021 seconds
AUC ROC: 0.669132
Total revision time: 12.753
Best scored revision CLL: -0.205957


Dataset: 9_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 00:16:29
{'Inference time': 3.021, 'F1': 0.970326, 'Precision': [0.942363, 0.5], 'AUC PR': 0.942215, 'CLL': -0.261216, 'Learning time': 12.753, 'AUC ROC': 0.669132, 'parameter': {'Inference time': 1.332, 'F1': 0.970326, 'Precision': [0.942363, 0.5], 'AUC PR': 0.942363, 'CLL': -0.255786, 'Learning time': 1.163, 'AUC ROC': 0.655172, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

Starting fold 5

Target train facts examples: 8472
Target train pos examples: 172
Target train neg examples: 18

Target test facts examples: 33274
Target test pos	 examples: 640
Target test neg examples: 56

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7929315437951615;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6672286583325434;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5189342160940956;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3901282969327416;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.29619880730637854;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2309904888781173;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18519538758533224;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15205934164006435;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1273106151181766;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10828905626740594;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.678571
   AUC PR    = 0.946746
   CLL	      = -0.255769
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 1.187 seconds
Total inference time: 1.284 seconds
AUC ROC: 0.678571


Results scoring model
   AUC ROC   = 0.666667
   AUC PR    = 0.934783
   CLL	      = -0.274541
   Precision = 0.934783 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966292


Total scoring time: 0.738 seconds
Parameter learned model CLL: -0.274541


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [1.86e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}]]
[{'': [0.060964083175810056, -6.938893903907228e-18]}, {'': [0.06096408317580048, -2.3129646346357427e-18]}, {'': [0.06096408317580515, 0.0]}, {'': [0.06096408317580519, 0.0]}, {'': [0.06096408317580405, 1.1564823173178713e-18]}, {'': [0.0609640831758035, 1.1564823173178713e-18]}, {'': [0.06096408317580343, -1.1564823173178713e-18]}, {'': [0.060964083175803305, 0.0]}, {'': [0.06096408317580364, 5.782411586589357e-19]}, {'': [0.060964083175803416, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.8581489350995116;  // std dev = 2,23e-07, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.524815601766179;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.858148935099512;  // std dev = 1,03e-07, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.719473412210954;  // std dev = 2,06e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.7194734122109547;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.498380757744019;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.448295606241962;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.7194734122109544;  // std dev = 4,21e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.5553664367462835;  // std dev = 4,04e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.5553664367462845;  // std dev = 5,96e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.3990418766037683;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.36236334632262296;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.4175135841583099;  // std dev = 2,15e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.471219362531756;  // std dev = 0,263, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.359008001215884;  // std dev = 1,451, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.2807538536965853;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.3207118471601504;  // std dev = 4,21e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.4541859654483953;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.18291080604367949;  // std dev = 0,477, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then return 0.41811297240343154;  // std dev = 0,571, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.31401565069019594;  // std dev = 1,487, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.28023375686962326;  // std dev = 1,488, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11762248380085706;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1792180700834396;  // std dev = 0,909, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.1566445386038799;  // std dev = 0,562, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.24561557279043306;  // std dev = 1,491, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.2184646095328482;  // std dev = 1,495, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2097577156325357;  // std dev = 1,23e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.105967403676178;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13627766136541505;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.21786052573699322;  // std dev = 0,046, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.085989637860233;  // std dev = 1,459, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.09137022267054584;  // std dev = 1,558, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.22763334026786622;  // std dev = 0,053, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.1802539767935558;  // std dev = 0,047, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, A), venue(F, E) )
%   | | | then return 0.17709649774527747;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09139854472175199;  // std dev = 1,751, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.14142954218913967;  // std dev = 0,442, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.06647061027658237;  // std dev = 1,459, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.19687130255291446;  // std dev = 0,357, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.15471118499556497;  // std dev = 0,047, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10936996240990708;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06686268703382366;  // std dev = 0,882, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.15760485524038878;  // std dev = 0,036, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.0517439495474127;  // std dev = 1,459, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.048050025051902874;  // std dev = 1,558, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.16165292345115304;  // std dev = 0,041, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.1355440671189806;  // std dev = 0,042, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09917454973993069;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05173941351608882;  // std dev = 0,885, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.18459838065172682;  // std dev = 0,278, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.08680414041000503;  // std dev = 1,432, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.036940672549418414;  // std dev = 1,558, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.14093386612114767;  // std dev = 0,037, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.505552
   AUC PR    = 0.896238
   CLL	      = -0.498975
   Precision = 0.942959 at threshold = 0.5
   Recall    = 0.826563
   F1        = 0.880933


Total learning time: 7.175 seconds
Total inference time: 2.979 seconds
AUC ROC: 0.505552


Results scoring model
   AUC ROC   = 0.986434
   AUC PR    = 0.998579
   CLL	      = -0.192406
   Precision = 0.966292 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.982857


Total scoring time: 0.994 seconds
Refined model CLL: -0.192406


Refining iteration 2
********************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
0;true,true;haswordauthor(B, D).;true;true
0;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
0;true,true,false;haswordvenue(F, D).;true;true
0;true,false,true;haswordauthor(B, G).;true;true
0;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
0;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;true,true;haswordauthor(B, D).;true;true
1;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
1;true,true,false;haswordvenue(F, D).;true;true
1;true,false,true;haswordauthor(B, G).;true;true
1;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
1;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;true,true;haswordauthor(B, D).;true;true
2;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
2;true,true,false;haswordvenue(F, D).;true;true
2;true,false,true;haswordauthor(B, G).;true;true
2;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
2;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;true,true;haswordauthor(B, D).;true;true
3;true,false,false;haswordauthor(B, J), haswordvenue(K, J).;true;true
3;true,true,false;haswordvenue(F, D).;true;true
3;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
3;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;true,true;haswordauthor(A, D).;true;true
4;true,true,false;haswordvenue(F, D).;true;true
4;true;haswordauthor(B, D), haswordtitle(E, D).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;true,true;haswordauthor(B, D).;true;true
5;true,true,false;haswordvenue(F, D).;true;true
5;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;true,true;haswordauthor(B, D).;true;true
6;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
6;true,true,false;haswordvenue(F, D).;true;true
6;true,false,true;haswordauthor(B, G).;true;true
6;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
6;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;true,true;haswordauthor(A, D).;true;true
7;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
7;true,true,false;author(F, A), venue(F, E).;true;true
7;true;haswordauthor(B, D), haswordvenue(E, D).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;true,true;haswordauthor(B, D).;true;true
8;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
8;true,true,false;haswordvenue(F, D).;true;true
8;true,false,true;haswordauthor(B, G).;true;true
8;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
8;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;true,true;haswordauthor(B, D).;true;true
9;true,false,false;haswordauthor(B, J), haswordvenue(K, J).;true;true
9;true,true,false;haswordvenue(F, D).;true;true
9;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
9;true;haswordauthor(A, D), haswordtitle(E, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.8581489350995116;  // std dev = 2,23e-07, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.524815601766179;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.858148935099512;  // std dev = 1,03e-07, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.719473412210954;  // std dev = 2,06e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.7194734122109547;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.498380757744019;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.448295606241962;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.7194734122109544;  // std dev = 4,21e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.5553664367462835;  // std dev = 4,04e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.5553664367462845;  // std dev = 5,96e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.3990418766037683;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.36236334632262296;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.4175135841583099;  // std dev = 2,15e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.41751358415831014;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.30590364655137575;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.2807538536965853;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.3207118471601504;  // std dev = 4,21e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.4541859654483953;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.18291080604367949;  // std dev = 0,477, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then return 0.41811297240343154;  // std dev = 0,571, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.30880557582619494;  // std dev = 1,483, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.28855418621734946;  // std dev = 1,497, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11762248380085706;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1792180700834396;  // std dev = 0,909, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.31533292602793683;  // std dev = 0,284, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.20168282729061762;  // std dev = 1,439, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.15090795161304943;  // std dev = 1,566, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.26481552262447505;  // std dev = 0,038, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2097577156325357;  // std dev = 1,23e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.105967403676178;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13627766136541505;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.21621373394808072;  // std dev = 0,047, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.10014225511548255;  // std dev = 1,458, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.1137791278770602;  // std dev = 1,565, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.21656014021566547;  // std dev = 0,033, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.17961546496695033;  // std dev = 0,045, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, A), venue(F, E) )
%   | | | then return 0.17709649774527747;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09828184933080486;  // std dev = 1,755, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | | | then return 0.15287623449115595;  // std dev = 0,359, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.06143321390048798;  // std dev = 1,470, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0.1932961982419823;  // std dev = 0,360, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.1543942390581384;  // std dev = 0,041, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10723767361797787;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06681671972214794;  // std dev = 0,885, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.156624380328979;  // std dev = 0,036, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.06322338399627968;  // std dev = 1,459, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.06269356399491284;  // std dev = 1,565, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.15504306538542048;  // std dev = 0,026, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.1352964966423779;  // std dev = 0,037, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.09739909307009509;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05168737311769004;  // std dev = 0,888, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.1370345222026414;  // std dev = 0,032, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.049277406009901575;  // std dev = 1,459, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.047967210480628054;  // std dev = 1,565, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.13580311369279116;  // std dev = 0,023, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.50572
   AUC PR    = 0.896252
   CLL	      = -0.499173
   Precision = 0.942959 at threshold = 0.5
   Recall    = 0.826563
   F1        = 0.880933


Total learning time: 2.931 seconds
Total inference time: 2.984 seconds
AUC ROC: 0.50572


Results scoring model
   AUC ROC   = 0.986434
   AUC PR    = 0.998579
   CLL	      = -0.191976
   Precision = 0.966292 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.982857


Total scoring time: 0.974 seconds
Refined model CLL: -0.191976


Refining iteration 3
********************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
0;true,true;haswordauthor(B, D).;true;true
0;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
0;true,true,false;haswordvenue(F, D).;true;true
0;true,false,true;haswordauthor(B, G).;true;true
0;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
0;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;true,true;haswordauthor(B, D).;true;true
1;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
1;true,true,false;haswordvenue(F, D).;true;true
1;true,false,true;haswordauthor(B, G).;true;true
1;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
1;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;true,true;haswordauthor(B, D).;true;true
2;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
2;true,true,false;haswordvenue(F, D).;true;true
2;true,false,true;haswordauthor(B, G).;true;true
2;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
2;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;true,true;haswordauthor(B, D).;true;true
3;true,false,false;haswordauthor(B, K), haswordvenue(L, K).;true;true
3;true,true,false;haswordvenue(F, D).;true;true
3;true,false,true;haswordauthor(B, I), haswordvenue(J, I).;true;true
3;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
3;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;true,true;haswordauthor(A, D).;true;true
4;true,true,false;haswordvenue(F, D).;true;true
4;true;haswordauthor(B, D), haswordtitle(E, D).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;true,true;haswordauthor(B, D).;true;true
5;true,false,false;haswordauthor(B, J), haswordvenue(K, J).;true;true
5;true,true,false;haswordvenue(F, D).;true;true
5;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
5;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;true,true;haswordauthor(B, D).;true;true
6;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
6;true,true,false;haswordvenue(F, D).;true;true
6;true,false,true;haswordauthor(B, G).;true;true
6;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
6;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;true,true;haswordauthor(A, D).;true;true
7;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
7;true,true,false;author(F, A), venue(F, E).;true;true
7;true;haswordauthor(B, D), haswordvenue(E, D).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;true,true;haswordauthor(B, D).;true;true
8;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
8;true,true,false;haswordvenue(F, D).;true;true
8;true,false,true;haswordauthor(B, G).;true;true
8;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
8;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;true,true;haswordauthor(B, D).;true;true
9;true,false,false;haswordauthor(B, K), haswordvenue(L, K).;true;true
9;true,true,false;haswordvenue(F, D).;true;true
9;true,false,true;haswordauthor(B, I), haswordvenue(J, I).;true;true
9;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
9;true;haswordauthor(A, D), haswordtitle(E, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.8581489350995116;  // std dev = 2,23e-07, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.524815601766179;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.858148935099512;  // std dev = 1,03e-07, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.719473412210954;  // std dev = 2,06e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.7194734122109547;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.498380757744019;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.448295606241962;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.7194734122109544;  // std dev = 4,21e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.5553664367462835;  // std dev = 4,04e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.5553664367462845;  // std dev = 5,96e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.3990418766037683;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.36236334632262296;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.4175135841583099;  // std dev = 2,15e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.41751358415831014;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.30590364655137575;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.2807538536965853;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.3207118471601504;  // std dev = 4,21e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.4541859654483953;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.18291080604367949;  // std dev = 0,477, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.3814122262744886;  // std dev = 0,297, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2559029028586863;  // std dev = 1,474, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.273086761824332;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.3582288783920587;  // std dev = 0,411, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11169876455726145;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1890945131748203;  // std dev = 0,926, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.2618958148264209;  // std dev = 0,059, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.15527209815911958;  // std dev = 1,455, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.15906983736787075;  // std dev = 1,568, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.2537950440227425;  // std dev = 0,062, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2097577156325357;  // std dev = 1,23e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10108822577423293;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14352299161460821;  // std dev = 0,923, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.2145183808779533;  // std dev = 0,051, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.11778613137995618;  // std dev = 1,456, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.11982638937763475;  // std dev = 1,568, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.20881811977766848;  // std dev = 0,055, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.1789582727491299;  // std dev = 0,047, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, A), venue(F, E) )
%   | | | then return 0.17709649774527747;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09984350297152227;  // std dev = 1,760, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | | | then return 0.15279598969056502;  // std dev = 0,360, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.07461771352945261;  // std dev = 1,467, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( haswordauthor(A, K), haswordtitle(L, K) )
%   | | | then return 0.20360089974091536;  // std dev = 0,370, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.17642858801251904;  // std dev = 0,048, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.15402914253050437;  // std dev = 0,044, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10339906431649985;  // std dev = 0,000392, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07003107241263991;  // std dev = 0,899, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.15561614543710767;  // std dev = 0,040, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.07310788798183042;  // std dev = 1,457, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.06669066606522922;  // std dev = 1,567, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.15225137422393553;  // std dev = 0,043, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.1350122898119395;  // std dev = 0,039, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0941986670141138;  // std dev = 0,000361, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05404994635412874;  // std dev = 0,901, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.1362516982522526;  // std dev = 0,035, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.05677299624451831;  // std dev = 1,457, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.050958485590327625;  // std dev = 1,568, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.13363242243079343;  // std dev = 0,039, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.639146
   AUC PR    = 0.95251
   CLL	      = -0.505461
   Precision = 0.942959 at threshold = 0.5
   Recall    = 0.826563
   F1        = 0.880933


Total learning time: 2.62 seconds
Total inference time: 3.097 seconds
AUC ROC: 0.639146


Results scoring model
   AUC ROC   = 0.986434
   AUC PR    = 0.998579
   CLL	      = -0.191841
   Precision = 0.966292 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.982857


Total scoring time: 0.98 seconds
Refined model CLL: -0.191841


Refining iteration 4
********************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
0;true,true;haswordauthor(B, D).;true;true
0;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
0;true,true,false;haswordvenue(F, D).;true;true
0;true,false,true;haswordauthor(B, G).;true;true
0;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
0;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
1;true,true;haswordauthor(B, D).;true;true
1;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
1;true,true,false;haswordvenue(F, D).;true;true
1;true,false,true;haswordauthor(B, G).;true;true
1;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
1;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;true,true;haswordauthor(B, D).;true;true
2;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
2;true,true,false;haswordvenue(F, D).;true;true
2;true,false,true;haswordauthor(B, G).;true;true
2;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
2;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;true,true;haswordauthor(B, D).;true;true
3;true,false,false;haswordauthor(B, K), haswordvenue(L, K).;true;true
3;true,true,false;haswordvenue(F, D).;true;true
3;true,false,true;haswordauthor(B, I), haswordvenue(J, I).;true;true
3;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
3;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;true,true;haswordauthor(A, D).;true;true
4;true,true,false;haswordvenue(F, D).;true;true
4;true;haswordauthor(B, D), haswordtitle(E, D).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;true,true;haswordauthor(B, D).;true;true
5;true,false,false;haswordauthor(B, K), haswordvenue(L, K).;true;true
5;true,true,false;haswordvenue(F, D).;true;true
5;true,false,true;haswordauthor(B, I), haswordvenue(J, I).;true;true
5;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
5;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;true,true;haswordauthor(B, D).;true;true
6;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
6;true,true,false;haswordvenue(F, D).;true;true
6;true,false,true;haswordauthor(B, G).;true;true
6;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
6;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;true,true;haswordauthor(A, D).;true;true
7;true,false,false;haswordauthor(A, K), haswordtitle(L, K).;true;true
7;true,true,false;author(F, A), venue(F, E).;true;true
7;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
7;true;haswordauthor(B, D), haswordvenue(E, D).;true;true
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;true,true;haswordauthor(B, D).;true;true
8;true,false,false;haswordauthor(B, I), haswordvenue(J, I).;true;true
8;true,true,false;haswordvenue(F, D).;true;true
8;true,false,true;haswordauthor(B, G).;true;true
8;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
8;true;haswordauthor(A, D), haswordtitle(E, D).;true;true
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;true,true;haswordauthor(B, D).;true;true
9;true,false,false;haswordauthor(B, K), haswordvenue(L, K).;true;true
9;true,true,false;haswordvenue(F, D).;true;true
9;true,false,true;haswordauthor(B, I), haswordvenue(J, I).;true;true
9;true,false;haswordauthor(A, G), haswordvenue(H, G).;true;true
9;true;haswordauthor(A, D), haswordtitle(E, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.8581489350995116;  // std dev = 2,23e-07, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.524815601766179;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.858148935099512;  // std dev = 1,03e-07, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.719473412210954;  // std dev = 2,06e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.7194734122109547;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.498380757744019;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.448295606241962;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.7194734122109544;  // std dev = 4,21e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.5553664367462835;  // std dev = 4,04e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.5553664367462845;  // std dev = 5,96e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.3990418766037683;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.36236334632262296;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.4175135841583099;  // std dev = 2,15e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.41751358415831014;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.30590364655137575;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.2807538536965853;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.3207118471601504;  // std dev = 4,21e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.4541859654483953;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.18291080604367949;  // std dev = 0,477, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.3814122262744886;  // std dev = 0,297, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2559029028586863;  // std dev = 1,474, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.273086761824332;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.3582288783920587;  // std dev = 0,411, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11169876455726145;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1890945131748203;  // std dev = 0,926, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.2618958148264209;  // std dev = 0,059, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.15527209815911958;  // std dev = 1,455, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.15906983736787075;  // std dev = 1,568, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.2537950440227425;  // std dev = 0,062, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2097577156325357;  // std dev = 1,23e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10108822577423293;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14352299161460821;  // std dev = 0,923, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.2145183808779533;  // std dev = 0,051, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.11778613137995618;  // std dev = 1,456, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.11982638937763475;  // std dev = 1,568, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.20881811977766848;  // std dev = 0,055, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.1789582727491299;  // std dev = 0,047, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, A), venue(F, E) )
%   | | | then return 0.17709649774527747;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09984350297152227;  // std dev = 1,760, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordtitle(J, I) )
%   | | | then return 0.15279598969056502;  // std dev = 0,360, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.07461771352945261;  // std dev = 1,467, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( haswordauthor(A, K), haswordtitle(L, K) )
%   | | | then return 0.20360089974091536;  // std dev = 0,370, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.17642858801251904;  // std dev = 0,048, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.15402914253050437;  // std dev = 0,044, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.10339906431649985;  // std dev = 0,000392, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07003107241263991;  // std dev = 0,899, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.15561614543710767;  // std dev = 0,040, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.07310788798183042;  // std dev = 1,457, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.06669066606522922;  // std dev = 1,567, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.15225137422393553;  // std dev = 0,043, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.1350122898119395;  // std dev = 0,039, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0941986670141138;  // std dev = 0,000361, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05404994635412874;  // std dev = 0,901, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.1362516982522526;  // std dev = 0,035, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.05677299624451831;  // std dev = 1,457, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, K), haswordvenue(L, K) )
%   | | | then return 0.050958485590327625;  // std dev = 1,568, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.13363242243079343;  // std dev = 0,039, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.639146
   AUC PR    = 0.95251
   CLL	      = -0.505461
   Precision = 0.942959 at threshold = 0.5
   Recall    = 0.826563
   F1        = 0.880933


Total learning time: 2.575 seconds
Total inference time: 3.29 seconds
AUC ROC: 0.639146


Results scoring model
   AUC ROC   = 0.986434
   AUC PR    = 0.998579
   CLL	      = -0.191841
   Precision = 0.966292 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.982857


Total scoring time: 0.955 seconds
Refined model CLL: -0.191841


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.639146
   AUC PR    = 0.95251
   CLL	      = -0.505461
   Precision = 0.942959 at threshold = 0.5
   Recall    = 0.826563
   F1        = 0.880933


Total learning time: 21.128999999999998 seconds
Total inference time: 3.097 seconds
AUC ROC: 0.639146
Total revision time: 21.128999999999998
Best scored revision CLL: -0.191841


Dataset: 9_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 00:17:06
{'Inference time': 3.097, 'F1': 0.880933, 'Precision': [0.942959, 0.5], 'AUC PR': 0.95251, 'CLL': -0.505461, 'Learning time': 21.128999999999998, 'AUC ROC': 0.639146, 'parameter': {'Inference time': 1.284, 'F1': 0.972644, 'Precision': [0.946746, 0.5], 'AUC PR': 0.946746, 'CLL': -0.255769, 'Learning time': 1.187, 'AUC ROC': 0.678571, 'Recall': 1.0}, 'Recall': 0.826563}


Start learning from scratch in target domain

