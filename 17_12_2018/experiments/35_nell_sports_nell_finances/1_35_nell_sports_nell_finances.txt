Starting experiment #1 for 35_nell_sports_nell_finances

Start learning from source dataset

Source train facts examples: 8233
Source train pos examples: 1458
Source train neg examples: 1458

WILL Produced-Tree #1
% FOR athleteplaysforteam(A, B):
%   if ( teamplaysinleague(B, C), athleteplaysinleague(A, C) )
%   then if ( athleteledsportsteam(D, B) )
%   | then if ( athleteledsportsteam(A, B) )
%   | | then return 0.8581489350995096;  // std dev = 1,05e-06, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | | else return 0.6810372184782549;  // std dev = 0,382, 367,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=302 */
%   | else if ( teamalsoknownas(B, E), teamplaysagainstteam(B, E) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( teamalsoknownas(F, B), teamplaysagainstteam(B, F) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.333558771165085;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   else if ( athleteplaysinleague(A, G), teamplaysinleague(H, G) )
%   | then return -0.02052753548872268;  // std dev = 0,327, 544,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=66 */
%   | else if ( athleteledsportsteam(A, B) )
%   | | then return 0.8581489350995117;  // std dev = 1,69e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else if ( athleteledsportsteam(A, I) )
%   | | | then return 0.026032146778344114;  // std dev = 4,375, 137,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=23 */
%   | | | else return 0.35814893509950735;  // std dev = 19,596, 1.536,000 (wgt'ed) examples reached here.  /* #neg=768 #pos=768 */
WILL Produced-Tree #2
% FOR athleteplaysforteam(A, B):
%   if ( teamplaysinleague(B, C), athleteplaysinleague(A, C) )
%   then if ( athleteledsportsteam(D, B) )
%   | then return 0.6215229256428181;  // std dev = 0,323, 535,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=470 */
%   | else if ( teamalsoknownas(E, B), teamplaysagainstteam(B, E) )
%   | | then return 0.6041490710758831;  // std dev = 0,346, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( teamalsoknownas(B, F), teamplaysagainstteam(B, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2879257036803894;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   else if ( athleteplaysinleague(A, G), teamplaysinleague(H, G) )
%   | then return -0.018047055515207668;  // std dev = 0,327, 544,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=66 */
%   | else if ( teamplaysagainstteam(I, B), teamalsoknownas(J, I) )
%   | | then if ( teamplaysagainstteam(B, I), teamplaysagainstteam(B, J) )
%   | | | then return 0.42934026650754264;  // std dev = 14,882, 968,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=603 */
%   | | | else return 0.18785244574623483;  // std dev = 10,155, 451,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=172 */
%   | | else if ( teamalsoknownas(K, B), athleteledsportsteam(L, K) )
%   | | | then return 0.49912921596594934;  // std dev = 2,598, 32,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | | | else return 0.08476583550811818;  // std dev = 7,798, 313,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=85 */
WILL Produced-Tree #3
% FOR athleteplaysforteam(A, B):
%   if ( athleteplaysinleague(A, C), teamplaysinleague(B, C) )
%   then if ( athleteledsportsteam(A, B) )
%   | then return 0.5794042201181485;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | else if ( teamplaysagainstteam(D, B), teamalsoknownas(E, D) )
%   | | then return 0.4377041809921245;  // std dev = 0,389, 417,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=334 */
%   | | else if ( athleteledsportsteam(A, F), teamplaysagainstteam(F, G) )
%   | | | then return -0.17181586488705905;  // std dev = 1,012, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.21367246955447713;  // std dev = 1,926, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( athleteplaysinleague(A, H), teamplaysinleague(I, H) )
%   | then return -0.015896431002731845;  // std dev = 0,327, 544,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=66 */
%   | else if ( teamplaysagainstteam(J, B), teamalsoknownas(K, J) )
%   | | then if ( teamplaysagainstteam(B, K), teamplaysagainstteam(B, J) )
%   | | | then return 0.3538784924795427;  // std dev = 14,840, 968,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=603 */
%   | | | else return 0.1569804293330579;  // std dev = 10,140, 451,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=172 */
%   | | else if ( teamalsoknownas(L, B), teamplaysagainstteam(B, L) )
%   | | | then return 0.4816837170693187;  // std dev = 2,058, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.0747504468961584;  // std dev = 7,930, 321,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=89 */
WILL Produced-Tree #4
% FOR athleteplaysforteam(A, B):
%   if ( teamplaysinleague(B, C), athleteplaysinleague(A, C) )
%   then if ( athleteledsportsteam(A, B) )
%   | then return 0.43559084153402383;  // std dev = 5,06e-07, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | else if ( athleteledsportsteam(A, D), athleteplayssport(A, E) )
%   | | then if ( teamplaysinleague(D, C), teamplaysagainstteam(B, D) )
%   | | | then return 0.06941960102142734;  // std dev = 2,984, 37,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.23560984459893256;  // std dev = 3,169, 51,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | else if ( athleteledsportsteam(F, B) )
%   | | | then return 0.37827746821437425;  // std dev = 5,926, 298,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=257 */
%   | | | else return 0.23376712168362848;  // std dev = 3,434, 54,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   else if ( athleteplaysinleague(A, G), teamplaysinleague(H, G) )
%   | then return -0.014025272518205328;  // std dev = 0,327, 544,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=66 */
%   | else if ( athleteledsportsteam(A, B) )
%   | | then return 0.5768387199212435;  // std dev = 0,052, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else if ( athleteledsportsteam(A, I) )
%   | | | then return -0.05724521424034264;  // std dev = 4,317, 137,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=23 */
%   | | | else return 0.20370455938594142;  // std dev = 19,061, 1.536,000 (wgt'ed) examples reached here.  /* #neg=768 #pos=768 */
WILL Produced-Tree #5
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.40458980559243407;  // std dev = 0,140, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( teamalsoknownas(C, B), teamplaysagainstteam(B, C) )
%   | then if ( teamplayssport(B, D), teamplaysinleague(B, E) )
%   | | then if ( athleteplayssport(A, D), teamplayssport(C, D) )
%   | | | then return 0.4109706197974396;  // std dev = 3,397, 79,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return 0.24764039748088623;  // std dev = 8,692, 381,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=231 */
%   | | else if ( athleteledsportsteam(A, C) )
%   | | | then return 0.4703440616011244;  // std dev = 0,369, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.189043525113246;  // std dev = 0,955, 26,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | else if ( athleteplaysinleague(A, F), teamplaysinleague(B, F) )
%   | | then if ( teamplaysagainstteam(G, B), teamalsoknownas(H, G) )
%   | | | then return 0.23829401382487997;  // std dev = 7,064, 317,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=247 */
%   | | | else return -0.00464053483075875;  // std dev = 2,293, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( athleteplaysinleague(A, I) )
%   | | | then return -0.07516838962645916;  // std dev = 5,007, 447,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=27 */
%   | | | else return 0.1132508698440156;  // std dev = 17,641, 1.356,000 (wgt'ed) examples reached here.  /* #neg=768 #pos=588 */
WILL Produced-Tree #6
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.3198045513386276;  // std dev = 0,146, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( teamplaysagainstteam(B, D), teamplaysagainstteam(C, D) )
%   | | then if ( teamplayssport(B, E), teamplayssport(C, E) )
%   | | | then return 0.17388571241808007;  // std dev = 5,065, 114,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=70 */
%   | | | else return -0.004576377763579146;  // std dev = 3,459, 83,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | else if ( teamplaysagainstteam(C, B) )
%   | | | then return 0.36513192538953665;  // std dev = 0,395, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.13049384527712715;  // std dev = 3,075, 293,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=13 */
%   | else if ( teamplaysagainstteam(F, B), teamalsoknownas(F, B) )
%   | | then if ( teamplayssport(B, G), teamplaysinleague(B, H) )
%   | | | then return 0.25299836485586336;  // std dev = 8,636, 395,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=280 */
%   | | | else return -0.16279809823522776;  // std dev = 0,946, 22,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( teamalsoknownas(I, B), teamplayssport(I, J) )
%   | | | then return -0.12584644678820586;  // std dev = 3,036, 80,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | | | else return 0.10661315837147868;  // std dev = 18,396, 1.642,000 (wgt'ed) examples reached here.  /* #neg=867 #pos=775 */
WILL Produced-Tree #7
% FOR athleteplaysforteam(A, B):
%   if ( teamplaysagainstteam(C, B), teamalsoknownas(D, C) )
%   then if ( teamplaysagainstteam(B, D), teamplaysagainstteam(B, C) )
%   | then if ( athleteledsportsteam(E, C), athleteledsportsteam(F, D) )
%   | | then if ( teamalsoknownas(C, B) )
%   | | | then return 0.3535108698037863;  // std dev = 3,131, 81,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=68 */
%   | | | else return 0.14975321779418715;  // std dev = 16,308, 1.506,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=962 */
%   | | else if ( teamplaysinleague(B, G), teamplaysinleague(D, G) )
%   | | | then return 0.0993918882125545;  // std dev = 2,154, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return -0.18830004021183236;  // std dev = 1,812, 31,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | else if ( teamalsoknownas(C, H), teamplayssport(D, I) )
%   | | then return -0.09184015409182555;  // std dev = 0,356, 213,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=45 */
%   | | else if ( athleteledsportsteam(A, B) )
%   | | | then return 0.24448499399329188;  // std dev = 0,520, 63,000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return 0.04236266553943414;  // std dev = 9,284, 478,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=177 */
%   else if ( athleteledsportsteam(A, B) )
%   | then return 0.3794920814712588;  // std dev = 0,217, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.019532633656791937;  // std dev = 0,389, 512,000 (wgt'ed) examples reached here.  /* #neg=393 #pos=119 */
WILL Produced-Tree #8
% FOR athleteplaysforteam(A, B):
%   if ( teamplaysagainstteam(C, B), teamalsoknownas(D, C) )
%   then if ( athleteledsportsteam(A, B) )
%   | then return 0.22928478530291907;  // std dev = 0,139, 270,000 (wgt'ed) examples reached here.  /* #pos=270 */
%   | else if ( teamplaysagainstteam(B, C), teamplaysagainstteam(B, D) )
%   | | then if ( teamalsoknownas(C, E), athleteledsportsteam(A, F) )
%   | | | then return -0.11390383171483051;  // std dev = 3,766, 117,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=22 */
%   | | | else return 0.12317030709683396;  // std dev = 16,098, 1.325,000 (wgt'ed) examples reached here.  /* #neg=501 #pos=824 */
%   | | else if ( teamalsoknownas(C, G), teamplayssport(D, H) )
%   | | | then return -0.08954118632778732;  // std dev = 5,088, 205,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=37 */
%   | | | else return 0.03404035243485323;  // std dev = 9,275, 478,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=177 */
%   else if ( athleteplayssport(A, I) )
%   | then return -0.07481467777741015;  // std dev = 0,258, 152,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=17 */
%   | else if ( teamalsoknownas(J, B), athleteledsportsteam(K, J) )
%   | | then return 0.20831921890420074;  // std dev = 0,423, 31,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | | else if ( athleteledsportsteam(L, B) )
%   | | | then return -0.09256166536709609;  // std dev = 2,764, 67,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | | else return 0.020941928677384456;  // std dev = 7,273, 271,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=77 */
WILL Produced-Tree #9
% FOR athleteplaysforteam(A, B):
%   if ( teamplaysinleague(B, C), athleteplaysinleague(A, C) )
%   then if ( athleteledsportsteam(A, D), teamplaysagainstteam(B, D) )
%   | then if ( athleteplayssport(A, E), teamplaysinleague(D, C) )
%   | | then if ( teamplaysagainstteam(D, B), teamplayssport(D, E) )
%   | | | then return 0.00729811642487926;  // std dev = 2,555, 28,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return -0.32007590650814666;  // std dev = 1,190, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.2119850858019304;  // std dev = 0,233, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( athleteplayssport(A, F), teamplayssport(B, F) )
%   | | then return 0.1106822461162202;  // std dev = 0,330, 342,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=284 */
%   | | else return 0.1557802031882979;  // std dev = 0,278, 211,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=190 */
%   else if ( athleteledsportsteam(A, B) )
%   | then return 0.29050819061573707;  // std dev = 0,187, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else if ( athleteplaysinleague(A, G), teamplaysinleague(H, G) )
%   | | then return -0.05532733152710316;  // std dev = 0,265, 524,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=46 */
%   | | else if ( teamplaysagainstteam(I, B), teamplaysinleague(B, J) )
%   | | | then return 0.06051587415918329;  // std dev = 18,324, 1.531,000 (wgt'ed) examples reached here.  /* #neg=775 #pos=756 */
%   | | | else return -0.0512895020475819;  // std dev = 5,056, 142,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=35 */
WILL Produced-Tree #10
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.17203903956201122;  // std dev = 0,126, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( teamplaysagainstteam(B, D), teamplaysagainstteam(C, D) )
%   | | then if ( teamalsoknownas(E, D), athleteledsportsteam(F, B) )
%   | | | then return -0.011783615785815611;  // std dev = 4,783, 129,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=58 */
%   | | | else return 0.166350971942349;  // std dev = 3,645, 68,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=31 */
%   | | else if ( teamplaysagainstteam(C, B) )
%   | | | then return 0.24549395997936585;  // std dev = 0,407, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11783757120944413;  // std dev = 3,029, 293,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=13 */
%   | else if ( teamplaysinleague(B, G), teamplaysagainstteam(B, H) )
%   | | then if ( athleteledsportsteam(I, B), athleteplaysinleague(I, G) )
%   | | | then return 0.020100573762661018;  // std dev = 13,756, 1.035,000 (wgt'ed) examples reached here.  /* #neg=472 #pos=563 */
%   | | | else return 0.09894349546800663;  // std dev = 13,517, 891,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=453 */
%   | | else if ( teamplayssport(B, J), teamplaysagainstteam(B, K) )
%   | | | then return -0.1210947408518833;  // std dev = 2,458, 49,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
%   | | | else return -0.012695133103155327;  // std dev = 5,520, 164,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=46 */


Starting fold 1

Target train facts examples: 5285
Target train pos examples: 8
Target train neg examples: 8

Target test facts examples: 5285
Target test pos examples: 14
Target test neg examples: 14

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
0;false,false;athleteledsportsteam(A, B).;false;true
0;true;athleteledsportsteam(D, B).;true;true
0;false,false,false;athleteledsportsteam(A, I).;false;false
0;true,true;athleteledsportsteam(A, B).;false;false
0;true,false;teamalsoknownas(B, E), teamplaysagainstteam(B, E).;false;true
0;true,false,false;teamalsoknownas(F, B), teamplaysagainstteam(B, F).;false;false
0;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
1;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
1;false,false;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;true;true
1;true;athleteledsportsteam(D, B).;false;true
1;false,false,false;teamalsoknownas(K, B), athleteledsportsteam(L, K).;false;false
1;true,false;teamalsoknownas(E, B), teamplaysagainstteam(B, E).;false;true
1;true,false,false;teamalsoknownas(B, F), teamplaysagainstteam(B, F).;false;false
1;false,false,true;teamplaysagainstteam(B, I), teamplaysagainstteam(B, J).;false;false
1;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
2;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
2;false,false;teamplaysagainstteam(J, B), teamalsoknownas(K, J).;true;true
2;true;athleteledsportsteam(A, B).;false;true
2;false,false,false;teamalsoknownas(L, B), teamplaysagainstteam(B, L).;false;false
2;true,false;teamplaysagainstteam(D, B), teamalsoknownas(E, D).;false;true
2;true,false,false;athleteledsportsteam(A, F), teamplaysagainstteam(F, G).;false;false
2;false,false,true;teamplaysagainstteam(B, K), teamplaysagainstteam(B, J).;false;false
2;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
3;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
3;false,false;athleteledsportsteam(A, B).;false;true
3;true;athleteledsportsteam(A, B).;false;true
3;false,false,false;athleteledsportsteam(A, I).;false;false
3;true,false;athleteledsportsteam(A, D), athleteplayssport(A, E).;true;true
3;true,false,false;athleteledsportsteam(F, B).;false;false
3;true,false,true;teamplaysinleague(D, C), teamplaysagainstteam(B, D).;false;false
3;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
4;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
4;false,false;athleteplaysinleague(A, F), teamplaysinleague(B, F).;true;true
4;false,false,true;teamplaysagainstteam(G, B), teamalsoknownas(H, G).;false;false
4;false,false,false;athleteplaysinleague(A, I).;false;false
4;false,true,true;athleteplayssport(A, D), teamplayssport(C, D).;false;false
4;false,true,false;athleteledsportsteam(A, C).;false;false
4;false;teamalsoknownas(C, B), teamplaysagainstteam(B, C).;true;true
4;false,true;teamplayssport(B, D), teamplaysinleague(B, E).;true;true
5;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
5;false,false;teamplaysagainstteam(F, B), teamalsoknownas(F, B).;true;true
5;false,false,true;teamplayssport(B, G), teamplaysinleague(B, H).;false;false
5;false,false,false;teamalsoknownas(I, B), teamplayssport(I, J).;false;false
5;false,true,true;teamplayssport(B, E), teamplayssport(C, E).;false;false
5;false,true,false;teamplaysagainstteam(C, B).;false;false
5;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
5;false,true;teamplaysagainstteam(B, D), teamplaysagainstteam(C, D).;true;true
6;;athleteplaysforteam(A, B) :- teamplaysagainstteam(C, B), teamalsoknownas(D, C).;true;true
6;true;teamplaysagainstteam(B, D), teamplaysagainstteam(B, C).;true;true
6;true,true;athleteledsportsteam(E, C), athleteledsportsteam(F, D).;true;true
6;true,false;teamalsoknownas(C, H), teamplayssport(D, I).;false;true
6;true,true,true;teamalsoknownas(C, B).;false;false
6;true,true,false;teamplaysinleague(B, G), teamplaysinleague(D, G).;false;false
6;true,false,false;athleteledsportsteam(A, B).;false;false
6;false;athleteledsportsteam(A, B).;false;false
7;;athleteplaysforteam(A, B) :- teamplaysagainstteam(C, B), teamalsoknownas(D, C).;true;true
7;false,false;teamalsoknownas(J, B), athleteledsportsteam(K, J).;false;true
7;true;athleteledsportsteam(A, B).;false;true
7;false,false,false;athleteledsportsteam(L, B).;false;false
7;true,false;teamplaysagainstteam(B, C), teamplaysagainstteam(B, D).;true;true
7;true,false,false;teamalsoknownas(C, G), teamplayssport(D, H).;false;false
7;true,false,true;teamalsoknownas(C, E), athleteledsportsteam(A, F).;false;false
7;false;athleteplayssport(A, I).;false;true
8;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
8;false,false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
8;true;athleteledsportsteam(A, D), teamplaysagainstteam(B, D).;true;true
8;false,false,false;teamplaysagainstteam(I, B), teamplaysinleague(B, J).;false;false
8;true,true;athleteplayssport(A, E), teamplaysinleague(D, C).;true;false
8;true,false;athleteplayssport(A, F), teamplayssport(B, F).;false;false
8;true,true,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;false;false
8;false;athleteledsportsteam(A, B).;false;true
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,false;teamplaysinleague(B, G), teamplaysagainstteam(B, H).;true;true
9;false,false,true;athleteledsportsteam(I, B), athleteplaysinleague(I, G).;false;false
9;false,false,false;teamplayssport(B, J), teamplaysagainstteam(B, K).;false;false
9;false,true,true;teamalsoknownas(E, D), athleteledsportsteam(F, B).;false;false
9;false,true,false;teamplaysagainstteam(C, B).;false;false
9;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
9;false,true;teamplaysagainstteam(B, D), teamplaysagainstteam(C, D).;true;true


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(D, B) )
%   | then if ( companyceo(A, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.3581489350995122;  // std dev = 0,500, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, F) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(D, B) )
%   | then return 0.3028027626274885;  // std dev = 1,127, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.308741135785635;  // std dev = 0,500, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, G) )
%   | | then return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.6545382963618713;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.03943329211397992;  // std dev = 0,828, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.27842631766218207;  // std dev = 0,738, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2564123687585864;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.4961275789065054;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D), economicsectorcompany(E, A) )
%   | | then return 0.11240226125594299;  // std dev = 0,450, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( companyceo(F, B) )
%   | | | then return 0.2731558651781492;  // std dev = 0,678, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.2984512869980896;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.2061374073445397;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.3748144052817619;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( economicsectorcompany(C, A) )
%   | then return 0.15356073398771652;  // std dev = 1,438, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.02302682523883509;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( cityhascompanyoffice(E, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16162857548414666;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.2918466902852771;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then return 0.04076374124663489;  // std dev = 0,451, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.14381000427238544;  // std dev = 0,493, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, D), companyceo(E, F) )
%   then return 0.0967343280702307;  // std dev = 0,449, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.2184003175432827;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then return 0.01175656889160077;  // std dev = 1,101, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( economicsectorcompany(D, A) )
%   | | then return 0.09415173073229695;  // std dev = 1,199, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( companyceo(E, F) )
%   | | | then return 0.06669693324953485;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, D) )
%   | then if ( economicsectorcompany(E, A) )
%   | | then return 0.0706844419636694;  // std dev = 0,391, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.052391389715524234;  // std dev = 0,333, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( economicsectorcompany(F, A) )
%   | | then return 0.12339058098532996;  // std dev = 0,655, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.06580178488843902;  // std dev = 0,501, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.18222328969718554;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, B) )
%   | | then return -0.3160572643031986;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.6269489787712;  // std dev = 0,020, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(E, B), cityhascompanyoffice(F, E) )
%   | | then return 0.029092495100714516;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.05239987933925904;  // std dev = 0,489, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.714286
   AUC PR    = 0.709455
   CLL	      = -0.577984
   Precision = 0.555556 at threshold = 0.5
   Recall    = 0.357143
   F1        = 0.434783


Total learning time: 1.418 seconds
Total inference time: 0.959 seconds
AUC ROC: 0.714286


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'false,false': 'companyceo(A, B)', 'true': 'companyceo(D, B)', 'false,false,false': 'companyceo(A, F)', 'true,true': 'companyceo(A, B)', 'false': 'cityhascompanyoffice(E, A)'}, {'false,false,false,false': [1.225, 3, 3], 'false,false,true': [0.0, 0, 0], 'true,false': [0.5, 1, 1], 'true,true,true': [0.0, 0, 2], 'true,true,false': [0.866, 3, 1], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.707, 1, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'false,false': 'companyceo(F, G)', 'true': 'companyceo(D, B)', 'false': 'cityhascompanyoffice(E, A)'}, {'true,false': [0.5, 1, 1], 'false,false,true': [1.414, 4, 4], 'false,false,false': [0.0, 0, 0], 'true,true': [1.127, 3, 3], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true': 'companyceo(A, B)', 'false': 'cityhascompanyoffice(E, A)', 'true,false': 'companyceo(A, D)'}, {'false,false': [0.5, 4, 4], 'true,false,false': [0.738, 1, 1], 'true,false,true': [0.828, 3, 1], 'true,true': [0.0, 0, 2], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'false,false': 'companyceo(A, B)', 'true': 'companyceo(A, B)', 'false,false,false': 'companyceo(A, H)', 'true,false': 'companyceo(A, D), economicsectorcompany(E, A)', 'true,false,false': 'companyceo(F, B)', 'false': 'cityhascompanyoffice(G, A)'}, {'true,false,true': [0.45, 2, 1], 'false,false,false,false': [1.225, 3, 3], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,false,true': [0.678, 1, 1], 'true,false,false,false': [0.0, 1, 0], 'false,false,false,true': [0.707, 1, 1], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,false': 'companyceo(A, D)', 'false': 'economicsectorcompany(C, A)', 'false,false,false': 'cityhascompanyoffice(E, A)'}, {'false,false,false,false': [0.707, 1, 1], 'true': [0.0, 0, 2], 'false,false,true': [0.784, 2, 1], 'false,true': [1.438, 5, 4], 'false,false,false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)'}, {'false,false': [0.493, 4, 4], 'true': [0.0, 0, 2], 'false,true': [0.451, 4, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, D), companyceo(E, F)'}, {'true': [0.449, 8, 8], 'false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,false': 'economicsectorcompany(D, A)', 'false': 'companyceo(A, C)', 'false,false,false': 'companyceo(E, F)'}, {'false,false,false,false': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,false,true': [1.199, 3, 3], 'false,true': [1.101, 4, 2], 'false,false,false,true': [0.707, 1, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'false,false': 'cityhascompanyoffice(G, A)', 'true': 'companyceo(A, D)', 'true,true': 'economicsectorcompany(E, A)', 'true,false': 'economicsectorcompany(F, A)', 'false': 'companyceo(A, B)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.501, 4, 4], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.333, 1, 1], 'true,true,true': [0.391, 2, 2], 'true,false,true': [0.655, 1, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,false': 'companyceo(E, B), cityhascompanyoffice(F, E)', 'false': 'companyceo(A, C)', 'false,true': 'companyceo(D, B)'}, {'false,true,true': [0.091, 4, 0], 'false,false,true': [0.707, 1, 1], 'false,true,false': [0.02, 0, 2], 'false,false,false': [0.489, 3, 3], 'true': [0.013, 0, 2]}]]
[{'': [0.24999999999999986, 0.24999999999999986], 'false,false': [nan, 0.24999999999999986], 'true': [0.24999999999999992, 0.25], 'false,false,false': [0.25, 0.24999999999999992], 'true,true': [0.0, 0.18750000000000003], 'false': [nan, 0.24999999999999986]}, {'': [0.2213620233858214, 0.24999999999999994], 'false,false': [0.24999999999999994, nan], 'true': [0.21180721511215375, 0.25000000000000006], 'false': [nan, 0.24999999999999994]}, {'': [0.21707638295002923, 0.25], 'true': [0.0, 0.21776100152927214], 'false': [nan, 0.25], 'true,false': [0.17135299878205085, 0.27249856284992574]}, {'': [0.190571786089889, 0.24999999999999994], 'false,false': [nan, 0.24999999999999994], 'true': [0.0, 0.21437196130445865], 'false,false,false': [0.24999999999999997, 0.24999999999999992], 'true,false': [0.2026750846579923, 0.2256253508095589], 'true,false,false': [0.22952644740799505, 0.0], 'false': [nan, 0.24999999999999994]}, {'': [0.0, 0.2302578040718896], 'false,false': [0.2050875570087941, 0.24999999999999997], 'false': [0.22968541409127916, 0.22766304104633175], 'false,false,false': [nan, 0.24999999999999997]}, {'': [0.0, 0.22842356350842744], 'false': [0.2029851214582932, 0.2429515954787829]}, {'': [0.20136968760950869, nan]}, {'': [0.0, 0.22649923228719096], 'false,false': [0.23971702443938328, 0.25], 'false': [0.20199940837955777, 0.2424290994366911], 'false,false,false': [0.25, nan]}, {'': [0.14827691838564225, 0.2510586417031878], 'false,false': [nan, 0.2510586417031878], 'true': [0.12403894976014988, 0.21440164046821936], 'true,true': [0.1532080661965914, 0.055602276658249926], 'true,false': [0.21440164046821936, nan], 'false': [nan, 0.2510586417031878]}, {'': [8.397629141820157e-05, 0.22398423601682801], 'false,false': [0.25, 0.23870051308942097], 'false': [0.19912743150753673, 0.24162724122207385], 'false,true': [0.002061091897604214, 0.00041959440920713575]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true', '0;true;companyceo(D, B).;true;true', '0;true,true;companyceo(A, B).;true;true', '2;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true', '2;true;companyceo(A, B).;true;true', '3;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true', '3;true,false,false;companyceo(F, B).;true;true', '3;true;companyceo(A, B).;true;true', '3;true,false;companyceo(A, D), economicsectorcompany(E, A).;true;true', '4;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '5;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '7;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '9;false;companyceo(A, C).;true;true', '9;false,true;companyceo(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(D, B) )
%   | then if ( companyceo(A, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( bankboughtbank(E, A), companyceo(F, B) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B), bankboughtbank(D, C) )
%   then return -0.17275698025048;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( companyceo(E, B), acquired(E, F) )
%   | then return 0.18996504894415225;  // std dev = 0,967, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( companyceo(G, B), companyeconomicsector(A, H) )
%   | | then return 0.8234890375481175;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3991729644604833;  // std dev = 1,093, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.679589513660524;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.12210991480652995;  // std dev = 1,044, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( bankboughtbank(D, A), companyceo(E, B) )
%   | then return 0.09899524806150177;  // std dev = 0,720, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3210857399875919;  // std dev = 1,012, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.5180662572236461;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D), economicsectorcompany(E, A) )
%   | | then return 0.13905535212425;  // std dev = 0,706, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( companyceo(F, B) )
%   | | | then return 0.23865827207236842;  // std dev = 0,622, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.2848421367066345;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( companyceo(G, B), companyeconomicsector(G, H) )
%   | then return 0.0738541554742659;  // std dev = 0,724, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.25800193323551285;  // std dev = 0,991, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.39036701417413056;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(C, B), companyceo(A, D) )
%   | then return -0.20853236798442648;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyceo(E, B) )
%   | | then return 0.14631581829372223;  // std dev = 1,093, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.4088276292064517;  // std dev = 0,742, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.30234904837354515;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(C, B) )
%   | then if ( companyeconomicsector(A, D), companyeconomicsector(C, D) )
%   | | then return 0.354451473570836;  // std dev = 0,606, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyeconomicsector(A, E), acquired(A, F) )
%   | | | then return 0.011270448453985893;  // std dev = 0,544, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2802296236913384;  // std dev = 0,194, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.31468398152682076;  // std dev = 0,727, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( companyeconomicsector(A, D), companyeconomicsector(C, D) )
%   | then return 0.2708207412707736;  // std dev = 0,576, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(A, E), companyceo(E, F) )
%   | | then return 0.06198196217185989;  // std dev = 0,588, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.22400089707602605;  // std dev = 0,183, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.23866241503333246;  // std dev = 0,721, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.21386773242497686;  // std dev = 0,025, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(C, B), bankboughtbank(D, C) )
%   | then return -0.21317079825007637;  // std dev = 0,125, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyeconomicsector(A, E), companyceo(F, B) )
%   | | then return 0.289379816019331;  // std dev = 0,528, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyceo(G, B) )
%   | | | then return -0.21486134032944312;  // std dev = 0,139, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.18120094921985608;  // std dev = 0,721, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( companyeconomicsector(A, D), companyeconomicsector(C, D) )
%   | then return 0.18041555401134682;  // std dev = 0,470, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(A, E), companyceo(E, F) )
%   | | then return 0.04140971589312972;  // std dev = 0,494, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.1775393568855979;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.13868634489051646;  // std dev = 0,724, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.16526679061953142;  // std dev = 0,034, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, B) )
%   | | then return -0.14048932738487635;  // std dev = 0,112, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.33134067200405637;  // std dev = 0,065, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(E, B), companyeconomicsector(A, F) )
%   | | then return 0.11703247863275687;  // std dev = 0,617, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.16034241621260284;  // std dev = 0,579, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.678571
   AUC PR    = 0.689844
   CLL	      = -0.615746
   Precision = 0.533333 at threshold = 0.5
   Recall    = 0.571429
   F1        = 0.551724


Total learning time: 2.194 seconds
Total inference time: 0.961 seconds
AUC ROC: 0.678571


Refined model AUC ROC: 0.678571


Dataset: 35_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:55:39
{'Inference time': 0.961, 'parameter': {'Inference time': 0.959, 'F1': 0.434783, 'Precision': [0.555556, 0.5], 'CLL': -0.577984, 'AUC PR': 0.709455, 'Recall': 0.357143, 'AUC ROC': 0.714286, 'Learning time': 1.418}, 'F1': 0.551724, 'Precision': [0.533333, 0.5], 'CLL': -0.615746, 'AUC PR': 0.689844, 'Recall': 0.571429, 'AUC ROC': 0.678571, 'Learning time': 3.612}


Starting fold 2

Target train facts examples: 5285
Target train pos examples: 8
Target train neg examples: 8

Target test facts examples: 5285
Target test pos examples: 14
Target test neg examples: 14

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
0;false,false;athleteledsportsteam(A, B).;false;true
0;true;athleteledsportsteam(D, B).;true;true
0;false,false,false;athleteledsportsteam(A, I).;false;false
0;true,true;athleteledsportsteam(A, B).;false;false
0;true,false;teamalsoknownas(B, E), teamplaysagainstteam(B, E).;false;true
0;true,false,false;teamalsoknownas(F, B), teamplaysagainstteam(B, F).;false;false
0;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
1;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
1;false,false;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;true;true
1;true;athleteledsportsteam(D, B).;false;true
1;false,false,false;teamalsoknownas(K, B), athleteledsportsteam(L, K).;false;false
1;true,false;teamalsoknownas(E, B), teamplaysagainstteam(B, E).;false;true
1;true,false,false;teamalsoknownas(B, F), teamplaysagainstteam(B, F).;false;false
1;false,false,true;teamplaysagainstteam(B, I), teamplaysagainstteam(B, J).;false;false
1;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
2;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
2;false,false;teamplaysagainstteam(J, B), teamalsoknownas(K, J).;true;true
2;true;athleteledsportsteam(A, B).;false;true
2;false,false,false;teamalsoknownas(L, B), teamplaysagainstteam(B, L).;false;false
2;true,false;teamplaysagainstteam(D, B), teamalsoknownas(E, D).;false;true
2;true,false,false;athleteledsportsteam(A, F), teamplaysagainstteam(F, G).;false;false
2;false,false,true;teamplaysagainstteam(B, K), teamplaysagainstteam(B, J).;false;false
2;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
3;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
3;false,false;athleteledsportsteam(A, B).;false;true
3;true;athleteledsportsteam(A, B).;false;true
3;false,false,false;athleteledsportsteam(A, I).;false;false
3;true,false;athleteledsportsteam(A, D), athleteplayssport(A, E).;true;true
3;true,false,false;athleteledsportsteam(F, B).;false;false
3;true,false,true;teamplaysinleague(D, C), teamplaysagainstteam(B, D).;false;false
3;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
4;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
4;false,false;athleteplaysinleague(A, F), teamplaysinleague(B, F).;true;true
4;false,false,true;teamplaysagainstteam(G, B), teamalsoknownas(H, G).;false;false
4;false,false,false;athleteplaysinleague(A, I).;false;false
4;false,true,true;athleteplayssport(A, D), teamplayssport(C, D).;false;false
4;false,true,false;athleteledsportsteam(A, C).;false;false
4;false;teamalsoknownas(C, B), teamplaysagainstteam(B, C).;true;true
4;false,true;teamplayssport(B, D), teamplaysinleague(B, E).;true;true
5;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
5;false,false;teamplaysagainstteam(F, B), teamalsoknownas(F, B).;true;true
5;false,false,true;teamplayssport(B, G), teamplaysinleague(B, H).;false;false
5;false,false,false;teamalsoknownas(I, B), teamplayssport(I, J).;false;false
5;false,true,true;teamplayssport(B, E), teamplayssport(C, E).;false;false
5;false,true,false;teamplaysagainstteam(C, B).;false;false
5;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
5;false,true;teamplaysagainstteam(B, D), teamplaysagainstteam(C, D).;true;true
6;;athleteplaysforteam(A, B) :- teamplaysagainstteam(C, B), teamalsoknownas(D, C).;true;true
6;true;teamplaysagainstteam(B, D), teamplaysagainstteam(B, C).;true;true
6;true,true;athleteledsportsteam(E, C), athleteledsportsteam(F, D).;true;true
6;true,false;teamalsoknownas(C, H), teamplayssport(D, I).;false;true
6;true,true,true;teamalsoknownas(C, B).;false;false
6;true,true,false;teamplaysinleague(B, G), teamplaysinleague(D, G).;false;false
6;true,false,false;athleteledsportsteam(A, B).;false;false
6;false;athleteledsportsteam(A, B).;false;false
7;;athleteplaysforteam(A, B) :- teamplaysagainstteam(C, B), teamalsoknownas(D, C).;true;true
7;false,false;teamalsoknownas(J, B), athleteledsportsteam(K, J).;false;true
7;true;athleteledsportsteam(A, B).;false;true
7;false,false,false;athleteledsportsteam(L, B).;false;false
7;true,false;teamplaysagainstteam(B, C), teamplaysagainstteam(B, D).;true;true
7;true,false,false;teamalsoknownas(C, G), teamplayssport(D, H).;false;false
7;true,false,true;teamalsoknownas(C, E), athleteledsportsteam(A, F).;false;false
7;false;athleteplayssport(A, I).;false;true
8;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
8;false,false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
8;true;athleteledsportsteam(A, D), teamplaysagainstteam(B, D).;true;true
8;false,false,false;teamplaysagainstteam(I, B), teamplaysinleague(B, J).;false;false
8;true,true;athleteplayssport(A, E), teamplaysinleague(D, C).;true;false
8;true,false;athleteplayssport(A, F), teamplayssport(B, F).;false;false
8;true,true,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;false;false
8;false;athleteledsportsteam(A, B).;false;true
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,false;teamplaysinleague(B, G), teamplaysagainstteam(B, H).;true;true
9;false,false,true;athleteledsportsteam(I, B), athleteplaysinleague(I, G).;false;false
9;false,false,false;teamplayssport(B, J), teamplaysagainstteam(B, K).;false;false
9;false,true,true;teamalsoknownas(E, D), athleteledsportsteam(F, B).;false;false
9;false,true,false;teamplaysagainstteam(C, B).;false;false
9;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
9;false,true;teamplaysagainstteam(B, D), teamplaysagainstteam(C, D).;true;true


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(D, B) )
%   | then if ( companyceo(A, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.10814893509951219;  // std dev = 0,433, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( companyceo(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(D, B) )
%   | then return 0.4026291431836998;  // std dev = 1,157, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0.09446743783575562;  // std dev = 0,433, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( companyceo(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, G) )
%   | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.6316313983406252;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, D) )
%   | | then return -0.02904795228044345;  // std dev = 0,930, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2564123687585864;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.4769140570623353;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, D), bankboughtbank(E, A) )
%   | | then return -0.1663556329419363;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( companyceo(F, B) )
%   | | | then return -0.1724631747650236;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.8356802143324261;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyceo(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.36139293057022115;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(C, B) )
%   | then if ( bankboughtbank(C, A), companyceo(C, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.02503588535733428;  // std dev = 0,785, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.06494965289618065;  // std dev = 0,719, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( companyceo(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16162857548414666;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.282779382051335;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, B), companyceo(D, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.03109731323839607;  // std dev = 0,288, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( companyceo(E, B) )
%   | | then return 0.16721063500221967;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( companyceo(F, G) )
%   | | | then return 0.12455597792081965;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, D), companyceo(E, F) )
%   then return 0.08787171454208018;  // std dev = 0,333, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.21393494867463825;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then return -0.03917700871783205;  // std dev = 0,757, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( companyceo(D, E) )
%   | | then return 0.09098453326974124;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, D) )
%   | then if ( bankboughtbank(E, A) )
%   | | then if ( companyceo(E, D) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.014021062702626663;  // std dev = 0,470, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.13840065307045604;  // std dev = 0,670, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.06885157247230776;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.17459595833203398;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, B) )
%   | | then return -0.16135964367628894;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.04345967984758059;  // std dev = 0,344, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( companyceo(E, B), companyceo(E, F) )
%   | | then return 0.06971233462516979;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( companyceo(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.034113862892499985;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */


Results
   AUC ROC   = 0.829082
   AUC PR    = 0.843414
   CLL	      = -0.505306
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.357143
   F1        = 0.526316


Total learning time: 1.895 seconds
Total inference time: 1.122 seconds
AUC ROC: 0.829082


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'false,false': 'companyceo(A, B)', 'true': 'companyceo(D, B)', 'false,false,false': 'companyceo(A, F)', 'true,true': 'companyceo(A, B)', 'false': 'companyceo(A, E)'}, {'false,false,false,false': [1.0, 2, 2], 'false,false,true': [0.0, 0, 0], 'true,false': [0.433, 3, 1], 'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'false,false': 'companyceo(F, G)', 'true': 'companyceo(D, B)', 'false': 'companyceo(A, E)'}, {'true,false': [0.433, 3, 1], 'false,false,true': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0], 'true,true': [1.157, 3, 5], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'true': 'companyceo(A, B)', 'false': 'companyceo(A, E)', 'true,false': 'companyceo(A, D)'}, {'false,false': [0.5, 2, 2], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.93, 6, 1], 'true,true': [1.49e-08, 0, 5], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'false,false': 'companyceo(A, B)', 'true': 'companyceo(A, B)', 'false,false,false': 'companyceo(A, H)', 'true,false': 'companyceo(A, D), bankboughtbank(E, A)', 'true,false,false': 'companyceo(F, B)', 'false': 'companyceo(A, G)'}, {'true,false,true': [0.004, 4, 0], 'false,false,false,false': [1.0, 2, 2], 'false,false,true': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 5], 'true,false,false,true': [0.0, 2, 0], 'true,false,false,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,false': 'companyceo(A, D)', 'false,true': 'bankboughtbank(C, A), companyceo(C, D)', 'false,false,false': 'companyceo(A, E)', 'false': 'companyceo(C, B)'}, {'false,false,false,false': [0.707, 1, 1], 'false,false,true': [0.719, 3, 1], 'false,true,true': [0.0, 0, 0], 'true': [0.0, 0, 5], 'false,true,false': [0.785, 4, 1], 'false,false,false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,false': 'companyceo(E, B)', 'false,true': 'companyceo(D, B), companyceo(D, C)', 'false,false,false': 'companyceo(F, G)', 'false': 'companyceo(A, C)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.707, 1, 1], 'false,true,true': [0.0, 0, 0], 'true': [0.0, 0, 5], 'false,true,false': [0.288, 6, 1], 'false,false,false,true': [0.707, 1, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, D), companyceo(E, F)'}, {'true': [0.333, 8, 8], 'false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,false': 'companyceo(D, E)', 'false': 'companyceo(A, C)'}, {'true': [0.0, 0, 5], 'false,false,true': [1.001, 2, 2], 'false,true': [0.757, 6, 1], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'false,false': 'companyceo(A, F)', 'true': 'companyceo(A, D)', 'true,true': 'bankboughtbank(E, A)', 'true,true,true': 'companyceo(E, D)', 'false': 'companyceo(A, B)'}, {'true,true,true,false': [0.47, 4, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.5, 2, 2], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false': [0.67, 2, 2], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,false': 'companyceo(E, B), companyceo(E, F)', 'false,true': 'companyceo(D, B)', 'false,false,false': 'companyceo(G, B)', 'false': 'companyceo(A, C)'}, {'false,false,false,false': [0.707, 1, 1], 'false,false,true': [0.707, 1, 1], 'false,true,true': [0.013, 3, 0], 'true': [0.016, 0, 5], 'false,true,false': [0.344, 3, 1], 'false,false,false,true': [0.0, 0, 0]}]]
[{'': [0.25, 0.25], 'false,false': [nan, 0.25], 'true': [0.23437499999999983, 0.18750000000000003], 'false,false,false': [nan, 0.25], 'true,true': [0.0, 0.0], 'false': [nan, 0.25]}, {'': [0.19514779793778447, 0.25], 'false,false': [0.25, nan], 'true': [0.16731715135902567, 0.18749999999999997], 'false': [nan, 0.25]}, {'': [0.1781243999919464, 0.25], 'true': [4.4408920985006264e-17, 0.12348227913145915], 'false': [nan, 0.25], 'true,false': [0.12348227913145915, nan]}, {'': [0.13323816905692568, 0.25], 'false,false': [nan, 0.25], 'true': [4.4408920985006264e-17, 0.12346236963299204], 'false,false,false': [nan, 0.25], 'true,false': [1.24340223735947e-05, 0.22585624288464268], 'true,false,false': [0.0, 0.0], 'false': [nan, 0.25]}, {'': [0.0, 0.15335625457099414], 'false,false': [0.12939418811239636, 0.24999999999999997], 'false,true': [nan, 0.12322916113190525], 'false': [0.12322916113190525, 0.1716731952022131], 'false,false,false': [nan, 0.24999999999999997]}, {'': [-1.1102230246251566e-17, 0.15103731326502945], 'false,false': [0.24999999999999997, 0.24999999999999997], 'false,true': [nan, 0.08283742044945788], 'false': [0.0828374204494579, 0.25045485494268294], 'false,false,false': [0.24999999999999997, nan]}, {'': [0.1112000456126594, nan]}, {'': [0.0, 0.1469810649070741], 'false,false': [0.25030265186627576, nan], 'false': [0.08177942097776002, 0.25030265186627576]}, {'': [0.059231966714971024, 0.2503115868636603], 'false,false': [nan, 0.2503115868636603], 'true': [0.059231966714971024, nan], 'true,true': [0.02760181124480757, 0.11217875598858525], 'true,true,true': [nan, 0.02760181124480757], 'false': [nan, 0.2503115868636603]}, {'': [4.8908160162974836e-05, 0.14266957262494048], 'false,false': [0.25, 0.24999999999999997], 'false,true': [5.535164298250498e-05, 0.1181107713681168], 'false': [0.07778929482194305, 0.25031681279742546], 'false,false,false': [nan, 0.24999999999999997]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;bankchiefexecutiveceo(A, B) :- companyceo(A, C).;true;true', '0;true;companyceo(D, B).;true;true', '0;true,true;companyceo(A, B).;true;true', '2;;bankchiefexecutiveceo(A, B) :- companyceo(A, C).;true;true', '2;true;companyceo(A, B).;true;true', '3;;bankchiefexecutiveceo(A, B) :- companyceo(A, C).;true;true', '3;true,false,false;companyceo(F, B).;true;true', '3;true;companyceo(A, B).;true;true', '3;true,false;companyceo(A, D), bankboughtbank(E, A).;true;true', '4;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '5;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '7;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '9;false;companyceo(A, C).;true;true', '9;false,true;companyceo(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(D, B) )
%   | then if ( companyceo(A, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B), bankboughtbank(D, C) )
%   then if ( companyeconomicsector(A, E), companyeconomicsector(C, E) )
%   | then return 0.7417903431046247;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15619471171805724;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( bankboughtbank(F, A), companyceo(A, G) )
%   | then return -0.14801058125528113;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.39803285148072304;  // std dev = 1,080, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.5938290339314073;  // std dev = 0,126, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(D, A) )
%   | | then return -0.13032227413821318;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.165860191181788;  // std dev = 0,758, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.22173985429192064;  // std dev = 0,966, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.44874833392019137;  // std dev = 0,133, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, D), bankboughtbank(E, A) )
%   | | then return -0.11626498808177217;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( companyceo(F, B) )
%   | | | then return -0.16523298386033267;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.7554618624926434;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.17534582834915563;  // std dev = 0,963, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.34339361996851786;  // std dev = 0,123, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C), bankboughtbank(D, A) )
%   | then return -0.10485291434792687;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyceo(E, B) )
%   | | then return -0.013980774092424361;  // std dev = 0,700, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.3015365126587654;  // std dev = 0,792, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.27146536598666204;  // std dev = 0,109, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C), bankboughtbank(D, A) )
%   | then return -0.09541997450213939;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyceo(E, B) )
%   | | then return -0.011485118172213565;  // std dev = 0,700, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.22954558599397465;  // std dev = 0,790, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B), bankboughtbank(C, D) )
%   then return 0.24522857751455232;  // std dev = 0,514, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( companyceo(A, B) )
%   | then return 0.20345102545988167;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyceo(A, E), countryhascompanyoffice(F, A) )
%   | | then return 0.05066387631269205;  // std dev = 0,473, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.10261017004507456;  // std dev = 0,769, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.1873652163870699;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C), bankboughtbank(D, A) )
%   | then return -0.08848723744921594;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyceo(E, B) )
%   | | then return -0.024043344936750095;  // std dev = 0,644, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.18552557332680164;  // std dev = 0,777, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.16069018239188176;  // std dev = 0,071, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(C, B), companyceo(A, D) )
%   | then return -0.12207906791881863;  // std dev = 0,070, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( bankboughtbank(E, A), companyceo(A, F) )
%   | | then return -0.08521623978277654;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.12709028034348938;  // std dev = 0,977, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.1403179693654404;  // std dev = 0,064, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, B) )
%   | | then return -0.10975993435323834;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.03399943400933514;  // std dev = 0,391, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.027449093339050934;  // std dev = 0,926, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.84949
   AUC PR    = 0.881992
   CLL	      = -0.484777
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.642857
   F1        = 0.75


Total learning time: 2.948 seconds
Total inference time: 0.865 seconds
AUC ROC: 0.84949


Refined model AUC ROC: 0.84949


Dataset: 35_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 00:55:46
{'Inference time': 0.865, 'parameter': {'Inference time': 1.122, 'F1': 0.526316, 'Precision': [1.0, 0.5], 'CLL': -0.505306, 'AUC PR': 0.843414, 'Recall': 0.357143, 'AUC ROC': 0.829082, 'Learning time': 1.895}, 'F1': 0.75, 'Precision': [0.9, 0.5], 'CLL': -0.484777, 'AUC PR': 0.881992, 'Recall': 0.642857, 'AUC ROC': 0.84949, 'Learning time': 4.843}


Starting fold 3

Target train facts examples: 5285
Target train pos examples: 6
Target train neg examples: 6

Target test facts examples: 5285
Target test pos examples: 16
Target test neg examples: 16

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
0;false,false;athleteledsportsteam(A, B).;false;true
0;true;athleteledsportsteam(D, B).;true;true
0;false,false,false;athleteledsportsteam(A, I).;false;false
0;true,true;athleteledsportsteam(A, B).;false;false
0;true,false;teamalsoknownas(B, E), teamplaysagainstteam(B, E).;false;true
0;true,false,false;teamalsoknownas(F, B), teamplaysagainstteam(B, F).;false;false
0;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
1;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
1;false,false;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;true;true
1;true;athleteledsportsteam(D, B).;false;true
1;false,false,false;teamalsoknownas(K, B), athleteledsportsteam(L, K).;false;false
1;true,false;teamalsoknownas(E, B), teamplaysagainstteam(B, E).;false;true
1;true,false,false;teamalsoknownas(B, F), teamplaysagainstteam(B, F).;false;false
1;false,false,true;teamplaysagainstteam(B, I), teamplaysagainstteam(B, J).;false;false
1;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
2;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
2;false,false;teamplaysagainstteam(J, B), teamalsoknownas(K, J).;true;true
2;true;athleteledsportsteam(A, B).;false;true
2;false,false,false;teamalsoknownas(L, B), teamplaysagainstteam(B, L).;false;false
2;true,false;teamplaysagainstteam(D, B), teamalsoknownas(E, D).;false;true
2;true,false,false;athleteledsportsteam(A, F), teamplaysagainstteam(F, G).;false;false
2;false,false,true;teamplaysagainstteam(B, K), teamplaysagainstteam(B, J).;false;false
2;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
3;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
3;false,false;athleteledsportsteam(A, B).;false;true
3;true;athleteledsportsteam(A, B).;false;true
3;false,false,false;athleteledsportsteam(A, I).;false;false
3;true,false;athleteledsportsteam(A, D), athleteplayssport(A, E).;true;true
3;true,false,false;athleteledsportsteam(F, B).;false;false
3;true,false,true;teamplaysinleague(D, C), teamplaysagainstteam(B, D).;false;false
3;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
4;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
4;false,false;athleteplaysinleague(A, F), teamplaysinleague(B, F).;true;true
4;false,false,true;teamplaysagainstteam(G, B), teamalsoknownas(H, G).;false;false
4;false,false,false;athleteplaysinleague(A, I).;false;false
4;false,true,true;athleteplayssport(A, D), teamplayssport(C, D).;false;false
4;false,true,false;athleteledsportsteam(A, C).;false;false
4;false;teamalsoknownas(C, B), teamplaysagainstteam(B, C).;true;true
4;false,true;teamplayssport(B, D), teamplaysinleague(B, E).;true;true
5;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
5;false,false;teamplaysagainstteam(F, B), teamalsoknownas(F, B).;true;true
5;false,false,true;teamplayssport(B, G), teamplaysinleague(B, H).;false;false
5;false,false,false;teamalsoknownas(I, B), teamplayssport(I, J).;false;false
5;false,true,true;teamplayssport(B, E), teamplayssport(C, E).;false;false
5;false,true,false;teamplaysagainstteam(C, B).;false;false
5;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
5;false,true;teamplaysagainstteam(B, D), teamplaysagainstteam(C, D).;true;true
6;;athleteplaysforteam(A, B) :- teamplaysagainstteam(C, B), teamalsoknownas(D, C).;true;true
6;true;teamplaysagainstteam(B, D), teamplaysagainstteam(B, C).;true;true
6;true,true;athleteledsportsteam(E, C), athleteledsportsteam(F, D).;true;true
6;true,false;teamalsoknownas(C, H), teamplayssport(D, I).;false;true
6;true,true,true;teamalsoknownas(C, B).;false;false
6;true,true,false;teamplaysinleague(B, G), teamplaysinleague(D, G).;false;false
6;true,false,false;athleteledsportsteam(A, B).;false;false
6;false;athleteledsportsteam(A, B).;false;false
7;;athleteplaysforteam(A, B) :- teamplaysagainstteam(C, B), teamalsoknownas(D, C).;true;true
7;false,false;teamalsoknownas(J, B), athleteledsportsteam(K, J).;false;true
7;true;athleteledsportsteam(A, B).;false;true
7;false,false,false;athleteledsportsteam(L, B).;false;false
7;true,false;teamplaysagainstteam(B, C), teamplaysagainstteam(B, D).;true;true
7;true,false,false;teamalsoknownas(C, G), teamplayssport(D, H).;false;false
7;true,false,true;teamalsoknownas(C, E), athleteledsportsteam(A, F).;false;false
7;false;athleteplayssport(A, I).;false;true
8;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
8;false,false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
8;true;athleteledsportsteam(A, D), teamplaysagainstteam(B, D).;true;true
8;false,false,false;teamplaysagainstteam(I, B), teamplaysinleague(B, J).;false;false
8;true,true;athleteplayssport(A, E), teamplaysinleague(D, C).;true;false
8;true,false;athleteplayssport(A, F), teamplayssport(B, F).;false;false
8;true,true,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;false;false
8;false;athleteledsportsteam(A, B).;false;true
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,false;teamplaysinleague(B, G), teamplaysagainstteam(B, H).;true;true
9;false,false,true;athleteledsportsteam(I, B), athleteplaysinleague(I, G).;false;false
9;false,false,false;teamplayssport(B, J), teamplaysagainstteam(B, K).;false;false
9;false,true,true;teamalsoknownas(E, D), athleteledsportsteam(F, B).;false;false
9;false,true,false;teamplaysagainstteam(C, B).;false;false
9;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
9;false,true;teamplaysagainstteam(B, D), teamplaysagainstteam(C, D).;true;true


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(D, B) )
%   | then if ( companyceo(A, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.3581489350995122;  // std dev = 0,500, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyceo(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(D, B) )
%   | then return 0.29701438684128156;  // std dev = 0,845, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.308741135785635;  // std dev = 0,500, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, G) )
%   | | then return 0.3048322194708506;  // std dev = 1,165, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.6558459784192016;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.04730217990601033;  // std dev = 0,822, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( cityhascompanyoffice(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25328927319512573;  // std dev = 0,472, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.49724770270922436;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(F, B) )
%   | | | then return -0.16832648488632557;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.2475914717352643;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0.5947723145453826;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyceo(A, H) )
%   | | | then return -0.20041068199031487;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.20759448350563292;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.3995462330009927;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B) )
%   | then if ( companyalsoknownas(A, C), companyceo(C, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07894981849649103;  // std dev = 0,837, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.19808941048404607;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( cityhascompanyoffice(E, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6628755440934504;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.3089413343664595;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, B), companyceo(D, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.02454999823903209;  // std dev = 0,349, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyceo(E, B) )
%   | | then return 0.01361899738819324;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( companyceo(F, G) )
%   | | | then return 0.5033148375923403;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, D), companyceo(E, F) )
%   then return 0.0876004486729716;  // std dev = 0,355, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.2314703574679847;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then return -0.03507181132612656;  // std dev = 0,777, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyceo(D, E) )
%   | | then return 0.08327880098048746;  // std dev = 0,877, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.061920227614391775;  // std dev = 0,789, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, B) )
%   | then return 0.22467957562991903;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.01881879215370442;  // std dev = 0,402, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.1748542438506502;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, B) )
%   | | then return -0.15352475164064003;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1341884871975272;  // std dev = 0,500, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( companyceo(E, B), cityhascompanyoffice(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(G, B) )
%   | | | then return -0.03212101410703513;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3363163579439319;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.84375
   AUC PR    = 0.865824
   CLL	      = -0.510383
   Precision = 0.818182 at threshold = 0.5
   Recall    = 0.5625
   F1        = 0.666667


Total learning time: 1.472 seconds
Total inference time: 0.864 seconds
AUC ROC: 0.84375


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'false,false': 'companyceo(A, B)', 'true': 'companyceo(D, B)', 'false,false,false': 'companyceo(A, F)', 'true,true': 'companyceo(A, B)', 'false': 'cityhascompanyoffice(E, A)'}, {'false,false,false,false': [1.0, 2, 2], 'false,false,true': [0.0, 0, 1], 'true,false': [0.5, 1, 1], 'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'false,false': 'companyceo(F, G)', 'true': 'companyceo(D, B)', 'false': 'cityhascompanyoffice(E, A)'}, {'true,false': [0.5, 1, 1], 'false,false,true': [1.165, 3, 3], 'false,false,false': [0.0, 0, 0], 'true,true': [0.845, 2, 2], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true': 'companyceo(A, B)', 'false': 'cityhascompanyoffice(E, A)', 'true,false': 'companyceo(A, D)'}, {'false,false': [0.472, 3, 3], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.822, 3, 1], 'true,true': [0.0, 0, 2], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'false,false': 'companyceo(A, B)', 'true': 'companyceo(A, B)', 'false,false,false': 'companyceo(A, H)', 'true,false': 'companyceo(A, D), companyalsoknownas(A, E)', 'true,false,false': 'companyceo(F, B)', 'false': 'cityhascompanyoffice(G, A)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.0, 2, 2], 'false,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 2], 'true,false,false,true': [0.0, 2, 0], 'true,false,false,false': [0.707, 1, 1], 'false,false,false,true': [0.0, 1, 0], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,false': 'companyceo(A, D)', 'false,true': 'companyalsoknownas(A, C), companyceo(C, D)', 'false,false,false': 'cityhascompanyoffice(E, A)', 'false': 'companyceo(C, B)'}, {'false,false,false,false': [0.0, 0, 1], 'false,false,true': [0.707, 1, 1], 'false,true,true': [0.0, 0, 0], 'true': [0.059, 0, 3], 'false,true,false': [0.837, 5, 1], 'false,false,false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,false': 'companyceo(E, B)', 'false,true': 'companyceo(D, B), companyceo(D, C)', 'false,false,false': 'companyceo(F, G)', 'false': 'companyceo(A, C)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.816, 2, 1], 'false,true,true': [0.0, 0, 0], 'true': [0.053, 0, 3], 'false,true,false': [0.349, 4, 1], 'false,false,false,true': [0.0, 0, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, D), companyceo(E, F)'}, {'true': [0.355, 6, 6], 'false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,false': 'companyceo(D, E)', 'false': 'companyceo(A, C)'}, {'true': [0.044, 0, 3], 'false,false,true': [0.877, 2, 2], 'false,true': [0.777, 4, 1], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'false,false': 'cityhascompanyoffice(F, A)', 'true': 'companyceo(A, D)', 'false': 'companyceo(A, B)', 'true,true': 'companyalsoknownas(A, E)'}, {'false,false,true': [0.0, 0, 0], 'false,false,false': [0.402, 3, 2], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [0.789, 3, 3], 'false,true': [0.0, 0, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,false': 'companyceo(E, B), cityhascompanyoffice(F, E)', 'false,true': 'companyceo(D, B)', 'false,false,false': 'companyceo(G, B)', 'false': 'companyceo(A, C)'}, {'false,false,false,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,true,true': [0.015, 3, 0], 'true': [0.016, 0, 3], 'false,true,false': [0.5, 1, 1], 'false,false,false,true': [0.816, 2, 1]}]]
[{'': [0.24999999999999992, 0.24999999999999992], 'false,false': [0.0, 0.24000000000000005], 'true': [0.25, 0.25], 'false,false,false': [0.0, 0.25], 'true,true': [0.0, 0.0], 'false': [nan, 0.24999999999999992]}, {'': [0.20234497799770787, 0.22618776862560988], 'false,false': [0.22618776862560988, nan], 'true': [0.17847162811629394, 0.25000000000000006], 'false': [nan, 0.22618776862560988]}, {'': [0.19477928176772083, 0.22231352384954606], 'true': [0.0, 0.16872707108196003], 'false': [nan, 0.22231352384954606], 'true,false': [0.16872707108196003, nan]}, {'': [0.15870055327754204, 0.21938376526832148], 'false,false': [0.0, 0.22663491441142014], 'true': [0.0, 0.1682469366600697], 'false,false,false': [0.0, 0.25], 'true,false': [nan, 0.1682469366600697], 'true,false,false': [0.0, 0.25000000000000006], 'false': [nan, 0.21938376526832148]}, {'': [0.0011466321395404895, 0.1909065070022903], 'false,false': [0.25, 0.0], 'false,false,false': [nan, 0.0], 'false': [0.11682475449952971, 0.21467247777679535], 'false,true': [nan, 0.11682475449952971]}, {'': [0.0009237915831109741, 0.16793089719656584], 'false,false': [0.2222222222222222, 0.0], 'false,false,false': [0.0, nan], 'false': [0.12150971371639603, 0.21162954465040026], 'false,true': [nan, 0.12150971371639603]}, {'': [0.1263655956968632, nan]}, {'': [0.0006505723643688751, 0.15583465548227127], 'false,false': [0.1920942619173489, nan], 'false': [0.12060169591938674, 0.1920942619173489]}, {'': [0.10381918098276516, 0.14084950206567368], 'false,false': [nan, 0.16195629211656828], 'true': [0.10381918098276516, nan], 'false': [0.0, 0.16195629211656828], 'true,true': [nan, 0.10381918098276516]}, {'': [8.595992391105534e-05, 0.15439587230933113], 'false,false': [nan, 0.19211905987738342], 'false,true': [7.432296135518231e-05, 0.24999999999999994], 'false': [0.11991153164947269, 0.19211905987738342], 'false,false,false': [0.22222222222222224, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true', '0;false,false;companyceo(A, F).;true;true', '0;true;companyceo(D, B).;true;true', '0;false;companyceo(A, B).;true;true', '0;true,true;companyceo(A, B).;true;true', '2;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true', '2;true;companyceo(A, B).;true;true', '3;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true', '3;false,false;companyceo(A, H).;true;true', '3;true;companyceo(A, B).;true;true', '3;false;companyceo(A, B).;true;true', '3;true,false;companyceo(F, B).;true;true', '4;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '4;false,false;companyceo(A, D).;true;true', '4;false;companyceo(C, B).;true;true', '5;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '5;false,false;companyceo(E, B).;true;true', '5;false;companyceo(A, C).;true;true', '7;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '8;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true', '8;false;companyceo(A, B).;true;true', '9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true', '9;false,false;companyceo(G, B).;true;true', '9;false;companyceo(A, C).;true;true', '9;false,true;companyceo(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(D, B) )
%   | then if ( companyceo(A, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.16932078898570713;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3306792110142929;  // std dev = 1,172, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.042960768017768054;  // std dev = 0,822, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.2698656333462233;  // std dev = 1,035, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(D, B) )
%   | | then return -0.17247156514646086;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.2442565649912054;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( companyceo(A, B) )
%   | then return 0.4881302353857252;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, E) )
%   | | then return -0.13689688140356962;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2457224583347294;  // std dev = 0,906, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.33687705954859953;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B) )
%   | then return -0.04607571260718308;  // std dev = 0,767, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.19507512975209418;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.6446452919215419;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.2663198310579928;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then return -0.019829572712962595;  // std dev = 0,774, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyceo(D, B) )
%   | | then return 0.0570322904371193;  // std dev = 0,733, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4877370772446107;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( acquired(C, D), bankboughtbank(E, D) )
%   | then return -0.20663725975444028;  // std dev = 0,113, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.16884997867834275;  // std dev = 0,651, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0.22745718833147935;  // std dev = 0,728, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.19035023265796794;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.17552096706183318;  // std dev = 0,098, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.13370244076384177;  // std dev = 0,965, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then return 0.014119890403488303;  // std dev = 0,789, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( companyceo(A, B) )
%   | then return 0.18272171867710085;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.08069402244688983;  // std dev = 0,673, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.15297878818149935;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, B) )
%   | | then return -0.1517623713088996;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.0679346340513918;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( companyceo(E, B) )
%   | | then return 0.05003692509238844;  // std dev = 0,613, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2731592868686181;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.800781
   AUC PR    = 0.839115
   CLL	      = -0.530423
   Precision = 0.818182 at threshold = 0.5
   Recall    = 0.5625
   F1        = 0.666667


Total learning time: 2.006 seconds
Total inference time: 0.956 seconds
AUC ROC: 0.800781


Refined model AUC ROC: 0.800781


Dataset: 35_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 00:55:52
{'Inference time': 0.956, 'parameter': {'Inference time': 0.864, 'F1': 0.666667, 'Precision': [0.818182, 0.5], 'CLL': -0.510383, 'AUC PR': 0.865824, 'Recall': 0.5625, 'AUC ROC': 0.84375, 'Learning time': 1.472}, 'F1': 0.666667, 'Precision': [0.818182, 0.5], 'CLL': -0.530423, 'AUC PR': 0.839115, 'Recall': 0.5625, 'AUC ROC': 0.800781, 'Learning time': 3.4779999999999998}


