Starting experiment #4 for 35_nell_sports_nell_finances

Start learning from source dataset

Source train facts examples: 8233
Source train pos examples: 1458
Source train neg examples: 1458

WILL Produced-Tree #1
% FOR athleteplaysforteam(A, B):
%   if ( teamplaysinleague(B, C), athleteplaysinleague(A, C) )
%   then if ( athleteledsportsteam(A, B) )
%   | then return 0.8581489350995096;  // std dev = 1,05e-06, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | else if ( athleteplayssport(A, D), athleteledsportsteam(A, E) )
%   | | then if ( teamalsoknownas(F, B), athleteledsportsteam(G, F) )
%   | | | then return 0.7152917922423694;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.41220298915356635;  // std dev = 4,276, 74,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=41 */
%   | | else return 0.6910019610361091;  // std dev = 0,373, 347,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=289 */
%   else if ( athleteplaysinleague(A, H), teamplaysinleague(I, H) )
%   | then return -0.02163248566551471;  // std dev = 0,325, 549,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=66 */
%   | else if ( teamplaysagainstteam(J, B), teamalsoknownas(K, J) )
%   | | then if ( teamplaysagainstteam(B, J), teamplaysagainstteam(B, K) )
%   | | | then return 0.4823725375839796;  // std dev = 15,053, 966,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=603 */
%   | | | else return 0.23206197857776967;  // std dev = 10,377, 460,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=172 */
%   | | else if ( teamalsoknownas(L, B), athleteledsportsteam(M, L) )
%   | | | then return 0.591482268432845;  // std dev = 2,422, 30,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return 0.1341229610735391;  // std dev = 7,845, 308,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=85 */
WILL Produced-Tree #2
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(C, B), teamplaysagainstteam(D, B) )
%   then if ( athleteplaysinleague(C, E), athleteplaysinleague(A, E) )
%   | then return 0.6140468201822685;  // std dev = 0,340, 568,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=487 */
%   | else if ( athleteplaysinleague(A, F), teamplaysinleague(G, F) )
%   | | then return -0.016250103461354828;  // std dev = 0,316, 218,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=29 */
%   | | else if ( athleteledsportsteam(A, B) )
%   | | | then return 0.8019884218250362;  // std dev = 0,178, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | | else return 0.30966899645602375;  // std dev = 14,774, 890,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=454 */
%   else if ( athleteledsportsteam(A, H), teamplaysagainstteam(H, I) )
%   | then return -0.06918750014283737;  // std dev = 0,276, 239,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=21 */
%   | else if ( teamplaysagainstteam(B, J), teamplaysinleague(B, K) )
%   | | then if ( teamplaysagainstteam(L, B), teamalsoknownas(J, L) )
%   | | | then return 0.40915367183165796;  // std dev = 8,892, 347,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=212 */
%   | | | else return 0.17083916850395645;  // std dev = 8,638, 341,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=115 */
%   | | else if ( athleteplaysinleague(A, M) )
%   | | | then return -0.11749897247328597;  // std dev = 0,989, 46,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
%   | | | else return 0.11001583808893886;  // std dev = 5,952, 177,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=49 */
WILL Produced-Tree #3
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.6163355487484928;  // std dev = 0,056, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( teamplaysinleague(B, C), athleteplaysinleague(A, C) )
%   | then if ( athleteledsportsteam(A, D), teamplaysagainstteam(D, E) )
%   | | then if ( teamalsoknownas(E, F), teamplaysagainstteam(D, F) )
%   | | | then return 0.23609441151704633;  // std dev = 4,280, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.454809964339392;  // std dev = 2,499, 40,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | else if ( athleteledsportsteam(G, B), teamplayssport(B, H) )
%   | | | then return 0.5056492601449176;  // std dev = 5,519, 271,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=237 */
%   | | | else return 0.3466261362347338;  // std dev = 3,313, 50,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   | else if ( athleteplaysinleague(A, I), teamplaysinleague(J, I) )
%   | | then if ( teamplaysagainstteam(K, B), teamalsoknownas(K, J) )
%   | | | then return 0.36386626261734417;  // std dev = 3,343, 49,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=27 */
%   | | | else return -0.1041917636162355;  // std dev = 4,261, 480,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=19 */
%   | | else if ( teamplaysagainstteam(L, B), teamalsoknownas(L, B) )
%   | | | then return 0.38191724153647244;  // std dev = 8,350, 313,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=202 */
%   | | | else return 0.20069693130649277;  // std dev = 17,870, 1.360,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=589 */
WILL Produced-Tree #4
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.46672555378672476;  // std dev = 0,063, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( athleteplaysinleague(A, E), teamplaysinleague(B, E) )
%   | | then if ( teamalsoknownas(F, B), teamplaysagainstteam(C, B) )
%   | | | then return 0.47797401790482497;  // std dev = 0,952, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.19771921608099374;  // std dev = 4,816, 96,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=55 */
%   | | else if ( teamplaysagainstteam(B, D), teamplaysagainstteam(D, B) )
%   | | | then return 0.10271526825391569;  // std dev = 4,287, 93,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | | else return -0.12737232320534475;  // std dev = 2,942, 291,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=9 */
%   | else if ( teamplaysinleague(B, G), athleteplaysinleague(A, G) )
%   | | then if ( teamplaysagainstteam(H, B), teamalsoknownas(I, H) )
%   | | | then return 0.3760343737005608;  // std dev = 6,111, 308,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=263 */
%   | | | else return 0.1080520818812986;  // std dev = 1,972, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( athleteplaysinleague(A, J), teamplaysinleague(K, J) )
%   | | | then return -0.04440395472713225;  // std dev = 4,818, 281,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=31 */
%   | | | else return 0.21303483573196838;  // std dev = 19,071, 1.537,000 (wgt'ed) examples reached here.  /* #neg=769 #pos=768 */
WILL Produced-Tree #5
% FOR athleteplaysforteam(A, B):
%   if ( teamplaysinleague(B, C), athleteplaysinleague(A, C) )
%   then if ( teamalsoknownas(B, D), teamalsoknownas(E, B) )
%   | then return 0.37161185423236165;  // std dev = 0,117, 55,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=54 */
%   | else if ( athleteledsportsteam(A, B) )
%   | | then return 0.3196769383530977;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   | | else if ( athleteledsportsteam(A, F), teamplaysagainstteam(F, G) )
%   | | | then return 0.16796175598142743;  // std dev = 4,885, 103,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=62 */
%   | | | else return 0.2619042852540845;  // std dev = 6,415, 292,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=241 */
%   else if ( athleteplaysinleague(A, H), teamplaysinleague(I, H) )
%   | then return -0.027508138573071883;  // std dev = 0,277, 549,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=66 */
%   | else if ( teamplaysagainstteam(J, B), teamplaysinleague(B, K) )
%   | | then if ( teamplaysagainstteam(B, L), teamalsoknownas(L, J) )
%   | | | then return 0.23570843914692818;  // std dev = 14,732, 986,000 (wgt'ed) examples reached here.  /* #neg=376 #pos=610 */
%   | | | else return 0.08492797658564125;  // std dev = 11,567, 623,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=235 */
%   | | else if ( teamplaysagainstteam(B, M), teamplayssport(B, N) )
%   | | | then return -0.08307018292575567;  // std dev = 2,802, 58,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | | else return 0.0351178703263648;  // std dev = 4,348, 97,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
WILL Produced-Tree #6
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.3033898822090424;  // std dev = 0,083, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( teamalsoknownas(C, B), athleteledsportsteam(D, C) )
%   | then if ( teamalsoknownas(B, C) )
%   | | then if ( athleteledsportsteam(A, C) )
%   | | | then return 0.3588573429868469;  // std dev = 0,381, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.09401179355109789;  // std dev = 2,002, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( athleteledsportsteam(A, E) )
%   | | | then return 0.03922481021663997;  // std dev = 2,780, 54,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.26906150927611056;  // std dev = 7,695, 323,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=238 */
%   | else if ( athleteledsportsteam(A, F), teamplaysagainstteam(G, F) )
%   | | then if ( teamplaysagainstteam(B, H), teamplaysagainstteam(F, H) )
%   | | | then return 0.09426065907618163;  // std dev = 6,163, 168,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=75 */
%   | | | else return -0.11997945614149252;  // std dev = 2,475, 264,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=7 */
%   | | else if ( teamplaysagainstteam(I, B), teamalsoknownas(J, I) )
%   | | | then return 0.1193736916885591;  // std dev = 17,024, 1.429,000 (wgt'ed) examples reached here.  /* #neg=698 #pos=731 */
%   | | | else return 0.008716030729768273;  // std dev = 8,090, 359,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=92 */
WILL Produced-Tree #7
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.2450982614615481;  // std dev = 0,076, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( teamplaysagainstteam(C, B), teamalsoknownas(E, D) )
%   | | then if ( teamplaysagainstteam(B, E) )
%   | | | then return 0.24622836925778918;  // std dev = 3,317, 58,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=43 */
%   | | | else return 0.012304371678242026;  // std dev = 2,066, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( teamplaysagainstteam(D, B), teamplayssport(D, F) )
%   | | | then return 0.025186342266272154;  // std dev = 5,157, 134,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=49 */
%   | | | else return -0.1052879510310407;  // std dev = 2,838, 286,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=10 */
%   | else if ( teamplaysagainstteam(G, B), teamalsoknownas(G, B) )
%   | | then if ( teamplayssport(B, H), teamplaysinleague(B, I) )
%   | | | then return 0.19738702109178677;  // std dev = 8,403, 392,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=280 */
%   | | | else return -0.21927789906735867;  // std dev = 1,056, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( teamplaysinleague(B, J), athleteplaysinleague(A, J) )
%   | | | then return 0.16906393771683825;  // std dev = 5,974, 248,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=203 */
%   | | | else return 0.05783164195234742;  // std dev = 17,542, 1.479,000 (wgt'ed) examples reached here.  /* #neg=894 #pos=585 */
WILL Produced-Tree #8
% FOR athleteplaysforteam(A, B):
%   if ( athleteplayssport(A, C), teamplayssport(B, C) )
%   then if ( teamalsoknownas(D, B), teamplaysagainstteam(D, E) )
%   | then return 0.2444566707963546;  // std dev = 0,272, 121,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=111 */
%   | else if ( teamplaysagainstteam(F, B), teamalsoknownas(G, F) )
%   | | then if ( teamplaysagainstteam(G, B), teamalsoknownas(H, G) )
%   | | | then return 0.23225897024475203;  // std dev = 3,430, 117,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=106 */
%   | | | else return 0.06664198299482578;  // std dev = 4,891, 169,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=117 */
%   | | else if ( teamplaysagainstteam(B, I), teamalsoknownas(I, J) )
%   | | | then return -0.10803696368012497;  // std dev = 2,177, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.28051905396001436;  // std dev = 0,941, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( athleteledsportsteam(A, B) )
%   | then return 0.22180771108316255;  // std dev = 0,072, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( athleteplayssport(A, K) )
%   | | then return -0.04547192544488103;  // std dev = 0,286, 506,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=108 */
%   | | else if ( athleteledsportsteam(A, L) )
%   | | | then return -0.05597654331218782;  // std dev = 4,519, 212,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=43 */
%   | | | else return 0.08284628962525403;  // std dev = 18,717, 1.594,000 (wgt'ed) examples reached here.  /* #neg=797 #pos=797 */
WILL Produced-Tree #9
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.17477917051904146;  // std dev = 0,062, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( teamplaysagainstteam(C, B), teamalsoknownas(E, D) )
%   | | then if ( teamplaysagainstteam(C, E), teamplaysagainstteam(B, C) )
%   | | | then return 0.059753126203381066;  // std dev = 3,391, 50,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | | | else return 0.2574856449534208;  // std dev = 1,871, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | else if ( teamplayssport(B, F), teamplayssport(C, F) )
%   | | | then return 0.05621074918375224;  // std dev = 3,875, 83,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=34 */
%   | | | else return -0.08096262705952237;  // std dev = 4,358, 337,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=25 */
%   | else if ( teamplaysagainstteam(G, B), teamplayssport(G, H) )
%   | | then if ( teamplaysinleague(B, I), teamplaysinleague(G, I) )
%   | | | then return 0.07618876053911228;  // std dev = 19,320, 1.872,000 (wgt'ed) examples reached here.  /* #neg=850 #pos=1.022 */
%   | | | else return -0.09068531056574221;  // std dev = 4,351, 137,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=24 */
%   | | else if ( athleteledsportsteam(J, B) )
%   | | | then return -0.2287513484157425;  // std dev = 0,442, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.04436287559041098;  // std dev = 4,153, 108,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=23 */
WILL Produced-Tree #10
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.15155242473328434;  // std dev = 0,056, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( teamplaysinleague(B, C), athleteplaysinleague(A, C) )
%   | then if ( athleteledsportsteam(A, D), teamplaysagainstteam(B, D) )
%   | | then if ( teamplaysagainstteam(D, B) )
%   | | | then return 0.07534232503305567;  // std dev = 3,029, 47,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=33 */
%   | | | else return -0.21688363122365956;  // std dev = 1,339, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( teamplaysagainstteam(E, B), teamalsoknownas(F, E) )
%   | | | then return 0.1199762594827594;  // std dev = 6,874, 358,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=298 */
%   | | | else return -0.08218786369621105;  // std dev = 2,195, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( athleteplaysinleague(A, G), teamplaysinleague(H, G) )
%   | | then if ( teamplaysagainstteam(H, B), athleteledsportsteam(I, H) )
%   | | | then return 0.1461271752979446;  // std dev = 3,873, 83,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=33 */
%   | | | else return -0.09173502810762975;  // std dev = 3,557, 446,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=13 */
%   | | else if ( teamplaysagainstteam(J, B), teamplayssport(J, K) )
%   | | | then return 0.046633543702379605;  // std dev = 18,586, 1.558,000 (wgt'ed) examples reached here.  /* #neg=791 #pos=767 */
%   | | | else return -0.05210982823652875;  // std dev = 4,263, 115,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=24 */


Starting fold 1

Target train facts examples: 5285
Target train pos examples: 8
Target train neg examples: 8

Target test facts examples: 5285
Target test pos examples: 14
Target test neg examples: 14

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
0;true,false,true;teamalsoknownas(F, B), athleteledsportsteam(G, F).;false;false
0;false,false,false;teamalsoknownas(L, B), athleteledsportsteam(M, L).;false;false
0;true,false;athleteplayssport(A, D), athleteledsportsteam(A, E).;true;false
0;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
0;false,false;teamplaysagainstteam(J, B), teamalsoknownas(K, J).;true;true
0;false,false,true;teamplaysagainstteam(B, J), teamplaysagainstteam(B, K).;false;false
0;true;athleteledsportsteam(A, B).;false;true
1;;athleteplaysforteam(A, B) :- athleteledsportsteam(C, B), teamplaysagainstteam(D, B).;true;true
1;false,false,false;athleteplaysinleague(A, M).;false;false
1;true,false,false;athleteledsportsteam(A, B).;false;false
1;true,false;athleteplaysinleague(A, F), teamplaysinleague(G, F).;false;true
1;false;athleteledsportsteam(A, H), teamplaysagainstteam(H, I).;false;true
1;false,false;teamplaysagainstteam(B, J), teamplaysinleague(B, K).;true;true
1;false,false,true;teamplaysagainstteam(L, B), teamalsoknownas(J, L).;false;false
1;true;athleteplaysinleague(C, E), athleteplaysinleague(A, E).;false;true
2;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
2;false,true,false;athleteledsportsteam(G, B), teamplayssport(B, H).;false;false
2;false,true,true;teamalsoknownas(E, F), teamplaysagainstteam(D, F).;false;false
2;false,false,true;teamplaysagainstteam(K, B), teamalsoknownas(K, J).;false;false
2;false;teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
2;false,false;athleteplaysinleague(A, I), teamplaysinleague(J, I).;true;true
2;false,true;athleteledsportsteam(A, D), teamplaysagainstteam(D, E).;true;true
2;false,false,false;teamplaysagainstteam(L, B), teamalsoknownas(L, B).;false;false
3;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
3;false,true,false;teamplaysagainstteam(B, D), teamplaysagainstteam(D, B).;false;false
3;false,true,true;teamalsoknownas(F, B), teamplaysagainstteam(C, B).;false;false
3;false,false,true;teamplaysagainstteam(H, B), teamalsoknownas(I, H).;false;false
3;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
3;false,false;teamplaysinleague(B, G), athleteplaysinleague(A, G).;true;true
3;false,true;athleteplaysinleague(A, E), teamplaysinleague(B, E).;true;true
3;false,false,false;athleteplaysinleague(A, J), teamplaysinleague(K, J).;false;false
4;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
4;false,false,false;teamplaysagainstteam(B, M), teamplayssport(B, N).;false;false
4;true,false,false;athleteledsportsteam(A, F), teamplaysagainstteam(F, G).;false;false
4;true,false;athleteledsportsteam(A, B).;false;true
4;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
4;false,false;teamplaysagainstteam(J, B), teamplaysinleague(B, K).;true;true
4;false,false,true;teamplaysagainstteam(B, L), teamalsoknownas(L, J).;false;false
4;true;teamalsoknownas(B, D), teamalsoknownas(E, B).;false;true
5;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
5;false,true,false;athleteledsportsteam(A, E).;false;false
5;false,true,true;athleteledsportsteam(A, C).;false;false
5;false,false,true;teamplaysagainstteam(B, H), teamplaysagainstteam(F, H).;false;false
5;false;teamalsoknownas(C, B), athleteledsportsteam(D, C).;true;true
5;false,false;athleteledsportsteam(A, F), teamplaysagainstteam(G, F).;true;true
5;false,true;teamalsoknownas(B, C).;true;true
5;false,false,false;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;false;false
6;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
6;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
6;false,true,true;teamplaysagainstteam(B, E).;false;false
6;false,false,true;teamplayssport(B, H), teamplaysinleague(B, I).;false;false
6;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
6;false,false;teamplaysagainstteam(G, B), teamalsoknownas(G, B).;true;true
6;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
6;false,false,false;teamplaysinleague(B, J), athleteplaysinleague(A, J).;false;false
7;;athleteplaysforteam(A, B) :- athleteplayssport(A, C), teamplayssport(B, C).;true;true
7;true,false,true;teamplaysagainstteam(G, B), teamalsoknownas(H, G).;false;false
7;false,false,false;athleteledsportsteam(A, L).;false;false
7;false;athleteledsportsteam(A, B).;false;true
7;true,false;teamplaysagainstteam(F, B), teamalsoknownas(G, F).;true;true
7;true,false,false;teamplaysagainstteam(B, I), teamalsoknownas(I, J).;false;false
7;false,false;athleteplayssport(A, K).;false;true
7;true;teamalsoknownas(D, B), teamplaysagainstteam(D, E).;false;true
8;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
8;false,true,false;teamplayssport(B, F), teamplayssport(C, F).;false;false
8;false,true,true;teamplaysagainstteam(C, E), teamplaysagainstteam(B, C).;false;false
8;false,false,true;teamplaysinleague(B, I), teamplaysinleague(G, I).;false;false
8;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
8;false,false;teamplaysagainstteam(G, B), teamplayssport(G, H).;true;true
8;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
8;false,false,false;athleteledsportsteam(J, B).;false;false
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,true,false;teamplaysagainstteam(E, B), teamalsoknownas(F, E).;false;false
9;false,true,true;teamplaysagainstteam(D, B).;false;false
9;false,false,true;teamplaysagainstteam(H, B), athleteledsportsteam(I, H).;false;false
9;false;teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
9;false,false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;true;true
9;false,true;athleteledsportsteam(A, D), teamplaysagainstteam(B, D).;true;true
9;false,false,false;teamplaysagainstteam(J, B), teamplayssport(J, K).;false;false


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( economicsectorcompany(D, A), companyceo(A, E) )
%   | | then if ( companyceo(F, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(I, J) )
%   | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( cityhascompanyoffice(D, C), cityhascompanyoffice(D, A) )
%   | then return 0.2763394517212514;  // std dev = 0,886, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.8332054912315484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyceo(A, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20874113578563502;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( companyceo(A, F) )
%   | then return 0.4917173727495772;  // std dev = 0,807, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.1667945087684516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.308741135785635;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.660497406935066;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( cityhascompanyoffice(C, A) )
%   | then if ( companyceo(A, D) )
%   | | then return 0.022297726601663563;  // std dev = 0,422, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( companyceo(E, B) )
%   | | | then return 0.6846689160841062;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1448829431573806;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.26322236331850946;  // std dev = 0,494, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.5012535489346222;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then if ( cityhascompanyoffice(D, A) )
%   | | then return 0.018360907714752073;  // std dev = 0,422, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.19518828566204746;  // std dev = 0,470, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.19740276293894699;  // std dev = 0,325, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2183054918807509;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.3784248433709432;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.015083720125336028;  // std dev = 0,844, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.16091181481999406;  // std dev = 0,442, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.16723448862330753;  // std dev = 0,492, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.29428470959295294;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(C, D) )
%   | then if ( companyceo(A, D) )
%   | | then return 0.04620839128572207;  // std dev = 1,078, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( companyceo(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13323981842426635;  // std dev = 1,298, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.23704502887202927;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then return 0.036920137900522614;  // std dev = 0,440, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( cityhascompanyoffice(D, A) )
%   | | then return 0.1038914555498035;  // std dev = 0,420, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.1028971166614372;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( economicsectorcompany(C, A) )
%   then return 0.090426346601087;  // std dev = 0,430, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( companyceo(A, B) )
%   | then return 0.19686668864343793;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( economicsectorcompany(D, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, E) )
%   | | | then return -0.014819328167250206;  // std dev = 0,711, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07395981556795414;  // std dev = 0,690, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.17527110955439468;  // std dev = 0,011, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then return 0.022138160950115494;  // std dev = 0,438, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( companyceo(D, B) )
%   | | then return 0.12316936581138642;  // std dev = 1,031, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.04753614647571385;  // std dev = 0,743, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.15136639298876636;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( cityhascompanyoffice(C, A) )
%   | then if ( companyceo(A, D) )
%   | | then return -0.019945485908113715;  // std dev = 0,418, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.05525593723610969;  // std dev = 0,272, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05369669722005405;  // std dev = 0,492, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */


Results
   AUC ROC   = 0.82398
   AUC PR    = 0.869124
   CLL	      = -0.532565
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.571429
   F1        = 0.727273


Total learning time: 1.433 seconds
Total inference time: 0.758 seconds
AUC ROC: 0.82398


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true,false,true': 'companyceo(F, G)', 'true,false': 'economicsectorcompany(D, A), companyceo(A, E)', 'false': 'cityhascompanyoffice(H, A)', 'false,false': 'companyceo(I, J)', 'true': 'companyceo(A, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,false': [0.816, 2, 1], 'true,false,true,true': [0.816, 2, 1], 'false,false,true': [1.414, 4, 4], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, B)', 'true,false,false': 'companyceo(A, B)', 'true,false': 'cityhascompanyoffice(E, A)', 'false': 'companyceo(A, F)', 'false,false': 'cityhascompanyoffice(G, A)', 'true': 'cityhascompanyoffice(D, C), cityhascompanyoffice(D, A)'}, {'true,false,false,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 1], 'true,false,false,false': [1.095, 3, 2], 'true,true': [0.886, 2, 2], 'false,true': [0.807, 1, 2], 'false,false,true': [0.0, 1, 0], 'false,false,false': [0.707, 1, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'cityhascompanyoffice(C, A)', 'false,true,false': 'companyceo(E, B)', 'false,false': 'cityhascompanyoffice(F, A)', 'false,true': 'companyceo(A, D)'}, {'false,true,true': [0.422, 3, 1], 'false,true,false,false': [0.0, 1, 0], 'true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.494, 4, 4]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'cityhascompanyoffice(E, A)', 'false,true': 'cityhascompanyoffice(D, A)', 'false,false,false': 'cityhascompanyoffice(F, A)'}, {'false,false,false,false': [1.225, 3, 3], 'false,true,false': [0.47, 1, 1], 'false,true,true': [0.422, 3, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.325, 1, 1], 'true': [0.0, 0, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true,false': 'companyceo(A, D)', 'false': 'cityhascompanyoffice(E, A)', 'true': 'companyceo(A, B)'}, {'true,true': [0.0, 0, 2], 'true,false,false': [0.442, 1, 1], 'true,false,true': [0.844, 3, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 4, 4]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(C, D)', 'false,true,false': 'companyceo(A, E)', 'false,true': 'companyceo(A, D)'}, {'true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [1.078, 4, 2], 'false,true,false,false': [1.298, 4, 4]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'cityhascompanyoffice(D, A)'}, {'true': [0.0, 0, 2], 'false,true': [0.44, 4, 2], 'false,false,true': [0.42, 1, 1], 'false,false,false': [1.225, 3, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'economicsectorcompany(C, A)', 'false': 'companyceo(A, B)', 'false,false': 'economicsectorcompany(D, A)', 'false,false,false': 'companyceo(A, E)'}, {'false,false,false,true': [0.711, 2, 1], 'false,false,false,false': [0.69, 1, 1], 'false,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true': [0.43, 5, 5]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(D, B)'}, {'true': [0.011, 0, 2], 'false,true': [0.438, 4, 2], 'false,false,true': [1.031, 2, 3], 'false,false,false': [0.743, 2, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'cityhascompanyoffice(C, A)', 'false,false': 'cityhascompanyoffice(E, A)', 'false,true': 'companyceo(A, D)'}, {'true': [0.01, 0, 2], 'false,true,false': [0.272, 1, 1], 'false,true,true': [0.418, 3, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.492, 4, 4]}]]
[{'': [0.24999999999999986, 0.24999999999999986], 'true,false,true': [0.22222222222222224, nan], 'true,false': [0.22222222222222224, 0.22222222222222224], 'false': [nan, 0.24999999999999986], 'false,false': [0.24999999999999986, nan], 'true': [0.0, 0.22222222222222224]}, {'': [0.23136276723870153, 0.2460722335975272], 'false': [0.21691869983143797, 0.21691869983143794], 'true,false': [0.0, 0.23999999999999994], 'true,false,false': [nan, 0.23999999999999994], 'false,false': [0.0, 0.25000000000000006], 'true': [0.19636770693928973, 0.2541605182253444]}, {'': [0.0, 0.22676571658698036], 'false,true,false': [0.0, 0.0], 'false': [0.1899065556455083, 0.24365795635545007], 'false,false': [nan, 0.24365795635545007], 'false,true': [0.1784058266698924, 0.17203907179275185]}, {'': [0.0, 0.21234589856819458], 'false': [0.19947694780447098, 0.21409679348279076], 'false,false': [0.10578272631204685, 0.25009225152040176], 'false,true': [0.17829991350576332, 0.22098573534074267], 'false,false,false': [nan, 0.25009225152040176]}, {'': [0.13562595306895886, 0.24240710236526578], 'true,false': [0.1782129976922163, 0.09760853497222437], 'false': [nan, 0.24240710236526578], 'true': [0.0, 0.15607058416383549]}, {'': [0.0, 0.20517593762333067], 'false,true,false': [nan, 0.21061094459629603], 'false': [0.20517593762333067, nan], 'false,true': [0.19360099348236437, 0.21061094459629603]}, {'': [0.0, 0.20370768711791956], 'false': [0.1932403171554744, 0.20967857519319275], 'false,false': [0.08832903427878888, 0.25012817498720447]}, {'': [0.18502453977248495, 0.16942802376576435], 'false': [0.0, 0.1981407277054811], 'false,false': [nan, 0.1981407277054811], 'false,false,false': [0.16846476006772826, 0.23792563734469677]}, {'': [5.91195705810163e-05, 0.2019056087818026], 'false': [0.19206270665519729, 0.20870054331793578], 'false,false': [0.2126804757085195, 0.1838545902137121]}, {'': [4.6681842345044217e-05, 0.2002208024854191], 'false': [0.14274045064352972, 0.24231983720408634], 'false,false': [nan, 0.24231983720408634], 'false,true': [0.1751002289302793, 0.07425072470808619]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
0;true;companyceo(A, B).;true;true
1;;bankchiefexecutiveceo(A, B) :- companyceo(C, B).;true;true
1;true,false;cityhascompanyoffice(E, A).;true;true
1;false;companyceo(A, F).;true;true
1;false,false;cityhascompanyoffice(G, A).;true;true
1;true;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;true;true
2;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
2;false,true,false;companyceo(E, B).;true;true
2;false;cityhascompanyoffice(C, A).;true;true
2;false,true;companyceo(A, D).;true;true
3;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
4;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
4;true;companyceo(A, B).;true;true
5;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
6;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
7;;bankchiefexecutiveceo(A, B) :- economicsectorcompany(C, A).;true;true
7;false;companyceo(A, B).;true;true
8;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( companyceo(D, B), companyeconomicsector(D, E) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( cityhascompanyoffice(D, C), cityhascompanyoffice(D, A) )
%   | then return 0.2763394517212514;  // std dev = 0,886, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.8332054912315484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.22898834271594878;  // std dev = 1,054, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( companyceo(A, F) )
%   | then return 0.47782764823327284;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.1667945087684516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2670719622367217;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.660497406935066;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( cityhascompanyoffice(C, A) )
%   | then if ( companyceo(A, D) )
%   | | then return 0.023583474295415623;  // std dev = 0,846, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( companyceo(E, B) )
%   | | | then return 0.6846689160841062;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1448829431573806;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( companyceo(F, B), companyeconomicsector(F, G) )
%   | | then return 0.061970130244564436;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.4567534848813133;  // std dev = 0,856, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.5012535489346222;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(C, B), companyeconomicsector(C, D) )
%   | then if ( companyeconomicsector(A, D) )
%   | | then return 0.37074958016639653;  // std dev = 0,741, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.20143640133831459;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, E) )
%   | | then return -0.0032001374413492636;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.45065772522629266;  // std dev = 0,682, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.3784248433709432;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.03196555835921883;  // std dev = 0,906, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( companyceo(D, B), companyeconomicsector(D, E) )
%   | then return 0.05849363698304672;  // std dev = 0,783, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.29911585697025217;  // std dev = 0,799, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.29428470959295294;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyeconomicsector(A, C), companyceo(D, B) )
%   | then return 0.24731817214759522;  // std dev = 0,904, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then return 0.28485435127874265;  // std dev = 0,596, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.13908216931636902;  // std dev = 0,667, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.23704502887202927;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C), companyceo(D, B) )
%   | then return -0.24260359294516745;  // std dev = 0,127, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyceo(E, B), companyeconomicsector(A, F) )
%   | | then return 0.32830420745788763;  // std dev = 0,665, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.22353325339882466;  // std dev = 0,585, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07160231712458448;  // std dev = 0,654, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( economicsectorcompany(C, A) )
%   then if ( companyceo(D, B) )
%   | then return 0.15529722912849062;  // std dev = 0,814, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.07698771634746002;  // std dev = 0,721, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( companyceo(A, B) )
%   | then return 0.19686668864343793;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.057321694778180485;  // std dev = 0,601, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.17052181865089228;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C), companyceo(D, B) )
%   | then return -0.21805465850079267;  // std dev = 0,132, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(A, E) )
%   | | then return -0.08986374488695431;  // std dev = 0,574, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( bankboughtbank(F, A) )
%   | | | then return 0.1700916917786093;  // std dev = 0,622, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19412277996192664;  // std dev = 0,668, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.1477390111152948;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(C, B), companyeconomicsector(C, D) )
%   | then if ( companyeconomicsector(A, D) )
%   | | then return 0.15549911658882215;  // std dev = 0,568, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.20077394510695196;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.02779263906469326;  // std dev = 0,580, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.16862920100956266;  // std dev = 0,635, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.857143
   AUC PR    = 0.873909
   CLL	      = -0.531126
   Precision = 0.619048 at threshold = 0.5
   Recall    = 0.928571
   F1        = 0.742857


Total learning time: 1.616 seconds
Total inference time: 0.734 seconds
AUC ROC: 0.857143


Refined model AUC ROC: 0.857143


Dataset: 35_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 05:19:12
{'Recall': 0.928571, 'Learning time': 3.0490000000000004, 'F1': 0.742857, 'Precision': [0.619048, 0.5], 'AUC PR': 0.873909, 'CLL': -0.531126, 'parameter': {'Recall': 0.571429, 'Learning time': 1.433, 'F1': 0.727273, 'Precision': [1.0, 0.5], 'AUC PR': 0.869124, 'CLL': -0.532565, 'AUC ROC': 0.82398, 'Inference time': 0.758}, 'AUC ROC': 0.857143, 'Inference time': 0.734}


Starting fold 2

Target train facts examples: 5285
Target train pos examples: 8
Target train neg examples: 8

Target test facts examples: 5285
Target test pos examples: 14
Target test neg examples: 14

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
0;true,false,true;teamalsoknownas(F, B), athleteledsportsteam(G, F).;false;false
0;false,false,false;teamalsoknownas(L, B), athleteledsportsteam(M, L).;false;false
0;true,false;athleteplayssport(A, D), athleteledsportsteam(A, E).;true;false
0;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
0;false,false;teamplaysagainstteam(J, B), teamalsoknownas(K, J).;true;true
0;false,false,true;teamplaysagainstteam(B, J), teamplaysagainstteam(B, K).;false;false
0;true;athleteledsportsteam(A, B).;false;true
1;;athleteplaysforteam(A, B) :- athleteledsportsteam(C, B), teamplaysagainstteam(D, B).;true;true
1;false,false,false;athleteplaysinleague(A, M).;false;false
1;true,false,false;athleteledsportsteam(A, B).;false;false
1;true,false;athleteplaysinleague(A, F), teamplaysinleague(G, F).;false;true
1;false;athleteledsportsteam(A, H), teamplaysagainstteam(H, I).;false;true
1;false,false;teamplaysagainstteam(B, J), teamplaysinleague(B, K).;true;true
1;false,false,true;teamplaysagainstteam(L, B), teamalsoknownas(J, L).;false;false
1;true;athleteplaysinleague(C, E), athleteplaysinleague(A, E).;false;true
2;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
2;false,true,false;athleteledsportsteam(G, B), teamplayssport(B, H).;false;false
2;false,true,true;teamalsoknownas(E, F), teamplaysagainstteam(D, F).;false;false
2;false,false,true;teamplaysagainstteam(K, B), teamalsoknownas(K, J).;false;false
2;false;teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
2;false,false;athleteplaysinleague(A, I), teamplaysinleague(J, I).;true;true
2;false,true;athleteledsportsteam(A, D), teamplaysagainstteam(D, E).;true;true
2;false,false,false;teamplaysagainstteam(L, B), teamalsoknownas(L, B).;false;false
3;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
3;false,true,false;teamplaysagainstteam(B, D), teamplaysagainstteam(D, B).;false;false
3;false,true,true;teamalsoknownas(F, B), teamplaysagainstteam(C, B).;false;false
3;false,false,true;teamplaysagainstteam(H, B), teamalsoknownas(I, H).;false;false
3;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
3;false,false;teamplaysinleague(B, G), athleteplaysinleague(A, G).;true;true
3;false,true;athleteplaysinleague(A, E), teamplaysinleague(B, E).;true;true
3;false,false,false;athleteplaysinleague(A, J), teamplaysinleague(K, J).;false;false
4;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
4;false,false,false;teamplaysagainstteam(B, M), teamplayssport(B, N).;false;false
4;true,false,false;athleteledsportsteam(A, F), teamplaysagainstteam(F, G).;false;false
4;true,false;athleteledsportsteam(A, B).;false;true
4;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
4;false,false;teamplaysagainstteam(J, B), teamplaysinleague(B, K).;true;true
4;false,false,true;teamplaysagainstteam(B, L), teamalsoknownas(L, J).;false;false
4;true;teamalsoknownas(B, D), teamalsoknownas(E, B).;false;true
5;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
5;false,true,false;athleteledsportsteam(A, E).;false;false
5;false,true,true;athleteledsportsteam(A, C).;false;false
5;false,false,true;teamplaysagainstteam(B, H), teamplaysagainstteam(F, H).;false;false
5;false;teamalsoknownas(C, B), athleteledsportsteam(D, C).;true;true
5;false,false;athleteledsportsteam(A, F), teamplaysagainstteam(G, F).;true;true
5;false,true;teamalsoknownas(B, C).;true;true
5;false,false,false;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;false;false
6;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
6;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
6;false,true,true;teamplaysagainstteam(B, E).;false;false
6;false,false,true;teamplayssport(B, H), teamplaysinleague(B, I).;false;false
6;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
6;false,false;teamplaysagainstteam(G, B), teamalsoknownas(G, B).;true;true
6;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
6;false,false,false;teamplaysinleague(B, J), athleteplaysinleague(A, J).;false;false
7;;athleteplaysforteam(A, B) :- athleteplayssport(A, C), teamplayssport(B, C).;true;true
7;true,false,true;teamplaysagainstteam(G, B), teamalsoknownas(H, G).;false;false
7;false,false,false;athleteledsportsteam(A, L).;false;false
7;false;athleteledsportsteam(A, B).;false;true
7;true,false;teamplaysagainstteam(F, B), teamalsoknownas(G, F).;true;true
7;true,false,false;teamplaysagainstteam(B, I), teamalsoknownas(I, J).;false;false
7;false,false;athleteplayssport(A, K).;false;true
7;true;teamalsoknownas(D, B), teamplaysagainstteam(D, E).;false;true
8;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
8;false,true,false;teamplayssport(B, F), teamplayssport(C, F).;false;false
8;false,true,true;teamplaysagainstteam(C, E), teamplaysagainstteam(B, C).;false;false
8;false,false,true;teamplaysinleague(B, I), teamplaysinleague(G, I).;false;false
8;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
8;false,false;teamplaysagainstteam(G, B), teamplayssport(G, H).;true;true
8;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
8;false,false,false;athleteledsportsteam(J, B).;false;false
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,true,false;teamplaysagainstteam(E, B), teamalsoknownas(F, E).;false;false
9;false,true,true;teamplaysagainstteam(D, B).;false;false
9;false,false,true;teamplaysagainstteam(H, B), athleteledsportsteam(I, H).;false;false
9;false;teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
9;false,false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;true;true
9;false,true;athleteledsportsteam(A, D), teamplaysagainstteam(B, D).;true;true
9;false,false,false;teamplaysagainstteam(J, B), teamplayssport(J, K).;false;false


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(D, A), companyceo(A, E) )
%   | | then if ( companyceo(F, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( companyceo(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(I, J) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( companyceo(C, D), companyceo(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( companyceo(A, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyceo(A, F) )
%   | then return 0.04974543932757249;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyceo(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14207446911896834;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(A, D) )
%   | | then return -0.0011586515522090668;  // std dev = 0,339, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25264661014710416;  // std dev = 0,469, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(A, D) )
%   | | then return -0.0010167062506414265;  // std dev = 0,339, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2036637589359125;  // std dev = 0,933, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, D) )
%   | | then return -8.922458661203162E-4;  // std dev = 0,896, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, B) )
%   | | then return 0.5440851151011898;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.03252807415226019;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(C, D) )
%   | then if ( companyceo(A, D) )
%   | | then return -7.830947254545537E-4;  // std dev = 0,896, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( companyceo(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12153130957164754;  // std dev = 0,881, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then return -6.873528865657318E-4;  // std dev = 0,896, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, B) )
%   | | then return 0.38017232369167864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -8.317036358363265E-4;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( bankboughtbank(C, A), companyceo(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(D, A) )
%   | | then return -0.02544451621709666;  // std dev = 0,781, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( companyceo(A, E) )
%   | | | then return 0.16016118600076398;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.019257667531622225;  // std dev = 0,445, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, B), companyceo(D, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.00941880623659799;  // std dev = 0,882, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( companyceo(E, F) )
%   | | then return 0.0782725983898474;  // std dev = 0,428, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(A, D) )
%   | | then return -0.008221565764207989;  // std dev = 0,333, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(F, G) )
%   | | | then return 0.06110809719982192;  // std dev = 0,856, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.772959
   AUC PR    = 0.809185
   CLL	      = -0.600654
   Precision = 0.692308 at threshold = 0.5
   Recall    = 0.642857
   F1        = 0.666667


Total learning time: 1.376 seconds
Total inference time: 0.822 seconds
AUC ROC: 0.772959


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'true,false,true': 'companyceo(F, G)', 'true,false': 'bankboughtbank(D, A), companyceo(A, E)', 'false': 'companyceo(A, H)', 'false,false': 'companyceo(I, J)', 'true': 'companyceo(A, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 5], 'true,false,false': [0.816, 2, 1], 'true,false,true,true': [0.0, 4, 0], 'false,false,true': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, B)', 'true,false,false': 'companyceo(A, B)', 'true,false': 'companyceo(A, E)', 'false': 'companyceo(A, F)', 'false,false': 'companyceo(A, G)', 'true': 'companyceo(C, D), companyceo(A, D)'}, {'true,false,false,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false,false': [0.0, 0, 1], 'true,true': [0.0, 0, 5], 'false,true': [0.877, 4, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.816, 2, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(A, E)', 'false,true': 'companyceo(A, D)'}, {'true': [0.0, 0, 5], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.339, 6, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 2, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(A, E)', 'false,true': 'companyceo(A, D)', 'false,false,false': 'companyceo(A, F)'}, {'false,false,false,false': [0.933, 2, 2], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.339, 6, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [1.49e-08, 0, 5]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'true,false': 'companyceo(A, D)', 'false': 'companyceo(A, E)', 'false,false': 'companyceo(F, B)', 'true': 'companyceo(A, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true': [0.896, 6, 1], 'true,true': [0.0, 0, 5], 'true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.816, 2, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(C, D)', 'false,true,false': 'companyceo(A, E)', 'false,true': 'companyceo(A, D)'}, {'true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.896, 6, 1], 'false,true,false,false': [0.881, 2, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(F, B)', 'false,true': 'companyceo(D, E)', 'false,false,false': 'companyceo(A, G)'}, {'false,false,false,false': [0.816, 2, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.896, 6, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'true': [0.0, 0, 5]}], ['bankchiefexecutiveceo(A, B)', {'': 'bankboughtbank(C, A), companyceo(C, B)', 'false': 'companyceo(A, B)', 'false,false': 'bankboughtbank(D, A)', 'false,false,false': 'companyceo(A, E)'}, {'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.445, 1, 1], 'false,true': [0.0, 0, 5], 'false,false,true': [0.781, 5, 1], 'true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(E, F)', 'false,true': 'companyceo(D, B), companyceo(D, C)'}, {'true': [0.0, 0, 5], 'false,true,false': [0.882, 6, 1], 'false,true,true': [0.0, 0, 0], 'false,false,true': [0.428, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(A, E)', 'false,true': 'companyceo(A, D)', 'false,false,false': 'companyceo(F, G)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.333, 6, 1], 'false,false,false,true': [0.856, 2, 2], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 5]}]]
[{'': [0.25, 0.25], 'true,false,true': [0.0, nan], 'true,false': [0.0, 0.22222222222222224], 'false': [nan, 0.25], 'false,false': [0.25, nan], 'true': [0.0, 0.12244897959183677]}, {'': [0.13943929498240915, 0.18145278285799069], 'true,false,false': [nan, 0.0], 'true,false': [0.0, 0.0], 'false': [0.15379437558611914, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'true': [0.0, 0.19393401354015494]}, {'': [-4.4408920985006264e-17, 0.16791797967903807], 'false': [0.1146489074823528, 0.22014614910834665], 'false,false': [nan, 0.22014614910834665], 'false,true': [0.1146489074823528, nan]}, {'': [4.4408920985006264e-17, 0.1617293747848703], 'false': [0.11465469714385515, 0.21745018340183864], 'false,false': [nan, 0.21745018340183864], 'false,true': [0.11465469714385515, nan], 'false,false,false': [nan, 0.21745018340183864]}, {'': [0.09202390942953381, 0.21573365531874633], 'true,false': [0.11465977636975148, nan], 'false': [nan, 0.21573365531874633], 'false,false': [0.0, 0.22222222222222224], 'true': [-2.2204460492503132e-17, 0.11465977636975148]}, {'': [0.0, 0.14706671235846566], 'false,true,false': [nan, 0.1942505336729211], 'false': [0.14706671235846566, nan], 'false,true': [0.1146642329325491, 0.1942505336729211]}, {'': [-5.551115123125783e-18, 0.14556736933237382], 'false': [0.1146681436244368, 0.19388492957412645], 'false,false': [0.0, 0.22222222222222224], 'false,true': [0.1146681436244368, nan], 'false,false,false': [nan, 0.22222222222222224]}, {'': [nan, 0.10170183979855626], 'false': [0.0, 0.14082383852600527], 'false,false': [0.1017204714743299, 0.1806792643395918], 'false,false,false': [0.2222222222222222, 0.09905015251392066]}, {'': [0.0, 0.13913152919716967], 'false': [0.11114933027084185, 0.1832068793984694], 'false,false': [0.1832068793984694, nan], 'false,true': [nan, 0.11114933027084185]}, {'': [0.0, 0.13856041394022137], 'false': [0.11121203900505867, 0.1833613232433977], 'false,false': [nan, 0.1833613232433977], 'false,true': [0.11121203900505867, nan], 'false,false,false': [0.1833613232433977, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;bankchiefexecutiveceo(A, B) :- companyceo(A, C).;true;true
0;true,false;bankboughtbank(D, A), companyceo(A, E).;true;true
0;true;companyceo(A, B).;true;true
1;;bankchiefexecutiveceo(A, B) :- companyceo(C, B).;true;true
1;true,false;companyceo(A, E).;true;true
1;true;companyceo(C, D), companyceo(A, D).;true;true
2;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
3;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
4;;bankchiefexecutiveceo(A, B) :- companyceo(A, C).;true;true
4;false;companyceo(F, B).;true;true
4;true;companyceo(A, B).;true;true
5;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
6;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
6;false;companyceo(A, C).;true;true
6;false,false;companyceo(F, B).;true;true
7;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
8;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(D, A), companyceo(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( companyceo(C, D), companyceo(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(F, A), cityhascompanyoffice(G, F) )
%   | then return 0.16401254434762622;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.03658259419037777;  // std dev = 0,892, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C), bankboughtbank(D, A) )
%   | then return -0.12467908581714768;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, E) )
%   | | then return 0.27808287092985773;  // std dev = 0,933, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.13074084760040675;  // std dev = 0,798, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C), bankboughtbank(D, A) )
%   | then return -0.1117162619974668;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, E) )
%   | | then return 0.22818806371702427;  // std dev = 0,927, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.10886677254309192;  // std dev = 0,797, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(A, D), companyeconomicsector(D, E) )
%   | | then return 0.0661784165305108;  // std dev = 0,791, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.13013669622633312;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( companyceo(F, B) )
%   | then return 0.5316673043527023;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.0625868260847074;  // std dev = 0,828, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(C, A), companyeconomicsector(A, D) )
%   | then if ( companyeconomicsector(E, D), acquired(A, E) )
%   | | then return -0.004546956412503282;  // std dev = 0,514, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.15792709756253082;  // std dev = 1,049, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.11644975140870421;  // std dev = 0,088, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( bankboughtbank(D, A) )
%   | | then return -0.09973136243586578;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.07554581281374088;  // std dev = 0,769, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( companyceo(E, B) )
%   | | then return 0.40124474356982665;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.028723292992192173;  // std dev = 0,814, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(C, A), companyeconomicsector(A, D) )
%   | then if ( acquired(A, E), companyeconomicsector(E, D) )
%   | | then return -0.033099297229678415;  // std dev = 0,444, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.12185709991620548;  // std dev = 1,039, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.10463354659003903;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(C, A), companyeconomicsector(A, D) )
%   | then if ( companyeconomicsector(E, D), acquired(A, E) )
%   | | then return -0.027398146889873687;  // std dev = 0,445, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.09746340842296311;  // std dev = 1,036, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.09550541159571029;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(C, A), companyeconomicsector(A, D) )
%   | then if ( companyeconomicsector(E, D), acquired(A, E) )
%   | | then return -0.022699924251700976;  // std dev = 0,446, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.07715178516925156;  // std dev = 1,034, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.08778504156203366;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.785714
   AUC PR    = 0.828785
   CLL	      = -0.59473
   Precision = 0.692308 at threshold = 0.5
   Recall    = 0.642857
   F1        = 0.666667


Total learning time: 2.12 seconds
Total inference time: 0.763 seconds
AUC ROC: 0.785714


Refined model AUC ROC: 0.785714


Dataset: 35_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 05:19:17
{'Recall': 0.642857, 'Learning time': 3.496, 'F1': 0.666667, 'Precision': [0.692308, 0.5], 'AUC PR': 0.828785, 'CLL': -0.59473, 'parameter': {'Recall': 0.642857, 'Learning time': 1.376, 'F1': 0.666667, 'Precision': [0.692308, 0.5], 'AUC PR': 0.809185, 'CLL': -0.600654, 'AUC ROC': 0.772959, 'Inference time': 0.822}, 'AUC ROC': 0.785714, 'Inference time': 0.763}


Starting fold 3

Target train facts examples: 5285
Target train pos examples: 6
Target train neg examples: 6

Target test facts examples: 5285
Target test pos examples: 16
Target test neg examples: 16

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
0;true,false,true;teamalsoknownas(F, B), athleteledsportsteam(G, F).;false;false
0;false,false,false;teamalsoknownas(L, B), athleteledsportsteam(M, L).;false;false
0;true,false;athleteplayssport(A, D), athleteledsportsteam(A, E).;true;false
0;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
0;false,false;teamplaysagainstteam(J, B), teamalsoknownas(K, J).;true;true
0;false,false,true;teamplaysagainstteam(B, J), teamplaysagainstteam(B, K).;false;false
0;true;athleteledsportsteam(A, B).;false;true
1;;athleteplaysforteam(A, B) :- athleteledsportsteam(C, B), teamplaysagainstteam(D, B).;true;true
1;false,false,false;athleteplaysinleague(A, M).;false;false
1;true,false,false;athleteledsportsteam(A, B).;false;false
1;true,false;athleteplaysinleague(A, F), teamplaysinleague(G, F).;false;true
1;false;athleteledsportsteam(A, H), teamplaysagainstteam(H, I).;false;true
1;false,false;teamplaysagainstteam(B, J), teamplaysinleague(B, K).;true;true
1;false,false,true;teamplaysagainstteam(L, B), teamalsoknownas(J, L).;false;false
1;true;athleteplaysinleague(C, E), athleteplaysinleague(A, E).;false;true
2;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
2;false,true,false;athleteledsportsteam(G, B), teamplayssport(B, H).;false;false
2;false,true,true;teamalsoknownas(E, F), teamplaysagainstteam(D, F).;false;false
2;false,false,true;teamplaysagainstteam(K, B), teamalsoknownas(K, J).;false;false
2;false;teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
2;false,false;athleteplaysinleague(A, I), teamplaysinleague(J, I).;true;true
2;false,true;athleteledsportsteam(A, D), teamplaysagainstteam(D, E).;true;true
2;false,false,false;teamplaysagainstteam(L, B), teamalsoknownas(L, B).;false;false
3;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
3;false,true,false;teamplaysagainstteam(B, D), teamplaysagainstteam(D, B).;false;false
3;false,true,true;teamalsoknownas(F, B), teamplaysagainstteam(C, B).;false;false
3;false,false,true;teamplaysagainstteam(H, B), teamalsoknownas(I, H).;false;false
3;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
3;false,false;teamplaysinleague(B, G), athleteplaysinleague(A, G).;true;true
3;false,true;athleteplaysinleague(A, E), teamplaysinleague(B, E).;true;true
3;false,false,false;athleteplaysinleague(A, J), teamplaysinleague(K, J).;false;false
4;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
4;false,false,false;teamplaysagainstteam(B, M), teamplayssport(B, N).;false;false
4;true,false,false;athleteledsportsteam(A, F), teamplaysagainstteam(F, G).;false;false
4;true,false;athleteledsportsteam(A, B).;false;true
4;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
4;false,false;teamplaysagainstteam(J, B), teamplaysinleague(B, K).;true;true
4;false,false,true;teamplaysagainstteam(B, L), teamalsoknownas(L, J).;false;false
4;true;teamalsoknownas(B, D), teamalsoknownas(E, B).;false;true
5;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
5;false,true,false;athleteledsportsteam(A, E).;false;false
5;false,true,true;athleteledsportsteam(A, C).;false;false
5;false,false,true;teamplaysagainstteam(B, H), teamplaysagainstteam(F, H).;false;false
5;false;teamalsoknownas(C, B), athleteledsportsteam(D, C).;true;true
5;false,false;athleteledsportsteam(A, F), teamplaysagainstteam(G, F).;true;true
5;false,true;teamalsoknownas(B, C).;true;true
5;false,false,false;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;false;false
6;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
6;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
6;false,true,true;teamplaysagainstteam(B, E).;false;false
6;false,false,true;teamplayssport(B, H), teamplaysinleague(B, I).;false;false
6;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
6;false,false;teamplaysagainstteam(G, B), teamalsoknownas(G, B).;true;true
6;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
6;false,false,false;teamplaysinleague(B, J), athleteplaysinleague(A, J).;false;false
7;;athleteplaysforteam(A, B) :- athleteplayssport(A, C), teamplayssport(B, C).;true;true
7;true,false,true;teamplaysagainstteam(G, B), teamalsoknownas(H, G).;false;false
7;false,false,false;athleteledsportsteam(A, L).;false;false
7;false;athleteledsportsteam(A, B).;false;true
7;true,false;teamplaysagainstteam(F, B), teamalsoknownas(G, F).;true;true
7;true,false,false;teamplaysagainstteam(B, I), teamalsoknownas(I, J).;false;false
7;false,false;athleteplayssport(A, K).;false;true
7;true;teamalsoknownas(D, B), teamplaysagainstteam(D, E).;false;true
8;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
8;false,true,false;teamplayssport(B, F), teamplayssport(C, F).;false;false
8;false,true,true;teamplaysagainstteam(C, E), teamplaysagainstteam(B, C).;false;false
8;false,false,true;teamplaysinleague(B, I), teamplaysinleague(G, I).;false;false
8;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
8;false,false;teamplaysagainstteam(G, B), teamplayssport(G, H).;true;true
8;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
8;false,false,false;athleteledsportsteam(J, B).;false;false
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,true,false;teamplaysagainstteam(E, B), teamalsoknownas(F, E).;false;false
9;false,true,true;teamplaysagainstteam(D, B).;false;false
9;false,false,true;teamplaysagainstteam(H, B), athleteledsportsteam(I, H).;false;false
9;false;teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
9;false,false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;true;true
9;false,true;athleteledsportsteam(A, D), teamplaysagainstteam(B, D).;true;true
9;false,false,false;teamplaysagainstteam(J, B), teamplayssport(J, K).;false;false


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(A, D), companyceo(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(G, H) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( cityhascompanyoffice(D, C), cityhascompanyoffice(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return -0.1555325621642444;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( companyceo(A, B) )
%   | | | then return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14207446911896834;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( companyceo(A, F) )
%   | then return 0.16589200381904876;  // std dev = 0,831, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.5879757226161607;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( cityhascompanyoffice(C, A) )
%   | then if ( companyceo(A, D) )
%   | | then return 0.09261696259425828;  // std dev = 0,421, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.15846951495068887;  // std dev = 0,460, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.4434972853427532;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( cityhascompanyoffice(D, A) )
%   | | then return 0.07998726448089057;  // std dev = 0,420, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.24647724383036107;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2225600274526865;  // std dev = 0,935, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.3080833035017564;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.06844478038072976;  // std dev = 0,839, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( cityhascompanyoffice(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, B) )
%   | | then return 0.13651647812465217;  // std dev = 0,872, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.17954606861540864;  // std dev = 0,542, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.2874831687757561;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, D) )
%   | then if ( companyceo(A, D) )
%   | | then return -3.771374084518608E-4;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( companyceo(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14415189938583783;  // std dev = 0,924, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.23313904423723106;  // std dev = 0,088, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then return -3.1701079122201656E-4;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, B) )
%   | | then return -0.012347653046973198;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4821032535077081;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyalsoknownas(A, C), companyceo(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, B) )
%   | then return 0.19456635042138812;  // std dev = 0,078, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, E) )
%   | | | then return -2.664805054783281E-4;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08408029099313281;  // std dev = 0,879, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.1662004564117503;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, B), companyceo(D, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -2.2401190514163006E-4;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyceo(E, F) )
%   | | then return 0.06487565349719605;  // std dev = 0,439, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.1446513322776191;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( cityhascompanyoffice(C, A) )
%   | then if ( companyceo(A, D) )
%   | | then return 0.058276062788513106;  // std dev = 0,419, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(F, G) )
%   | | | then return -0.0068824742881104075;  // std dev = 0,915, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.771484
   AUC PR    = 0.823877
   CLL	      = -0.572139
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.5625
   F1        = 0.642857


Total learning time: 1.262 seconds
Total inference time: 0.861 seconds
AUC ROC: 0.771484


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true,false': 'companyalsoknownas(A, D), companyceo(A, E)', 'false': 'cityhascompanyoffice(F, A)', 'false,false': 'companyceo(G, H)', 'true': 'companyceo(A, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,false': [0.866, 3, 1], 'false,false,true': [1.225, 3, 3], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, B)', 'true,false,false': 'companyceo(A, B)', 'true,false': 'cityhascompanyoffice(E, A)', 'false': 'companyceo(A, F)', 'false,false': 'cityhascompanyoffice(G, A)', 'true': 'cityhascompanyoffice(D, C), cityhascompanyoffice(D, A)'}, {'true,false,false,true': [0.0, 0, 1], 'true,false,true': [0.0, 2, 0], 'true,false,false,false': [0.816, 2, 1], 'true,true': [0.0, 0, 2], 'false,true': [0.831, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'cityhascompanyoffice(C, A)', 'false,false': 'cityhascompanyoffice(E, A)', 'false,true': 'companyceo(A, D)'}, {'true': [0.08, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.421, 3, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.46, 3, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'cityhascompanyoffice(E, A)', 'false,true': 'cityhascompanyoffice(D, A)', 'false,false,false': 'cityhascompanyoffice(F, A)'}, {'false,false,false,false': [0.935, 2, 2], 'false,true,false': [0.0, 1, 0], 'false,true,true': [0.42, 3, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.083, 0, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true,false': 'companyceo(A, D)', 'false': 'cityhascompanyoffice(E, A)', 'false,false': 'companyceo(F, B)', 'true': 'companyceo(A, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true': [0.839, 3, 1], 'true,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 0], 'false,false,true': [0.872, 2, 2], 'false,false,false': [0.542, 1, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(C, D)', 'false,true,false': 'companyceo(A, E)', 'false,true': 'companyceo(A, D)'}, {'true': [0.1, 0, 3], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.878, 4, 1], 'false,true,false,false': [0.924, 2, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(F, B)', 'false,true': 'companyceo(D, E)', 'false,false,false': 'cityhascompanyoffice(G, A)'}, {'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.878, 4, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.816, 2, 1], 'true': [0.088, 0, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyalsoknownas(A, C), companyceo(C, B)', 'false': 'companyceo(A, B)', 'false,false': 'companyalsoknownas(A, D)', 'false,false,false': 'companyceo(A, E)'}, {'false,false,false,true': [0.878, 4, 1], 'false,false,false,false': [0.879, 2, 2], 'false,true': [0.078, 0, 3], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(E, F)', 'false,true': 'companyceo(D, B), companyceo(D, C)'}, {'true': [0.069, 0, 3], 'false,true,false': [0.878, 4, 1], 'false,true,true': [0.0, 0, 0], 'false,false,true': [0.439, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'cityhascompanyoffice(C, A)', 'false,false': 'cityhascompanyoffice(E, A)', 'false,true': 'companyceo(A, D)', 'false,false,false': 'companyceo(F, G)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.419, 3, 1], 'false,false,false,true': [0.915, 3, 2], 'false,false,true': [0.0, 0, 0], 'true': [0.062, 0, 3]}]]
[{'': [0.24999999999999992, 0.24999999999999992], 'true,false': [nan, 0.18750000000000003], 'false': [nan, 0.24999999999999992], 'false,false': [0.24999999999999992, nan], 'true': [0.0, 0.18750000000000003]}, {'': [0.22088359963771587, 0.2503190921645441], 'false': [0.23044503793517712, 0.0], 'true,false': [0.0, 0.25], 'true,false,false': [0.0, 0.22222222222222224], 'false,false': [nan, 0.0], 'true': [0.0, 0.2145666814684569]}, {'': [0.0021267310498866245, 0.19744453311743174], 'false': [0.17734822485667007, 0.21159422032521596], 'false,false': [nan, 0.21159422032521596], 'false,true': [0.17734822485667007, nan]}, {'': [0.0022973591336887442, 0.19575024334429833], 'false': [0.1584337242661687, 0.21839137300654157], 'false,false': [nan, 0.21839137300654157], 'false,true': [0.1767263402953294, 0.0], 'false,false,false': [nan, 0.21839137300654157]}, {'': [0.13021565228155388, 0.17608311896464524], 'true,false': [0.17618127116778853, nan], 'false': [nan, 0.17608311896464524], 'false,false': [0.1901084395844015, 0.14679811395326453], 'true': [0.0, 0.17618127116778853]}, {'': [0.0033535069664476966, 0.18564232502050032], 'false,true,false': [nan, 0.2132854512186623], 'false': [0.18564232502050032, nan], 'false,true': [0.15424398296122174, 0.2132854512186623]}, {'': [0.002600885551744194, 0.1832135289648255], 'false': [0.1542451810410021, 0.21250698522780656], 'false,false': [0.2222222222222222, 0.0], 'false,true': [0.1542451810410021, nan], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.13505853008707008], 'false': [0.0020227127747535537, 0.1732144106143959], 'false,false': [nan, 0.1732144106143959], 'false,false,false': [0.15424618811495355, 0.1929722565930106]}, {'': [0.0015954408960848255, 0.17250023030029227], 'false': [0.15424703466712317, 0.19296229904425574], 'false,false': [0.19296229904425574, nan], 'false,true': [nan, 0.15424703466712314]}, {'': [0.0012799719064177605, 0.17211074491295467], 'false': [0.1757192645624533, 0.16733698032492653], 'false,false': [nan, 0.16733698032492653], 'false,true': [0.1757192645624533, nan], 'false,false,false': [0.16733698032492653, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
0;true;companyceo(A, B).;true;true
1;;bankchiefexecutiveceo(A, B) :- companyceo(C, B).;true;true
1;false;companyceo(A, F).;true;true
1;true,false;cityhascompanyoffice(E, A).;true;true
1;true,false,false;companyceo(A, B).;true;true
1;true;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;true;true
2;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
3;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
3;false;companyceo(A, C).;true;true
3;false,true;cityhascompanyoffice(D, A).;true;true
4;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
4;true;companyceo(A, B).;true;true
6;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
6;false;companyceo(A, C).;true;true
6;false,false;companyceo(F, B).;true;true
7;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
8;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( cityhascompanyoffice(D, C), cityhascompanyoffice(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return -0.1555325621642444;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( companyceo(A, B) )
%   | | | then return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14207446911896834;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( companyceo(A, F) )
%   | then return 0.16589200381904876;  // std dev = 0,831, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.5879757226161607;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.17519149992113356;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3727162849630023;  // std dev = 1,051, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.4434972853427532;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( cityhascompanyoffice(D, A) )
%   | | then return 0.07162487251308836;  // std dev = 0,801, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.28838456201065743;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.22720855938617623;  // std dev = 0,834, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.3080833035017564;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.06117512744027519;  // std dev = 0,799, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.14983527673230343;  // std dev = 0,941, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   then return -0.10325265796867669;  // std dev = 0,409, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( companyeconomicsector(A, E) )
%   | then return 0.3376980193539997;  // std dev = 0,786, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.19211620610625887;  // std dev = 0,560, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.25946658861125216;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then return -0.042134524746137214;  // std dev = 0,815, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyceo(D, B) )
%   | | then return 0.03011642630394451;  // std dev = 0,640, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.42341587562851746;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.21342090808450423;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.1761118017940691;  // std dev = 0,121, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.18535313788821028;  // std dev = 0,936, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.18017790619119642;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.1525378402934088;  // std dev = 0,108, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.14353895760428273;  // std dev = 0,934, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.15534057140584623;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.13422146429384121;  // std dev = 0,096, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1106142236521263;  // std dev = 0,933, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.634766
   AUC PR    = 0.707543
   CLL	      = -0.68591
   Precision = 0.588235 at threshold = 0.5
   Recall    = 0.625
   F1        = 0.606061


Total learning time: 1.269 seconds
Total inference time: 0.742 seconds
AUC ROC: 0.634766


Refined model AUC ROC: 0.634766


Dataset: 35_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 05:19:22
{'Recall': 0.625, 'Learning time': 2.5309999999999997, 'F1': 0.606061, 'Precision': [0.588235, 0.5], 'AUC PR': 0.707543, 'CLL': -0.68591, 'parameter': {'Recall': 0.5625, 'Learning time': 1.262, 'F1': 0.642857, 'Precision': [0.75, 0.5], 'AUC PR': 0.823877, 'CLL': -0.572139, 'AUC ROC': 0.771484, 'Inference time': 0.861}, 'AUC ROC': 0.634766, 'Inference time': 0.742}


