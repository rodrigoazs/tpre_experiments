Starting experiment #3 for 35_nell_sports_nell_finances

Start learning from source dataset

Source train facts examples: 8233
Source train pos examples: 1458
Source train neg examples: 1458

WILL Produced-Tree #1
% FOR athleteplaysforteam(A, B):
%   if ( athleteplaysinleague(A, C), teamplaysinleague(B, C) )
%   then if ( athleteledsportsteam(A, B) )
%   | then return 0.8581489350995096;  // std dev = 1,05e-06, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | else if ( athleteplayssport(A, D), athleteledsportsteam(A, E) )
%   | | then if ( teamplaysagainstteam(E, B), teamalsoknownas(F, B) )
%   | | | then return 0.7672398441904213;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.41659049354107014;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=43 */
%   | | else if ( athleteledsportsteam(G, B) )
%   | | | then return 0.7205650424820589;  // std dev = 5,946, 298,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=257 */
%   | | | else return 0.5112101595893072;  // std dev = 3,332, 49,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=32 */
%   else if ( athleteplaysinleague(A, H), teamplaysinleague(I, H) )
%   | then return -0.02163248566551471;  // std dev = 0,325, 549,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=66 */
%   | else if ( athleteledsportsteam(A, B) )
%   | | then return 0.8581489350995117;  // std dev = 1,69e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else if ( athleteledsportsteam(A, J) )
%   | | | then return 0.026032146778344114;  // std dev = 4,375, 137,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=23 */
%   | | | else return 0.35814893509950735;  // std dev = 19,596, 1.536,000 (wgt'ed) examples reached here.  /* #neg=768 #pos=768 */
WILL Produced-Tree #2
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(C, B), teamplaysagainstteam(D, B) )
%   then if ( athleteplaysinleague(C, E), athleteplaysinleague(A, E) )
%   | then return 0.6113307232035489;  // std dev = 0,340, 568,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=487 */
%   | else if ( athleteplaysinleague(A, F), athleteplaysinleague(C, G) )
%   | | then return -0.09212550168881552;  // std dev = 0,213, 166,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=8 */
%   | | else if ( athleteledsportsteam(A, B) )
%   | | | then return 0.7194734122109537;  // std dev = 2,80e-07, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | | else return 0.3168010308283683;  // std dev = 15,220, 942,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=475 */
%   else if ( athleteledsportsteam(A, H), teamplaysagainstteam(H, I) )
%   | then return -0.057673330959530214;  // std dev = 0,276, 239,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=21 */
%   | else if ( teamplaysinleague(B, J), teamplaysagainstteam(B, K) )
%   | | then if ( teamplaysagainstteam(L, B), teamalsoknownas(K, L) )
%   | | | then return 0.4251084221778766;  // std dev = 8,956, 347,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=212 */
%   | | | else return 0.15327134736741863;  // std dev = 8,639, 341,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=115 */
%   | | else if ( athleteplaysinleague(A, M) )
%   | | | then return -0.11749897247328597;  // std dev = 0,989, 46,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
%   | | | else return 0.08507295655640038;  // std dev = 5,943, 177,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=49 */
WILL Produced-Tree #3
% FOR athleteplaysforteam(A, B):
%   if ( athleteplaysinleague(A, C), teamplaysinleague(B, C) )
%   then if ( athleteledsportsteam(A, B) )
%   | then return 0.5818859786033516;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | else if ( athleteledsportsteam(A, D), teamplaysagainstteam(D, E) )
%   | | then if ( teamalsoknownas(E, F), teamplaysagainstteam(D, F) )
%   | | | then return 0.23398498110107954;  // std dev = 4,254, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.4543762147279941;  // std dev = 2,508, 40,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | else return 0.476790527823783;  // std dev = 0,360, 321,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=270 */
%   else if ( athleteplaysinleague(A, G), teamplaysinleague(H, G) )
%   | then return -0.031412212541512476;  // std dev = 0,309, 549,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=66 */
%   | else if ( teamalsoknownas(I, B), teamplaysagainstteam(I, B) )
%   | | then if ( teamplayssport(B, J), teamplaysinleague(B, K) )
%   | | | then return 0.44113309073007795;  // std dev = 7,987, 310,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=215 */
%   | | | else return 0.0074690662904836344;  // std dev = 1,835, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( teamplaysagainstteam(L, B), teamalsoknownas(M, L) )
%   | | | then return 0.2616713751719551;  // std dev = 16,236, 1.130,000 (wgt'ed) examples reached here.  /* #neg=553 #pos=577 */
%   | | | else return 0.06627986140558016;  // std dev = 7,704, 302,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=84 */
WILL Produced-Tree #4
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.4784954654881462;  // std dev = 0,088, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteplaysinleague(A, C), teamplaysinleague(B, C) )
%   | then if ( athleteledsportsteam(A, D), teamplayssport(B, E) )
%   | | then if ( teamplaysagainstteam(F, D), teamplayssport(F, E) )
%   | | | then return 0.21846793445737997;  // std dev = 4,882, 103,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=62 */
%   | | | else return 0.5876020123620611;  // std dev = 0,138, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( teamalsoknownas(G, B) )
%   | | | then return 0.43811818587698825;  // std dev = 2,371, 82,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=76 */
%   | | | else return 0.33387238768841426;  // std dev = 5,968, 243,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=197 */
%   | else if ( teamalsoknownas(H, B), athleteledsportsteam(I, H) )
%   | | then if ( athleteledsportsteam(A, J), teamplayssport(J, K) )
%   | | | then return 0.005567169844983688;  // std dev = 2,358, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return 0.3397933461792357;  // std dev = 7,917, 289,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=189 */
%   | | else if ( athleteplaysinleague(A, L), teamplaysinleague(M, L) )
%   | | | then return -0.08826401077252212;  // std dev = 4,806, 466,000 (wgt'ed) examples reached here.  /* #neg=441 #pos=25 */
%   | | | else return 0.16458791738645867;  // std dev = 18,169, 1.404,000 (wgt'ed) examples reached here.  /* #neg=789 #pos=615 */
WILL Produced-Tree #5
% FOR athleteplaysforteam(A, B):
%   if ( teamplaysagainstteam(C, B), teamalsoknownas(D, C) )
%   then if ( teamplaysagainstteam(B, D), teamplaysagainstteam(B, C) )
%   | then if ( teamplaysinleague(D, E), athleteplaysinleague(A, E) )
%   | | then return 0.32473752839226094;  // std dev = 0,307, 466,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=410 */
%   | | else if ( teamalsoknownas(C, F), teamplayssport(B, G) )
%   | | | then return 0.1374973144865359;  // std dev = 11,374, 622,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=297 */
%   | | | else return 0.2812889606187436;  // std dev = 10,410, 553,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=338 */
%   | else if ( teamalsoknownas(C, H), teamplayssport(D, I) )
%   | | then return -0.09185281221504144;  // std dev = 0,354, 233,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=45 */
%   | | else if ( athleteledsportsteam(A, B) )
%   | | | then return 0.346681817777082;  // std dev = 0,251, 63,000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return 0.07671546095747832;  // std dev = 9,483, 460,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=177 */
%   else if ( teamalsoknownas(J, B), athleteledsportsteam(K, J) )
%   | then if ( athleteledsportsteam(A, L) )
%   | | then return -0.1170587651762309;  // std dev = 0,157, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return 0.40724079731295015;  // std dev = 0,392, 27,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | else return -0.006498888433387829;  // std dev = 0,392, 482,000 (wgt'ed) examples reached here.  /* #neg=377 #pos=105 */
WILL Produced-Tree #6
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.30660304122549936;  // std dev = 0,096, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( teamalsoknownas(C, B), teamplaysagainstteam(C, B) )
%   | then if ( teamalsoknownas(D, C), teamplaysagainstteam(D, B) )
%   | | then if ( athleteplaysinleague(A, E), teamalsoknownas(C, D) )
%   | | | then return 0.17736650284917874;  // std dev = 2,337, 46,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=35 */
%   | | | else return 0.3627026400628147;  // std dev = 4,542, 125,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=98 */
%   | | else if ( teamplayssport(B, F), athleteplayssport(A, F) )
%   | | | then return 0.3375685324236158;  // std dev = 2,294, 56,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=50 */
%   | | | else return 0.08823833762018612;  // std dev = 6,972, 256,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=126 */
%   | else if ( athleteledsportsteam(A, G), teamplaysagainstteam(H, G) )
%   | | then if ( teamplaysagainstteam(B, I), teamplaysagainstteam(G, I) )
%   | | | then return 0.1022670766413016;  // std dev = 6,099, 167,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=75 */
%   | | | else return -0.13477415465531162;  // std dev = 2,407, 260,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=7 */
%   | | else if ( teamplaysagainstteam(J, B), teamplaysinleague(B, K) )
%   | | | then return 0.11679160158414878;  // std dev = 17,855, 1.557,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=754 */
%   | | | else return -0.031326330248104724;  // std dev = 5,078, 170,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=34 */
WILL Produced-Tree #7
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.24800438074280962;  // std dev = 0,090, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( teamplaysagainstteam(C, B), teamalsoknownas(E, D) )
%   | | then if ( teamplaysagainstteam(C, E), teamplaysagainstteam(B, C) )
%   | | | then return 0.11010328096202619;  // std dev = 3,374, 50,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | | | else return 0.33138004323704495;  // std dev = 1,934, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | else if ( teamplaysagainstteam(D, B), teamplayssport(D, F) )
%   | | | then return 0.03230492038305862;  // std dev = 5,179, 134,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=49 */
%   | | | else return -0.11679832436259194;  // std dev = 2,693, 286,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=10 */
%   | else if ( teamplaysagainstteam(G, B), teamplayssport(G, H) )
%   | | then if ( teamalsoknownas(I, G), teamplaysagainstteam(B, I) )
%   | | | then return 0.1584407432087394;  // std dev = 15,531, 1.245,000 (wgt'ed) examples reached here.  /* #neg=464 #pos=781 */
%   | | | else return 0.024678288554219507;  // std dev = 12,255, 764,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=265 */
%   | | else if ( athleteledsportsteam(J, B) )
%   | | | then return -0.25025426656780525;  // std dev = 0,478, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.02042440173571525;  // std dev = 4,186, 108,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=23 */
WILL Produced-Tree #8
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.20643238585665163;  // std dev = 0,084, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( teamplaysagainstteam(C, B), teamalsoknownas(E, D) )
%   | | then if ( teamplaysagainstteam(B, E) )
%   | | | then return 0.20662112296878438;  // std dev = 3,295, 58,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=43 */
%   | | | else return -0.023858981083521608;  // std dev = 2,007, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( teamplaysagainstteam(D, B), teamplayssport(D, F) )
%   | | | then return 0.02606469514241887;  // std dev = 5,179, 134,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=49 */
%   | | | else return -0.10292832881912543;  // std dev = 2,694, 286,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=10 */
%   | else if ( athleteplaysinleague(A, G), teamplaysinleague(B, G) )
%   | | then if ( athleteplayssport(A, H), teamplaysagainstteam(B, I) )
%   | | | then return 0.13824237828469352;  // std dev = 5,911, 268,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=222 */
%   | | | else return 0.23795525627220618;  // std dev = 1,923, 53,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | else if ( athleteplaysinleague(A, J), teamplaysinleague(K, J) )
%   | | | then return -0.08793302221147904;  // std dev = 4,594, 281,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=31 */
%   | | | else return 0.0880363157118883;  // std dev = 18,604, 1.537,000 (wgt'ed) examples reached here.  /* #neg=769 #pos=768 */
WILL Produced-Tree #9
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.175902497455907;  // std dev = 0,077, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( teamalsoknownas(C, B), athleteledsportsteam(D, C) )
%   | then if ( teamalsoknownas(E, C), teamalsoknownas(E, B) )
%   | | then if ( athleteplayssport(A, F), teamplayssport(B, F) )
%   | | | then return 0.09869522179043086;  // std dev = 1,349, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.2555809016075238;  // std dev = 2,528, 58,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=49 */
%   | | else if ( teamplayssport(B, G), athleteplayssport(A, G) )
%   | | | then return 0.24344701935409593;  // std dev = 2,534, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | | else return 0.05401108139047945;  // std dev = 7,262, 279,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=155 */
%   | else if ( athleteplaysinleague(A, H), teamplaysinleague(B, H) )
%   | | then if ( athleteledsportsteam(A, I), teamplaysagainstteam(B, I) )
%   | | | then return -0.0484879631254664;  // std dev = 3,239, 43,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | | else return 0.11960364611724686;  // std dev = 6,694, 307,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=243 */
%   | | else if ( athleteplaysinleague(A, J), teamplaysinleague(K, J) )
%   | | | then return -0.0824166819691413;  // std dev = 4,713, 466,000 (wgt'ed) examples reached here.  /* #neg=441 #pos=25 */
%   | | | else return 0.04563274024648988;  // std dev = 17,559, 1.404,000 (wgt'ed) examples reached here.  /* #neg=789 #pos=615 */
WILL Produced-Tree #10
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.15274590050086254;  // std dev = 0,071, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( teamalsoknownas(E, D), teamplaysagainstteam(C, B) )
%   | | then if ( teamplaysagainstteam(C, E), teamplaysagainstteam(B, C) )
%   | | | then return 0.0442311416682918;  // std dev = 3,346, 50,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | | | else return 0.22234925389422044;  // std dev = 1,869, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | else if ( teamalsoknownas(D, F), teamplaysagainstteam(C, D) )
%   | | | then return -0.09102560911069603;  // std dev = 4,225, 296,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=26 */
%   | | | else return 0.020030585652806226;  // std dev = 3,979, 124,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   | else if ( teamplaysagainstteam(G, B), teamplayssport(G, H) )
%   | | then if ( teamplaysinleague(B, I), teamplaysinleague(G, I) )
%   | | | then return 0.06285652949863431;  // std dev = 19,148, 1.872,000 (wgt'ed) examples reached here.  /* #neg=850 #pos=1.022 */
%   | | | else return -0.09289041177379007;  // std dev = 4,346, 137,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=24 */
%   | | else if ( teamplaysinleague(B, J), athleteplaysinleague(K, J) )
%   | | | then return -0.1844020775211355;  // std dev = 1,700, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | | else return -0.0164421778307627;  // std dev = 3,822, 91,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=20 */


Starting fold 1

Target train facts examples: 5285
Target train pos examples: 8
Target train neg examples: 8

Target test facts examples: 5285
Target test pos examples: 14
Target test neg examples: 14

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
0;true,false,true;teamplaysagainstteam(E, B), teamalsoknownas(F, B).;false;false
0;false,false,false;athleteledsportsteam(A, J).;false;false
0;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
0;true,false;athleteplayssport(A, D), athleteledsportsteam(A, E).;true;true
0;true,false,false;athleteledsportsteam(G, B).;false;false
0;false,false;athleteledsportsteam(A, B).;false;true
0;true;athleteledsportsteam(A, B).;false;true
1;;athleteplaysforteam(A, B) :- athleteledsportsteam(C, B), teamplaysagainstteam(D, B).;true;true
1;false,false,false;athleteplaysinleague(A, M).;false;false
1;true,false,false;athleteledsportsteam(A, B).;false;false
1;true,false;athleteplaysinleague(A, F), athleteplaysinleague(C, G).;false;true
1;false;athleteledsportsteam(A, H), teamplaysagainstteam(H, I).;false;true
1;false,false;teamplaysinleague(B, J), teamplaysagainstteam(B, K).;true;true
1;false,false,true;teamplaysagainstteam(L, B), teamalsoknownas(K, L).;false;false
1;true;athleteplaysinleague(C, E), athleteplaysinleague(A, E).;false;true
2;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
2;true,false,true;teamalsoknownas(E, F), teamplaysagainstteam(D, F).;false;false
2;false,false,false;teamplaysagainstteam(L, B), teamalsoknownas(M, L).;false;false
2;true,false;athleteledsportsteam(A, D), teamplaysagainstteam(D, E).;true;false
2;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
2;false,false;teamalsoknownas(I, B), teamplaysagainstteam(I, B).;true;true
2;false,false,true;teamplayssport(B, J), teamplaysinleague(B, K).;false;false
2;true;athleteledsportsteam(A, B).;false;true
3;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
3;false,true,false;teamalsoknownas(G, B).;false;false
3;false,true,true;teamplaysagainstteam(F, D), teamplayssport(F, E).;false;false
3;false,false,true;athleteledsportsteam(A, J), teamplayssport(J, K).;false;false
3;false;athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
3;false,false;teamalsoknownas(H, B), athleteledsportsteam(I, H).;true;true
3;false,true;athleteledsportsteam(A, D), teamplayssport(B, E).;true;true
3;false,false,false;athleteplaysinleague(A, L), teamplaysinleague(M, L).;false;false
4;;athleteplaysforteam(A, B) :- teamplaysagainstteam(C, B), teamalsoknownas(D, C).;true;true
4;false;teamalsoknownas(J, B), athleteledsportsteam(K, J).;true;false
4;true,true;teamplaysinleague(D, E), athleteplaysinleague(A, E).;false;true
4;true,false;teamalsoknownas(C, H), teamplayssport(D, I).;false;true
4;true,false,false;athleteledsportsteam(A, B).;false;false
4;true,true,false;teamalsoknownas(C, F), teamplayssport(B, G).;false;false
4;false,true;athleteledsportsteam(A, L).;false;false
4;true;teamplaysagainstteam(B, D), teamplaysagainstteam(B, C).;true;true
5;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
5;false,true,false;teamplayssport(B, F), athleteplayssport(A, F).;false;false
5;false,true,true;athleteplaysinleague(A, E), teamalsoknownas(C, D).;false;false
5;false,false,true;teamplaysagainstteam(B, I), teamplaysagainstteam(G, I).;false;false
5;false;teamalsoknownas(C, B), teamplaysagainstteam(C, B).;true;true
5;false,false;athleteledsportsteam(A, G), teamplaysagainstteam(H, G).;true;true
5;false,true;teamalsoknownas(D, C), teamplaysagainstteam(D, B).;true;true
5;false,false,false;teamplaysagainstteam(J, B), teamplaysinleague(B, K).;false;false
6;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
6;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
6;false,true,true;teamplaysagainstteam(C, E), teamplaysagainstteam(B, C).;false;false
6;false,false,true;teamalsoknownas(I, G), teamplaysagainstteam(B, I).;false;false
6;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
6;false,false;teamplaysagainstteam(G, B), teamplayssport(G, H).;true;true
6;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
6;false,false,false;athleteledsportsteam(J, B).;false;false
7;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
7;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
7;false,true,true;teamplaysagainstteam(B, E).;false;false
7;false,false,true;athleteplayssport(A, H), teamplaysagainstteam(B, I).;false;false
7;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
7;false,false;athleteplaysinleague(A, G), teamplaysinleague(B, G).;true;true
7;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
7;false,false,false;athleteplaysinleague(A, J), teamplaysinleague(K, J).;false;false
8;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
8;false,true,false;teamplayssport(B, G), athleteplayssport(A, G).;false;false
8;false,true,true;athleteplayssport(A, F), teamplayssport(B, F).;false;false
8;false,false,true;athleteledsportsteam(A, I), teamplaysagainstteam(B, I).;false;false
8;false;teamalsoknownas(C, B), athleteledsportsteam(D, C).;true;true
8;false,false;athleteplaysinleague(A, H), teamplaysinleague(B, H).;true;true
8;false,true;teamalsoknownas(E, C), teamalsoknownas(E, B).;true;true
8;false,false,false;athleteplaysinleague(A, J), teamplaysinleague(K, J).;false;false
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,true,false;teamalsoknownas(D, F), teamplaysagainstteam(C, D).;false;false
9;false,true,true;teamplaysagainstteam(C, E), teamplaysagainstteam(B, C).;false;false
9;false,false,true;teamplaysinleague(B, I), teamplaysinleague(G, I).;false;false
9;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
9;false,false;teamplaysagainstteam(G, B), teamplayssport(G, H).;true;true
9;false,true;teamalsoknownas(E, D), teamplaysagainstteam(C, B).;true;true
9;false,false,false;teamplaysinleague(B, J), athleteplaysinleague(K, J).;false;false


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( economicsectorcompany(D, A), companyceo(A, E) )
%   | | then return 0.19148226843284552;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( companyceo(F, B) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( cityhascompanyoffice(D, C), cityhascompanyoffice(D, A) )
%   | then return 0.2702233628597731;  // std dev = 0,899, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( cityhascompanyoffice(E, A), cityhascompanyoffice(F, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( companyceo(A, G) )
%   | then return 0.4917173727495772;  // std dev = 0,807, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.308741135785635;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.6618675330539299;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.015609470717946557;  // std dev = 0,426, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.32204799528249;  // std dev = 0,614, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2520035806387084;  // std dev = 0,496, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.5024400228768293;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( cityhascompanyoffice(C, A) )
%   | then if ( companyceo(A, D) )
%   | | then return 0.012800715521311484;  // std dev = 0,426, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.27184407288388385;  // std dev = 0,420, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( companyceo(E, F) )
%   | | then if ( companyceo(A, G) )
%   | | | then return 0.18741224736290893;  // std dev = 0,679, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.20705143120889424;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then return 0.15570626735239457;  // std dev = 1,120, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( companyceo(A, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(D, E) )
%   | | then if ( companyceo(A, F) )
%   | | | then return 0.14588146849321984;  // std dev = 0,678, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.16241052755367544;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.3433533133165455;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( cityhascompanyoffice(C, A) )
%   | then return 0.0512710580757623;  // std dev = 1,053, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( economicsectorcompany(D, A) )
%   | | then return 0.1251918786202857;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( companyceo(A, E) )
%   | | | then return 0.11191931957781812;  // std dev = 0,676, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1251918786202857;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.2705686436957496;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then return 0.008924696134358664;  // std dev = 0,447, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( companyceo(D, B) )
%   | | then return 0.19280362485118577;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.00967092576773724;  // std dev = 0,753, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.22057682529488132;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then return 0.0070057271621680834;  // std dev = 0,447, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( cityhascompanyoffice(D, A) )
%   | | then if ( economicsectorcompany(E, A) )
%   | | | then return 0.1582937824520321;  // std dev = 0,532, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0647596389511743;  // std dev = 1,226, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.18499206704649473;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(C, D) )
%   | then if ( economicsectorcompany(E, A) )
%   | | then return 0.0647681166414087;  // std dev = 1,369, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( economicsectorcompany(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0016361072963641643;  // std dev = 1,053, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.15870743908193918;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then return -9.440825629677315E-4;  // std dev = 0,446, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( cityhascompanyoffice(D, E) )
%   | | then return 0.0562336019684823;  // std dev = 1,336, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.84949
   AUC PR    = 0.89166
   CLL	      = -0.569981
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.571429
   F1        = 0.727273


Total learning time: 1.526 seconds
Total inference time: 1.039 seconds
AUC ROC: 0.84949


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true': 'companyceo(A, B)', 'true,false,false': 'companyceo(F, B)', 'true,false': 'economicsectorcompany(D, A), companyceo(A, E)', 'false': 'cityhascompanyoffice(G, A)', 'false,false': 'companyceo(A, B)', 'false,false,false': 'companyceo(A, H)'}, {'false,false,false,false': [1.225, 3, 3], 'false,false,true': [0.0, 0, 0], 'true,false,true': [0.471, 2, 1], 'false,false,false,true': [0.707, 1, 1], 'true,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'true,false,false,true': [0.707, 1, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, B)', 'true,false,false': 'companyceo(A, B)', 'true,false': 'cityhascompanyoffice(E, A), cityhascompanyoffice(F, C)', 'false': 'companyceo(A, G)', 'false,false': 'cityhascompanyoffice(H, A)', 'true': 'cityhascompanyoffice(D, C), cityhascompanyoffice(D, A)'}, {'true,false,false,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,false': [1.225, 3, 3], 'true,true': [0.899, 2, 2], 'false,true': [0.807, 1, 2], 'false,false,true': [0.0, 1, 0], 'false,false,false': [0.707, 1, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true,false': 'companyceo(A, D)', 'false': 'cityhascompanyoffice(E, A)', 'true': 'companyceo(A, B)'}, {'true,true': [0.0, 0, 2], 'true,false,false': [0.614, 1, 1], 'true,false,true': [0.426, 3, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.496, 4, 4]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,true': 'companyceo(A, D)', 'false': 'cityhascompanyoffice(C, A)', 'false,false': 'companyceo(E, F)', 'false,false,true': 'companyceo(A, G)'}, {'false,true,false': [0.42, 1, 1], 'false,false,true,true': [0.679, 1, 1], 'false,true,true': [0.426, 3, 1], 'false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.225, 3, 3], 'true': [0.0, 0, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'false': 'companyceo(A, B)', 'false,false': 'companyceo(D, E)', 'false,false,true': 'companyceo(A, F)'}, {'true': [1.12, 4, 4], 'false,false,true,false': [1.225, 3, 3], 'false,false,true,true': [0.678, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'cityhascompanyoffice(C, A)', 'false,false': 'economicsectorcompany(D, A)', 'false,false,false': 'companyceo(A, E)'}, {'false,false,false,true': [0.676, 1, 1], 'false,false,false,false': [0.707, 1, 1], 'false,true': [1.053, 4, 2], 'false,false,true': [1.0, 2, 2], 'true': [0.0, 0, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(D, B)'}, {'true': [0.0, 0, 2], 'false,true': [0.447, 4, 2], 'false,false,true': [1.091, 2, 3], 'false,false,false': [0.753, 2, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'cityhascompanyoffice(D, A)', 'false,false,true': 'economicsectorcompany(E, A)', 'false,false,false': 'cityhascompanyoffice(F, A)'}, {'false,false,false,false': [1.226, 3, 3], 'false,false,true,true': [0.532, 1, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true': [0.447, 4, 2], 'true': [0.0, 0, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(C, D)', 'false,true,false': 'economicsectorcompany(F, A)', 'false,true': 'economicsectorcompany(E, A)'}, {'true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [1.369, 5, 4], 'false,true,false,false': [1.053, 3, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'cityhascompanyoffice(D, E)'}, {'true': [0.0, 0, 2], 'false,true': [0.446, 4, 2], 'false,false,true': [1.336, 4, 4], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.24999999999999986, 0.24999999999999986], 'true,false': [0.22222222222222224, 0.22222222222222224], 'true,false,false': [0.25, 0.0], 'true': [0.0, 0.22222222222222224], 'false': [nan, 0.24999999999999986], 'false,false': [nan, 0.24999999999999986], 'false,false,false': [0.25, 0.24999999999999992]}, {'': [0.2311162364906651, 0.2395866620681705], 'false': [0.21691869983143797, 0.20855939702592685], 'true,false': [nan, 0.24999999999999992], 'true,false,false': [nan, 0.24999999999999992], 'false,false': [0.0, 0.25000000000000006], 'true': [0.2019004199279619, 0.25000000000000006]}, {'': [0.20915233962058077, 0.24572727376892392], 'true,false': [0.18164529686923275, 0.18867240894528176], 'false': [nan, 0.24572727376892392], 'true': [0.0, 0.20485534963620333]}, {'': [0.0, 0.22628079263161496], 'false,true': [0.18159821901894865, 0.17681325034508455], 'false': [0.19491510968181028, 0.24525894671318843], 'false,false': [0.24525894671318843, nan], 'false,false,true': [0.23074651369615115, 0.24999999999999997]}, {'': [0.15676428860813083, 0.24493381837536546], 'false': [nan, 0.24493381837536546], 'false,false': [0.24493381837536546, nan], 'false,false,true': [0.22953036615639372, 0.25]}, {'': [0.0, 0.22023221092007444], 'false': [0.18472848719943488, 0.24472368719603677], 'false,false': [0.24999999999999997, 0.2394253542891315], 'false,false,false': [0.22876262816649506, 0.24999999999999997]}, {'': [0.0, 0.21932579585189124], 'false': [0.19963755875275688, 0.22909765407348898], 'false,false': [0.23792771999887147, 0.1887584127509756]}, {'': [0.0, 0.215716341185271], 'false': [0.19959168791655993, 0.22498842310246256], 'false,false': [0.14175908367646853, 0.2505443772443508], 'false,false,true': [0.14175908367646853, nan], 'false,false,false': [nan, 0.2505443772443508]}, {'': [0.0, 0.21411240196708128], 'false,true,false': [nan, 0.22170409728382304], 'false': [0.21411240196708128, nan], 'false,true': [0.20831996454464533, 0.22170409728382304]}, {'': [0.0, 0.2134391826906836], 'false': [0.19885005447029533, 0.22297990559524147], 'false,false': [0.22297990559524147, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
0;true,false;economicsectorcompany(D, A), companyceo(A, E).;true;true
0;true,false,false;companyceo(F, B).;true;true
0;true;companyceo(A, B).;true;true
1;;bankchiefexecutiveceo(A, B) :- companyceo(C, B).;true;true
1;false;companyceo(A, G).;true;true
1;false,false;cityhascompanyoffice(H, A).;true;true
2;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
2;true;companyceo(A, B).;true;true
3;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
5;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
6;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
7;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
8;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( economicsectorcompany(D, A), companyceo(A, E) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( companyceo(F, B) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( companyceo(G, B), companyeconomicsector(G, H) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( acquired(A, D) )
%   | then return 0.5036899806110665;  // std dev = 0,803, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.16996939639336758;  // std dev = 1,138, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( companyceo(A, E) )
%   | then return 0.47782764823327284;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2670719622367217;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.6078207668178734;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.11793976263636001;  // std dev = 1,134, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( bankboughtbank(D, A) )
%   | then return 0.2834339434353551;  // std dev = 0,931, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.22960072080628305;  // std dev = 0,926, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.45768652806178933;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C), companyceo(D, B) )
%   | then return -0.24704667979159722;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyceo(E, B), companyeconomicsector(A, F) )
%   | | then return 0.480872547454521;  // std dev = 0,825, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.3577101710432979;  // std dev = 0,770, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0014637016534366117;  // std dev = 0,786, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B), companyeconomicsector(A, D) )
%   then return 0.2823046645838312;  // std dev = 0,960, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( companyceo(E, B), companyeconomicsector(E, F) )
%   | then return -0.21858053407898048;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyeconomicsector(A, G) )
%   | | then return -0.03518261410237837;  // std dev = 0,819, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5112557146835796;  // std dev = 0,226, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.2648242129808514;  // std dev = 0,031, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(C, B), cityhascompanyoffice(D, C) )
%   | then return -0.049984054907310775;  // std dev = 0,782, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( companyceo(E, B), companyeconomicsector(E, F) )
%   | | then return 0.08731283660522926;  // std dev = 0,624, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( acquired(A, G) )
%   | | | then return -0.07811623736574015;  // std dev = 0,616, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3709195620893705;  // std dev = 0,600, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.21666002085157182;  // std dev = 0,027, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyeconomicsector(A, C), companyceo(D, B) )
%   | then return 0.21347495648112438;  // std dev = 0,936, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( acquired(A, E) )
%   | | then return -0.27764594277392546;  // std dev = 0,085, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.13592186888817917;  // std dev = 0,786, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.18220979656555825;  // std dev = 0,024, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(C, B), companyeconomicsector(A, D) )
%   | then return 0.164639705592217;  // std dev = 0,929, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then return 0.21342143835903502;  // std dev = 0,523, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.10990264197018469;  // std dev = 0,587, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.15665594058356092;  // std dev = 0,021, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(C, B), companyceo(A, D) )
%   | then return -0.21619024585731117;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.16399660861589102;  // std dev = 0,526, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyceo(F, B), companyeconomicsector(A, G) )
%   | | | then return 0.22701724362468317;  // std dev = 0,808, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.03802637294980986;  // std dev = 0,562, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.13708399635710017;  // std dev = 0,019, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(C, B), companyeconomicsector(C, D) )
%   | then if ( companyeconomicsector(A, D) )
%   | | then return 0.22298299540777608;  // std dev = 0,564, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.25563597669536064;  // std dev = 0,310, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.005624766348344135;  // std dev = 0,551, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1862974054218448;  // std dev = 0,507, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.92602
   AUC PR    = 0.920909
   CLL	      = -0.495859
   Precision = 0.666667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.8


Total learning time: 2.317 seconds
Total inference time: 0.843 seconds
AUC ROC: 0.92602


Refined model AUC ROC: 0.92602


Dataset: 35_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 03:52:28
{'Recall': 1.0, 'Learning time': 3.843, 'F1': 0.8, 'Precision': [0.666667, 0.5], 'AUC PR': 0.920909, 'CLL': -0.495859, 'parameter': {'Recall': 0.571429, 'Learning time': 1.526, 'F1': 0.727273, 'Precision': [1.0, 0.5], 'AUC PR': 0.89166, 'CLL': -0.569981, 'AUC ROC': 0.84949, 'Inference time': 1.039}, 'AUC ROC': 0.92602, 'Inference time': 0.843}


Starting fold 2

Target train facts examples: 5285
Target train pos examples: 8
Target train neg examples: 8

Target test facts examples: 5285
Target test pos examples: 14
Target test neg examples: 14

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
0;true,false,true;teamplaysagainstteam(E, B), teamalsoknownas(F, B).;false;false
0;false,false,false;athleteledsportsteam(A, J).;false;false
0;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
0;true,false;athleteplayssport(A, D), athleteledsportsteam(A, E).;true;true
0;true,false,false;athleteledsportsteam(G, B).;false;false
0;false,false;athleteledsportsteam(A, B).;false;true
0;true;athleteledsportsteam(A, B).;false;true
1;;athleteplaysforteam(A, B) :- athleteledsportsteam(C, B), teamplaysagainstteam(D, B).;true;true
1;false,false,false;athleteplaysinleague(A, M).;false;false
1;true,false,false;athleteledsportsteam(A, B).;false;false
1;true,false;athleteplaysinleague(A, F), athleteplaysinleague(C, G).;false;true
1;false;athleteledsportsteam(A, H), teamplaysagainstteam(H, I).;false;true
1;false,false;teamplaysinleague(B, J), teamplaysagainstteam(B, K).;true;true
1;false,false,true;teamplaysagainstteam(L, B), teamalsoknownas(K, L).;false;false
1;true;athleteplaysinleague(C, E), athleteplaysinleague(A, E).;false;true
2;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
2;true,false,true;teamalsoknownas(E, F), teamplaysagainstteam(D, F).;false;false
2;false,false,false;teamplaysagainstteam(L, B), teamalsoknownas(M, L).;false;false
2;true,false;athleteledsportsteam(A, D), teamplaysagainstteam(D, E).;true;false
2;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
2;false,false;teamalsoknownas(I, B), teamplaysagainstteam(I, B).;true;true
2;false,false,true;teamplayssport(B, J), teamplaysinleague(B, K).;false;false
2;true;athleteledsportsteam(A, B).;false;true
3;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
3;false,true,false;teamalsoknownas(G, B).;false;false
3;false,true,true;teamplaysagainstteam(F, D), teamplayssport(F, E).;false;false
3;false,false,true;athleteledsportsteam(A, J), teamplayssport(J, K).;false;false
3;false;athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
3;false,false;teamalsoknownas(H, B), athleteledsportsteam(I, H).;true;true
3;false,true;athleteledsportsteam(A, D), teamplayssport(B, E).;true;true
3;false,false,false;athleteplaysinleague(A, L), teamplaysinleague(M, L).;false;false
4;;athleteplaysforteam(A, B) :- teamplaysagainstteam(C, B), teamalsoknownas(D, C).;true;true
4;false;teamalsoknownas(J, B), athleteledsportsteam(K, J).;true;false
4;true,true;teamplaysinleague(D, E), athleteplaysinleague(A, E).;false;true
4;true,false;teamalsoknownas(C, H), teamplayssport(D, I).;false;true
4;true,false,false;athleteledsportsteam(A, B).;false;false
4;true,true,false;teamalsoknownas(C, F), teamplayssport(B, G).;false;false
4;false,true;athleteledsportsteam(A, L).;false;false
4;true;teamplaysagainstteam(B, D), teamplaysagainstteam(B, C).;true;true
5;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
5;false,true,false;teamplayssport(B, F), athleteplayssport(A, F).;false;false
5;false,true,true;athleteplaysinleague(A, E), teamalsoknownas(C, D).;false;false
5;false,false,true;teamplaysagainstteam(B, I), teamplaysagainstteam(G, I).;false;false
5;false;teamalsoknownas(C, B), teamplaysagainstteam(C, B).;true;true
5;false,false;athleteledsportsteam(A, G), teamplaysagainstteam(H, G).;true;true
5;false,true;teamalsoknownas(D, C), teamplaysagainstteam(D, B).;true;true
5;false,false,false;teamplaysagainstteam(J, B), teamplaysinleague(B, K).;false;false
6;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
6;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
6;false,true,true;teamplaysagainstteam(C, E), teamplaysagainstteam(B, C).;false;false
6;false,false,true;teamalsoknownas(I, G), teamplaysagainstteam(B, I).;false;false
6;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
6;false,false;teamplaysagainstteam(G, B), teamplayssport(G, H).;true;true
6;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
6;false,false,false;athleteledsportsteam(J, B).;false;false
7;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
7;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
7;false,true,true;teamplaysagainstteam(B, E).;false;false
7;false,false,true;athleteplayssport(A, H), teamplaysagainstteam(B, I).;false;false
7;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
7;false,false;athleteplaysinleague(A, G), teamplaysinleague(B, G).;true;true
7;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
7;false,false,false;athleteplaysinleague(A, J), teamplaysinleague(K, J).;false;false
8;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
8;false,true,false;teamplayssport(B, G), athleteplayssport(A, G).;false;false
8;false,true,true;athleteplayssport(A, F), teamplayssport(B, F).;false;false
8;false,false,true;athleteledsportsteam(A, I), teamplaysagainstteam(B, I).;false;false
8;false;teamalsoknownas(C, B), athleteledsportsteam(D, C).;true;true
8;false,false;athleteplaysinleague(A, H), teamplaysinleague(B, H).;true;true
8;false,true;teamalsoknownas(E, C), teamalsoknownas(E, B).;true;true
8;false,false,false;athleteplaysinleague(A, J), teamplaysinleague(K, J).;false;false
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,true,false;teamalsoknownas(D, F), teamplaysagainstteam(C, D).;false;false
9;false,true,true;teamplaysagainstteam(C, E), teamplaysagainstteam(B, C).;false;false
9;false,false,true;teamplaysinleague(B, I), teamplaysinleague(G, I).;false;false
9;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
9;false,false;teamplaysagainstteam(G, B), teamplayssport(G, H).;true;true
9;false,true;teamalsoknownas(E, D), teamplaysagainstteam(C, B).;true;true
9;false,false,false;teamplaysinleague(B, J), athleteplaysinleague(K, J).;false;false


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(D, A), companyceo(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( companyceo(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( companyceo(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( companyceo(C, D), companyceo(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, E), companyceo(C, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( companyceo(A, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyceo(A, G) )
%   | then return 0.04974543932757249;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyceo(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14207446911896834;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, D) )
%   | | then return -0.0011586515522090668;  // std dev = 0,339, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, B) )
%   | | then return 0.6531942943559135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.11913071541083436;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(A, D), companyceo(E, B) )
%   | | then if ( companyceo(E, F) )
%   | | | then return -0.11220091088057385;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04345697560133154;  // std dev = 0,392, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyceo(G, H) )
%   | | then if ( companyceo(A, I), companyceo(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1975427055417408;  // std dev = 0,886, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then return 0.13240182377612708;  // std dev = 1,048, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( companyceo(D, B) )
%   | then return 0.44580695251695146;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(E, F) )
%   | | then return 0.0610568532569743;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.2925763206626668;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then return -0.019133806929814316;  // std dev = 0,889, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( companyceo(D, B), bankboughtbank(D, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12158631277776998;  // std dev = 0,855, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.2358657849179182;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then return -0.016577741988707897;  // std dev = 0,889, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, G) )
%   | | then return 0.09586437931088744;  // std dev = 0,427, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.19602179673401787;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then return -0.014389388807638903;  // std dev = 0,889, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07515303966716455;  // std dev = 0,854, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.16695433978101581;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(C, D) )
%   | then if ( bankboughtbank(E, A), companyceo(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(F, B), bankboughtbank(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.01338130260897717;  // std dev = 1,239, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.1450056152192173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then return -0.01425709937242038;  // std dev = 0,336, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( companyceo(D, E) )
%   | | then return 0.05574074337477623;  // std dev = 0,427, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.793367
   AUC PR    = 0.815943
   CLL	      = -0.593464
   Precision = 0.692308 at threshold = 0.5
   Recall    = 0.642857
   F1        = 0.666667


Total learning time: 1.819 seconds
Total inference time: 1.139 seconds
AUC ROC: 0.793367


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'true': 'companyceo(A, B)', 'true,false,false': 'companyceo(F, B)', 'true,false': 'bankboughtbank(D, A), companyceo(A, E)', 'false': 'companyceo(A, G)', 'false,false': 'companyceo(A, B)', 'false,false,false': 'companyceo(A, H)'}, {'false,false,false,false': [1.0, 2, 2], 'false,false,true': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'false,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.816, 2, 1], 'true,true': [0.0, 0, 5], 'false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, B)', 'true,false,false': 'companyceo(A, B)', 'true,false': 'companyceo(A, E), companyceo(C, F)', 'false': 'companyceo(A, G)', 'false,false': 'companyceo(A, H)', 'true': 'companyceo(C, D), companyceo(A, D)'}, {'true,false,false,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false,false': [0.0, 0, 1], 'true,true': [0.0, 0, 5], 'false,true': [0.877, 4, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.816, 2, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'true,false': 'companyceo(A, D)', 'false': 'companyceo(A, E)', 'false,false': 'companyceo(F, B)', 'true': 'companyceo(A, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true': [0.339, 6, 1], 'true,true': [0.0, 0, 5], 'true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.471, 2, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,true,true': 'companyceo(E, F)', 'false,true': 'companyceo(A, D), companyceo(E, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(G, H)', 'false,false,true': 'companyceo(A, I), companyceo(J, I)'}, {'false,true,false': [0.392, 4, 1], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.886, 2, 2], 'false,true,true,true': [0.0, 2, 0], 'true': [1.49e-08, 0, 5]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'false': 'companyceo(D, B)', 'false,false': 'companyceo(E, F)'}, {'true': [1.048, 6, 6], 'false,true': [0.0, 0, 1], 'false,false,true': [0.816, 2, 1], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(D, B), bankboughtbank(D, A)', 'false,false,false': 'companyceo(A, E)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.855, 2, 2], 'false,true': [0.889, 6, 1], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 5]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(F, G)', 'false,true': 'companyceo(D, E)'}, {'true': [0.0, 0, 5], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.889, 6, 1], 'false,false,true': [0.427, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(A, F)', 'false,true': 'companyceo(D, E)', 'false,false,false': 'companyceo(A, G)'}, {'false,false,false,false': [0.854, 2, 2], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.889, 6, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 5]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(C, D)', 'false,true,false': 'companyceo(F, B), bankboughtbank(F, A)', 'false,true': 'bankboughtbank(E, A), companyceo(E, B)'}, {'true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [1.239, 8, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(D, E)'}, {'true': [0.0, 0, 5], 'false,true': [0.336, 6, 1], 'false,false,true': [0.427, 2, 2], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.25, 0.25], 'true,false': [0.0, 0.22222222222222224], 'true,false,false': [nan, 0.22222222222222224], 'true': [0.0, 0.12244897959183677], 'false': [nan, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25]}, {'': [0.13943929498240915, 0.18145278285799069], 'true,false,false': [nan, 0.0], 'true,false': [0.0, 0.0], 'false': [0.15379437558611914, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'true': [0.0, 0.19393401354015494]}, {'': [0.14215773830010597, 0.22014614910834665], 'true,false': [0.1146489074823528, nan], 'false': [nan, 0.22014614910834665], 'false,false': [0.0, 0.2222222222222222], 'true': [-4.4408920985006264e-17, 0.1146489074823528]}, {'': [4.4408920985006264e-17, 0.1534149173452841], 'false,false,true': [nan, 0.19615613178147934], 'false': [0.11465469714385515, 0.19615613178147934], 'false,false': [0.19615613178147934, nan], 'false,true': [0.0, 0.15359389668025042], 'false,true,true': [0.0, nan]}, {'': [0.09155623826620773, 0.19442278645677208], 'false': [0.0, 0.22222222222222218], 'false,false': [0.22222222222222218, nan]}, {'': [0.0, 0.14274932705797275], 'false': [0.11279752456692674, 0.18256361190515621], 'false,false': [nan, 0.18256361190515621], 'false,false,false': [nan, 0.18256361190515621]}, {'': [0.0, 0.14110737823826877], 'false': [0.11290421183481734, 0.18241722721735693], 'false,false': [0.18241722721735693, nan], 'false,true': [0.11290421183481734, nan]}, {'': [0.0, 0.14012043555880205], 'false': [0.11299655302484278, 0.18248496404048903], 'false,false': [nan, 0.18248496404048903], 'false,true': [0.11299655302484278, nan], 'false,false,false': [nan, 0.18248496404048903]}, {'': [0.0, 0.13954949036732486], 'false,true,false': [nan, 0.1395494903673249], 'false': [0.13954949036732486, nan], 'false,true': [nan, 0.13954949036732486]}, {'': [-2.7755575615628915e-18, 0.1394773744297579], 'false': [0.1130021649543835, 0.18269100138213318], 'false,false': [0.18269100138213318, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;bankchiefexecutiveceo(A, B) :- companyceo(A, C).;true;true
0;true,false;bankboughtbank(D, A), companyceo(A, E).;true;true
0;true;companyceo(A, B).;true;true
1;;bankchiefexecutiveceo(A, B) :- companyceo(C, B).;true;true
1;true,false;companyceo(A, E), companyceo(C, F).;true;true
1;true;companyceo(C, D), companyceo(A, D).;true;true
2;;bankchiefexecutiveceo(A, B) :- companyceo(A, C).;true;true
2;false;companyceo(F, B).;true;true
2;true;companyceo(A, B).;true;true
3;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
3;false;companyceo(A, C).;true;true
3;false,true;companyceo(A, D), companyceo(E, B).;true;true
4;;bankchiefexecutiveceo(A, B) :- companyceo(A, C).;true;true
4;false;companyceo(D, B).;true;true
5;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
6;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
7;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
8;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(D, A), companyceo(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( companyceo(C, D), companyceo(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, E), companyceo(C, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(G, A), cityhascompanyoffice(H, G) )
%   | then return 0.16401254434762622;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.03658259419037777;  // std dev = 0,892, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(D, A) )
%   | | then return -0.12467908581714768;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.16139263577141802;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( companyceo(E, B) )
%   | then return 0.6531942943559135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.12239394161682787;  // std dev = 0,808, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(A, D), companyceo(E, B) )
%   | | then return -0.10047347409616321;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.03312727780743671;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.19973143423210704;  // std dev = 0,877, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), companyeconomicsector(D, E) )
%   | then return 0.1642375568691217;  // std dev = 0,869, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.09620174017475153;  // std dev = 0,557, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( companyceo(F, B) )
%   | then return 0.44526626274103454;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.0638712312008896;  // std dev = 0,807, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.294487174451534;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(C, A), companyeconomicsector(A, D) )
%   | then if ( companyeconomicsector(E, D), acquired(A, E) )
%   | | then return -0.021167073117851865;  // std dev = 0,451, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1612936438538323;  // std dev = 1,062, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.13917328375162133;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.2371961584490511;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C), bankboughtbank(D, A) )
%   | then return -0.12196789141393219;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, E) )
%   | | then return 0.1413924541122341;  // std dev = 0,850, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.051750064090205605;  // std dev = 0,769, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.19698192137735376;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(C, A), companyeconomicsector(A, D) )
%   | then if ( acquired(A, E), companyceo(E, F) )
%   | | then return -0.04501689479063389;  // std dev = 0,448, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1262732484503636;  // std dev = 1,039, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.12021338352539486;  // std dev = 0,101, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.16767227662371667;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C), bankboughtbank(D, A) )
%   | then return -0.10754508843873858;  // std dev = 0,075, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, E) )
%   | | then return 0.10400935325466527;  // std dev = 0,842, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.028449339196095075;  // std dev = 0,754, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.1455593834065686;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C), bankboughtbank(D, A) )
%   | then return -0.097782906471725;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( bankboughtbank(A, E) )
%   | | then return 0.06382677922905042;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.04638821023572095;  // std dev = 0,763, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.806122
   AUC PR    = 0.838863
   CLL	      = -0.585744
   Precision = 0.692308 at threshold = 0.5
   Recall    = 0.642857
   F1        = 0.666667


Total learning time: 2.313 seconds
Total inference time: 0.998 seconds
AUC ROC: 0.806122


Refined model AUC ROC: 0.806122


Dataset: 35_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 03:52:35
{'Recall': 0.642857, 'Learning time': 4.132, 'F1': 0.666667, 'Precision': [0.692308, 0.5], 'AUC PR': 0.838863, 'CLL': -0.585744, 'parameter': {'Recall': 0.642857, 'Learning time': 1.819, 'F1': 0.666667, 'Precision': [0.692308, 0.5], 'AUC PR': 0.815943, 'CLL': -0.593464, 'AUC ROC': 0.793367, 'Inference time': 1.139}, 'AUC ROC': 0.806122, 'Inference time': 0.998}


Starting fold 3

Target train facts examples: 5285
Target train pos examples: 6
Target train neg examples: 6

Target test facts examples: 5285
Target test pos examples: 16
Target test neg examples: 16

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
0;true,false,true;teamplaysagainstteam(E, B), teamalsoknownas(F, B).;false;false
0;false,false,false;athleteledsportsteam(A, J).;false;false
0;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
0;true,false;athleteplayssport(A, D), athleteledsportsteam(A, E).;true;true
0;true,false,false;athleteledsportsteam(G, B).;false;false
0;false,false;athleteledsportsteam(A, B).;false;true
0;true;athleteledsportsteam(A, B).;false;true
1;;athleteplaysforteam(A, B) :- athleteledsportsteam(C, B), teamplaysagainstteam(D, B).;true;true
1;false,false,false;athleteplaysinleague(A, M).;false;false
1;true,false,false;athleteledsportsteam(A, B).;false;false
1;true,false;athleteplaysinleague(A, F), athleteplaysinleague(C, G).;false;true
1;false;athleteledsportsteam(A, H), teamplaysagainstteam(H, I).;false;true
1;false,false;teamplaysinleague(B, J), teamplaysagainstteam(B, K).;true;true
1;false,false,true;teamplaysagainstteam(L, B), teamalsoknownas(K, L).;false;false
1;true;athleteplaysinleague(C, E), athleteplaysinleague(A, E).;false;true
2;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
2;true,false,true;teamalsoknownas(E, F), teamplaysagainstteam(D, F).;false;false
2;false,false,false;teamplaysagainstteam(L, B), teamalsoknownas(M, L).;false;false
2;true,false;athleteledsportsteam(A, D), teamplaysagainstteam(D, E).;true;false
2;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
2;false,false;teamalsoknownas(I, B), teamplaysagainstteam(I, B).;true;true
2;false,false,true;teamplayssport(B, J), teamplaysinleague(B, K).;false;false
2;true;athleteledsportsteam(A, B).;false;true
3;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
3;false,true,false;teamalsoknownas(G, B).;false;false
3;false,true,true;teamplaysagainstteam(F, D), teamplayssport(F, E).;false;false
3;false,false,true;athleteledsportsteam(A, J), teamplayssport(J, K).;false;false
3;false;athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
3;false,false;teamalsoknownas(H, B), athleteledsportsteam(I, H).;true;true
3;false,true;athleteledsportsteam(A, D), teamplayssport(B, E).;true;true
3;false,false,false;athleteplaysinleague(A, L), teamplaysinleague(M, L).;false;false
4;;athleteplaysforteam(A, B) :- teamplaysagainstteam(C, B), teamalsoknownas(D, C).;true;true
4;false;teamalsoknownas(J, B), athleteledsportsteam(K, J).;true;false
4;true,true;teamplaysinleague(D, E), athleteplaysinleague(A, E).;false;true
4;true,false;teamalsoknownas(C, H), teamplayssport(D, I).;false;true
4;true,false,false;athleteledsportsteam(A, B).;false;false
4;true,true,false;teamalsoknownas(C, F), teamplayssport(B, G).;false;false
4;false,true;athleteledsportsteam(A, L).;false;false
4;true;teamplaysagainstteam(B, D), teamplaysagainstteam(B, C).;true;true
5;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
5;false,true,false;teamplayssport(B, F), athleteplayssport(A, F).;false;false
5;false,true,true;athleteplaysinleague(A, E), teamalsoknownas(C, D).;false;false
5;false,false,true;teamplaysagainstteam(B, I), teamplaysagainstteam(G, I).;false;false
5;false;teamalsoknownas(C, B), teamplaysagainstteam(C, B).;true;true
5;false,false;athleteledsportsteam(A, G), teamplaysagainstteam(H, G).;true;true
5;false,true;teamalsoknownas(D, C), teamplaysagainstteam(D, B).;true;true
5;false,false,false;teamplaysagainstteam(J, B), teamplaysinleague(B, K).;false;false
6;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
6;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
6;false,true,true;teamplaysagainstteam(C, E), teamplaysagainstteam(B, C).;false;false
6;false,false,true;teamalsoknownas(I, G), teamplaysagainstteam(B, I).;false;false
6;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
6;false,false;teamplaysagainstteam(G, B), teamplayssport(G, H).;true;true
6;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
6;false,false,false;athleteledsportsteam(J, B).;false;false
7;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
7;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
7;false,true,true;teamplaysagainstteam(B, E).;false;false
7;false,false,true;athleteplayssport(A, H), teamplaysagainstteam(B, I).;false;false
7;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
7;false,false;athleteplaysinleague(A, G), teamplaysinleague(B, G).;true;true
7;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
7;false,false,false;athleteplaysinleague(A, J), teamplaysinleague(K, J).;false;false
8;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
8;false,true,false;teamplayssport(B, G), athleteplayssport(A, G).;false;false
8;false,true,true;athleteplayssport(A, F), teamplayssport(B, F).;false;false
8;false,false,true;athleteledsportsteam(A, I), teamplaysagainstteam(B, I).;false;false
8;false;teamalsoknownas(C, B), athleteledsportsteam(D, C).;true;true
8;false,false;athleteplaysinleague(A, H), teamplaysinleague(B, H).;true;true
8;false,true;teamalsoknownas(E, C), teamalsoknownas(E, B).;true;true
8;false,false,false;athleteplaysinleague(A, J), teamplaysinleague(K, J).;false;false
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,true,false;teamalsoknownas(D, F), teamplaysagainstteam(C, D).;false;false
9;false,true,true;teamplaysagainstteam(C, E), teamplaysagainstteam(B, C).;false;false
9;false,false,true;teamplaysinleague(B, I), teamplaysinleague(G, I).;false;false
9;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
9;false,false;teamplaysagainstteam(G, B), teamplayssport(G, H).;true;true
9;false,true;teamalsoknownas(E, D), teamplaysagainstteam(C, B).;true;true
9;false,false,false;teamplaysinleague(B, J), athleteplaysinleague(K, J).;false;false


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(A, D), companyceo(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyceo(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( cityhascompanyoffice(D, C), cityhascompanyoffice(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( cityhascompanyoffice(E, A), cityhascompanyoffice(F, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.035066826060024446;  // std dev = 0,867, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( companyceo(A, G) )
%   | then return 0.16401254434762622;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.0763695313874474;  // std dev = 0,409, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( cityhascompanyoffice(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, B) )
%   | | then return 0.24128528781557954;  // std dev = 0,893, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2543120280460247;  // std dev = 0,399, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.4434334667840132;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( cityhascompanyoffice(C, A) )
%   | then if ( companyceo(A, D), companyceo(E, B) )
%   | | then if ( companyceo(E, F) )
%   | | | then return -0.1381888771265313;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.26878600541634345;  // std dev = 0,500, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( companyceo(G, H) )
%   | | then if ( companyceo(A, I), companyceo(J, I) )
%   | | | then return -0.1789428123343117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.22014363457549235;  // std dev = 0,923, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then return 0.13672393918560652;  // std dev = 0,843, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( companyceo(D, B) )
%   | then return 0.13674275116041967;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( companyceo(E, F) )
%   | | then return 0.19271877125564735;  // std dev = 0,491, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.3090887479952083;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( cityhascompanyoffice(C, A) )
%   | then return 0.02554745625778182;  // std dev = 0,779, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( companyceo(D, B), companyalsoknownas(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, E) )
%   | | | then return -0.18097576700411463;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1417315030026508;  // std dev = 0,911, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.24748689647372848;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then return -0.014124900313132927;  // std dev = 0,794, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, G) )
%   | | then return 0.10964427749322253;  // std dev = 0,455, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.20447555544997584;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then return -0.011855357714827186;  // std dev = 0,795, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08413983998138462;  // std dev = 0,908, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.1733163577185216;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, D) )
%   | then if ( companyalsoknownas(A, E), companyceo(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(F, B), companyalsoknownas(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.023019369995875012;  // std dev = 1,212, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.14993980535189952;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then return -0.013647754553089902;  // std dev = 0,355, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyceo(D, E) )
%   | | then return 0.05876617894443553;  // std dev = 0,454, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.789063
   AUC PR    = 0.829996
   CLL	      = -0.553115
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.5625
   F1        = 0.642857


Total learning time: 1.899 seconds
Total inference time: 1.154 seconds
AUC ROC: 0.789063


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true': 'companyceo(A, B)', 'true,false,false': 'companyceo(F, B)', 'true,false': 'companyalsoknownas(A, D), companyceo(A, E)', 'false': 'cityhascompanyoffice(G, A)', 'false,false': 'companyceo(A, B)', 'false,false,false': 'companyceo(A, H)'}, {'false,false,false,false': [1.0, 2, 2], 'false,false,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'true,false,false,false': [0.707, 1, 1], 'true,true': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 2, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, B)', 'true,false,false': 'companyceo(A, B)', 'true,false': 'cityhascompanyoffice(E, A), cityhascompanyoffice(F, C)', 'false': 'companyceo(A, G)', 'false,false': 'cityhascompanyoffice(H, A)', 'true': 'cityhascompanyoffice(D, C), cityhascompanyoffice(D, A)'}, {'true,false,false,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,false': [0.867, 4, 1], 'true,true': [0.0, 0, 2], 'false,true': [0.791, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true,false': 'companyceo(A, D)', 'false': 'cityhascompanyoffice(E, A)', 'false,false': 'companyceo(F, B)', 'true': 'companyceo(A, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true': [0.409, 3, 1], 'true,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 0], 'false,false,true': [0.893, 2, 2], 'false,false,false': [0.399, 1, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,true,true': 'companyceo(E, F)', 'false,true': 'companyceo(A, D), companyceo(E, B)', 'false': 'cityhascompanyoffice(C, A)', 'false,false': 'companyceo(G, H)', 'false,false,true': 'companyceo(A, I), companyceo(J, I)'}, {'false,true,false': [0.5, 1, 1], 'false,false,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.923, 2, 2], 'false,true,true,true': [0.0, 2, 0], 'true': [0.063, 0, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'false': 'companyceo(D, B)', 'false,false': 'companyceo(E, F)'}, {'true': [0.843, 3, 3], 'false,true': [0.866, 2, 2], 'false,false,true': [0.491, 1, 1], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'cityhascompanyoffice(C, A)', 'false,false': 'companyceo(D, B), companyalsoknownas(A, D)', 'false,false,false': 'companyceo(A, E)'}, {'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.911, 2, 2], 'false,true': [0.779, 3, 1], 'false,false,true': [0.0, 0, 0], 'true': [0.056, 0, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(F, G)', 'false,true': 'companyceo(D, E)'}, {'true': [0.049, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.794, 4, 1], 'false,false,true': [0.455, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'cityhascompanyoffice(F, A)', 'false,true': 'companyceo(D, E)', 'false,false,false': 'cityhascompanyoffice(G, A)'}, {'false,false,false,false': [0.908, 2, 2], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.795, 4, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.043, 0, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(C, D)', 'false,true,false': 'companyceo(F, B), companyalsoknownas(A, F)', 'false,true': 'companyalsoknownas(A, E), companyceo(E, B)'}, {'true': [0.038, 0, 3], 'false,true,false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [1.212, 6, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(D, E)'}, {'true': [0.034, 0, 3], 'false,true': [0.355, 4, 1], 'false,false,true': [0.454, 2, 2], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.24999999999999992, 0.24999999999999992], 'true,false': [nan, 0.18750000000000003], 'true,false,false': [0.0, 0.25], 'true': [0.0, 0.18750000000000003], 'false': [nan, 0.24999999999999992], 'false,false': [0.0, 0.24000000000000005], 'false,false,false': [0.0, 0.25]}, {'': [0.2038524547065111, 0.2343586021352524], 'false': [0.20855939702592685, 0.0], 'true,false': [nan, 0.19048168003111712], 'true,false,false': [0.0, 0.15050928684287887], 'false,false': [nan, 0.0], 'true': [0.0, 0.19048168003111712]}, {'': [0.16253120572699173, 0.18610605725320725], 'true,false': [0.1673174634760401, nan], 'false': [nan, 0.18610605725320725], 'false,false': [0.19954898937121054, 0.15910706237651304], 'true': [0.0, 0.1673174634760401]}, {'': [0.001343680630660482, 0.18424035870317856], 'false,false,true': [0.0, 0.2131523543893808], 'false': [0.16640713875519667, 0.19600508224863933], 'false,false': [0.19600508224863933, nan], 'false,true': [0.0, 0.25], 'false,true,true': [0.0, nan]}, {'': [0.11852542894037599, 0.16576600082235157], 'false': [0.1874480067148765, 0.12031311248683416], 'false,false': [0.12031311248683416, nan]}, {'': [0.001033513731636256, 0.16955759433271464], 'false': [0.15175251554614336, 0.1826163429685172], 'false,false': [nan, 0.1826163429685172], 'false,false,false': [0.0, 0.20744243228760262]}, {'': [0.0007954875261890574, 0.16569797886230686], 'false': [0.1260944548340226, 0.20669193424496152], 'false,false': [0.20669193424496152, nan], 'false,true': [0.1260944548340226, nan]}, {'': [0.000611846235516809, 0.16414703528782393], 'false': [0.1262992937590572, 0.2063372244317075], 'false,false': [nan, 0.2063372244317075], 'false,true': [0.1262992937590572, nan], 'false,false,false': [nan, 0.2063372244317075]}, {'': [0.0004774666719947103, 0.16326764430033727], 'false,true,false': [nan, 0.1632676443003373], 'false': [0.16326764430033727, nan], 'false,true': [nan, 0.16326764430033727]}, {'': [0.00037948634456799285, 0.16300956653728027], 'false': [0.12613730464207357, 0.20618668403707527], 'false,false': [0.20618668403707527, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
0;true,false;companyceo(F, B).;true;true
0;false;companyceo(A, B).;true;true
0;false,false;companyceo(A, H).;true;true
0;true;companyceo(A, B).;true;true
1;;bankchiefexecutiveceo(A, B) :- companyceo(C, B).;true;true
1;true,false;companyceo(A, B).;true;true
1;false;companyceo(A, G).;true;true
1;true;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;true;true
2;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
2;true;companyceo(A, B).;true;true
3;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
3;false;cityhascompanyoffice(C, A).;true;true
3;false,false;companyceo(A, I), companyceo(J, I).;true;true
3;false,true;companyceo(A, D), companyceo(E, B).;true;true
5;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
5;false;cityhascompanyoffice(C, A).;true;true
5;false,false;companyceo(A, E).;true;true
6;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
7;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
8;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(D, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B) )
%   then if ( cityhascompanyoffice(D, C), cityhascompanyoffice(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.035066826060024446;  // std dev = 0,867, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( companyceo(A, E) )
%   | then return 0.16401254434762622;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.0763695313874474;  // std dev = 0,818, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.24562753455906128;  // std dev = 1,057, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.4430716532220184;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( cityhascompanyoffice(C, A) )
%   | then if ( companyceo(A, D), companyceo(E, B) )
%   | | then return -0.1381888771265313;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.26878600541634345;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( companyceo(A, F), companyceo(G, F) )
%   | | then return -0.17767042242982056;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.22007624547969612;  // std dev = 0,925, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.33860880018923495;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.20161055065576572;  // std dev = 0,158, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3086262801044265;  // std dev = 0,976, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.26765823614141276;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( cityhascompanyoffice(C, A) )
%   | then return 0.024341639694429457;  // std dev = 0,751, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( companyceo(A, D) )
%   | | then return -0.19761701707130427;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.15853649850007923;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.21872734534635394;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.18839288464828843;  // std dev = 0,167, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.23299409978999605;  // std dev = 0,927, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.18376621451082675;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.16235971805004823;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1815725973028476;  // std dev = 0,918, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.15786303082721123;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.14222197079859644;  // std dev = 0,132, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.14030186500171574;  // std dev = 0,913, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.13804462103481985;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.1262705982692585;  // std dev = 0,119, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.10805561950174114;  // std dev = 0,910, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.714844
   AUC PR    = 0.792531
   CLL	      = -0.63549
   Precision = 0.578947 at threshold = 0.5
   Recall    = 0.6875
   F1        = 0.628571


Total learning time: 1.948 seconds
Total inference time: 1.068 seconds
AUC ROC: 0.714844


Refined model AUC ROC: 0.714844


Dataset: 35_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 03:52:41
{'Recall': 0.6875, 'Learning time': 3.847, 'F1': 0.628571, 'Precision': [0.578947, 0.5], 'AUC PR': 0.792531, 'CLL': -0.63549, 'parameter': {'Recall': 0.5625, 'Learning time': 1.899, 'F1': 0.642857, 'Precision': [0.75, 0.5], 'AUC PR': 0.829996, 'CLL': -0.553115, 'AUC ROC': 0.789063, 'Inference time': 1.154}, 'AUC ROC': 0.714844, 'Inference time': 1.068}


