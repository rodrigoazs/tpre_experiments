Starting experiment #2 for 35_nell_sports_nell_finances

Start learning from source dataset

Source train facts examples: 8233
Source train pos examples: 1458
Source train neg examples: 1458

WILL Produced-Tree #1
% FOR athleteplaysforteam(A, B):
%   if ( athleteplaysinleague(A, C), teamplaysinleague(B, C) )
%   then if ( athleteledsportsteam(A, B) )
%   | then return 0.8581489350995096;  // std dev = 1,05e-06, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | else if ( athleteplayssport(A, D), athleteledsportsteam(A, E) )
%   | | then if ( teamplaysagainstteam(E, B), teamalsoknownas(F, B) )
%   | | | then return 0.7672398441904213;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.41659049354107014;  // std dev = 4,357, 77,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=43 */
%   | | else return 0.6910019610361091;  // std dev = 0,373, 347,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=289 */
%   else if ( athleteplaysinleague(A, G), teamplaysinleague(H, G) )
%   | then return -0.02163248566551471;  // std dev = 0,325, 549,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=66 */
%   | else if ( teamplaysagainstteam(I, B), teamalsoknownas(J, I) )
%   | | then if ( athleteledsportsteam(A, B) )
%   | | | then return 0.858148935099512;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   | | | else return 0.37160184989771367;  // std dev = 18,283, 1.338,000 (wgt'ed) examples reached here.  /* #neg=651 #pos=687 */
%   | | else if ( teamalsoknownas(K, B), athleteledsportsteam(L, K) )
%   | | | then return 0.591482268432845;  // std dev = 2,422, 30,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return 0.1341229610735391;  // std dev = 7,845, 308,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=85 */
WILL Produced-Tree #2
% FOR athleteplaysforteam(A, B):
%   if ( teamplaysinleague(B, C), athleteplaysinleague(A, C) )
%   then if ( athleteledsportsteam(A, B) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | else if ( athleteledsportsteam(A, D), teamplaysagainstteam(D, E) )
%   | | then if ( teamalsoknownas(E, F), teamplaysagainstteam(D, F) )
%   | | | then return 0.3267387253529771;  // std dev = 4,256, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.5726357775407656;  // std dev = 2,487, 40,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | else if ( athleteledsportsteam(G, B), teamplayssport(B, H) )
%   | | | then return 0.6268322733245746;  // std dev = 5,456, 271,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=237 */
%   | | | else return 0.412894182865355;  // std dev = 3,355, 50,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   else if ( athleteplaysinleague(A, I), teamplaysinleague(J, I) )
%   | then return -0.019019523673095583;  // std dev = 0,325, 549,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=66 */
%   | else if ( athleteledsportsteam(A, B) )
%   | | then return 0.7234806189171693;  // std dev = 0,207, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else if ( teamalsoknownas(K, B), teamplaysagainstteam(K, B) )
%   | | | then return 0.449168511969905;  // std dev = 8,443, 313,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=202 */
%   | | | else return 0.2472970100132583;  // std dev = 18,189, 1.360,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=589 */
WILL Produced-Tree #3
% FOR athleteplaysforteam(A, B):
%   if ( athleteplaysinleague(A, C), teamplaysinleague(B, C) )
%   then if ( athleteledsportsteam(D, B) )
%   | then return 0.4855327702513262;  // std dev = 0,317, 539,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=470 */
%   | else if ( athleteledsportsteam(A, E), teamalsoknownas(E, F) )
%   | | then return -0.06912358062954017;  // std dev = 0,908, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamalsoknownas(B, G) )
%   | | | then return 0.6673233815813421;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.289529027424249;  // std dev = 3,491, 51,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=31 */
%   else if ( athleteplaysinleague(A, H), teamplaysinleague(I, H) )
%   | then return -0.016755619592951077;  // std dev = 0,325, 549,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=66 */
%   | else if ( teamplaysagainstteam(J, B), teamalsoknownas(K, J) )
%   | | then if ( teamplaysagainstteam(B, K), teamplaysagainstteam(B, J) )
%   | | | then return 0.36671072457479026;  // std dev = 14,773, 966,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=603 */
%   | | | else return 0.12332356660363726;  // std dev = 10,085, 460,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=172 */
%   | | else if ( teamalsoknownas(L, B), athleteledsportsteam(M, L) )
%   | | | then return 0.41454575898096313;  // std dev = 2,422, 30,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return 0.07960146563366961;  // std dev = 7,826, 308,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=85 */
WILL Produced-Tree #4
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.4833843974177284;  // std dev = 0,112, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( teamplaysagainstteam(D, B), teamplayssport(D, E) )
%   | | then if ( teamplayssport(C, E), athleteledsportsteam(F, D) )
%   | | | then return 0.23154363800510805;  // std dev = 5,782, 147,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=83 */
%   | | | else return -0.05778375804768788;  // std dev = 2,767, 56,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else if ( athleteplaysinleague(A, G), teamplaysinleague(B, G) )
%   | | | then return 0.46765655233974995;  // std dev = 0,760, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.1501242943075973;  // std dev = 2,837, 284,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=8 */
%   | else if ( teamplaysinleague(B, H), teamplaysagainstteam(B, I) )
%   | | then if ( teamalsoknownas(I, J), teamplaysagainstteam(J, B) )
%   | | | then return 0.2961260294467817;  // std dev = 16,013, 1.251,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=788 */
%   | | | else return 0.09218254826211672;  // std dev = 11,587, 658,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=228 */
%   | | else if ( athleteplaysinleague(A, K) )
%   | | | then return -0.10232222515013101;  // std dev = 1,161, 50,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=2 */
%   | | | else return 0.05005720401726287;  // std dev = 6,029, 180,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=51 */
WILL Produced-Tree #5
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.3724336198314333;  // std dev = 0,124, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( teamplaysagainstteam(C, B), teamalsoknownas(E, D) )
%   | | then if ( teamplaysagainstteam(B, E) )
%   | | | then return 0.318015731814477;  // std dev = 3,294, 58,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=43 */
%   | | | else return 0.04229001578881177;  // std dev = 2,039, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( teamplaysagainstteam(D, B), teamplayssport(D, F) )
%   | | | then return 0.060024922140260846;  // std dev = 5,124, 134,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=49 */
%   | | | else return -0.12715914111479815;  // std dev = 2,890, 286,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=10 */
%   | else if ( teamplaysinleague(B, G), athleteplaysinleague(A, G) )
%   | | then if ( teamplaysagainstteam(H, B), teamalsoknownas(I, H) )
%   | | | then return 0.30049835125847457;  // std dev = 5,996, 308,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=263 */
%   | | | else return 0.06659930939483599;  // std dev = 1,922, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( teamplaysagainstteam(J, B), teamplaysinleague(B, K) )
%   | | | then return 0.15252988306980939;  // std dev = 19,088, 1.640,000 (wgt'ed) examples reached here.  /* #neg=876 #pos=764 */
%   | | | else return -0.014712956228058497;  // std dev = 5,183, 178,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=35 */
WILL Produced-Tree #6
% FOR athleteplaysforteam(A, B):
%   if ( teamalsoknownas(C, B), athleteledsportsteam(D, C) )
%   then if ( athleteplayssport(A, E), teamplayssport(B, E) )
%   | then return 0.3548361644274802;  // std dev = 0,308, 107,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=97 */
%   | else if ( teamalsoknownas(F, C), teamalsoknownas(F, B) )
%   | | then return 0.4009257959732396;  // std dev = 0,336, 64,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=55 */
%   | | else if ( athleteplayssport(A, G) )
%   | | | then return -0.011788332848640427;  // std dev = 2,851, 52,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return 0.18640422002712767;  // std dev = 6,923, 255,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=170 */
%   else if ( athleteplaysinleague(A, H), teamplaysinleague(B, H) )
%   | then if ( teamplaysagainstteam(I, B), teamalsoknownas(J, I) )
%   | | then return 0.21085028659551144;  // std dev = 0,332, 460,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=388 */
%   | | else return -0.019130054251718633;  // std dev = 0,464, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | else if ( athleteplaysinleague(A, K) )
%   | | then return -0.0705505028296393;  // std dev = 0,256, 484,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=38 */
%   | | else if ( teamplaysagainstteam(L, B), teamalsoknownas(M, L) )
%   | | | then return 0.13128566011193804;  // std dev = 16,066, 1.162,000 (wgt'ed) examples reached here.  /* #neg=561 #pos=601 */
%   | | | else return 0.03997810355913464;  // std dev = 7,711, 308,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=85 */
WILL Produced-Tree #7
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.26168014568757836;  // std dev = 0,132, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( teamplaysagainstteam(D, B), teamplayssport(D, E) )
%   | | then if ( teamplayssport(B, E), teamplayssport(C, E) )
%   | | | then return 0.13553686540223978;  // std dev = 5,048, 115,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=71 */
%   | | | else return -0.040472637649829786;  // std dev = 3,827, 88,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   | | else if ( athleteplaysinleague(A, F), teamplaysinleague(B, F) )
%   | | | then return 0.2718086075469217;  // std dev = 0,709, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.11748427688701867;  // std dev = 2,808, 284,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=8 */
%   | else if ( teamplaysagainstteam(G, B), teamalsoknownas(G, B) )
%   | | then if ( teamplayssport(B, H), teamplaysinleague(B, I) )
%   | | | then return 0.20260187375944128;  // std dev = 8,370, 392,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=280 */
%   | | | else return -0.25269086174241784;  // std dev = 1,118, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( teamplaysinleague(B, J), athleteplaysinleague(A, J) )
%   | | | then return 0.15853904494628046;  // std dev = 5,848, 248,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=203 */
%   | | | else return 0.061305955602849765;  // std dev = 17,629, 1.479,000 (wgt'ed) examples reached here.  /* #neg=894 #pos=585 */
WILL Produced-Tree #8
% FOR athleteplaysforteam(A, B):
%   if ( teamplaysagainstteam(B, C), teamplaysinleague(B, D) )
%   then if ( teamplaysagainstteam(E, B), teamalsoknownas(C, E) )
%   | then if ( teamalsoknownas(E, F), athleteplaysinleague(G, D) )
%   | | then if ( teamalsoknownas(E, B), athleteledsportsteam(G, C) )
%   | | | then return 0.22291296912258454;  // std dev = 3,905, 131,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=111 */
%   | | | else return 0.044102300885537196;  // std dev = 11,161, 733,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=410 */
%   | | else if ( athleteledsportsteam(H, B), athleteplaysinleague(H, D) )
%   | | | then return 0.09991273318890877;  // std dev = 8,010, 417,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=275 */
%   | | | else return 0.24140477795720797;  // std dev = 8,550, 404,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=264 */
%   | else if ( teamalsoknownas(C, I), teamalsoknownas(J, C) )
%   | | then return -0.10350098582363784;  // std dev = 0,346, 312,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=72 */
%   | | else if ( athleteplayssport(A, K) )
%   | | | then return -0.023523077085878773;  // std dev = 4,027, 166,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=51 */
%   | | | else return 0.10199758743556686;  // std dev = 9,432, 447,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=216 */
%   else if ( teamalsoknownas(B, L), teamplaysagainstteam(L, M) )
%   | then return 0.4723196407670813;  // std dev = 0,727, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.03146791288775369;  // std dev = 0,362, 303,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=57 */
WILL Produced-Tree #9
% FOR athleteplaysforteam(A, B):
%   if ( athleteplayssport(A, C), teamplayssport(B, C) )
%   then if ( teamalsoknownas(D, B), teamplaysagainstteam(D, E) )
%   | then if ( teamalsoknownas(E, B), athleteplaysinleague(A, F) )
%   | | then return 0.06257956681987702;  // std dev = 0,304, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | else return 0.27625978793916356;  // std dev = 0,258, 91,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=86 */
%   | else if ( athleteledsportsteam(A, B) )
%   | | then return 0.18574292913498816;  // std dev = 0,097, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | | else if ( teamplaysagainstteam(G, B), teamplayssport(G, C) )
%   | | | then return 0.08060282849649301;  // std dev = 6,428, 227,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=151 */
%   | | | else return -0.23006117172731202;  // std dev = 0,475, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteledsportsteam(A, B) )
%   | then return 0.22538262517317253;  // std dev = 0,134, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( athleteplayssport(A, H) )
%   | | then return -0.05637167766760025;  // std dev = 0,283, 506,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=108 */
%   | | else if ( athleteledsportsteam(A, I), teamplayssport(I, J) )
%   | | | then return -0.09348469951438305;  // std dev = 4,195, 181,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=34 */
%   | | | else return 0.06560813207761833;  // std dev = 18,542, 1.625,000 (wgt'ed) examples reached here.  /* #neg=819 #pos=806 */
WILL Produced-Tree #10
% FOR athleteplaysforteam(A, B):
%   if ( athleteledsportsteam(A, B) )
%   then return 0.17794208522510319;  // std dev = 0,117, 279,000 (wgt'ed) examples reached here.  /* #pos=279 */
%   else if ( athleteledsportsteam(A, C), teamplaysagainstteam(D, C) )
%   | then if ( teamplaysagainstteam(D, B), teamplayssport(D, E) )
%   | | then if ( athleteledsportsteam(F, D), teamplaysinleague(B, G) )
%   | | | then return 0.010532512650884028;  // std dev = 6,021, 188,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=85 */
%   | | | else return 0.2675722703711804;  // std dev = 1,904, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( athleteplaysinleague(A, H) )
%   | | | then return -0.053076008792179066;  // std dev = 2,179, 207,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=14 */
%   | | | else return -0.17455498550400697;  // std dev = 1,830, 88,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=4 */
%   | else if ( teamplaysagainstteam(I, B), teamplayssport(I, J) )
%   | | then if ( teamplaysinleague(B, K), teamplaysinleague(I, K) )
%   | | | then return 0.06109269720830581;  // std dev = 19,122, 1.872,000 (wgt'ed) examples reached here.  /* #neg=850 #pos=1.022 */
%   | | | else return -0.08559722552503057;  // std dev = 4,339, 137,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=24 */
%   | | else if ( athleteledsportsteam(L, B) )
%   | | | then return -0.2339843482619979;  // std dev = 0,451, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.02612883336320228;  // std dev = 4,153, 108,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=23 */


Starting fold 1

Target train facts examples: 5285
Target train pos examples: 8
Target train neg examples: 8

Target test facts examples: 5285
Target test pos examples: 14
Target test neg examples: 14

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
0;true,false,true;teamplaysagainstteam(E, B), teamalsoknownas(F, B).;false;false
0;false,false,false;teamalsoknownas(K, B), athleteledsportsteam(L, K).;false;false
0;true,false;athleteplayssport(A, D), athleteledsportsteam(A, E).;true;false
0;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
0;false,false;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;true;true
0;false,false,true;athleteledsportsteam(A, B).;false;false
0;true;athleteledsportsteam(A, B).;false;true
1;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
1;true,false,true;teamalsoknownas(E, F), teamplaysagainstteam(D, F).;false;false
1;false,false,false;teamalsoknownas(K, B), teamplaysagainstteam(K, B).;false;false
1;false;athleteplaysinleague(A, I), teamplaysinleague(J, I).;false;true
1;true,false;athleteledsportsteam(A, D), teamplaysagainstteam(D, E).;true;true
1;true,false,false;athleteledsportsteam(G, B), teamplayssport(B, H).;false;false
1;false,false;athleteledsportsteam(A, B).;false;true
1;true;athleteledsportsteam(A, B).;false;true
2;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
2;false,false,false;teamalsoknownas(L, B), athleteledsportsteam(M, L).;false;false
2;true,false,false;teamalsoknownas(B, G).;false;false
2;true,false;athleteledsportsteam(A, E), teamalsoknownas(E, F).;false;true
2;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
2;false,false;teamplaysagainstteam(J, B), teamalsoknownas(K, J).;true;true
2;false,false,true;teamplaysagainstteam(B, K), teamplaysagainstteam(B, J).;false;false
2;true;athleteledsportsteam(D, B).;false;true
3;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
3;false,true,false;athleteplaysinleague(A, G), teamplaysinleague(B, G).;false;false
3;false,true,true;teamplayssport(C, E), athleteledsportsteam(F, D).;false;false
3;false,false,true;teamalsoknownas(I, J), teamplaysagainstteam(J, B).;false;false
3;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
3;false,false;teamplaysinleague(B, H), teamplaysagainstteam(B, I).;true;true
3;false,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;true;true
3;false,false,false;athleteplaysinleague(A, K).;false;false
4;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
4;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
4;false,true,true;teamplaysagainstteam(B, E).;false;false
4;false,false,true;teamplaysagainstteam(H, B), teamalsoknownas(I, H).;false;false
4;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
4;false,false;teamplaysinleague(B, G), athleteplaysinleague(A, G).;true;true
4;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
4;false,false,false;teamplaysagainstteam(J, B), teamplaysinleague(B, K).;false;false
5;;athleteplaysforteam(A, B) :- teamalsoknownas(C, B), athleteledsportsteam(D, C).;true;true
5;false,false,false;teamplaysagainstteam(L, B), teamalsoknownas(M, L).;false;false
5;true,false,false;athleteplayssport(A, G).;false;false
5;true,false;teamalsoknownas(F, C), teamalsoknownas(F, B).;false;true
5;false;athleteplaysinleague(A, H), teamplaysinleague(B, H).;true;true
5;false,false;athleteplaysinleague(A, K).;false;true
5;false,true;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;false;false
5;true;athleteplayssport(A, E), teamplayssport(B, E).;false;true
6;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
6;false,true,false;athleteplaysinleague(A, F), teamplaysinleague(B, F).;false;false
6;false,true,true;teamplayssport(B, E), teamplayssport(C, E).;false;false
6;false,false,true;teamplayssport(B, H), teamplaysinleague(B, I).;false;false
6;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
6;false,false;teamplaysagainstteam(G, B), teamalsoknownas(G, B).;true;true
6;false,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;true;true
6;false,false,false;teamplaysinleague(B, J), athleteplaysinleague(A, J).;false;false
7;;athleteplaysforteam(A, B) :- teamplaysagainstteam(B, C), teamplaysinleague(B, D).;true;true
7;true,false;teamalsoknownas(C, I), teamalsoknownas(J, C).;false;true
7;false;teamalsoknownas(B, L), teamplaysagainstteam(L, M).;false;false
7;true,true;teamalsoknownas(E, F), athleteplaysinleague(G, D).;true;true
7;true,true,true;teamalsoknownas(E, B), athleteledsportsteam(G, C).;false;false
7;true,false,false;athleteplayssport(A, K).;false;false
7;true,true,false;athleteledsportsteam(H, B), athleteplaysinleague(H, D).;false;false
7;true;teamplaysagainstteam(E, B), teamalsoknownas(C, E).;true;true
8;;athleteplaysforteam(A, B) :- athleteplayssport(A, C), teamplayssport(B, C).;true;true
8;false,false,false;athleteledsportsteam(A, I), teamplayssport(I, J).;false;false
8;false;athleteledsportsteam(A, B).;false;true
8;true,true;teamalsoknownas(E, B), athleteplaysinleague(A, F).;false;false
8;true,false;athleteledsportsteam(A, B).;false;true
8;true,false,false;teamplaysagainstteam(G, B), teamplayssport(G, C).;false;false
8;false,false;athleteplayssport(A, H).;false;true
8;true;teamalsoknownas(D, B), teamplaysagainstteam(D, E).;true;true
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,true,false;athleteplaysinleague(A, H).;false;false
9;false,true,true;athleteledsportsteam(F, D), teamplaysinleague(B, G).;false;false
9;false,false,true;teamplaysinleague(B, K), teamplaysinleague(I, K).;false;false
9;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
9;false,false;teamplaysagainstteam(I, B), teamplayssport(I, J).;true;true
9;false,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;true;true
9;false,false,false;athleteledsportsteam(L, B).;false;false


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( economicsectorcompany(D, A), companyceo(A, E) )
%   | | then return 0.19148226843284552;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(G, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.08320549123154841;  // std dev = 0,433, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( companyceo(E, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1667945087684516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.30874113578563506;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(D, B) )
%   | then return 0.28760811927818253;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.32131940340711884;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.1448829431573806;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(G, H) )
%   | | then return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.48369816332124993;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then return 0.0835119543774772;  // std dev = 1,135, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.24586281529347404;  // std dev = 0,528, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.3661130107413195;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then return 0.06762287891349898;  // std dev = 0,463, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( cityhascompanyoffice(D, A) )
%   | | then return 0.20115997199828495;  // std dev = 0,359, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.16162857548414666;  // std dev = 0,500, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, D) )
%   then if ( economicsectorcompany(E, A) )
%   | then return 0.13382830279465674;  // std dev = 1,393, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( economicsectorcompany(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10507965846126303;  // std dev = 1,082, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.26222296767052367;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then if ( cityhascompanyoffice(D, A) )
%   | | then return -0.03031037800492356;  // std dev = 0,860, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.150328407011875;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.13455606865197967;  // std dev = 0,484, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.09499861179449216;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, D) )
%   then if ( companyceo(D, E) )
%   | then return 0.07547119937024631;  // std dev = 1,747, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( economicsectorcompany(C, A) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.08400937704718253;  // std dev = 0,951, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( companyceo(A, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.050980589530571274;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( companyceo(A, B) )
%   | then return 0.20459557567142062;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( economicsectorcompany(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, F) )
%   | | | then return -0.02894107597164784;  // std dev = 0,772, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05808213500740578;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.1800782063662128;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then return 5.787145201890017E-4;  // std dev = 1,123, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, B) )
%   | | then return 0.11262440862029117;  // std dev = 1,049, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.059358762617807447;  // std dev = 0,752, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.857143
   AUC PR    = 0.878777
   CLL	      = -0.578618
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.357143
   F1        = 0.526316


Total learning time: 1.257 seconds
Total inference time: 0.829 seconds
AUC ROC: 0.857143


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true': 'companyceo(A, B)', 'true,false': 'economicsectorcompany(D, A), companyceo(A, E)', 'false': 'cityhascompanyoffice(F, A)', 'false,false': 'companyceo(A, B)', 'false,false,false': 'companyceo(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false,true': [0.471, 2, 1], 'false,false,false,true': [1.414, 4, 4], 'true,true': [0.0, 0, 2], 'true,false,false': [0.816, 2, 1], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true,false,false': 'companyceo(E, B)', 'true,false': 'companyceo(A, D)', 'false': 'cityhascompanyoffice(F, A)', 'false,false': 'companyceo(A, B)', 'true': 'companyceo(A, B)'}, {'true,false,false,true': [0.0, 0, 1], 'true,false,true': [0.433, 3, 1], 'true,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.5, 4, 4]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true,false': 'companyceo(A, E)', 'false': 'cityhascompanyoffice(F, A)', 'false,false': 'companyceo(G, H)', 'true': 'companyceo(D, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true': [0.707, 1, 1], 'true,true': [0.858, 2, 3], 'true,false,false': [0.0, 1, 0], 'false,false,true': [1.414, 4, 4], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'cityhascompanyoffice(F, A)', 'false,true': 'companyceo(D, E)'}, {'true': [0.0, 0, 2], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.135, 4, 2], 'false,false,true': [0.528, 1, 1], 'false,false,false': [1.225, 3, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'cityhascompanyoffice(D, A)'}, {'true': [0.0, 0, 2], 'false,true': [0.463, 4, 2], 'false,false,true': [0.359, 1, 1], 'false,false,false': [0.5, 3, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, D)', 'true,false': 'economicsectorcompany(F, A)', 'true': 'economicsectorcompany(E, A)'}, {'true,false,false': [1.082, 3, 3], 'true,true': [1.393, 5, 5], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'cityhascompanyoffice(E, A)', 'false,true': 'cityhascompanyoffice(D, A)'}, {'true': [0.004, 0, 2], 'false,true,false': [0.707, 1, 1], 'false,true,true': [0.86, 3, 1], 'false,false,true': [0.484, 1, 1], 'false,false,false': [1.225, 3, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, D)', 'true': 'companyceo(D, E)'}, {'true,true': [1.747, 8, 8], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'economicsectorcompany(C, A)', 'true': 'cityhascompanyoffice(D, A)', 'true,false': 'companyceo(A, B)', 'false': 'companyceo(A, B)', 'false,false': 'economicsectorcompany(E, A)', 'false,false,false': 'companyceo(A, F)'}, {'false,false,false,false': [0.707, 1, 1], 'false,false,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.772, 2, 1], 'true,true': [0.951, 3, 3], 'true,false,false': [0.5, 2, 2], 'false,true': [0.0, 0, 1]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(F, B)', 'false,true': 'companyceo(D, E)'}, {'true': [0.01, 0, 2], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.123, 4, 2], 'false,false,true': [1.049, 2, 3], 'false,false,false': [0.752, 2, 1]}]]
[{'': [0.24999999999999986, 0.24999999999999986], 'true,false': [0.22222222222222224, 0.22222222222222224], 'true': [0.0, 0.22222222222222224], 'false': [nan, 0.24999999999999986], 'false,false': [nan, 0.24999999999999986], 'false,false,false': [0.24999999999999986, nan]}, {'': [0.2239922900820417, 0.24999999999999994], 'true,false,false': [0.0, 0.0], 'true,false': [0.1875, 0.25], 'false': [nan, 0.24999999999999994], 'false,false': [nan, 0.24999999999999994], 'true': [0.0, 0.2222222222222222]}, {'': [0.17606983592074546, 0.25], 'true,false': [0.25, 0.0], 'false': [nan, 0.25], 'false,false': [0.25, nan], 'true': [0.1471793285208448, 0.21496547287605458]}, {'': [0.0, 0.22365252122200188], 'false': [0.21486939375628225, 0.22270930687570958], 'false,false': [0.13965364647530681, 0.24999999999999992], 'false,true': [0.21486939375628225, nan]}, {'': [0.0, 0.22034327704657067], 'false': [0.214614197320199, 0.22001458830099602], 'false,false': [0.12888630472121554, 0.25]}, {'': [0.19460087954296346, nan], 'true,false': [nan, 0.19510470708425842], 'true': [0.19398865131155857, 0.19510470708425842]}, {'': [7.73288167447983e-06, 0.21712731356126427], 'false': [0.21398783364892016, 0.21707214603967698], 'false,false': [0.11708305414891493, 0.25001064523833977], 'false,true': [0.18510496025593187, 0.25]}, {'': [0.19071568986695697, nan], 'true': [0.19071568986695697, nan]}, {'': [0.1907526385726302, 0.18963085592607332], 'false,false,false': [0.19859567212620147, 0.24999999999999997], 'true,false': [nan, 0.25], 'false': [0.0, 0.22097493269550608], 'false,false': [nan, 0.22097493269550608], 'true': [0.15081803729912327, 0.25]}, {'': [4.5931198501193704e-05, 0.21368179690509143], 'false': [0.21023705519716704, 0.2152962703994659], 'false,false': [0.22021186493494388, 0.1886172308471402], 'false,true': [0.21023705519716704, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
0;true;companyceo(A, B).;true;true
1;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
1;true,false;companyceo(A, D).;true;true
1;true,false,false;companyceo(E, B).;true;true
1;true;companyceo(A, B).;true;true
2;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
2;true,false;companyceo(A, E).;true;true
2;true;companyceo(D, B).;true;true
3;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
4;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
6;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
8;;bankchiefexecutiveceo(A, B) :- economicsectorcompany(C, A).;true;true
8;false;companyceo(A, B).;true;true
9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( companyceo(D, B), companyeconomicsector(D, E) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.08320549123154841;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( companyceo(E, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1667945087684516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( companyceo(F, B), companyeconomicsector(F, G) )
%   | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(D, B) )
%   | then return 0.28760811927818253;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.32131940340711884;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.1448829431573806;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( companyceo(F, B), companyeconomicsector(A, G) )
%   | then return 0.4419590797667945;  // std dev = 0,757, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1302044290131407;  // std dev = 0,982, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.48369816332124993;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C), companyceo(D, B) )
%   | then return -0.2123478265486052;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyeconomicsector(A, E), companyceo(F, B) )
%   | | then return 0.4246274033122497;  // std dev = 0,781, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.39044820361330795;  // std dev = 0,767, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.012364905634335135;  // std dev = 0,766, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.3661130107413195;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, C), cityhascompanyoffice(D, A) )
%   | then return 0.00143537901179136;  // std dev = 0,804, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( companyeconomicsector(A, E), companyceo(F, B) )
%   | | then return 0.3294797334409941;  // std dev = 0,773, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.056803646861408465;  // std dev = 0,939, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B), companyeconomicsector(C, D) )
%   then if ( companyeconomicsector(A, D) )
%   | then return 0.2821373010865491;  // std dev = 0,589, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.2375680947926258;  // std dev = 0,190, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( companyeconomicsector(A, E) )
%   | then return 0.04945662252534409;  // std dev = 0,928, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.47759068842476243;  // std dev = 0,245, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.21548265010153955;  // std dev = 0,023, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( countryhascompanyoffice(C, A) )
%   | then return 0.17895765491952617;  // std dev = 0,759, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( companyceo(D, B), companyeconomicsector(A, E) )
%   | | then return 0.22788241414541305;  // std dev = 0,676, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.109385386282555;  // std dev = 0,711, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( acquired(A, C) )
%   then return -0.021294919932499514;  // std dev = 0,632, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( companyceo(D, B) )
%   | then return -0.03077171649649306;  // std dev = 0,772, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.3531140267757089;  // std dev = 0,588, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( economicsectorcompany(C, A) )
%   then if ( companyceo(D, B) )
%   | then return 0.10995062706933652;  // std dev = 0,790, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.06552069409151721;  // std dev = 0,732, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( companyceo(A, B) )
%   | then return 0.16983176279619383;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.05939082653709441;  // std dev = 0,570, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.16471965353341705;  // std dev = 0,025, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( countryhascompanyoffice(C, A) )
%   | then return 0.099985878610307;  // std dev = 0,688, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( acquired(A, D) )
%   | | then return -0.11905914117600294;  // std dev = 0,495, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.07556653047098068;  // std dev = 0,817, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.890306
   AUC PR    = 0.895232
   CLL	      = -0.506845
   Precision = 0.684211 at threshold = 0.5
   Recall    = 0.928571
   F1        = 0.787879


Total learning time: 1.843 seconds
Total inference time: 1.117 seconds
AUC ROC: 0.890306


Refined model AUC ROC: 0.890306


Dataset: 35_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 01:26:24
{'Recall': 0.928571, 'Learning time': 3.0999999999999996, 'F1': 0.787879, 'Precision': [0.684211, 0.5], 'AUC PR': 0.895232, 'CLL': -0.506845, 'parameter': {'Recall': 0.357143, 'Learning time': 1.257, 'F1': 0.526316, 'Precision': [1.0, 0.5], 'AUC PR': 0.878777, 'CLL': -0.578618, 'AUC ROC': 0.857143, 'Inference time': 0.829}, 'AUC ROC': 0.890306, 'Inference time': 1.117}


Starting fold 2

Target train facts examples: 5285
Target train pos examples: 8
Target train neg examples: 8

Target test facts examples: 5285
Target test pos examples: 14
Target test neg examples: 14

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
0;true,false,true;teamplaysagainstteam(E, B), teamalsoknownas(F, B).;false;false
0;false,false,false;teamalsoknownas(K, B), athleteledsportsteam(L, K).;false;false
0;true,false;athleteplayssport(A, D), athleteledsportsteam(A, E).;true;false
0;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
0;false,false;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;true;true
0;false,false,true;athleteledsportsteam(A, B).;false;false
0;true;athleteledsportsteam(A, B).;false;true
1;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
1;true,false,true;teamalsoknownas(E, F), teamplaysagainstteam(D, F).;false;false
1;false,false,false;teamalsoknownas(K, B), teamplaysagainstteam(K, B).;false;false
1;false;athleteplaysinleague(A, I), teamplaysinleague(J, I).;false;true
1;true,false;athleteledsportsteam(A, D), teamplaysagainstteam(D, E).;true;true
1;true,false,false;athleteledsportsteam(G, B), teamplayssport(B, H).;false;false
1;false,false;athleteledsportsteam(A, B).;false;true
1;true;athleteledsportsteam(A, B).;false;true
2;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
2;false,false,false;teamalsoknownas(L, B), athleteledsportsteam(M, L).;false;false
2;true,false,false;teamalsoknownas(B, G).;false;false
2;true,false;athleteledsportsteam(A, E), teamalsoknownas(E, F).;false;true
2;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
2;false,false;teamplaysagainstteam(J, B), teamalsoknownas(K, J).;true;true
2;false,false,true;teamplaysagainstteam(B, K), teamplaysagainstteam(B, J).;false;false
2;true;athleteledsportsteam(D, B).;false;true
3;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
3;false,true,false;athleteplaysinleague(A, G), teamplaysinleague(B, G).;false;false
3;false,true,true;teamplayssport(C, E), athleteledsportsteam(F, D).;false;false
3;false,false,true;teamalsoknownas(I, J), teamplaysagainstteam(J, B).;false;false
3;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
3;false,false;teamplaysinleague(B, H), teamplaysagainstteam(B, I).;true;true
3;false,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;true;true
3;false,false,false;athleteplaysinleague(A, K).;false;false
4;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
4;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
4;false,true,true;teamplaysagainstteam(B, E).;false;false
4;false,false,true;teamplaysagainstteam(H, B), teamalsoknownas(I, H).;false;false
4;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
4;false,false;teamplaysinleague(B, G), athleteplaysinleague(A, G).;true;true
4;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
4;false,false,false;teamplaysagainstteam(J, B), teamplaysinleague(B, K).;false;false
5;;athleteplaysforteam(A, B) :- teamalsoknownas(C, B), athleteledsportsteam(D, C).;true;true
5;false,false,false;teamplaysagainstteam(L, B), teamalsoknownas(M, L).;false;false
5;true,false,false;athleteplayssport(A, G).;false;false
5;true,false;teamalsoknownas(F, C), teamalsoknownas(F, B).;false;true
5;false;athleteplaysinleague(A, H), teamplaysinleague(B, H).;true;true
5;false,false;athleteplaysinleague(A, K).;false;true
5;false,true;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;false;false
5;true;athleteplayssport(A, E), teamplayssport(B, E).;false;true
6;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
6;false,true,false;athleteplaysinleague(A, F), teamplaysinleague(B, F).;false;false
6;false,true,true;teamplayssport(B, E), teamplayssport(C, E).;false;false
6;false,false,true;teamplayssport(B, H), teamplaysinleague(B, I).;false;false
6;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
6;false,false;teamplaysagainstteam(G, B), teamalsoknownas(G, B).;true;true
6;false,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;true;true
6;false,false,false;teamplaysinleague(B, J), athleteplaysinleague(A, J).;false;false
7;;athleteplaysforteam(A, B) :- teamplaysagainstteam(B, C), teamplaysinleague(B, D).;true;true
7;true,false;teamalsoknownas(C, I), teamalsoknownas(J, C).;false;true
7;false;teamalsoknownas(B, L), teamplaysagainstteam(L, M).;false;false
7;true,true;teamalsoknownas(E, F), athleteplaysinleague(G, D).;true;true
7;true,true,true;teamalsoknownas(E, B), athleteledsportsteam(G, C).;false;false
7;true,false,false;athleteplayssport(A, K).;false;false
7;true,true,false;athleteledsportsteam(H, B), athleteplaysinleague(H, D).;false;false
7;true;teamplaysagainstteam(E, B), teamalsoknownas(C, E).;true;true
8;;athleteplaysforteam(A, B) :- athleteplayssport(A, C), teamplayssport(B, C).;true;true
8;false,false,false;athleteledsportsteam(A, I), teamplayssport(I, J).;false;false
8;false;athleteledsportsteam(A, B).;false;true
8;true,true;teamalsoknownas(E, B), athleteplaysinleague(A, F).;false;false
8;true,false;athleteledsportsteam(A, B).;false;true
8;true,false,false;teamplaysagainstteam(G, B), teamplayssport(G, C).;false;false
8;false,false;athleteplayssport(A, H).;false;true
8;true;teamalsoknownas(D, B), teamplaysagainstteam(D, E).;true;true
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,true,false;athleteplaysinleague(A, H).;false;false
9;false,true,true;athleteledsportsteam(F, D), teamplaysinleague(B, G).;false;false
9;false,false,true;teamplaysinleague(B, K), teamplaysinleague(I, K).;false;false
9;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
9;false,false;teamplaysagainstteam(I, B), teamplayssport(I, J).;true;true
9;false,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;true;true
9;false,false,false;athleteledsportsteam(L, B).;false;false


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(D, A), companyceo(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( companyceo(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(G, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, D) )
%   | | then return -3.088686312743283E-4;  // std dev = 0,341, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.308741135785635;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(D, B) )
%   | then return 0.3608586671040007;  // std dev = 0,814, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.049784744131852715;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(G, H) )
%   | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.4654349665285342;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then if ( companyceo(D, C), companyceo(F, E) )
%   | | | then return -0.017788978580854885;  // std dev = 0,913, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.3534482909191945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then return -0.015410967480149116;  // std dev = 0,913, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.16162857548414666;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, D) )
%   then if ( bankboughtbank(E, A), companyceo(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then return 0.07723252988711868;  // std dev = 0,931, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.1698853338632966;  // std dev = 1,087, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.258688918164763;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then if ( companyceo(D, B), companyceo(D, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.029839695602800077;  // std dev = 0,904, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, B) )
%   | | then return 0.5839588255313967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06782751665401375;  // std dev = 0,826, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, D) )
%   then if ( companyceo(C, E) )
%   | then return 0.07286943191269893;  // std dev = 1,359, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( bankboughtbank(C, A), companyceo(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, B) )
%   | then return 0.2003233424376271;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(D, A) )
%   | | then return -0.07313891967639759;  // std dev = 0,773, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( companyceo(A, E), companyceo(F, E) )
%   | | | then return 0.13221618201763038;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.001974877217606058;  // std dev = 0,593, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.17015092073244828;  // std dev = 0,011, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then if ( companyceo(F, E) )
%   | | | then return -0.039988114372148546;  // std dev = 0,887, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(G, H) )
%   | | then return 0.06195272274293823;  // std dev = 0,465, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.727041
   AUC PR    = 0.792024
   CLL	      = -0.586979
   Precision = 0.692308 at threshold = 0.5
   Recall    = 0.642857
   F1        = 0.666667


Total learning time: 1.801 seconds
Total inference time: 1.559 seconds
AUC ROC: 0.727041


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'true': 'companyceo(A, B)', 'true,false': 'bankboughtbank(D, A), companyceo(A, E)', 'false': 'companyceo(A, F)', 'false,false': 'companyceo(A, B)', 'false,false,false': 'companyceo(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'false,false,false,true': [1.0, 2, 2], 'true,true': [0.0, 0, 5], 'true,false,false': [0.816, 2, 1], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'true,false': 'companyceo(A, D)', 'false': 'companyceo(A, E)', 'false,false': 'companyceo(A, B)', 'true': 'companyceo(A, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true': [0.341, 6, 1], 'true,true': [0.0, 0, 5], 'true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.5, 2, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, C)', 'true,false': 'companyceo(A, E)', 'false': 'companyceo(A, F)', 'false,false': 'companyceo(G, H)', 'true': 'companyceo(D, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true': [0.877, 4, 1], 'true,true': [0.814, 2, 5], 'true,false,false': [0.0, 0, 0], 'false,false,true': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,true,true': 'companyceo(D, C), companyceo(F, E)', 'false,true': 'companyceo(D, E)', 'false,false': 'companyceo(A, G)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [1.0, 2, 2], 'false,true,true,true': [0.913, 6, 1], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 5]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(A, F)', 'false,true': 'companyceo(D, E)'}, {'true': [0.0, 0, 5], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.913, 6, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.5, 2, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, D)', 'true,false': 'bankboughtbank(F, A)', 'true': 'bankboughtbank(E, A), companyceo(E, B)'}, {'true,false,false': [1.087, 3, 3], 'true,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.931, 5, 5]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,true,true': 'companyceo(D, B), companyceo(D, C)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(F, B)', 'false,true': 'companyceo(D, E)', 'false,false,false': 'companyceo(A, G)'}, {'false,false,false,false': [0.826, 2, 1], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,false': [0.904, 6, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'true': [0.016, 0, 5]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, D)', 'true': 'companyceo(C, E)'}, {'true,true': [1.359, 8, 8], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'bankboughtbank(C, A), companyceo(C, B)', 'false': 'companyceo(A, B)', 'false,false': 'bankboughtbank(D, A)', 'false,false,false': 'companyceo(A, E), companyceo(F, E)'}, {'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.593, 1, 1], 'false,true': [0.013, 0, 5], 'false,false,true': [0.773, 5, 1], 'true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,true,true': 'companyceo(F, E)', 'false,true': 'companyceo(D, E)', 'false,false': 'companyceo(G, H)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.887, 6, 1], 'false,false,true': [0.465, 2, 2], 'true': [0.011, 0, 5]}]]
[{'': [0.25, 0.25], 'true,false': [0.0, 0.22222222222222224], 'true': [0.0, 0.12244897959183677], 'false': [nan, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [0.25, nan]}, {'': [0.19365855718870004, 0.25], 'true,false': [0.11611670978175423, nan], 'false': [nan, 0.25], 'false,false': [nan, 0.25], 'true': [0.0, 0.11611670978175423]}, {'': [0.14277479342928998, 0.25], 'true,false': [0.15379564241162652, nan], 'false': [nan, 0.25], 'false,false': [0.25, nan], 'true': [0.09458318112803939, 0.15379564241162652]}, {'': [0.0, 0.17827098691673357], 'false': [0.11904915169017817, 0.25], 'false,false': [nan, 0.25], 'false,true': [0.11904915169017817, nan], 'false,true,true': [0.11904915169017817, nan]}, {'': [0.0, 0.17394438224684663], 'false': [0.11908657478213316, 0.24999999999999997], 'false,false': [nan, 0.24999999999999997], 'false,true': [0.11908657478213316, nan]}, {'': [0.13008059030233532, nan], 'true,false': [0.08666657253341381, 0.19707194778096615], 'true': [nan, 0.13008059030233532]}, {'': [4.913929138807838e-05, 0.16893770580852796], 'false,true,true': [nan, 0.11686715270588466], 'false': [0.11686715270588467, 0.2501245510318754], 'false,false': [0.0, 0.2272930424109747], 'false,true': [0.11686715270588467, nan], 'false,false,false': [nan, 0.2272930424109747]}, {'': [0.11539287436948893, nan], 'true': [0.11539287436948893, nan]}, {'': [nan, 0.11516269463531024], 'false': [3.406840620415741e-05, 0.1545144686928348], 'false,false': [0.09950859091006148, 0.2077097807916087], 'false,false,false': [0.2222222222222222, 0.17576344016008072]}, {'': [2.6379915837759782e-05, 0.15265299523462877], 'false': [0.11236911305435057, 0.2165367399681091], 'false,false': [0.2165367399681091, nan], 'false,true': [0.11236911305435057, nan], 'false,true,true': [0.11236911305435057, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;bankchiefexecutiveceo(A, B) :- companyceo(A, C).;true;true
0;true,false;bankboughtbank(D, A), companyceo(A, E).;true;true
0;true;companyceo(A, B).;true;true
1;;bankchiefexecutiveceo(A, B) :- companyceo(A, C).;true;true
1;true;companyceo(A, B).;true;true
3;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
4;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
6;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
6;false;companyceo(A, C).;true;true
6;false,false;companyceo(F, B).;true;true
8;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(D, A), companyceo(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyceo(A, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C), bankboughtbank(D, A) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, E) )
%   | | then return 0.28258663912040893;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1071952156664681;  // std dev = 0,796, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( bankboughtbank(C, A), companyceo(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, E) )
%   | | then return 0.2309495860909743;  // std dev = 1,002, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.08795901192578515;  // std dev = 0,795, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(C, A), companyeconomicsector(A, D) )
%   | then if ( companyceo(A, E) )
%   | | then return 0.06203397821080008;  // std dev = 0,772, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.18440406086415576;  // std dev = 1,002, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.13621094611642934;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B), companyeconomicsector(A, D) )
%   then return 0.25765707199882043;  // std dev = 0,487, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( bankboughtbank(E, A), bankboughtbank(A, F) )
%   | then return 0.13330560817184445;  // std dev = 0,752, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.06358371227182914;  // std dev = 0,879, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.2136113312579976;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( acquired(A, D), companyeconomicsector(D, E) )
%   | | then return 0.062256360209834716;  // std dev = 0,772, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.12879737257515825;  // std dev = 0,076, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyceo(F, B) )
%   | | then return 0.5442619765515223;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.025761558038296033;  // std dev = 0,828, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( countryhascompanyoffice(C, A), companyeconomicsector(A, D) )
%   then if ( countryhascompanyoffice(C, E), companyceo(E, B) )
%   | then return 0.25389201413506357;  // std dev = 0,190, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( bankboughtbank(F, A), countryhascompanyoffice(C, F) )
%   | | then return 0.0714319894521787;  // std dev = 0,737, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.015293193367905453;  // std dev = 0,855, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.03359835981740169;  // std dev = 0,371, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.1634047785719074;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, C) )
%   | then if ( bankboughtbank(D, A) )
%   | | then return -0.09517156015418989;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.07954267640462988;  // std dev = 0,773, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.06525999021095555;  // std dev = 0,883, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.14232307565292632;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(C, A), companyeconomicsector(A, D) )
%   | then if ( companyeconomicsector(E, D), acquired(A, E) )
%   | | then return -0.04572849306547438;  // std dev = 0,511, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.10697685843995097;  // std dev = 1,028, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.1176137070080351;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.737245
   AUC PR    = 0.814386
   CLL	      = -0.615322
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.428571
   F1        = 0.6


Total learning time: 2.87 seconds
Total inference time: 0.95 seconds
AUC ROC: 0.737245


Refined model AUC ROC: 0.737245


Dataset: 35_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 01:26:32
{'Recall': 0.428571, 'Learning time': 4.671, 'F1': 0.6, 'Precision': [1.0, 0.5], 'AUC PR': 0.814386, 'CLL': -0.615322, 'parameter': {'Recall': 0.642857, 'Learning time': 1.801, 'F1': 0.666667, 'Precision': [0.692308, 0.5], 'AUC PR': 0.792024, 'CLL': -0.586979, 'AUC ROC': 0.727041, 'Inference time': 1.559}, 'AUC ROC': 0.737245, 'Inference time': 0.95}


Starting fold 3

Target train facts examples: 5285
Target train pos examples: 6
Target train neg examples: 6

Target test facts examples: 5285
Target test pos examples: 16
Target test neg examples: 16

******************************************
Performing Parameter Learning
******************************************
Refine
0;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
0;true,false,true;teamplaysagainstteam(E, B), teamalsoknownas(F, B).;false;false
0;false,false,false;teamalsoknownas(K, B), athleteledsportsteam(L, K).;false;false
0;true,false;athleteplayssport(A, D), athleteledsportsteam(A, E).;true;false
0;false;athleteplaysinleague(A, G), teamplaysinleague(H, G).;false;true
0;false,false;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;true;true
0;false,false,true;athleteledsportsteam(A, B).;false;false
0;true;athleteledsportsteam(A, B).;false;true
1;;athleteplaysforteam(A, B) :- teamplaysinleague(B, C), athleteplaysinleague(A, C).;true;true
1;true,false,true;teamalsoknownas(E, F), teamplaysagainstteam(D, F).;false;false
1;false,false,false;teamalsoknownas(K, B), teamplaysagainstteam(K, B).;false;false
1;false;athleteplaysinleague(A, I), teamplaysinleague(J, I).;false;true
1;true,false;athleteledsportsteam(A, D), teamplaysagainstteam(D, E).;true;true
1;true,false,false;athleteledsportsteam(G, B), teamplayssport(B, H).;false;false
1;false,false;athleteledsportsteam(A, B).;false;true
1;true;athleteledsportsteam(A, B).;false;true
2;;athleteplaysforteam(A, B) :- athleteplaysinleague(A, C), teamplaysinleague(B, C).;true;true
2;false,false,false;teamalsoknownas(L, B), athleteledsportsteam(M, L).;false;false
2;true,false,false;teamalsoknownas(B, G).;false;false
2;true,false;athleteledsportsteam(A, E), teamalsoknownas(E, F).;false;true
2;false;athleteplaysinleague(A, H), teamplaysinleague(I, H).;false;true
2;false,false;teamplaysagainstteam(J, B), teamalsoknownas(K, J).;true;true
2;false,false,true;teamplaysagainstteam(B, K), teamplaysagainstteam(B, J).;false;false
2;true;athleteledsportsteam(D, B).;false;true
3;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
3;false,true,false;athleteplaysinleague(A, G), teamplaysinleague(B, G).;false;false
3;false,true,true;teamplayssport(C, E), athleteledsportsteam(F, D).;false;false
3;false,false,true;teamalsoknownas(I, J), teamplaysagainstteam(J, B).;false;false
3;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
3;false,false;teamplaysinleague(B, H), teamplaysagainstteam(B, I).;true;true
3;false,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;true;true
3;false,false,false;athleteplaysinleague(A, K).;false;false
4;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
4;false,true,false;teamplaysagainstteam(D, B), teamplayssport(D, F).;false;false
4;false,true,true;teamplaysagainstteam(B, E).;false;false
4;false,false,true;teamplaysagainstteam(H, B), teamalsoknownas(I, H).;false;false
4;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
4;false,false;teamplaysinleague(B, G), athleteplaysinleague(A, G).;true;true
4;false,true;teamplaysagainstteam(C, B), teamalsoknownas(E, D).;true;true
4;false,false,false;teamplaysagainstteam(J, B), teamplaysinleague(B, K).;false;false
5;;athleteplaysforteam(A, B) :- teamalsoknownas(C, B), athleteledsportsteam(D, C).;true;true
5;false,false,false;teamplaysagainstteam(L, B), teamalsoknownas(M, L).;false;false
5;true,false,false;athleteplayssport(A, G).;false;false
5;true,false;teamalsoknownas(F, C), teamalsoknownas(F, B).;false;true
5;false;athleteplaysinleague(A, H), teamplaysinleague(B, H).;true;true
5;false,false;athleteplaysinleague(A, K).;false;true
5;false,true;teamplaysagainstteam(I, B), teamalsoknownas(J, I).;false;false
5;true;athleteplayssport(A, E), teamplayssport(B, E).;false;true
6;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
6;false,true,false;athleteplaysinleague(A, F), teamplaysinleague(B, F).;false;false
6;false,true,true;teamplayssport(B, E), teamplayssport(C, E).;false;false
6;false,false,true;teamplayssport(B, H), teamplaysinleague(B, I).;false;false
6;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
6;false,false;teamplaysagainstteam(G, B), teamalsoknownas(G, B).;true;true
6;false,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;true;true
6;false,false,false;teamplaysinleague(B, J), athleteplaysinleague(A, J).;false;false
7;;athleteplaysforteam(A, B) :- teamplaysagainstteam(B, C), teamplaysinleague(B, D).;true;true
7;true,false;teamalsoknownas(C, I), teamalsoknownas(J, C).;false;true
7;false;teamalsoknownas(B, L), teamplaysagainstteam(L, M).;false;false
7;true,true;teamalsoknownas(E, F), athleteplaysinleague(G, D).;true;true
7;true,true,true;teamalsoknownas(E, B), athleteledsportsteam(G, C).;false;false
7;true,false,false;athleteplayssport(A, K).;false;false
7;true,true,false;athleteledsportsteam(H, B), athleteplaysinleague(H, D).;false;false
7;true;teamplaysagainstteam(E, B), teamalsoknownas(C, E).;true;true
8;;athleteplaysforteam(A, B) :- athleteplayssport(A, C), teamplayssport(B, C).;true;true
8;false,false,false;athleteledsportsteam(A, I), teamplayssport(I, J).;false;false
8;false;athleteledsportsteam(A, B).;false;true
8;true,true;teamalsoknownas(E, B), athleteplaysinleague(A, F).;false;false
8;true,false;athleteledsportsteam(A, B).;false;true
8;true,false,false;teamplaysagainstteam(G, B), teamplayssport(G, C).;false;false
8;false,false;athleteplayssport(A, H).;false;true
8;true;teamalsoknownas(D, B), teamplaysagainstteam(D, E).;true;true
9;;athleteplaysforteam(A, B) :- athleteledsportsteam(A, B).;false;true
9;false,true,false;athleteplaysinleague(A, H).;false;false
9;false,true,true;athleteledsportsteam(F, D), teamplaysinleague(B, G).;false;false
9;false,false,true;teamplaysinleague(B, K), teamplaysinleague(I, K).;false;false
9;false;athleteledsportsteam(A, C), teamplaysagainstteam(D, C).;true;true
9;false,false;teamplaysagainstteam(I, B), teamplayssport(I, J).;true;true
9;false,true;teamplaysagainstteam(D, B), teamplayssport(D, E).;true;true
9;false,false,false;athleteledsportsteam(L, B).;false;false


WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(A, D), companyceo(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyceo(G, H) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, D) )
%   | | then return 0.09446743783575562;  // std dev = 0,433, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( cityhascompanyoffice(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.22373365448410584;  // std dev = 0,490, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(D, B) )
%   | then return 0.19350941497757312;  // std dev = 0,724, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.33165239320886175;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( cityhascompanyoffice(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(G, H) )
%   | | then return 0.2499513412556286;  // std dev = 1,145, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.5025133770352094;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then if ( companyceo(D, C), companyceo(F, E) )
%   | | | then return -0.01802676962195886;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.24424799647400267;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.37933476165412605;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then return -0.014977153828464452;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19506740466015327;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, D) )
%   then if ( companyalsoknownas(A, E), companyceo(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11927620713989921;  // std dev = 1,408, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.27073289205155376;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then if ( companyceo(D, B), companyceo(D, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.033050051042507744;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(F, B) )
%   | | then return -0.04195995379698766;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.624706712869679;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, D) )
%   then if ( companyceo(D, E) )
%   | then return 0.07506336908972237;  // std dev = 1,331, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyalsoknownas(A, C), companyceo(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, B) )
%   | then return 0.20805990591094256;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, E), companyceo(F, E) )
%   | | | then return -0.04062158961929321;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07583414246645948;  // std dev = 0,925, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.17585349536605407;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then if ( companyceo(D, E) )
%   | | then if ( companyceo(F, E) )
%   | | | then return -0.03329819571144603;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( companyceo(G, H) )
%   | | then return 0.05760101516199402;  // std dev = 0,462, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.773438
   AUC PR    = 0.823992
   CLL	      = -0.538201
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.5625
   F1        = 0.642857


Total learning time: 1.985 seconds
Total inference time: 1.634 seconds
AUC ROC: 0.773438


Structure after Parameter Learning
[['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true': 'companyceo(A, B)', 'true,false': 'companyalsoknownas(A, D), companyceo(A, E)', 'false': 'cityhascompanyoffice(F, A)', 'false,false': 'companyceo(A, B)', 'false,false,false': 'companyceo(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [1.095, 3, 2], 'true,true': [0.0, 0, 2], 'true,false,false': [0.866, 3, 1], 'false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true,false': 'companyceo(A, D)', 'false': 'cityhascompanyoffice(E, A)', 'false,false': 'companyceo(A, B)', 'true': 'companyceo(A, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true': [0.433, 3, 1], 'true,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.49, 3, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, A)', 'true,false': 'companyceo(A, E)', 'false': 'cityhascompanyoffice(F, A)', 'false,false': 'companyceo(G, H)', 'true': 'companyceo(D, B)'}, {'false,true': [0.0, 0, 0], 'true,false,true': [0.707, 1, 1], 'true,true': [0.724, 2, 2], 'true,false,false': [0.0, 0, 0], 'false,false,true': [1.145, 3, 3], 'false,false,false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,true,true': 'companyceo(D, C), companyceo(F, E)', 'false,true': 'companyceo(D, E)', 'false,false': 'cityhascompanyoffice(G, A)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [1.0, 2, 2], 'false,true,true,true': [0.894, 4, 1], 'false,false,true': [0.0, 0, 0], 'true': [0.012, 0, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,false': 'cityhascompanyoffice(F, A)', 'false,true': 'companyceo(D, E)'}, {'true': [0.011, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.894, 4, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.5, 2, 2]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(C, D)', 'true,false': 'companyalsoknownas(A, F)', 'true': 'companyalsoknownas(A, E), companyceo(E, B)'}, {'true,false,false': [1.408, 6, 6], 'true,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false,true,true': 'companyceo(D, B), companyceo(D, C)', 'false': 'companyceo(A, C)', 'false,false': 'companyceo(F, B)', 'false,true': 'companyceo(D, E)', 'false,false,false': 'cityhascompanyoffice(G, A)'}, {'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,false': [0.893, 4, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,true': [0.816, 2, 1], 'true': [0.009, 0, 3]}], ['bankchiefexecutiveceo(A, B)', {'': 'cityhascompanyoffice(C, D)', 'true': 'companyceo(D, E)'}, {'true,true': [1.331, 6, 6], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyalsoknownas(A, C), companyceo(C, B)', 'false': 'companyceo(A, B)', 'false,false': 'companyalsoknownas(A, D)', 'false,false,false': 'companyceo(A, E), companyceo(F, E)'}, {'false,false,false,true': [0.893, 4, 1], 'false,false,false,false': [0.925, 2, 2], 'false,true': [0.008, 0, 3], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['bankchiefexecutiveceo(A, B)', {'': 'companyceo(A, B)', 'false': 'companyceo(A, C)', 'false,true,true': 'companyceo(F, E)', 'false,true': 'companyceo(D, E)', 'false,false': 'companyceo(G, H)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.893, 4, 1], 'false,false,true': [0.462, 2, 2], 'true': [0.007, 0, 3]}]]
[{'': [0.24999999999999992, 0.24999999999999992], 'true,false': [nan, 0.18750000000000003], 'true': [0.0, 0.18750000000000003], 'false': [nan, 0.24999999999999992], 'false,false': [0.0, 0.24000000000000005], 'false,false,false': [0.24000000000000005, nan]}, {'': [0.2118072151121538, 0.2341330426932048], 'true,false': [0.18749999999999997, nan], 'false': [nan, 0.2341330426932048], 'false,false': [0.0, 0.24000000000000005], 'true': [0.0, 0.18749999999999997]}, {'': [0.17486777667657227, 0.21865567611071324], 'true,false': [0.24999999999999994, nan], 'false': [nan, 0.21865567611071324], 'false,false': [0.21865567611071324, nan], 'true': [0.13094050420332165, 0.24999999999999994]}, {'': [4.423982726505423e-05, 0.21680404105363724], 'false': [0.1596748059273509, 0.24999999999999994], 'false,false': [nan, 0.24999999999999994], 'false,true': [0.1596748059273509, nan], 'false,true,true': [0.1596748059273509, nan]}, {'': [3.9056713402448505e-05, 0.210714051737146], 'false': [0.1596769746598946, 0.25], 'false,false': [nan, 0.25], 'false,true': [0.1596769746598946, nan]}, {'': [0.16517942284929862, nan], 'true,false': [nan, 0.16517942284929862], 'true': [nan, 0.16517942284929862]}, {'': [2.7352603538690252e-05, 0.2059584117165073], 'false,true,true': [nan, 0.15966416484080403], 'false': [0.15966416484080403, 0.25000000000000006], 'false,false': [0.22222222222222224, 0.0], 'false,true': [0.15966416484080403, nan], 'false,false,false': [nan, 0.0]}, {'': [0.14770515861324768, nan], 'true': [0.14770515861324768, nan]}, {'': [nan, 0.14763929077528276], 'false': [1.900490804934707e-05, 0.1871513471143157], 'false,false': [nan, 0.1871513471143157], 'false,false,false': [0.1596587832050555, 0.2139826422588751]}, {'': [1.4685199882555344e-05, 0.18579236735244908], 'false': [0.15966398894402445, 0.21386247006441647], 'false,false': [0.21386247006441647, nan], 'false,true': [0.15966398894402445, nan], 'false,true,true': [0.15966398894402445, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
0;false;companyceo(A, B).;true;true
0;true;companyceo(A, B).;true;true
1;;bankchiefexecutiveceo(A, B) :- cityhascompanyoffice(C, A).;true;true
1;false;companyceo(A, B).;true;true
1;true;companyceo(A, B).;true;true
3;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
4;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
6;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
6;false;companyceo(A, C).;true;true
6;false,false;companyceo(F, B).;true;true
8;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true
9;;bankchiefexecutiveceo(A, B) :- companyceo(A, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( companyceo(A, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR bankchiefexecutiveceo(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( companyceo(A, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( companyceo(A, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.22373365448410584;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   then return -0.04071842650419945;  // std dev = 0,668, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( companyceo(E, B) )
%   | then return 0.6332003985500221;  // std dev = 0,191, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.31026035768317956;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.45427564695100653;  // std dev = 0,136, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.1835765281864558;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.33947122222172577;  // std dev = 1,065, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.34830021528763666;  // std dev = 0,127, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.15770871991583035;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.26981629863597795;  // std dev = 1,062, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   then return -0.03667172609883156;  // std dev = 0,454, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( companyceo(E, B) )
%   | then return 0.32569962782350736;  // std dev = 0,237, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.13079970707976218;  // std dev = 1,002, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.243404599408795;  // std dev = 0,163, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, C) )
%   | then return -0.08032271795357142;  // std dev = 0,848, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyceo(D, B) )
%   | | then return 0.04612156840255699;  // std dev = 0,480, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5665453184963536;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   then return -0.04172521116798919;  // std dev = 0,409, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( companyeconomicsector(A, E) )
%   | then return 0.21856593273834618;  // std dev = 0,747, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.05200205335791075;  // std dev = 0,604, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.19587043206267554;  // std dev = 0,166, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.12786456394965398;  // std dev = 0,045, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.11247121365091406;  // std dev = 0,974, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR bankchiefexecutiveceo(A, B):
%   if ( companyceo(A, B) )
%   then return 0.16835102034042496;  // std dev = 0,148, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(C, B), countryhascompanyoffice(D, C) )
%   | then return -0.11432665045127435;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.08544339140440785;  // std dev = 0,975, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.685547
   AUC PR    = 0.775423
   CLL	      = -0.693907
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.6


Total learning time: 1.595 seconds
Total inference time: 0.743 seconds
AUC ROC: 0.685547


Refined model AUC ROC: 0.685547


Dataset: 35_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 01:26:39
{'Recall': 0.75, 'Learning time': 3.58, 'F1': 0.6, 'Precision': [0.5, 0.5], 'AUC PR': 0.775423, 'CLL': -0.693907, 'parameter': {'Recall': 0.5625, 'Learning time': 1.985, 'F1': 0.642857, 'Precision': [0.75, 0.5], 'AUC PR': 0.823992, 'CLL': -0.538201, 'AUC ROC': 0.773438, 'Inference time': 1.634}, 'AUC ROC': 0.685547, 'Inference time': 0.743}


