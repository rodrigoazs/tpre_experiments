Starting experiment #1 for 48_twitter_facebook

Start learning from source dataset

Source train facts examples: 1654
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.30043464938522185;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.03954428393672071;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.22529869355361964;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.11485391594242547;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.5859031723876431;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.22498310595378504;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.18195845890903473;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.6174081943587689;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.25979535511723084;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.034662075067021875;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.19560254268322808;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.10028973647132483;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.498777269937768;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.19533180135550993;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.15833438107432668;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.5246727565255822;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.09446743783575556;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.21780969040456194;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.03026893851673045;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1659959772116882;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.08659617689897336;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.3993297576065395;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.16577459084807714;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.13529740539768817;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.4180520361562044;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.08165239320886175;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.17763998149528976;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.026344679903783016;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13799724934001212;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.07401982427916068;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.30610086330453745;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.13782430667732648;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.11372396300185397;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.31894013570064494;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.06990902274840138;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.14166005944009397;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.022861815093815303;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11271639319469738;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.06270728922871331;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.23022645133233913;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.11258678869132581;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.09422979328740605;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.2395012723324542;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.059354635365447495;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.11106303713723475;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.019788173400004157;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.09074965493034517;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.05271372754671691;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.17289163788257275;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.09065606811303906;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.07714027276689113;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.18028247719032292;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.05002771289938786;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.08601725404856812;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.017089082408507154;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07223648547587133;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.0440205007789348;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.13069442756619856;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.07217116379402755;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.06252747710209074;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.13706860490080588;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.04190386852605733;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06605546101699923;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.014729104286686365;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05699652178402233;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.036556074048592374;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.09968946538768642;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.056952418275703964;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.05027999380892934;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.10542742996374166;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.03491396367325339;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.05043143991890734;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.012673343484090884;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04467162171025916;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.030215848125067196;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.07671440458741716;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.04464289925992749;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.04017587323776558;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.08196763035201804;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.02896103559795105;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.038350070087442546;  // std dev = 0,497, 875,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.010888374963754882;  // std dev = 0,385, 215,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.03483512876560202;  // std dev = 6,935, 207,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | | else return 0.02487857605523089;  // std dev = 7,057, 261,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.05949386923995517;  // std dev = 0,445, 944,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.034817238574228575;  // std dev = 6,799, 199,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
%   | | | else return 0.031942249194740396;  // std dev = 4,795, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.06431851617368962;  // std dev = 5,442, 162,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=123 */
%   | | | else return 0.023934242922604824;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */


Starting fold 1

Target train facts examples: 3318
Target train pos examples: 5038
Target train neg examples: 5038

Target test facts examples: 3281
Target test pos examples: 7530
Target test neg examples: 7530

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false;tweets(A, I).;true;true
0;true;tweets(A, D), tweets(B, D).;false;true
0;false,false,false;tweets(B, K).;false;false
0;true,false;tweets(B, E), tweets(A, F).;false;true
0;true,false,false;tweets(B, G).;false;false
0;false,false,true;tweets(B, J).;false;false
0;false;tweets(B, H), tweets(A, H).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false;tweets(A, I).;true;true
1;true;tweets(B, D), tweets(A, D).;false;true
1;false,false,false;tweets(B, K).;false;false
1;true,false;tweets(A, E), tweets(B, F).;false;true
1;true,false,false;tweets(B, G).;false;false
1;false,false,true;tweets(B, J).;false;false
1;false;tweets(B, H), tweets(A, H).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false;tweets(A, I).;true;true
2;true;tweets(A, D), tweets(B, D).;false;true
2;false,false,false;tweets(B, K).;false;false
2;true,false;tweets(A, E), tweets(B, F).;false;true
2;true,false,false;tweets(B, G).;false;false
2;false,false,true;tweets(B, J).;false;false
2;false;tweets(B, H), tweets(A, H).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false;tweets(A, I).;true;true
3;true;tweets(A, D), tweets(B, D).;false;true
3;false,false,false;tweets(B, K).;false;false
3;true,false;tweets(A, E), tweets(B, F).;false;true
3;true,false,false;tweets(B, G).;false;false
3;false,false,true;tweets(B, J).;false;false
3;false;tweets(A, H), tweets(B, H).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false;tweets(A, I).;true;true
4;true;tweets(A, D), tweets(B, D).;false;true
4;false,false,false;tweets(B, K).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;true,false,false;tweets(B, G).;false;false
4;false,false,true;tweets(B, J).;false;false
4;false;tweets(B, H), tweets(A, H).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false;tweets(A, I).;true;true
5;true;tweets(B, D), tweets(A, D).;false;true
5;false,false,false;tweets(B, K).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;true,false,false;tweets(B, G).;false;false
5;false,false,true;tweets(B, J).;false;false
5;false;tweets(B, H), tweets(A, H).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false;tweets(A, I).;true;true
6;true;tweets(A, D), tweets(B, D).;false;true
6;false,false,false;tweets(B, K).;false;false
6;true,false;tweets(B, E), tweets(A, F).;false;true
6;true,false,false;tweets(B, G).;false;false
6;false,false,true;tweets(B, J).;false;false
6;false;tweets(B, H), tweets(A, H).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false;tweets(A, I).;true;true
7;true;tweets(A, D), tweets(B, D).;false;true
7;false,false,false;tweets(B, K).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;true,false,false;tweets(B, G).;false;false
7;false,false,true;tweets(B, J).;false;false
7;false;tweets(A, H), tweets(B, H).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false;tweets(A, I).;true;true
8;true;tweets(A, D), tweets(B, D).;false;true
8;false,false,false;tweets(B, K).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;true,false,false;tweets(B, G).;false;false
8;false,false,true;tweets(B, J).;false;false
8;false;tweets(A, H), tweets(B, H).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false;tweets(A, I).;true;true
9;true;tweets(B, D), tweets(A, D).;false;true
9;false,false,false;tweets(B, K).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;true,false,false;tweets(B, G).;false;false
9;false,false,true;tweets(B, J).;false;false
9;false;tweets(B, H), tweets(A, H).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.5115976924298619;  // std dev = 28,477, 3.581,000 (wgt'ed) examples reached here.  /* #neg=1.241 #pos=2.340 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.16117923812981538;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.10622684386424333;  // std dev = 19,077, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return -0.003920030417729039;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.34749930783646155;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.35978648968466015;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.3539472544272388;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.43732539772210516;  // std dev = 28,477, 3.581,000 (wgt'ed) examples reached here.  /* #neg=1.241 #pos=2.340 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.14040471744648225;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.0927976311469863;  // std dev = 19,077, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return -0.003443517314094595;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.2997333673577304;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.3101252671415245;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.3051885235573919;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.3542417574160529;  // std dev = 28,477, 3.581,000 (wgt'ed) examples reached here.  /* #neg=1.241 #pos=2.340 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.12036841902410188;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.0802325928132563;  // std dev = 19,077, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return -0.0030260323432181892;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.24936638980309217;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.2574927382774123;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.2536365951965668;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.2751640498627393;  // std dev = 28,477, 3.581,000 (wgt'ed) examples reached here.  /* #neg=1.241 #pos=2.340 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.10170756031867285;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.06872576384488928;  // std dev = 19,077, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return -0.0026600135676896008;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.20099826683322994;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.20692303600957831;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.2041160402387606;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.2086407156170286;  // std dev = 28,477, 3.581,000 (wgt'ed) examples reached here.  /* #neg=1.241 #pos=2.340 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.08485643356210955;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.05838659280356617;  // std dev = 19,077, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return -0.002338924043790801;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.15807063193469104;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.162171030966488;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.16023113641243283;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.15670630797664062;  // std dev = 28,477, 3.581,000 (wgt'ed) examples reached here.  /* #neg=1.241 #pos=2.340 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.07003660855929544;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.04924912013967147;  // std dev = 19,077, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return -0.0020571003919941377;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.12216995582705485;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.12491938318248245;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.1236193841719925;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.11759143872882521;  // std dev = 28,477, 3.581,000 (wgt'ed) examples reached here.  /* #neg=1.241 #pos=2.340 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.057287328722246636;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.0412874555923735;  // std dev = 19,077, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return -0.0018096264403344422;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.09335087352295923;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.09516862089337746;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.0943084296657296;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.08850094598881474;  // std dev = 28,477, 3.581,000 (wgt'ed) examples reached here.  /* #neg=1.241 #pos=2.340 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.046514968482082496;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.03443314639195245;  // std dev = 19,077, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return -0.0015922272290041551;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.07082046981887619;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.07202042788189242;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.07145110057275685;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.0668873647943268;  // std dev = 28,477, 3.581,000 (wgt'ed) examples reached here.  /* #neg=1.241 #pos=2.340 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.03754386979781479;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.028591330680524458;  // std dev = 19,077, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return -0.001401179661196375;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.053492679217731584;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.05428987907070631;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.05390990820069972;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.05076605244116395;  // std dev = 28,477, 3.581,000 (wgt'ed) examples reached here.  /* #neg=1.241 #pos=2.340 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.03015853093950695;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.02365402423810597;  // std dev = 19,077, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return -0.0012332368492763437;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.04029746252857595;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.04083275344337982;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.04057593924483522;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */


Results
   AUC ROC   = 0.624361
   AUC PR    = 0.604206
   CLL	      = -0.675918
   Precision = 0.666114 at threshold = 0.5
   Recall    = 0.320053
   F1        = 0.432365


Total learning time: 21.622 seconds
Total inference time: 3.782 seconds
AUC ROC: 0.624361


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [19.077, 1467, 484], 'false,false,false,false': [13.36, 360, 354], 'false,false,true,true': [3.216, 75, 12], 'true,true': [28.477, 1241, 2340], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [21.663, 959, 919], 'false,false,false,true': [21.401, 913, 919], 'true,false,true': [2.64, 23, 10]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(B, D), educationtype(A, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [19.077, 1467, 484], 'false,false,false,false': [13.36, 360, 354], 'false,false,true,true': [3.216, 75, 12], 'true,true': [28.477, 1241, 2340], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [21.663, 959, 919], 'false,false,false,true': [21.401, 913, 919], 'true,false,true': [2.64, 23, 10]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [19.077, 1467, 484], 'false,false,false,false': [13.36, 360, 354], 'false,false,true,true': [3.216, 75, 12], 'true,true': [28.477, 1241, 2340], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [21.663, 959, 919], 'false,false,false,true': [21.401, 913, 919], 'true,false,true': [2.64, 23, 10]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(A, G), educationtype(B, G)'}, {'false,true': [19.077, 1467, 484], 'false,false,false,false': [13.36, 360, 354], 'false,false,true,true': [3.216, 75, 12], 'true,true': [28.477, 1241, 2340], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [21.663, 959, 919], 'false,false,false,true': [21.401, 913, 919], 'true,false,true': [2.64, 23, 10]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [19.077, 1467, 484], 'false,false,false,false': [13.36, 360, 354], 'false,false,true,true': [3.216, 75, 12], 'true,true': [28.477, 1241, 2340], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [21.663, 959, 919], 'false,false,false,true': [21.401, 913, 919], 'true,false,true': [2.64, 23, 10]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(B, D), educationtype(A, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [19.077, 1467, 484], 'false,false,false,false': [13.36, 360, 354], 'false,false,true,true': [3.216, 75, 12], 'true,true': [28.477, 1241, 2340], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [21.663, 959, 919], 'false,false,false,true': [21.401, 913, 919], 'true,false,true': [2.64, 23, 10]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [19.077, 1467, 484], 'false,false,false,false': [13.36, 360, 354], 'false,false,true,true': [3.216, 75, 12], 'true,true': [28.477, 1241, 2340], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [21.663, 959, 919], 'false,false,false,true': [21.401, 913, 919], 'true,false,true': [2.64, 23, 10]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(A, G), educationtype(B, G)'}, {'false,true': [19.077, 1467, 484], 'false,false,false,false': [13.36, 360, 354], 'false,false,true,true': [3.216, 75, 12], 'true,true': [28.477, 1241, 2340], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [21.663, 959, 919], 'false,false,false,true': [21.401, 913, 919], 'true,false,true': [2.64, 23, 10]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(A, G), educationtype(B, G)'}, {'false,true': [19.077, 1467, 484], 'false,false,false,false': [13.36, 360, 354], 'false,false,true,true': [3.216, 75, 12], 'true,true': [28.477, 1241, 2340], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [21.663, 959, 919], 'false,false,false,true': [21.401, 913, 919], 'true,false,true': [2.64, 23, 10]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(B, D), educationtype(A, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [19.077, 1467, 484], 'false,false,false,false': [13.36, 360, 354], 'false,false,true,true': [3.216, 75, 12], 'true,true': [28.477, 1241, 2340], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [21.663, 959, 919], 'false,false,false,true': [21.401, 913, 919], 'true,false,true': [2.64, 23, 10]}]]
[{'': [0.22742522852004723, 0.24293900747373148], 'false,false': [0.24931310659184386, 0.25000000000002487], 'false,false,true': [0.11890606420927412, 0.2498865854391819], 'false,false,false': [0.24999731841500425, 0.2499823458795162], 'true': [0.22645347887372613, 0.21120293847566585], 'true,false': [0.21120293847566585, nan], 'false': [0.18653525994763262, 0.24986966267488886]}, {'': [0.22711189306531337, 0.23926811021022334], 'false,false': [0.2479768415286911, 0.24999803751286515], 'false,false,true': [0.11890606420927541, 0.24988658543911604], 'false,false,false': [0.24999731841497158, 0.24998234587953758], 'true': [0.22645347887374934, 0.21120293847566585], 'true,false': [0.21120293847566585, nan], 'false': [0.18653525994766992, 0.24924129650713084]}, {'': [0.22680910777981123, 0.2358817525160064], 'false,false': [0.24678296658898494, 0.24999612015349582], 'false,false,true': [0.1189060642092754, 0.24988658543913161], 'false,false,false': [0.24999731841498982, 0.2499823458795296], 'true': [0.22645347887377487, 0.21120293847566568], 'true,false': [0.21120293847566568, nan], 'false': [0.18653525994767026, 0.24867807590845756]}, {'': [0.22658644570671235, 0.23323728965167567], 'false,false': [0.24584251556785128, 0.24999470949394192], 'false,false,true': [0.11890606420927427, 0.24988658543916276], 'false,false,false': [0.2499973184149853, 0.24998234587953722], 'true': [0.22645347887379297, 0.21120293847566574], 'true,false': [0.21120293847566574, nan], 'false': [0.18653525994766407, 0.2482352627294876]}, {'': [0.22645285882710053, 0.23143798588024], 'false,false': [0.24517625310346047, 0.24999387890548516], 'false,false,true': [0.1189060642092751, 0.2498865854391688], 'false,false,false': [0.24999731841497672, 0.2499823458795264], 'true': [0.22645347887376335, 0.21120293847566593], 'true,false': [0.21120293847566593, nan], 'false': [0.1865352599476366, 0.24792324179577843]}, {'': [0.22638218742756894, 0.23033622734953738], 'false,false': [0.24474046129685034, 0.24999346054883026], 'false,false,true': [0.11890606420927463, 0.24988658543914335], 'false,false,false': [0.24999731841497408, 0.24998234587952448], 'true': [0.22645347887377545, 0.21120293847566546], 'true,false': [0.21120293847566546, nan], 'false': [0.1865352599476532, 0.24772052970108246]}, {'': [0.22634712682305347, 0.22971122919477302], 'false,false': [0.24447062814761358, 0.24999326883130563], 'false,false,true': [0.11890606420927531, 0.24988658543916234], 'false,false,false': [0.24999731841498773, 0.24998234587952264], 'true': [0.22645347887376668, 0.21120293847566549], 'true,false': [0.21120293847566549, nan], 'false': [0.18653525994763795, 0.247595837488995]}, {'': [0.22633017342688477, 0.22937553626490723], 'false,false': [0.2443093283793752, 0.2499931849265622], 'false,false,true': [0.118906064209275, 0.24988658543916253], 'false,false,false': [0.24999731841497022, 0.2499823458795291], 'true': [0.22645347887376227, 0.21120293847566574], 'true,false': [0.21120293847566574, nan], 'false': [0.18653525994764028, 0.24752171953294214]}, {'': [0.22632201430656954, 0.22920238263535286], 'false,false': [0.24421495580524166, 0.24999314865305472], 'false,false,true': [0.11890606420927471, 0.24988658543915612], 'false,false,false': [0.24999731841498987, 0.2499823458795252], 'true': [0.22645347887378042, 0.21120293847566585], 'true,false': [0.21120293847566585, nan], 'false': [0.18653525994765122, 0.24747855193944457]}, {'': [0.2263180661205691, 0.22911593001069133], 'false,false': [0.2441604319518843, 0.24999313282752883], 'false,false,true': [0.11890606420927492, 0.2498865854391689], 'false,false,false': [0.2499973184149863, 0.24998234587952506], 'true': [0.22645347887376588, 0.2112029384756658], 'true,false': [0.2112029384756658, nan], 'false': [0.18653525994763312, 0.2474537003277175]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '0;false,false;educationtype(A, H).;true;true', '0;true;educationtype(A, D), educationtype(B, D).;true;true', '0;false,false,false;educationtype(B, J).;true;true', '0;true,false;educationtype(B, E), educationtype(A, F).;true;true', '0;false,false,true;educationtype(B, I).;true;true', '0;false;educationtype(B, G), educationtype(A, G).;true;true', '1;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '1;false,false;educationtype(A, H).;true;true', '1;true;educationtype(B, D), educationtype(A, D).;true;true', '1;false,false,false;educationtype(B, J).;true;true', '1;true,false;educationtype(A, E), educationtype(B, F).;true;true', '1;false,false,true;educationtype(B, I).;true;true', '1;false;educationtype(B, G), educationtype(A, G).;true;true', '2;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '2;false,false;educationtype(A, H).;true;true', '2;true;educationtype(A, D), educationtype(B, D).;true;true', '2;false,false,false;educationtype(B, J).;true;true', '2;true,false;educationtype(A, E), educationtype(B, F).;true;true', '2;false,false,true;educationtype(B, I).;true;true', '2;false;educationtype(B, G), educationtype(A, G).;true;true', '3;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '3;false,false;educationtype(A, H).;true;true', '3;true;educationtype(A, D), educationtype(B, D).;true;true', '3;false,false,false;educationtype(B, J).;true;true', '3;true,false;educationtype(A, E), educationtype(B, F).;true;true', '3;false,false,true;educationtype(B, I).;true;true', '3;false;educationtype(A, G), educationtype(B, G).;true;true', '4;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '4;false,false;educationtype(A, H).;true;true', '4;true;educationtype(A, D), educationtype(B, D).;true;true', '4;false,false,false;educationtype(B, J).;true;true', '4;true,false;educationtype(A, E), educationtype(B, F).;true;true', '4;false,false,true;educationtype(B, I).;true;true', '4;false;educationtype(B, G), educationtype(A, G).;true;true', '5;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '5;false,false;educationtype(A, H).;true;true', '5;true;educationtype(B, D), educationtype(A, D).;true;true', '5;false,false,false;educationtype(B, J).;true;true', '5;true,false;educationtype(B, E), educationtype(A, F).;true;true', '5;false,false,true;educationtype(B, I).;true;true', '5;false;educationtype(B, G), educationtype(A, G).;true;true', '6;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '6;false,false;educationtype(A, H).;true;true', '6;true;educationtype(A, D), educationtype(B, D).;true;true', '6;false,false,false;educationtype(B, J).;true;true', '6;true,false;educationtype(B, E), educationtype(A, F).;true;true', '6;false,false,true;educationtype(B, I).;true;true', '6;false;educationtype(B, G), educationtype(A, G).;true;true', '7;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '7;false,false;educationtype(A, H).;true;true', '7;true;educationtype(A, D), educationtype(B, D).;true;true', '7;false,false,false;educationtype(B, J).;true;true', '7;true,false;educationtype(A, E), educationtype(B, F).;true;true', '7;false,false,true;educationtype(B, I).;true;true', '7;false;educationtype(A, G), educationtype(B, G).;true;true', '8;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '8;false,false;educationtype(A, H).;true;true', '8;true;educationtype(A, D), educationtype(B, D).;true;true', '8;false,false,false;educationtype(B, J).;true;true', '8;true,false;educationtype(A, E), educationtype(B, F).;true;true', '8;false,false,true;educationtype(B, I).;true;true', '8;false;educationtype(A, G), educationtype(B, G).;true;true', '9;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '9;false,false;educationtype(A, H).;true;true', '9;true;educationtype(B, D), educationtype(A, D).;true;true', '9;false,false,false;educationtype(B, J).;true;true', '9;true,false;educationtype(A, E), educationtype(B, F).;true;true', '9;false,false,true;educationtype(B, I).;true;true', '9;false;educationtype(B, G), educationtype(A, G).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( location(B, E), workemployer(B, F) )
%   | | then return 0.6295096945931783;  // std dev = 0,420, 1.264,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=975 */
%   | | else if ( hometown(B, G), gender(A, H) )
%   | | | then return 0.5943298396221212;  // std dev = 8,792, 398,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=293 */
%   | | | else return 0.416773218580487;  // std dev = 21,752, 1.919,000 (wgt'ed) examples reached here.  /* #neg=847 #pos=1.072 */
%   | else return 0.16117923812981538;  // std dev = 0,460, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( educationtype(B, I), educationtype(A, I) )
%   | then return 0.10622684386424333;  // std dev = 0,432, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return -0.003920030417729039;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.34749930783646155;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.35978648968466015;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.3539472544272388;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then if ( location(B, E), workemployer(B, F) )
%   | | then return 0.5345943887927441;  // std dev = 0,420, 1.264,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=975 */
%   | | else if ( educationyear(A, G), educationyear(B, G) )
%   | | | then return 0.4739925334704841;  // std dev = 12,656, 739,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=503 */
%   | | | else return 0.34109663645013827;  // std dev = 19,712, 1.578,000 (wgt'ed) examples reached here.  /* #neg=716 #pos=862 */
%   | else return 0.14040471744648225;  // std dev = 0,460, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.0927976311469863;  // std dev = 0,432, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return -0.003443517314094595;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.2997333673577304;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.3101252671415245;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.3051885235573919;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( workemployer(B, E), gender(B, F) )
%   | | then return 0.4091896518049212;  // std dev = 0,436, 1.698,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=1.250 */
%   | | else if ( hometown(B, G), gender(A, H) )
%   | | | then return 0.43749580668181726;  // std dev = 8,103, 345,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=257 */
%   | | | else return 0.2721359558989691;  // std dev = 19,497, 1.538,000 (wgt'ed) examples reached here.  /* #neg=705 #pos=833 */
%   | else return 0.12036841902410188;  // std dev = 0,460, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( educationtype(B, I), educationtype(A, I) )
%   | then return 0.0802325928132563;  // std dev = 0,432, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return -0.0030260323432181892;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.24936638980309217;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.2574927382774123;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.2536365951965668;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( workenddate(B, E), worklocation(B, F) )
%   | | then return 0.3289018929278175;  // std dev = 0,438, 1.458,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=1.063 */
%   | | else if ( hometown(B, G), locale(A, H) )
%   | | | then return 0.359505747590685;  // std dev = 8,898, 454,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=352 */
%   | | | else return 0.20289329375034076;  // std dev = 20,075, 1.669,000 (wgt'ed) examples reached here.  /* #neg=744 #pos=925 */
%   | else return 0.10170756031867285;  // std dev = 0,460, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( educationtype(A, I), educationtype(B, I) )
%   | then return 0.06872576384488928;  // std dev = 0,432, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return -0.0026600135676896008;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.20099826683322994;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.20692303600957831;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.2041160402387606;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( workenddate(B, E), workenddate(A, E) )
%   | | then return 0.28988948002407133;  // std dev = 0,412, 610,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=464 */
%   | | else if ( workposition(A, F), gender(B, G) )
%   | | | then return 0.14003901421512394;  // std dev = 15,254, 1.008,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=581 */
%   | | | else return 0.21805410506766382;  // std dev = 20,605, 1.963,000 (wgt'ed) examples reached here.  /* #neg=668 #pos=1.295 */
%   | else return 0.08485643356210955;  // std dev = 0,460, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.05838659280356617;  // std dev = 0,432, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return -0.002338924043790801;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.15807063193469104;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.162171030966488;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.16023113641243283;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then if ( workemployer(B, E), workemployer(A, E) )
%   | | then return 0.2480149984865319;  // std dev = 0,391, 441,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=356 */
%   | | else if ( educationyear(A, F), educationyear(B, F) )
%   | | | then return 0.20907170590849808;  // std dev = 14,372, 1.064,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=768 */
%   | | | else return 0.11167511754876236;  // std dev = 21,929, 2.076,000 (wgt'ed) examples reached here.  /* #neg=860 #pos=1.216 */
%   | else return 0.07003660855929544;  // std dev = 0,460, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.04924912013967147;  // std dev = 0,432, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return -0.0020571003919941377;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.12216995582705485;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.12491938318248245;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.1236193841719925;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( educationyear(A, E), educationyear(B, E) )
%   | | then return 0.17423431875558176;  // std dev = 0,423, 1.342,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=1.008 */
%   | | else if ( educationyear(A, F), gender(B, G) )
%   | | | then return 0.06093516426643161;  // std dev = 20,011, 1.723,000 (wgt'ed) examples reached here.  /* #neg=745 #pos=978 */
%   | | | else return 0.1692665477837726;  // std dev = 10,454, 516,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=354 */
%   | else return 0.057287328722246636;  // std dev = 0,460, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.0412874555923735;  // std dev = 0,432, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return -0.0018096264403344422;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.09335087352295923;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.09516862089337746;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.0943084296657296;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( location(B, E), educationclasses(B, F) )
%   | | then return 0.2018129022990548;  // std dev = 0,353, 264,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=223 */
%   | | else if ( workposition(B, G), location(B, H) )
%   | | | then return 0.1366655481550026;  // std dev = 12,228, 827,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=614 */
%   | | | else return 0.06327091727045306;  // std dev = 23,824, 2.490,000 (wgt'ed) examples reached here.  /* #neg=987 #pos=1.503 */
%   | else return 0.046514968482082496;  // std dev = 0,460, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( educationtype(A, I), educationtype(B, I) )
%   | then return 0.03443314639195245;  // std dev = 0,432, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return -0.0015922272290041551;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.07082046981887619;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.07202042788189242;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.07145110057275685;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.06923566462762766;  // std dev = 0,459, 3.581,000 (wgt'ed) examples reached here.  /* #neg=1.241 #pos=2.340 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then if ( workemployer(A, G), workemployer(B, G) )
%   | | | then return 0.7345135667675117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.058589881508350365;  // std dev = 2,181, 29,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.028591330680524458;  // std dev = 0,432, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return -0.001401179661196375;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.053492679217731584;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.05428987907070631;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.05390990820069972;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then if ( location(B, E), gender(B, F) )
%   | | then return 0.07029517406373942;  // std dev = 0,446, 2.501,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=1.725 */
%   | | else if ( gender(B, G), languages(A, H) )
%   | | | then return -0.06951886533914187;  // std dev = 9,937, 420,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=206 */
%   | | | else return 0.06547528545166102;  // std dev = 12,322, 660,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=409 */
%   | else return 0.02754232566734225;  // std dev = 0,430, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( educationtype(B, I), educationtype(A, I) )
%   | then return 0.02365402423810597;  // std dev = 0,432, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=484 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return -0.0012332368492763437;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.04029746252857595;  // std dev = 21,663, 1.878,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=919 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.04083275344337982;  // std dev = 21,401, 1.832,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=919 */
%   | | | else return 0.04057593924483522;  // std dev = 13,360, 714,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=354 */


Results
   AUC ROC   = 0.626252
   AUC PR    = 0.613208
   CLL	      = -0.67824
   Precision = 0.664909 at threshold = 0.5
   Recall    = 0.301461
   F1        = 0.414839


Total learning time: 79.594 seconds
Total inference time: 4.339 seconds
AUC ROC: 0.626252


Refined model AUC ROC: 0.626252


Dataset: 48_twitter_facebook, Fold: 1, Type: Transfer (trRDN-B), Time: 01:37:08
{'Inference time': 4.339, 'parameter': {'Inference time': 3.782, 'F1': 0.432365, 'Precision': [0.666114, 0.5], 'CLL': -0.675918, 'AUC PR': 0.604206, 'Recall': 0.320053, 'AUC ROC': 0.624361, 'Learning time': 21.622}, 'F1': 0.414839, 'Precision': [0.664909, 0.5], 'CLL': -0.67824, 'AUC PR': 0.613208, 'Recall': 0.301461, 'AUC ROC': 0.626252, 'Learning time': 101.216}


Starting fold 2

Target train facts examples: 1550
Target train pos examples: 3386
Target train neg examples: 3386

Target test facts examples: 5049
Target test pos examples: 9182
Target test neg examples: 9182

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false;tweets(A, I).;true;true
0;true;tweets(A, D), tweets(B, D).;false;true
0;false,false,false;tweets(B, K).;false;false
0;true,false;tweets(B, E), tweets(A, F).;false;true
0;true,false,false;tweets(B, G).;false;false
0;false,false,true;tweets(B, J).;false;false
0;false;tweets(B, H), tweets(A, H).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false;tweets(A, I).;true;true
1;true;tweets(B, D), tweets(A, D).;false;true
1;false,false,false;tweets(B, K).;false;false
1;true,false;tweets(A, E), tweets(B, F).;false;true
1;true,false,false;tweets(B, G).;false;false
1;false,false,true;tweets(B, J).;false;false
1;false;tweets(B, H), tweets(A, H).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false;tweets(A, I).;true;true
2;true;tweets(A, D), tweets(B, D).;false;true
2;false,false,false;tweets(B, K).;false;false
2;true,false;tweets(A, E), tweets(B, F).;false;true
2;true,false,false;tweets(B, G).;false;false
2;false,false,true;tweets(B, J).;false;false
2;false;tweets(B, H), tweets(A, H).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false;tweets(A, I).;true;true
3;true;tweets(A, D), tweets(B, D).;false;true
3;false,false,false;tweets(B, K).;false;false
3;true,false;tweets(A, E), tweets(B, F).;false;true
3;true,false,false;tweets(B, G).;false;false
3;false,false,true;tweets(B, J).;false;false
3;false;tweets(A, H), tweets(B, H).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false;tweets(A, I).;true;true
4;true;tweets(A, D), tweets(B, D).;false;true
4;false,false,false;tweets(B, K).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;true,false,false;tweets(B, G).;false;false
4;false,false,true;tweets(B, J).;false;false
4;false;tweets(B, H), tweets(A, H).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false;tweets(A, I).;true;true
5;true;tweets(B, D), tweets(A, D).;false;true
5;false,false,false;tweets(B, K).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;true,false,false;tweets(B, G).;false;false
5;false,false,true;tweets(B, J).;false;false
5;false;tweets(B, H), tweets(A, H).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false;tweets(A, I).;true;true
6;true;tweets(A, D), tweets(B, D).;false;true
6;false,false,false;tweets(B, K).;false;false
6;true,false;tweets(B, E), tweets(A, F).;false;true
6;true,false,false;tweets(B, G).;false;false
6;false,false,true;tweets(B, J).;false;false
6;false;tweets(B, H), tweets(A, H).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false;tweets(A, I).;true;true
7;true;tweets(A, D), tweets(B, D).;false;true
7;false,false,false;tweets(B, K).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;true,false,false;tweets(B, G).;false;false
7;false,false,true;tweets(B, J).;false;false
7;false;tweets(A, H), tweets(B, H).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false;tweets(A, I).;true;true
8;true;tweets(A, D), tweets(B, D).;false;true
8;false,false,false;tweets(B, K).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;true,false,false;tweets(B, G).;false;false
8;false,false,true;tweets(B, J).;false;false
8;false;tweets(A, H), tweets(B, H).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false;tweets(A, I).;true;true
9;true;tweets(B, D), tweets(A, D).;false;true
9;false,false,false;tweets(B, K).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;true,false,false;tweets(B, G).;false;false
9;false,false,true;tweets(B, J).;false;false
9;false;tweets(B, H), tweets(A, H).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.5961841995831345;  // std dev = 17,522, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(B, E), locale(A, F) )
%   | | then return 0.48584124279181545;  // std dev = 12,325, 650,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=408 */
%   | | else if ( locale(B, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.01604367194161748;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else if ( locale(B, H), locale(A, H) )
%   | then return 0.38612096307153526;  // std dev = 23,879, 2.288,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=1.208 */
%   | else if ( locale(A, I) )
%   | | then if ( locale(B, J) )
%   | | | then return 0.12645270954243587;  // std dev = 20,777, 2.199,000 (wgt'ed) examples reached here.  /* #neg=1.609 #pos=590 */
%   | | | else return -0.0918510649004878;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( locale(B, K) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(B, D), locale(A, D) )
%   | then return 0.507238162019902;  // std dev = 17,522, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then return 0.41590054203083426;  // std dev = 12,325, 650,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=408 */
%   | | else if ( locale(B, G) )
%   | | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.014079441960181528;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else if ( locale(B, H), locale(A, H) )
%   | then return 0.33234907671712444;  // std dev = 23,879, 2.288,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=1.208 */
%   | else if ( locale(A, I) )
%   | | then if ( locale(B, J) )
%   | | | then return 0.11035196864299418;  // std dev = 20,777, 2.199,000 (wgt'ed) examples reached here.  /* #neg=1.609 #pos=590 */
%   | | | else return -0.08103355623325077;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( locale(B, K) )
%   | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.40546381876300713;  // std dev = 17,522, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then return 0.33828374152672386;  // std dev = 12,325, 650,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=408 */
%   | | else if ( locale(B, G) )
%   | | | then return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.012337096821794576;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else if ( locale(B, H), locale(A, H) )
%   | then return 0.27475543287093834;  // std dev = 23,879, 2.288,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=1.208 */
%   | else if ( locale(A, I) )
%   | | then if ( locale(B, J) )
%   | | | then return 0.09511515727450746;  // std dev = 20,777, 2.199,000 (wgt'ed) examples reached here.  /* #neg=1.609 #pos=590 */
%   | | | else return -0.07207938744927647;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( locale(B, K) )
%   | | | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.3103040570099274;  // std dev = 17,522, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then return 0.2641389416486052;  // std dev = 12,325, 650,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=408 */
%   | | else if ( locale(B, G) )
%   | | | then return 0.25206564481433;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.01079600519889324;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else if ( locale(A, H), locale(B, H) )
%   | then return 0.21939377803525098;  // std dev = 23,879, 2.288,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=1.208 */
%   | else if ( locale(A, I) )
%   | | then if ( locale(B, J) )
%   | | | then return 0.08106917954758;  // std dev = 20,777, 2.199,000 (wgt'ed) examples reached here.  /* #neg=1.609 #pos=590 */
%   | | | else return -0.06456223006953629;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( locale(B, K) )
%   | | | then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.23323785236538414;  // std dev = 17,522, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then return 0.20111647145667938;  // std dev = 12,325, 650,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=408 */
%   | | else if ( locale(B, G) )
%   | | | then return 0.19292386438161405;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.009436363961890348;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else if ( locale(B, H), locale(A, H) )
%   | then return 0.1707359705185044;  // std dev = 23,879, 2.288,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=1.208 */
%   | else if ( locale(A, I) )
%   | | then if ( locale(B, J) )
%   | | | then return 0.06841840961254925;  // std dev = 20,777, 2.199,000 (wgt'ed) examples reached here.  /* #neg=1.609 #pos=590 */
%   | | | else return -0.05817436330074882;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( locale(B, K) )
%   | | | then return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(B, D), locale(A, D) )
%   | then return 0.1752612184615645;  // std dev = 17,522, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(B, E), locale(A, F) )
%   | | then return 0.15135438471779075;  // std dev = 12,325, 650,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=408 */
%   | | else if ( locale(B, G) )
%   | | | then return 0.14565792934085833;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.008239471592160041;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else if ( locale(B, H), locale(A, H) )
%   | then return 0.1306521247606451;  // std dev = 23,879, 2.288,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=1.208 */
%   | else if ( locale(A, I) )
%   | | then if ( locale(B, J) )
%   | | | then return 0.057251226881933404;  // std dev = 20,777, 2.199,000 (wgt'ed) examples reached here.  /* #neg=1.609 #pos=590 */
%   | | | else return -0.05268871510580643;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( locale(B, K) )
%   | | | then return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.1327135026905175;  // std dev = 17,522, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(B, E), locale(A, F) )
%   | | then return 0.11353726004392728;  // std dev = 12,325, 650,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=408 */
%   | | else if ( locale(B, G) )
%   | | | then return 0.10936989620321738;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0071878986662921975;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else if ( locale(B, H), locale(A, H) )
%   | then return 0.09898681444176098;  // std dev = 23,879, 2.288,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=1.208 */
%   | else if ( locale(A, I) )
%   | | then if ( locale(B, J) )
%   | | | then return 0.04756070147333275;  // std dev = 20,777, 2.199,000 (wgt'ed) examples reached here.  /* #neg=1.609 #pos=590 */
%   | | | else return -0.04793440537624262;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( locale(B, K) )
%   | | | then return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.10148952665768575;  // std dev = 17,522, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then return 0.08525153141226947;  // std dev = 12,325, 650,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=408 */
%   | | else if ( locale(B, G) )
%   | | | then return 0.08203625432353104;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.00626557701369675;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else if ( locale(A, H), locale(B, H) )
%   | then return 0.07458771649788248;  // std dev = 23,879, 2.288,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=1.208 */
%   | else if ( locale(A, I) )
%   | | then if ( locale(B, J) )
%   | | | then return 0.03927098172812467;  // std dev = 20,777, 2.199,000 (wgt'ed) examples reached here.  /* #neg=1.609 #pos=590 */
%   | | | else return -0.043780575018648085;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( locale(B, K) )
%   | | | then return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.07834991684926115;  // std dev = 17,522, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then return 0.06418120045308084;  // std dev = 12,325, 650,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=408 */
%   | | else if ( locale(B, G) )
%   | | | then return 0.06159524961500464;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.005457826766089334;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else if ( locale(A, H), locale(B, H) )
%   | then return 0.05604699773461462;  // std dev = 23,879, 2.288,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=1.208 */
%   | else if ( locale(A, I) )
%   | | then if ( locale(B, J) )
%   | | | then return 0.03226296581193761;  // std dev = 20,777, 2.199,000 (wgt'ed) examples reached here.  /* #neg=1.609 #pos=590 */
%   | | | else return -0.04012543743331258;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( locale(B, K) )
%   | | | then return 0.04126932998424626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(B, D), locale(A, D) )
%   | then return 0.06098643614936192;  // std dev = 17,522, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then return 0.04846424604920011;  // std dev = 12,325, 650,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=408 */
%   | | else if ( locale(B, G) )
%   | | | then return 0.04632822707005526;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.004751337688710894;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else if ( locale(B, H), locale(A, H) )
%   | then return 0.04206107860509022;  // std dev = 23,879, 2.288,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=1.208 */
%   | else if ( locale(A, I) )
%   | | then if ( locale(B, J) )
%   | | | then return 0.02639567133489947;  // std dev = 20,777, 2.199,000 (wgt'ed) examples reached here.  /* #neg=1.609 #pos=590 */
%   | | | else return -0.03688870434691565;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( locale(B, K) )
%   | | | then return 0.032663748734830134;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.565024
   AUC PR    = 0.568421
   CLL	      = -0.716597
   Precision = 0.634721 at threshold = 0.5
   Recall    = 0.340449
   F1        = 0.443184


Total learning time: 13.654 seconds
Total inference time: 3.568 seconds
AUC ROC: 0.565024


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'locale(A, I)', 'true': 'locale(A, D), locale(B, D)', 'false,false,false': 'locale(B, K)', 'true,false': 'locale(B, E), locale(A, F)', 'true,false,false': 'locale(B, G)', 'false,false,true': 'locale(B, J)', 'false': 'locale(B, H), locale(A, H)'}, {'true,false,true': [12.325, 242, 408], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [20.777, 1609, 590], 'true,true': [17.522, 416, 1172], 'true,false,false,true': [1.095, 2, 3], 'false,false,true,false': [0.975, 19, 1], 'true,false,false,false': [1.589, 16, 3], 'false,true': [23.879, 1080, 1208], 'false,false,false,true': [0.816, 2, 1]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'locale(A, I)', 'true': 'locale(B, D), locale(A, D)', 'false,false,false': 'locale(B, K)', 'true,false': 'locale(A, E), locale(B, F)', 'true,false,false': 'locale(B, G)', 'false,false,true': 'locale(B, J)', 'false': 'locale(B, H), locale(A, H)'}, {'true,false,true': [12.325, 242, 408], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [20.777, 1609, 590], 'true,true': [17.522, 416, 1172], 'true,false,false,true': [1.095, 2, 3], 'false,false,true,false': [0.975, 19, 1], 'true,false,false,false': [1.589, 16, 3], 'false,true': [23.879, 1080, 1208], 'false,false,false,true': [0.816, 2, 1]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'locale(A, I)', 'true': 'locale(A, D), locale(B, D)', 'false,false,false': 'locale(B, K)', 'true,false': 'locale(A, E), locale(B, F)', 'true,false,false': 'locale(B, G)', 'false,false,true': 'locale(B, J)', 'false': 'locale(B, H), locale(A, H)'}, {'true,false,true': [12.325, 242, 408], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [20.777, 1609, 590], 'true,true': [17.522, 416, 1172], 'true,false,false,true': [1.095, 2, 3], 'false,false,true,false': [0.975, 19, 1], 'true,false,false,false': [1.589, 16, 3], 'false,true': [23.879, 1080, 1208], 'false,false,false,true': [0.816, 2, 1]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'locale(A, I)', 'true': 'locale(A, D), locale(B, D)', 'false,false,false': 'locale(B, K)', 'true,false': 'locale(A, E), locale(B, F)', 'true,false,false': 'locale(B, G)', 'false,false,true': 'locale(B, J)', 'false': 'locale(A, H), locale(B, H)'}, {'true,false,true': [12.325, 242, 408], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [20.777, 1609, 590], 'true,true': [17.522, 416, 1172], 'true,false,false,true': [1.095, 2, 3], 'false,false,true,false': [0.975, 19, 1], 'true,false,false,false': [1.589, 16, 3], 'false,true': [23.879, 1080, 1208], 'false,false,false,true': [0.816, 2, 1]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'locale(A, I)', 'true': 'locale(A, D), locale(B, D)', 'false,false,false': 'locale(B, K)', 'true,false': 'locale(A, E), locale(B, F)', 'true,false,false': 'locale(B, G)', 'false,false,true': 'locale(B, J)', 'false': 'locale(B, H), locale(A, H)'}, {'true,false,true': [12.325, 242, 408], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [20.777, 1609, 590], 'true,true': [17.522, 416, 1172], 'true,false,false,true': [1.095, 2, 3], 'false,false,true,false': [0.975, 19, 1], 'true,false,false,false': [1.589, 16, 3], 'false,true': [23.879, 1080, 1208], 'false,false,false,true': [0.816, 2, 1]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'locale(A, I)', 'true': 'locale(B, D), locale(A, D)', 'false,false,false': 'locale(B, K)', 'true,false': 'locale(B, E), locale(A, F)', 'true,false,false': 'locale(B, G)', 'false,false,true': 'locale(B, J)', 'false': 'locale(B, H), locale(A, H)'}, {'true,false,true': [12.325, 242, 408], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [20.777, 1609, 590], 'true,true': [17.522, 416, 1172], 'true,false,false,true': [1.095, 2, 3], 'false,false,true,false': [0.975, 19, 1], 'true,false,false,false': [1.589, 16, 3], 'false,true': [23.879, 1080, 1208], 'false,false,false,true': [0.816, 2, 1]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'locale(A, I)', 'true': 'locale(A, D), locale(B, D)', 'false,false,false': 'locale(B, K)', 'true,false': 'locale(B, E), locale(A, F)', 'true,false,false': 'locale(B, G)', 'false,false,true': 'locale(B, J)', 'false': 'locale(B, H), locale(A, H)'}, {'true,false,true': [12.325, 242, 408], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [20.777, 1609, 590], 'true,true': [17.522, 416, 1172], 'true,false,false,true': [1.095, 2, 3], 'false,false,true,false': [0.975, 19, 1], 'true,false,false,false': [1.589, 16, 3], 'false,true': [23.879, 1080, 1208], 'false,false,false,true': [0.816, 2, 1]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'locale(A, I)', 'true': 'locale(A, D), locale(B, D)', 'false,false,false': 'locale(B, K)', 'true,false': 'locale(A, E), locale(B, F)', 'true,false,false': 'locale(B, G)', 'false,false,true': 'locale(B, J)', 'false': 'locale(A, H), locale(B, H)'}, {'true,false,true': [12.325, 242, 408], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [20.777, 1609, 590], 'true,true': [17.522, 416, 1172], 'true,false,false,true': [1.095, 2, 3], 'false,false,true,false': [0.975, 19, 1], 'true,false,false,false': [1.589, 16, 3], 'false,true': [23.879, 1080, 1208], 'false,false,false,true': [0.816, 2, 1]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'locale(A, I)', 'true': 'locale(A, D), locale(B, D)', 'false,false,false': 'locale(B, K)', 'true,false': 'locale(A, E), locale(B, F)', 'true,false,false': 'locale(B, G)', 'false,false,true': 'locale(B, J)', 'false': 'locale(A, H), locale(B, H)'}, {'true,false,true': [12.325, 242, 408], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [20.777, 1609, 590], 'true,true': [17.522, 416, 1172], 'true,false,false,true': [1.095, 2, 3], 'false,false,true,false': [0.975, 19, 1], 'true,false,false,false': [1.589, 16, 3], 'false,true': [23.879, 1080, 1208], 'false,false,false,true': [0.816, 2, 1]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'locale(A, I)', 'true': 'locale(B, D), locale(A, D)', 'false,false,false': 'locale(B, K)', 'true,false': 'locale(A, E), locale(B, F)', 'true,false,false': 'locale(B, G)', 'false,false,true': 'locale(B, J)', 'false': 'locale(B, H), locale(A, H)'}, {'true,false,true': [12.325, 242, 408], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [20.777, 1609, 590], 'true,true': [17.522, 416, 1172], 'true,false,false,true': [1.095, 2, 3], 'false,false,true,false': [0.975, 19, 1], 'true,false,false,false': [1.589, 16, 3], 'false,true': [23.879, 1080, 1208], 'false,false,false,true': [0.816, 2, 1]}]]
[{'': [0.20953890870654682, 0.2398218297845311], 'false,false': [0.19540122271478497, 0.22222222222222224], 'true': [0.19333921286223243, 0.2369484630488892], 'false,false,false': [0.22222222222222224, nan], 'true,false': [0.23369467455620715, 0.1874999999999999], 'true,false,false': [0.23999999999999994, 0.13296398891966743], 'false,false,true': [0.19631685906258958, 0.04750000000000004], 'false': [0.24921756565115658, 0.19544348674289674]}, {'': [0.20806178068373987, 0.2351762463499188], 'false,false': [0.19530272139340146, 0.2222222222222222], 'true': [0.19333921286222594, 0.23532514977703425], 'false,false,false': [0.2222222222222222, nan], 'true,false': [0.23369467455620765, 0.17891829899578457], 'true,false,false': [0.24, 0.13296398891966776], 'false,false,true': [0.19631685906260027, 0.04749999999999998], 'false': [0.24921756565116016, 0.19534358829591672]}, {'': [0.2066229081686159, 0.23083188423976633], 'false,false': [0.1952252430666872, 0.22222222222222218], 'true': [0.19333921286223243, 0.23381221674380162], 'false,false,false': [0.22222222222222218, nan], 'true,false': [0.2336946745562198, 0.17096896426220987], 'true,false,false': [0.24000000000000005, 0.13296398891966774], 'false,false,true': [0.19631685906262178, 0.0475], 'false': [0.24921756565114006, 0.19526486237282384]}, {'': [0.20565188824913233, 0.227475695158887], 'false,false': [0.19516499330923018, 0.22222222222222224], 'true': [0.19333921286219685, 0.23265995384984933], 'false,false,false': [0.22222222222222224, nan], 'true,false': [0.2336946745562105, 0.1648639368964997], 'true,false,false': [0.24000000000000005, 0.13296398891966746], 'false,false,true': [0.19631685906259347, 0.04749999999999997], 'false': [0.24921756565112635, 0.19520361647037948]}, {'': [0.2051269926160051, 0.22525582308108083], 'false,false': [0.1951187016050179, 0.2222222222222222], 'true': [0.19333921286221606, 0.23190823405783312], 'false,false,false': [0.2222222222222222, nan], 'true,false': [0.23369467455620946, 0.16081598422629326], 'true,false,false': [0.24000000000000005, 0.13296398891966776], 'false,false,true': [0.1963168590626075, 0.04749999999999998], 'false': [0.24921756565114175, 0.19515660213760966]}, {'': [0.20486258591548234, 0.22394711401509176], 'false,false': [0.19508351965479742, 0.22222222222222224], 'true': [0.193339212862212, 0.23146286484035825], 'false,false,false': [0.22222222222222224, nan], 'true,false': [0.2336946745562138, 0.15837767888493287], 'true,false,false': [0.24, 0.13296398891966757], 'false,false,true': [0.19631685906261728, 0.04749999999999996], 'false': [0.24921756565112532, 0.19512093759768148]}, {'': [0.20472706746185446, 0.22323456736852115], 'false,false': [0.19505701465839803, 0.22222222222222224], 'true': [0.1933392128622067, 0.23121164869650734], 'false,false,false': [0.22222222222222224, nan], 'true,false': [0.23369467455621487, 0.15698522431654313], 'true,false,false': [0.24000000000000005, 0.13296398891966754], 'false,false,true': [0.19631685906262683, 0.04750000000000002], 'false': [0.2492175656511249, 0.19509413287763702]}, {'': [0.2046540406155677, 0.22286679309852558], 'false,false': [0.19503717031830775, 0.2222222222222222], 'true': [0.19333921286221137, 0.23107274371205028], 'false,false,false': [0.2222222222222222, nan], 'true,false': [0.23369467455621404, 0.15621005646470051], 'true,false,false': [0.24, 0.13296398891966743], 'false,false,true': [0.19631685906259008, 0.04749999999999995], 'false': [0.24921756565113212, 0.19507411435088265]}, {'': [0.20461227172439528, 0.22268376514397456], 'false,false': [0.19502236598148817, 0.22222222222222218], 'true': [0.19333921286221098, 0.23099631732666523], 'false,false,false': [0.22222222222222218, nan], 'true,false': [0.23369467455621265, 0.15578292173708272], 'true,false,false': [0.24, 0.13296398891966763], 'false,false,true': [0.1963168590625958, 0.04749999999999999], 'false': [0.2492175656511325, 0.19505921524721298]}, {'': [0.20458688145483633, 0.2225950232783379], 'false,false': [0.19501133366010093, 0.2222222222222222], 'true': [0.19333921286221073, 0.230954202777287], 'false,false,false': [0.2222222222222222, nan], 'true,false': [0.23369467455621235, 0.1555482630760037], 'true,false,false': [0.23999999999999994, 0.1329639889196676], 'false,false,true': [0.19631685906259785, 0.04749999999999997], 'false': [0.24921756565112904, 0.19504813508675914]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '0;false,false;locale(A, I).;true;true', '0;true;locale(A, D), locale(B, D).;true;true', '0;false,false,false;locale(B, K).;true;true', '0;true,false;locale(B, E), locale(A, F).;true;true', '0;true,false,false;locale(B, G).;true;true', '0;false,false,true;locale(B, J).;true;true', '0;false;locale(B, H), locale(A, H).;true;true', '1;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '1;false,false;locale(A, I).;true;true', '1;true;locale(B, D), locale(A, D).;true;true', '1;false,false,false;locale(B, K).;true;true', '1;true,false;locale(A, E), locale(B, F).;true;true', '1;true,false,false;locale(B, G).;true;true', '1;false,false,true;locale(B, J).;true;true', '1;false;locale(B, H), locale(A, H).;true;true', '2;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '2;false,false;locale(A, I).;true;true', '2;true;locale(A, D), locale(B, D).;true;true', '2;false,false,false;locale(B, K).;true;true', '2;true,false;locale(A, E), locale(B, F).;true;true', '2;true,false,false;locale(B, G).;true;true', '2;false,false,true;locale(B, J).;true;true', '2;false;locale(B, H), locale(A, H).;true;true', '3;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '3;false,false;locale(A, I).;true;true', '3;true;locale(A, D), locale(B, D).;true;true', '3;false,false,false;locale(B, K).;true;true', '3;true,false;locale(A, E), locale(B, F).;true;true', '3;true,false,false;locale(B, G).;true;true', '3;false,false,true;locale(B, J).;true;true', '3;false;locale(A, H), locale(B, H).;true;true', '4;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '4;false,false;locale(A, I).;true;true', '4;true;locale(A, D), locale(B, D).;true;true', '4;false,false,false;locale(B, K).;true;true', '4;true,false;locale(A, E), locale(B, F).;true;true', '4;true,false,false;locale(B, G).;true;true', '4;false,false,true;locale(B, J).;true;true', '4;false;locale(B, H), locale(A, H).;true;true', '5;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '5;false,false;locale(A, I).;true;true', '5;true;locale(B, D), locale(A, D).;true;true', '5;false,false,false;locale(B, K).;true;true', '5;true,false;locale(B, E), locale(A, F).;true;true', '5;true,false,false;locale(B, G).;true;true', '5;false,false,true;locale(B, J).;true;true', '5;false;locale(B, H), locale(A, H).;true;true', '6;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '6;false,false;locale(A, I).;true;true', '6;true;locale(A, D), locale(B, D).;true;true', '6;false,false,false;locale(B, K).;true;true', '6;true,false;locale(B, E), locale(A, F).;true;true', '6;true,false,false;locale(B, G).;true;true', '6;false,false,true;locale(B, J).;true;true', '6;false;locale(B, H), locale(A, H).;true;true', '7;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '7;false,false;locale(A, I).;true;true', '7;true;locale(A, D), locale(B, D).;true;true', '7;false,false,false;locale(B, K).;true;true', '7;true,false;locale(A, E), locale(B, F).;true;true', '7;true,false,false;locale(B, G).;true;true', '7;false,false,true;locale(B, J).;true;true', '7;false;locale(A, H), locale(B, H).;true;true', '8;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '8;false,false;locale(A, I).;true;true', '8;true;locale(A, D), locale(B, D).;true;true', '8;false,false,false;locale(B, K).;true;true', '8;true,false;locale(A, E), locale(B, F).;true;true', '8;true,false,false;locale(B, G).;true;true', '8;false,false,true;locale(B, J).;true;true', '8;false;locale(A, H), locale(B, H).;true;true', '9;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '9;false,false;locale(A, I).;true;true', '9;true;locale(B, D), locale(A, D).;true;true', '9;false,false,false;locale(B, K).;true;true', '9;true,false;locale(A, E), locale(B, F).;true;true', '9;true,false,false;locale(B, G).;true;true', '9;false,false,true;locale(B, J).;true;true', '9;false;locale(B, H), locale(A, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.5961841995831345;  // std dev = 0,440, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(B, E), locale(A, F) )
%   | | then if ( educationconcentration(B, G), educationconcentration(A, G) )
%   | | | then return 0.7110901115701009;  // std dev = 2,921, 68,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   | | | else return 0.45952350554624394;  // std dev = 11,812, 582,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=350 */
%   | | else return 0.10814893509951222;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( locale(B, H), locale(A, H) )
%   | then if ( educationtype(A, I), educationtype(B, J) )
%   | | then if ( birthday(A, K), birthday(B, K) )
%   | | | then return 0.5010060779566521;  // std dev = 6,708, 196,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=126 */
%   | | | else return 0.1968070820643642;  // std dev = 14,502, 939,000 (wgt'ed) examples reached here.  /* #neg=621 #pos=318 */
%   | | else if ( educationdegree(B, L), languages(B, M) )
%   | | | then return 0.16460054800273813;  // std dev = 3,630, 62,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.541008696786034;  // std dev = 15,371, 1.091,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=745 */
%   | else return 0.12457557776377376;  // std dev = 0,442, 2.222,000 (wgt'ed) examples reached here.  /* #neg=1.630 #pos=592 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(B, D), locale(A, D) )
%   | then return 0.507238162019902;  // std dev = 0,440, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then if ( location(B, G), location(A, G) )
%   | | | then return 0.5975182382410255;  // std dev = 4,483, 135,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=110 */
%   | | | else return 0.3679335478001125;  // std dev = 11,177, 515,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=298 */
%   | | else return 0.09446743783575558;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( locale(B, H), locale(A, H) )
%   | then if ( educationtype(A, I), educationtype(B, J) )
%   | | then if ( birthday(A, K), birthday(B, K) )
%   | | | then return 0.4285227559352637;  // std dev = 6,708, 196,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=126 */
%   | | | else return 0.17112231346192847;  // std dev = 14,502, 939,000 (wgt'ed) examples reached here.  /* #neg=621 #pos=318 */
%   | | else if ( educationyear(B, L), birthday(B, M) )
%   | | | then return 0.2770593539070089;  // std dev = 6,845, 189,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=93 */
%   | | | else return 0.4774398998534516;  // std dev = 14,220, 964,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=671 */
%   | else return 0.10872434081181385;  // std dev = 0,442, 2.222,000 (wgt'ed) examples reached here.  /* #neg=1.630 #pos=592 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.40546381876300713;  // std dev = 0,440, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then if ( location(B, G), location(A, G) )
%   | | | then return 0.4797442897448174;  // std dev = 4,477, 135,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=110 */
%   | | | else return 0.300370623087081;  // std dev = 11,172, 515,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=298 */
%   | | else return 0.08165239320886176;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( locale(B, H), locale(A, H) )
%   | then if ( educationtype(B, I), educationconcentration(A, J) )
%   | | then return 0.043557710940465615;  // std dev = 0,423, 342,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=84 */
%   | | else if ( educationdegree(B, K), educationtype(A, L) )
%   | | | then return 0.05606663907713606;  // std dev = 5,753, 179,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=47 */
%   | | | else return 0.3364579997032279;  // std dev = 20,117, 1.767,000 (wgt'ed) examples reached here.  /* #neg=690 #pos=1.077 */
%   | else if ( locale(A, M) )
%   | | then return 0.09364885728780037;  // std dev = 0,442, 2.219,000 (wgt'ed) examples reached here.  /* #neg=1.628 #pos=591 */
%   | | else return 0.16064600314928743;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.3103040570099274;  // std dev = 0,440, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then if ( birthday(A, G), birthday(B, G) )
%   | | | then return 0.43859887343130405;  // std dev = 3,657, 85,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=68 */
%   | | | else return 0.23696109494841247;  // std dev = 11,410, 565,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=340 */
%   | | else return 0.06990902274840138;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( locale(A, H), locale(B, H) )
%   | then if ( educationtype(B, I), educationconcentration(A, J) )
%   | | then return 0.03648268897762555;  // std dev = 0,423, 342,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=84 */
%   | | else if ( educationdegree(B, K), gender(B, L) )
%   | | | then return 0.14512401698319322;  // std dev = 9,594, 421,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=186 */
%   | | | else return 0.2736565852441181;  // std dev = 18,616, 1.525,000 (wgt'ed) examples reached here.  /* #neg=587 #pos=938 */
%   | else if ( locale(A, M) )
%   | | then return 0.07985690160501972;  // std dev = 0,442, 2.219,000 (wgt'ed) examples reached here.  /* #neg=1.628 #pos=591 */
%   | | else return 0.13647615543744515;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.23323785236538414;  // std dev = 0,440, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then if ( educationyear(B, G), educationyear(A, G) )
%   | | | then return 0.3162501893400194;  // std dev = 5,580, 171,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=128 */
%   | | | else return 0.15987416634726112;  // std dev = 10,533, 479,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=280 */
%   | | else return 0.059354635365447474;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( locale(B, H), locale(A, H) )
%   | then if ( educationtype(B, I), educationtype(A, J) )
%   | | then if ( workstartdate(A, K), birthday(A, L) )
%   | | | then return 0.3066114930771318;  // std dev = 5,569, 131,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=79 */
%   | | | else return 0.08092417909128152;  // std dev = 14,610, 1.004,000 (wgt'ed) examples reached here.  /* #neg=639 #pos=365 */
%   | | else if ( educationdegree(B, M), languages(B, N) )
%   | | | then return -0.016676651050051526;  // std dev = 3,632, 62,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.23843517559163108;  // std dev = 15,293, 1.091,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=745 */
%   | else return 0.06750076668592755;  // std dev = 0,442, 2.222,000 (wgt'ed) examples reached here.  /* #neg=1.630 #pos=592 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(B, D), locale(A, D) )
%   | then return 0.1752612184615645;  // std dev = 0,440, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(B, E), locale(A, F) )
%   | | then if ( workenddate(B, G), location(A, H) )
%   | | | then return -0.033566455139530244;  // std dev = 3,480, 52,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return 0.16789104072851455;  // std dev = 11,389, 598,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=385 */
%   | | else return 0.05002771289938788;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( locale(B, I), locale(A, I) )
%   | then if ( educationtype(B, J), educationconcentration(A, K) )
%   | | then return 0.010385495917596067;  // std dev = 0,419, 342,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=84 */
%   | | else if ( educationdegree(B, L), educationtype(A, M) )
%   | | | then return 0.002742918609349767;  // std dev = 5,726, 179,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=47 */
%   | | | else return 0.1625125235024275;  // std dev = 19,959, 1.767,000 (wgt'ed) examples reached here.  /* #neg=690 #pos=1.077 */
%   | else if ( locale(A, N) )
%   | | then return 0.05646359369326185;  // std dev = 0,442, 2.219,000 (wgt'ed) examples reached here.  /* #neg=1.628 #pos=591 */
%   | | else return 0.1022274252429401;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.1327135026905175;  // std dev = 0,440, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(B, E), locale(A, F) )
%   | | then if ( workenddate(B, G), educationconcentration(A, H) )
%   | | | then return -0.12025232903792343;  // std dev = 2,847, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.12925220857355166;  // std dev = 11,514, 611,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=394 */
%   | | else return 0.04190386852605733;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( locale(B, I), locale(A, I) )
%   | then if ( lastname(B, J), birthday(B, K) )
%   | | then if ( educationconcentration(B, L), educationdegree(B, M) )
%   | | | then return -0.06773108073497743;  // std dev = 1,989, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.2208264681579512;  // std dev = 7,902, 299,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=191 */
%   | | else if ( birthday(B, N), educationyear(B, P) )
%   | | | then return 0.0128145509263901;  // std dev = 11,390, 598,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=230 */
%   | | | else return 0.10898511221143674;  // std dev = 17,049, 1.367,000 (wgt'ed) examples reached here.  /* #neg=587 #pos=780 */
%   | else return 0.04699652861073621;  // std dev = 0,442, 2.222,000 (wgt'ed) examples reached here.  /* #neg=1.630 #pos=592 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.10148952665768575;  // std dev = 0,440, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then if ( location(B, G), birthday(B, H) )
%   | | | then return 0.1699962747895627;  // std dev = 5,798, 182,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=133 */
%   | | | else return 0.05358321614392892;  // std dev = 10,327, 468,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=275 */
%   | | else return 0.03491396367325339;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( locale(A, I), locale(B, I) )
%   | then if ( educationyear(B, J), educationdegree(A, K) )
%   | | then return -0.03857090784747645;  // std dev = 0,429, 243,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=63 */
%   | | else if ( educationyear(A, L), workenddate(B, M) )
%   | | | then return 0.22432516555816437;  // std dev = 5,868, 152,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=94 */
%   | | | else return 0.07652877320228975;  // std dev = 20,156, 1.893,000 (wgt'ed) examples reached here.  /* #neg=842 #pos=1.051 */
%   | else if ( locale(A, N) )
%   | | then return 0.038792540871029395;  // std dev = 0,442, 2.219,000 (wgt'ed) examples reached here.  /* #neg=1.628 #pos=591 */
%   | | else return 0.07465574916705049;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.07834991684926115;  // std dev = 0,440, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then if ( worklocation(A, G) )
%   | | | then return -0.0575074698338346;  // std dev = 4,693, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | | | else return 0.08766556451467117;  // std dev = 10,842, 550,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=358 */
%   | | else return 0.028961035597951046;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( locale(A, H), locale(B, H) )
%   | then if ( educationdegree(B, I), worklocation(B, J) )
%   | | then return 0.34476605095319657;  // std dev = 0,332, 49,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   | | else if ( educationtype(B, K), workposition(B, L) )
%   | | | then return -0.23378694286065874;  // std dev = 2,083, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | | else return 0.056389023713469856;  // std dev = 21,706, 2.192,000 (wgt'ed) examples reached here.  /* #neg=1.029 #pos=1.163 */
%   | else if ( locale(A, M) )
%   | | then return 0.03190210877393255;  // std dev = 0,442, 2.219,000 (wgt'ed) examples reached here.  /* #neg=1.628 #pos=591 */
%   | | else return 0.060083738594076085;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(B, D), locale(A, D) )
%   | then return 0.06098643614936192;  // std dev = 0,440, 1.588,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=1.172 */
%   | else if ( locale(A, E), locale(B, F) )
%   | | then if ( educationconcentration(B, G), educationconcentration(A, G) )
%   | | | then return 0.20540162168447676;  // std dev = 2,845, 68,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   | | | else return 0.0314385931300676;  // std dev = 11,433, 582,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=350 */
%   | | else return 0.02393424292260483;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( locale(B, H), locale(A, H) )
%   | then if ( lastname(B, I), birthday(B, J) )
%   | | then if ( lastname(A, I) )
%   | | | then return -0.12447770863798333;  // std dev = 2,671, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.14788895455882403;  // std dev = 7,574, 291,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=186 */
%   | | else if ( languages(B, K), educationdegree(B, L) )
%   | | | then return -0.08632312498043931;  // std dev = 5,232, 161,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=38 */
%   | | | else return 0.04103581112845383;  // std dev = 19,667, 1.804,000 (wgt'ed) examples reached here.  /* #neg=832 #pos=972 */
%   | else return 0.02615757517805794;  // std dev = 0,442, 2.222,000 (wgt'ed) examples reached here.  /* #neg=1.630 #pos=592 */


Results
   AUC ROC   = 0.580287
   AUC PR    = 0.577549
   CLL	      = -0.712892
   Precision = 0.559412 at threshold = 0.5
   Recall    = 0.688085
   F1        = 0.617113


Total learning time: 46.415 seconds
Total inference time: 4.829 seconds
AUC ROC: 0.580287


Refined model AUC ROC: 0.580287


Dataset: 48_twitter_facebook, Fold: 2, Type: Transfer (trRDN-B), Time: 01:38:18
{'Inference time': 4.829, 'parameter': {'Inference time': 3.568, 'F1': 0.443184, 'Precision': [0.634721, 0.5], 'CLL': -0.716597, 'AUC PR': 0.568421, 'Recall': 0.340449, 'AUC ROC': 0.565024, 'Learning time': 13.654}, 'F1': 0.617113, 'Precision': [0.559412, 0.5], 'CLL': -0.712892, 'AUC PR': 0.577549, 'Recall': 0.688085, 'AUC ROC': 0.580287, 'Learning time': 60.069}


Starting fold 3

Target train facts examples: 990
Target train pos examples: 3312
Target train neg examples: 3312

Target test facts examples: 5609
Target test pos examples: 9256
Target test neg examples: 9256

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false;tweets(A, I).;true;true
0;true;tweets(A, D), tweets(B, D).;false;true
0;false,false,false;tweets(B, K).;false;false
0;true,false;tweets(B, E), tweets(A, F).;false;true
0;true,false,false;tweets(B, G).;false;false
0;false,false,true;tweets(B, J).;false;false
0;false;tweets(B, H), tweets(A, H).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false;tweets(A, I).;true;true
1;true;tweets(B, D), tweets(A, D).;false;true
1;false,false,false;tweets(B, K).;false;false
1;true,false;tweets(A, E), tweets(B, F).;false;true
1;true,false,false;tweets(B, G).;false;false
1;false,false,true;tweets(B, J).;false;false
1;false;tweets(B, H), tweets(A, H).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false;tweets(A, I).;true;true
2;true;tweets(A, D), tweets(B, D).;false;true
2;false,false,false;tweets(B, K).;false;false
2;true,false;tweets(A, E), tweets(B, F).;false;true
2;true,false,false;tweets(B, G).;false;false
2;false,false,true;tweets(B, J).;false;false
2;false;tweets(B, H), tweets(A, H).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false;tweets(A, I).;true;true
3;true;tweets(A, D), tweets(B, D).;false;true
3;false,false,false;tweets(B, K).;false;false
3;true,false;tweets(A, E), tweets(B, F).;false;true
3;true,false,false;tweets(B, G).;false;false
3;false,false,true;tweets(B, J).;false;false
3;false;tweets(A, H), tweets(B, H).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false;tweets(A, I).;true;true
4;true;tweets(A, D), tweets(B, D).;false;true
4;false,false,false;tweets(B, K).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;true,false,false;tweets(B, G).;false;false
4;false,false,true;tweets(B, J).;false;false
4;false;tweets(B, H), tweets(A, H).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false;tweets(A, I).;true;true
5;true;tweets(B, D), tweets(A, D).;false;true
5;false,false,false;tweets(B, K).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;true,false,false;tweets(B, G).;false;false
5;false,false,true;tweets(B, J).;false;false
5;false;tweets(B, H), tweets(A, H).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false;tweets(A, I).;true;true
6;true;tweets(A, D), tweets(B, D).;false;true
6;false,false,false;tweets(B, K).;false;false
6;true,false;tweets(B, E), tweets(A, F).;false;true
6;true,false,false;tweets(B, G).;false;false
6;false,false,true;tweets(B, J).;false;false
6;false;tweets(B, H), tweets(A, H).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false;tweets(A, I).;true;true
7;true;tweets(A, D), tweets(B, D).;false;true
7;false,false,false;tweets(B, K).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;true,false,false;tweets(B, G).;false;false
7;false,false,true;tweets(B, J).;false;false
7;false;tweets(A, H), tweets(B, H).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false;tweets(A, I).;true;true
8;true;tweets(A, D), tweets(B, D).;false;true
8;false,false,false;tweets(B, K).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;true,false,false;tweets(B, G).;false;false
8;false,false,true;tweets(B, J).;false;false
8;false;tweets(A, H), tweets(B, H).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false;tweets(A, I).;true;true
9;true;tweets(B, D), tweets(A, D).;false;true
9;false,false,false;tweets(B, K).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;true,false,false;tweets(B, G).;false;false
9;false,false,true;tweets(B, J).;false;false
9;false;tweets(B, H), tweets(A, H).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.45883152895616275;  // std dev = 16,767, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.058148935099512376;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.21344305274656644;  // std dev = 13,954, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.10275325164627361;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.3918676248875613;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.36300920241420964;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.3515915580503271;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.3933646242613745;  // std dev = 16,767, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.050922032513554226;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.18542525574870986;  // std dev = 13,954, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.0897791187829251;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.3371898928227817;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.312848493937955;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.303195993748621;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.32135589332697556;  // std dev = 16,767, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.0443462976046687;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.15765752714453066;  // std dev = 13,954, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.07766381973004836;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.27849479836398283;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.2596165299252061;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.2520779878788801;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.2523662046378731;  // std dev = 16,767, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.03842866223690464;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.13146228151510878;  // std dev = 13,954, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.06658192398551938;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.22207534379277272;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.20846561741115763;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.20297921431764002;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.19312749727985512;  // std dev = 16,767, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.03315494592188545;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.10779811594919095;  // std dev = 13,954, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.05662927583058117;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.17256777603963294;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.16323507000730814;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.15944408405946817;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.145798116990514;  // std dev = 16,767, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.02849510592572102;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.08718036606638759;  // std dev = 13,954, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.047832269006089716;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.13187875873504398;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.12563199161234045;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.12309158687208768;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.10947072236870882;  // std dev = 16,767, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.024408230135271814;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.06973137290200236;  // std dev = 13,954, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.04016246332656669;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.09981111381161784;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.09564082475026282;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.09395958344497064;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.08211249247460432;  // std dev = 16,767, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.02084688910874017;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.05529499282978914;  // std dev = 13,954, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.03355265186906201;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.07515212995475551;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.0723342125273143;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.07122099420494842;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.061655372506241646;  // std dev = 16,767, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.0177606715415984;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.043556235039925804;  // std dev = 13,954, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.02791167812690424;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.05644366312203218;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.054500713345978766;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.0537572369688305;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.04637704105239949;  // std dev = 16,767, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.015098879183171418;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.03413516025029885;  // std dev = 13,954, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.023136585883939412;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.042347557608783;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.040976592974907994;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.040473617337897866;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */


Results
   AUC ROC   = 0.656941
   AUC PR    = 0.625508
   CLL	      = -0.658691
   Precision = 0.613485 at threshold = 0.5
   Recall    = 0.606525
   F1        = 0.609985


Total learning time: 13.541 seconds
Total inference time: 3.71 seconds
AUC ROC: 0.656941


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [13.954, 548, 302], 'false,false,false,false': [17.463, 618, 602], 'false,false,true,true': [5.068, 105, 34], 'true,true': [16.767, 468, 704], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [19.685, 726, 831], 'false,false,false,true': [20.285, 815, 831], 'true,false,true': [2.53, 32, 8]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(B, D), educationtype(A, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [13.954, 548, 302], 'false,false,false,false': [17.463, 618, 602], 'false,false,true,true': [5.068, 105, 34], 'true,true': [16.767, 468, 704], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [19.685, 726, 831], 'false,false,false,true': [20.285, 815, 831], 'true,false,true': [2.53, 32, 8]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [13.954, 548, 302], 'false,false,false,false': [17.463, 618, 602], 'false,false,true,true': [5.068, 105, 34], 'true,true': [16.767, 468, 704], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [19.685, 726, 831], 'false,false,false,true': [20.285, 815, 831], 'true,false,true': [2.53, 32, 8]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(A, G), educationtype(B, G)'}, {'false,true': [13.954, 548, 302], 'false,false,false,false': [17.463, 618, 602], 'false,false,true,true': [5.068, 105, 34], 'true,true': [16.767, 468, 704], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [19.685, 726, 831], 'false,false,false,true': [20.285, 815, 831], 'true,false,true': [2.53, 32, 8]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [13.954, 548, 302], 'false,false,false,false': [17.463, 618, 602], 'false,false,true,true': [5.068, 105, 34], 'true,true': [16.767, 468, 704], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [19.685, 726, 831], 'false,false,false,true': [20.285, 815, 831], 'true,false,true': [2.53, 32, 8]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(B, D), educationtype(A, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [13.954, 548, 302], 'false,false,false,false': [17.463, 618, 602], 'false,false,true,true': [5.068, 105, 34], 'true,true': [16.767, 468, 704], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [19.685, 726, 831], 'false,false,false,true': [20.285, 815, 831], 'true,false,true': [2.53, 32, 8]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [13.954, 548, 302], 'false,false,false,false': [17.463, 618, 602], 'false,false,true,true': [5.068, 105, 34], 'true,true': [16.767, 468, 704], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [19.685, 726, 831], 'false,false,false,true': [20.285, 815, 831], 'true,false,true': [2.53, 32, 8]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(A, G), educationtype(B, G)'}, {'false,true': [13.954, 548, 302], 'false,false,false,false': [17.463, 618, 602], 'false,false,true,true': [5.068, 105, 34], 'true,true': [16.767, 468, 704], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [19.685, 726, 831], 'false,false,false,true': [20.285, 815, 831], 'true,false,true': [2.53, 32, 8]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(A, G), educationtype(B, G)'}, {'false,true': [13.954, 548, 302], 'false,false,false,false': [17.463, 618, 602], 'false,false,true,true': [5.068, 105, 34], 'true,true': [16.767, 468, 704], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [19.685, 726, 831], 'false,false,false,true': [20.285, 815, 831], 'true,false,true': [2.53, 32, 8]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(B, D), educationtype(A, D)', 'false,false,false': 'educationtype(B, J)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)'}, {'false,true': [13.954, 548, 302], 'false,false,false,false': [17.463, 618, 602], 'false,false,true,true': [5.068, 105, 34], 'true,true': [16.767, 468, 704], 'true,false,false': [0.0, 0, 0], 'false,false,true,false': [19.685, 726, 831], 'false,false,false,true': [20.285, 815, 831], 'true,false,true': [2.53, 32, 8]}]]
[{'': [0.24235096777006557, 0.24961638449279952], 'false,false': [0.24989952774566224, 0.24999999999996667], 'false,false,true': [0.184773044873455, 0.24886304995899974], 'false,false,false': [0.24997637780165272, 0.24995700080622746], 'true': [0.23986301529431678, 0.16000000000000017], 'true,false': [0.16000000000000017, nan], 'false': [0.22906020761245854, 0.24998611367641382]}, {'': [0.24096973865019505, 0.24827413480985824], 'false,false': [0.24821601915245226, 0.24999090746482366], 'false,false,true': [0.18477304487345309, 0.2488630499589757], 'false,false,false': [0.24997637780162302, 0.2499570008062391], 'true': [0.23986301529429233, 0.15999999999999998], 'true,false': [0.15999999999999998, nan], 'false': [0.2290602076124542, 0.24934666442173267]}, {'': [0.23967617751038586, 0.24700288907872447], 'false,false': [0.24664507190651644, 0.24998202290577531], 'false,false,true': [0.18477304487345508, 0.24886304995895875], 'false,false,false': [0.2499763778016452, 0.24995700080621952], 'true': [0.23986301529430162, 0.16000000000000011], 'true,false': [0.16000000000000011, nan], 'false': [0.2290602076124502, 0.24874885228013352]}, {'': [0.23868795653927705, 0.2460298329336638], 'false,false': [0.24542957065679782, 0.24997548829147903], 'false,false,true': [0.184773044873455, 0.24886304995896835], 'false,false,false': [0.2499763778016289, 0.24995700080622033], 'true': [0.2398630152942935, 0.1600000000000002], 'true,false': [0.1600000000000002, nan], 'false': [0.22906020761245852, 0.2482878607717957]}, {'': [0.23804399243181062, 0.24540242095708573], 'false,false': [0.24462175337141923, 0.24997164290825202], 'false,false,true': [0.18477304487345395, 0.2488630499589729], 'false,false,false': [0.2499763778016291, 0.2499570008062458], 'true': [0.2398630152942861, 0.15999999999999998], 'true,false': [0.15999999999999998, nan], 'false': [0.22906020761246298, 0.24798321904025186]}, {'': [0.2376664098757098, 0.24504593091242732], 'false,false': [0.24414187517755748, 0.24996970716259284], 'false,false,true': [0.18477304487345478, 0.24886304995898606], 'false,false,false': [0.2499763778016191, 0.24995700080623198], 'true': [0.23986301529430096, 0.15999999999999986], 'true,false': [0.15999999999999986, nan], 'false': [0.22906020761246298, 0.24780315809620304]}, {'': [0.23745819063094972, 0.24486027484677458], 'false,false': [0.2438780931738065, 0.24996882042545693], 'false,false,true': [0.18477304487345284, 0.24886304995896838], 'false,false,false': [0.2499763778016414, 0.24995700080623345], 'true': [0.23986301529430284, 0.16000000000000006], 'true,false': [0.16000000000000006, nan], 'false': [0.229060207612456, 0.2477044904361887]}, {'': [0.23734706089913937, 0.24476909587031634], 'false,false': [0.2437405952897931, 0.24996843236350544], 'false,false,true': [0.1847730448734538, 0.24886304995898428], 'false,false,false': [0.24997637780162518, 0.24995700080622807], 'true': [0.23986301529429913, 0.16000000000000014], 'true,false': [0.16000000000000014, nan], 'false': [0.22906020761245985, 0.24765313272694306]}, {'': [0.23728876250690506, 0.24472613059985687], 'false,false': [0.2436716416976927, 0.24996826453085005], 'false,false,true': [0.1847730448734546, 0.24886304995897068], 'false,false,false': [0.2499763778016305, 0.24995700080623603], 'true': [0.23986301529429577, 0.16000000000000014], 'true,false': [0.16000000000000014, nan], 'false': [0.22906020761245677, 0.24762739086162927]}, {'': [0.23725849450928554, 0.24470654785614995], 'false,false': [0.2436381587137457, 0.24996819124344422], 'false,false,true': [0.1847730448734538, 0.24886304995897054], 'false,false,false': [0.24997637780162874, 0.24995700080623576], 'true': [0.2398630152942914, 0.1600000000000001], 'true,false': [0.1600000000000001, nan], 'false': [0.22906020761245258, 0.24761489552863622]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '0;false,false;educationtype(A, H).;true;true', '0;true;educationtype(A, D), educationtype(B, D).;true;true', '0;false,false,false;educationtype(B, J).;true;true', '0;true,false;educationtype(B, E), educationtype(A, F).;true;true', '0;false,false,true;educationtype(B, I).;true;true', '0;false;educationtype(B, G), educationtype(A, G).;true;true', '1;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '1;false,false;educationtype(A, H).;true;true', '1;true;educationtype(B, D), educationtype(A, D).;true;true', '1;false,false,false;educationtype(B, J).;true;true', '1;true,false;educationtype(A, E), educationtype(B, F).;true;true', '1;false,false,true;educationtype(B, I).;true;true', '1;false;educationtype(B, G), educationtype(A, G).;true;true', '2;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '2;false,false;educationtype(A, H).;true;true', '2;true;educationtype(A, D), educationtype(B, D).;true;true', '2;false,false,false;educationtype(B, J).;true;true', '2;true,false;educationtype(A, E), educationtype(B, F).;true;true', '2;false,false,true;educationtype(B, I).;true;true', '2;false;educationtype(B, G), educationtype(A, G).;true;true', '3;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '3;false,false;educationtype(A, H).;true;true', '3;true;educationtype(A, D), educationtype(B, D).;true;true', '3;false,false,false;educationtype(B, J).;true;true', '3;true,false;educationtype(A, E), educationtype(B, F).;true;true', '3;false,false,true;educationtype(B, I).;true;true', '3;false;educationtype(A, G), educationtype(B, G).;true;true', '4;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '4;false,false;educationtype(A, H).;true;true', '4;true;educationtype(A, D), educationtype(B, D).;true;true', '4;false,false,false;educationtype(B, J).;true;true', '4;true,false;educationtype(A, E), educationtype(B, F).;true;true', '4;false,false,true;educationtype(B, I).;true;true', '4;false;educationtype(B, G), educationtype(A, G).;true;true', '5;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '5;false,false;educationtype(A, H).;true;true', '5;true;educationtype(B, D), educationtype(A, D).;true;true', '5;false,false,false;educationtype(B, J).;true;true', '5;true,false;educationtype(B, E), educationtype(A, F).;true;true', '5;false,false,true;educationtype(B, I).;true;true', '5;false;educationtype(B, G), educationtype(A, G).;true;true', '6;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '6;false,false;educationtype(A, H).;true;true', '6;true;educationtype(A, D), educationtype(B, D).;true;true', '6;false,false,false;educationtype(B, J).;true;true', '6;true,false;educationtype(B, E), educationtype(A, F).;true;true', '6;false,false,true;educationtype(B, I).;true;true', '6;false;educationtype(B, G), educationtype(A, G).;true;true', '7;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '7;false,false;educationtype(A, H).;true;true', '7;true;educationtype(A, D), educationtype(B, D).;true;true', '7;false,false,false;educationtype(B, J).;true;true', '7;true,false;educationtype(A, E), educationtype(B, F).;true;true', '7;false,false,true;educationtype(B, I).;true;true', '7;false;educationtype(A, G), educationtype(B, G).;true;true', '8;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '8;false,false;educationtype(A, H).;true;true', '8;true;educationtype(A, D), educationtype(B, D).;true;true', '8;false,false,false;educationtype(B, J).;true;true', '8;true,false;educationtype(A, E), educationtype(B, F).;true;true', '8;false,false,true;educationtype(B, I).;true;true', '8;false;educationtype(A, G), educationtype(B, G).;true;true', '9;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '9;false,false;educationtype(A, H).;true;true', '9;true;educationtype(B, D), educationtype(A, D).;true;true', '9;false,false,false;educationtype(B, J).;true;true', '9;true,false;educationtype(A, E), educationtype(B, F).;true;true', '9;false,false,true;educationtype(B, I).;true;true', '9;false;educationtype(B, G), educationtype(A, G).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( educationclasses(B, E) )
%   | | then return 0.6798049860549238;  // std dev = 0,383, 157,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=129 */
%   | | else if ( workstartdate(B, F), location(B, G) )
%   | | | then return 0.1642713840791042;  // std dev = 3,226, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.43785908002704427;  // std dev = 15,342, 966,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=560 */
%   | else return 0.058148935099512376;  // std dev = 0,400, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.21344305274656644;  // std dev = 0,479, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.10275325164627361;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.3918676248875613;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.36300920241420964;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.3515915580503271;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then if ( educationwith(B, E) )
%   | | then return 0.5687635609791395;  // std dev = 0,398, 182,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=145 */
%   | | else if ( educationconcentration(B, F), educationyear(B, G) )
%   | | | then return 0.4885325748437749;  // std dev = 5,608, 150,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=105 */
%   | | | else return 0.33766372022164437;  // std dev = 14,404, 840,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=454 */
%   | else return 0.050922032513554226;  // std dev = 0,400, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.18542525574870986;  // std dev = 0,479, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.0897791187829251;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.3371898928227817;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.312848493937955;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.303195993748621;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( educationwith(B, E), location(B, F) )
%   | | then return 0.5540577065176742;  // std dev = 0,281, 81,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=74 */
%   | | else if ( lastname(B, G) )
%   | | | then return 0.04223911265291254;  // std dev = 2,743, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.31205520226572864;  // std dev = 15,869, 1.054,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=619 */
%   | else return 0.0443462976046687;  // std dev = 0,400, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.15765752714453066;  // std dev = 0,479, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.07766381973004836;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.27849479836398283;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.2596165299252061;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.2520779878788801;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( firstname(B, E) )
%   | | then return 0.41791468346852706;  // std dev = 0,389, 126,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=102 */
%   | | else if ( languages(A, F), educationconcentration(A, G) )
%   | | | then return 0.40891969121027094;  // std dev = 3,500, 69,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=52 */
%   | | | else return 0.21866843537618016;  // std dev = 15,228, 977,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=550 */
%   | else return 0.03842866223690464;  // std dev = 0,400, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.13146228151510878;  // std dev = 0,479, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.06658192398551938;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.22207534379277272;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.20846561741115763;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.20297921431764002;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.19279125679054224;  // std dev = 0,477, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else return 0.03315494592188545;  // std dev = 0,400, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( educationtype(B, E), educationtype(A, E) )
%   | then if ( educationschool(A, F), lastname(B, G) )
%   | | then return -0.16749600169786408;  // std dev = 0,271, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | else if ( educationschool(A, H), educationwith(B, I) )
%   | | | then return 0.3874246332227702;  // std dev = 3,821, 63,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=40 */
%   | | | else return 0.10257184090729003;  // std dev = 12,949, 737,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=258 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return 0.05662927583058117;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.17256777603963294;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.16323507000730814;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.15944408405946817;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.1462502500438423;  // std dev = 0,477, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else return 0.02849510592572102;  // std dev = 0,400, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( educationtype(B, E), educationtype(A, E) )
%   | then if ( educationschool(A, F), educationwith(B, G) )
%   | | then if ( workenddate(A, H), languages(A, I) )
%   | | | then return -0.32638364024998645;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3632715321638068;  // std dev = 3,523, 58,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   | | else return 0.06896235746367325;  // std dev = 0,470, 787,000 (wgt'ed) examples reached here.  /* #neg=525 #pos=262 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return 0.047832269006089716;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.13187875873504398;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.12563199161234045;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.12309158687208768;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( hometown(B, E), location(B, F) )
%   | | then return 0.174605668411075;  // std dev = 0,442, 377,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=260 */
%   | | else if ( birthday(B, G), gender(B, H) )
%   | | | then return 0.12139735396411674;  // std dev = 10,090, 440,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=269 */
%   | | | else return 0.028433072666772044;  // std dev = 9,316, 355,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=175 */
%   | else return 0.024408230135271814;  // std dev = 0,400, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( educationtype(B, I), educationtype(A, I) )
%   | then return 0.06877052773119734;  // std dev = 0,472, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return 0.04016246332656669;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.09981111381161784;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.09564082475026282;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.09395958344497064;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( educationwith(B, E) )
%   | | then return 0.17476370826978457;  // std dev = 0,388, 182,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=145 */
%   | | else if ( firstname(B, F) )
%   | | | then return 0.20798200484626111;  // std dev = 3,950, 89,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=69 */
%   | | | else return 0.05253092652694107;  // std dev = 14,758, 901,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=490 */
%   | else return 0.02084688910874017;  // std dev = 0,400, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.054599045946471025;  // std dev = 0,472, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.03355265186906201;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.07515212995475551;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.0723342125273143;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.07122099420494842;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.0633617463527064;  // std dev = 0,474, 1.172,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=704 */
%   | else return 0.0177606715415984;  // std dev = 0,400, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then if ( workenddate(B, F), birthday(B, G) )
%   | | then return -0.18617839660328972;  // std dev = 0,333, 56,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=7 */
%   | | else if ( birthday(B, H), birthday(A, H) )
%   | | | then return 0.3548261466154353;  // std dev = 3,672, 63,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=43 */
%   | | | else return 0.03376320531320298;  // std dev = 12,659, 731,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=252 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.02791167812690424;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.05644366312203218;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.054500713345978766;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.0537572369688305;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then if ( location(A, E), workemployer(B, F) )
%   | | then return -0.45352378564441664;  // std dev = 0,094, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( hometown(B, G), location(B, H) )
%   | | | then return 0.11241035693486051;  // std dev = 8,361, 367,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=260 */
%   | | | else return 0.02882032015383189;  // std dev = 13,682, 788,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=444 */
%   | else return 0.015098879183171418;  // std dev = 0,400, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( educationtype(B, I), educationtype(A, I) )
%   | then return 0.03334090398183479;  // std dev = 0,467, 850,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=302 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return 0.023136585883939412;  // std dev = 5,068, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | | else return 0.042347557608783;  // std dev = 19,685, 1.557,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=831 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.040976592974907994;  // std dev = 20,285, 1.646,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=831 */
%   | | | else return 0.040473617337897866;  // std dev = 17,463, 1.220,000 (wgt'ed) examples reached here.  /* #neg=618 #pos=602 */


Results
   AUC ROC   = 0.606916
   AUC PR    = 0.583319
   CLL	      = -0.678072
   Precision = 0.562834 at threshold = 0.5
   Recall    = 0.352744
   F1        = 0.433685


Total learning time: 31.175 seconds
Total inference time: 4.856 seconds
AUC ROC: 0.606916


Refined model AUC ROC: 0.606916


Dataset: 48_twitter_facebook, Fold: 3, Type: Transfer (trRDN-B), Time: 01:39:12
{'Inference time': 4.856, 'parameter': {'Inference time': 3.71, 'F1': 0.609985, 'Precision': [0.613485, 0.5], 'CLL': -0.658691, 'AUC PR': 0.625508, 'Recall': 0.606525, 'AUC ROC': 0.656941, 'Learning time': 13.541}, 'F1': 0.433685, 'Precision': [0.562834, 0.5], 'CLL': -0.678072, 'AUC PR': 0.583319, 'Recall': 0.352744, 'AUC ROC': 0.606916, 'Learning time': 44.716}


Starting fold 4

Target train facts examples: 387
Target train pos examples: 540
Target train neg examples: 540

Target test facts examples: 6212
Target test pos examples: 12028
Target test neg examples: 12028

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false;tweets(A, I).;true;true
0;true;tweets(A, D), tweets(B, D).;false;true
0;false,false,false;tweets(B, K).;false;false
0;true,false;tweets(B, E), tweets(A, F).;false;true
0;true,false,false;tweets(B, G).;false;false
0;false,false,true;tweets(B, J).;false;false
0;false;tweets(B, H), tweets(A, H).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false;tweets(A, I).;true;true
1;true;tweets(B, D), tweets(A, D).;false;true
1;false,false,false;tweets(B, K).;false;false
1;true,false;tweets(A, E), tweets(B, F).;false;true
1;true,false,false;tweets(B, G).;false;false
1;false,false,true;tweets(B, J).;false;false
1;false;tweets(B, H), tweets(A, H).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false;tweets(A, I).;true;true
2;true;tweets(A, D), tweets(B, D).;false;true
2;false,false,false;tweets(B, K).;false;false
2;true,false;tweets(A, E), tweets(B, F).;false;true
2;true,false,false;tweets(B, G).;false;false
2;false,false,true;tweets(B, J).;false;false
2;false;tweets(B, H), tweets(A, H).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false;tweets(A, I).;true;true
3;true;tweets(A, D), tweets(B, D).;false;true
3;false,false,false;tweets(B, K).;false;false
3;true,false;tweets(A, E), tweets(B, F).;false;true
3;true,false,false;tweets(B, G).;false;false
3;false,false,true;tweets(B, J).;false;false
3;false;tweets(A, H), tweets(B, H).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false;tweets(A, I).;true;true
4;true;tweets(A, D), tweets(B, D).;false;true
4;false,false,false;tweets(B, K).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;true,false,false;tweets(B, G).;false;false
4;false,false,true;tweets(B, J).;false;false
4;false;tweets(B, H), tweets(A, H).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false;tweets(A, I).;true;true
5;true;tweets(B, D), tweets(A, D).;false;true
5;false,false,false;tweets(B, K).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;true,false,false;tweets(B, G).;false;false
5;false,false,true;tweets(B, J).;false;false
5;false;tweets(B, H), tweets(A, H).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false;tweets(A, I).;true;true
6;true;tweets(A, D), tweets(B, D).;false;true
6;false,false,false;tweets(B, K).;false;false
6;true,false;tweets(B, E), tweets(A, F).;false;true
6;true,false,false;tweets(B, G).;false;false
6;false,false,true;tweets(B, J).;false;false
6;false;tweets(B, H), tweets(A, H).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false;tweets(A, I).;true;true
7;true;tweets(A, D), tweets(B, D).;false;true
7;false,false,false;tweets(B, K).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;true,false,false;tweets(B, G).;false;false
7;false,false,true;tweets(B, J).;false;false
7;false;tweets(A, H), tweets(B, H).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false;tweets(A, I).;true;true
8;true;tweets(A, D), tweets(B, D).;false;true
8;false,false,false;tweets(B, K).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;true,false,false;tweets(B, G).;false;false
8;false,false,true;tweets(B, J).;false;false
8;false;tweets(A, H), tweets(B, H).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false;tweets(A, I).;true;true
9;true;tweets(B, D), tweets(A, D).;false;true
9;false,false,false;tweets(B, K).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;true,false,false;tweets(B, G).;false;false
9;false,false,true;tweets(B, J).;false;false
9;false;tweets(B, H), tweets(A, H).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(B, E), workemployer(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.024815601766178853;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.6399671169176928;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=86 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.21926004621062223;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.06953104892064986;  // std dev = 4,528, 123,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return 0.3690778968481416;  // std dev = 13,525, 732,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=374 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.021767884192405756;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.5431568716371943;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=86 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.19042039906299849;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.06085450823001123;  // std dev = 4,528, 123,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return 0.3179739112088822;  // std dev = 13,525, 732,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=374 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.019049872944810385;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.4313258949644823;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=86 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.16175436445386746;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.05290652342944244;  // std dev = 4,528, 123,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return 0.26360729864758636;  // std dev = 13,525, 732,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=374 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.01663677639228946;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.3280730784676113;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=86 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.13467846146323284;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.045722724938301255;  // std dev = 4,528, 123,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return 0.21135782327453026;  // std dev = 13,525, 732,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=374 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.014502864105143029;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.24624763238589353;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=86 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11022402229054186;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.0393061239982793;  // std dev = 4,528, 123,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return 0.16522635037945685;  // std dev = 13,525, 732,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=374 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(B, E), workemployer(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.01262239661487463;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.1858314718967864;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=86 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08894548363440968;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.03363396327242581;  // std dev = 4,528, 123,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return 0.1269649888201443;  // std dev = 13,525, 732,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=374 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(B, E), workemployer(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.010970321301480386;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.14199378346204963;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=86 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.20975771563253573;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07097379279038352;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.02866484366086588;  // std dev = 4,528, 123,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return 0.09652567574359289;  // std dev = 13,525, 732,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=374 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.009522764707203958;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.10996122184222776;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=86 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05614149923846934;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.024345284690148176;  // std dev = 4,528, 123,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return 0.07292480553817234;  // std dev = 13,525, 732,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=374 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.008257355496336034;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.08619173286518535;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=86 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.044113026182873986;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.020615249896484996;  // std dev = 4,528, 123,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return 0.05490038765690972;  // std dev = 13,525, 732,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=374 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.00715341198172996;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.06825585815212014;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=86 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.13400703000801117;  // std dev = 7,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03448594560819321;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.017412469387767075;  // std dev = 4,528, 123,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return 0.04125191975655411;  // std dev = 13,525, 732,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=374 */


Results
   AUC ROC   = 0.556783
   AUC PR    = 0.579752
   CLL	      = -0.736854
   Precision = 0.646926 at threshold = 0.5
   Recall    = 0.310609
   F1        = 0.419705


Total learning time: 3.74 seconds
Total inference time: 5.34 seconds
AUC ROC: 0.556783


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)', 'false,false,false': 'workemployer(B, K)', 'true,false': 'workemployer(B, E), workemployer(A, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.525, 358, 374], 'false,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 4], 'true,false,false,true': [1.291, 10, 2], 'false,false,true,false': [4.076, 46, 26], 'true,false,false,false': [4.332, 24, 86], 'false,true': [5.96e-08, 0, 22], 'false,false,false,true': [4.528, 97, 26]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(B, D), workemployer(A, D)', 'false,false,false': 'workemployer(B, K)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.525, 358, 374], 'false,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 4], 'true,false,false,true': [1.291, 10, 2], 'false,false,true,false': [4.076, 46, 26], 'true,false,false,false': [4.332, 24, 86], 'false,true': [7.3e-08, 0, 22], 'false,false,false,true': [4.528, 97, 26]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)', 'false,false,false': 'workemployer(B, K)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.525, 358, 374], 'false,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 4], 'true,false,false,true': [1.291, 10, 2], 'false,false,true,false': [4.076, 46, 26], 'true,false,false,false': [4.332, 24, 86], 'false,true': [0.0, 0, 22], 'false,false,false,true': [4.528, 97, 26]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)', 'false,false,false': 'workemployer(B, K)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.525, 358, 374], 'false,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 4], 'true,false,false,true': [1.291, 10, 2], 'false,false,true,false': [4.076, 46, 26], 'true,false,false,false': [4.332, 24, 86], 'false,true': [3.65e-08, 0, 22], 'false,false,false,true': [4.528, 97, 26]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)', 'false,false,false': 'workemployer(B, K)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.525, 358, 374], 'false,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 4], 'true,false,false,true': [1.291, 10, 2], 'false,false,true,false': [4.076, 46, 26], 'true,false,false,false': [4.332, 24, 86], 'false,true': [2.11e-08, 0, 22], 'false,false,false,true': [4.528, 97, 26]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(B, D), workemployer(A, D)', 'false,false,false': 'workemployer(B, K)', 'true,false': 'workemployer(B, E), workemployer(A, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.525, 358, 374], 'false,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 4], 'true,false,false,true': [1.291, 10, 2], 'false,false,true,false': [4.076, 46, 26], 'true,false,false,false': [4.332, 24, 86], 'false,true': [0.0, 0, 22], 'false,false,false,true': [4.528, 97, 26]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)', 'false,false,false': 'workemployer(B, K)', 'true,false': 'workemployer(B, E), workemployer(A, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.525, 358, 374], 'false,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 4], 'true,false,false,true': [1.291, 10, 2], 'false,false,true,false': [4.076, 46, 26], 'true,false,false,false': [4.332, 24, 86], 'false,true': [2.11e-08, 0, 22], 'false,false,false,true': [4.528, 97, 26]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)', 'false,false,false': 'workemployer(B, K)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.525, 358, 374], 'false,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 4], 'true,false,false,true': [1.291, 10, 2], 'false,false,true,false': [4.076, 46, 26], 'true,false,false,false': [4.332, 24, 86], 'false,true': [0.0, 0, 22], 'false,false,false,true': [4.528, 97, 26]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)', 'false,false,false': 'workemployer(B, K)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.525, 358, 374], 'false,false,true,true': [1.86e-09, 5, 0], 'true,true': [0.0, 0, 4], 'true,false,false,true': [1.291, 10, 2], 'false,false,true,false': [4.076, 46, 26], 'true,false,false,false': [4.332, 24, 86], 'false,true': [2.58e-08, 0, 22], 'false,false,false,true': [4.528, 97, 26]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(B, D), workemployer(A, D)', 'false,false,false': 'workemployer(B, K)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [13.525, 358, 374], 'false,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 4], 'true,false,false,true': [1.291, 10, 2], 'false,false,true,false': [4.076, 46, 26], 'true,false,false,false': [4.332, 24, 86], 'false,true': [7.45e-09, 0, 22], 'false,false,false,true': [4.528, 97, 26]}]]
[{'': [0.197026958931723, 0.24907594196784003], 'false,false': [0.22364648338674434, 0.24896549365615597], 'false,false,true': [-2.7755575615628915e-18, 0.23070987654321115], 'false,false,false': [0.1666997157776466, 0.24988055779508597], 'true': [0.0, 0.2010212308519231], 'true,false': [nan, 0.2010212308519227], 'true,false,false': [0.13888888888888892, 0.17057851239669566], 'false': [1.6148698540002277e-16, 0.2481580062259296]}, {'': [0.18708113533099816, 0.24385190097101148], 'false,false': [0.22178664453798239, 0.24605661413805532], 'false,false,true': [0.0, 0.2307098765432102], 'false,false,false': [0.16669971577764614, 0.2498805577950963], 'true': [0.0, 0.19157043256643627], 'true,false': [nan, 0.19157043256643633], 'true,false,false': [0.13888888888888887, 0.1705785123966928], 'false': [2.4223047810003414e-16, 0.24498657835815138]}, {'': [0.17757350419353285, 0.2389418281689109], 'false,false': [0.2202895721819332, 0.24338203649091603], 'false,false,true': [0.0, 0.23070987654321085], 'false,false,false': [0.1666997157776462, 0.24988055779509366], 'true': [0.0, 0.1825355666417434], 'true,false': [nan, 0.1825355666417434], 'true,false,false': [0.13888888888888892, 0.17057851239669572], 'false': [-2.8260222445003984e-16, 0.24207910737955818]}, {'': [0.1709172276804279, 0.23553404082037319], 'false,false': [0.21911837328682449, 0.24129319502474206], 'false,false,true': [0.0, 0.23070987654320937], 'false,false,false': [0.16669971577764559, 0.24988055779510032], 'true': [0.0, 0.17606336753745142], 'true,false': [nan, 0.17606336753745142], 'true,false,false': [0.13888888888888898, 0.17057851239669372], 'false': [6.055761952500853e-17, 0.23981361775104312]}, {'': [0.16704774862373767, 0.23348633671436522], 'false,false': [0.21822877688718673, 0.2398670683369065], 'false,false,true': [0.0, 0.2307098765432102], 'false,false,false': [0.16669971577764495, 0.24988055779509522], 'true': [0.0, 0.17222442968036955], 'true,false': [nan, 0.17222442968036955], 'true,false,false': [0.1388888888888889, 0.17057851239669372], 'false': [2.0185873175002847e-17, 0.23826932004892823]}, {'': [0.16495083469416624, 0.23231364717024477], 'false,false': [0.2175697820045932, 0.23898703372056176], 'false,false,true': [0.0, 0.23070987654321026], 'false,false,false': [0.1666997157776448, 0.24988055779510387], 'true': [0.0, 0.17012219808251747], 'true,false': [nan, 0.17012219808251747], 'true,false,false': [0.13888888888888884, 0.17057851239669428], 'false': [0.0, 0.23731526504035633]}, {'': [0.1638193539601153, 0.2316560634029507], 'false,false': [0.21709034189398363, 0.23848137289766497], 'false,false,true': [-1.3877787807814458e-18, 0.23070987654320982], 'false,false,false': [0.16669971577764484, 0.24988055779510063], 'true': [0.0, 0.16898398310784807], 'true,false': [nan, 0.16898398310784807], 'true,false,false': [0.1388888888888888, 0.1705785123966946], 'false': [2.0185873175002847e-17, 0.236763424313917]}, {'': [0.1631938282988183, 0.23129007337375812], 'false,false': [0.21674521530996252, 0.2382048544939459], 'false,false,true': [-6.938893903907229e-19, 0.23070987654321], 'false,false,false': [0.16669971577764559, 0.24988055779510154], 'true': [0.0, 0.16835615265678347], 'true,false': [nan, 0.16835615265678347], 'true,false,false': [0.13888888888888892, 0.1705785123966943], 'false': [-3.027880976250427e-17, 0.23645699718129565]}, {'': [0.16283613383893752, 0.2310847320374096], 'false,false': [0.21649773089186428, 0.23805896677781413], 'false,false,true': [6.938893903907229e-19, 0.23070987654320957], 'false,false,false': [0.16669971577764658, 0.24988055779509716], 'true': [0.0, 0.1680001573749743], 'true,false': [nan, 0.1680001573749743], 'true,false,false': [0.1388888888888888, 0.170578512396694], 'false': [3.027880976250427e-17, 0.2362907519667549]}, {'': [0.1626241520059737, 0.23096646217152364], 'false,false': [0.21631995032813198, 0.23798418756724418], 'false,false,true': [0.0, 0.2307098765432095], 'false,false,false': [0.16669971577764478, 0.24988055779509916], 'true': [0.0, 0.16779260961313733], 'true,false': [nan, 0.16779260961313736], 'true,false,false': [0.1388888888888889, 0.17057851239669417], 'false': [2.523234146875356e-18, 0.236201527325911]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '0;false,false;workemployer(A, I).;true;true', '0;true;workemployer(A, D), workemployer(B, D).;true;true', '0;false,false,true;workemployer(B, J).;true;true', '0;false;workemployer(B, H), workemployer(A, H).;true;true', '1;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '1;false,false;workemployer(A, I).;true;true', '1;true;workemployer(B, D), workemployer(A, D).;true;true', '1;false,false,true;workemployer(B, J).;true;true', '1;false;workemployer(B, H), workemployer(A, H).;true;true', '2;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '2;false,false;workemployer(A, I).;true;true', '2;true;workemployer(A, D), workemployer(B, D).;true;true', '2;false,false,true;workemployer(B, J).;true;true', '2;false;workemployer(B, H), workemployer(A, H).;true;true', '3;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '3;false,false;workemployer(A, I).;true;true', '3;true;workemployer(A, D), workemployer(B, D).;true;true', '3;false,false,true;workemployer(B, J).;true;true', '3;false;workemployer(A, H), workemployer(B, H).;true;true', '4;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '4;false,false;workemployer(A, I).;true;true', '4;true;workemployer(A, D), workemployer(B, D).;true;true', '4;false,false,true;workemployer(B, J).;true;true', '4;false;workemployer(B, H), workemployer(A, H).;true;true', '5;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '5;false,false;workemployer(A, I).;true;true', '5;true;workemployer(B, D), workemployer(A, D).;true;true', '5;false,false,true;workemployer(B, J).;true;true', '5;false;workemployer(B, H), workemployer(A, H).;true;true', '6;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '6;false,false;workemployer(A, I).;true;true', '6;true;workemployer(A, D), workemployer(B, D).;true;true', '6;false,false,true;workemployer(B, J).;true;true', '6;false;workemployer(B, H), workemployer(A, H).;true;true', '7;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '7;false,false;workemployer(A, I).;true;true', '7;true;workemployer(A, D), workemployer(B, D).;true;true', '7;false,false,true;workemployer(B, J).;true;true', '7;false;workemployer(A, H), workemployer(B, H).;true;true', '8;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '8;false,false;workemployer(A, I).;true;true', '8;true;workemployer(A, D), workemployer(B, D).;true;true', '8;false,false,true;workemployer(B, J).;true;true', '8;false;workemployer(A, H), workemployer(B, H).;true;true', '9;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '9;false,false;workemployer(A, I).;true;true', '9;true;workemployer(B, D), workemployer(A, D).;true;true', '9;false,false,true;workemployer(B, J).;true;true', '9;false;workemployer(B, H), workemployer(A, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( languages(A, E), hometown(B, F) )
%   | | then if ( location(B, G), hometown(A, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08891816586874296;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.6317338407598904;  // std dev = 0,419, 106,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=82 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.21926004621062223;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( educationyear(B, K), educationschool(A, L) )
%   | | | then return -0.024829788304743;  // std dev = 3,117, 94,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=11 */
%   | | | else return 0.3693184488971429;  // std dev = 13,790, 761,000 (wgt'ed) examples reached here.  /* #neg=372 #pos=389 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(B, E) )
%   | | then return -0.07050186044995187;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( educationyear(A, F), educationyear(B, F) )
%   | | | then return 0.3239474553038652;  // std dev = 2,456, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.6244361905423517;  // std dev = 3,125, 84,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=72 */
%   else if ( workemployer(B, G), workemployer(A, G) )
%   | then return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, H) )
%   | | then if ( workemployer(B, I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.19042039906299849;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( worklocation(B, J), locale(A, K) )
%   | | | then return -0.026375256460618036;  // std dev = 3,616, 110,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=16 */
%   | | | else return 0.3261497630141162;  // std dev = 13,585, 745,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=384 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationdegree(B, E), location(A, F) )
%   | | then return -0.28170913535171094;  // std dev = 0,156, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( languages(A, G), hometown(B, H) )
%   | | | then return 0.11397001235523113;  // std dev = 1,746, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.46983727119642194;  // std dev = 3,714, 101,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=82 */
%   else if ( workemployer(B, I), workemployer(A, I) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, J) )
%   | | then if ( workemployer(B, K) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.16175436445386746;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workemployer(B, L), locale(A, M) )
%   | | | then return -0.027049213750510667;  // std dev = 4,036, 117,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=20 */
%   | | | else return 0.274561238555003;  // std dev = 13,421, 738,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=380 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( languages(B, E), location(B, F) )
%   | | then if ( educationconcentration(A, G) )
%   | | | then return -0.38596967097392865;  // std dev = 0,140, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.20984029458852996;  // std dev = 0,848, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.33232965913121804;  // std dev = 0,373, 114,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=86 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.13467846146323284;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workenddate(B, K), locale(A, L) )
%   | | | then return 0.00495852210068057;  // std dev = 4,748, 140,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | | | else return 0.2235717343466389;  // std dev = 13,180, 715,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=368 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationclasses(B, E), location(B, F) )
%   | | then return 0.4514669303548985;  // std dev = 0,053, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( educationdegree(B, G), location(A, H) )
%   | | | then return -0.29180936958745574;  // std dev = 0,159, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.21820432207804596;  // std dev = 3,941, 101,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=72 */
%   else if ( workemployer(B, I), workemployer(A, I) )
%   | then return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, J) )
%   | | then if ( workemployer(B, K) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11022402229054186;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( educationschool(A, L), educationtype(B, M) )
%   | | | then return -0.06070709980909985;  // std dev = 4,022, 129,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=23 */
%   | | | else return 0.18460413390315308;  // std dev = 13,285, 726,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=377 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationconcentration(A, E), languages(B, F) )
%   | | then return -0.16237441991233137;  // std dev = 0,319, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( workemployer(B, G) )
%   | | | then return -0.1675619381686741;  // std dev = 1,196, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.23150448243752061;  // std dev = 3,491, 104,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=84 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08894548363440968;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( hometown(B, K), locale(A, L) )
%   | | | then return 0.31251803772113984;  // std dev = 4,900, 122,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=82 */
%   | | | else return 0.08050641797688272;  // std dev = 12,920, 733,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=318 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(B, E), location(A, F) )
%   | | then return -0.27833134593011405;  // std dev = 0,113, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( languages(A, G), hometown(B, H) )
%   | | | then return -0.08231135552141154;  // std dev = 1,671, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.19667256242501907;  // std dev = 3,271, 99,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=82 */
%   else if ( workemployer(B, I), workemployer(A, I) )
%   | then return 0.20975771563253573;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, J) )
%   | | then if ( workemployer(B, K) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07097379279038352;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( educationdegree(B, L) )
%   | | | then return -0.23511538131219034;  // std dev = 1,338, 45,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=2 */
%   | | | else return 0.10552118098276435;  // std dev = 13,673, 810,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=398 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( languages(B, E), hometown(A, F) )
%   | | then if ( hometown(B, F), location(A, G) )
%   | | | then return 0.2880818453282201;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2110783662243973;  // std dev = 1,151, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.13049037107337963;  // std dev = 0,340, 108,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=82 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05614149923846934;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( birthday(B, K), educationconcentration(B, L) )
%   | | | then return 0.5733864329648535;  // std dev = 0,197, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.05442048579986424;  // std dev = 13,647, 835,000 (wgt'ed) examples reached here.  /* #neg=455 #pos=380 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(B, E) )
%   | | then return -0.16358579022684563;  // std dev = 0,326, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( educationconcentration(A, F), location(B, G) )
%   | | | then return -0.13585786337240308;  // std dev = 1,370, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.13367825484290963;  // std dev = 3,164, 100,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=81 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.1527438580936709;  // std dev = 2,58e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.044113026182873986;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( hometown(B, K), locale(A, L) )
%   | | | then return 0.20011807245902535;  // std dev = 4,867, 122,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=82 */
%   | | | else return 0.02600385735443723;  // std dev = 12,735, 733,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=318 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( languages(B, E), location(B, F) )
%   | | then return -0.21413138053401046;  // std dev = 0,323, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( educationdegree(B, G), location(A, H) )
%   | | | then return -0.26488803639922304;  // std dev = 0,387, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10194435376422348;  // std dev = 3,447, 109,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=86 */
%   else if ( workemployer(B, I), workemployer(A, I) )
%   | then return 0.13400703000801117;  // std dev = 7,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( workemployer(A, J) )
%   | | then if ( workemployer(B, K) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03448594560819321;  // std dev = 4,076, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( workenddate(B, L), educationschool(A, M) )
%   | | | then return -0.20749906679407543;  // std dev = 0,460, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0.052951825039470775;  // std dev = 13,576, 808,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=400 */


Results
   AUC ROC   = 0.585695
   AUC PR    = 0.589894
   CLL	      = -0.708389
   Precision = 0.609723 at threshold = 0.5
   Recall    = 0.340954
   F1        = 0.437347


Total learning time: 8.648 seconds
Total inference time: 5.309 seconds
AUC ROC: 0.585695


Refined model AUC ROC: 0.585695


Dataset: 48_twitter_facebook, Fold: 4, Type: Transfer (trRDN-B), Time: 01:39:36
{'Inference time': 5.309, 'parameter': {'Inference time': 5.34, 'F1': 0.419705, 'Precision': [0.646926, 0.5], 'CLL': -0.736854, 'AUC PR': 0.579752, 'Recall': 0.310609, 'AUC ROC': 0.556783, 'Learning time': 3.74}, 'F1': 0.437347, 'Precision': [0.609723, 0.5], 'CLL': -0.708389, 'AUC PR': 0.589894, 'Recall': 0.340954, 'AUC ROC': 0.585695, 'Learning time': 12.388}


Starting fold 5

Target train facts examples: 354
Target train pos examples: 292
Target train neg examples: 292

Target test facts examples: 6245
Target test pos examples: 12276
Target test neg examples: 12276

******************************************
Performing Parameter Learning
******************************************
Refine
0;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
0;false,false;tweets(A, I).;true;true
0;true;tweets(A, D), tweets(B, D).;false;true
0;false,false,false;tweets(B, K).;false;false
0;true,false;tweets(B, E), tweets(A, F).;false;true
0;true,false,false;tweets(B, G).;false;false
0;false,false,true;tweets(B, J).;false;false
0;false;tweets(B, H), tweets(A, H).;false;true
1;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
1;false,false;tweets(A, I).;true;true
1;true;tweets(B, D), tweets(A, D).;false;true
1;false,false,false;tweets(B, K).;false;false
1;true,false;tweets(A, E), tweets(B, F).;false;true
1;true,false,false;tweets(B, G).;false;false
1;false,false,true;tweets(B, J).;false;false
1;false;tweets(B, H), tweets(A, H).;false;true
2;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
2;false,false;tweets(A, I).;true;true
2;true;tweets(A, D), tweets(B, D).;false;true
2;false,false,false;tweets(B, K).;false;false
2;true,false;tweets(A, E), tweets(B, F).;false;true
2;true,false,false;tweets(B, G).;false;false
2;false,false,true;tweets(B, J).;false;false
2;false;tweets(B, H), tweets(A, H).;false;true
3;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
3;false,false;tweets(A, I).;true;true
3;true;tweets(A, D), tweets(B, D).;false;true
3;false,false,false;tweets(B, K).;false;false
3;true,false;tweets(A, E), tweets(B, F).;false;true
3;true,false,false;tweets(B, G).;false;false
3;false,false,true;tweets(B, J).;false;false
3;false;tweets(A, H), tweets(B, H).;false;true
4;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
4;false,false;tweets(A, I).;true;true
4;true;tweets(A, D), tweets(B, D).;false;true
4;false,false,false;tweets(B, K).;false;false
4;true,false;tweets(A, E), tweets(B, F).;false;true
4;true,false,false;tweets(B, G).;false;false
4;false,false,true;tweets(B, J).;false;false
4;false;tweets(B, H), tweets(A, H).;false;true
5;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
5;false,false;tweets(A, I).;true;true
5;true;tweets(B, D), tweets(A, D).;false;true
5;false,false,false;tweets(B, K).;false;false
5;true,false;tweets(B, E), tweets(A, F).;false;true
5;true,false,false;tweets(B, G).;false;false
5;false,false,true;tweets(B, J).;false;false
5;false;tweets(B, H), tweets(A, H).;false;true
6;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
6;false,false;tweets(A, I).;true;true
6;true;tweets(A, D), tweets(B, D).;false;true
6;false,false,false;tweets(B, K).;false;false
6;true,false;tweets(B, E), tweets(A, F).;false;true
6;true,false,false;tweets(B, G).;false;false
6;false,false,true;tweets(B, J).;false;false
6;false;tweets(B, H), tweets(A, H).;false;true
7;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
7;false,false;tweets(A, I).;true;true
7;true;tweets(A, D), tweets(B, D).;false;true
7;false,false,false;tweets(B, K).;false;false
7;true,false;tweets(A, E), tweets(B, F).;false;true
7;true,false,false;tweets(B, G).;false;false
7;false,false,true;tweets(B, J).;false;false
7;false;tweets(A, H), tweets(B, H).;false;true
8;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
8;false,false;tweets(A, I).;true;true
8;true;tweets(A, D), tweets(B, D).;false;true
8;false,false,false;tweets(B, K).;false;false
8;true,false;tweets(A, E), tweets(B, F).;false;true
8;true,false,false;tweets(B, G).;false;false
8;false,false,true;tweets(B, J).;false;false
8;false;tweets(A, H), tweets(B, H).;false;true
9;;follows(A, B) :- accounttype(A, C), accounttype(B, C).;true;true
9;false,false;tweets(A, I).;true;true
9;true;tweets(B, D), tweets(A, D).;false;true
9;false,false,false;tweets(B, K).;false;false
9;true,false;tweets(A, E), tweets(B, F).;false;true
9;true,false,false;tweets(B, G).;false;false
9;false,false,true;tweets(B, J).;false;false
9;false;tweets(B, H), tweets(A, H).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.15444523139580865;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(B, E), workenddate(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.3232652141692792;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.4258572684328415;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.1308762078267851;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.13458565557492316;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.2791951618074636;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.36575698299059467;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19258789115538322;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.22373365448410584;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11418623766746577;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.11550108123653725;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.23320308622288505;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.30041245216240925;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16352953408429413;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.18886832215749735;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09835299714676636;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.09776004495422665;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.18910549066770257;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.23766151117800405;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(A, H), workenddate(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13606878407651105;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.1557002943717436;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.083737008556944;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.08174528456633041;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.14976766549032947;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.1831658824532;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11126948691064746;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.12582628229372092;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.070567101079104;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.06764857602187734;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(B, E), workenddate(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.11657636648133192;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.13900559287842149;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08970341513165919;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.10008916917880555;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.05894580121398791;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.0554991468130288;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(B, E), workenddate(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.0896618076900416;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.10467582951671268;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07150513066226619;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.07866279780602584;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.04887119706532142;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.045207726169895227;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.06841411303029142;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.07857274309915208;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(A, H), workenddate(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.056501932792643365;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.06127260860742234;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.04026567072126613;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.03661145778817555;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.051930532447925185;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.05893216908808563;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(A, H), workenddate(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04434895786191332;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.04741549148811429;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.03300409562448688;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.029511279088354138;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.03928511717803021;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.04421553624600128;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.034633754785669255;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.036517889972878755;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.026937337998768216;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */


Results
   AUC ROC   = 0.520813
   AUC PR    = 0.513165
   CLL	      = -0.743046
   Precision = 0.516216 at threshold = 0.5
   Recall    = 0.517351
   F1        = 0.516783


Total learning time: 2.665 seconds
Total inference time: 5.202 seconds
AUC ROC: 0.520813


Structure after Parameter Learning
[['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'false,false': 'workenddate(A, I)', 'true': 'workenddate(A, D), workenddate(B, D)', 'false,false,false': 'workenddate(B, K)', 'true,false': 'workenddate(B, E), workenddate(A, F)', 'true,false,false': 'workenddate(B, G)', 'false,false,true': 'workenddate(B, J)', 'false': 'workenddate(B, H), workenddate(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [3.618, 48, 18], 'false,false,true,true': [0.0, 0, 0], 'true,true': [2.373, 19, 8], 'true,false,false,true': [4.626, 46, 40], 'false,false,true,false': [1.595, 7, 4], 'true,false,false,false': [9.708, 166, 218], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.549, 6, 4]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'false,false': 'workenddate(A, I)', 'true': 'workenddate(B, D), workenddate(A, D)', 'false,false,false': 'workenddate(B, K)', 'true,false': 'workenddate(A, E), workenddate(B, F)', 'true,false,false': 'workenddate(B, G)', 'false,false,true': 'workenddate(B, J)', 'false': 'workenddate(B, H), workenddate(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [3.618, 48, 18], 'false,false,true,true': [0.0, 0, 0], 'true,true': [2.373, 19, 8], 'true,false,false,true': [4.626, 46, 40], 'false,false,true,false': [1.595, 7, 4], 'true,false,false,false': [9.708, 166, 218], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.549, 6, 4]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'false,false': 'workenddate(A, I)', 'true': 'workenddate(A, D), workenddate(B, D)', 'false,false,false': 'workenddate(B, K)', 'true,false': 'workenddate(A, E), workenddate(B, F)', 'true,false,false': 'workenddate(B, G)', 'false,false,true': 'workenddate(B, J)', 'false': 'workenddate(B, H), workenddate(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [3.618, 48, 18], 'false,false,true,true': [0.0, 0, 0], 'true,true': [2.373, 19, 8], 'true,false,false,true': [4.626, 46, 40], 'false,false,true,false': [1.595, 7, 4], 'true,false,false,false': [9.708, 166, 218], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.549, 6, 4]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'false,false': 'workenddate(A, I)', 'true': 'workenddate(A, D), workenddate(B, D)', 'false,false,false': 'workenddate(B, K)', 'true,false': 'workenddate(A, E), workenddate(B, F)', 'true,false,false': 'workenddate(B, G)', 'false,false,true': 'workenddate(B, J)', 'false': 'workenddate(A, H), workenddate(B, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [3.618, 48, 18], 'false,false,true,true': [0.0, 0, 0], 'true,true': [2.373, 19, 8], 'true,false,false,true': [4.626, 46, 40], 'false,false,true,false': [1.595, 7, 4], 'true,false,false,false': [9.708, 166, 218], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.549, 6, 4]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'false,false': 'workenddate(A, I)', 'true': 'workenddate(A, D), workenddate(B, D)', 'false,false,false': 'workenddate(B, K)', 'true,false': 'workenddate(A, E), workenddate(B, F)', 'true,false,false': 'workenddate(B, G)', 'false,false,true': 'workenddate(B, J)', 'false': 'workenddate(B, H), workenddate(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [3.618, 48, 18], 'false,false,true,true': [0.0, 0, 0], 'true,true': [2.373, 19, 8], 'true,false,false,true': [4.626, 46, 40], 'false,false,true,false': [1.595, 7, 4], 'true,false,false,false': [9.708, 166, 218], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.549, 6, 4]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'false,false': 'workenddate(A, I)', 'true': 'workenddate(B, D), workenddate(A, D)', 'false,false,false': 'workenddate(B, K)', 'true,false': 'workenddate(B, E), workenddate(A, F)', 'true,false,false': 'workenddate(B, G)', 'false,false,true': 'workenddate(B, J)', 'false': 'workenddate(B, H), workenddate(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [3.618, 48, 18], 'false,false,true,true': [0.0, 0, 0], 'true,true': [2.373, 19, 8], 'true,false,false,true': [4.626, 46, 40], 'false,false,true,false': [1.595, 7, 4], 'true,false,false,false': [9.708, 166, 218], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.549, 6, 4]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'false,false': 'workenddate(A, I)', 'true': 'workenddate(A, D), workenddate(B, D)', 'false,false,false': 'workenddate(B, K)', 'true,false': 'workenddate(B, E), workenddate(A, F)', 'true,false,false': 'workenddate(B, G)', 'false,false,true': 'workenddate(B, J)', 'false': 'workenddate(B, H), workenddate(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [3.618, 48, 18], 'false,false,true,true': [0.0, 0, 0], 'true,true': [2.373, 19, 8], 'true,false,false,true': [4.626, 46, 40], 'false,false,true,false': [1.595, 7, 4], 'true,false,false,false': [9.708, 166, 218], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.549, 6, 4]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'false,false': 'workenddate(A, I)', 'true': 'workenddate(A, D), workenddate(B, D)', 'false,false,false': 'workenddate(B, K)', 'true,false': 'workenddate(A, E), workenddate(B, F)', 'true,false,false': 'workenddate(B, G)', 'false,false,true': 'workenddate(B, J)', 'false': 'workenddate(A, H), workenddate(B, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [3.618, 48, 18], 'false,false,true,true': [0.0, 0, 0], 'true,true': [2.373, 19, 8], 'true,false,false,true': [4.626, 46, 40], 'false,false,true,false': [1.595, 7, 4], 'true,false,false,false': [9.708, 166, 218], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.549, 6, 4]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'false,false': 'workenddate(A, I)', 'true': 'workenddate(A, D), workenddate(B, D)', 'false,false,false': 'workenddate(B, K)', 'true,false': 'workenddate(A, E), workenddate(B, F)', 'true,false,false': 'workenddate(B, G)', 'false,false,true': 'workenddate(B, J)', 'false': 'workenddate(A, H), workenddate(B, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [3.618, 48, 18], 'false,false,true,true': [0.0, 0, 0], 'true,true': [2.373, 19, 8], 'true,false,false,true': [4.626, 46, 40], 'false,false,true,false': [1.595, 7, 4], 'true,false,false,false': [9.708, 166, 218], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.549, 6, 4]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'false,false': 'workenddate(A, I)', 'true': 'workenddate(B, D), workenddate(A, D)', 'false,false,false': 'workenddate(B, K)', 'true,false': 'workenddate(A, E), workenddate(B, F)', 'true,false,false': 'workenddate(B, G)', 'false,false,true': 'workenddate(B, J)', 'false': 'workenddate(B, H), workenddate(A, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [3.618, 48, 18], 'false,false,true,true': [0.0, 0, 0], 'true,true': [2.373, 19, 8], 'true,false,false,true': [4.626, 46, 40], 'false,false,true,false': [1.595, 7, 4], 'true,false,false,false': [9.708, 166, 218], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.549, 6, 4]}]]
[{'': [0.24876016663360742, 0.20953890870656577], 'false,false': [0.2314049586776858, 0.20567867036011173], 'true': [0.2085048010973938, 0.2476052512449106], 'false,false,false': [0.23999999999999985, 0.198347107438016], 'true,false': [nan, 0.2476052512449105], 'true,false,false': [0.24878312601406283, 0.2454155815972261], 'false,false,true': [nan, 0.2314049586776858], 'false': [nan, 0.20953890870656708]}, {'': [0.2474345454031553, 0.20896463914745086], 'false,false': [0.23140495867768582, 0.20519901506573476], 'true': [0.2085048010973939, 0.24715194777811064], 'false,false,false': [0.2399999999999999, 0.19834710743801706], 'true,false': [nan, 0.24715194777810892], 'true,false,false': [0.24878312601406097, 0.24541558159722512], 'false,false,true': [nan, 0.23140495867768582], 'false': [nan, 0.20896463914745061]}, {'': [0.24616242003009012, 0.20844572498170189], 'false,false': [0.23140495867768607, 0.20476393469353843], 'true': [0.20850480109739344, 0.24670706560994785], 'false,false,false': [0.23999999999999985, 0.1983471074380169], 'true,false': [nan, 0.24670706560994785], 'true,false,false': [0.2487831260140606, 0.2454155815972224], 'false,false,true': [nan, 0.23140495867768607], 'false': [nan, 0.20844572498170164]}, {'': [0.24520826801206486, 0.20803437915338882], 'false,false': [0.2314049586776861, 0.20441950181484891], 'true': [0.2085048010973938, 0.246384238931021], 'false,false,false': [0.24, 0.1983471074380171], 'true,false': [nan, 0.246384238931021], 'true,false,false': [0.2487831260140613, 0.2454155815972172], 'false,false,true': [nan, 0.2314049586776861], 'false': [nan, 0.208034379153389]}, {'': [0.24461746012147725, 0.20774277434608823], 'false,false': [0.23140495867768598, 0.20417667101812814], 'true': [0.20850480109739372, 0.24619852621237528], 'false,false,false': [0.2399999999999999, 0.19834710743801656], 'true,false': [nan, 0.24619852621237528], 'true,false,false': [0.24878312601406138, 0.24541558159721863], 'false,false,true': [nan, 0.23140495867768598], 'false': [nan, 0.20774277434608832]}, {'': [0.2442965695054888, 0.20755443947711222], 'false,false': [0.23140495867768596, 0.20402117789979837], 'true': [0.2085048010973938, 0.24610697831748557], 'false,false,false': [0.24000000000000005, 0.19834710743801703], 'true,false': [nan, 0.24610697831748557], 'true,false,false': [0.2487831260140618, 0.24541558159721846], 'false,false,true': [nan, 0.23140495867768596], 'false': [nan, 0.20755443947711236]}, {'': [0.24413569911384458, 0.20744179866462814], 'false,false': [0.2314049586776859, 0.20392916671786535], 'true': [0.2085048010973938, 0.24606547043165272], 'false,false,false': [0.24, 0.1983471074380169], 'true,false': [nan, 0.24606547043165336], 'true,false,false': [0.24878312601406236, 0.245415581597223], 'false,false,true': [nan, 0.2314049586776859], 'false': [nan, 0.2074417986646282]}, {'': [0.24405866834521192, 0.20737862037355684], 'false,false': [0.23140495867768582, 0.20387817577199852], 'true': [0.20850480109739347, 0.24604719838452796], 'false,false,false': [0.23999999999999994, 0.19834710743801642], 'true,false': [nan, 0.24604719838452796], 'true,false,false': [0.24878312601406205, 0.24541558159722157], 'false,false,true': [nan, 0.23140495867768582], 'false': [nan, 0.2073786203735568]}, {'': [0.24402275441352195, 0.20734511633556163], 'false,false': [0.23140495867768587, 0.20385148289601424], 'true': [0.20850480109739347, 0.24603909937945231], 'false,false,false': [0.23999999999999994, 0.19834710743801653], 'true,false': [nan, 0.24603909937945231], 'true,false,false': [0.24878312601406213, 0.24541558159722085], 'false,false,true': [nan, 0.23140495867768587], 'false': [nan, 0.2073451163355616]}, {'': [0.24400630556354205, 0.207328261428411], 'false,false': [0.23140495867768598, 0.2038382393201763], 'true': [0.20850480109739364, 0.2460354047154087], 'false,false,false': [0.24, 0.198347107438017], 'true,false': [nan, 0.246035404715409], 'true,false,false': [0.24878312601406097, 0.24541558159722146], 'false,false,true': [nan, 0.23140495867768598], 'false': [nan, 0.20732826142841118]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '0;false,false;workenddate(A, I).;true;true', '0;true;workenddate(A, D), workenddate(B, D).;true;true', '0;false,false,false;workenddate(B, K).;true;true', '0;true,false;workenddate(B, E), workenddate(A, F).;true;true', '0;true,false,false;workenddate(B, G).;true;true', '0;false,false,true;workenddate(B, J).;true;true', '0;false;workenddate(B, H), workenddate(A, H).;true;true', '1;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '1;false,false;workenddate(A, I).;true;true', '1;true;workenddate(B, D), workenddate(A, D).;true;true', '1;false,false,false;workenddate(B, K).;true;true', '1;true,false;workenddate(A, E), workenddate(B, F).;true;true', '1;true,false,false;workenddate(B, G).;true;true', '1;false,false,true;workenddate(B, J).;true;true', '1;false;workenddate(B, H), workenddate(A, H).;true;true', '2;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '2;false,false;workenddate(A, I).;true;true', '2;true;workenddate(A, D), workenddate(B, D).;true;true', '2;false,false,false;workenddate(B, K).;true;true', '2;true,false;workenddate(A, E), workenddate(B, F).;true;true', '2;true,false,false;workenddate(B, G).;true;true', '2;false,false,true;workenddate(B, J).;true;true', '2;false;workenddate(B, H), workenddate(A, H).;true;true', '3;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '3;false,false;workenddate(A, I).;true;true', '3;true;workenddate(A, D), workenddate(B, D).;true;true', '3;false,false,false;workenddate(B, K).;true;true', '3;true,false;workenddate(A, E), workenddate(B, F).;true;true', '3;true,false,false;workenddate(B, G).;true;true', '3;false,false,true;workenddate(B, J).;true;true', '3;false;workenddate(A, H), workenddate(B, H).;true;true', '4;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '4;false,false;workenddate(A, I).;true;true', '4;true;workenddate(A, D), workenddate(B, D).;true;true', '4;false,false,false;workenddate(B, K).;true;true', '4;true,false;workenddate(A, E), workenddate(B, F).;true;true', '4;true,false,false;workenddate(B, G).;true;true', '4;false,false,true;workenddate(B, J).;true;true', '4;false;workenddate(B, H), workenddate(A, H).;true;true', '5;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '5;false,false;workenddate(A, I).;true;true', '5;true;workenddate(B, D), workenddate(A, D).;true;true', '5;false,false,false;workenddate(B, K).;true;true', '5;true,false;workenddate(B, E), workenddate(A, F).;true;true', '5;true,false,false;workenddate(B, G).;true;true', '5;false,false,true;workenddate(B, J).;true;true', '5;false;workenddate(B, H), workenddate(A, H).;true;true', '6;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '6;false,false;workenddate(A, I).;true;true', '6;true;workenddate(A, D), workenddate(B, D).;true;true', '6;false,false,false;workenddate(B, K).;true;true', '6;true,false;workenddate(B, E), workenddate(A, F).;true;true', '6;true,false,false;workenddate(B, G).;true;true', '6;false,false,true;workenddate(B, J).;true;true', '6;false;workenddate(B, H), workenddate(A, H).;true;true', '7;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '7;false,false;workenddate(A, I).;true;true', '7;true;workenddate(A, D), workenddate(B, D).;true;true', '7;false,false,false;workenddate(B, K).;true;true', '7;true,false;workenddate(A, E), workenddate(B, F).;true;true', '7;true,false,false;workenddate(B, G).;true;true', '7;false,false,true;workenddate(B, J).;true;true', '7;false;workenddate(A, H), workenddate(B, H).;true;true', '8;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '8;false,false;workenddate(A, I).;true;true', '8;true;workenddate(A, D), workenddate(B, D).;true;true', '8;false,false,false;workenddate(B, K).;true;true', '8;true,false;workenddate(A, E), workenddate(B, F).;true;true', '8;true,false,false;workenddate(B, G).;true;true', '8;false,false,true;workenddate(B, J).;true;true', '8;false;workenddate(A, H), workenddate(B, H).;true;true', '9;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '9;false,false;workenddate(A, I).;true;true', '9;true;workenddate(B, D), workenddate(A, D).;true;true', '9;false,false,false;workenddate(B, K).;true;true', '9;true,false;workenddate(A, E), workenddate(B, F).;true;true', '9;true,false,false;workenddate(B, G).;true;true', '9;false,false,true;workenddate(B, J).;true;true', '9;false;workenddate(B, H), workenddate(A, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then if ( location(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.2391013160518933;  // std dev = 0,486, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( workenddate(B, F), workenddate(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, H) )
%   | | | then return 0.3232652141692792;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.4258572684328415;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, I), workenddate(A, I) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, J) )
%   | | then if ( workenddate(B, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.14762261931003814;  // std dev = 0,454, 76,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.13346147586806087;  // std dev = 0,450, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.2791951618074636;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.36575698299059467;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19258789115538322;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.23921210139999718;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11193937412727029;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.1145014163837477;  // std dev = 0,449, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.23320308622288505;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.30041245216240925;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16352953408429413;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.20426471128799112;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09625566219156449;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.09690714678051728;  // std dev = 0,449, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.18910549066770257;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.23766151117800405;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(A, H), workenddate(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13606878407651105;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.17010435941441376;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.08182874876046431;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.08104511912325624;  // std dev = 0,449, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.14976766549032947;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.1831658824532;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11126948691064746;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.13861766694375838;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06886922513350033;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.06709411982239041;  // std dev = 0,448, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(B, E), workenddate(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.11657636648133192;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.13900559287842149;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08970341513165919;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.11098619160575404;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.057463643828106856;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.055074914517295286;  // std dev = 0,448, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(B, E), workenddate(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.0896618076900416;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.10467582951671268;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07150513066226619;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.08765788617223551;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.047597877433973444;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.04489406993537027;  // std dev = 0,448, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.06841411303029142;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.07857274309915208;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(A, H), workenddate(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.056501932792643365;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.06852789471591567;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.03918614613570281;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.03638787030248827;  // std dev = 0,447, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.051930532447925185;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.05893216908808563;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(A, H), workenddate(B, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04434895786191332;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.05317087969643615;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.03209874276112395;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.029358527390525854;  // std dev = 0,447, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.03928511717803021;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.04421553624600128;  // std dev = 9,708, 384,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=218 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.034633754785669255;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.041029597603937325;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.026184724375480976;  // std dev = 3,618, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */


Results
   AUC ROC   = 0.51589
   AUC PR    = 0.511653
   CLL	      = -0.745551
   Precision = 0.516216 at threshold = 0.5
   Recall    = 0.517351
   F1        = 0.516783


Total learning time: 3.158 seconds
Total inference time: 5.444 seconds
AUC ROC: 0.51589


Refined model AUC ROC: 0.51589


Dataset: 48_twitter_facebook, Fold: 5, Type: Transfer (trRDN-B), Time: 01:39:53
{'Inference time': 5.444, 'parameter': {'Inference time': 5.202, 'F1': 0.516783, 'Precision': [0.516216, 0.5], 'CLL': -0.743046, 'AUC PR': 0.513165, 'Recall': 0.517351, 'AUC ROC': 0.520813, 'Learning time': 2.665}, 'F1': 0.516783, 'Precision': [0.516216, 0.5], 'CLL': -0.745551, 'AUC PR': 0.511653, 'Recall': 0.517351, 'AUC ROC': 0.51589, 'Learning time': 5.823}


