Starting experiment #4 for 13_uwcse_cora

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), ta(L, K, M) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(N, B) )
%   | | | then return 0.7734031723876481;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 7,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.5261862825807958;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.730924492272118;  // std dev = 0,069, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109543;  // std dev = 4,21e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | | then return 0.36908066213317675;  // std dev = 1,530, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.6022753891158077;  // std dev = 2,439, 50,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   else return -0.12544463852839158;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(G, A, H), ta(E, I, H) )
%   | | then if ( samecourse(E, G) )
%   | | | then return 0.4104895662080564;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5677737253651356;  // std dev = 0,032, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5664761949594002;  // std dev = 0,080, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | then if ( publication(J, B) )
%   | | | then return 0.5081090089455164;  // std dev = 0,915, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3024623706773498;  // std dev = 1,492, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( hasposition(L, C), tempadvisedby(M, L) )
%   | | | then return 0.5171363622026371;  // std dev = 1,893, 50,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return 0.41333218051658055;  // std dev = 1,254, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( student(B) )
%   | then return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.06665108093539125;  // std dev = 0,234, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.48329352733366343;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | | then return 0.3707852610466292;  // std dev = 0,910, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.42315018290501005;  // std dev = 0,050, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.17621191375571715;  // std dev = 1,780, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.5323405353860747;  // std dev = 0,145, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.40002055430815797;  // std dev = 1,324, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return 0.3525662203675458;  // std dev = 1,769, 27,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   else return -0.10198219881178268;  // std dev = 0,012, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( publication(G, A), ta(H, A, I) )
%   | | then return 0.3660000452825029;  // std dev = 0,040, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( ta(J, A, K), ta(J, L, F) )
%   | | | then return 0.24587941364586394;  // std dev = 0,876, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.32968272317875047;  // std dev = 0,086, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( tempadvisedby(M, B), publication(N, B) )
%   | | then if ( publication(N, A), publication(P, M) )
%   | | | then return 0.35770551137544493;  // std dev = 0,076, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19789318861821914;  // std dev = 1,749, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | else if ( tempadvisedby(Q, B) )
%   | | | then return 0.377855286991756;  // std dev = 0,699, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.28302995021367827;  // std dev = 2,031, 48,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=43 */
%   else if ( professor(B) )
%   | then return -0.06616976182491295;  // std dev = 0,223, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.09265882983204124;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.28264400032053766;  // std dev = 0,097, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15451924006266962;  // std dev = 0,869, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.26278705214515824;  // std dev = 0,081, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then return 0.07232435097808229;  // std dev = 0,823, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(K, A, L), tempadvisedby(M, B) )
%   | | | then return 0.2869839530451571;  // std dev = 0,988, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.19074983393190856;  // std dev = 2,536, 59,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=49 */
%   else return -0.08568376642463045;  // std dev = 0,017, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( ta(H, G, I) )
%   | | | then return 0.22929772805262605;  // std dev = 0,084, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.12013508476619197;  // std dev = 0,870, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.21516918644448454;  // std dev = 0,070, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(J, A) )
%   | | then if ( hasposition(K, C), publication(J, K) )
%   | | | then return -0.04566891195906231;  // std dev = 1,583, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.31358555344122796;  // std dev = 0,155, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( hasposition(L, C), tempadvisedby(M, L) )
%   | | | then return 0.2097529367965169;  // std dev = 1,647, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | | else return 0.03470559537984271;  // std dev = 1,192, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( student(B) )
%   | then return -0.078714914680283;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.061566071641462196;  // std dev = 0,218, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( projectmember(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.20599384029036047;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.22490103500672717;  // std dev = 0,671, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(G, B), publication(G, A) )
%   | | then if ( publication(G, H), tempadvisedby(H, I) )
%   | | | then return 0.21737652289312012;  // std dev = 0,089, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16781072853623505;  // std dev = 0,887, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | | then return 0.013382748536399376;  // std dev = 1,027, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.1362781891104892;  // std dev = 2,483, 67,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=59 */
%   else return -0.0737647245689902;  // std dev = 0,018, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(E, A, G) )
%   | | then return 0.01098709918352887;  // std dev = 0,870, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1667533585565565;  // std dev = 0,142, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( ta(H, A, I) )
%   | | then if ( ta(H, J, K), tempadvisedby(J, L) )
%   | | | then return 0.2295989465664031;  // std dev = 0,106, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.0884152439400209;  // std dev = 1,687, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else if ( publication(M, B), publication(M, A) )
%   | | | then return 0.1635857547188915;  // std dev = 0,033, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.05170863478923596;  // std dev = 2,012, 32,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   else if ( professor(B) )
%   | then if ( publication(N, B) )
%   | | then return -0.0742536523837012;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.010570185993090767;  // std dev = 0,711, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06834357696033072;  // std dev = 3,57e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G), ta(F, H, E) )
%   | | then if ( samecourse(D, F) )
%   | | | then return 0.00916752515827841;  // std dev = 0,870, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14721469443219987;  // std dev = 0,052, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.14405210703585836;  // std dev = 0,116, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(I, B), tempadvisedby(J, B) )
%   | | then if ( ta(K, A, L) )
%   | | | then return 0.11289817960594808;  // std dev = 1,169, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.013735569381321344;  // std dev = 1,144, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.12079992259543153;  // std dev = 1,586, 42,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return 0.06084653496398831;  // std dev = 1,532, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.06463270114613354;  // std dev = 0,017, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */


Starting fold 1

Target train facts examples: 7254
Target train pos examples: 209
Target train neg examples: 16

Target test facts examples: 34492
Target test pos examples: 603
Target test neg examples: 58

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;publication(I, K), ta(L, K, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false,false;publication(N, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true,false,true;tempadvisedby(H, B), ta(I, A, J).;false;false
1;true,true;ta(D, A, F).;false;false
1;true,false;publication(G, A), publication(G, B).;true;true
1;true,false,false;tempadvisedby(K, B), publication(L, A).;false;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;publication(J, B).;false;false
2;false;student(B).;false;false
2;true,true;ta(G, A, H), ta(E, I, H).;true;false
2;true,true,true;samecourse(E, G).;false;false
2;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
2;true;tempadvisedby(D, B), ta(E, D, F).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,true;tempadvisedby(D, B), publication(C, D).;false;true
3;true,false;publication(H, A).;true;true
3;true,false,false;tempadvisedby(J, B).;false;false
3;true,true,false;ta(E, A, F), tempadvisedby(G, B).;false;false
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,false,true;publication(N, A), publication(P, M).;false;false
4;false;professor(B).;false;false
4;true,true;publication(G, A), ta(H, A, I).;false;true
4;true,false;tempadvisedby(M, B), publication(N, B).;true;true
4;true,false,false;tempadvisedby(Q, B).;false;false
4;true,true,false;ta(J, A, K), ta(J, L, F).;false;false
4;true;tempadvisedby(D, B), ta(E, D, F).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false;tempadvisedby(I, B), publication(J, I).;false;true
5;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
5;true,true,true;ta(G, D, H).;false;false
5;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;publication(J, A).;true;true
6;true,false,true;hasposition(K, C), publication(J, K).;false;false
6;false;student(B).;false;false
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;ta(H, G, I).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;true;publication(D, A), publication(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
7;true,false;publication(G, B), publication(G, A).;true;true
7;true,false,false;publication(J, A), tempadvisedby(K, B).;false;false
7;true;projectmember(C, B).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
8;false;professor(B).;true;false
8;true,true;ta(E, A, G).;false;false
8;true,false;ta(H, A, I).;true;true
8;true,false,false;publication(M, B), publication(M, A).;false;false
8;false,true;publication(N, B).;false;false
8;true;tempadvisedby(D, B), ta(E, D, F).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;publication(I, B), tempadvisedby(J, B).;true;true
9;true,false,true;ta(K, A, L).;false;false
9;true,true;ta(F, A, G), ta(F, H, E).;true;false
9;true,true,true;samecourse(D, F).;false;false
9;true,false,false;publication(M, B).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0.8581489350995118;  // std dev = 3,65e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( author(D, A) )
%   | then if ( author(D, E) )
%   | | then return 0.7702368471874215;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( author(D, A) )
%   | then return 0.6489578875773111;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( sametitle(D, E) )
%   | then return 0.5155600307274352;  // std dev = 3,831, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then if ( author(C, D) )
%   | then return 0.42722494735728456;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then if ( author(E, F) )
%   | | then return 0.37845010729489653;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( author(D, A) )
%   | then return 0.29432258665849304;  // std dev = 3,828, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.2660552201759684;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( author(D, E) )
%   | then return 0.22050554130972005;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( author(D, A), author(D, B) )
%   | then return 0.2174166063391729;  // std dev = 9,13e-09, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( author(E, A) )
%   | | then if ( author(C, F), author(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1755535377574608;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then return 0.15052585578102076;  // std dev = 0,255, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( author(D, B), author(D, A) )
%   | then return 0.1612809929972183;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.11728677094306039;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=166 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( sametitle(C, D) )
%   then return 0.10681005431565084;  // std dev = 3,828, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.608624
   AUC PR    = 0.948609
   CLL	      = -0.316091
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 2.875 seconds
Total inference time: 3.628 seconds
AUC ROC: 0.608624


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, A)', 'false,true': 'author(D, E)'}, {'true': [3.65e-08, 0, 43], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [3.82, 16, 166]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true': [3.82, 16, 166], 'true': [0.0, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'sametitle(D, E)'}, {'true,true': [3.831, 16, 209], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(E, A)', 'false,true': 'author(E, F)', 'true': 'author(C, D)'}, {'true,true': [0.0, 0, 43], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [3.82, 16, 166], 'false,false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'author(D, A)'}, {'true,true': [3.828, 16, 209], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, E)'}, {'false,false': [0.0, 0, 0], 'false,true': [3.82, 16, 166], 'true': [1.05e-08, 0, 43]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true,false': 'author(E, A)', 'true,false,true': 'author(C, F), author(E, F)', 'true': 'author(D, A), author(D, B)'}, {'true,false,true,false': [3.82, 16, 166], 'true,true': [9.13e-09, 0, 43], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, B)'}, {'false': [0.0, 0, 0], 'true': [0.255, 16, 209]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'author(D, B), author(D, A)'}, {'true,true': [0.0, 0, 43], 'true,false': [3.82, 16, 166], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'sametitle(C, D)'}, {'false': [0.0, 0, 0], 'true': [3.828, 16, 209]}]]
[{'': [1.2393187251629655e-15, 0.08018355271103159], 'false': [0.08018355271103159, nan], 'false,true': [0.08018355271103159, nan]}, {'': [-9.914549801303723e-16, 0.08018355271102807], 'false': [0.08018355271102807, nan]}, {'': [0.06523395655346617, nan], 'true': [0.06523395655346617, nan]}, {'': [-1.2393187251629654e-16, 0.08018355271102624], 'false': [0.08018355271102624, nan], 'false,true': [0.08018355271102624, nan], 'true': [-1.2393187251629654e-16, nan]}, {'': [0.06511657530885614, nan], 'true': [0.06511657530885614, nan]}, {'': [1.0327656043024712e-16, 0.08018355271102591], 'false': [0.08018355271102591, nan]}, {'': [0.06513050227619151, nan], 'true,false': [0.08018355271102555, nan], 'true,false,true': [nan, 0.08018355271102555], 'true': [7.229359230117299e-17, 0.08018355271102555]}, {'': [0.06510406628942225, nan]}, {'': [0.06515878796199083, nan], 'true': [-2.581914010756178e-17, 0.08018355271102527]}, {'': [0.06512993393972946, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- author(C, B), author(C, A).;true;true
1;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
3;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
5;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
6;;sameauthor(A, B) :- author(D, A), author(D, B).;true;true
8;;sameauthor(A, B) :- author(D, B), author(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0.8581489350995118;  // std dev = 2,31e-07, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5724346493852267;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.8581489350995112;  // std dev = 4,62e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.5031309191368428;  // std dev = 0,440, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7194734122109546;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( author(E, A), title(E, D) )
%   | then return 0.6144745987055971;  // std dev = 0,059, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordauthor(B, C) )
%   | | then if ( author(F, B), title(F, D) )
%   | | | then return 0.607954024883087;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4104730373899391;  // std dev = 3,394, 68,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=52 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.4300952027921779;  // std dev = 0,118, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.45779221844553364;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2885383536771172;  // std dev = 3,365, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.4159245865543332;  // std dev = 0,019, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.4175135841583097;  // std dev = 2,73e-07, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( author(E, B), title(E, D) )
%   | | then return 0.3338896196574794;  // std dev = 0,050, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.24660368952656608;  // std dev = 0,400, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return 0.3196419110433728;  // std dev = 0,017, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.3201818523794778;  // std dev = 0,012, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.2684276882867174;  // std dev = 0,142, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.39527736011823567;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14719814479562773;  // std dev = 3,339, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.2544462195173489;  // std dev = 0,015, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.2552729861130449;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.21918195399162677;  // std dev = 0,124, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( author(F, A), title(F, E) )
%   | | then return 0.2706675404583578;  // std dev = 0,121, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.1117392394116817;  // std dev = 3,340, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return 0.21031935534255658;  // std dev = 1,49e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.2098288769317448;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( author(E, A), title(E, D) )
%   | then return 0.2063773860064516;  // std dev = 0,045, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordauthor(B, C) )
%   | | then if ( author(F, B), title(F, D) )
%   | | | then return 0.22796230302611353;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10534269718525208;  // std dev = 3,360, 68,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=52 */
%   | | else return 0.1775083243093234;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return 0.17616863734800117;  // std dev = 0,023, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0.16286593781291864;  // std dev = 0,132, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.2145853055980924;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06000997531907359;  // std dev = 3,339, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return 0.1510279118784461;  // std dev = 0,024, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.1529103513307661;  // std dev = 8,94e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then return 0.13320135198586505;  // std dev = 0,009, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | then if ( haswordauthor(B, E) )
%   | | then if ( author(G, B), title(G, F) )
%   | | | then return 0.16012470792120426;  // std dev = 0,073, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07295849947480113;  // std dev = 3,366, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.13267020879222757;  // std dev = 0,022, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.13312702518188083;  // std dev = 0,021, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */


Results
   AUC ROC   = 0.556299
   AUC PR    = 0.936963
   CLL	      = -0.362429
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 5.244 seconds
Total inference time: 2.8 seconds
AUC ROC: 0.556299


Refined model AUC ROC: 0.556299


Dataset: 13_uwcse_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 05:09:08
{'Recall': 1.0, 'Learning time': 8.119, 'F1': 0.954114, 'Precision': [0.912254, 0.5], 'AUC PR': 0.936963, 'CLL': -0.362429, 'parameter': {'Recall': 1.0, 'Learning time': 2.875, 'F1': 0.954114, 'Precision': [0.912254, 0.5], 'AUC PR': 0.948609, 'CLL': -0.316091, 'AUC ROC': 0.608624, 'Inference time': 3.628}, 'AUC ROC': 0.556299, 'Inference time': 2.8}


Starting fold 2

Target train facts examples: 8894
Target train pos examples: 122
Target train neg examples: 20

Target test facts examples: 32852
Target test pos examples: 690
Target test neg examples: 54

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;publication(I, K), ta(L, K, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false,false;publication(N, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true,false,true;tempadvisedby(H, B), ta(I, A, J).;false;false
1;true,true;ta(D, A, F).;false;false
1;true,false;publication(G, A), publication(G, B).;true;true
1;true,false,false;tempadvisedby(K, B), publication(L, A).;false;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;publication(J, B).;false;false
2;false;student(B).;false;false
2;true,true;ta(G, A, H), ta(E, I, H).;true;false
2;true,true,true;samecourse(E, G).;false;false
2;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
2;true;tempadvisedby(D, B), ta(E, D, F).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,true;tempadvisedby(D, B), publication(C, D).;false;true
3;true,false;publication(H, A).;true;true
3;true,false,false;tempadvisedby(J, B).;false;false
3;true,true,false;ta(E, A, F), tempadvisedby(G, B).;false;false
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,false,true;publication(N, A), publication(P, M).;false;false
4;false;professor(B).;false;false
4;true,true;publication(G, A), ta(H, A, I).;false;true
4;true,false;tempadvisedby(M, B), publication(N, B).;true;true
4;true,false,false;tempadvisedby(Q, B).;false;false
4;true,true,false;ta(J, A, K), ta(J, L, F).;false;false
4;true;tempadvisedby(D, B), ta(E, D, F).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false;tempadvisedby(I, B), publication(J, I).;false;true
5;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
5;true,true,true;ta(G, D, H).;false;false
5;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;publication(J, A).;true;true
6;true,false,true;hasposition(K, C), publication(J, K).;false;false
6;false;student(B).;false;false
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;ta(H, G, I).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;true;publication(D, A), publication(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
7;true,false;publication(G, B), publication(G, A).;true;true
7;true,false,false;publication(J, A), tempadvisedby(K, B).;false;false
7;true;projectmember(C, B).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
8;false;professor(B).;true;false
8;true,true;ta(E, A, G).;false;false
8;true,false;ta(H, A, I).;true;true
8;true,false,false;publication(M, B), publication(M, A).;false;false
8;false,true;publication(N, B).;false;false
8;true;tempadvisedby(D, B), ta(E, D, F).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;publication(I, B), tempadvisedby(J, B).;true;true
9;true,false,true;ta(K, A, L).;false;false
9;true,true;ta(F, A, G), ta(F, H, E).;true;false
9;true,true,true;samecourse(D, F).;false;false
9;true,false,false;publication(M, B).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordauthor(A, C) )
%   then return 0.7966104735610489;  // std dev = 0,240, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else if ( haswordauthor(A, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6701860162815748;  // std dev = 0,240, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else if ( haswordauthor(A, D) )
%   | then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( sametitle(D, E) )
%   | then return 0.4674804652769428;  // std dev = 3,452, 142,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.40494264752730585;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then if ( haswordauthor(F, E) )
%   | | then return -0.1680074394666848;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( haswordauthor(A, D) )
%   | then return 0.26857907500576306;  // std dev = 3,124, 142,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.24682132087781794;  // std dev = 0,240, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else if ( haswordauthor(D, E) )
%   | then return -0.1825383648934639;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( haswordauthor(A, D), haswordauthor(B, D) )
%   | then return 0.19680046009613134;  // std dev = 0,240, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   | else if ( haswordauthor(A, E) )
%   | | then if ( author(C, F), haswordauthor(F, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1568596511738349;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then return 0.1357219779742501;  // std dev = 0,244, 142,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=122 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( haswordauthor(B, D), haswordauthor(A, D) )
%   | then return 0.13832588090707162;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   | else return -0.15408432780259812;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( sametitle(C, D) )
%   then return 0.09580893177688864;  // std dev = 2,865, 142,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=122 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.62963
   AUC PR    = 0.945205
   CLL	      = -0.267114
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 1.944 seconds
Total inference time: 1.482 seconds
AUC ROC: 0.62963


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordauthor(A, C)', 'false': 'haswordauthor(A, D)', 'false,true': 'haswordauthor(E, D)'}, {'true': [0.24, 8, 122], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 12, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'false': 'haswordauthor(A, D)'}, {'false,false': [0.0, 0, 0], 'false,true': [5.27e-09, 12, 0], 'true': [0.24, 8, 122]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'sametitle(D, E)'}, {'true,true': [3.452, 20, 122], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'false': 'haswordauthor(A, E)', 'false,true': 'haswordauthor(F, E)', 'true': 'haswordauthor(D, C)'}, {'true,true': [2.74, 8, 122], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 12, 0], 'false,false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'haswordauthor(A, D)'}, {'true,true': [3.124, 20, 122], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'false': 'haswordauthor(D, E)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 12, 0], 'true': [0.24, 8, 122]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true,false': 'haswordauthor(A, E)', 'true,false,true': 'author(C, F), haswordauthor(F, E)', 'true': 'haswordauthor(A, D), haswordauthor(B, D)'}, {'true,false,true,false': [0.0, 12, 0], 'true,true': [0.24, 8, 122], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, B)'}, {'false': [0.0, 0, 0], 'true': [0.244, 20, 122]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'haswordauthor(B, D), haswordauthor(A, D)'}, {'true,true': [2.74, 8, 122], 'true,false': [1.05e-08, 12, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'sametitle(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.865, 20, 122]}]]
[{'': [0.05775147928994478, -1.1564823173178714e-17], 'false': [-1.1564823173178714e-17, nan], 'false,true': [-1.1564823173178714e-17, nan]}, {'': [0.05775147928993674, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan]}, {'': [0.08390163071539002, nan], 'true': [0.08390163071539002, nan]}, {'': [0.057751479289940406, 0.0], 'false': [0.0, nan], 'false,true': [0.0, nan], 'true': [0.057751479289940406, nan]}, {'': [0.0687222462629639, nan], 'true': [0.0687222462629639, nan]}, {'': [0.05775147928994087, -4.625929269271485e-18], 'false': [-4.625929269271485e-18, nan]}, {'': [0.06254761196219734, nan], 'true,false': [-4.625929269271485e-18, nan], 'true,false,true': [nan, -4.625929269271485e-18], 'true': [0.057751479289940934, -4.625929269271485e-18]}, {'': [0.059747346749290824, nan]}, {'': [0.05948612015166711, nan], 'true': [0.05775147928994094, 9.25185853854297e-18]}, {'': [0.05779080195860948, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, D), haswordauthor(B, D).;true;true
8;;sameauthor(A, B) :- haswordauthor(B, D), haswordauthor(A, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordauthor(A, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4893127157293235;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3686658221249624;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2780496975590654;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21383763039487122;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1682663346557149;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.1351817638661356;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordauthor(A, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.11050708250003509;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.13400703000801098;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09163300171566717;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.573001
   AUC PR    = 0.935755
   CLL	      = -0.25356
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 3.607 seconds
Total inference time: 1.834 seconds
AUC ROC: 0.573001


Refined model AUC ROC: 0.573001


Dataset: 13_uwcse_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 05:09:17
{'Recall': 1.0, 'Learning time': 5.551, 'F1': 0.971831, 'Precision': [0.945205, 0.5], 'AUC PR': 0.935755, 'CLL': -0.25356, 'parameter': {'Recall': 1.0, 'Learning time': 1.944, 'F1': 0.971831, 'Precision': [0.945205, 0.5], 'AUC PR': 0.945205, 'CLL': -0.267114, 'AUC ROC': 0.62963, 'Inference time': 1.482}, 'AUC ROC': 0.573001, 'Inference time': 1.834}


Starting fold 3

Target train facts examples: 9155
Target train pos examples: 151
Target train neg examples: 4

Target test facts examples: 32591
Target test pos examples: 661
Target test neg examples: 70

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;publication(I, K), ta(L, K, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false,false;publication(N, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true,false,true;tempadvisedby(H, B), ta(I, A, J).;false;false
1;true,true;ta(D, A, F).;false;false
1;true,false;publication(G, A), publication(G, B).;true;true
1;true,false,false;tempadvisedby(K, B), publication(L, A).;false;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;publication(J, B).;false;false
2;false;student(B).;false;false
2;true,true;ta(G, A, H), ta(E, I, H).;true;false
2;true,true,true;samecourse(E, G).;false;false
2;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
2;true;tempadvisedby(D, B), ta(E, D, F).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,true;tempadvisedby(D, B), publication(C, D).;false;true
3;true,false;publication(H, A).;true;true
3;true,false,false;tempadvisedby(J, B).;false;false
3;true,true,false;ta(E, A, F), tempadvisedby(G, B).;false;false
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,false,true;publication(N, A), publication(P, M).;false;false
4;false;professor(B).;false;false
4;true,true;publication(G, A), ta(H, A, I).;false;true
4;true,false;tempadvisedby(M, B), publication(N, B).;true;true
4;true,false,false;tempadvisedby(Q, B).;false;false
4;true,true,false;ta(J, A, K), ta(J, L, F).;false;false
4;true;tempadvisedby(D, B), ta(E, D, F).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false;tempadvisedby(I, B), publication(J, I).;false;true
5;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
5;true,true,true;ta(G, D, H).;false;false
5;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;publication(J, A).;true;true
6;true,false,true;hasposition(K, C), publication(J, K).;false;false
6;false;student(B).;false;false
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;ta(H, G, I).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;true;publication(D, A), publication(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
7;true,false;publication(G, B), publication(G, A).;true;true
7;true,false,false;publication(J, A), tempadvisedby(K, B).;false;false
7;true;projectmember(C, B).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
8;false;professor(B).;true;false
8;true,true;ta(E, A, G).;false;false
8;true,false;ta(H, A, I).;true;true
8;true,false,false;publication(M, B), publication(M, A).;false;false
8;false,true;publication(N, B).;false;false
8;true;tempadvisedby(D, B), ta(E, D, F).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;publication(I, B), tempadvisedby(J, B).;true;true
9;true,false,true;ta(K, A, L).;false;false
9;true,true;ta(F, A, G), ta(F, H, E).;true;false
9;true,true,true;samecourse(D, F).;false;false
9;true,false,false;publication(M, B).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0.8581489350995115;  // std dev = 4,21e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( author(D, A) )
%   | then if ( author(D, E) )
%   | | then return 0.8248156017661773;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( author(D, A) )
%   | then return 0.6928183180467439;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( sametitle(D, E) )
%   | then return 0.5409869019586663;  // std dev = 1,969, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then if ( author(C, D) )
%   | then return 0.4210147218027735;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then if ( author(E, F) )
%   | | then return 0.40236943759266797;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( author(D, A) )
%   | then return 0.3107747548893173;  // std dev = 1,968, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.2591485418400126;  // std dev = 9,13e-09, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( author(D, E) )
%   | then return 0.24119550391866693;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( author(D, A), author(D, B) )
%   | then return 0.21256261246279892;  // std dev = 6,45e-09, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( author(E, A) )
%   | | then if ( author(C, F), author(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19584430726846655;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then return 0.16671614572282503;  // std dev = 0,158, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( author(D, B), author(D, A) )
%   | then return 0.1559302915242601;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return 0.13809742405691264;  // std dev = 1,966, 120,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=116 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( sametitle(C, D) )
%   then return 0.1232292826349908;  // std dev = 1,968, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.605144
   AUC PR    = 0.943016
   CLL	      = -0.320489
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 2.473 seconds
Total inference time: 3.736 seconds
AUC ROC: 0.605144


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, A)', 'false,true': 'author(D, E)'}, {'true': [4.21e-08, 0, 35], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [1.966, 4, 116]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true': [1.966, 4, 116], 'true': [0.0, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'sametitle(D, E)'}, {'true,true': [1.969, 4, 151], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(E, A)', 'false,true': 'author(E, F)', 'true': 'author(C, D)'}, {'true,true': [0.0, 0, 35], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.966, 4, 116], 'false,false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'author(D, A)'}, {'true,true': [1.968, 4, 151], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, E)'}, {'false,false': [0.0, 0, 0], 'false,true': [1.966, 4, 116], 'true': [9.13e-09, 0, 35]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true,false': 'author(E, A)', 'true,false,true': 'author(C, F), author(E, F)', 'true': 'author(D, A), author(D, B)'}, {'true,false,true,false': [1.966, 4, 116], 'true,true': [6.45e-09, 0, 35], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, B)'}, {'false': [0.0, 0, 0], 'true': [0.158, 4, 151]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'author(D, B), author(D, A)'}, {'true,true': [0.0, 0, 35], 'true,false': [1.966, 4, 116], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'sametitle(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.968, 4, 151]}]]
[{'': [1.6240976817373718e-15, 0.0322222222222256], 'false': [0.0322222222222256, nan], 'false,true': [0.0322222222222256, nan]}, {'': [-6.0903663065151445e-16, 0.03222222222222175], 'false': [0.03222222222222175, nan]}, {'': [0.025006544773513804, nan], 'true': [0.025006544773513804, nan]}, {'': [-5.075305255429287e-17, 0.032222222222222756], 'false': [0.032222222222222756, nan], 'false,true': [0.032222222222222756, nan], 'true': [-5.075305255429287e-17, nan]}, {'': [0.024990446232921078, nan], 'true': [0.024990446232921078, nan]}, {'': [6.344131569286608e-17, 0.03222222222222269], 'false': [0.03222222222222269, nan]}, {'': [0.02499509846382216, nan], 'true,false': [0.03222222222222205, nan], 'true,false,true': [nan, 0.03222222222222205], 'true': [4.4408920985006264e-17, 0.03222222222222205]}, {'': [0.02499133597495652, nan]}, {'': [0.025001830602047265, nan], 'true': [-1.586032892321652e-17, 0.03222222222222219]}, {'': [0.02499752316051802, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- author(C, B), author(C, A).;true;true
1;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
3;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
5;;sameauthor(A, B) :- author(C, A), author(C, B).;true;true
6;;sameauthor(A, B) :- author(D, A), author(D, B).;true;true
8;;sameauthor(A, B) :- author(D, B), author(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.7405018762759829;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5897376143107378;  // std dev = 0,924, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.6208673516715338;  // std dev = 1,323, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.7194734122109542;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then return 0.6569504473685769;  // std dev = 0,234, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.7219361052636272;  // std dev = 0,065, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then return 0.4362137566938162;  // std dev = 0,901, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.4917773112772799;  // std dev = 0,267, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5807163046091268;  // std dev = 0,079, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.5795639718756439;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4979086187915413;  // std dev = 1,325, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.5573235627744946;  // std dev = 0,055, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.42473146213074536;  // std dev = 0,057, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.21288680403623017;  // std dev = 0,855, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3340474582131768;  // std dev = 0,867, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.42469923050676944;  // std dev = 0,025, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | then return 0.47228947449469083;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37992065877771586;  // std dev = 1,324, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return 0.41921036959872465;  // std dev = 0,056, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.2505283707143107;  // std dev = 0,897, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.2828703502395372;  // std dev = 0,261, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.3256206393215947;  // std dev = 0,023, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, G) )
%   | | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.3581861995076443;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.27913999528001016;  // std dev = 1,323, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.3289562786977069;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.321190599986135;  // std dev = 0,052, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.26339305247299033;  // std dev = 0,074, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | | then return 0.3470300595373727;  // std dev = 0,182, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19942417148541727;  // std dev = 1,316, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.20290121567964226;  // std dev = 0,217, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then return 0.20782787181930037;  // std dev = 0,219, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.25953274362022205;  // std dev = 0,160, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0.21558216683044476;  // std dev = 0,065, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.021979668138057074;  // std dev = 0,836, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13606991990176612;  // std dev = 0,854, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.21646671478117113;  // std dev = 0,031, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.15553739785002813;  // std dev = 1,314, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.22360732141199055;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2115993151740805;  // std dev = 0,068, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then return 0.10673011742012885;  // std dev = 0,884, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.1402791247758399;  // std dev = 0,256, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.1800451455140432;  // std dev = 0,025, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.19391160219758374;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1398449459533043;  // std dev = 1,321, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.18718984442085373;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.17746981272687792;  // std dev = 0,062, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0.1591884747621081;  // std dev = 0,071, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return -0.013093628901625687;  // std dev = 0,850, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08678336294886195;  // std dev = 0,845, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.1561135813370316;  // std dev = 0,021, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.10011614059657296;  // std dev = 1,315, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.16035836242150348;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.15389332826073304;  // std dev = 0,053, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.07496211381438998;  // std dev = 0,885, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.10017013385481444;  // std dev = 0,256, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.13664079381467567;  // std dev = 0,019, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(B, G) )
%   | | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.15133607772803803;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09745918668573937;  // std dev = 1,321, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.1463382590327058;  // std dev = 1,05e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.13297546478678587;  // std dev = 0,029, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */


Results
   AUC ROC   = 0.477415
   AUC PR    = 0.917763
   CLL	      = -0.357199
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 5.627 seconds
Total inference time: 1.9 seconds
AUC ROC: 0.477415


Refined model AUC ROC: 0.477415


Dataset: 13_uwcse_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 05:09:32
{'Recall': 1.0, 'Learning time': 8.1, 'F1': 0.949713, 'Precision': [0.904241, 0.5], 'AUC PR': 0.917763, 'CLL': -0.357199, 'parameter': {'Recall': 1.0, 'Learning time': 2.473, 'F1': 0.949713, 'Precision': [0.904241, 0.5], 'AUC PR': 0.943016, 'CLL': -0.320489, 'AUC ROC': 0.605144, 'Inference time': 3.736}, 'AUC ROC': 0.477415, 'Inference time': 1.9}


Starting fold 4

Target train facts examples: 7971
Target train pos examples: 158
Target train neg examples: 16

Target test facts examples: 33775
Target test pos examples: 654
Target test neg examples: 58

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;publication(I, K), ta(L, K, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false,false;publication(N, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true,false,true;tempadvisedby(H, B), ta(I, A, J).;false;false
1;true,true;ta(D, A, F).;false;false
1;true,false;publication(G, A), publication(G, B).;true;true
1;true,false,false;tempadvisedby(K, B), publication(L, A).;false;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;publication(J, B).;false;false
2;false;student(B).;false;false
2;true,true;ta(G, A, H), ta(E, I, H).;true;false
2;true,true,true;samecourse(E, G).;false;false
2;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
2;true;tempadvisedby(D, B), ta(E, D, F).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,true;tempadvisedby(D, B), publication(C, D).;false;true
3;true,false;publication(H, A).;true;true
3;true,false,false;tempadvisedby(J, B).;false;false
3;true,true,false;ta(E, A, F), tempadvisedby(G, B).;false;false
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,false,true;publication(N, A), publication(P, M).;false;false
4;false;professor(B).;false;false
4;true,true;publication(G, A), ta(H, A, I).;false;true
4;true,false;tempadvisedby(M, B), publication(N, B).;true;true
4;true,false,false;tempadvisedby(Q, B).;false;false
4;true,true,false;ta(J, A, K), ta(J, L, F).;false;false
4;true;tempadvisedby(D, B), ta(E, D, F).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false;tempadvisedby(I, B), publication(J, I).;false;true
5;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
5;true,true,true;ta(G, D, H).;false;false
5;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;publication(J, A).;true;true
6;true,false,true;hasposition(K, C), publication(J, K).;false;false
6;false;student(B).;false;false
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;ta(H, G, I).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;true;publication(D, A), publication(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
7;true,false;publication(G, B), publication(G, A).;true;true
7;true,false,false;publication(J, A), tempadvisedby(K, B).;false;false
7;true;projectmember(C, B).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
8;false;professor(B).;true;false
8;true,true;ta(E, A, G).;false;false
8;true,false;ta(H, A, I).;true;true
8;true,false,false;publication(M, B), publication(M, A).;false;false
8;false,true;publication(N, B).;false;false
8;true;tempadvisedby(D, B), ta(E, D, F).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;publication(I, B), tempadvisedby(J, B).;true;true
9;true,false,true;ta(K, A, L).;false;false
9;true,true;ta(F, A, G), ta(F, H, E).;true;false
9;true,true,true;samecourse(D, F).;false;false
9;true,false,false;publication(M, B).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordauthor(A, C) )
%   then return 0.8099561640151723;  // std dev = 0,214, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else if ( haswordauthor(A, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6809038096058014;  // std dev = 0,214, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else if ( haswordauthor(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( sametitle(D, E) )
%   | then return 0.49902054593484374;  // std dev = 3,278, 174,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=158 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.40447921308703544;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then if ( haswordauthor(F, E) )
%   | | then return -0.1724624207076295;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( haswordauthor(A, D) )
%   | then return 0.28644644627732285;  // std dev = 3,034, 174,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=158 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.24481797560221827;  // std dev = 0,214, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else if ( haswordauthor(D, E) )
%   | then return -0.18934203499511937;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( haswordauthor(A, D), haswordauthor(B, D) )
%   | then return 0.19677678038291893;  // std dev = 0,214, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   | else if ( haswordauthor(A, E) )
%   | | then if ( author(C, F), haswordauthor(F, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1619713030055349;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then return 0.1482770799921612;  // std dev = 0,219, 174,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=158 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( haswordauthor(B, D), haswordauthor(A, D) )
%   | then return 0.13864680983332955;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   | else return -0.16012108936197098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( sametitle(C, D) )
%   then return 0.10661696281056622;  // std dev = 2,850, 174,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=158 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.655172
   AUC PR    = 0.942363
   CLL	      = -0.261761
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 2.262 seconds
Total inference time: 1.486 seconds
AUC ROC: 0.655172


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordauthor(A, C)', 'false': 'haswordauthor(A, D)', 'false,true': 'haswordauthor(E, D)'}, {'true': [0.214, 8, 158], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'false': 'haswordauthor(A, D)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 8, 0], 'true': [0.214, 8, 158]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'sametitle(D, E)'}, {'true,true': [3.278, 16, 158], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'false': 'haswordauthor(A, E)', 'false,true': 'haswordauthor(F, E)', 'true': 'haswordauthor(D, C)'}, {'true,true': [2.759, 8, 158], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 8, 0], 'false,false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'haswordauthor(A, D)'}, {'true,true': [3.034, 16, 158], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'false': 'haswordauthor(D, E)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 8, 0], 'true': [0.214, 8, 158]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true,false': 'haswordauthor(A, E)', 'true,false,true': 'author(C, F), haswordauthor(F, E)', 'true': 'haswordauthor(A, D), haswordauthor(B, D)'}, {'true,false,true,false': [0.0, 8, 0], 'true,true': [0.214, 8, 158], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, B)'}, {'false': [0.0, 0, 0], 'true': [0.219, 16, 158]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'haswordauthor(B, D), haswordauthor(A, D)'}, {'true,true': [2.759, 8, 158], 'true,false': [0.0, 8, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'sametitle(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.85, 16, 158]}]]
[{'': [0.045870227899556054, -6.938893903907228e-18], 'false': [-6.938893903907228e-18, nan], 'false,true': [-6.938893903907228e-18, nan]}, {'': [0.045870227899547665, 0.0], 'false': [0.0, nan]}, {'': [0.061772472858521894, nan], 'true': [0.061772472858521894, nan]}, {'': [0.04587022789954955, 6.938893903907228e-18], 'false': [6.938893903907228e-18, nan], 'false,true': [6.938893903907228e-18, nan], 'true': [0.04587022789954955, nan]}, {'': [0.05290846244036185, nan], 'true': [0.05290846244036185, nan]}, {'': [0.04587022789955031, 0.0], 'false': [0.0, nan]}, {'': [0.04940644442566148, nan], 'true,false': [-3.469446951953614e-18, nan], 'true,false,true': [nan, -3.469446951953614e-18], 'true': [0.0458702278995497, -3.469446951953614e-18]}, {'': [0.04779882928887184, nan]}, {'': [0.04767657354768003, nan], 'true': [0.04587022789955013, -3.469446951953614e-18]}, {'': [0.04668616319571661, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, D), haswordauthor(B, D).;true;true
8;;sameauthor(A, B) :- haswordauthor(B, D), haswordauthor(A, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordauthor(A, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.5851860008555358;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.5553664367462843;  // std dev = 1,03e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.4612598391067553;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5553664367462836;  // std dev = 3,32e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.3488463256948424;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.41751358415831047;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.3207118471601495;  // std dev = 2,11e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.26212705508354195;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.3207118471601494;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.19945264276423416;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.25517224256948967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2551722425694895;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.20975771563253542;  // std dev = 5,37e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.15451336627983223;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.20975771563253567;  // std dev = 2,58e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.20975771563253573;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.12179491558002786;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.17709649774527716;  // std dev = 3,65e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordauthor(A, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.1527438580936709;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.09745354768081692;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.15274385809367091;  // std dev = 1,83e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15274385809367055;  // std dev = 8,16e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.13400703000801112;  // std dev = 1,05e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.07895233872555119;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.13400703000801092;  // std dev = 5,37e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.71064
   AUC PR    = 0.952533
   CLL	      = -0.262241
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 7.099 seconds
Total inference time: 3.107 seconds
AUC ROC: 0.71064


Refined model AUC ROC: 0.71064


Dataset: 13_uwcse_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 05:09:46
{'Recall': 1.0, 'Learning time': 9.361, 'F1': 0.970326, 'Precision': [0.942363, 0.5], 'AUC PR': 0.952533, 'CLL': -0.262241, 'parameter': {'Recall': 1.0, 'Learning time': 2.262, 'F1': 0.970326, 'Precision': [0.942363, 0.5], 'AUC PR': 0.942363, 'CLL': -0.261761, 'AUC ROC': 0.655172, 'Inference time': 1.486}, 'AUC ROC': 0.71064, 'Inference time': 3.107}


Starting fold 5

Target train facts examples: 8472
Target train pos examples: 172
Target train neg examples: 18

Target test facts examples: 33274
Target test pos examples: 640
Target test neg examples: 56

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;publication(I, K), ta(L, K, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false,false;publication(N, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true,false,true;tempadvisedby(H, B), ta(I, A, J).;false;false
1;true,true;ta(D, A, F).;false;false
1;true,false;publication(G, A), publication(G, B).;true;true
1;true,false,false;tempadvisedby(K, B), publication(L, A).;false;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;publication(J, B).;false;false
2;false;student(B).;false;false
2;true,true;ta(G, A, H), ta(E, I, H).;true;false
2;true,true,true;samecourse(E, G).;false;false
2;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
2;true;tempadvisedby(D, B), ta(E, D, F).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,true;tempadvisedby(D, B), publication(C, D).;false;true
3;true,false;publication(H, A).;true;true
3;true,false,false;tempadvisedby(J, B).;false;false
3;true,true,false;ta(E, A, F), tempadvisedby(G, B).;false;false
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,false,true;publication(N, A), publication(P, M).;false;false
4;false;professor(B).;false;false
4;true,true;publication(G, A), ta(H, A, I).;false;true
4;true,false;tempadvisedby(M, B), publication(N, B).;true;true
4;true,false,false;tempadvisedby(Q, B).;false;false
4;true,true,false;ta(J, A, K), ta(J, L, F).;false;false
4;true;tempadvisedby(D, B), ta(E, D, F).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false;tempadvisedby(I, B), publication(J, I).;false;true
5;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
5;true,true,true;ta(G, D, H).;false;false
5;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;publication(J, A).;true;true
6;true,false,true;hasposition(K, C), publication(J, K).;false;false
6;false;student(B).;false;false
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;ta(H, G, I).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;true;publication(D, A), publication(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
7;true,false;publication(G, B), publication(G, A).;true;true
7;true,false,false;publication(J, A), tempadvisedby(K, B).;false;false
7;true;projectmember(C, B).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
8;false;professor(B).;true;false
8;true,true;ta(E, A, G).;false;false
8;true,false;ta(H, A, I).;true;true
8;true,false,false;publication(M, B), publication(M, A).;false;false
8;false,true;publication(N, B).;false;false
8;true;tempadvisedby(D, B), ta(E, D, F).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;publication(I, B), tempadvisedby(J, B).;true;true
9;true,false,true;ta(K, A, L).;false;false
9;true,true;ta(F, A, G), ta(F, H, E).;true;false
9;true,true,true;samecourse(D, F).;false;false
9;true,false,false;publication(M, B).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordauthor(A, C) )
%   then return 0.7929315437951615;  // std dev = 0,247, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else if ( haswordauthor(A, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6672286583325434;  // std dev = 0,247, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else if ( haswordauthor(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( sametitle(D, E) )
%   | then return 0.4989999868007996;  // std dev = 3,679, 190,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=172 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.39507634590357293;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then if ( haswordauthor(F, E) )
%   | | then return -0.17245948654557822;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( haswordauthor(A, D) )
%   | then return 0.28548945722556324;  // std dev = 3,520, 190,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=172 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23637510507086634;  // std dev = 0,247, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else if ( haswordauthor(D, E) )
%   | then return -0.1891924851924549;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( haswordauthor(A, D), haswordauthor(B, D) )
%   | then return 0.18902716537251366;  // std dev = 0,247, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   | else if ( haswordauthor(A, E) )
%   | | then if ( author(C, F), haswordauthor(F, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1618593428249047;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then return 0.14552889720979234;  // std dev = 0,248, 190,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=172 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( author(C, B) )
%   then if ( haswordauthor(B, D), haswordauthor(A, D) )
%   | then return 0.13091303441437951;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   | else return -0.15965615488038143;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( sametitle(C, D) )
%   then return 0.10318015270653826;  // std dev = 3,403, 190,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=172 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.678571
   AUC PR    = 0.946746
   CLL	      = -0.261268
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 2.416 seconds
Total inference time: 1.68 seconds
AUC ROC: 0.678571


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(B, C), haswordauthor(A, C)', 'false': 'haswordauthor(A, D)', 'false,true': 'haswordauthor(E, D)'}, {'true': [0.247, 12, 172], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'false': 'haswordauthor(A, D)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 6, 0], 'true': [0.247, 12, 172]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'sametitle(D, E)'}, {'true,true': [3.679, 18, 172], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'false': 'haswordauthor(A, E)', 'false,true': 'haswordauthor(F, E)', 'true': 'haswordauthor(D, C)'}, {'true,true': [3.349, 12, 172], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 6, 0], 'false,false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'haswordauthor(A, D)'}, {'true,true': [3.52, 18, 172], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)', 'false': 'haswordauthor(D, E)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 6, 0], 'true': [0.247, 12, 172]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true,false': 'haswordauthor(A, E)', 'true,false,true': 'author(C, F), haswordauthor(F, E)', 'true': 'haswordauthor(A, D), haswordauthor(B, D)'}, {'true,false,true,false': [0.0, 6, 0], 'true,true': [0.247, 12, 172], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'author(C, B)'}, {'false': [0.0, 0, 0], 'true': [0.248, 18, 172]}], ['sameauthor(A, B)', {'': 'author(C, B)', 'true': 'haswordauthor(B, D), haswordauthor(A, D)'}, {'true,true': [3.349, 12, 172], 'true,false': [0.0, 6, 0], 'false': [0.0, 0, 0]}], ['sameauthor(A, B)', {'': 'sametitle(C, D)'}, {'false': [0.0, 0, 0], 'true': [3.403, 18, 172]}]]
[{'': [0.060964083175810056, -6.938893903907228e-18], 'false': [-6.938893903907228e-18, nan], 'false,true': [-6.938893903907228e-18, nan]}, {'': [0.06096408317580048, -2.3129646346357427e-18], 'false': [-2.3129646346357427e-18, nan]}, {'': [0.07122502219237517, nan], 'true': [0.07122502219237517, nan]}, {'': [0.06096408317580376, 4.625929269271485e-18], 'false': [4.625929269271485e-18, nan], 'false,true': [4.625929269271485e-18, nan], 'true': [0.06096408317580376, nan]}, {'': [0.06520095816055181, nan], 'true': [0.06520095816055181, nan]}, {'': [0.060964083175803443, 0.0], 'false': [0.0, nan]}, {'': [0.06280416368396396, nan], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0], 'true': [0.060964083175803374, 0.0]}, {'': [0.061717602276480765, nan]}, {'': [0.061620929883249444, nan], 'true': [0.06096408317580317, -4.625929269271485e-18]}, {'': [0.06095745614934383, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
0;;sameauthor(A, B) :- haswordauthor(B, C), haswordauthor(A, C).;true;true
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;sameauthor(A, B) :- haswordauthor(A, D), haswordauthor(B, D).;true;true
8;;sameauthor(A, B) :- haswordauthor(B, D), haswordauthor(A, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordauthor(A, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.8581489350995116;  // std dev = 2,23e-07, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.524815601766179;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.858148935099512;  // std dev = 1,03e-07, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.719473412210954;  // std dev = 2,06e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.5319045176838226;  // std dev = 0,839, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.6668304758702217;  // std dev = 1,596, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.6410211799807517;  // std dev = 1,590, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.5553664367462835;  // std dev = 4,04e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.5683250346269374;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.1387526121318937;  // std dev = 1,259, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.4749364783948081;  // std dev = 2,311, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.4226666369213143;  // std dev = 0,038, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, B), venue(F, E) )
%   | | | then return 0.5333049726713266;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2687067415481554;  // std dev = 1,860, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.3446693740279271;  // std dev = 0,903, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.25190793340832096;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, J), haswordtitle(K, J) )
%   | | | then return 0.4374965717073095;  // std dev = 0,279, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.4783342980103751;  // std dev = 0,238, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.3295646948473824;  // std dev = 0,143, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.32828079422986467;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return 0.04705928444309017;  // std dev = 1,681, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.2874368482935329;  // std dev = 1,810, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.2566768950324978;  // std dev = 0,031, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, A), venue(F, E) )
%   | | | then return 0.3915684436665541;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14616982865759656;  // std dev = 1,638, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then if ( author(I, B), venue(I, H) )
%   | | | then return 0.39008693331852085;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15303031702680478;  // std dev = 1,769, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( haswordauthor(B, J), haswordtitle(K, J) )
%   | | | then return 0.2682293861710903;  // std dev = 0,258, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.3004369978952615;  // std dev = 0,214, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.22247783702176208;  // std dev = 0,203, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.26263390003444115;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07064481653260934;  // std dev = 0,894, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(A, G) )
%   | | | then return 0.21400874768459285;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.05508727298879467;  // std dev = 1,504, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.06491610003320557;  // std dev = 1,439, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.24147760011672936;  // std dev = 0,187, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.18645061532163063;  // std dev = 0,178, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.1802082054635115;  // std dev = 1,49e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return -0.029836737149584323;  // std dev = 1,644, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.142186641334268;  // std dev = 1,666, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordauthor(A, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.15175259705716854;  // std dev = 0,028, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, A), venue(F, E) )
%   | | | then return 0.26126669045528716;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06417260662245612;  // std dev = 1,569, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | then if ( author(I, B), venue(I, H) )
%   | | | then return 0.29686231465780266;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07203511111284512;  // std dev = 1,695, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( haswordauthor(B, J), haswordtitle(K, J) )
%   | | | then return 0.15851993396112865;  // std dev = 0,194, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.18446671158349762;  // std dev = 0,217, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14513541018418644;  // std dev = 0,197, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.2519356374668457;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.007253867911499253;  // std dev = 0,833, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.1362374810017975;  // std dev = 2,98e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.08206724652838643;  // std dev = 2,117, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.509738
   AUC PR    = 0.896555
   CLL	      = -0.403036
   Precision = 0.943615 at threshold = 0.5
   Recall    = 0.889063
   F1        = 0.915527


Total learning time: 6.563 seconds
Total inference time: 3.042 seconds
AUC ROC: 0.509738


Refined model AUC ROC: 0.509738


Dataset: 13_uwcse_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:10:01
{'Recall': 0.889063, 'Learning time': 8.979, 'F1': 0.915527, 'Precision': [0.943615, 0.5], 'AUC PR': 0.896555, 'CLL': -0.403036, 'parameter': {'Recall': 1.0, 'Learning time': 2.416, 'F1': 0.972644, 'Precision': [0.946746, 0.5], 'AUC PR': 0.946746, 'CLL': -0.261268, 'AUC ROC': 0.678571, 'Inference time': 1.68}, 'AUC ROC': 0.509738, 'Inference time': 3.042}


